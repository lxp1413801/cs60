

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Sep 25 20:16:04 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=1
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1,group=1
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=1
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1,group=1
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	text212,global,reloc=2,class=CODE,delta=1
   235                           	psect	text213,global,reloc=2,class=CODE,delta=1
   236                           	psect	text214,global,reloc=2,class=CODE,delta=1
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1
   238                           	psect	text216,global,reloc=2,class=CODE,delta=1
   239                           	psect	text217,global,reloc=2,class=CODE,delta=1
   240                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   241                           	psect	text219,global,reloc=2,class=CODE,delta=1
   242                           	psect	text220,global,reloc=2,class=CODE,delta=1
   243                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   244                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   250                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   251  0000                     
   252                           ; Version 1.41
   253                           ; Generated 25/01/2017 GMT
   254                           ; 
   255                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   256                           ; All rights reserved.
   257                           ; 
   258                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   259                           ; 
   260                           ; Redistribution and use in source and binary forms, with or without modification, are
   261                           ; permitted provided that the following conditions are met:
   262                           ; 
   263                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   264                           ;        conditions and the following disclaimer.
   265                           ; 
   266                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   267                           ;        of conditions and the following disclaimer in the documentation and/or other
   268                           ;        materials provided with the distribution.
   269                           ; 
   270                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   271                           ;        software without specific prior written permission.
   272                           ; 
   273                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   274                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   275                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   276                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   277                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   278                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   279                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   280                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   281                           ; 
   282                           ; 
   283                           ; Code-generator required, PIC18F86J93 Definitions
   284                           ; 
   285                           ; SFR Addresses
   286  0000                     
   287                           	psect	idataBANK0
   288  00A3F8                     __pidataBANK0:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _glNoEventTimeOut
   292  00A3F8  1E                 	db	30
   293                           
   294                           	psect	idataBANK1
   295  00A3B6                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for ui_disp_start_cs600@F7719
   299  00A3B6  2D                 	db	45
   300  00A3B7  30                 	db	48
   301  00A3B8  30                 	db	48
   302  00A3B9  2D                 	db	45
   303  00A3BA  00                 	db	0
   304  00A3BB  00                 	db	0
   305                           
   306                           ;initializer for _defalutRtc
   307  00A3BC  17                 	db	23
   308  00A3BD  07                 	db	7
   309  00A3BE  31                 	db	49
   310  00A3BF  23                 	db	35
   311  00A3C0  55                 	db	85
   312  00A3C1  55                 	db	85
   313  00A3C2  02                 	db	2
   314                           
   315                           	psect	mediumconst
   316  00ECB0                     __pmediumconst:
   317                           	opt stack 0
   318  00ECB0  00                 	db	0
   319  00ECB1                     _auchCRCLo:
   320                           	opt stack 0
   321  00ECB1  00                 	db	0
   322  00ECB2  C0                 	db	192
   323  00ECB3  C1                 	db	193
   324  00ECB4  01                 	db	1
   325  00ECB5  C3                 	db	195
   326  00ECB6  03                 	db	3
   327  00ECB7  02                 	db	2
   328  00ECB8  C2                 	db	194
   329  00ECB9  C6                 	db	198
   330  00ECBA  06                 	db	6
   331  00ECBB  07                 	db	7
   332  00ECBC  C7                 	db	199
   333  00ECBD  05                 	db	5
   334  00ECBE  C5                 	db	197
   335  00ECBF  C4                 	db	196
   336  00ECC0  04                 	db	4
   337  00ECC1  CC                 	db	204
   338  00ECC2  0C                 	db	12
   339  00ECC3  0D                 	db	13
   340  00ECC4  CD                 	db	205
   341  00ECC5  0F                 	db	15
   342  00ECC6  CF                 	db	207
   343  00ECC7  CE                 	db	206
   344  00ECC8  0E                 	db	14
   345  00ECC9  0A                 	db	10
   346  00ECCA  CA                 	db	202
   347  00ECCB  CB                 	db	203
   348  00ECCC  0B                 	db	11
   349  00ECCD  C9                 	db	201
   350  00ECCE  09                 	db	9
   351  00ECCF  08                 	db	8
   352  00ECD0  C8                 	db	200
   353  00ECD1  D8                 	db	216
   354  00ECD2  18                 	db	24
   355  00ECD3  19                 	db	25
   356  00ECD4  D9                 	db	217
   357  00ECD5  1B                 	db	27
   358  00ECD6  DB                 	db	219
   359  00ECD7  DA                 	db	218
   360  00ECD8  1A                 	db	26
   361  00ECD9  1E                 	db	30
   362  00ECDA  DE                 	db	222
   363  00ECDB  DF                 	db	223
   364  00ECDC  1F                 	db	31
   365  00ECDD  DD                 	db	221
   366  00ECDE  1D                 	db	29
   367  00ECDF  1C                 	db	28
   368  00ECE0  DC                 	db	220
   369  00ECE1  14                 	db	20
   370  00ECE2  D4                 	db	212
   371  00ECE3  D5                 	db	213
   372  00ECE4  15                 	db	21
   373  00ECE5  D7                 	db	215
   374  00ECE6  17                 	db	23
   375  00ECE7  16                 	db	22
   376  00ECE8  D6                 	db	214
   377  00ECE9  D2                 	db	210
   378  00ECEA  12                 	db	18
   379  00ECEB  13                 	db	19
   380  00ECEC  D3                 	db	211
   381  00ECED  11                 	db	17
   382  00ECEE  D1                 	db	209
   383  00ECEF  D0                 	db	208
   384  00ECF0  10                 	db	16
   385  00ECF1  F0                 	db	240
   386  00ECF2  30                 	db	48
   387  00ECF3  31                 	db	49
   388  00ECF4  F1                 	db	241
   389  00ECF5  33                 	db	51
   390  00ECF6  F3                 	db	243
   391  00ECF7  F2                 	db	242
   392  00ECF8  32                 	db	50
   393  00ECF9  36                 	db	54
   394  00ECFA  F6                 	db	246
   395  00ECFB  F7                 	db	247
   396  00ECFC  37                 	db	55
   397  00ECFD  F5                 	db	245
   398  00ECFE  35                 	db	53
   399  00ECFF  34                 	db	52
   400  00ED00  F4                 	db	244
   401  00ED01  3C                 	db	60
   402  00ED02  FC                 	db	252
   403  00ED03  FD                 	db	253
   404  00ED04  3D                 	db	61
   405  00ED05  FF                 	db	255
   406  00ED06  3F                 	db	63
   407  00ED07  3E                 	db	62
   408  00ED08  FE                 	db	254
   409  00ED09  FA                 	db	250
   410  00ED0A  3A                 	db	58
   411  00ED0B  3B                 	db	59
   412  00ED0C  FB                 	db	251
   413  00ED0D  39                 	db	57
   414  00ED0E  F9                 	db	249
   415  00ED0F  F8                 	db	248
   416  00ED10  38                 	db	56
   417  00ED11  28                 	db	40
   418  00ED12  E8                 	db	232
   419  00ED13  E9                 	db	233
   420  00ED14  29                 	db	41
   421  00ED15  EB                 	db	235
   422  00ED16  2B                 	db	43
   423  00ED17  2A                 	db	42
   424  00ED18  EA                 	db	234
   425  00ED19  EE                 	db	238
   426  00ED1A  2E                 	db	46
   427  00ED1B  2F                 	db	47
   428  00ED1C  EF                 	db	239
   429  00ED1D  2D                 	db	45
   430  00ED1E  ED                 	db	237
   431  00ED1F  EC                 	db	236
   432  00ED20  2C                 	db	44
   433  00ED21  E4                 	db	228
   434  00ED22  24                 	db	36
   435  00ED23  25                 	db	37
   436  00ED24  E5                 	db	229
   437  00ED25  27                 	db	39
   438  00ED26  E7                 	db	231
   439  00ED27  E6                 	db	230
   440  00ED28  26                 	db	38
   441  00ED29  22                 	db	34
   442  00ED2A  E2                 	db	226
   443  00ED2B  E3                 	db	227
   444  00ED2C  23                 	db	35
   445  00ED2D  E1                 	db	225
   446  00ED2E  21                 	db	33
   447  00ED2F  20                 	db	32
   448  00ED30  E0                 	db	224
   449  00ED31  A0                 	db	160
   450  00ED32  60                 	db	96
   451  00ED33  61                 	db	97
   452  00ED34  A1                 	db	161
   453  00ED35  63                 	db	99
   454  00ED36  A3                 	db	163
   455  00ED37  A2                 	db	162
   456  00ED38  62                 	db	98
   457  00ED39  66                 	db	102
   458  00ED3A  A6                 	db	166
   459  00ED3B  A7                 	db	167
   460  00ED3C  67                 	db	103
   461  00ED3D  A5                 	db	165
   462  00ED3E  65                 	db	101
   463  00ED3F  64                 	db	100
   464  00ED40  A4                 	db	164
   465  00ED41  6C                 	db	108
   466  00ED42  AC                 	db	172
   467  00ED43  AD                 	db	173
   468  00ED44  6D                 	db	109
   469  00ED45  AF                 	db	175
   470  00ED46  6F                 	db	111
   471  00ED47  6E                 	db	110
   472  00ED48  AE                 	db	174
   473  00ED49  AA                 	db	170
   474  00ED4A  6A                 	db	106
   475  00ED4B  6B                 	db	107
   476  00ED4C  AB                 	db	171
   477  00ED4D  69                 	db	105
   478  00ED4E  A9                 	db	169
   479  00ED4F  A8                 	db	168
   480  00ED50  68                 	db	104
   481  00ED51  78                 	db	120
   482  00ED52  B8                 	db	184
   483  00ED53  B9                 	db	185
   484  00ED54  79                 	db	121
   485  00ED55  BB                 	db	187
   486  00ED56  7B                 	db	123
   487  00ED57  7A                 	db	122
   488  00ED58  BA                 	db	186
   489  00ED59  BE                 	db	190
   490  00ED5A  7E                 	db	126
   491  00ED5B  7F                 	db	127
   492  00ED5C  BF                 	db	191
   493  00ED5D  7D                 	db	125
   494  00ED5E  BD                 	db	189
   495  00ED5F  BC                 	db	188
   496  00ED60  7C                 	db	124
   497  00ED61  B4                 	db	180
   498  00ED62  74                 	db	116
   499  00ED63  75                 	db	117
   500  00ED64  B5                 	db	181
   501  00ED65  77                 	db	119
   502  00ED66  B7                 	db	183
   503  00ED67  B6                 	db	182
   504  00ED68  76                 	db	118
   505  00ED69  72                 	db	114
   506  00ED6A  B2                 	db	178
   507  00ED6B  B3                 	db	179
   508  00ED6C  73                 	db	115
   509  00ED6D  B1                 	db	177
   510  00ED6E  71                 	db	113
   511  00ED6F  70                 	db	112
   512  00ED70  B0                 	db	176
   513  00ED71  50                 	db	80
   514  00ED72  90                 	db	144
   515  00ED73  91                 	db	145
   516  00ED74  51                 	db	81
   517  00ED75  93                 	db	147
   518  00ED76  53                 	db	83
   519  00ED77  52                 	db	82
   520  00ED78  92                 	db	146
   521  00ED79  96                 	db	150
   522  00ED7A  56                 	db	86
   523  00ED7B  57                 	db	87
   524  00ED7C  97                 	db	151
   525  00ED7D  55                 	db	85
   526  00ED7E  95                 	db	149
   527  00ED7F  94                 	db	148
   528  00ED80  54                 	db	84
   529  00ED81  9C                 	db	156
   530  00ED82  5C                 	db	92
   531  00ED83  5D                 	db	93
   532  00ED84  9D                 	db	157
   533  00ED85  5F                 	db	95
   534  00ED86  9F                 	db	159
   535  00ED87  9E                 	db	158
   536  00ED88  5E                 	db	94
   537  00ED89  5A                 	db	90
   538  00ED8A  9A                 	db	154
   539  00ED8B  9B                 	db	155
   540  00ED8C  5B                 	db	91
   541  00ED8D  99                 	db	153
   542  00ED8E  59                 	db	89
   543  00ED8F  58                 	db	88
   544  00ED90  98                 	db	152
   545  00ED91  88                 	db	136
   546  00ED92  48                 	db	72
   547  00ED93  49                 	db	73
   548  00ED94  89                 	db	137
   549  00ED95  4B                 	db	75
   550  00ED96  8B                 	db	139
   551  00ED97  8A                 	db	138
   552  00ED98  4A                 	db	74
   553  00ED99  4E                 	db	78
   554  00ED9A  8E                 	db	142
   555  00ED9B  8F                 	db	143
   556  00ED9C  4F                 	db	79
   557  00ED9D  8D                 	db	141
   558  00ED9E  4D                 	db	77
   559  00ED9F  4C                 	db	76
   560  00EDA0  8C                 	db	140
   561  00EDA1  44                 	db	68
   562  00EDA2  84                 	db	132
   563  00EDA3  85                 	db	133
   564  00EDA4  45                 	db	69
   565  00EDA5  87                 	db	135
   566  00EDA6  47                 	db	71
   567  00EDA7  46                 	db	70
   568  00EDA8  86                 	db	134
   569  00EDA9  82                 	db	130
   570  00EDAA  42                 	db	66
   571  00EDAB  43                 	db	67
   572  00EDAC  83                 	db	131
   573  00EDAD  41                 	db	65
   574  00EDAE  81                 	db	129
   575  00EDAF  80                 	db	128
   576  00EDB0  40                 	db	64
   577  00EDB1                     __end_of_auchCRCLo:
   578                           	opt stack 0
   579  00EDB1                     _auchCRCHi:
   580                           	opt stack 0
   581  00EDB1  00                 	db	0
   582  00EDB2  C1                 	db	193
   583  00EDB3  81                 	db	129
   584  00EDB4  40                 	db	64
   585  00EDB5  01                 	db	1
   586  00EDB6  C0                 	db	192
   587  00EDB7  80                 	db	128
   588  00EDB8  41                 	db	65
   589  00EDB9  01                 	db	1
   590  00EDBA  C0                 	db	192
   591  00EDBB  80                 	db	128
   592  00EDBC  41                 	db	65
   593  00EDBD  00                 	db	0
   594  00EDBE  C1                 	db	193
   595  00EDBF  81                 	db	129
   596  00EDC0  40                 	db	64
   597  00EDC1  01                 	db	1
   598  00EDC2  C0                 	db	192
   599  00EDC3  80                 	db	128
   600  00EDC4  41                 	db	65
   601  00EDC5  00                 	db	0
   602  00EDC6  C1                 	db	193
   603  00EDC7  81                 	db	129
   604  00EDC8  40                 	db	64
   605  00EDC9  00                 	db	0
   606  00EDCA  C1                 	db	193
   607  00EDCB  81                 	db	129
   608  00EDCC  40                 	db	64
   609  00EDCD  01                 	db	1
   610  00EDCE  C0                 	db	192
   611  00EDCF  80                 	db	128
   612  00EDD0  41                 	db	65
   613  00EDD1  01                 	db	1
   614  00EDD2  C0                 	db	192
   615  00EDD3  80                 	db	128
   616  00EDD4  41                 	db	65
   617  00EDD5  00                 	db	0
   618  00EDD6  C1                 	db	193
   619  00EDD7  81                 	db	129
   620  00EDD8  40                 	db	64
   621  00EDD9  00                 	db	0
   622  00EDDA  C1                 	db	193
   623  00EDDB  81                 	db	129
   624  00EDDC  40                 	db	64
   625  00EDDD  01                 	db	1
   626  00EDDE  C0                 	db	192
   627  00EDDF  80                 	db	128
   628  00EDE0  41                 	db	65
   629  00EDE1  00                 	db	0
   630  00EDE2  C1                 	db	193
   631  00EDE3  81                 	db	129
   632  00EDE4  40                 	db	64
   633  00EDE5  01                 	db	1
   634  00EDE6  C0                 	db	192
   635  00EDE7  80                 	db	128
   636  00EDE8  41                 	db	65
   637  00EDE9  01                 	db	1
   638  00EDEA  C0                 	db	192
   639  00EDEB  80                 	db	128
   640  00EDEC  41                 	db	65
   641  00EDED  00                 	db	0
   642  00EDEE  C1                 	db	193
   643  00EDEF  81                 	db	129
   644  00EDF0  40                 	db	64
   645  00EDF1  01                 	db	1
   646  00EDF2  C0                 	db	192
   647  00EDF3  80                 	db	128
   648  00EDF4  41                 	db	65
   649  00EDF5  00                 	db	0
   650  00EDF6  C1                 	db	193
   651  00EDF7  81                 	db	129
   652  00EDF8  40                 	db	64
   653  00EDF9  00                 	db	0
   654  00EDFA  C1                 	db	193
   655  00EDFB  81                 	db	129
   656  00EDFC  40                 	db	64
   657  00EDFD  01                 	db	1
   658  00EDFE  C0                 	db	192
   659  00EDFF  80                 	db	128
   660  00EE00  41                 	db	65
   661  00EE01  00                 	db	0
   662  00EE02  C1                 	db	193
   663  00EE03  81                 	db	129
   664  00EE04  40                 	db	64
   665  00EE05  01                 	db	1
   666  00EE06  C0                 	db	192
   667  00EE07  80                 	db	128
   668  00EE08  41                 	db	65
   669  00EE09  01                 	db	1
   670  00EE0A  C0                 	db	192
   671  00EE0B  80                 	db	128
   672  00EE0C  41                 	db	65
   673  00EE0D  00                 	db	0
   674  00EE0E  C1                 	db	193
   675  00EE0F  81                 	db	129
   676  00EE10  40                 	db	64
   677  00EE11  00                 	db	0
   678  00EE12  C1                 	db	193
   679  00EE13  81                 	db	129
   680  00EE14  40                 	db	64
   681  00EE15  01                 	db	1
   682  00EE16  C0                 	db	192
   683  00EE17  80                 	db	128
   684  00EE18  41                 	db	65
   685  00EE19  01                 	db	1
   686  00EE1A  C0                 	db	192
   687  00EE1B  80                 	db	128
   688  00EE1C  41                 	db	65
   689  00EE1D  00                 	db	0
   690  00EE1E  C1                 	db	193
   691  00EE1F  81                 	db	129
   692  00EE20  40                 	db	64
   693  00EE21  01                 	db	1
   694  00EE22  C0                 	db	192
   695  00EE23  80                 	db	128
   696  00EE24  41                 	db	65
   697  00EE25  00                 	db	0
   698  00EE26  C1                 	db	193
   699  00EE27  81                 	db	129
   700  00EE28  40                 	db	64
   701  00EE29  00                 	db	0
   702  00EE2A  C1                 	db	193
   703  00EE2B  81                 	db	129
   704  00EE2C  40                 	db	64
   705  00EE2D  01                 	db	1
   706  00EE2E  C0                 	db	192
   707  00EE2F  80                 	db	128
   708  00EE30  41                 	db	65
   709  00EE31  01                 	db	1
   710  00EE32  C0                 	db	192
   711  00EE33  80                 	db	128
   712  00EE34  41                 	db	65
   713  00EE35  00                 	db	0
   714  00EE36  C1                 	db	193
   715  00EE37  81                 	db	129
   716  00EE38  40                 	db	64
   717  00EE39  00                 	db	0
   718  00EE3A  C1                 	db	193
   719  00EE3B  81                 	db	129
   720  00EE3C  40                 	db	64
   721  00EE3D  01                 	db	1
   722  00EE3E  C0                 	db	192
   723  00EE3F  80                 	db	128
   724  00EE40  41                 	db	65
   725  00EE41  00                 	db	0
   726  00EE42  C1                 	db	193
   727  00EE43  81                 	db	129
   728  00EE44  40                 	db	64
   729  00EE45  01                 	db	1
   730  00EE46  C0                 	db	192
   731  00EE47  80                 	db	128
   732  00EE48  41                 	db	65
   733  00EE49  01                 	db	1
   734  00EE4A  C0                 	db	192
   735  00EE4B  80                 	db	128
   736  00EE4C  41                 	db	65
   737  00EE4D  00                 	db	0
   738  00EE4E  C1                 	db	193
   739  00EE4F  81                 	db	129
   740  00EE50  40                 	db	64
   741  00EE51  00                 	db	0
   742  00EE52  C1                 	db	193
   743  00EE53  81                 	db	129
   744  00EE54  40                 	db	64
   745  00EE55  01                 	db	1
   746  00EE56  C0                 	db	192
   747  00EE57  80                 	db	128
   748  00EE58  41                 	db	65
   749  00EE59  01                 	db	1
   750  00EE5A  C0                 	db	192
   751  00EE5B  80                 	db	128
   752  00EE5C  41                 	db	65
   753  00EE5D  00                 	db	0
   754  00EE5E  C1                 	db	193
   755  00EE5F  81                 	db	129
   756  00EE60  40                 	db	64
   757  00EE61  01                 	db	1
   758  00EE62  C0                 	db	192
   759  00EE63  80                 	db	128
   760  00EE64  41                 	db	65
   761  00EE65  00                 	db	0
   762  00EE66  C1                 	db	193
   763  00EE67  81                 	db	129
   764  00EE68  40                 	db	64
   765  00EE69  00                 	db	0
   766  00EE6A  C1                 	db	193
   767  00EE6B  81                 	db	129
   768  00EE6C  40                 	db	64
   769  00EE6D  01                 	db	1
   770  00EE6E  C0                 	db	192
   771  00EE6F  80                 	db	128
   772  00EE70  41                 	db	65
   773  00EE71  00                 	db	0
   774  00EE72  C1                 	db	193
   775  00EE73  81                 	db	129
   776  00EE74  40                 	db	64
   777  00EE75  01                 	db	1
   778  00EE76  C0                 	db	192
   779  00EE77  80                 	db	128
   780  00EE78  41                 	db	65
   781  00EE79  01                 	db	1
   782  00EE7A  C0                 	db	192
   783  00EE7B  80                 	db	128
   784  00EE7C  41                 	db	65
   785  00EE7D  00                 	db	0
   786  00EE7E  C1                 	db	193
   787  00EE7F  81                 	db	129
   788  00EE80  40                 	db	64
   789  00EE81  01                 	db	1
   790  00EE82  C0                 	db	192
   791  00EE83  80                 	db	128
   792  00EE84  41                 	db	65
   793  00EE85  00                 	db	0
   794  00EE86  C1                 	db	193
   795  00EE87  81                 	db	129
   796  00EE88  40                 	db	64
   797  00EE89  00                 	db	0
   798  00EE8A  C1                 	db	193
   799  00EE8B  81                 	db	129
   800  00EE8C  40                 	db	64
   801  00EE8D  01                 	db	1
   802  00EE8E  C0                 	db	192
   803  00EE8F  80                 	db	128
   804  00EE90  41                 	db	65
   805  00EE91  01                 	db	1
   806  00EE92  C0                 	db	192
   807  00EE93  80                 	db	128
   808  00EE94  41                 	db	65
   809  00EE95  00                 	db	0
   810  00EE96  C1                 	db	193
   811  00EE97  81                 	db	129
   812  00EE98  40                 	db	64
   813  00EE99  00                 	db	0
   814  00EE9A  C1                 	db	193
   815  00EE9B  81                 	db	129
   816  00EE9C  40                 	db	64
   817  00EE9D  01                 	db	1
   818  00EE9E  C0                 	db	192
   819  00EE9F  80                 	db	128
   820  00EEA0  41                 	db	65
   821  00EEA1  00                 	db	0
   822  00EEA2  C1                 	db	193
   823  00EEA3  81                 	db	129
   824  00EEA4  40                 	db	64
   825  00EEA5  01                 	db	1
   826  00EEA6  C0                 	db	192
   827  00EEA7  80                 	db	128
   828  00EEA8  41                 	db	65
   829  00EEA9  01                 	db	1
   830  00EEAA  C0                 	db	192
   831  00EEAB  80                 	db	128
   832  00EEAC  41                 	db	65
   833  00EEAD  00                 	db	0
   834  00EEAE  C1                 	db	193
   835  00EEAF  81                 	db	129
   836  00EEB0  40                 	db	64
   837  00EEB1                     __end_of_auchCRCHi:
   838                           	opt stack 0
   839  00EEB1                     _LCDDigitalIndexTable:
   840                           	opt stack 0
   841  00EEB1  30                 	db	48
   842  00EEB2  31                 	db	49
   843  00EEB3  32                 	db	50
   844  00EEB4  33                 	db	51
   845  00EEB5  34                 	db	52
   846  00EEB6  35                 	db	53
   847  00EEB7  36                 	db	54
   848  00EEB8  37                 	db	55
   849  00EEB9  38                 	db	56
   850  00EEBA  39                 	db	57
   851  00EEBB  61                 	db	97
   852  00EEBC  62                 	db	98
   853  00EEBD  63                 	db	99
   854  00EEBE  64                 	db	100
   855  00EEBF  65                 	db	101
   856  00EEC0  66                 	db	102
   857  00EEC1  67                 	db	103
   858  00EEC2  68                 	db	104
   859  00EEC3  69                 	db	105
   860  00EEC4  6A                 	db	106
   861  00EEC5  6B                 	db	107
   862  00EEC6  6C                 	db	108
   863  00EEC7  6D                 	db	109
   864  00EEC8  6E                 	db	110
   865  00EEC9  6F                 	db	111
   866  00EECA  70                 	db	112
   867  00EECB  71                 	db	113
   868  00EECC  72                 	db	114
   869  00EECD  73                 	db	115
   870  00EECE  74                 	db	116
   871  00EECF  75                 	db	117
   872  00EED0  76                 	db	118
   873  00EED1  77                 	db	119
   874  00EED2  78                 	db	120
   875  00EED3  79                 	db	121
   876  00EED4  7A                 	db	122
   877  00EED5  2E                 	db	46
   878  00EED6  2D                 	db	45
   879  00EED7  3A                 	db	58
   880  00EED8  20                 	db	32
   881  00EED9  47                 	db	71
   882  00EEDA  48                 	db	72
   883  00EEDB  00                 	db	0
   884  00EEDC                     __end_of_LCDDigitalIndexTable:
   885                           	opt stack 0
   886  00EEDC                     _LCDDigitalTable:
   887                           	opt stack 0
   888  00EEDC  3F                 	db	63
   889  00EEDD  06                 	db	6
   890  00EEDE  5B                 	db	91
   891  00EEDF  4F                 	db	79
   892  00EEE0  66                 	db	102
   893  00EEE1  6D                 	db	109
   894  00EEE2  7D                 	db	125
   895  00EEE3  07                 	db	7
   896  00EEE4  7F                 	db	127
   897  00EEE5  6F                 	db	111
   898  00EEE6  77                 	db	119
   899  00EEE7  7C                 	db	124
   900  00EEE8  39                 	db	57
   901  00EEE9  5E                 	db	94
   902  00EEEA  79                 	db	121
   903  00EEEB  71                 	db	113
   904  00EEEC  6F                 	db	111
   905  00EEED  74                 	db	116
   906  00EEEE  06                 	db	6
   907  00EEEF  0E                 	db	14
   908  00EEF0  7A                 	db	122
   909  00EEF1  38                 	db	56
   910  00EEF2  00                 	db	0
   911  00EEF3  37                 	db	55
   912  00EEF4  5C                 	db	92
   913  00EEF5  73                 	db	115
   914  00EEF6  67                 	db	103
   915  00EEF7  50                 	db	80
   916  00EEF8  6D                 	db	109
   917  00EEF9  78                 	db	120
   918  00EEFA  3E                 	db	62
   919  00EEFB  00                 	db	0
   920  00EEFC  00                 	db	0
   921  00EEFD  00                 	db	0
   922  00EEFE  6E                 	db	110
   923  00EEFF  5B                 	db	91
   924  00EF00  40                 	db	64
   925  00EF01  40                 	db	64
   926  00EF02  48                 	db	72
   927  00EF03  00                 	db	0
   928  00EF04  3D                 	db	61
   929  00EF05  76                 	db	118
   930  00EF06                     __end_of_LCDDigitalTable:
   931                           	opt stack 0
   932  00EF06                     _HexTable:
   933                           	opt stack 0
   934  00EF06  30                 	db	48
   935  00EF07  31                 	db	49
   936  00EF08  32                 	db	50
   937  00EF09  33                 	db	51
   938  00EF0A  34                 	db	52
   939  00EF0B  35                 	db	53
   940  00EF0C  36                 	db	54
   941  00EF0D  37                 	db	55
   942  00EF0E  38                 	db	56
   943  00EF0F  39                 	db	57
   944  00EF10  61                 	db	97
   945  00EF11  62                 	db	98
   946  00EF12  63                 	db	99
   947  00EF13  64                 	db	100
   948  00EF14  65                 	db	101
   949  00EF15  66                 	db	102
   950  00EF16  00                 	db	0
   951  00EF17                     __end_of_HexTable:
   952                           	opt stack 0
   953  00EF17                     _hKel:
   954                           	opt stack 0
   955  00EF17  0000               	dw	0
   956  00EF19  0000               	dw	0
   957  00EF1B  4952               	dw	18770
   958  00EF1D  399D               	dw	14749
   959  00EF1F  4952               	dw	18770
   960  00EF21  3A9D               	dw	15005
   961  00EF23  64C3               	dw	25795
   962  00EF25  3B2A               	dw	15146
   963  00EF27  0275               	dw	629
   964  00EF29  3B9A               	dw	15258
   965  00EF2B  34D7               	dw	13527
   966  00EF2D  3BEF               	dw	15343
   967  00EF2F  64C3               	dw	25795
   968  00EF31  3C2A               	dw	15402
   969  00EF33  6042               	dw	24642
   970  00EF35  3C65               	dw	15461
   971  00EF37  182B               	dw	6187
   972  00EF39  3C95               	dw	15509
   973  00EF3B  C711               	dw	50961
   974  00EF3D  3CBA               	dw	15546
   975  00EF3F  6042               	dw	24642
   976  00EF41  3CE5               	dw	15589
   977  00EF43  A027               	dw	40999
   978  00EF45  3D09               	dw	15625
   979  00EF47  9C78               	dw	40056
   980  00EF49  3D22               	dw	15650
   981  00EF4B  A512               	dw	42258
   982  00EF4D  3D3D               	dw	15677
   983  00EF4F  511A               	dw	20762
   984  00EF51  3D5A               	dw	15706
   985  00EF53  A090               	dw	41104
   986  00EF55  3D78               	dw	15736
   987  00EF57  7E28               	dw	32296
   988  00EF59  3D8C               	dw	15756
   989  00EF5B  7DBF               	dw	32191
   990  00EF5D  3D9D               	dw	15773
   991  00EF5F  1AA0               	dw	6816
   992  00EF61  3DAF               	dw	15791
   993  00EF63  BDA5               	dw	48549
   994  00EF65  3DC1               	dw	15809
   995  00EF67  FDF4               	dw	65012
   996  00EF69  3DD4               	dw	15828
   997  00EF6B  0FF9               	dw	4089
   998  00EF6D  3DE9               	dw	15849
   999  00EF6F  BF48               	dw	48968
  1000  00EF71  3DFD               	dw	15869
  1001  00EF73  A027               	dw	40999
  1002  00EF75  3E09               	dw	15881
  1003  00EF77  AF4F               	dw	44879
  1004  00EF79  3E14               	dw	15892
  1005  00EF7B  0D1B               	dw	3355
  1006  00EF7D  3E20               	dw	15904
  1007  00EF7F  9F56               	dw	40790
  1008  00EF81  3E2B               	dw	15915
  1009  00EF83  9A6B               	dw	39531
  1010  00EF85  3E37               	dw	15927
  1011  00EF87  E426               	dw	58406
  1012  00EF89  3E43               	dw	15939
  1013  00EF8B  624E               	dw	25166
  1014  00EF8D  3E50               	dw	15952
  1015  00EF8F  2F1B               	dw	12059
  1016  00EF91  3E5D               	dw	15965
  1017  00EF93  3055               	dw	12373
  1018  00EF95  3E6A               	dw	15978
  1019  00EF97  8034               	dw	32820
  1020  00EF99  3E77               	dw	15991
  1021  00EF9B  7525               	dw	29989
  1022  00EF9D  3E82               	dw	16002
  1023  00EF9F  5183               	dw	20867
  1024  00EFA1  3E89               	dw	16009
  1025  00EFA3  4817               	dw	18455
  1026  00EFA5  3E90               	dw	16016
  1027  00EFA7  4BC7               	dw	19399
  1028  00EFA9  3E97               	dw	16023
  1029  00EFAB  69AD               	dw	27053
  1030  00EFAD  3E9E               	dw	16030
  1031  00EFAF  A1CB               	dw	41419
  1032  00EFB1  3EA5               	dw	16037
  1033  00EFB3  E704               	dw	59140
  1034  00EFB5  3EAC               	dw	16044
  1035  00EFB7  3958               	dw	14680
  1036  00EFB9  3EB4               	dw	16052
  1037  00EFBB  A5E3               	dw	42467
  1038  00EFBD  3EBB               	dw	16059
  1039  00EFBF  126F               	dw	4719
  1040  00EFC1  3EC3               	dw	16067
  1041  00EFC3  9931               	dw	39217
  1042  00EFC5  3ECA               	dw	16074
  1043  00EFC7  1FF3               	dw	8179
  1044  00EFC9  3ED2               	dw	16082
  1045  00EFCB  C0EC               	dw	49388
  1046  00EFCD  3ED9               	dw	16089
  1047  00EFCF  54CA               	dw	21706
  1048  00EFD1  3EE1               	dw	16097
  1049  00EFD3  02DE               	dw	734
  1050  00EFD5  3EE9               	dw	16105
  1051  00EFD7  A3D7               	dw	41943
  1052  00EFD9  3EF0               	dw	16112
  1053  00EFDB  51EC               	dw	20972
  1054  00EFDD  3EF8               	dw	16120
  1055  00EFDF  0000               	dw	0
  1056  00EFE1  3F00               	dw	16128
  1057  00EFE3  D70A               	dw	55050
  1058  00EFE5  3F03               	dw	16131
  1059  00EFE7  AE14               	dw	44564
  1060  00EFE9  3F07               	dw	16135
  1061  00EFEB  7E91               	dw	32401
  1062  00EFED  3F0B               	dw	16139
  1063  00EFEF  559B               	dw	21915
  1064  00EFF1  3F0F               	dw	16143
  1065  00EFF3  2618               	dw	9752
  1066  00EFF5  3F13               	dw	16147
  1067  00EFF7  F007               	dw	61447
  1068  00EFF9  3F16               	dw	16150
  1069  00EFFB  B368               	dw	45928
  1070  00EFFD  3F1A               	dw	16154
  1071  00EFFF  76C9               	dw	30409
  1072  00F001  3F1E               	dw	16158
  1073  00F003  2D0E               	dw	11534
  1074  00F005  3F22               	dw	16162
  1075  00F007  E354               	dw	58196
  1076  00F009  3F25               	dw	16165
  1077  00F00B  8C7E               	dw	35966
  1078  00F00D  3F29               	dw	16169
  1079  00F00F  2F1B               	dw	12059
  1080  00F011  3F2D               	dw	16173
  1081  00F013  CB29               	dw	52009
  1082  00F015  3F30               	dw	16176
  1083  00F017  5A1D               	dw	23069
  1084  00F019  3F34               	dw	16180
  1085  00F01B  E282               	dw	57986
  1086  00F01D  3F37               	dw	16183
  1087  00F01F  573F               	dw	22335
  1088  00F021  3F3B               	dw	16187
  1089  00F023  C56D               	dw	50541
  1090  00F025  3F3E               	dw	16190
  1091  00F027  1FF3               	dw	8179
  1092  00F029  3F42               	dw	16194
  1093  00F02B  73EB               	dw	29675
  1094  00F02D  3F45               	dw	16197
  1095  00F02F  B439               	dw	46137
  1096  00F031  3F48               	dw	16200
  1097  00F033  E76D               	dw	59245
  1098  00F035  3F4B               	dw	16203
  1099  00F037  06F7               	dw	1783
  1100  00F039  3F4F               	dw	16207
  1101  00F03B  1965               	dw	6501
  1102  00F03D  3F52               	dw	16210
  1103  00F03F  182B               	dw	6187
  1104  00F041  3F55               	dw	16213
  1105  00F043  0347               	dw	839
  1106  00F045  3F58               	dw	16216
  1107  00F047  D42C               	dw	54316
  1108  00F049  3F5A               	dw	16218
  1109  00F04B  97F6               	dw	38902
  1110  00F04D  3F5D               	dw	16221
  1111  00F04F  4817               	dw	18455
  1112  00F051  3F60               	dw	16224
  1113  00F053  DE01               	dw	56833
  1114  00F055  3F62               	dw	16226
  1115  00F057  6042               	dw	24642
  1116  00F059  3F65               	dw	16229
  1117  00F05B  C84B               	dw	51275
  1118  00F05D  3F67               	dw	16231
  1119  00F05F  1CAC               	dw	7340
  1120  00F061  3F6A               	dw	16234
  1121  00F063  5048               	dw	20552
  1122  00F065  3F6C               	dw	16236
  1123  00F067  703B               	dw	28731
  1124  00F069  3F6E               	dw	16238
  1125  00F06B  6F69               	dw	28521
  1126  00F06D  3F70               	dw	16240
  1127  00F06F  5AEE               	dw	23278
  1128  00F071  3F72               	dw	16242
  1129  00F073  25AF               	dw	9647
  1130  00F075  3F74               	dw	16244
  1131  00F077  D639               	dw	54841
  1132  00F079  3F75               	dw	16245
  1133  00F07B  65FE               	dw	26110
  1134  00F07D  3F77               	dw	16247
  1135  00F07F  D4FE               	dw	54526
  1136  00F081  3F78               	dw	16248
  1137  00F083  29C7               	dw	10695
  1138  00F085  3F7A               	dw	16250
  1139  00F087  573F               	dw	22335
  1140  00F089  3F7B               	dw	16251
  1141  00F08B  6A7F               	dw	27263
  1142  00F08D  3F7C               	dw	16252
  1143  00F08F  566D               	dw	22125
  1144  00F091  3F7D               	dw	16253
  1145  00F093  2824               	dw	10276
  1146  00F095  3F7E               	dw	16254
  1147  00F097  CBFB               	dw	52219
  1148  00F099  3F7E               	dw	16254
  1149  00F09B  559B               	dw	21915
  1150  00F09D  3F7F               	dw	16255
  1151  00F09F  B15B               	dw	45403
  1152  00F0A1  3F7F               	dw	16255
  1153  00F0A3  EC57               	dw	60503
  1154  00F0A5  3F7F               	dw	16255
  1155  00F0A7  0000               	dw	0
  1156  00F0A9  3F80               	dw	16256
  1157  00F0AB                     __end_of_hKel:
  1158                           	opt stack 0
  1159  00F0AB                     _hKcy:
  1160                           	opt stack 0
  1161  00F0AB  0000               	dw	0
  1162  00F0AD  0000               	dw	0
  1163  00F0AF  D289               	dw	53897
  1164  00F0B1  3ADE               	dw	15070
  1165  00F0B3  4952               	dw	18770
  1166  00F0B5  3B9D               	dw	15261
  1167  00F0B7  8A72               	dw	35442
  1168  00F0B9  3C0E               	dw	15374
  1169  00F0BB  8BAC               	dw	35756
  1170  00F0BD  3C5B               	dw	15451
  1171  00F0BF  30BE               	dw	12478
  1172  00F0C1  3C99               	dw	15513
  1173  00F0C3  B439               	dw	46137
  1174  00F0C5  3CC8               	dw	15560
  1175  00F0C7  5048               	dw	20552
  1176  00F0C9  3CFC               	dw	15612
  1177  00F0CB  999A               	dw	39322
  1178  00F0CD  3D19               	dw	15641
  1179  00F0CF  AE7D               	dw	44669
  1180  00F0D1  3D36               	dw	15670
  1181  00F0D3  FDF4               	dw	65012
  1182  00F0D5  3D54               	dw	15700
  1183  00F0D7  F0D8               	dw	61656
  1184  00F0D9  3D74               	dw	15732
  1185  00F0DB  4396               	dw	17302
  1186  00F0DD  3D8B               	dw	15755
  1187  00F0DF  779A               	dw	30618
  1188  00F0E1  3D9C               	dw	15772
  1189  00F0E3  48E9               	dw	18665
  1190  00F0E5  3DAE               	dw	15790
  1191  00F0E7  B780               	dw	46976
  1192  00F0E9  3DC0               	dw	15808
  1193  00F0EB  8EF3               	dw	36595
  1194  00F0ED  3DD3               	dw	15827
  1195  00F0EF  CF42               	dw	53058
  1196  00F0F1  3DE6               	dw	15846
  1197  00F0F3  ACDA               	dw	44250
  1198  00F0F5  3DFA               	dw	15866
  1199  00F0F7  79A7               	dw	31143
  1200  00F0F9  3E07               	dw	15879
  1201  00F0FB  D14E               	dw	53582
  1202  00F0FD  3E11               	dw	15889
  1203  00F0FF  5D64               	dw	23908
  1204  00F101  3E1C               	dw	15900
  1205  00F103  03B0               	dw	944
  1206  00F105  3E27               	dw	15911
  1207  00F107  F8A1               	dw	63649
  1208  00F109  3E31               	dw	15921
  1209  00F10B  ED91               	dw	60817
  1210  00F10D  3E3C               	dw	15932
  1211  00F10F  3127               	dw	12583
  1212  00F111  3E48               	dw	15944
  1213  00F113  8EF3               	dw	36595
  1214  00F115  3E53               	dw	15955
  1215  00F117  06F7               	dw	1783
  1216  00F119  3E5F               	dw	15967
  1217  00F11B  B368               	dw	45928
  1218  00F11D  3E6A               	dw	15978
  1219  00F11F  7A10               	dw	31248
  1220  00F121  3E76               	dw	15990
  1221  00F123  2D77               	dw	11639
  1222  00F125  3E81               	dw	16001
  1223  00F127  2B02               	dw	11010
  1224  00F129  3E87               	dw	16007
  1225  00F12B  42C4               	dw	17092
  1226  00F12D  3E8D               	dw	16013
  1227  00F12F  5A86               	dw	23174
  1228  00F131  3E93               	dw	16019
  1229  00F133  7F63               	dw	32611
  1230  00F135  3E99               	dw	16025
  1231  00F137  B15B               	dw	45403
  1232  00F139  3E9F               	dw	16031
  1233  00F13B  F06F               	dw	61551
  1234  00F13D  3EA5               	dw	16037
  1235  00F13F  3C9F               	dw	15519
  1236  00F141  3EAC               	dw	16044
  1237  00F143  88CE               	dw	35022
  1238  00F145  3EB2               	dw	16050
  1239  00F147  E219               	dw	57881
  1240  00F149  3EB8               	dw	16056
  1241  00F14B  3B64               	dw	15204
  1242  00F14D  3EBF               	dw	16063
  1243  00F14F  A1CB               	dw	41419
  1244  00F151  3EC5               	dw	16069
  1245  00F153  154D               	dw	5453
  1246  00F155  3ECC               	dw	16076
  1247  00F157  88CE               	dw	35022
  1248  00F159  3ED2               	dw	16082
  1249  00F15B  FC50               	dw	64592
  1250  00F15D  3ED8               	dw	16088
  1251  00F15F  6FD2               	dw	28626
  1252  00F161  3EDF               	dw	16095
  1253  00F163  F06F               	dw	61551
  1254  00F165  3EE5               	dw	16101
  1255  00F167  710D               	dw	28941
  1256  00F169  3EEC               	dw	16108
  1257  00F16B  F1AA               	dw	61866
  1258  00F16D  3EF2               	dw	16114
  1259  00F16F  7F63               	dw	32611
  1260  00F171  3EF9               	dw	16121
  1261  00F173  0000               	dw	0
  1262  00F175  3F00               	dw	16128
  1263  00F177  404F               	dw	16463
  1264  00F179  3F03               	dw	16131
  1265  00F17B  872B               	dw	34603
  1266  00F17D  3F06               	dw	16134
  1267  00F17F  C77A               	dw	51066
  1268  00F181  3F09               	dw	16137
  1269  00F183  07C8               	dw	1992
  1270  00F185  3F0D               	dw	16141
  1271  00F187  4817               	dw	18455
  1272  00F189  3F10               	dw	16144
  1273  00F18B  81D8               	dw	33240
  1274  00F18D  3F13               	dw	16147
  1275  00F18F  BB99               	dw	48025
  1276  00F191  3F16               	dw	16150
  1277  00F193  F55A               	dw	62810
  1278  00F195  3F19               	dw	16153
  1279  00F197  2F1B               	dw	12059
  1280  00F199  3F1D               	dw	16157
  1281  00F19B  624E               	dw	25166
  1282  00F19D  3F20               	dw	16160
  1283  00F19F  8EF3               	dw	36595
  1284  00F1A1  3F23               	dw	16163
  1285  00F1A3  BB99               	dw	48025
  1286  00F1A5  3F26               	dw	16166
  1287  00F1A7  E1B1               	dw	57777
  1288  00F1A9  3F29               	dw	16169
  1289  00F1AB  07C8               	dw	1992
  1290  00F1AD  3F2D               	dw	16173
  1291  00F1AF  2752               	dw	10066
  1292  00F1B1  3F30               	dw	16176
  1293  00F1B3  404F               	dw	16463
  1294  00F1B5  3F33               	dw	16179
  1295  00F1B7  52BD               	dw	21181
  1296  00F1B9  3F36               	dw	16182
  1297  00F1BB  5E9E               	dw	24222
  1298  00F1BD  3F39               	dw	16185
  1299  00F1BF  6A7F               	dw	27263
  1300  00F1C1  3F3C               	dw	16188
  1301  00F1C3  6944               	dw	26948
  1302  00F1C5  3F3F               	dw	16191
  1303  00F1C7  617C               	dw	24956
  1304  00F1C9  3F42               	dw	16194
  1305  00F1CB  5326               	dw	21286
  1306  00F1CD  3F45               	dw	16197
  1307  00F1CF  3E42               	dw	15938
  1308  00F1D1  3F48               	dw	16200
  1309  00F1D3  1C43               	dw	7235
  1310  00F1D5  3F4B               	dw	16203
  1311  00F1D7  F3B6               	dw	62390
  1312  00F1D9  3F4D               	dw	16205
  1313  00F1DB  C49C               	dw	50332
  1314  00F1DD  3F50               	dw	16208
  1315  00F1DF  81D8               	dw	33240
  1316  00F1E1  3F53               	dw	16211
  1317  00F1E3  3F14               	dw	16148
  1318  00F1E5  3F56               	dw	16214
  1319  00F1E7  E8A7               	dw	59559
  1320  00F1E9  3F58               	dw	16216
  1321  00F1EB  8BAC               	dw	35756
  1322  00F1ED  3F5B               	dw	16219
  1323  00F1EF  2196               	dw	8598
  1324  00F1F1  3F5E               	dw	16222
  1325  00F1F3  AA65               	dw	43621
  1326  00F1F5  3F60               	dw	16224
  1327  00F1F7  2618               	dw	9752
  1328  00F1F9  3F63               	dw	16227
  1329  00F1FB  8E22               	dw	36386
  1330  00F1FD  3F65               	dw	16229
  1331  00F1FF  E910               	dw	59664
  1332  00F201  3F67               	dw	16231
  1333  00F203  36E3               	dw	14051
  1334  00F205  3F6A               	dw	16234
  1335  00F207  710D               	dw	28941
  1336  00F209  3F6C               	dw	16236
  1337  00F20B  978D               	dw	38797
  1338  00F20D  3F6E               	dw	16238
  1339  00F20F  B0F2               	dw	45298
  1340  00F211  3F70               	dw	16240
  1341  00F213  B021               	dw	45089
  1342  00F215  3F72               	dw	16242
  1343  00F217  9518               	dw	38168
  1344  00F219  3F74               	dw	16244
  1345  00F21B  6666               	dw	26214
  1346  00F21D  3F76               	dw	16246
  1347  00F21F  1D7E               	dw	7550
  1348  00F221  3F78               	dw	16248
  1349  00F223  BA5E               	dw	47710
  1350  00F225  3F79               	dw	16249
  1351  00F227  367A               	dw	13946
  1352  00F229  3F7B               	dw	16251
  1353  00F22B  91D1               	dw	37329
  1354  00F22D  3F7C               	dw	16252
  1355  00F22F  C5D6               	dw	50646
  1356  00F231  3F7D               	dw	16253
  1357  00F233  C56D               	dw	50541
  1358  00F235  3F7E               	dw	16254
  1359  00F237  9097               	dw	37015
  1360  00F239  3F7F               	dw	16255
  1361  00F23B  0000               	dw	0
  1362  00F23D  3F80               	dw	16256
  1363  00F23F                     __end_of_hKcy:
  1364                           	opt stack 0
  1365  00F23F                     _defultSystemData:
  1366                           	opt stack 0
  1367  00F23F  04D2               	dw	1234
  1368  00F241  0000               	dw	0
  1369  00F243  00                 	db	0
  1370  00F244  5F                 	db	95
  1371  00F245  03E8               	dw	1000
  1372  00F247  3A98               	dw	15000
  1373  00F249  0000               	dw	0
  1374  00F24B  0BB8               	dw	3000
  1375  00F24D  0000               	dw	0
  1376  00F24F  0000               	dw	0
  1377  00F251  0000               	dw	0
  1378  00F253  0000               	dw	0
  1379  00F255  0000               	dw	0
  1380  00F257  FF38               	dw	65336
  1381  00F259  FFFF               	dw	65535
  1382  00F25B  0000               	dw	0
  1383  00F25D  0000               	dw	0
  1384  00F25F  0000               	dw	0
  1385  00F261  0000               	dw	0
  1386  00F263  2710               	dw	10000
  1387  00F265  0000               	dw	0
  1388  00F267  2710               	dw	10000
  1389  00F269  0000               	dw	0
  1390  00F26B  0000               	dw	0
  1391  00F26D  0000               	dw	0
  1392  00F26F  0000               	dw	0
  1393  00F271  0000               	dw	0
  1394  00F273  2710               	dw	10000
  1395  00F275  0000               	dw	0
  1396  00F277  2710               	dw	10000
  1397  00F279  0000               	dw	0
  1398  00F27B  0000               	dw	0
  1399  00F27D  0000               	dw	0
  1400  00F27F  00                 	db	0
  1401  00F280  00                 	db	0
  1402  00F281  00                 	db	0
  1403  00F282  00                 	db	0
  1404  00F283  00                 	db	0
  1405  00F284  00                 	db	0
  1406  00F285  00                 	db	0
  1407  00F286  00                 	db	0
  1408  00F287  00                 	db	0
  1409  00F288  00                 	db	0
  1410  00F289  00                 	db	0
  1411  00F28A  00                 	db	0
  1412  00F28B  00                 	db	0
  1413  00F28C  00                 	db	0
  1414  00F28D  00                 	db	0
  1415  00F28E  00                 	db	0
  1416  00F28F  00                 	db	0
  1417  00F290  00                 	db	0
  1418  00F291  00                 	db	0
  1419  00F292  00                 	db	0
  1420  00F293  00                 	db	0
  1421  00F294  00                 	db	0
  1422  00F295  00                 	db	0
  1423  00F296  00                 	db	0
  1424  00F297  00                 	db	0
  1425  00F298  00                 	db	0
  1426  00F299  00                 	db	0
  1427  00F29A  00                 	db	0
  1428  00F29B  00                 	db	0
  1429  00F29C  00                 	db	0
  1430  00F29D  00                 	db	0
  1431  00F29E  00                 	db	0
  1432  00F29F  00                 	db	0
  1433  00F2A0  00                 	db	0
  1434  00F2A1  00                 	db	0
  1435  00F2A2  00                 	db	0
  1436  00F2A3  00                 	db	0
  1437  00F2A4  00                 	db	0
  1438  00F2A5  00                 	db	0
  1439  00F2A6  00                 	db	0
  1440  00F2A7  00                 	db	0
  1441  00F2A8  00                 	db	0
  1442  00F2A9  00                 	db	0
  1443  00F2AA  00                 	db	0
  1444  00F2AB  0000               	dw	0
  1445  00F2AD  0000               	dw	0
  1446  00F2AF  00                 	db	0
  1447  00F2B0  00                 	db	0
  1448  00F2B1  00                 	db	0
  1449  00F2B2  00                 	db	0
  1450  00F2B3  00                 	db	0
  1451  00F2B4  00                 	db	0
  1452  00F2B5  00                 	db	0
  1453  00F2B6  00                 	db	0
  1454  00F2B7  00                 	db	0
  1455  00F2B8  00                 	db	0
  1456  00F2B9  00                 	db	0
  1457  00F2BA  00                 	db	0
  1458  00F2BB  00                 	db	0
  1459  00F2BC  00                 	db	0
  1460  00F2BD  00                 	db	0
  1461  00F2BE  00                 	db	0
  1462  00F2BF  00                 	db	0
  1463  00F2C0  00                 	db	0
  1464  00F2C1  00                 	db	0
  1465  00F2C2  00                 	db	0
  1466  00F2C3  0190               	dw	400
  1467  00F2C5  012C               	dw	300
  1468  00F2C7  00C8               	dw	200
  1469  00F2C9  0064               	dw	100
  1470  00F2CB  0000               	dw	0
  1471  00F2CD  0000               	dw	0
  1472  00F2CF  0000               	dw	0
  1473  00F2D1  00                 	db	0
  1474  00F2D2  00                 	db	0
  1475  00F2D3  2710               	dw	10000
  1476  00F2D5  0000               	dw	0
  1477  00F2D7  2710               	dw	10000
  1478  00F2D9  00                 	db	0
  1479  00F2DA  00                 	db	0
  1480  00F2DB  0000               	dw	0
  1481  00F2DD  0000               	dw	0
  1482  00F2DF  0000               	dw	0
  1483  00F2E1  00                 	db	0
  1484  00F2E2  00                 	db	0
  1485  00F2E3  2710               	dw	10000
  1486  00F2E5  0000               	dw	0
  1487  00F2E7  2710               	dw	10000
  1488  00F2E9  00                 	db	0
  1489  00F2EA  00                 	db	0
  1490  00F2EB  0000               	dw	0
  1491  00F2ED  0000               	dw	0
  1492  00F2EF  0000               	dw	0
  1493  00F2F1  00                 	db	0
  1494  00F2F2  00                 	db	0
  1495  00F2F3  2710               	dw	10000
  1496  00F2F5  0000               	dw	0
  1497  00F2F7  2710               	dw	10000
  1498  00F2F9  00                 	db	0
  1499  00F2FA  00                 	db	0
  1500  00F2FB  0000               	dw	0
  1501  00F2FD  0000               	dw	0
  1502  00F2FF  0000               	dw	0
  1503  00F301  00                 	db	0
  1504  00F302  00                 	db	0
  1505  00F303  2710               	dw	10000
  1506  00F305  0000               	dw	0
  1507  00F307  2710               	dw	10000
  1508  00F309  00                 	db	0
  1509  00F30A  00                 	db	0
  1510  00F30B  03E8               	dw	1000
  1511  00F30D  0000               	dw	0
  1512  00F30F  07D0               	dw	2000
  1513  00F311  0000               	dw	0
  1514  00F313  03E8               	dw	1000
  1515  00F315  0000               	dw	0
  1516  00F317  07D0               	dw	2000
  1517  00F319  0000               	dw	0
  1518  00F31B  03E8               	dw	1000
  1519  00F31D  0000               	dw	0
  1520  00F31F  07D0               	dw	2000
  1521  00F321  0000               	dw	0
  1522  00F323  03E8               	dw	1000
  1523  00F325  0000               	dw	0
  1524  00F327  07D0               	dw	2000
  1525  00F329  0000               	dw	0
  1526  00F32B  03B6               	dw	950
  1527  00F32D  0000               	dw	0
  1528  00F32F                     __end_of_defultSystemData:
  1529                           	opt stack 0
  1530  00F32F                     _flashTestbuf:
  1531                           	opt stack 0
  1532  00F32F  30                 	db	48
  1533  00F330  31                 	db	49
  1534  00F331  32                 	db	50
  1535  00F332  33                 	db	51
  1536  00F333  34                 	db	52
  1537  00F334  35                 	db	53
  1538  00F335  36                 	db	54
  1539  00F336  37                 	db	55
  1540  00F337  38                 	db	56
  1541  00F338  39                 	db	57
  1542  00F339  30                 	db	48
  1543  00F33A  31                 	db	49
  1544  00F33B  32                 	db	50
  1545  00F33C  33                 	db	51
  1546  00F33D  34                 	db	52
  1547  00F33E  35                 	db	53
  1548  00F33F  36                 	db	54
  1549  00F340  37                 	db	55
  1550  00F341  38                 	db	56
  1551  00F342  39                 	db	57
  1552  00F343  30                 	db	48
  1553  00F344  31                 	db	49
  1554  00F345  32                 	db	50
  1555  00F346  33                 	db	51
  1556  00F347  34                 	db	52
  1557  00F348  35                 	db	53
  1558  00F349  36                 	db	54
  1559  00F34A  37                 	db	55
  1560  00F34B  38                 	db	56
  1561  00F34C  39                 	db	57
  1562  00F34D  30                 	db	48
  1563  00F34E  31                 	db	49
  1564  00F34F  32                 	db	50
  1565  00F350  33                 	db	51
  1566  00F351  34                 	db	52
  1567  00F352  35                 	db	53
  1568  00F353  36                 	db	54
  1569  00F354  37                 	db	55
  1570  00F355  38                 	db	56
  1571  00F356  39                 	db	57
  1572  00F357  30                 	db	48
  1573  00F358  31                 	db	49
  1574  00F359  32                 	db	50
  1575  00F35A  33                 	db	51
  1576  00F35B  34                 	db	52
  1577  00F35C  35                 	db	53
  1578  00F35D  36                 	db	54
  1579  00F35E  37                 	db	55
  1580  00F35F  38                 	db	56
  1581  00F360  39                 	db	57
  1582  00F361  30                 	db	48
  1583  00F362  31                 	db	49
  1584  00F363  32                 	db	50
  1585  00F364  33                 	db	51
  1586  00F365  34                 	db	52
  1587  00F366  35                 	db	53
  1588  00F367  36                 	db	54
  1589  00F368  37                 	db	55
  1590  00F369  38                 	db	56
  1591  00F36A  39                 	db	57
  1592  00F36B  30                 	db	48
  1593  00F36C  31                 	db	49
  1594  00F36D  32                 	db	50
  1595  00F36E  33                 	db	51
  1596  00F36F  00                 	db	0
  1597  00F370                     __end_of_flashTestbuf:
  1598                           	opt stack 0
  1599  0000                     _RTCVALH	set	3933
  1600  0000                     _RTCVALL	set	3932
  1601  0000                     _stRTCCFGbits	set	3935
  1602  0000                     _ALRMCFGbits	set	3931
  1603  0000                     _ALRMRPT	set	3930
  1604  0000                     _PADCFG1bits	set	3924
  1605  0000                     _RTCCFGbits	set	3935
  1606  0000                     _PR2	set	4043
  1607  0000                     _T2CON	set	4042
  1608  0000                     _RCONbits	set	4048
  1609  0000                     _T1CONbits	set	4045
  1610  0000                     _IPR3bits	set	4005
  1611  0000                     _PIR3bits	set	4004
  1612  0000                     _PIE3bits	set	4003
  1613  0000                     _INTCON2bits	set	4081
  1614  0000                     _OSCCONbits	set	4051
  1615  0000                     _FSR0H	set	4074
  1616  0000                     _FSR0L	set	4073
  1617  0000                     _TABLAT	set	4085
  1618  0000                     _TBLPTRU	set	4088
  1619  0000                     _TBLPTRH	set	4087
  1620  0000                     _TBLPTRL	set	4086
  1621  0000                     _EECON1bits	set	4006
  1622  0000                     _INTCONbits	set	4082
  1623  0000                     _INTCON	set	4082
  1624  0000                     _LCDCON	set	4008
  1625  0000                     _LATG	set	3983
  1626  0000                     _TRISG	set	3992
  1627  0000                     _LCDSE5	set	4026
  1628  0000                     _LCDSE4	set	4025
  1629  0000                     _LCDSE3	set	4024
  1630  0000                     _LCDSE2	set	4023
  1631  0000                     _LCDSE1	set	4022
  1632  0000                     _LCDSE0	set	4009
  1633  0000                     _LCDPSbits	set	4010
  1634  0000                     _LCDREGbits	set	4050
  1635  0000                     _LCDREG	set	4050
  1636  0000                     _LCDDATA23	set	3965
  1637  0000                     _LCDDATA22	set	3964
  1638  0000                     _LCDDATA21	set	3963
  1639  0000                     _LCDDATA20	set	3962
  1640  0000                     _LCDDATA19	set	3961
  1641  0000                     _LCDDATA18	set	3960
  1642  0000                     _LCDDATA17	set	3959
  1643  0000                     _LCDDATA16	set	3958
  1644  0000                     _LCDDATA15	set	3957
  1645  0000                     _LCDDATA14	set	3956
  1646  0000                     _LCDDATA13	set	3955
  1647  0000                     _LCDDATA12	set	3954
  1648  0000                     _LCDDATA11	set	3953
  1649  0000                     _LCDDATA10	set	3952
  1650  0000                     _LCDDATA9	set	3951
  1651  0000                     _LCDDATA8	set	3950
  1652  0000                     _LCDDATA7	set	3949
  1653  0000                     _LCDDATA6	set	3948
  1654  0000                     _LCDDATA5	set	3947
  1655  0000                     _LCDDATA4	set	4031
  1656  0000                     _LCDDATA3	set	4030
  1657  0000                     _LCDDATA2	set	4029
  1658  0000                     _LCDDATA1	set	4028
  1659  0000                     _LCDDATA0	set	4027
  1660  0000                     _PORTB	set	3969
  1661  0000                     _ADRESL	set	4035
  1662  0000                     _ADRESH	set	4036
  1663  0000                     _IPR1bits	set	3999
  1664  0000                     _PIE1bits	set	3997
  1665  0000                     _PIR1bits	set	3998
  1666  0000                     _ADCON0bits	set	4034
  1667  0000                     _ADCON2bits	set	4032
  1668  0000                     _ADCON1	set	4033
  1669  0000                     _PORTC	set	3970
  1670  0000                     _LATC	set	3979
  1671  0000                     _TRISC	set	3988
  1672  0000                     _LATB	set	3978
  1673  0000                     _TRISB	set	3987
  1674  0000                     _LATH	set	3984
  1675  0000                     _TRISH	set	3993
  1676  00F370                     STR_2:
  1677  00F370  20                 	db	32
  1678  00F371  20                 	db	32
  1679  00F372  20                 	db	32
  1680  00F373  20                 	db	32
  1681  00F374  20                 	db	32
  1682  00F375  20                 	db	32
  1683  00F376  20                 	db	32
  1684  00F377  20                 	db	32
  1685  00F378  00                 	db	0
  1686  00F379                     STR_32:
  1687  00F379  20                 	db	32
  1688  00F37A  73                 	db	115	;'s'
  1689  00F37B  74                 	db	116	;'t'
  1690  00F37C  61                 	db	97	;'a'
  1691  00F37D  20                 	db	32
  1692  00F37E  6E                 	db	110	;'n'
  1693  00F37F  6F                 	db	111	;'o'
  1694  00F380  72                 	db	114	;'r'
  1695  00F381  00                 	db	0
  1696  00F382                     STR_33:
  1697  00F382  20                 	db	32
  1698  00F383  73                 	db	115	;'s'
  1699  00F384  74                 	db	116	;'t'
  1700  00F385  61                 	db	97	;'a'
  1701  00F386  20                 	db	32
  1702  00F387  74                 	db	116	;'t'
  1703  00F388  73                 	db	115	;'s'
  1704  00F389  74                 	db	116	;'t'
  1705  00F38A  00                 	db	0
  1706  00F38B                     STR_23:
  1707  00F38B  65                 	db	101	;'e'
  1708  00F38C  70                 	db	112	;'p'
  1709  00F38D  30                 	db	48	;'0'
  1710  00F38E  30                 	db	48	;'0'
  1711  00F38F  00                 	db	0
  1712  00F390                     STR_25:
  1713  00F390  65                 	db	101	;'e'
  1714  00F391  70                 	db	112	;'p'
  1715  00F392  31                 	db	49	;'1'
  1716  00F393  30                 	db	48	;'0'
  1717  00F394  00                 	db	0
  1718  00F395                     STR_22:
  1719  00F395  20                 	db	32
  1720  00F396  61                 	db	97	;'a'
  1721  00F397  6C                 	db	108	;'l'
  1722  00F398  30                 	db	48	;'0'
  1723  00F399  00                 	db	0
  1724  00F39A                     STR_16:
  1725  00F39A  61                 	db	97	;'a'
  1726  00F39B  6C                 	db	108	;'l'
  1727  00F39C  74                 	db	116	;'t'
  1728  00F39D  30                 	db	48	;'0'
  1729  00F39E  00                 	db	0
  1730  00F39F                     STR_24:
  1731  00F39F  65                 	db	101	;'e'
  1732  00F3A0  70                 	db	112	;'p'
  1733  00F3A1  30                 	db	48	;'0'
  1734  00F3A2  31                 	db	49	;'1'
  1735  00F3A3  00                 	db	0
  1736  00F3A4                     STR_26:
  1737  00F3A4  65                 	db	101	;'e'
  1738  00F3A5  70                 	db	112	;'p'
  1739  00F3A6  31                 	db	49	;'1'
  1740  00F3A7  31                 	db	49	;'1'
  1741  00F3A8  00                 	db	0
  1742  00F3A9                     STR_1:
  1743  00F3A9  63                 	db	99	;'c'
  1744  00F3AA  73                 	db	115	;'s'
  1745  00F3AB  36                 	db	54	;'6'
  1746  00F3AC  36                 	db	54	;'6'
  1747  00F3AD  00                 	db	0
  1748  00F3AE                     STR_28:
  1749  00F3AE  6C                 	db	108	;'l'
  1750  00F3AF  70                 	db	112	;'p'
  1751  00F3B0  30                 	db	48	;'0'
  1752  00F3B1  48                 	db	72	;'H'
  1753  00F3B2  00                 	db	0
  1754  00F3B3                     STR_30:
  1755  00F3B3  6C                 	db	108	;'l'
  1756  00F3B4  70                 	db	112	;'p'
  1757  00F3B5  31                 	db	49	;'1'
  1758  00F3B6  48                 	db	72	;'H'
  1759  00F3B7  00                 	db	0
  1760  00F3B8                     STR_12:
  1761  00F3B8  20                 	db	32
  1762  00F3B9  20                 	db	32
  1763  00F3BA  68                 	db	104	;'h'
  1764  00F3BB  62                 	db	98	;'b'
  1765  00F3BC  00                 	db	0
  1766  00F3BD                     STR_11:
  1767  00F3BD  20                 	db	32
  1768  00F3BE  20                 	db	32
  1769  00F3BF  20                 	db	32
  1770  00F3C0  64                 	db	100	;'d'
  1771  00F3C1  00                 	db	0
  1772  00F3C2                     STR_19:
  1773  00F3C2  20                 	db	32
  1774  00F3C3  68                 	db	104	;'h'
  1775  00F3C4  2D                 	db	45
  1776  00F3C5  64                 	db	100	;'d'
  1777  00F3C6  00                 	db	0
  1778  00F3C7                     STR_21:
  1779  00F3C7  20                 	db	32
  1780  00F3C8  70                 	db	112	;'p'
  1781  00F3C9  2D                 	db	45
  1782  00F3CA  64                 	db	100	;'d'
  1783  00F3CB  00                 	db	0
  1784  00F3CC                     STR_5:
  1785  00F3CC  20                 	db	32
  1786  00F3CD  70                 	db	112	;'p'
  1787  00F3CE  73                 	db	115	;'s'
  1788  00F3CF  64                 	db	100	;'d'
  1789  00F3D0  00                 	db	0
  1790  00F3D1                     STR_10:
  1791  00F3D1  20                 	db	32
  1792  00F3D2  20                 	db	32
  1793  00F3D3  20                 	db	32
  1794  00F3D4  68                 	db	104	;'h'
  1795  00F3D5  00                 	db	0
  1796  00F3D6                     STR_9:
  1797  00F3D6  20                 	db	32
  1798  00F3D7  20                 	db	32
  1799  00F3D8  20                 	db	32
  1800  00F3D9  6C                 	db	108	;'l'
  1801  00F3DA  00                 	db	0
  1802  00F3DB                     STR_27:
  1803  00F3DB  6C                 	db	108	;'l'
  1804  00F3DC  70                 	db	112	;'p'
  1805  00F3DD  30                 	db	48	;'0'
  1806  00F3DE  6C                 	db	108	;'l'
  1807  00F3DF  00                 	db	0
  1808  00F3E0                     STR_29:
  1809  00F3E0  6C                 	db	108	;'l'
  1810  00F3E1  70                 	db	112	;'p'
  1811  00F3E2  31                 	db	49	;'1'
  1812  00F3E3  6C                 	db	108	;'l'
  1813  00F3E4  00                 	db	0
  1814  00F3E5                     STR_31:
  1815  00F3E5  20                 	db	32
  1816  00F3E6  73                 	db	115	;'s'
  1817  00F3E7  63                 	db	99	;'c'
  1818  00F3E8  6C                 	db	108	;'l'
  1819  00F3E9  00                 	db	0
  1820  00F3EA                     STR_6:
  1821  00F3EA  20                 	db	32
  1822  00F3EB  20                 	db	32
  1823  00F3EC  20                 	db	32
  1824  00F3ED  70                 	db	112	;'p'
  1825  00F3EE  00                 	db	0
  1826  00F3EF                     STR_7:
  1827  00F3EF  20                 	db	32
  1828  00F3F0  20                 	db	32
  1829  00F3F1  66                 	db	102	;'f'
  1830  00F3F2  73                 	db	115	;'s'
  1831  00F3F3  00                 	db	0
  1832  00F3F4                     STR_18:
  1833  00F3F4  20                 	db	32
  1834  00F3F5  68                 	db	104	;'h'
  1835  00F3F6  2D                 	db	45
  1836  00F3F7  75                 	db	117	;'u'
  1837  00F3F8  00                 	db	0
  1838  00F3F9                     STR_20:
  1839  00F3F9  20                 	db	32
  1840  00F3FA  70                 	db	112	;'p'
  1841  00F3FB  2D                 	db	45
  1842  00F3FC  75                 	db	117	;'u'
  1843  00F3FD  00                 	db	0
  1844  0000                     
  1845                           ; #config settings
  1846  00F3FE  00                 	db	0	; dummy byte at the end
  1847  0000                     
  1848                           	psect	cinit
  1849  007888                     __pcinit:
  1850                           	opt stack 0
  1851  007888                     start_initialization:
  1852                           	opt stack 0
  1853  007888                     __initialization:
  1854                           	opt stack 0
  1855                           
  1856                           ; Initialize objects allocated to BANK1 (13 bytes)
  1857                           ; load TBLPTR registers with __pidataBANK1
  1858  007888  0EB6               	movlw	low __pidataBANK1
  1859  00788A  6EF6               	movwf	tblptrl,c
  1860  00788C  0EA3               	movlw	high __pidataBANK1
  1861  00788E  6EF7               	movwf	tblptrh,c
  1862  007890  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1863  007892  6EF8               	movwf	tblptru,c
  1864  007894  EE01  F0EE         	lfsr	0,__pdataBANK1
  1865  007898  EE10 F00D          	lfsr	1,13
  1866  00789C                     copy_data0:
  1867  00789C  0009               	tblrd		*+
  1868  00789E  CFF5 FFEE          	movff	tablat,postinc0
  1869  0078A2  50E5               	movf	postdec1,w,c
  1870  0078A4  50E1               	movf	fsr1l,w,c
  1871  0078A6  E1FA               	bnz	copy_data0
  1872                           
  1873                           ; Initialize objects allocated to BANK0 (1 bytes)
  1874                           ; load TBLPTR registers with __pidataBANK0
  1875  0078A8  0EF8               	movlw	low __pidataBANK0
  1876  0078AA  6EF6               	movwf	tblptrl,c
  1877  0078AC  0EA3               	movlw	high __pidataBANK0
  1878  0078AE  6EF7               	movwf	tblptrh,c
  1879  0078B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1880  0078B2  6EF8               	movwf	tblptru,c
  1881  0078B4  0009               	tblrd		*+	;fetch initializer
  1882  0078B6  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1883                           
  1884                           ; Clear objects allocated to BANK5 (256 bytes)
  1885  0078BA  EE05  F000         	lfsr	0,__pbssBANK5
  1886  0078BE  EE11 F000          	lfsr	1,256
  1887  0078C2                     clear_0:
  1888  0078C2  6AEE               	clrf	postinc0,c
  1889  0078C4  50E5               	movf	postdec1,w,c
  1890  0078C6  50E1               	movf	fsr1l,w,c
  1891  0078C8  E1FC               	bnz	clear_0
  1892  0078CA  50E2               	movf	fsr1h,w,c
  1893  0078CC  E1FA               	bnz	clear_0
  1894                           
  1895                           ; Clear objects allocated to BANK4 (162 bytes)
  1896  0078CE  EE04  F000         	lfsr	0,__pbssBANK4
  1897  0078D2  0EA2               	movlw	162
  1898  0078D4                     clear_1:
  1899  0078D4  6AEE               	clrf	postinc0,c
  1900  0078D6  06E8               	decf	wreg,f,c
  1901  0078D8  E1FD               	bnz	clear_1
  1902                           
  1903                           ; Clear objects allocated to BANK3 (202 bytes)
  1904  0078DA  EE03  F000         	lfsr	0,__pbssBANK3
  1905  0078DE  0ECA               	movlw	202
  1906  0078E0                     clear_2:
  1907  0078E0  6AEE               	clrf	postinc0,c
  1908  0078E2  06E8               	decf	wreg,f,c
  1909  0078E4  E1FD               	bnz	clear_2
  1910                           
  1911                           ; Clear objects allocated to BANK2 (256 bytes)
  1912  0078E6  EE02  F000         	lfsr	0,__pbssBANK2
  1913  0078EA  EE11 F000          	lfsr	1,256
  1914  0078EE                     clear_3:
  1915  0078EE  6AEE               	clrf	postinc0,c
  1916  0078F0  50E5               	movf	postdec1,w,c
  1917  0078F2  50E1               	movf	fsr1l,w,c
  1918  0078F4  E1FC               	bnz	clear_3
  1919  0078F6  50E2               	movf	fsr1h,w,c
  1920  0078F8  E1FA               	bnz	clear_3
  1921                           
  1922                           ; Clear objects allocated to BANK1 (238 bytes)
  1923  0078FA  EE01  F000         	lfsr	0,__pbssBANK1
  1924  0078FE  0EEE               	movlw	238
  1925  007900                     clear_4:
  1926  007900  6AEE               	clrf	postinc0,c
  1927  007902  06E8               	decf	wreg,f,c
  1928  007904  E1FD               	bnz	clear_4
  1929                           
  1930                           ; Clear objects allocated to BANK0 (24 bytes)
  1931  007906  EE00  F0E7         	lfsr	0,__pbssBANK0
  1932  00790A  0E18               	movlw	24
  1933  00790C                     clear_5:
  1934  00790C  6AEE               	clrf	postinc0,c
  1935  00790E  06E8               	decf	wreg,f,c
  1936  007910  E1FD               	bnz	clear_5
  1937                           
  1938                           ; Clear objects allocated to COMRAM (31 bytes)
  1939  007912  EE00  F021         	lfsr	0,__pbssCOMRAM
  1940  007916  0E1F               	movlw	31
  1941  007918                     clear_6:
  1942  007918  6AEE               	clrf	postinc0,c
  1943  00791A  06E8               	decf	wreg,f,c
  1944  00791C  E1FD               	bnz	clear_6
  1945  00791E                     end_of_initialization:
  1946                           	opt stack 0
  1947  00791E                     __end_of__initialization:
  1948                           	opt stack 0
  1949  00791E  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1950  007920  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1951  007922  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1952  007924  6EF8               	movwf	tblptru,c
  1953  007926  0100               	movlb	0
  1954  007928  EFED  F047         	goto	_main	;jump to C main() function
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           postinc0	equ	0xFEE
  1960                           wreg	equ	0xFE8
  1961                           postdec1	equ	0xFE5
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           
  1965                           	psect	bssCOMRAM
  1966  000021                     __pbssCOMRAM:
  1967                           	opt stack 0
  1968  000021                     _rtVolume:
  1969                           	opt stack 0
  1970  000021                     	ds	4
  1971  000025                     _pAds1115PrObj:
  1972                           	opt stack 0
  1973  000025                     	ds	2
  1974  000027                     _p_prEepromObj:
  1975                           	opt stack 0
  1976  000027                     	ds	2
  1977  000029                     _pdiff_prEepromObj:
  1978                           	opt stack 0
  1979  000029                     	ds	2
  1980  00002B                     _dlyTickerEn:
  1981                           	opt stack 0
  1982  00002B                     	ds	1
  1983  00002C                     _st_Bj:
  1984                           	opt stack 0
  1985  00002C                     	ds	1
  1986  00002D                     _pcf8574Value:
  1987                           	opt stack 0
  1988  00002D                     	ds	1
  1989  00002E                     _glbEvent:
  1990                           	opt stack 0
  1991  00002E                     	ds	1
  1992  00002F                     _sensorPowerOn:
  1993                           	opt stack 0
  1994  00002F                     	ds	1
  1995  000030                     _calibCol:
  1996                           	opt stack 0
  1997  000030                     	ds	1
  1998  000031                     _calibRow:
  1999                           	opt stack 0
  2000  000031                     	ds	1
  2001  000032                     _subMenu:
  2002                           	opt stack 0
  2003  000032                     	ds	1
  2004  000033                     _menu:
  2005                           	opt stack 0
  2006  000033                     	ds	1
  2007  000034                     _lcdTwinkle:
  2008                           	opt stack 0
  2009  000034                     	ds	1
  2010  000035                     _m_floatAdj:
  2011                           	opt stack 0
  2012  000035                     	ds	4
  2013  000039                     _adjValue:
  2014                           	opt stack 0
  2015  000039                     	ds	4
  2016  00003D                     _passWord:
  2017                           	opt stack 0
  2018  00003D                     	ds	2
  2019  00003F                     _adjLocation:
  2020                           	opt stack 0
  2021  00003F                     	ds	1
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           
  2032                           	psect	bssBANK0
  2033  0000E7                     __pbssBANK0:
  2034                           	opt stack 0
  2035  0000E7                     _rtPressure:
  2036                           	opt stack 0
  2037  0000E7                     	ds	4
  2038  0000EB                     _rtHight:
  2039                           	opt stack 0
  2040  0000EB                     	ds	4
  2041  0000EF                     _pAds1115DiffPrObj:
  2042                           	opt stack 0
  2043  0000EF                     	ds	2
  2044  0000F1                     _sensorSimpleTsLong:
  2045                           	opt stack 0
  2046  0000F1                     	ds	1
  2047  0000F2                     _sensorSimpleEn:
  2048                           	opt stack 0
  2049  0000F2                     	ds	1
  2050  0000F3                     _inSocAdcSampleFinish:
  2051                           	opt stack 0
  2052  0000F3                     	ds	1
  2053  0000F4                     _inSocAdcSampleCh:
  2054                           	opt stack 0
  2055  0000F4                     	ds	1
  2056  0000F5                     _inSocAdcSampleCount:
  2057                           	opt stack 0
  2058  0000F5                     	ds	1
  2059  0000F6                     _PrChipSampleFinish:
  2060                           	opt stack 0
  2061  0000F6                     	ds	1
  2062  0000F7                     _prChipSampleCount:
  2063                           	opt stack 0
  2064  0000F7                     	ds	1
  2065  0000F8                     _prChipSampleCh:
  2066                           	opt stack 0
  2067  0000F8                     	ds	1
  2068  0000F9                     _diffPrChipSampleFinish:
  2069                           	opt stack 0
  2070  0000F9                     	ds	1
  2071  0000FA                     _diffPrChipSampCh:
  2072                           	opt stack 0
  2073  0000FA                     	ds	1
  2074  0000FB                     _diffPrChipSampleCount:
  2075                           	opt stack 0
  2076  0000FB                     	ds	1
  2077  0000FC                     _keyValue:
  2078                           	opt stack 0
  2079  0000FC                     	ds	1
  2080  0000FD                     _dwm:
  2081                           	opt stack 0
  2082  0000FD                     	ds	1
  2083  0000FE                     _rtLevel:
  2084                           	opt stack 0
  2085  0000FE                     	ds	1
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1h	equ	0xFE2
  2094                           fsr1l	equ	0xFE1
  2095                           
  2096                           	psect	dataBANK0
  2097  0000FF                     __pdataBANK0:
  2098                           	opt stack 0
  2099  0000FF                     _glNoEventTimeOut:
  2100                           	opt stack 0
  2101  0000FF                     	ds	1
  2102                           tblptru	equ	0xFF8
  2103                           tblptrh	equ	0xFF7
  2104                           tblptrl	equ	0xFF6
  2105                           tablat	equ	0xFF5
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           postdec1	equ	0xFE5
  2109                           fsr1h	equ	0xFE2
  2110                           fsr1l	equ	0xFE1
  2111                           
  2112                           	psect	bssBANK1
  2113  000100                     __pbssBANK1:
  2114                           	opt stack 0
  2115  000100                     _pLCD:
  2116                           	opt stack 0
  2117  000100                     	ds	24
  2118  000118                     _pcf8574:
  2119                           	opt stack 0
  2120  000118                     	ds	11
  2121  000123                     cal_press@F7856:
  2122                           	opt stack 0
  2123  000123                     	ds	8
  2124  00012B                     _rtExPressure:
  2125                           	opt stack 0
  2126  00012B                     	ds	8
  2127  000133                     _glRtc:
  2128                           	opt stack 0
  2129  000133                     	ds	7
  2130  00013A                     _glTicker:
  2131                           	opt stack 0
  2132  00013A                     	ds	4
  2133  00013E                     ___mflot32_2_int32@F7710:
  2134                           	opt stack 0
  2135  00013E                     	ds	4
  2136  000142                     ___int32_2_mflot32@F7705:
  2137                           	opt stack 0
  2138  000142                     	ds	4
  2139  000146                     _rtTemperatureEx:
  2140                           	opt stack 0
  2141  000146                     	ds	4
  2142  00014A                     _rtTemperatureIn:
  2143                           	opt stack 0
  2144  00014A                     	ds	4
  2145  00014E                     _rtWeight:
  2146                           	opt stack 0
  2147  00014E                     	ds	4
  2148  000152                     _rtDiffPressure:
  2149                           	opt stack 0
  2150  000152                     	ds	4
  2151  000156                     _adc_iPrEx:
  2152                           	opt stack 0
  2153  000156                     	ds	4
  2154  00015A                     _dlyTicker:
  2155                           	opt stack 0
  2156  00015A                     	ds	2
  2157  00015C                     _inSocAdcSampleTimer:
  2158                           	opt stack 0
  2159  00015C                     	ds	2
  2160  00015E                     _PrChipSampleTimer:
  2161                           	opt stack 0
  2162  00015E                     	ds	2
  2163  000160                     _diffPrChipSampleTimer:
  2164                           	opt stack 0
  2165  000160                     	ds	2
  2166  000162                     _pAdjValue:
  2167                           	opt stack 0
  2168  000162                     	ds	2
  2169  000164                     _userTicker_ms:
  2170                           	opt stack 0
  2171  000164                     	ds	2
  2172  000166                     _adc_iRef:
  2173                           	opt stack 0
  2174  000166                     	ds	2
  2175  000168                     _adc_ibat:
  2176                           	opt stack 0
  2177  000168                     	ds	2
  2178  00016A                     _adc_exPt100:
  2179                           	opt stack 0
  2180  00016A                     	ds	2
  2181  00016C                     _adc_pressure:
  2182                           	opt stack 0
  2183  00016C                     	ds	2
  2184  00016E                     _adc_inPt100:
  2185                           	opt stack 0
  2186  00016E                     	ds	2
  2187  000170                     _ads1115Chip0:
  2188                           	opt stack 0
  2189  000170                     	ds	16
  2190  000180                     _at24c02Ch0:
  2191                           	opt stack 0
  2192  000180                     	ds	11
  2193  00018B                     _at24c02Ch1:
  2194                           	opt stack 0
  2195  00018B                     	ds	11
  2196  000196                     _sampBufRefInSoc:
  2197                           	opt stack 0
  2198  000196                     	ds	8
  2199  00019E                     _sampBufBatInSoc:
  2200                           	opt stack 0
  2201  00019E                     	ds	8
  2202  0001A6                     _sampBufExPr1InSoc:
  2203                           	opt stack 0
  2204  0001A6                     	ds	8
  2205  0001AE                     _sampBufExPr0InSoc:
  2206                           	opt stack 0
  2207  0001AE                     	ds	8
  2208  0001B6                     _sampBufPr:
  2209                           	opt stack 0
  2210  0001B6                     	ds	8
  2211  0001BE                     _sampBufPt100ExB:
  2212                           	opt stack 0
  2213  0001BE                     	ds	8
  2214  0001C6                     _sampBufPt100ExA:
  2215                           	opt stack 0
  2216  0001C6                     	ds	8
  2217  0001CE                     _sampBufDiffPr_S1:
  2218                           	opt stack 0
  2219  0001CE                     	ds	8
  2220  0001D6                     _sampBufDiffPr_D23:
  2221                           	opt stack 0
  2222  0001D6                     	ds	8
  2223  0001DE                     _sampBufDiffPr_D01:
  2224                           	opt stack 0
  2225  0001DE                     	ds	8
  2226  0001E6                     _x_prDiffData:
  2227                           	opt stack 0
  2228  0001E6                     	ds	8
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           postinc0	equ	0xFEE
  2234                           wreg	equ	0xFE8
  2235                           postdec1	equ	0xFE5
  2236                           fsr1h	equ	0xFE2
  2237                           fsr1l	equ	0xFE1
  2238                           
  2239                           	psect	dataBANK1
  2240  0001EE                     __pdataBANK1:
  2241                           	opt stack 0
  2242  0001EE                     ui_disp_start_cs600@F7719:
  2243                           	opt stack 0
  2244  0001EE                     	ds	6
  2245  0001F4                     _defalutRtc:
  2246                           	opt stack 0
  2247  0001F4                     	ds	7
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           postdec1	equ	0xFE5
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           
  2258                           	psect	bssBANK2
  2259  000200                     __pbssBANK2:
  2260                           	opt stack 0
  2261  000200                     _stSysData:
  2262                           	opt stack 0
  2263  000200                     	ds	240
  2264  0002F0                     _ads1115Chip1:
  2265                           	opt stack 0
  2266  0002F0                     	ds	16
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           postinc0	equ	0xFEE
  2272                           wreg	equ	0xFE8
  2273                           postdec1	equ	0xFE5
  2274                           fsr1h	equ	0xFE2
  2275                           fsr1l	equ	0xFE1
  2276                           
  2277                           	psect	bssBANK3
  2278  000300                     __pbssBANK3:
  2279                           	opt stack 0
  2280  000300                     _rtDiffPrBuf:
  2281                           	opt stack 0
  2282  000300                     	ds	16
  2283  000310                     _diff_prCalibTabDef:
  2284                           	opt stack 0
  2285  000310                     	ds	162
  2286  0003B2                     _tmpx:
  2287                           	opt stack 0
  2288  0003B2                     	ds	24
  2289                           tblptru	equ	0xFF8
  2290                           tblptrh	equ	0xFF7
  2291                           tblptrl	equ	0xFF6
  2292                           tablat	equ	0xFF5
  2293                           postinc0	equ	0xFEE
  2294                           wreg	equ	0xFE8
  2295                           postdec1	equ	0xFE5
  2296                           fsr1h	equ	0xFE2
  2297                           fsr1l	equ	0xFE1
  2298                           
  2299                           	psect	bssBANK4
  2300  000400                     __pbssBANK4:
  2301                           	opt stack 0
  2302  000400                     _prCalibTabDef:
  2303                           	opt stack 0
  2304  000400                     	ds	162
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           postinc0	equ	0xFEE
  2310                           wreg	equ	0xFE8
  2311                           postdec1	equ	0xFE5
  2312                           fsr1h	equ	0xFE2
  2313                           fsr1l	equ	0xFE1
  2314                           
  2315                           	psect	bssBANK5
  2316  000500                     __pbssBANK5:
  2317                           	opt stack 0
  2318  000500                     _globleBuffer:
  2319                           	opt stack 0
  2320  000500                     	ds	256
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           
  2331                           	psect	cstackBANK3
  2332  0003CA                     __pcstackBANK3:
  2333                           	opt stack 0
  2334  0003CA                     ___set_short_pose_size@gohome:
  2335                           	opt stack 0
  2336  0003CA                     ___set_short_warn_value@gohome:
  2337                           	opt stack 0
  2338  0003CA                     ___set_short_epr_param@gohome:
  2339                           	opt stack 0
  2340  0003CA                     ___set_short_epr_ilp_scale@gohome:
  2341                           	opt stack 0
  2342  0003CA                     cal_diff_hight_to_vol_h@v2:
  2343                           	opt stack 0
  2344  0003CA                     ___set_long_density@t32:
  2345                           	opt stack 0
  2346  0003CA                     ___set_long_base_zero@t32:
  2347                           	opt stack 0
  2348  0003CA                     _cal_diff_hight_to_vol_v$5886:
  2349                           	opt stack 0
  2350                           
  2351                           ; 4 bytes @ 0x0
  2352  0003CA                     	ds	1
  2353  0003CB                     ___set_short_pose_size@p:
  2354                           	opt stack 0
  2355  0003CB                     ___set_short_warn_value@t32:
  2356                           	opt stack 0
  2357  0003CB                     ___set_short_epr_param@t32:
  2358                           	opt stack 0
  2359  0003CB                     ___set_short_epr_ilp_scale@t32:
  2360                           	opt stack 0
  2361                           
  2362                           ; 4 bytes @ 0x1
  2363  0003CB                     	ds	2
  2364  0003CD                     ___set_short_pose_size@t32:
  2365                           	opt stack 0
  2366                           
  2367                           ; 4 bytes @ 0x3
  2368  0003CD                     	ds	1
  2369  0003CE                     ___set_long_density@stp:
  2370                           	opt stack 0
  2371  0003CE                     ___set_long_base_zero@stp:
  2372                           	opt stack 0
  2373  0003CE                     cal_diff_hight_to_vol_h@f2:
  2374                           	opt stack 0
  2375  0003CE                     cal_diff_hight_to_vol_v@v1:
  2376                           	opt stack 0
  2377                           
  2378                           ; 4 bytes @ 0x4
  2379  0003CE                     	ds	1
  2380  0003CF                     ___set_short_warn_value@stp:
  2381                           	opt stack 0
  2382  0003CF                     ___set_short_epr_param@stp:
  2383                           	opt stack 0
  2384  0003CF                     ___set_short_epr_ilp_scale@stp:
  2385                           	opt stack 0
  2386                           
  2387                           ; 2 bytes @ 0x5
  2388  0003CF                     	ds	2
  2389  0003D1                     ___set_short_warn_value@t8:
  2390                           	opt stack 0
  2391  0003D1                     ___set_short_pose_size@stp:
  2392                           	opt stack 0
  2393                           
  2394                           ; 2 bytes @ 0x7
  2395  0003D1                     	ds	1
  2396  0003D2                     cal_diff_hight_to_vol_h@v1:
  2397                           	opt stack 0
  2398  0003D2                     cal_diff_hight_to_vol_v@v2:
  2399                           	opt stack 0
  2400                           
  2401                           ; 4 bytes @ 0x8
  2402  0003D2                     	ds	1
  2403  0003D3                     key_process@tm:
  2404                           	opt stack 0
  2405                           
  2406                           ; 2 bytes @ 0x9
  2407  0003D3                     	ds	2
  2408  0003D5                     key_process@key:
  2409                           	opt stack 0
  2410                           
  2411                           ; 1 bytes @ 0xB
  2412  0003D5                     	ds	1
  2413  0003D6                     cal_diff_hight_to_vol_h@f1:
  2414                           	opt stack 0
  2415  0003D6                     cal_diff_hight_to_vol_v@D:
  2416                           	opt stack 0
  2417                           
  2418                           ; 4 bytes @ 0xC
  2419  0003D6                     	ds	4
  2420  0003DA                     cal_diff_hight_to_vol_v@f1:
  2421                           	opt stack 0
  2422                           
  2423                           ; 4 bytes @ 0x10
  2424  0003DA                     	ds	4
  2425  0003DE                     cal_diff_press@tabrow:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0x14
  2429  0003DE                     	ds	2
  2430  0003E0                     cal_diff_press@xin:
  2431                           	opt stack 0
  2432                           
  2433                           ; 2 bytes @ 0x16
  2434  0003E0                     	ds	2
  2435  0003E2                     cal_diff_press@i:
  2436                           	opt stack 0
  2437                           
  2438                           ; 1 bytes @ 0x18
  2439  0003E2                     	ds	1
  2440                           tblptru	equ	0xFF8
  2441                           tblptrh	equ	0xFF7
  2442                           tblptrl	equ	0xFF6
  2443                           tablat	equ	0xFF5
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec1	equ	0xFE5
  2447                           fsr1h	equ	0xFE2
  2448                           fsr1l	equ	0xFE1
  2449                           
  2450                           	psect	cstackBANK1
  2451  0001FB                     __pcstackBANK1:
  2452                           	opt stack 0
  2453  0001FB                     ?_cal_diff_hight_to_vol_h:
  2454                           	opt stack 0
  2455  0001FB                     ?_cal_diff_hight_to_vol_v:
  2456                           	opt stack 0
  2457  0001FB                     ___set_short_poly_coefic@gohome:
  2458                           	opt stack 0
  2459  0001FB                     ___set_short_warn_type@gohome:
  2460                           	opt stack 0
  2461  0001FB                     cal_diff_hight_to_vol_h@h:
  2462                           	opt stack 0
  2463  0001FB                     cal_diff_hight_to_vol_v@h:
  2464                           	opt stack 0
  2465                           
  2466                           ; 4 bytes @ 0x0
  2467  0001FB                     	ds	1
  2468  0001FC                     ___set_short_poly_coefic@p:
  2469                           	opt stack 0
  2470  0001FC                     ___set_short_warn_type@p:
  2471                           	opt stack 0
  2472                           
  2473                           ; 2 bytes @ 0x1
  2474  0001FC                     	ds	2
  2475  0001FE                     ___set_short_poly_coefic@stp:
  2476                           	opt stack 0
  2477  0001FE                     ___set_short_warn_type@stp:
  2478                           	opt stack 0
  2479                           
  2480                           ; 2 bytes @ 0x3
  2481  0001FE                     	ds	1
  2482  0001FF                     event_process_rtc@ret:
  2483                           	opt stack 0
  2484  0001FF                     event_process_ticker@ret:
  2485                           	opt stack 0
  2486                           
  2487                           ; 1 bytes @ 0x4
  2488  0001FF                     	ds	1
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           postinc0	equ	0xFEE
  2494                           wreg	equ	0xFE8
  2495                           postdec1	equ	0xFE5
  2496                           fsr1h	equ	0xFE2
  2497                           fsr1l	equ	0xFE1
  2498                           
  2499                           	psect	cstackBANK0
  2500  000060                     __pcstackBANK0:
  2501                           	opt stack 0
  2502  000060                     ??___enter_menu_poly_coeffic:
  2503  000060                     ??___enter_menu_warn_type:
  2504  000060                     ??___enter_menu_bar_scale:
  2505  000060                     ?___exp_10:
  2506                           	opt stack 0
  2507  000060                     ?_crc_sum:
  2508                           	opt stack 0
  2509  000060                     ?___awdiv:
  2510                           	opt stack 0
  2511  000060                     ?___awmod:
  2512                           	opt stack 0
  2513  000060                     ?___lmul:
  2514                           	opt stack 0
  2515  000060                     ?___lldiv:
  2516                           	opt stack 0
  2517  000060                     ?___xxtofl:
  2518                           	opt stack 0
  2519  000060                     lcd_disp_get_code@chr:
  2520                           	opt stack 0
  2521  000060                     lcd_disp_all@x:
  2522                           	opt stack 0
  2523  000060                     ___lbdiv@dividend:
  2524                           	opt stack 0
  2525  000060                     key_shift_loc@loc:
  2526                           	opt stack 0
  2527  000060                     ___enter_menu_set_pose_size@fps:
  2528                           	opt stack 0
  2529  000060                     ___up_warn_type_adj@p:
  2530                           	opt stack 0
  2531  000060                     ___up_adj_work_mode@p:
  2532                           	opt stack 0
  2533  000060                     ___set_long_work_mode@p:
  2534                           	opt stack 0
  2535  000060                     ___x_arrange_str@str:
  2536                           	opt stack 0
  2537  000060                     crc_sum@puchMsg:
  2538                           	opt stack 0
  2539  000060                     m_mem_set@buf:
  2540                           	opt stack 0
  2541  000060                     m_mem_cpy_len@d:
  2542                           	opt stack 0
  2543  000060                     m_mem_cpy@d:
  2544                           	opt stack 0
  2545  000060                     m_int8_2_hex@str:
  2546                           	opt stack 0
  2547  000060                     ads1115_init@pAds1115:
  2548                           	opt stack 0
  2549  000060                     ads1115_set_mux@pAds1115:
  2550                           	opt stack 0
  2551  000060                     ads1115_set_pga@pAds1115:
  2552                           	opt stack 0
  2553  000060                     ads1115_set_data_rate@pAds1115:
  2554                           	opt stack 0
  2555  000060                     at24c02_init@pAt24c02:
  2556                           	opt stack 0
  2557  000060                     delay_us@dly:
  2558                           	opt stack 0
  2559  000060                     rtc_set@rtc:
  2560                           	opt stack 0
  2561  000060                     ticker_dly@ms:
  2562                           	opt stack 0
  2563  000060                     ___awdiv@dividend:
  2564                           	opt stack 0
  2565  000060                     ___awmod@dividend:
  2566                           	opt stack 0
  2567  000060                     m_flash_erase@addr:
  2568                           	opt stack 0
  2569  000060                     m_flash_read@addr:
  2570                           	opt stack 0
  2571  000060                     ___lmul@multiplier:
  2572                           	opt stack 0
  2573  000060                     ___lldiv@dividend:
  2574                           	opt stack 0
  2575  000060                     ___xxtofl@val:
  2576                           	opt stack 0
  2577                           
  2578                           ; 4 bytes @ 0x0
  2579  000060                     	ds	1
  2580  000061                     lcd_disp_get_code@ret:
  2581                           	opt stack 0
  2582  000061                     lcd_disp_all@i:
  2583                           	opt stack 0
  2584  000061                     ___lbdiv@counter:
  2585                           	opt stack 0
  2586                           
  2587                           ; 1 bytes @ 0x1
  2588  000061                     	ds	1
  2589  000062                     ?___wmul:
  2590                           	opt stack 0
  2591  000062                     ?___lwdiv:
  2592                           	opt stack 0
  2593  000062                     key_shift_loc@min:
  2594                           	opt stack 0
  2595  000062                     ___enter_menu_poly_coeffic@__subMenu:
  2596                           	opt stack 0
  2597  000062                     ___enter_menu_warn_type@__subMenu:
  2598                           	opt stack 0
  2599  000062                     ___x_arrange_str@len:
  2600                           	opt stack 0
  2601  000062                     m_mem_set@x:
  2602                           	opt stack 0
  2603  000062                     m_int8_2_hex@b:
  2604                           	opt stack 0
  2605  000062                     ads1115_init@slvaddr:
  2606                           	opt stack 0
  2607  000062                     ads1115_set_mux@mux:
  2608                           	opt stack 0
  2609  000062                     ads1115_set_pga@pga:
  2610                           	opt stack 0
  2611  000062                     ads1115_set_data_rate@dr:
  2612                           	opt stack 0
  2613  000062                     at24c02_init@slv:
  2614                           	opt stack 0
  2615  000062                     lcd_disp_get_code@i:
  2616                           	opt stack 0
  2617  000062                     ___lbdiv@quotient:
  2618                           	opt stack 0
  2619  000062                     ___enter_menu_bar_scale@fps:
  2620                           	opt stack 0
  2621  000062                     crc_sum@usDataLen:
  2622                           	opt stack 0
  2623  000062                     m_mem_cpy_len@s:
  2624                           	opt stack 0
  2625  000062                     m_mem_cpy@s:
  2626                           	opt stack 0
  2627  000062                     delay_us@i:
  2628                           	opt stack 0
  2629  000062                     rtc_set@stp:
  2630                           	opt stack 0
  2631  000062                     ___wmul@multiplier:
  2632                           	opt stack 0
  2633  000062                     ___awdiv@divisor:
  2634                           	opt stack 0
  2635  000062                     ___awmod@divisor:
  2636                           	opt stack 0
  2637  000062                     ___lwdiv@dividend:
  2638                           	opt stack 0
  2639                           
  2640                           ; 2 bytes @ 0x2
  2641  000062                     	ds	1
  2642  000063                     key_shift_loc@max:
  2643                           	opt stack 0
  2644  000063                     m_mem_set@len:
  2645                           	opt stack 0
  2646  000063                     ___enter_menu_poly_coeffic@fps:
  2647                           	opt stack 0
  2648  000063                     ___enter_menu_warn_type@fps:
  2649                           	opt stack 0
  2650                           
  2651                           ; 2 bytes @ 0x3
  2652  000063                     	ds	1
  2653  000064                     ??_crc_sum:
  2654  000064                     ??___xxtofl:
  2655  000064                     ?_in_adc_start_and_read:
  2656                           	opt stack 0
  2657  000064                     iic_send_byte@x:
  2658                           	opt stack 0
  2659  000064                     iic_received_byte@ret:
  2660                           	opt stack 0
  2661  000064                     ___awdiv@counter:
  2662                           	opt stack 0
  2663  000064                     ___awmod@counter:
  2664                           	opt stack 0
  2665  000064                     m_mem_cpy_len@len:
  2666                           	opt stack 0
  2667  000064                     m_flash_read@buf:
  2668                           	opt stack 0
  2669  000064                     delay_ms@dly:
  2670                           	opt stack 0
  2671  000064                     ___wmul@multiplicand:
  2672                           	opt stack 0
  2673  000064                     ___lwdiv@divisor:
  2674                           	opt stack 0
  2675  000064                     m_flash_erase@t32:
  2676                           	opt stack 0
  2677  000064                     ___lmul@multiplicand:
  2678                           	opt stack 0
  2679  000064                     ___lldiv@divisor:
  2680                           	opt stack 0
  2681                           
  2682                           ; 4 bytes @ 0x4
  2683  000064                     	ds	1
  2684  000065                     iic_send_byte@i:
  2685                           	opt stack 0
  2686  000065                     iic_received_byte@i:
  2687                           	opt stack 0
  2688  000065                     ___awdiv@sign:
  2689                           	opt stack 0
  2690  000065                     ___awmod@sign:
  2691                           	opt stack 0
  2692                           
  2693                           ; 1 bytes @ 0x5
  2694  000065                     	ds	1
  2695  000066                     iic_received_byte_if_ack@ack:
  2696                           	opt stack 0
  2697  000066                     in_adc_start_and_read@ch:
  2698                           	opt stack 0
  2699  000066                     key_polling@ktemp:
  2700                           	opt stack 0
  2701  000066                     ___lwdiv@counter:
  2702                           	opt stack 0
  2703  000066                     crc_sum@len:
  2704                           	opt stack 0
  2705  000066                     ads1115_write_reg@pAds1115:
  2706                           	opt stack 0
  2707  000066                     at24c02_write_n_byte@pAt24c02:
  2708                           	opt stack 0
  2709  000066                     m_flash_read@len:
  2710                           	opt stack 0
  2711  000066                     ___wmul@product:
  2712                           	opt stack 0
  2713  000066                     ___awdiv@quotient:
  2714                           	opt stack 0
  2715                           
  2716                           ; 2 bytes @ 0x6
  2717  000066                     	ds	1
  2718  000067                     iic_received_byte_if_ack@ret:
  2719                           	opt stack 0
  2720  000067                     key_polling@t8:
  2721                           	opt stack 0
  2722  000067                     in_adc_start_and_read@ret:
  2723                           	opt stack 0
  2724  000067                     ___lwdiv@quotient:
  2725                           	opt stack 0
  2726                           
  2727                           ; 2 bytes @ 0x7
  2728  000067                     	ds	1
  2729  000068                     ??_calib_data_set_default_diff_pr:
  2730  000068                     ??_calib_data_set_default_pr:
  2731  000068                     ?_key_waite_release:
  2732                           	opt stack 0
  2733  000068                     ?_ads1115_read_reg:
  2734                           	opt stack 0
  2735  000068                     ads1115_write_reg@addr:
  2736                           	opt stack 0
  2737  000068                     at24c02_write_n_byte@addr:
  2738                           	opt stack 0
  2739  000068                     lcd_set_com_seg@seg:
  2740                           	opt stack 0
  2741  000068                     ___xxtofl@sign:
  2742                           	opt stack 0
  2743  000068                     key_waite_release@timeout:
  2744                           	opt stack 0
  2745  000068                     crc_sum@uIndex:
  2746                           	opt stack 0
  2747  000068                     m_int16_2_str_4@buf:
  2748                           	opt stack 0
  2749  000068                     ads1115_read_reg@pAds1115:
  2750                           	opt stack 0
  2751  000068                     at24c02_read_n_byte@pAt24c02:
  2752                           	opt stack 0
  2753  000068                     m_flash_read@i:
  2754                           	opt stack 0
  2755  000068                     ___lmul@product:
  2756                           	opt stack 0
  2757  000068                     ___lldiv@quotient:
  2758                           	opt stack 0
  2759                           
  2760                           ; 4 bytes @ 0x8
  2761  000068                     	ds	1
  2762  000069                     ?___lwmod:
  2763                           	opt stack 0
  2764  000069                     lcd_set_com_seg@show:
  2765                           	opt stack 0
  2766  000069                     ___xxtofl@exp:
  2767                           	opt stack 0
  2768  000069                     ads1115_write_reg@value:
  2769                           	opt stack 0
  2770  000069                     at24c02_write_n_byte@buf:
  2771                           	opt stack 0
  2772  000069                     ___lwmod@dividend:
  2773                           	opt stack 0
  2774                           
  2775                           ; 2 bytes @ 0x9
  2776  000069                     	ds	1
  2777  00006A                     ??_lcd_set_com_seg:
  2778  00006A                     crc_sum@uchCRCHi:
  2779                           	opt stack 0
  2780  00006A                     ads1115_read_reg@addr:
  2781                           	opt stack 0
  2782  00006A                     at24c02_read_n_byte@addr:
  2783                           	opt stack 0
  2784  00006A                     key_waite_release@key:
  2785                           	opt stack 0
  2786  00006A                     m_int16_2_str_4@x:
  2787                           	opt stack 0
  2788  00006A                     m_flash_read@t32:
  2789                           	opt stack 0
  2790  00006A                     ___xxtofl@arg:
  2791                           	opt stack 0
  2792                           
  2793                           ; 4 bytes @ 0xA
  2794  00006A                     	ds	1
  2795  00006B                     ??_ads1115_read_reg:
  2796  00006B                     crc_sum@uchCRCLo:
  2797                           	opt stack 0
  2798  00006B                     ads1115_start_conversion@pAds1115:
  2799                           	opt stack 0
  2800  00006B                     at24c02_read_n_byte@buf:
  2801                           	opt stack 0
  2802  00006B                     at24c02_write_n_byte@len:
  2803                           	opt stack 0
  2804  00006B                     ___lwmod@divisor:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0xB
  2808  00006B                     	ds	1
  2809  00006C                     ?___mflot32_2_int32:
  2810                           	opt stack 0
  2811  00006C                     ?___aldiv:
  2812                           	opt stack 0
  2813  00006C                     ___lldiv@counter:
  2814                           	opt stack 0
  2815  00006C                     crc_verify@message:
  2816                           	opt stack 0
  2817  00006C                     crc_append@message:
  2818                           	opt stack 0
  2819  00006C                     ads1115_read_reg@t16:
  2820                           	opt stack 0
  2821  00006C                     ___mflot32_2_int32@x:
  2822                           	opt stack 0
  2823  00006C                     ___aldiv@dividend:
  2824                           	opt stack 0
  2825                           
  2826                           ; 4 bytes @ 0xC
  2827  00006C                     	ds	1
  2828  00006D                     ?___int32_2_mflot32:
  2829                           	opt stack 0
  2830  00006D                     lcd_set_com_seg@com:
  2831                           	opt stack 0
  2832  00006D                     ___lwmod@counter:
  2833                           	opt stack 0
  2834  00006D                     at24c02_read_n_byte@len:
  2835                           	opt stack 0
  2836  00006D                     at24c02_write_n_byte@i:
  2837                           	opt stack 0
  2838  00006D                     ___int32_2_mflot32@x:
  2839                           	opt stack 0
  2840                           
  2841                           ; 4 bytes @ 0xD
  2842  00006D                     	ds	1
  2843  00006E                     ?_ads1115_read_conversion:
  2844                           	opt stack 0
  2845  00006E                     ?___flmul:
  2846                           	opt stack 0
  2847  00006E                     calib_data_set_default_diff_pr@j:
  2848                           	opt stack 0
  2849  00006E                     calib_data_set_default_pr@i:
  2850                           	opt stack 0
  2851  00006E                     lcd_set_com_seg@offset:
  2852                           	opt stack 0
  2853  00006E                     key_adj_value_fixed@value:
  2854                           	opt stack 0
  2855  00006E                     crc_verify@n:
  2856                           	opt stack 0
  2857  00006E                     crc_append@n:
  2858                           	opt stack 0
  2859  00006E                     ads1115_read_conversion@pAds1115:
  2860                           	opt stack 0
  2861  00006E                     m_flash_write@addr:
  2862                           	opt stack 0
  2863  00006E                     ___flmul@b:
  2864                           	opt stack 0
  2865                           
  2866                           ; 4 bytes @ 0xE
  2867  00006E                     	ds	1
  2868  00006F                     ??_at24c02_read_n_byte:
  2869  00006F                     calib_data_set_default_diff_pr@i:
  2870                           	opt stack 0
  2871  00006F                     calib_data_set_default_pr@j:
  2872                           	opt stack 0
  2873  00006F                     lcd_set_com_seg@bits:
  2874                           	opt stack 0
  2875                           
  2876                           ; 1 bytes @ 0xF
  2877  00006F                     	ds	1
  2878  000070                     ??_crc_verify:
  2879  000070                     ??_crc_append:
  2880  000070                     key_adj_value_fixed@loc:
  2881                           	opt stack 0
  2882  000070                     ___mflot32_2_int32@i:
  2883                           	opt stack 0
  2884  000070                     lcd_disp_level_bar@__bar:
  2885                           	opt stack 0
  2886  000070                     lcd_show_dp@show:
  2887                           	opt stack 0
  2888  000070                     lcd_show_chr@chr:
  2889                           	opt stack 0
  2890  000070                     ___aldiv@divisor:
  2891                           	opt stack 0
  2892                           
  2893                           ; 4 bytes @ 0x10
  2894  000070                     	ds	1
  2895  000071                     ??___int32_2_mflot32:
  2896  000071                     lcd_disp_level_bar@bar:
  2897                           	opt stack 0
  2898  000071                     lcd_show_dp@loc:
  2899                           	opt stack 0
  2900  000071                     lcd_show_chr@loc:
  2901                           	opt stack 0
  2902  000071                     key_adj_value_fixed@dloc:
  2903                           	opt stack 0
  2904  000071                     ads1115_read_conversion@result:
  2905                           	opt stack 0
  2906  000071                     ___mflot32_2_int32@ret:
  2907                           	opt stack 0
  2908                           
  2909                           ; 4 bytes @ 0x11
  2910  000071                     	ds	1
  2911  000072                     lcd_disp_level@level:
  2912                           	opt stack 0
  2913  000072                     lcd_show_chr@code:
  2914                           	opt stack 0
  2915  000072                     crc_verify@crccal:
  2916                           	opt stack 0
  2917  000072                     crc_append@crc:
  2918                           	opt stack 0
  2919  000072                     m_flash_write@buf:
  2920                           	opt stack 0
  2921  000072                     ___flmul@a:
  2922                           	opt stack 0
  2923                           
  2924                           ; 4 bytes @ 0x12
  2925  000072                     	ds	1
  2926  000073                     lcd_disp_level@i:
  2927                           	opt stack 0
  2928  000073                     key_adj_value_fixed@t16:
  2929                           	opt stack 0
  2930  000073                     at24c02_read_n_byte@i:
  2931                           	opt stack 0
  2932  000073                     lcd_show_string_l0@str:
  2933                           	opt stack 0
  2934  000073                     lcd_show_string_l1@str:
  2935                           	opt stack 0
  2936  000073                     lcd_show_string@str:
  2937                           	opt stack 0
  2938                           
  2939                           ; 2 bytes @ 0x13
  2940  000073                     	ds	1
  2941  000074                     ___aldiv@counter:
  2942                           	opt stack 0
  2943  000074                     crc_verify@expected:
  2944                           	opt stack 0
  2945  000074                     m_flash_write@len:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x14
  2949  000074                     	ds	1
  2950  000075                     lcd_show_string_l0@t8:
  2951                           	opt stack 0
  2952  000075                     lcd_show_string_l1@t8:
  2953                           	opt stack 0
  2954  000075                     lcd_show_string@t8:
  2955                           	opt stack 0
  2956  000075                     ___aldiv@sign:
  2957                           	opt stack 0
  2958  000075                     key_adj_value_float@mfp:
  2959                           	opt stack 0
  2960  000075                     ___int32_2_mflot32@t32:
  2961                           	opt stack 0
  2962  000075                     ___mflot32_2_int32@mf:
  2963                           	opt stack 0
  2964                           
  2965                           ; 4 bytes @ 0x15
  2966  000075                     	ds	1
  2967  000076                     ??_m_flash_write:
  2968  000076                     ??___flmul:
  2969  000076                     calib_data_init_diff_pr@ret:
  2970                           	opt stack 0
  2971  000076                     calib_data_init_pr@ret:
  2972                           	opt stack 0
  2973  000076                     ui_disp_adj_xfloat_pt@str:
  2974                           	opt stack 0
  2975  000076                     ui_disp_adj_xfixed_pt@str:
  2976                           	opt stack 0
  2977  000076                     ui_disp_adj_xfixed_pt_dp@str:
  2978                           	opt stack 0
  2979  000076                     ui_disp_xfloat_pt@xpf:
  2980                           	opt stack 0
  2981  000076                     ui_disp_menu_pos_adj@p:
  2982                           	opt stack 0
  2983  000076                     ___aldiv@quotient:
  2984                           	opt stack 0
  2985  000076                     ui_disp_start_cs600@buf:
  2986                           	opt stack 0
  2987                           
  2988                           ; 6 bytes @ 0x16
  2989  000076                     	ds	1
  2990  000077                     key_adj_value_float@loc:
  2991                           	opt stack 0
  2992  000077                     calib_data_init_diff_pr@t16:
  2993                           	opt stack 0
  2994  000077                     calib_data_init_pr@t16:
  2995                           	opt stack 0
  2996  000077                     ui_disp_menu_warn_t_adj@buf:
  2997                           	opt stack 0
  2998  000077                     ui_disp_menu_work_mode_adj@buf:
  2999                           	opt stack 0
  3000                           
  3001                           ; 10 bytes @ 0x17
  3002  000077                     	ds	1
  3003  000078                     ui_disp_xfloat_pt@line:
  3004                           	opt stack 0
  3005  000078                     m_flash_write@writeTimes:
  3006                           	opt stack 0
  3007  000078                     key_adj_value_float@t16:
  3008                           	opt stack 0
  3009  000078                     ui_disp_adj_xfloat_pt@xpf:
  3010                           	opt stack 0
  3011  000078                     ui_disp_adj_xfixed_pt@x:
  3012                           	opt stack 0
  3013  000078                     ui_disp_adj_xfixed_pt_dp@x:
  3014                           	opt stack 0
  3015  000078                     ui_disp_menu_pos_adj@buf:
  3016                           	opt stack 0
  3017                           
  3018                           ; 6 bytes @ 0x18
  3019  000078                     	ds	1
  3020  000079                     ??_ui_disp_xfloat_pt:
  3021  000079                     m_flash_write@i:
  3022                           	opt stack 0
  3023  000079                     calib_data_init_diff_pr@buf:
  3024                           	opt stack 0
  3025  000079                     calib_data_init_pr@buf:
  3026                           	opt stack 0
  3027  000079                     ___int32_2_mflot32@mf:
  3028                           	opt stack 0
  3029                           
  3030                           ; 4 bytes @ 0x19
  3031  000079                     	ds	1
  3032  00007A                     ?___x_sample_fliter:
  3033                           	opt stack 0
  3034  00007A                     ?___x_sample_fifo:
  3035                           	opt stack 0
  3036  00007A                     key_adj_value_float@t8:
  3037                           	opt stack 0
  3038  00007A                     ui_disp_adj_xfloat_pt@loc:
  3039                           	opt stack 0
  3040  00007A                     ui_disp_adj_xfixed_pt@loc:
  3041                           	opt stack 0
  3042  00007A                     ui_disp_adj_xfixed_pt_dp@loc:
  3043                           	opt stack 0
  3044  00007A                     ___flmul@sign:
  3045                           	opt stack 0
  3046  00007A                     m_interp1_cal_p_v@tabrow:
  3047                           	opt stack 0
  3048  00007A                     m_interp1_cal_p_t@tmpx:
  3049                           	opt stack 0
  3050  00007A                     ___x_sample_fliter@buf:
  3051                           	opt stack 0
  3052  00007A                     ___x_sample_fifo@buf:
  3053                           	opt stack 0
  3054  00007A                     m_flash_write@pageAddr:
  3055                           	opt stack 0
  3056  00007A                     ui_disp_xfloat_pt@buf:
  3057                           	opt stack 0
  3058                           
  3059                           ; 10 bytes @ 0x1A
  3060  00007A                     	ds	1
  3061  00007B                     ??___up_pose_size_adj:
  3062  00007B                     ??_ui_disp_adj_xfloat_pt:
  3063  00007B                     ??_ui_disp_adj_xfixed_pt:
  3064  00007B                     ___up_diff_calib_adj@t8:
  3065                           	opt stack 0
  3066  00007B                     ___up_pr_calib_adj@t8:
  3067                           	opt stack 0
  3068  00007B                     ui_disp_adj_xfixed_pt_dp@dploc:
  3069                           	opt stack 0
  3070  00007B                     ___flmul@aexp:
  3071                           	opt stack 0
  3072                           
  3073                           ; 1 bytes @ 0x1B
  3074  00007B                     	ds	1
  3075  00007C                     ??_ui_disp_adj_xfixed_pt_dp:
  3076  00007C                     ui_disp_start_cs600@dly:
  3077                           	opt stack 0
  3078  00007C                     ___x_sample_fliter@len:
  3079                           	opt stack 0
  3080  00007C                     m_interp1_cal_p_v@xin:
  3081                           	opt stack 0
  3082  00007C                     m_interp1_cal_p_t@xin:
  3083                           	opt stack 0
  3084  00007C                     ___up_pose_size_adj@p:
  3085                           	opt stack 0
  3086  00007C                     ___x_sample_fifo@x:
  3087                           	opt stack 0
  3088  00007C                     ___flmul@grs:
  3089                           	opt stack 0
  3090                           
  3091                           ; 4 bytes @ 0x1C
  3092  00007C                     	ds	1
  3093  00007D                     ??___enter_menu_set_density:
  3094  00007D                     ??___enter_menu_calib_press_diff:
  3095  00007D                     ??___enter_menu_calib_press:
  3096  00007D                     ??___enter_menu_warn_value:
  3097  00007D                     ___enter_menu_epr_calib@__subMenu:
  3098                           	opt stack 0
  3099  00007D                     ___enter_menu_epr_ilp_scale@__subMenu:
  3100                           	opt stack 0
  3101  00007D                     ui_disp_start_cs600@t8:
  3102                           	opt stack 0
  3103  00007D                     ui_disp_menu_warn_t_adj@t8:
  3104                           	opt stack 0
  3105  00007D                     ___x_sample_fliter@loop:
  3106                           	opt stack 0
  3107  00007D                     ___enter_menu_set_d@fps:
  3108                           	opt stack 0
  3109  00007D                     ___enter_menu_set_h@fps:
  3110                           	opt stack 0
  3111  00007D                     ___enter_menu_set_base_zero@fps:
  3112                           	opt stack 0
  3113  00007D                     ui_disp_adj_xfloat_pt@buf:
  3114                           	opt stack 0
  3115  00007D                     ui_disp_adj_xfixed_pt@buf:
  3116                           	opt stack 0
  3117                           
  3118                           ; 10 bytes @ 0x1D
  3119  00007D                     	ds	1
  3120  00007E                     ??___x_sample_fliter:
  3121  00007E                     m_interp1_cal_p_t@tmpxLen:
  3122                           	opt stack 0
  3123  00007E                     ___x_sample_fifo@len:
  3124                           	opt stack 0
  3125  00007E                     m_flash_write@j:
  3126                           	opt stack 0
  3127  00007E                     m_interp1_cal_p_v@xout:
  3128                           	opt stack 0
  3129  00007E                     ui_disp_menu_warn_t_adj@p:
  3130                           	opt stack 0
  3131  00007E                     ___enter_menu_epr_calib@t32:
  3132                           	opt stack 0
  3133  00007E                     ___enter_menu_epr_ilp_scale@t32:
  3134                           	opt stack 0
  3135  00007E                     ui_disp_adj_xfixed_pt_dp@buf:
  3136                           	opt stack 0
  3137                           
  3138                           ; 10 bytes @ 0x1E
  3139  00007E                     	ds	1
  3140  00007F                     ??_m_interp1_cal_p_t:
  3141  00007F                     ??___x_sample_fifo:
  3142  00007F                     ___enter_menu_warn_value@__subMenu:
  3143                           	opt stack 0
  3144  00007F                     ___enter_menu_set_density@fps:
  3145                           	opt stack 0
  3146  00007F                     m_flash_write@tmpBuf:
  3147                           	opt stack 0
  3148  00007F                     ___enter_menu_set_d@t32:
  3149                           	opt stack 0
  3150  00007F                     ___enter_menu_set_h@t32:
  3151                           	opt stack 0
  3152  00007F                     ___enter_menu_set_base_zero@t32:
  3153                           	opt stack 0
  3154                           
  3155                           ; 4 bytes @ 0x1F
  3156  00007F                     	ds	1
  3157  000080                     ??_m_interp1_cal_p_v:
  3158  000080                     ___flmul@bexp:
  3159                           	opt stack 0
  3160  000080                     ___enter_menu_warn_value@fps:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0x20
  3164  000080                     	ds	1
  3165  000081                     ui_disp_menu_work_mode_adj@p:
  3166                           	opt stack 0
  3167  000081                     m_flash_write@t16:
  3168                           	opt stack 0
  3169  000081                     ___enter_menu_set_density@t32:
  3170                           	opt stack 0
  3171  000081                     ___flmul@prod:
  3172                           	opt stack 0
  3173                           
  3174                           ; 4 bytes @ 0x21
  3175  000081                     	ds	1
  3176  000082                     ___enter_menu_warn_value@t8:
  3177                           	opt stack 0
  3178  000082                     ___enter_menu_epr_calib@fps:
  3179                           	opt stack 0
  3180  000082                     ___enter_menu_epr_ilp_scale@fps:
  3181                           	opt stack 0
  3182                           
  3183                           ; 2 bytes @ 0x22
  3184  000082                     	ds	1
  3185  000083                     ___enter_menu_calib_press_diff@row:
  3186                           	opt stack 0
  3187  000083                     ___enter_menu_calib_press@row:
  3188                           	opt stack 0
  3189  000083                     ___enter_menu_warn_value@t32:
  3190                           	opt stack 0
  3191                           
  3192                           ; 4 bytes @ 0x23
  3193  000083                     	ds	1
  3194  000084                     ui_disp_xfloat_pt@t8:
  3195                           	opt stack 0
  3196  000084                     ___x_sample_fliter@maxLoc:
  3197                           	opt stack 0
  3198  000084                     ___enter_menu_calib_press_diff@stp:
  3199                           	opt stack 0
  3200  000084                     ___enter_menu_calib_press@stp:
  3201                           	opt stack 0
  3202                           
  3203                           ; 2 bytes @ 0x24
  3204  000084                     	ds	1
  3205  000085                     ___x_sample_fliter@minLoc:
  3206                           	opt stack 0
  3207  000085                     ui_disp_xfloat_pt@x:
  3208                           	opt stack 0
  3209  000085                     ___flmul@temp:
  3210                           	opt stack 0
  3211  000085                     ___x_sample_fifo@ret:
  3212                           	opt stack 0
  3213                           
  3214                           ; 4 bytes @ 0x25
  3215  000085                     	ds	1
  3216  000086                     ___x_sample_fliter@max:
  3217                           	opt stack 0
  3218  000086                     ___enter_menu_calib_press_diff@t32:
  3219                           	opt stack 0
  3220  000086                     ___enter_menu_calib_press@t32:
  3221                           	opt stack 0
  3222                           
  3223                           ; 4 bytes @ 0x26
  3224  000086                     	ds	1
  3225  000087                     ?___fldiv:
  3226                           	opt stack 0
  3227  000087                     ui_disp_menu_home@t8:
  3228                           	opt stack 0
  3229  000087                     ui_disp_adj_xfloat_pt@x:
  3230                           	opt stack 0
  3231  000087                     ___fldiv@b:
  3232                           	opt stack 0
  3233                           
  3234                           ; 4 bytes @ 0x27
  3235  000087                     	ds	1
  3236  000088                     ___x_sample_fliter@min:
  3237                           	opt stack 0
  3238  000088                     ui_disp_menu_home@mf:
  3239                           	opt stack 0
  3240  000088                     ui_disp_menu_poly_c_adj@buf:
  3241                           	opt stack 0
  3242                           
  3243                           ; 6 bytes @ 0x28
  3244  000088                     	ds	1
  3245  000089                     ui_disp_adj_xfloat_pt@t8:
  3246                           	opt stack 0
  3247  000089                     ___x_sample_fifo@i:
  3248                           	opt stack 0
  3249                           
  3250                           ; 1 bytes @ 0x29
  3251  000089                     	ds	1
  3252  00008A                     ??_key_process_set_down_long:
  3253  00008A                     ??___set_short_diff_calib:
  3254  00008A                     ??___set_short_pr_calib:
  3255  00008A                     ??_ui_disp_menu_warn_v_adj:
  3256  00008A                     sample_pr_chip_fast@ret:
  3257                           	opt stack 0
  3258  00008A                     ui_disp_menu_h_adj@fps:
  3259                           	opt stack 0
  3260  00008A                     sample_in_soc_adc_ch@t16:
  3261                           	opt stack 0
  3262  00008A                     m_interp1_cal_p_t@y:
  3263                           	opt stack 0
  3264  00008A                     ___x_sample_fliter@t32:
  3265                           	opt stack 0
  3266  00008A                     ui_disp_menu_epr_calib_adj@buf:
  3267                           	opt stack 0
  3268  00008A                     ui_disp_menu_epr_ilp_scale_adj@buf:
  3269                           	opt stack 0
  3270  00008A                     ui_disp_menu_calib_diff_adj@buf:
  3271                           	opt stack 0
  3272  00008A                     ui_disp_menu_calib_pr_adj@buf:
  3273                           	opt stack 0
  3274                           
  3275                           ; 10 bytes @ 0x2A
  3276  00008A                     	ds	1
  3277  00008B                     sample_pr_chip_fast@t16:
  3278                           	opt stack 0
  3279  00008B                     m_interp1_cal_p_v@y:
  3280                           	opt stack 0
  3281  00008B                     ___fldiv@a:
  3282                           	opt stack 0
  3283                           
  3284                           ; 4 bytes @ 0x2B
  3285  00008B                     	ds	1
  3286  00008C                     ui_disp_menu_warn_v_adj@buf:
  3287                           	opt stack 0
  3288                           
  3289                           ; 6 bytes @ 0x2C
  3290  00008C                     	ds	2
  3291  00008E                     ui_disp_menu_poly_c_adj@t8:
  3292                           	opt stack 0
  3293  00008E                     ___x_sample_fliter@i:
  3294                           	opt stack 0
  3295  00008E                     m_interp1_cal_p_t@x:
  3296                           	opt stack 0
  3297                           
  3298                           ; 4 bytes @ 0x2E
  3299  00008E                     	ds	1
  3300  00008F                     ??___fldiv:
  3301  00008F                     sample_diff_pr_fliter@xin:
  3302                           	opt stack 0
  3303  00008F                     m_interp1_cal_p_v@x:
  3304                           	opt stack 0
  3305                           
  3306                           ; 4 bytes @ 0x2F
  3307  00008F                     	ds	1
  3308  000090                     ___set_short_diff_calib@pra:
  3309                           	opt stack 0
  3310  000090                     ___set_short_pr_calib@pra:
  3311                           	opt stack 0
  3312                           
  3313                           ; 4 bytes @ 0x30
  3314  000090                     	ds	1
  3315  000091                     sample_diff_pr_chip_fast@t16:
  3316                           	opt stack 0
  3317                           
  3318                           ; 2 bytes @ 0x31
  3319  000091                     	ds	1
  3320  000092                     ui_disp_menu_warn_v_adj@fps:
  3321                           	opt stack 0
  3322  000092                     m_interp1_cal_p_t@pr:
  3323                           	opt stack 0
  3324                           
  3325                           ; 4 bytes @ 0x32
  3326  000092                     	ds	1
  3327  000093                     ___fldiv@sign:
  3328                           	opt stack 0
  3329  000093                     m_interp1_cal_p_v@t16:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x33
  3333  000093                     	ds	1
  3334  000094                     ___set_short_diff_calib@gohome:
  3335                           	opt stack 0
  3336  000094                     ___set_short_pr_calib@gohome:
  3337                           	opt stack 0
  3338  000094                     ui_disp_menu_calib_diff_adj@t8:
  3339                           	opt stack 0
  3340  000094                     ui_disp_menu_calib_pr_adj@t8:
  3341                           	opt stack 0
  3342  000094                     ui_disp_menu_warn_v_adj@type:
  3343                           	opt stack 0
  3344  000094                     ___fldiv@rem:
  3345                           	opt stack 0
  3346                           
  3347                           ; 4 bytes @ 0x34
  3348  000094                     	ds	1
  3349  000095                     ___set_short_diff_calib@t8:
  3350                           	opt stack 0
  3351  000095                     ___set_short_pr_calib@t8:
  3352                           	opt stack 0
  3353  000095                     ui_disp_menu_warn_v_adj@t8:
  3354                           	opt stack 0
  3355  000095                     m_interp1_cal_p_v@pr:
  3356                           	opt stack 0
  3357                           
  3358                           ; 4 bytes @ 0x35
  3359  000095                     	ds	1
  3360  000096                     ___set_short_diff_calib@saveFlg:
  3361                           	opt stack 0
  3362  000096                     ___set_short_pr_calib@saveFlg:
  3363                           	opt stack 0
  3364  000096                     m_interp1_cal_p_t@t16:
  3365                           	opt stack 0
  3366                           
  3367                           ; 2 bytes @ 0x36
  3368  000096                     	ds	1
  3369  000097                     ___set_short_diff_calib@t32:
  3370                           	opt stack 0
  3371  000097                     ___set_short_pr_calib@t32:
  3372                           	opt stack 0
  3373                           
  3374                           ; 4 bytes @ 0x37
  3375  000097                     	ds	1
  3376  000098                     m_interp1_cal_p_t@i:
  3377                           	opt stack 0
  3378  000098                     ___fldiv@new_exp:
  3379                           	opt stack 0
  3380                           
  3381                           ; 2 bytes @ 0x38
  3382  000098                     	ds	1
  3383  000099                     m_interp1_cal_p_v@i:
  3384                           	opt stack 0
  3385                           
  3386                           ; 1 bytes @ 0x39
  3387  000099                     	ds	1
  3388  00009A                     cal_press@ret:
  3389                           	opt stack 0
  3390  00009A                     ___fldiv@grs:
  3391                           	opt stack 0
  3392                           
  3393                           ; 4 bytes @ 0x3A
  3394  00009A                     	ds	1
  3395  00009B                     cal_press@tabrow:
  3396                           	opt stack 0
  3397  00009B                     ___set_short_diff_calib@t16:
  3398                           	opt stack 0
  3399  00009B                     ___set_short_pr_calib@t16:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x3B
  3403  00009B                     	ds	2
  3404  00009D                     ___set_short_diff_calib@adjv:
  3405                           	opt stack 0
  3406  00009D                     ___set_short_pr_calib@adjv:
  3407                           	opt stack 0
  3408  00009D                     cal_press@xin:
  3409                           	opt stack 0
  3410                           
  3411                           ; 8 bytes @ 0x3D
  3412  00009D                     	ds	1
  3413  00009E                     ___fldiv@bexp:
  3414                           	opt stack 0
  3415                           
  3416                           ; 1 bytes @ 0x3E
  3417  00009E                     	ds	1
  3418  00009F                     ___fldiv@aexp:
  3419                           	opt stack 0
  3420                           
  3421                           ; 1 bytes @ 0x3F
  3422  00009F                     	ds	1
  3423  0000A0                     ?___flneg:
  3424                           	opt stack 0
  3425  0000A0                     ___flneg@f1:
  3426                           	opt stack 0
  3427                           
  3428                           ; 4 bytes @ 0x40
  3429  0000A0                     	ds	4
  3430  0000A4                     ?___fladd:
  3431                           	opt stack 0
  3432  0000A4                     ___fladd@b:
  3433                           	opt stack 0
  3434                           
  3435                           ; 4 bytes @ 0x44
  3436  0000A4                     	ds	4
  3437  0000A8                     ___fladd@a:
  3438                           	opt stack 0
  3439                           
  3440                           ; 4 bytes @ 0x48
  3441  0000A8                     	ds	4
  3442  0000AC                     ??___fladd:
  3443                           
  3444                           ; 1 bytes @ 0x4C
  3445  0000AC                     	ds	8
  3446  0000B4                     ___fladd@signs:
  3447                           	opt stack 0
  3448                           
  3449                           ; 1 bytes @ 0x54
  3450  0000B4                     	ds	1
  3451  0000B5                     ___fladd@aexp:
  3452                           	opt stack 0
  3453                           
  3454                           ; 1 bytes @ 0x55
  3455  0000B5                     	ds	1
  3456  0000B6                     ___fladd@bexp:
  3457                           	opt stack 0
  3458                           
  3459                           ; 1 bytes @ 0x56
  3460  0000B6                     	ds	1
  3461  0000B7                     ___fladd@grs:
  3462                           	opt stack 0
  3463                           
  3464                           ; 1 bytes @ 0x57
  3465  0000B7                     	ds	1
  3466  0000B8                     ?___fltol:
  3467                           	opt stack 0
  3468  0000B8                     ___flge@ff1:
  3469                           	opt stack 0
  3470  0000B8                     ___fltol@f1:
  3471                           	opt stack 0
  3472                           
  3473                           ; 4 bytes @ 0x58
  3474  0000B8                     	ds	4
  3475  0000BC                     ??___fltol:
  3476  0000BC                     ___flge@ff2:
  3477                           	opt stack 0
  3478                           
  3479                           ; 4 bytes @ 0x5C
  3480  0000BC                     	ds	4
  3481  0000C0                     ??___flge:
  3482  0000C0                     ___fltol@sign1:
  3483                           	opt stack 0
  3484                           
  3485                           ; 1 bytes @ 0x60
  3486  0000C0                     	ds	1
  3487  0000C1                     ___fltol@exp1:
  3488                           	opt stack 0
  3489                           
  3490                           ; 1 bytes @ 0x61
  3491  0000C1                     	ds	1
  3492  0000C2                     ?_data_sys_cal_v1:
  3493                           	opt stack 0
  3494  0000C2                     ?_data_sys_cal_v2:
  3495                           	opt stack 0
  3496  0000C2                     data_sys_cal_v1@stp:
  3497                           	opt stack 0
  3498  0000C2                     data_sys_cal_v2@stp:
  3499                           	opt stack 0
  3500  0000C2                     cal_diff_p_to_h@xin:
  3501                           	opt stack 0
  3502                           
  3503                           ; 2 bytes @ 0x62
  3504  0000C2                     	ds	2
  3505  0000C4                     ?_m_interp1_float_fast:
  3506                           	opt stack 0
  3507  0000C4                     m_interp1_float_fast@tab:
  3508                           	opt stack 0
  3509  0000C4                     cal_diff_p_to_h@f2:
  3510                           	opt stack 0
  3511  0000C4                     _cal_diff_hight_level$5884:
  3512                           	opt stack 0
  3513                           
  3514                           ; 4 bytes @ 0x64
  3515  0000C4                     	ds	2
  3516  0000C6                     m_interp1_float_fast@in:
  3517                           	opt stack 0
  3518  0000C6                     _data_sys_cal_v1$5878:
  3519                           	opt stack 0
  3520  0000C6                     _data_sys_cal_v2$5881:
  3521                           	opt stack 0
  3522                           
  3523                           ; 4 bytes @ 0x66
  3524  0000C6                     	ds	2
  3525  0000C8                     cal_diff_p_to_h@f1:
  3526                           	opt stack 0
  3527  0000C8                     _cal_diff_hight_level$5885:
  3528                           	opt stack 0
  3529                           
  3530                           ; 4 bytes @ 0x68
  3531  0000C8                     	ds	2
  3532  0000CA                     m_interp1_float_fast@len:
  3533                           	opt stack 0
  3534  0000CA                     _data_sys_cal_v1$5879:
  3535                           	opt stack 0
  3536  0000CA                     _data_sys_cal_v2$5882:
  3537                           	opt stack 0
  3538                           
  3539                           ; 4 bytes @ 0x6A
  3540  0000CA                     	ds	2
  3541  0000CC                     ??_m_interp1_float_fast:
  3542  0000CC                     cal_diff_hight_level@f2:
  3543                           	opt stack 0
  3544                           
  3545                           ; 4 bytes @ 0x6C
  3546  0000CC                     	ds	2
  3547  0000CE                     data_sys_cal_v2@f:
  3548                           	opt stack 0
  3549  0000CE                     _data_sys_cal_v1$5880:
  3550                           	opt stack 0
  3551                           
  3552                           ; 4 bytes @ 0x6E
  3553  0000CE                     	ds	2
  3554  0000D0                     cal_diff_hight_level@f1:
  3555                           	opt stack 0
  3556                           
  3557                           ; 4 bytes @ 0x70
  3558  0000D0                     	ds	2
  3559  0000D2                     data_sys_cal_v1@h:
  3560                           	opt stack 0
  3561  0000D2                     data_sys_cal_v2@d:
  3562                           	opt stack 0
  3563                           
  3564                           ; 4 bytes @ 0x72
  3565  0000D2                     	ds	2
  3566  0000D4                     m_interp1_float_fast@x:
  3567                           	opt stack 0
  3568                           
  3569                           ; 4 bytes @ 0x74
  3570  0000D4                     	ds	2
  3571  0000D6                     data_sys_cal_v1@f:
  3572                           	opt stack 0
  3573                           
  3574                           ; 4 bytes @ 0x76
  3575  0000D6                     	ds	2
  3576  0000D8                     m_interp1_float_fast@y:
  3577                           	opt stack 0
  3578                           
  3579                           ; 4 bytes @ 0x78
  3580  0000D8                     	ds	2
  3581  0000DA                     data_sys_cal_v1@r:
  3582                           	opt stack 0
  3583                           
  3584                           ; 4 bytes @ 0x7A
  3585  0000DA                     	ds	2
  3586  0000DC                     _m_interp1_float_fast$5883:
  3587                           	opt stack 0
  3588                           
  3589                           ; 4 bytes @ 0x7C
  3590  0000DC                     	ds	2
  3591  0000DE                     ___sys_data_save_write_flash@ret:
  3592                           	opt stack 0
  3593  0000DE                     data_sys_init@t16:
  3594                           	opt stack 0
  3595                           
  3596                           ; 2 bytes @ 0x7E
  3597  0000DE                     	ds	1
  3598  0000DF                     ___sys_data_save_write_flash@stp:
  3599                           	opt stack 0
  3600                           
  3601                           ; 2 bytes @ 0x7F
  3602  0000DF                     	ds	1
  3603  0000E0                     data_sys_init@ret:
  3604                           	opt stack 0
  3605  0000E0                     m_interp1_float_fast@f:
  3606                           	opt stack 0
  3607                           
  3608                           ; 4 bytes @ 0x80
  3609  0000E0                     	ds	1
  3610  0000E1                     data_sys_init@stp:
  3611                           	opt stack 0
  3612  0000E1                     ___sys_data_save_write_flash@buf:
  3613                           	opt stack 0
  3614                           
  3615                           ; 2 bytes @ 0x81
  3616  0000E1                     	ds	2
  3617  0000E3                     ??___set_short_warn_type:
  3618  0000E3                     ??___set_short_warn_value:
  3619  0000E3                     data_sys_init@buf:
  3620                           	opt stack 0
  3621  0000E3                     ___set_long_bar_level_scale@p:
  3622                           	opt stack 0
  3623                           
  3624                           ; 2 bytes @ 0x83
  3625  0000E3                     	ds	1
  3626  0000E4                     m_interp1_float_fast@i:
  3627                           	opt stack 0
  3628                           
  3629                           ; 2 bytes @ 0x84
  3630  0000E4                     	ds	1
  3631  0000E5                     ___set_long_bar_level_scale@stp:
  3632                           	opt stack 0
  3633                           
  3634                           ; 2 bytes @ 0x85
  3635  0000E5                     	ds	1
  3636  0000E6                     sample_call_in_ticker@ret:
  3637                           	opt stack 0
  3638  0000E6                     sample_function_enable_fi_in_rtc@ret:
  3639                           	opt stack 0
  3640                           
  3641                           ; 1 bytes @ 0x86
  3642  0000E6                     	ds	1
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           postinc0	equ	0xFEE
  3648                           wreg	equ	0xFE8
  3649                           postdec1	equ	0xFE5
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           
  3653                           	psect	cstackCOMRAM
  3654  000001                     __pcstackCOMRAM:
  3655                           	opt stack 0
  3656  000001                     ??_handler_interrupt_hight:
  3657  000001                     
  3658                           ; 2 bytes @ 0x0
  3659  000001                     	ds	14
  3660  00000F                     ??_handler_interrupt_low:
  3661                           
  3662                           ; 1 bytes @ 0xE
  3663  00000F                     	ds	17
  3664  000020                     ??_ads1115_set_data_rate:
  3665  000020                     ??_ads1115_set_mux:
  3666  000020                     ??_ads1115_set_pga:
  3667  000020                     ??_in_adc_start_and_read:
  3668  000020                     ??___up_warn_type_adj:
  3669  000020                     cal_additional_pressute@index:
  3670                           	opt stack 0
  3671  000020                     ___exp_10@n:
  3672                           	opt stack 0
  3673  000020                     key_waite_release@t8:
  3674                           	opt stack 0
  3675  000020                     key_shift_loc@t8:
  3676                           	opt stack 0
  3677  000020                     ___enter_menu_calib_press_diff@col:
  3678                           	opt stack 0
  3679  000020                     ___enter_menu_calib_press@col:
  3680                           	opt stack 0
  3681  000020                     ___down_home_adj@t8:
  3682                           	opt stack 0
  3683  000020                     ___up_home_adj@t8:
  3684                           	opt stack 0
  3685  000020                     ___x_arrange_str@i:
  3686                           	opt stack 0
  3687  000020                     m_int8_2_hex@t8:
  3688                           	opt stack 0
  3689  000020                     iic_send_ack@ack:
  3690                           	opt stack 0
  3691  000020                     iic_waite_ack@timeout:
  3692                           	opt stack 0
  3693  000020                     lcd_disp_level_bar@show:
  3694                           	opt stack 0
  3695  000020                     lcd_disp_chr_loc_0@code:
  3696                           	opt stack 0
  3697  000020                     lcd_disp_dp_loc_0@dp:
  3698                           	opt stack 0
  3699  000020                     lcd_disp_chr_loc_1@code:
  3700                           	opt stack 0
  3701  000020                     lcd_disp_dp_loc_1@dp:
  3702                           	opt stack 0
  3703  000020                     lcd_disp_chr_loc_2@code:
  3704                           	opt stack 0
  3705  000020                     lcd_disp_dp_loc_2@dp:
  3706                           	opt stack 0
  3707  000020                     lcd_disp_chr_loc_3@code:
  3708                           	opt stack 0
  3709  000020                     lcd_disp_chr_loc_4@code:
  3710                           	opt stack 0
  3711  000020                     lcd_disp_dp_loc_4@dp:
  3712                           	opt stack 0
  3713  000020                     lcd_disp_chr_loc_5@code:
  3714                           	opt stack 0
  3715  000020                     lcd_disp_dp_loc_5@dp:
  3716                           	opt stack 0
  3717  000020                     lcd_disp_chr_loc_6@code:
  3718                           	opt stack 0
  3719  000020                     lcd_disp_dp_loc_6@dp:
  3720                           	opt stack 0
  3721  000020                     lcd_disp_chr_loc_7@code:
  3722                           	opt stack 0
  3723  000020                     lcd_disp_logo@show:
  3724                           	opt stack 0
  3725  000020                     lcd_disp_unit_t@show:
  3726                           	opt stack 0
  3727  000020                     lcd_disp_unit_1st_m@show:
  3728                           	opt stack 0
  3729  000020                     lcd_disp_unit_1st_m3@show:
  3730                           	opt stack 0
  3731  000020                     lcd_disp_unit_temperature@show:
  3732                           	opt stack 0
  3733  000020                     lcd_disp_unit_2nd_m@show:
  3734                           	opt stack 0
  3735  000020                     lcd_disp_unit_2nd_m3@show:
  3736                           	opt stack 0
  3737  000020                     lcd_disp_unit_mpa@show:
  3738                           	opt stack 0
  3739  000020                     m_flash_unlock@oldGIE:
  3740                           	opt stack 0
  3741  000020                     ___lbdiv@divisor:
  3742                           	opt stack 0
  3743                           
  3744                           ; 1 bytes @ 0x1F
  3745  000020                     	ds	1
  3746  000021                     tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           postinc0	equ	0xFEE
  3751                           wreg	equ	0xFE8
  3752                           postdec1	equ	0xFE5
  3753                           fsr1h	equ	0xFE2
  3754                           fsr1l	equ	0xFE1
  3755                           
  3756                           ; 1 bytes @ 0x20
  3757 ;;
  3758 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3759 ;;
  3760 ;; *************** function _main *****************
  3761 ;; Defined at:
  3762 ;;		line 5 in file "src/app/main.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  t16             2    0        unsigned int 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  2  1297[None  ] int 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels required when called:   14
  3782 ;; This function calls:
  3783 ;;		_ads1115_init_all_chip
  3784 ;;		_data_init_all
  3785 ;;		_event_process_rtc
  3786 ;;		_event_process_ticker
  3787 ;;		_event_process_time_out
  3788 ;;		_in_adc_init
  3789 ;;		_key_polling
  3790 ;;		_key_process
  3791 ;;		_lcd_init
  3792 ;;		_rtc_set
  3793 ;;		_soc_init
  3794 ;;		_ui_disp_start_cs600
  3795 ;; This function is called by:
  3796 ;;		Startup code after reset
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text0
  3801  008FDA                     __ptext0:
  3802                           	opt stack 0
  3803  008FDA                     _main:
  3804                           	opt stack 17
  3805                           
  3806                           ;main.c: 7: uint16_t t16;
  3807                           ;main.c: 8: __nop();
  3808                           
  3809                           ;incstack = 0
  3810  008FDA  F000               	nop	
  3811                           
  3812                           ;main.c: 10: soc_init();
  3813  008FDC  ECB6  F051         	call	_soc_init	;wreg free
  3814                           
  3815                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  3816  008FE0  0EF4               	movlw	low _defalutRtc
  3817  008FE2  0100               	movlb	0	; () banked
  3818  008FE4  6F60               	movwf	rtc_set@rtc& (0+255),b
  3819  008FE6  0E01               	movlw	high _defalutRtc
  3820  008FE8  0100               	movlb	0	; () banked
  3821  008FEA  6F61               	movwf	(rtc_set@rtc+1)& (0+255),b
  3822  008FEC  ECDE  F039         	call	_rtc_set	;wreg free
  3823                           
  3824                           ;main.c: 12: lcd_init();
  3825  008FF0  ECC6  F051         	call	_lcd_init	;wreg free
  3826                           
  3827                           ;main.c: 14: ads1115_init_all_chip();
  3828  008FF4  EC2A  F04D         	call	_ads1115_init_all_chip	;wreg free
  3829                           
  3830                           ;main.c: 15: data_init_all();
  3831  008FF8  ECD4  F051         	call	_data_init_all	;wreg free
  3832                           
  3833                           ;main.c: 16: in_adc_init();
  3834  008FFC  EC5C  F050         	call	_in_adc_init	;wreg free
  3835                           
  3836                           ;main.c: 18: ui_disp_start_cs600(4);
  3837  009000  0E04               	movlw	4
  3838  009002  EC26  F03E         	call	_ui_disp_start_cs600
  3839                           
  3840                           ;main.c: 23: __nop();
  3841  009006  F000               	nop	
  3842  009008                     l17633:
  3843                           
  3844                           ;main.c: 25: if(glbEvent & (1<<1)){
  3845  009008  A22E               	btfss	_glbEvent,1,c	;volatile
  3846  00900A  D003               	goto	l17639
  3847                           
  3848                           ;main.c: 26: glbEvent &= ~(1<<1);
  3849  00900C  922E               	bcf	_glbEvent,1,c	;volatile
  3850                           
  3851                           ;main.c: 27: event_process_rtc();
  3852  00900E  ECBF  F04F         	call	_event_process_rtc	;wreg free
  3853  009012                     l17639:
  3854                           
  3855                           ;main.c: 28: }
  3856                           ;main.c: 29: if(glbEvent & (1<<0)){
  3857  009012  A02E               	btfss	_glbEvent,0,c	;volatile
  3858  009014  D003               	goto	l17645
  3859                           
  3860                           ;main.c: 30: glbEvent &= ~(1<<0);
  3861  009016  902E               	bcf	_glbEvent,0,c	;volatile
  3862                           
  3863                           ;main.c: 31: event_process_ticker();
  3864  009018  ECEE  F051         	call	_event_process_ticker	;wreg free
  3865  00901C                     l17645:
  3866                           
  3867                           ;main.c: 32: }
  3868                           ;main.c: 33: if(glbEvent & (1<<2)){
  3869  00901C  A42E               	btfss	_glbEvent,2,c	;volatile
  3870  00901E  D003               	goto	l17651
  3871                           
  3872                           ;main.c: 34: glbEvent &= ~(1<<2);
  3873  009020  942E               	bcf	_glbEvent,2,c	;volatile
  3874                           
  3875                           ;main.c: 35: event_process_time_out();
  3876  009022  ECF9  F051         	call	_event_process_time_out	;wreg free
  3877  009026                     l17651:
  3878                           
  3879                           ;main.c: 36: }
  3880                           ;main.c: 38: keyValue=key_polling();
  3881  009026  EC0F  F049         	call	_key_polling	;wreg free
  3882  00902A  0100               	movlb	0	; () banked
  3883  00902C  6FFC               	movwf	_keyValue& (0+255),b	;volatile
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;main.c: 39: if(keyValue!=(0x0)){
  3887  00902E  0100               	movlb	0	; () banked
  3888  009030  51FC               	movf	_keyValue& (0+255),w,b	;volatile
  3889  009032  B4D8               	btfsc	status,2,c
  3890  009034  D7E9               	goto	l17633
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;main.c: 40: key_process();
  3894  009036  EC39  F03D         	call	_key_process	;wreg free
  3895  00903A  D7E6               	goto	l17633
  3896  00903C                     __end_of_main:
  3897                           	opt stack 0
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           postinc0	equ	0xFEE
  3903                           wreg	equ	0xFE8
  3904                           postdec1	equ	0xFE5
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function _ui_disp_start_cs600 *****************
  3910 ;; Defined at:
  3911 ;;		line 147 in file "src/api/ui.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  dly             1    wreg     unsigned char 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  dly             1   28[BANK0 ] unsigned char 
  3916 ;;  buf             6   22[BANK0 ] unsigned char [6]
  3917 ;;  t8              1   29[BANK0 ] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;Total ram usage:        8 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    9
  3934 ;; This function calls:
  3935 ;;		_lcd_disp_all
  3936 ;;		_lcd_disp_logo
  3937 ;;		_lcd_disp_refresh
  3938 ;;		_lcd_show_string_l0
  3939 ;;		_lcd_show_string_l1
  3940 ;;		_m_int8_2_hex
  3941 ;;		_ticker_dly
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text1
  3948  007C4C                     __ptext1:
  3949                           	opt stack 0
  3950  007C4C                     _ui_disp_start_cs600:
  3951                           	opt stack 21
  3952                           
  3953                           ;incstack = 0
  3954                           ;ui_disp_start_cs600@dly stored from wreg
  3955  007C4C  0100               	movlb	0	; () banked
  3956  007C4E  6F7C               	movwf	ui_disp_start_cs600@dly& (0+255),b
  3957                           
  3958                           ;ui.c: 149: uint8_t t8;
  3959                           ;ui.c: 150: uint8_t buf[6]="-00-";
  3960  007C50  EE21  F0EE         	lfsr	2,ui_disp_start_cs600@F7719
  3961  007C54  EE10  F076         	lfsr	1,ui_disp_start_cs600@buf
  3962  007C58  0E05               	movlw	5
  3963  007C5A                     u15891:
  3964  007C5A  CFDB FFE3          	movff	plusw2,plusw1
  3965  007C5E  06E8               	decf	wreg,f,c
  3966  007C60  E2FC               	bc	u15891
  3967                           
  3968                           ;ui.c: 151: lcd_disp_all(0);;
  3969  007C62  0E00               	movlw	0
  3970  007C64  EC4D  F04F         	call	_lcd_disp_all
  3971                           
  3972                           ;ui.c: 152: lcd_show_string_l0((uint8_t*)("cs66"));
  3973  007C68  0EA9               	movlw	low STR_1
  3974  007C6A  0100               	movlb	0	; () banked
  3975  007C6C  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
  3976  007C6E  0EF3               	movlw	high STR_1
  3977  007C70  0100               	movlb	0	; () banked
  3978  007C72  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  3979  007C74  EC14  F045         	call	_lcd_show_string_l0	;wreg free
  3980                           
  3981                           ;ui.c: 153: lcd_disp_logo(1);
  3982  007C78  0E01               	movlw	1
  3983  007C7A  EC35  F04F         	call	_lcd_disp_logo
  3984                           
  3985                           ;ui.c: 154: t8=dly;
  3986  007C7E  C07C  F07D         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  3987                           
  3988                           ;ui.c: 155: if(t8<1)t8=1;
  3989  007C82  0100               	movlb	0	; () banked
  3990  007C84  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  3991  007C86  0100               	movlb	0	; () banked
  3992  007C88  A4D8               	btfss	status,2,c
  3993  007C8A  D026               	goto	l17309
  3994                           
  3995                           ; BSR set to: 0
  3996  007C8C  0E01               	movlw	1
  3997  007C8E  0100               	movlb	0	; () banked
  3998  007C90  6F7D               	movwf	ui_disp_start_cs600@t8& (0+255),b
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;ui.c: 156: while(t8){
  4002  007C92  D022               	goto	l17309
  4003  007C94                     l17297:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;ui.c: 157: m_int8_2_hex(buf+1,t8-1);
  4007  007C94  0E77               	movlw	low (ui_disp_start_cs600@buf+1)
  4008  007C96  0100               	movlb	0	; () banked
  4009  007C98  6F60               	movwf	m_int8_2_hex@str& (0+255),b
  4010  007C9A  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  4011  007C9C  0100               	movlb	0	; () banked
  4012  007C9E  6F61               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  4013  007CA0  0100               	movlb	0	; () banked
  4014  007CA2  057D               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  4015  007CA4  0100               	movlb	0	; () banked
  4016  007CA6  6F62               	movwf	m_int8_2_hex@b& (0+255),b
  4017  007CA8  EC6B  F049         	call	_m_int8_2_hex	;wreg free
  4018                           
  4019                           ;ui.c: 158: buf[4]='\0';
  4020  007CAC  0E00               	movlw	0
  4021  007CAE  0100               	movlb	0	; () banked
  4022  007CB0  6F7A               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;ui.c: 159: lcd_show_string_l1(buf);
  4026  007CB2  0E76               	movlw	low ui_disp_start_cs600@buf
  4027  007CB4  0100               	movlb	0	; () banked
  4028  007CB6  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
  4029  007CB8  0E00               	movlw	high ui_disp_start_cs600@buf
  4030  007CBA  0100               	movlb	0	; () banked
  4031  007CBC  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  4032  007CBE  EC4F  F04C         	call	_lcd_show_string_l1	;wreg free
  4033                           
  4034                           ;ui.c: 161: lcd_disp_refresh();
  4035  007CC2  EC80  F048         	call	_lcd_disp_refresh	;wreg free
  4036                           
  4037                           ;ui.c: 162: ticker_dly(1000);
  4038  007CC6  0E03               	movlw	3
  4039  007CC8  0100               	movlb	0	; () banked
  4040  007CCA  6F61               	movwf	(ticker_dly@ms+1)& (0+255),b
  4041  007CCC  0EE8               	movlw	232
  4042  007CCE  6F60               	movwf	ticker_dly@ms& (0+255),b
  4043  007CD0  ECEF  F04D         	call	_ticker_dly	;wreg free
  4044                           
  4045                           ;ui.c: 163: t8--;
  4046  007CD4  0100               	movlb	0	; () banked
  4047  007CD6  077D               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  4048  007CD8                     l17309:
  4049                           
  4050                           ; BSR set to: 0
  4051  007CD8  0100               	movlb	0	; () banked
  4052  007CDA  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  4053  007CDC  0100               	movlb	0	; () banked
  4054  007CDE  B4D8               	btfsc	status,2,c
  4055  007CE0  0012               	return	
  4056  007CE2  D7D8               	goto	l17297
  4057  007CE4                     __end_of_ui_disp_start_cs600:
  4058                           	opt stack 0
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           postinc0	equ	0xFEE
  4064                           wreg	equ	0xFE8
  4065                           postdec1	equ	0xFE5
  4066                           plusw1	equ	0xFE3
  4067                           fsr1h	equ	0xFE2
  4068                           fsr1l	equ	0xFE1
  4069                           plusw2	equ	0xFDB
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function _ticker_dly *****************
  4073 ;; Defined at:
  4074 ;;		line 49 in file "src/soc/ticker.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  ms              2    0[BANK0 ] unsigned int 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;Total ram usage:        2 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    4
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_ui_disp_start_cs600
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text2
  4103  009BDE                     __ptext2:
  4104                           	opt stack 0
  4105  009BDE                     _ticker_dly:
  4106                           	opt stack 25
  4107                           
  4108                           ;ticker.c: 51: dlyTicker=0;
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;incstack = 0
  4112  009BDE  0E00               	movlw	0
  4113  009BE0  0101               	movlb	1	; () banked
  4114  009BE2  6F5B               	movwf	(_dlyTicker+1)& (0+255),b
  4115  009BE4  0E00               	movlw	0
  4116  009BE6  6F5A               	movwf	_dlyTicker& (0+255),b
  4117                           
  4118                           ;ticker.c: 52: dlyTickerEn=1;
  4119  009BE8  0E01               	movlw	1
  4120  009BEA  6E2B               	movwf	_dlyTickerEn,c
  4121                           
  4122                           ;ticker.c: 53: while(dlyTicker<ms){
  4123  009BEC  D001               	goto	l17099
  4124  009BEE                     l2385:
  4125                           
  4126                           ; BSR set to: 1
  4127                           ;ticker.c: 54: __nop();
  4128  009BEE  F000               	nop	
  4129  009BF0                     l17099:
  4130  009BF0  0100               	movlb	0	; () banked
  4131  009BF2  5160               	movf	ticker_dly@ms& (0+255),w,b
  4132  009BF4  0101               	movlb	1	; () banked
  4133  009BF6  5D5A               	subwf	_dlyTicker& (0+255),w,b
  4134  009BF8  0100               	movlb	0	; () banked
  4135  009BFA  5161               	movf	(ticker_dly@ms+1)& (0+255),w,b
  4136  009BFC  0101               	movlb	1	; () banked
  4137  009BFE  595B               	subwfb	(_dlyTicker+1)& (0+255),w,b
  4138  009C00  A0D8               	btfss	status,0,c
  4139  009C02  D7F5               	goto	l2385
  4140                           
  4141                           ; BSR set to: 1
  4142                           ;ticker.c: 55: }
  4143                           ;ticker.c: 56: dlyTickerEn=0;
  4144                           
  4145                           ; BSR set to: 1
  4146  009C04  0E00               	movlw	0
  4147  009C06  6E2B               	movwf	_dlyTickerEn,c
  4148                           
  4149                           ;ticker.c: 57: dlyTicker=0;
  4150  009C08  0E00               	movlw	0
  4151  009C0A  0101               	movlb	1	; () banked
  4152  009C0C  6F5B               	movwf	(_dlyTicker+1)& (0+255),b
  4153  009C0E  0E00               	movlw	0
  4154  009C10  6F5A               	movwf	_dlyTicker& (0+255),b
  4155                           
  4156                           ; BSR set to: 1
  4157  009C12  0012               	return		;funcret
  4158  009C14                     __end_of_ticker_dly:
  4159                           	opt stack 0
  4160                           tblptru	equ	0xFF8
  4161                           tblptrh	equ	0xFF7
  4162                           tblptrl	equ	0xFF6
  4163                           tablat	equ	0xFF5
  4164                           postinc0	equ	0xFEE
  4165                           wreg	equ	0xFE8
  4166                           postdec1	equ	0xFE5
  4167                           plusw1	equ	0xFE3
  4168                           fsr1h	equ	0xFE2
  4169                           fsr1l	equ	0xFE1
  4170                           plusw2	equ	0xFDB
  4171                           status	equ	0xFD8
  4172                           
  4173 ;; *************** function _m_int8_2_hex *****************
  4174 ;; Defined at:
  4175 ;;		line 243 in file "src/depend/m_string.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  str             2    0[BANK0 ] PTR unsigned char 
  4178 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  4179 ;;  b               1    2[BANK0 ] unsigned char 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  t8              1   31[COMRAM] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4191 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;Total ram usage:        4 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    4
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_ui_disp_start_cs600
  4202 ;;		_ui_disp_rtc_mm_ss
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text3
  4207  0092D6                     __ptext3:
  4208                           	opt stack 0
  4209  0092D6                     _m_int8_2_hex:
  4210                           	opt stack 25
  4211                           
  4212                           ;m_string.c: 245: uint8_t t8;
  4213                           ;m_string.c: 246: t8=b;
  4214                           
  4215                           ; BSR set to: 1
  4216                           ;incstack = 0
  4217  0092D6  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  4218                           
  4219                           ;m_string.c: 247: t8>>=4;
  4220  0092DA  3A20               	swapf	m_int8_2_hex@t8,f,c
  4221  0092DC  0E0F               	movlw	15
  4222  0092DE  1620               	andwf	m_int8_2_hex@t8,f,c
  4223                           
  4224                           ;m_string.c: 248: t8 &= 0x0f;
  4225  0092E0  0E0F               	movlw	15
  4226  0092E2  1620               	andwf	m_int8_2_hex@t8,f,c
  4227                           
  4228                           ;m_string.c: 249: str[0]=HexTable[t8];
  4229  0092E4  5020               	movf	m_int8_2_hex@t8,w,c
  4230  0092E6  0D01               	mullw	1
  4231  0092E8  0E06               	movlw	low _HexTable
  4232  0092EA  24F3               	addwf	prodl,w,c
  4233  0092EC  6EF6               	movwf	tblptrl,c
  4234  0092EE  0EEF               	movlw	high _HexTable
  4235  0092F0  20F4               	addwfc	prodh,w,c
  4236  0092F2  6EF7               	movwf	tblptrh,c
  4237  0092F4                     	if	0	;There are less than 3 active tblptr bytes
  4238  0092F4                     	endif
  4239  0092F4  C060  FFD9         	movff	m_int8_2_hex@str,fsr2l
  4240  0092F8  C061  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  4241  0092FC  0008               	tblrd		*
  4242  0092FE  CFF5 FFDF          	movff	tablat,indf2
  4243                           
  4244                           ;m_string.c: 251: t8=b;
  4245  009302  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  4246                           
  4247                           ;m_string.c: 253: t8 &= 0x0f;
  4248  009306  0E0F               	movlw	15
  4249  009308  1620               	andwf	m_int8_2_hex@t8,f,c
  4250                           
  4251                           ;m_string.c: 254: str[1]=HexTable[t8];
  4252  00930A  5020               	movf	m_int8_2_hex@t8,w,c
  4253  00930C  0D01               	mullw	1
  4254  00930E  0E06               	movlw	low _HexTable
  4255  009310  24F3               	addwf	prodl,w,c
  4256  009312  6EF6               	movwf	tblptrl,c
  4257  009314  0EEF               	movlw	high _HexTable
  4258  009316  20F4               	addwfc	prodh,w,c
  4259  009318  6EF7               	movwf	tblptrh,c
  4260  00931A                     	if	0	;There are less than 3 active tblptr bytes
  4261  00931A                     	endif
  4262  00931A  0100               	movlb	0	; () banked
  4263  00931C  EE20 F001          	lfsr	2,1
  4264  009320  5160               	movf	m_int8_2_hex@str& (0+255),w,b
  4265  009322  26D9               	addwf	fsr2l,f,c
  4266  009324  5161               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  4267  009326  22DA               	addwfc	fsr2h,f,c
  4268  009328  0008               	tblrd		*
  4269  00932A  CFF5 FFDF          	movff	tablat,indf2
  4270                           
  4271                           ; BSR set to: 0
  4272  00932E  0012               	return		;funcret
  4273  009330                     __end_of_m_int8_2_hex:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           postdec1	equ	0xFE5
  4284                           plusw1	equ	0xFE3
  4285                           fsr1h	equ	0xFE2
  4286                           fsr1l	equ	0xFE1
  4287                           indf2	equ	0xFDF
  4288                           plusw2	equ	0xFDB
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _soc_init *****************
  4294 ;; Defined at:
  4295 ;;		line 2 in file "src/soc/soc.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    6
  4316 ;; This function calls:
  4317 ;;		_rtc_init
  4318 ;;		_sys_ticker_init
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text4
  4325  00A36C                     __ptext4:
  4326                           	opt stack 0
  4327  00A36C                     _soc_init:
  4328                           	opt stack 24
  4329                           
  4330                           ;soc.c: 5: sys_ticker_init();
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;incstack = 0
  4334  00A36C  ECBE  F051         	call	_sys_ticker_init	;wreg free
  4335                           
  4336                           ;soc.c: 6: rtc_init();
  4337  00A370  ECB0  F04C         	call	_rtc_init	;wreg free
  4338                           
  4339                           ;soc.c: 8: INTCONbits.PEIE = 1;
  4340  00A374  8CF2               	bsf	intcon,6,c	;volatile
  4341                           
  4342                           ;soc.c: 9: INTCONbits.GIE = 1;
  4343  00A376  8EF2               	bsf	intcon,7,c	;volatile
  4344                           
  4345                           ;soc.c: 11: RCONbits.IPEN=0;
  4346  00A378  9ED0               	bcf	4048,7,c	;volatile
  4347  00A37A  0012               	return		;funcret
  4348  00A37C                     __end_of_soc_init:
  4349                           	opt stack 0
  4350                           tblptru	equ	0xFF8
  4351                           tblptrh	equ	0xFF7
  4352                           tblptrl	equ	0xFF6
  4353                           tablat	equ	0xFF5
  4354                           prodh	equ	0xFF4
  4355                           prodl	equ	0xFF3
  4356                           intcon	equ	0xFF2
  4357                           postinc0	equ	0xFEE
  4358                           wreg	equ	0xFE8
  4359                           postdec1	equ	0xFE5
  4360                           plusw1	equ	0xFE3
  4361                           fsr1h	equ	0xFE2
  4362                           fsr1l	equ	0xFE1
  4363                           indf2	equ	0xFDF
  4364                           plusw2	equ	0xFDB
  4365                           fsr2h	equ	0xFDA
  4366                           fsr2l	equ	0xFD9
  4367                           status	equ	0xFD8
  4368                           
  4369 ;; *************** function _sys_ticker_init *****************
  4370 ;; Defined at:
  4371 ;;		line 29 in file "src/soc/ticker.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    4
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_soc_init
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text5
  4400  00A37C                     __ptext5:
  4401                           	opt stack 0
  4402  00A37C                     _sys_ticker_init:
  4403                           	opt stack 25
  4404                           
  4405                           ;ticker.c: 32: PR2=(uint8_t)((11059200/4/16/16/100));
  4406                           
  4407                           ;incstack = 0
  4408  00A37C  0E6C               	movlw	108
  4409  00A37E  6ECB               	movwf	4043,c	;volatile
  4410                           
  4411                           ;ticker.c: 33: IPR1bits.TMR2IP=1;
  4412  00A380  829F               	bsf	3999,1,c	;volatile
  4413                           
  4414                           ;ticker.c: 34: PIR1bits.TMR2IF=0;
  4415  00A382  929E               	bcf	3998,1,c	;volatile
  4416                           
  4417                           ;ticker.c: 35: PIE1bits.TMR2IE=1;
  4418  00A384  829D               	bsf	3997,1,c	;volatile
  4419                           
  4420                           ;ticker.c: 37: T2CON=0x7f;
  4421  00A386  0E7F               	movlw	127
  4422  00A388  6ECA               	movwf	4042,c	;volatile
  4423  00A38A  0012               	return		;funcret
  4424  00A38C                     __end_of_sys_ticker_init:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           intcon	equ	0xFF2
  4433                           postinc0	equ	0xFEE
  4434                           wreg	equ	0xFE8
  4435                           postdec1	equ	0xFE5
  4436                           plusw1	equ	0xFE3
  4437                           fsr1h	equ	0xFE2
  4438                           fsr1l	equ	0xFE1
  4439                           indf2	equ	0xFDF
  4440                           plusw2	equ	0xFDB
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8
  4444                           
  4445 ;; *************** function _rtc_init *****************
  4446 ;; Defined at:
  4447 ;;		line 25 in file "src/soc/rtc.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    5
  4468 ;; This function calls:
  4469 ;;		_rtcc_reg_wr_disable
  4470 ;;		_rtcc_reg_wr_enable
  4471 ;; This function is called by:
  4472 ;;		_soc_init
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text6
  4477  009960                     __ptext6:
  4478                           	opt stack 0
  4479  009960                     _rtc_init:
  4480                           	opt stack 24
  4481                           
  4482                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  4483                           
  4484                           ;incstack = 0
  4485  009960  010F               	movlb	15	; () banked
  4486  009962  9554               	bcf	84,2,b	;volatile
  4487                           
  4488                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  4489  009964  010F               	movlb	15	; () banked
  4490  009966  8354               	bsf	84,1,b	;volatile
  4491                           
  4492                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  4493  009968  010F               	movlb	15	; () banked
  4494  00996A  955F               	bcf	95,2,b	;volatile
  4495                           
  4496                           ;rtc.c: 31: ALRMRPT=0xff;
  4497  00996C  010F               	movlb	15	; () banked
  4498  00996E  695A               	setf	90,b	;volatile
  4499                           
  4500                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  4501  009970  010F               	movlb	15	; () banked
  4502  009972  8F5B               	bsf	91,7,b	;volatile
  4503                           
  4504                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  4505  009974  010F               	movlb	15	; () banked
  4506  009976  8D5B               	bsf	91,6,b	;volatile
  4507                           
  4508                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  4509  009978  010F               	movlb	15	; () banked
  4510  00997A  955B               	bcf	91,2,b	;volatile
  4511  00997C  975B               	bcf	91,3,b	;volatile
  4512  00997E  995B               	bcf	91,4,b	;volatile
  4513  009980  9B5B               	bcf	91,5,b	;volatile
  4514                           
  4515                           ;rtc.c: 37: __nop();
  4516  009982  F000               	nop	
  4517                           
  4518                           ;rtc.c: 38: rtcc_reg_wr_enable();
  4519  009984  ECE2  F051         	call	_rtcc_reg_wr_enable	;wreg free
  4520                           
  4521                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  4522  009988  010F               	movlb	15	; () banked
  4523  00998A  8F5F               	bsf	95,7,b	;volatile
  4524                           
  4525                           ;rtc.c: 42: rtcc_reg_wr_disable();
  4526  00998C  ECE8  F051         	call	_rtcc_reg_wr_disable	;wreg free
  4527                           
  4528                           ;rtc.c: 43: __nop();
  4529  009990  F000               	nop	
  4530                           
  4531                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  4532  009992  80A5               	bsf	4005,0,c	;volatile
  4533                           
  4534                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  4535  009994  90A4               	bcf	4004,0,c	;volatile
  4536                           
  4537                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  4538  009996  80A3               	bsf	4003,0,c	;volatile
  4539                           
  4540                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  4541  009998  86CD               	bsf	4045,3,c	;volatile
  4542                           
  4543                           ;rtc.c: 51: __nop();
  4544  00999A  F000               	nop	
  4545  00999C  0012               	return		;funcret
  4546  00999E                     __end_of_rtc_init:
  4547                           	opt stack 0
  4548                           tblptru	equ	0xFF8
  4549                           tblptrh	equ	0xFF7
  4550                           tblptrl	equ	0xFF6
  4551                           tablat	equ	0xFF5
  4552                           prodh	equ	0xFF4
  4553                           prodl	equ	0xFF3
  4554                           intcon	equ	0xFF2
  4555                           postinc0	equ	0xFEE
  4556                           wreg	equ	0xFE8
  4557                           postdec1	equ	0xFE5
  4558                           plusw1	equ	0xFE3
  4559                           fsr1h	equ	0xFE2
  4560                           fsr1l	equ	0xFE1
  4561                           indf2	equ	0xFDF
  4562                           plusw2	equ	0xFDB
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function _rtc_set *****************
  4568 ;; Defined at:
  4569 ;;		line 54 in file "src/soc/rtc.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  4572 ;;		 -> defalutRtc(7), 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  stp             2    2[BANK0 ] PTR struct .
  4575 ;;		 -> defalutRtc(7), 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;Total ram usage:        4 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    5
  4592 ;; This function calls:
  4593 ;;		_rtcc_reg_wr_disable
  4594 ;;		_rtcc_reg_wr_enable
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text7
  4601  0073BC                     __ptext7:
  4602                           	opt stack 0
  4603  0073BC                     _rtc_set:
  4604                           	opt stack 25
  4605                           
  4606                           ;rtc.c: 56: st_RtcDef* stp;
  4607                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  4608                           
  4609                           ;incstack = 0
  4610  0073BC  C060  F062         	movff	rtc_set@rtc,rtc_set@stp
  4611  0073C0  C061  F063         	movff	rtc_set@rtc+1,rtc_set@stp+1
  4612                           
  4613                           ;rtc.c: 58: rtcc_reg_wr_enable();
  4614  0073C4  ECE2  F051         	call	_rtcc_reg_wr_enable	;wreg free
  4615                           
  4616                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  4617  0073C8  0EFC               	movlw	-4
  4618  0073CA  010F               	movlb	15	; () banked
  4619  0073CC  175F               	andwf	95,f,b	;volatile
  4620                           
  4621                           ; BSR set to: 15
  4622                           ;rtc.c: 61: RTCVALL=stp->second;
  4623  0073CE  0100               	movlb	0	; () banked
  4624  0073D0  EE20 F005          	lfsr	2,5
  4625  0073D4  5162               	movf	rtc_set@stp& (0+255),w,b
  4626  0073D6  26D9               	addwf	fsr2l,f,c
  4627  0073D8  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4628  0073DA  22DA               	addwfc	fsr2h,f,c
  4629  0073DC  50DF               	movf	indf2,w,c
  4630  0073DE  010F               	movlb	15	; () banked
  4631  0073E0  6F5C               	movwf	92,b	;volatile
  4632                           
  4633                           ; BSR set to: 15
  4634                           ;rtc.c: 62: RTCVALH=stp->minute;
  4635  0073E2  0100               	movlb	0	; () banked
  4636  0073E4  EE20 F004          	lfsr	2,4
  4637  0073E8  5162               	movf	rtc_set@stp& (0+255),w,b
  4638  0073EA  26D9               	addwf	fsr2l,f,c
  4639  0073EC  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4640  0073EE  22DA               	addwfc	fsr2h,f,c
  4641  0073F0  50DF               	movf	indf2,w,c
  4642  0073F2  010F               	movlb	15	; () banked
  4643  0073F4  6F5D               	movwf	93,b	;volatile
  4644                           
  4645                           ; BSR set to: 15
  4646                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  4647  0073F6  010F               	movlb	15	; () banked
  4648  0073F8  515F               	movf	95,w,b	;volatile
  4649  0073FA  0BFC               	andlw	-4
  4650  0073FC  0901               	iorlw	1
  4651  0073FE  6F5F               	movwf	95,b	;volatile
  4652                           
  4653                           ; BSR set to: 15
  4654                           ;rtc.c: 64: RTCVALL=stp->hour;
  4655  007400  0100               	movlb	0	; () banked
  4656  007402  EE20 F003          	lfsr	2,3
  4657  007406  5162               	movf	rtc_set@stp& (0+255),w,b
  4658  007408  26D9               	addwf	fsr2l,f,c
  4659  00740A  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4660  00740C  22DA               	addwfc	fsr2h,f,c
  4661  00740E  50DF               	movf	indf2,w,c
  4662  007410  010F               	movlb	15	; () banked
  4663  007412  6F5C               	movwf	92,b	;volatile
  4664                           
  4665                           ; BSR set to: 15
  4666                           ;rtc.c: 65: RTCVALH=stp->day;
  4667  007414  0100               	movlb	0	; () banked
  4668  007416  EE20 F006          	lfsr	2,6
  4669  00741A  5162               	movf	rtc_set@stp& (0+255),w,b
  4670  00741C  26D9               	addwf	fsr2l,f,c
  4671  00741E  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4672  007420  22DA               	addwfc	fsr2h,f,c
  4673  007422  50DF               	movf	indf2,w,c
  4674  007424  010F               	movlb	15	; () banked
  4675  007426  6F5D               	movwf	93,b	;volatile
  4676                           
  4677                           ; BSR set to: 15
  4678                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4679  007428  010F               	movlb	15	; () banked
  4680  00742A  515F               	movf	95,w,b	;volatile
  4681  00742C  0BFC               	andlw	-4
  4682  00742E  0902               	iorlw	2
  4683  007430  6F5F               	movwf	95,b	;volatile
  4684                           
  4685                           ; BSR set to: 15
  4686                           ;rtc.c: 67: RTCVALL=stp->date;
  4687  007432  0100               	movlb	0	; () banked
  4688  007434  EE20 F002          	lfsr	2,2
  4689  007438  5162               	movf	rtc_set@stp& (0+255),w,b
  4690  00743A  26D9               	addwf	fsr2l,f,c
  4691  00743C  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4692  00743E  22DA               	addwfc	fsr2h,f,c
  4693  007440  50DF               	movf	indf2,w,c
  4694  007442  010F               	movlb	15	; () banked
  4695  007444  6F5C               	movwf	92,b	;volatile
  4696                           
  4697                           ; BSR set to: 15
  4698                           ;rtc.c: 68: RTCVALH=stp->month;
  4699  007446  0100               	movlb	0	; () banked
  4700  007448  EE20 F001          	lfsr	2,1
  4701  00744C  5162               	movf	rtc_set@stp& (0+255),w,b
  4702  00744E  26D9               	addwf	fsr2l,f,c
  4703  007450  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4704  007452  22DA               	addwfc	fsr2h,f,c
  4705  007454  50DF               	movf	indf2,w,c
  4706  007456  010F               	movlb	15	; () banked
  4707  007458  6F5D               	movwf	93,b	;volatile
  4708                           
  4709                           ; BSR set to: 15
  4710                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4711  00745A  0E03               	movlw	3
  4712  00745C  010F               	movlb	15	; () banked
  4713  00745E  135F               	iorwf	95,f,b	;volatile
  4714                           
  4715                           ; BSR set to: 15
  4716                           ;rtc.c: 70: RTCVALL=stp->year;
  4717  007460  C062  FFD9         	movff	rtc_set@stp,fsr2l
  4718  007464  C063  FFDA         	movff	rtc_set@stp+1,fsr2h
  4719  007468  50DF               	movf	indf2,w,c
  4720  00746A  010F               	movlb	15	; () banked
  4721  00746C  6F5C               	movwf	92,b	;volatile
  4722                           
  4723                           ; BSR set to: 15
  4724                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4725  00746E  ECE8  F051         	call	_rtcc_reg_wr_disable	;wreg free
  4726  007472  0012               	return		;funcret
  4727  007474                     __end_of_rtc_set:
  4728                           	opt stack 0
  4729                           tblptru	equ	0xFF8
  4730                           tblptrh	equ	0xFF7
  4731                           tblptrl	equ	0xFF6
  4732                           tablat	equ	0xFF5
  4733                           prodh	equ	0xFF4
  4734                           prodl	equ	0xFF3
  4735                           intcon	equ	0xFF2
  4736                           postinc0	equ	0xFEE
  4737                           wreg	equ	0xFE8
  4738                           postdec1	equ	0xFE5
  4739                           plusw1	equ	0xFE3
  4740                           fsr1h	equ	0xFE2
  4741                           fsr1l	equ	0xFE1
  4742                           indf2	equ	0xFDF
  4743                           plusw2	equ	0xFDB
  4744                           fsr2h	equ	0xFDA
  4745                           fsr2l	equ	0xFD9
  4746                           status	equ	0xFD8
  4747                           
  4748 ;; *************** function _rtcc_reg_wr_enable *****************
  4749 ;; Defined at:
  4750 ;;		line 9 in file "src/soc/rtc.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		None
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;Total ram usage:        0 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    4
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_rtc_init
  4775 ;;		_rtc_set
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text8
  4780  00A3C4                     __ptext8:
  4781                           	opt stack 0
  4782  00A3C4                     _rtcc_reg_wr_enable:
  4783                           	opt stack 24
  4784                           
  4785                           ;incstack = 0
  4786  00A3C4  0E55               	movlw	85	;# 
  4787  00A3C6  6EA7               	movwf	4007,c	;# 
  4788  00A3C8  0EAA               	movlw	170	;# 
  4789  00A3CA  6EA7               	movwf	4007,c	;# 
  4790  00A3CC  8B5F               	bsf	3935,5,b	;# 
  4791  00A3CE  0012               	return		;funcret
  4792  00A3D0                     __end_of_rtcc_reg_wr_enable:
  4793                           	opt stack 0
  4794                           tblptru	equ	0xFF8
  4795                           tblptrh	equ	0xFF7
  4796                           tblptrl	equ	0xFF6
  4797                           tablat	equ	0xFF5
  4798                           prodh	equ	0xFF4
  4799                           prodl	equ	0xFF3
  4800                           intcon	equ	0xFF2
  4801                           postinc0	equ	0xFEE
  4802                           wreg	equ	0xFE8
  4803                           postdec1	equ	0xFE5
  4804                           plusw1	equ	0xFE3
  4805                           fsr1h	equ	0xFE2
  4806                           fsr1l	equ	0xFE1
  4807                           indf2	equ	0xFDF
  4808                           plusw2	equ	0xFDB
  4809                           fsr2h	equ	0xFDA
  4810                           fsr2l	equ	0xFD9
  4811                           status	equ	0xFD8
  4812                           
  4813 ;; *************** function _rtcc_reg_wr_disable *****************
  4814 ;; Defined at:
  4815 ;;		line 17 in file "src/soc/rtc.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		None
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;Total ram usage:        0 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    4
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_rtc_init
  4840 ;;		_rtc_set
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text9
  4845  00A3D0                     __ptext9:
  4846                           	opt stack 0
  4847  00A3D0                     _rtcc_reg_wr_disable:
  4848                           	opt stack 24
  4849                           
  4850                           ;incstack = 0
  4851  00A3D0  0E55               	movlw	85	;# 
  4852  00A3D2  6EA7               	movwf	4007,c	;# 
  4853  00A3D4  0EAA               	movlw	170	;# 
  4854  00A3D6  6EA7               	movwf	4007,c	;# 
  4855  00A3D8  9B5F               	bcf	3935,5,b	;# 
  4856  00A3DA  0012               	return		;funcret
  4857  00A3DC                     __end_of_rtcc_reg_wr_disable:
  4858                           	opt stack 0
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           prodh	equ	0xFF4
  4864                           prodl	equ	0xFF3
  4865                           intcon	equ	0xFF2
  4866                           postinc0	equ	0xFEE
  4867                           wreg	equ	0xFE8
  4868                           postdec1	equ	0xFE5
  4869                           plusw1	equ	0xFE3
  4870                           fsr1h	equ	0xFE2
  4871                           fsr1l	equ	0xFE1
  4872                           indf2	equ	0xFDF
  4873                           plusw2	equ	0xFDB
  4874                           fsr2h	equ	0xFDA
  4875                           fsr2l	equ	0xFD9
  4876                           status	equ	0xFD8
  4877                           
  4878 ;; *************** function _lcd_init *****************
  4879 ;; Defined at:
  4880 ;;		line 667 in file "src/driver/lcd.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    6
  4901 ;; This function calls:
  4902 ;;		_lcd_bl_on
  4903 ;;		_lcd_config
  4904 ;; This function is called by:
  4905 ;;		_main
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text10
  4910  00A38C                     __ptext10:
  4911                           	opt stack 0
  4912  00A38C                     _lcd_init:
  4913                           	opt stack 24
  4914                           
  4915                           ;lcd.c: 669: lcd_config();
  4916                           
  4917                           ;incstack = 0
  4918  00A38C  EC47  F04D         	call	_lcd_config	;wreg free
  4919                           
  4920                           ;lcd.c: 671: LCDCON=0x8f;;
  4921  00A390  0E8F               	movlw	143
  4922  00A392  6EA8               	movwf	4008,c	;volatile
  4923                           
  4924                           ;lcd.c: 672: lcd_bl_on();
  4925  00A394  ECF4  F051         	call	_lcd_bl_on	;wreg free
  4926  00A398  0012               	return		;funcret
  4927  00A39A                     __end_of_lcd_init:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           prodh	equ	0xFF4
  4934                           prodl	equ	0xFF3
  4935                           intcon	equ	0xFF2
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           postdec1	equ	0xFE5
  4939                           plusw1	equ	0xFE3
  4940                           fsr1h	equ	0xFE2
  4941                           fsr1l	equ	0xFE1
  4942                           indf2	equ	0xFDF
  4943                           plusw2	equ	0xFDB
  4944                           fsr2h	equ	0xFDA
  4945                           fsr2l	equ	0xFD9
  4946                           status	equ	0xFD8
  4947                           
  4948 ;; *************** function _lcd_config *****************
  4949 ;; Defined at:
  4950 ;;		line 613 in file "src/driver/lcd.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    5
  4971 ;; This function calls:
  4972 ;;		_lcd_disp_all
  4973 ;; This function is called by:
  4974 ;;		_lcd_init
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text11
  4979  009A8E                     __ptext11:
  4980                           	opt stack 0
  4981  009A8E                     _lcd_config:
  4982                           	opt stack 24
  4983                           
  4984                           ;lcd.c: 622: LCDREG=0;
  4985                           
  4986                           ;incstack = 0
  4987  009A8E  0E00               	movlw	0
  4988  009A90  6ED2               	movwf	4050,c	;volatile
  4989                           
  4990                           ;lcd.c: 623: LCDREGbits.CPEN=1;
  4991  009A92  8CD2               	bsf	4050,6,c	;volatile
  4992                           
  4993                           ;lcd.c: 624: LCDREGbits.BIAS=7;
  4994  009A94  86D2               	bsf	4050,3,c	;volatile
  4995  009A96  88D2               	bsf	4050,4,c	;volatile
  4996  009A98  8AD2               	bsf	4050,5,c	;volatile
  4997                           
  4998                           ;lcd.c: 625: LCDREGbits.MODE13=1;
  4999  009A9A  84D2               	bsf	4050,2,c	;volatile
  5000                           
  5001                           ;lcd.c: 627: LCDPSbits.WFT = 0;
  5002  009A9C  9EAA               	bcf	4010,7,c	;volatile
  5003                           
  5004                           ;lcd.c: 628: LCDPSbits.BIASMD = 0;
  5005  009A9E  9CAA               	bcf	4010,6,c	;volatile
  5006                           
  5007                           ;lcd.c: 629: LCDPSbits.LP3 = 0;
  5008  009AA0  96AA               	bcf	4010,3,c	;volatile
  5009                           
  5010                           ;lcd.c: 630: LCDPSbits.LP2 = 1;
  5011  009AA2  84AA               	bsf	4010,2,c	;volatile
  5012                           
  5013                           ;lcd.c: 631: LCDPSbits.LP1 = 0;
  5014  009AA4  92AA               	bcf	4010,1,c	;volatile
  5015                           
  5016                           ;lcd.c: 632: LCDPSbits.LP0 = 0;
  5017  009AA6  90AA               	bcf	4010,0,c	;volatile
  5018                           
  5019                           ;lcd.c: 635: LCDSE0 = 0b11111111;
  5020  009AA8  68A9               	setf	4009,c	;volatile
  5021                           
  5022                           ;lcd.c: 636: LCDSE1 = 0b11100000;
  5023  009AAA  0EE0               	movlw	224
  5024  009AAC  6EB6               	movwf	4022,c	;volatile
  5025                           
  5026                           ;lcd.c: 637: LCDSE2 = 0b11111000;
  5027  009AAE  0EF8               	movlw	248
  5028  009AB0  6EB7               	movwf	4023,c	;volatile
  5029                           
  5030                           ;lcd.c: 638: LCDSE3 = 0b11000011;
  5031  009AB2  0EC3               	movlw	195
  5032  009AB4  6EB8               	movwf	4024,c	;volatile
  5033                           
  5034                           ;lcd.c: 639: LCDSE4 = 0b11111110;
  5035  009AB6  0EFE               	movlw	254
  5036  009AB8  6EB9               	movwf	4025,c	;volatile
  5037                           
  5038                           ;lcd.c: 640: LCDSE5 = 0b11001111;
  5039  009ABA  0ECF               	movlw	207
  5040  009ABC  6EBA               	movwf	4026,c	;volatile
  5041                           
  5042                           ;lcd.c: 643: lcd_disp_all(0x00);;
  5043  009ABE  0E00               	movlw	0
  5044  009AC0  EC4D  F04F         	call	_lcd_disp_all
  5045  009AC4  0012               	return		;funcret
  5046  009AC6                     __end_of_lcd_config:
  5047                           	opt stack 0
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           postdec1	equ	0xFE5
  5058                           plusw1	equ	0xFE3
  5059                           fsr1h	equ	0xFE2
  5060                           fsr1l	equ	0xFE1
  5061                           indf2	equ	0xFDF
  5062                           plusw2	equ	0xFDB
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _lcd_bl_on *****************
  5068 ;; Defined at:
  5069 ;;		line 648 in file "src/driver/lcd.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    4
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_lcd_init
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text12
  5098  00A3E8                     __ptext12:
  5099                           	opt stack 0
  5100  00A3E8                     _lcd_bl_on:
  5101                           	opt stack 25
  5102                           
  5103                           ;incstack = 0
  5104                           ;lcd.c: 650: do{TRISG &= ~(1<<4);}while(0);;
  5105  00A3E8  9898               	bcf	3992,4,c	;volatile
  5106                           
  5107                           ;lcd.c: 651: RTCCFGbits.RTCOE=1;
  5108  00A3EA  010F               	movlb	15	; () banked
  5109  00A3EC  855F               	bsf	95,2,b	;volatile
  5110                           
  5111                           ; BSR set to: 15
  5112                           
  5113                           ;lcd.c: 652: do{LATG |= (1<<4);}while(0);;
  5114  00A3EE  888F               	bsf	3983,4,c	;volatile
  5115  00A3F0  0012               	return	
  5116  00A3F2                     __end_of_lcd_bl_on:
  5117                           	opt stack 0
  5118                           tblptru	equ	0xFF8
  5119                           tblptrh	equ	0xFF7
  5120                           tblptrl	equ	0xFF6
  5121                           tablat	equ	0xFF5
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           intcon	equ	0xFF2
  5125                           postinc0	equ	0xFEE
  5126                           wreg	equ	0xFE8
  5127                           postdec1	equ	0xFE5
  5128                           plusw1	equ	0xFE3
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           indf2	equ	0xFDF
  5132                           plusw2	equ	0xFDB
  5133                           fsr2h	equ	0xFDA
  5134                           fsr2l	equ	0xFD9
  5135                           status	equ	0xFD8
  5136                           
  5137 ;; *************** function _key_process *****************
  5138 ;; Defined at:
  5139 ;;		line 960 in file "src/api/key_menu.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  tm              2    9[BANK3 ] unsigned int 
  5144 ;;  key             1   11[BANK3 ] unsigned char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;Total ram usage:        3 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:   13
  5161 ;; This function calls:
  5162 ;;		_key_process_down
  5163 ;;		_key_process_set
  5164 ;;		_key_process_set_down_long
  5165 ;;		_key_process_set_long
  5166 ;;		_key_process_up
  5167 ;;		_key_waite_release
  5168 ;;		_ui_disp_menu
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;;		_event_process
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text13
  5176  007A72                     __ptext13:
  5177                           	opt stack 0
  5178  007A72                     _key_process:
  5179                           	opt stack 17
  5180                           
  5181                           ;key_menu.c: 962: uint16_t tm;
  5182                           ;key_menu.c: 963: uint8_t key;
  5183                           ;key_menu.c: 964: tm=key_waite_release(2000,&key);
  5184                           
  5185                           ; BSR set to: 15
  5186                           ;incstack = 0
  5187  007A72  0E07               	movlw	7
  5188  007A74  0100               	movlb	0	; () banked
  5189  007A76  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5190  007A78  0ED0               	movlw	208
  5191  007A7A  6F68               	movwf	key_waite_release@timeout& (0+255),b
  5192  007A7C  0ED5               	movlw	low key_process@key
  5193  007A7E  0100               	movlb	0	; () banked
  5194  007A80  6F6A               	movwf	key_waite_release@key& (0+255),b
  5195  007A82  0E03               	movlw	high key_process@key
  5196  007A84  0100               	movlb	0	; () banked
  5197  007A86  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  5198  007A88  EC1E  F04B         	call	_key_waite_release	;wreg free
  5199  007A8C  C068  F3D3         	movff	?_key_waite_release,key_process@tm
  5200  007A90  C069  F3D4         	movff	?_key_waite_release+1,key_process@tm+1
  5201                           
  5202                           ;key_menu.c: 965: if(tm>=2000){
  5203  007A94  0ED0               	movlw	208
  5204  007A96  0103               	movlb	3	; () banked
  5205  007A98  5DD3               	subwf	key_process@tm& (0+255),w,b
  5206  007A9A  0E07               	movlw	7
  5207  007A9C  0103               	movlb	3	; () banked
  5208  007A9E  59D4               	subwfb	(key_process@tm+1)& (0+255),w,b
  5209  007AA0  A0D8               	btfss	status,0,c
  5210  007AA2  D010               	goto	l17265
  5211                           
  5212                           ; BSR set to: 3
  5213                           ;key_menu.c: 967: if(key==(0x01<<0x02)){
  5214  007AA4  0E04               	movlw	4
  5215  007AA6  0103               	movlb	3	; () banked
  5216  007AA8  19D5               	xorwf	key_process@key& (0+255),w,b
  5217  007AAA  A4D8               	btfss	status,2,c
  5218  007AAC  D003               	goto	l17261
  5219                           
  5220                           ; BSR set to: 3
  5221                           ;key_menu.c: 968: key_process_set_long();
  5222  007AAE  EC3A  F03A         	call	_key_process_set_long	;wreg free
  5223                           
  5224                           ;key_menu.c: 969: }else if(key == ((0x01<<0x02)+(0x01<<0x0))){
  5225  007AB2  D01D               	goto	l17277
  5226  007AB4                     l17261:
  5227  007AB4  0E05               	movlw	5
  5228  007AB6  0103               	movlb	3	; () banked
  5229  007AB8  19D5               	xorwf	key_process@key& (0+255),w,b
  5230  007ABA  A4D8               	btfss	status,2,c
  5231  007ABC  D018               	goto	l17277
  5232                           
  5233                           ; BSR set to: 3
  5234                           ;key_menu.c: 970: key_process_set_down_long();
  5235  007ABE  ECAE  F035         	call	_key_process_set_down_long	;wreg free
  5236                           
  5237                           ;key_menu.c: 971: }
  5238                           ;key_menu.c: 972: }else{
  5239  007AC2  D015               	goto	l17277
  5240  007AC4                     l17265:
  5241                           
  5242                           ;key_menu.c: 974: if(keyValue == (0x01<<0x0)){
  5243  007AC4  0100               	movlb	0	; () banked
  5244  007AC6  05FC               	decf	_keyValue& (0+255),w,b	;volatile
  5245  007AC8  A4D8               	btfss	status,2,c
  5246  007ACA  D003               	goto	l17269
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;key_menu.c: 975: key_process_down();
  5250  007ACC  EC93  F028         	call	_key_process_down	;wreg free
  5251                           
  5252                           ;key_menu.c: 976: }else if(keyValue == (0x01<<0x01)){
  5253  007AD0  D00E               	goto	l17277
  5254  007AD2                     l17269:
  5255  007AD2  0E02               	movlw	2
  5256  007AD4  0100               	movlb	0	; () banked
  5257  007AD6  19FC               	xorwf	_keyValue& (0+255),w,b	;volatile
  5258  007AD8  A4D8               	btfss	status,2,c
  5259  007ADA  D003               	goto	l17273
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;key_menu.c: 977: key_process_up();
  5263  007ADC  ECEE  F03A         	call	_key_process_up	;wreg free
  5264                           
  5265                           ;key_menu.c: 978: }else if(keyValue == (0x01<<0x02)){
  5266  007AE0  D006               	goto	l17277
  5267  007AE2                     l17273:
  5268  007AE2  0E04               	movlw	4
  5269  007AE4  0100               	movlb	0	; () banked
  5270  007AE6  19FC               	xorwf	_keyValue& (0+255),w,b	;volatile
  5271  007AE8  B4D8               	btfsc	status,2,c
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;key_menu.c: 979: key_process_set();
  5275  007AEA  ECD8  F03D         	call	_key_process_set	;wreg free
  5276  007AEE                     l17277:
  5277  007AEE  0E01               	movlw	1
  5278  007AF0  6E34               	movwf	_lcdTwinkle,c
  5279                           
  5280                           ;key_menu.c: 984: ui_disp_menu();
  5281  007AF2  EC45  F03B         	call	_ui_disp_menu	;wreg free
  5282                           
  5283                           ;key_menu.c: 985: key_waite_release(2000,&key);
  5284  007AF6  0E07               	movlw	7
  5285  007AF8  0100               	movlb	0	; () banked
  5286  007AFA  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5287  007AFC  0ED0               	movlw	208
  5288  007AFE  6F68               	movwf	key_waite_release@timeout& (0+255),b
  5289  007B00  0ED5               	movlw	low key_process@key
  5290  007B02  0100               	movlb	0	; () banked
  5291  007B04  6F6A               	movwf	key_waite_release@key& (0+255),b
  5292  007B06  0E03               	movlw	high key_process@key
  5293  007B08  0100               	movlb	0	; () banked
  5294  007B0A  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  5295  007B0C  EC1E  F04B         	call	_key_waite_release	;wreg free
  5296  007B10  0012               	return		;funcret
  5297  007B12                     __end_of_key_process:
  5298                           	opt stack 0
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           prodh	equ	0xFF4
  5304                           prodl	equ	0xFF3
  5305                           intcon	equ	0xFF2
  5306                           postinc0	equ	0xFEE
  5307                           wreg	equ	0xFE8
  5308                           postdec1	equ	0xFE5
  5309                           plusw1	equ	0xFE3
  5310                           fsr1h	equ	0xFE2
  5311                           fsr1l	equ	0xFE1
  5312                           indf2	equ	0xFDF
  5313                           plusw2	equ	0xFDB
  5314                           fsr2h	equ	0xFDA
  5315                           fsr2l	equ	0xFD9
  5316                           status	equ	0xFD8
  5317                           
  5318 ;; *************** function _key_waite_release *****************
  5319 ;; Defined at:
  5320 ;;		line 32 in file "src/api/key_menu.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  timeout         2    8[BANK0 ] unsigned int 
  5323 ;;  key             2   10[BANK0 ] PTR unsigned char 
  5324 ;;		 -> key_process@key(1), 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  t8              1   31[COMRAM] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  2    8[BANK0 ] unsigned int 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;Total ram usage:        5 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    7
  5343 ;; This function calls:
  5344 ;;		_delay_ms
  5345 ;;		_key_polling
  5346 ;; This function is called by:
  5347 ;;		_key_process
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text14
  5352  00963C                     __ptext14:
  5353                           	opt stack 0
  5354  00963C                     _key_waite_release:
  5355                           	opt stack 22
  5356                           
  5357                           ;key_menu.c: 34: uint8_t t8;
  5358                           ;key_menu.c: 36: userTicker_ms=0;
  5359                           
  5360                           ;incstack = 0
  5361  00963C  0E00               	movlw	0
  5362  00963E  0101               	movlb	1	; () banked
  5363  009640  6F65               	movwf	(_userTicker_ms+1)& (0+255),b	;volatile
  5364  009642  0E00               	movlw	0
  5365  009644  6F64               	movwf	_userTicker_ms& (0+255),b	;volatile
  5366                           
  5367                           ;key_menu.c: 37: while(userTicker_ms<timeout){
  5368  009646  D00D               	goto	l16889
  5369  009648                     l16881:
  5370                           
  5371                           ; BSR set to: 1
  5372                           ;key_menu.c: 38: t8=key_polling();
  5373  009648  EC0F  F049         	call	_key_polling	;wreg free
  5374  00964C  6E20               	movwf	key_waite_release@t8,c
  5375                           
  5376                           ;key_menu.c: 39: if(t8==(0x0))break;
  5377  00964E  5020               	movf	key_waite_release@t8,w,c
  5378  009650  B4D8               	btfsc	status,2,c
  5379  009652  D011               	goto	l16891
  5380                           
  5381                           ;key_menu.c: 40: delay_ms(10);
  5382  009654  0E00               	movlw	0
  5383  009656  0100               	movlb	0	; () banked
  5384  009658  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  5385  00965A  0E0A               	movlw	10
  5386  00965C  6F64               	movwf	delay_ms@dly& (0+255),b
  5387  00965E  EC25  F050         	call	_delay_ms	;wreg free
  5388  009662                     l16889:
  5389  009662  0100               	movlb	0	; () banked
  5390  009664  5168               	movf	key_waite_release@timeout& (0+255),w,b
  5391  009666  0101               	movlb	1	; () banked
  5392  009668  5D64               	subwf	_userTicker_ms& (0+255),w,b	;volatile
  5393  00966A  0100               	movlb	0	; () banked
  5394  00966C  5169               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  5395  00966E  0101               	movlb	1	; () banked
  5396  009670  5965               	subwfb	(_userTicker_ms+1)& (0+255),w,b	;volatile
  5397  009672  A0D8               	btfss	status,0,c
  5398  009674  D7E9               	goto	l16881
  5399  009676                     l16891:
  5400                           
  5401                           ;key_menu.c: 41: }
  5402                           ;key_menu.c: 42: *key=t8;
  5403  009676  C06A  FFD9         	movff	key_waite_release@key,fsr2l
  5404  00967A  C06B  FFDA         	movff	key_waite_release@key+1,fsr2h
  5405  00967E  C020  FFDF         	movff	key_waite_release@t8,indf2
  5406                           
  5407                           ;key_menu.c: 43: return userTicker_ms;
  5408  009682  C164  F068         	movff	_userTicker_ms,?_key_waite_release	;volatile
  5409  009686  C165  F069         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  5410  00968A  0012               	return	
  5411  00968C                     __end_of_key_waite_release:
  5412                           	opt stack 0
  5413                           tblptru	equ	0xFF8
  5414                           tblptrh	equ	0xFF7
  5415                           tblptrl	equ	0xFF6
  5416                           tablat	equ	0xFF5
  5417                           prodh	equ	0xFF4
  5418                           prodl	equ	0xFF3
  5419                           intcon	equ	0xFF2
  5420                           postinc0	equ	0xFEE
  5421                           wreg	equ	0xFE8
  5422                           postdec1	equ	0xFE5
  5423                           plusw1	equ	0xFE3
  5424                           fsr1h	equ	0xFE2
  5425                           fsr1l	equ	0xFE1
  5426                           indf2	equ	0xFDF
  5427                           plusw2	equ	0xFDB
  5428                           fsr2h	equ	0xFDA
  5429                           fsr2l	equ	0xFD9
  5430                           status	equ	0xFD8
  5431                           
  5432 ;; *************** function _key_polling *****************
  5433 ;; Defined at:
  5434 ;;		line 8 in file "src/driver/key.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  t8              1    7[BANK0 ] unsigned char 
  5439 ;;  ktemp           1    6[BANK0 ] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      unsigned char 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;Total ram usage:        2 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    6
  5456 ;; This function calls:
  5457 ;;		_delay_ms
  5458 ;; This function is called by:
  5459 ;;		_key_waite_release
  5460 ;;		_main
  5461 ;;		_event_process
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text15
  5466  00921E                     __ptext15:
  5467                           	opt stack 0
  5468  00921E                     _key_polling:
  5469                           	opt stack 22
  5470                           
  5471                           ;key.c: 10: uint8_t ktemp=(0x0);
  5472                           
  5473                           ;incstack = 0
  5474  00921E  0E00               	movlw	0
  5475  009220  0100               	movlb	0	; () banked
  5476  009222  6F66               	movwf	key_polling@ktemp& (0+255),b
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;key.c: 11: uint8_t t8=0xff;
  5480  009224  0100               	movlb	0	; () banked
  5481  009226  6967               	setf	key_polling@t8& (0+255),b
  5482                           
  5483                           ; BSR set to: 0
  5484                           
  5485                           ; BSR set to: 0
  5486                           
  5487                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  5488  009228  0E0E               	movlw	14
  5489  00922A  1293               	iorwf	3987,f,c	;volatile
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5493                           
  5494                           ; BSR set to: 0
  5495  00922C  5081               	movf	3969,w,c	;volatile
  5496  00922E  0B0E               	andlw	14
  5497  009230  0100               	movlb	0	; () banked
  5498  009232  6F67               	movwf	key_polling@t8& (0+255),b
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  5502  009234  0100               	movlb	0	; () banked
  5503  009236  5167               	movf	key_polling@t8& (0+255),w,b
  5504  009238  0B0E               	andlw	14
  5505  00923A  0A0E               	xorlw	14
  5506  00923C  B4D8               	btfsc	status,2,c
  5507  00923E  D01A               	goto	l15749
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;key.c: 16: delay_ms(10);
  5511  009240  0E00               	movlw	0
  5512  009242  0100               	movlb	0	; () banked
  5513  009244  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  5514  009246  0E0A               	movlw	10
  5515  009248  6F64               	movwf	delay_ms@dly& (0+255),b
  5516  00924A  EC25  F050         	call	_delay_ms	;wreg free
  5517                           
  5518                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5519  00924E  5081               	movf	3969,w,c	;volatile
  5520  009250  0B0E               	andlw	14
  5521  009252  0100               	movlb	0	; () banked
  5522  009254  6F67               	movwf	key_polling@t8& (0+255),b
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;key.c: 18: if(!( t8 & (1<<3))){
  5526  009256  0100               	movlb	0	; () banked
  5527  009258  B767               	btfsc	key_polling@t8& (0+255),3,b
  5528  00925A  D002               	goto	l15741
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;key.c: 19: ktemp |= (0x01<<0x0);
  5532  00925C  0100               	movlb	0	; () banked
  5533  00925E  8166               	bsf	key_polling@ktemp& (0+255),0,b
  5534  009260                     l15741:
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;key.c: 20: }
  5538                           ;key.c: 21: if(!( t8 & (1<<2))){
  5539  009260  0100               	movlb	0	; () banked
  5540  009262  B567               	btfsc	key_polling@t8& (0+255),2,b
  5541  009264  D002               	goto	l15745
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;key.c: 22: ktemp |= (0x01<<0x01);
  5545  009266  0100               	movlb	0	; () banked
  5546  009268  8366               	bsf	key_polling@ktemp& (0+255),1,b
  5547  00926A                     l15745:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;key.c: 23: }
  5551                           ;key.c: 24: if(!( t8 & (1<<1))){
  5552  00926A  0100               	movlb	0	; () banked
  5553  00926C  B367               	btfsc	key_polling@t8& (0+255),1,b
  5554  00926E  D002               	goto	l15749
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;key.c: 25: ktemp |= (0x01<<0x02);
  5558  009270  0100               	movlb	0	; () banked
  5559  009272  8566               	bsf	key_polling@ktemp& (0+255),2,b
  5560  009274                     l15749:
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;key.c: 26: }
  5564                           ;key.c: 27: }
  5565                           ;key.c: 29: return ktemp;
  5566  009274  0100               	movlb	0	; () banked
  5567  009276  5166               	movf	key_polling@ktemp& (0+255),w,b
  5568  009278  0012               	return	
  5569  00927A                     __end_of_key_polling:
  5570                           	opt stack 0
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           postinc0	equ	0xFEE
  5579                           wreg	equ	0xFE8
  5580                           postdec1	equ	0xFE5
  5581                           plusw1	equ	0xFE3
  5582                           fsr1h	equ	0xFE2
  5583                           fsr1l	equ	0xFE1
  5584                           indf2	equ	0xFDF
  5585                           plusw2	equ	0xFDB
  5586                           fsr2h	equ	0xFDA
  5587                           fsr2l	equ	0xFD9
  5588                           status	equ	0xFD8
  5589                           
  5590 ;; *************** function _key_process_up *****************
  5591 ;; Defined at:
  5592 ;;		line 557 in file "src/api/key_menu.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;		None
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;		None
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      void 
  5599 ;; Registers used:
  5600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;Total ram usage:        0 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    8
  5613 ;; This function calls:
  5614 ;;		___up_adj_bar_level_scale
  5615 ;;		___up_adj_work_mode
  5616 ;;		___up_base_zero_adj
  5617 ;;		___up_density_adj
  5618 ;;		___up_diff_calib_adj
  5619 ;;		___up_epr_calib_adj
  5620 ;;		___up_epr_ilp_scale_adj
  5621 ;;		___up_home_adj
  5622 ;;		___up_poly_coefic_adj
  5623 ;;		___up_pose_size_adj
  5624 ;;		___up_pr_calib_adj
  5625 ;;		___up_psw_adj
  5626 ;;		___up_warn_type_adj
  5627 ;;		___up_warn_value_adj
  5628 ;; This function is called by:
  5629 ;;		_key_process
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text16
  5634  0075DC                     __ptext16:
  5635                           	opt stack 0
  5636  0075DC                     _key_process_up:
  5637                           	opt stack 21
  5638                           
  5639                           ;key_menu.c: 559: switch(menu){
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;incstack = 0
  5643  0075DC  D02A               	goto	l16959
  5644  0075DE                     l16929:
  5645  0075DE  ECFE  F04F         	call	___up_home_adj	;wreg free
  5646  0075E2  0012               	return	
  5647  0075E4                     l16931:
  5648  0075E4  EC42  F051         	call	___up_psw_adj	;wreg free
  5649  0075E8  0012               	return	
  5650  0075EA                     l16933:
  5651  0075EA  EC63  F051         	call	___up_density_adj	;wreg free
  5652  0075EE  0012               	return	
  5653  0075F0                     l16935:
  5654  0075F0  EC32  F044         	call	___up_pose_size_adj	;wreg free
  5655  0075F4  0012               	return	
  5656  0075F6                     l16937:
  5657  0075F6  EC6E  F051         	call	___up_base_zero_adj	;wreg free
  5658  0075FA  0012               	return	
  5659  0075FC                     l16939:
  5660  0075FC  EC7F  F04D         	call	___up_diff_calib_adj	;wreg free
  5661  007600  0012               	return	
  5662  007602                     l16941:
  5663  007602  EC63  F04D         	call	___up_pr_calib_adj	;wreg free
  5664  007606  0012               	return	
  5665  007608                     l16943:
  5666  007608  EC4D  F051         	call	___up_poly_coefic_adj	;wreg free
  5667  00760C  0012               	return	
  5668  00760E                     l16945:
  5669  00760E  EC70  F04C         	call	___up_warn_type_adj	;wreg free
  5670  007612  0012               	return	
  5671  007614                     l16947:
  5672  007614  EC37  F051         	call	___up_warn_value_adj	;wreg free
  5673  007618  0012               	return	
  5674  00761A                     l16949:
  5675  00761A  EC5B  F04E         	call	___up_epr_calib_adj	;wreg free
  5676  00761E  0012               	return	
  5677  007620                     l16951:
  5678  007620  EC58  F051         	call	___up_epr_ilp_scale_adj	;wreg free
  5679  007624  0012               	return	
  5680  007626                     l16953:
  5681  007626  EC79  F051         	call	___up_adj_bar_level_scale	;wreg free
  5682  00762A  0012               	return	
  5683  00762C                     l16955:
  5684  00762C  EC0A  F04E         	call	___up_adj_work_mode	;wreg free
  5685                           
  5686                           ;key_menu.c: 577: }
  5687                           
  5688                           ;key_menu.c: 576: default:break;
  5689  007630  0012               	return	
  5690  007632                     l16959:
  5691  007632  5033               	movf	_menu,w,c	;volatile
  5692                           
  5693                           ; Switch size 1, requested type "space"
  5694                           ; Number of cases is 14, Range of values is 0 to 240
  5695                           ; switch strategies available:
  5696                           ; Name         Instructions Cycles
  5697                           ; simple_byte           43    22 (average)
  5698                           ;	Chosen strategy is simple_byte
  5699  007634  0A00               	xorlw	0	; case 0
  5700  007636  B4D8               	btfsc	status,2,c
  5701  007638  D7D2               	goto	l16929
  5702  00763A  0A10               	xorlw	16	; case 16
  5703  00763C  B4D8               	btfsc	status,2,c
  5704  00763E  D7D2               	goto	l16931
  5705  007640  0A30               	xorlw	48	; case 32
  5706  007642  B4D8               	btfsc	status,2,c
  5707  007644  D7D2               	goto	l16933
  5708  007646  0A10               	xorlw	16	; case 48
  5709  007648  B4D8               	btfsc	status,2,c
  5710  00764A  D7D2               	goto	l16935
  5711  00764C  0A70               	xorlw	112	; case 64
  5712  00764E  B4D8               	btfsc	status,2,c
  5713  007650  D7D2               	goto	l16937
  5714  007652  0A10               	xorlw	16	; case 80
  5715  007654  B4D8               	btfsc	status,2,c
  5716  007656  D7D2               	goto	l16939
  5717  007658  0A30               	xorlw	48	; case 96
  5718  00765A  B4D8               	btfsc	status,2,c
  5719  00765C  D7D2               	goto	l16941
  5720  00765E  0A10               	xorlw	16	; case 112
  5721  007660  B4D8               	btfsc	status,2,c
  5722  007662  D7D2               	goto	l16943
  5723  007664  0AF0               	xorlw	240	; case 128
  5724  007666  B4D8               	btfsc	status,2,c
  5725  007668  D7D2               	goto	l16945
  5726  00766A  0A10               	xorlw	16	; case 144
  5727  00766C  B4D8               	btfsc	status,2,c
  5728  00766E  D7D2               	goto	l16947
  5729  007670  0A30               	xorlw	48	; case 160
  5730  007672  B4D8               	btfsc	status,2,c
  5731  007674  D7D2               	goto	l16949
  5732  007676  0A10               	xorlw	16	; case 176
  5733  007678  B4D8               	btfsc	status,2,c
  5734  00767A  D7D2               	goto	l16951
  5735  00767C  0A70               	xorlw	112	; case 192
  5736  00767E  B4D8               	btfsc	status,2,c
  5737  007680  D7D2               	goto	l16953
  5738  007682  0A30               	xorlw	48	; case 240
  5739  007684  A4D8               	btfss	status,2,c
  5740  007686  0012               	return	
  5741  007688  D7D1               	goto	l16955
  5742  00768A                     __end_of_key_process_up:
  5743                           	opt stack 0
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           prodh	equ	0xFF4
  5749                           prodl	equ	0xFF3
  5750                           intcon	equ	0xFF2
  5751                           postinc0	equ	0xFEE
  5752                           wreg	equ	0xFE8
  5753                           postdec1	equ	0xFE5
  5754                           plusw1	equ	0xFE3
  5755                           fsr1h	equ	0xFE2
  5756                           fsr1l	equ	0xFE1
  5757                           indf2	equ	0xFDF
  5758                           plusw2	equ	0xFDB
  5759                           fsr2h	equ	0xFDA
  5760                           fsr2l	equ	0xFD9
  5761                           status	equ	0xFD8
  5762                           
  5763 ;; *************** function ___up_warn_value_adj *****************
  5764 ;; Defined at:
  5765 ;;		line 513 in file "src/api/key_menu.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;Total ram usage:        0 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    7
  5786 ;; This function calls:
  5787 ;;		_key_adj_value_float
  5788 ;; This function is called by:
  5789 ;;		_key_process_up
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text17
  5794  00A26E                     __ptext17:
  5795                           	opt stack 0
  5796  00A26E                     ___up_warn_value_adj:
  5797                           	opt stack 21
  5798                           
  5799                           ;key_menu.c: 515: key_adj_value_float(&m_floatAdj,adjLocation);
  5800                           
  5801                           ;incstack = 0
  5802  00A26E  0E35               	movlw	low _m_floatAdj
  5803  00A270  0100               	movlb	0	; () banked
  5804  00A272  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  5805  00A274  0E00               	movlw	high _m_floatAdj
  5806  00A276  0100               	movlb	0	; () banked
  5807  00A278  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  5808  00A27A  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  5809  00A27E  EC6C  F034         	call	_key_adj_value_float	;wreg free
  5810  00A282  0012               	return		;funcret
  5811  00A284                     __end_of___up_warn_value_adj:
  5812                           	opt stack 0
  5813                           tblptru	equ	0xFF8
  5814                           tblptrh	equ	0xFF7
  5815                           tblptrl	equ	0xFF6
  5816                           tablat	equ	0xFF5
  5817                           prodh	equ	0xFF4
  5818                           prodl	equ	0xFF3
  5819                           intcon	equ	0xFF2
  5820                           postinc0	equ	0xFEE
  5821                           wreg	equ	0xFE8
  5822                           postdec1	equ	0xFE5
  5823                           plusw1	equ	0xFE3
  5824                           fsr1h	equ	0xFE2
  5825                           fsr1l	equ	0xFE1
  5826                           indf2	equ	0xFDF
  5827                           plusw2	equ	0xFDB
  5828                           fsr2h	equ	0xFDA
  5829                           fsr2l	equ	0xFD9
  5830                           status	equ	0xFD8
  5831                           
  5832 ;; *************** function ___up_warn_type_adj *****************
  5833 ;; Defined at:
  5834 ;;		line 505 in file "src/api/key_menu.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  p               2    0[BANK0 ] PTR unsigned char 
  5839 ;;		 -> adjValue(4), 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;Total ram usage:        3 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    4
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_key_process_up
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text18
  5864  0098E0                     __ptext18:
  5865                           	opt stack 0
  5866  0098E0                     ___up_warn_type_adj:
  5867                           	opt stack 24
  5868                           
  5869                           ;key_menu.c: 507: uint8_t* p;
  5870                           ;key_menu.c: 508: p=(uint8_t*)(&adjValue);
  5871                           
  5872                           ;incstack = 0
  5873  0098E0  0E39               	movlw	low _adjValue
  5874  0098E2  0100               	movlb	0	; () banked
  5875  0098E4  6F60               	movwf	___up_warn_type_adj@p& (0+255),b
  5876  0098E6  0E00               	movlw	high _adjValue
  5877  0098E8  0100               	movlb	0	; () banked
  5878  0098EA  6F61               	movwf	(___up_warn_type_adj@p+1)& (0+255),b
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;key_menu.c: 509: (*p)=(*p)+1;
  5882  0098EC  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5883  0098F0  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5884  0098F4  50DF               	movf	indf2,w,c
  5885  0098F6  6E20               	movwf	??___up_warn_type_adj& (0+255),c
  5886  0098F8  2820               	incf	??___up_warn_type_adj,w,c
  5887  0098FA  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5888  0098FE  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5889  009902  6EDF               	movwf	indf2,c
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;key_menu.c: 510: if(*p>PRESSURE_LO)*p=HIGHT_HI;
  5893  009904  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5894  009908  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5895  00990C  0E03               	movlw	3
  5896  00990E  64DF               	cpfsgt	indf2,c
  5897  009910  0012               	return	
  5898                           
  5899                           ; BSR set to: 0
  5900  009912  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5901  009916  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5902  00991A  0E00               	movlw	0
  5903  00991C  6EDF               	movwf	indf2,c
  5904  00991E  0012               	return	
  5905  009920                     __end_of___up_warn_type_adj:
  5906                           	opt stack 0
  5907                           tblptru	equ	0xFF8
  5908                           tblptrh	equ	0xFF7
  5909                           tblptrl	equ	0xFF6
  5910                           tablat	equ	0xFF5
  5911                           prodh	equ	0xFF4
  5912                           prodl	equ	0xFF3
  5913                           intcon	equ	0xFF2
  5914                           postinc0	equ	0xFEE
  5915                           wreg	equ	0xFE8
  5916                           postdec1	equ	0xFE5
  5917                           plusw1	equ	0xFE3
  5918                           fsr1h	equ	0xFE2
  5919                           fsr1l	equ	0xFE1
  5920                           indf2	equ	0xFDF
  5921                           plusw2	equ	0xFDB
  5922                           fsr2h	equ	0xFDA
  5923                           fsr2l	equ	0xFD9
  5924                           status	equ	0xFD8
  5925                           
  5926 ;; *************** function ___up_psw_adj *****************
  5927 ;; Defined at:
  5928 ;;		line 440 in file "src/api/key_menu.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        0 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    6
  5949 ;; This function calls:
  5950 ;;		_key_adj_value_fixed
  5951 ;; This function is called by:
  5952 ;;		_key_process_up
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text19
  5957  00A284                     __ptext19:
  5958                           	opt stack 0
  5959  00A284                     ___up_psw_adj:
  5960                           	opt stack 22
  5961                           
  5962                           ;key_menu.c: 442: key_adj_value_fixed((uint16_t*)(&passWord),adjLocation);
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;incstack = 0
  5966  00A284  0E3D               	movlw	low _passWord
  5967  00A286  0100               	movlb	0	; () banked
  5968  00A288  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  5969  00A28A  0E00               	movlw	high _passWord
  5970  00A28C  0100               	movlb	0	; () banked
  5971  00A28E  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  5972  00A290  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  5973  00A294  EC0F  F033         	call	_key_adj_value_fixed	;wreg free
  5974  00A298  0012               	return		;funcret
  5975  00A29A                     __end_of___up_psw_adj:
  5976                           	opt stack 0
  5977                           tblptru	equ	0xFF8
  5978                           tblptrh	equ	0xFF7
  5979                           tblptrl	equ	0xFF6
  5980                           tablat	equ	0xFF5
  5981                           prodh	equ	0xFF4
  5982                           prodl	equ	0xFF3
  5983                           intcon	equ	0xFF2
  5984                           postinc0	equ	0xFEE
  5985                           wreg	equ	0xFE8
  5986                           postdec1	equ	0xFE5
  5987                           plusw1	equ	0xFE3
  5988                           fsr1h	equ	0xFE2
  5989                           fsr1l	equ	0xFE1
  5990                           indf2	equ	0xFDF
  5991                           plusw2	equ	0xFDB
  5992                           fsr2h	equ	0xFDA
  5993                           fsr2l	equ	0xFD9
  5994                           status	equ	0xFD8
  5995                           
  5996 ;; *************** function ___up_pr_calib_adj *****************
  5997 ;; Defined at:
  5998 ;;		line 487 in file "src/api/key_menu.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;		None
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  t8              1   27[BANK0 ] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      void 
  6005 ;; Registers used:
  6006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;Total ram usage:        1 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    7
  6019 ;; This function calls:
  6020 ;;		_key_adj_value_float
  6021 ;; This function is called by:
  6022 ;;		_key_process_up
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text20
  6027  009AC6                     __ptext20:
  6028                           	opt stack 0
  6029  009AC6                     ___up_pr_calib_adj:
  6030                           	opt stack 21
  6031                           
  6032                           ;key_menu.c: 489: uint8_t t8;
  6033                           ;key_menu.c: 490: if(calibCol==0){
  6034                           
  6035                           ;incstack = 0
  6036  009AC6  5030               	movf	_calibCol,w,c	;volatile
  6037  009AC8  A4D8               	btfss	status,2,c
  6038  009ACA  D00E               	goto	l15885
  6039                           
  6040                           ;key_menu.c: 491: t8=*(uint8_t*)(&adjValue);
  6041  009ACC  C039  F07B         	movff	_adjValue,___up_pr_calib_adj@t8
  6042                           
  6043                           ;key_menu.c: 492: t8++;
  6044  009AD0  0100               	movlb	0	; () banked
  6045  009AD2  2B7B               	incf	___up_pr_calib_adj@t8& (0+255),f,b
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;key_menu.c: 493: if(t8>=6)t8=2;
  6049  009AD4  0E05               	movlw	5
  6050  009AD6  0100               	movlb	0	; () banked
  6051  009AD8  657B               	cpfsgt	___up_pr_calib_adj@t8& (0+255),b
  6052  009ADA  D003               	goto	l15883
  6053                           
  6054                           ; BSR set to: 0
  6055  009ADC  0E02               	movlw	2
  6056  009ADE  0100               	movlb	0	; () banked
  6057  009AE0  6F7B               	movwf	___up_pr_calib_adj@t8& (0+255),b
  6058  009AE2                     l15883:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;key_menu.c: 494: *(uint8_t*)(&adjValue)=t8;
  6062  009AE2  C07B  F039         	movff	___up_pr_calib_adj@t8,_adjValue
  6063                           
  6064                           ;key_menu.c: 495: }else{
  6065  009AE6  0012               	return	
  6066  009AE8                     l15885:
  6067                           
  6068                           ;key_menu.c: 496: key_adj_value_float(&m_floatAdj,adjLocation);
  6069  009AE8  0E35               	movlw	low _m_floatAdj
  6070  009AEA  0100               	movlb	0	; () banked
  6071  009AEC  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6072  009AEE  0E00               	movlw	high _m_floatAdj
  6073  009AF0  0100               	movlb	0	; () banked
  6074  009AF2  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6075  009AF4  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6076  009AF8  EC6C  F034         	call	_key_adj_value_float	;wreg free
  6077  009AFC  0012               	return	
  6078  009AFE                     __end_of___up_pr_calib_adj:
  6079                           	opt stack 0
  6080                           tblptru	equ	0xFF8
  6081                           tblptrh	equ	0xFF7
  6082                           tblptrl	equ	0xFF6
  6083                           tablat	equ	0xFF5
  6084                           prodh	equ	0xFF4
  6085                           prodl	equ	0xFF3
  6086                           intcon	equ	0xFF2
  6087                           postinc0	equ	0xFEE
  6088                           wreg	equ	0xFE8
  6089                           postdec1	equ	0xFE5
  6090                           plusw1	equ	0xFE3
  6091                           fsr1h	equ	0xFE2
  6092                           fsr1l	equ	0xFE1
  6093                           indf2	equ	0xFDF
  6094                           plusw2	equ	0xFDB
  6095                           fsr2h	equ	0xFDA
  6096                           fsr2l	equ	0xFD9
  6097                           status	equ	0xFD8
  6098                           
  6099 ;; *************** function ___up_pose_size_adj *****************
  6100 ;; Defined at:
  6101 ;;		line 450 in file "src/api/key_menu.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  p               2   28[BANK0 ] PTR unsigned char 
  6106 ;;		 -> adjValue(4), 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:        3 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    7
  6123 ;; This function calls:
  6124 ;;		_key_adj_value_float
  6125 ;; This function is called by:
  6126 ;;		_key_process_up
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text21
  6131  008864                     __ptext21:
  6132                           	opt stack 0
  6133  008864                     ___up_pose_size_adj:
  6134                           	opt stack 21
  6135                           
  6136                           ;key_menu.c: 452: uint8_t* p;
  6137                           ;key_menu.c: 453: switch(subMenu){
  6138                           
  6139                           ;incstack = 0
  6140  008864  D02D               	goto	l15855
  6141  008866                     l15843:
  6142                           
  6143                           ;key_menu.c: 455: p=(uint8_t*)(&adjValue);
  6144  008866  0E39               	movlw	low _adjValue
  6145  008868  0100               	movlb	0	; () banked
  6146  00886A  6F7C               	movwf	___up_pose_size_adj@p& (0+255),b
  6147  00886C  0E00               	movlw	high _adjValue
  6148  00886E  0100               	movlb	0	; () banked
  6149  008870  6F7D               	movwf	(___up_pose_size_adj@p+1)& (0+255),b
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;key_menu.c: 456: (*p)=(*p)+1;
  6153  008872  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6154  008876  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6155  00887A  50DF               	movf	indf2,w,c
  6156  00887C  0100               	movlb	0	; () banked
  6157  00887E  6F7B               	movwf	??___up_pose_size_adj& (0+255),b
  6158  008880  0100               	movlb	0	; () banked
  6159  008882  297B               	incf	??___up_pose_size_adj& (0+255),w,b
  6160  008884  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6161  008888  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6162  00888C  6EDF               	movwf	indf2,c
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;key_menu.c: 457: if(*p>VERTICAL)*p=HOTIZONTAL;
  6166  00888E  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6167  008892  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6168  008896  0E01               	movlw	1
  6169  008898  64DF               	cpfsgt	indf2,c
  6170  00889A  0012               	return	
  6171                           
  6172                           ; BSR set to: 0
  6173  00889C  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6174  0088A0  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6175  0088A4  0E00               	movlw	0
  6176  0088A6  6EDF               	movwf	indf2,c
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;key_menu.c: 458: break;
  6180  0088A8  0012               	return	
  6181  0088AA                     l15851:
  6182                           
  6183                           ;key_menu.c: 460: case 0x02:
  6184                           ;key_menu.c: 461: key_adj_value_float(&m_floatAdj,adjLocation);
  6185  0088AA  0E35               	movlw	low _m_floatAdj
  6186  0088AC  0100               	movlb	0	; () banked
  6187  0088AE  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6188  0088B0  0E00               	movlw	high _m_floatAdj
  6189  0088B2  0100               	movlb	0	; () banked
  6190  0088B4  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6191  0088B6  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6192  0088BA  EC6C  F034         	call	_key_adj_value_float	;wreg free
  6193                           
  6194                           ;key_menu.c: 464: }
  6195                           
  6196                           ;key_menu.c: 463: default:break;
  6197                           
  6198                           ;key_menu.c: 462: break;
  6199  0088BE  0012               	return	
  6200  0088C0                     l15855:
  6201  0088C0  5032               	movf	_subMenu,w,c	;volatile
  6202                           
  6203                           ; Switch size 1, requested type "space"
  6204                           ; Number of cases is 3, Range of values is 0 to 2
  6205                           ; switch strategies available:
  6206                           ; Name         Instructions Cycles
  6207                           ; simple_byte           10     6 (average)
  6208                           ;	Chosen strategy is simple_byte
  6209  0088C2  0A00               	xorlw	0	; case 0
  6210  0088C4  B4D8               	btfsc	status,2,c
  6211  0088C6  D7CF               	goto	l15843
  6212  0088C8  0A01               	xorlw	1	; case 1
  6213  0088CA  B4D8               	btfsc	status,2,c
  6214  0088CC  D7EE               	goto	l15851
  6215  0088CE  0A03               	xorlw	3	; case 2
  6216  0088D0  A4D8               	btfss	status,2,c
  6217  0088D2  0012               	return	
  6218  0088D4  D7EA               	goto	l15851
  6219  0088D6                     __end_of___up_pose_size_adj:
  6220                           	opt stack 0
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           prodh	equ	0xFF4
  6226                           prodl	equ	0xFF3
  6227                           intcon	equ	0xFF2
  6228                           postinc0	equ	0xFEE
  6229                           wreg	equ	0xFE8
  6230                           postdec1	equ	0xFE5
  6231                           plusw1	equ	0xFE3
  6232                           fsr1h	equ	0xFE2
  6233                           fsr1l	equ	0xFE1
  6234                           indf2	equ	0xFDF
  6235                           plusw2	equ	0xFDB
  6236                           fsr2h	equ	0xFDA
  6237                           fsr2l	equ	0xFD9
  6238                           status	equ	0xFD8
  6239                           
  6240 ;; *************** function ___up_poly_coefic_adj *****************
  6241 ;; Defined at:
  6242 ;;		line 500 in file "src/api/key_menu.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    6
  6263 ;; This function calls:
  6264 ;;		_key_adj_value_fixed
  6265 ;; This function is called by:
  6266 ;;		_key_process_up
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text22
  6271  00A29A                     __ptext22:
  6272                           	opt stack 0
  6273  00A29A                     ___up_poly_coefic_adj:
  6274                           	opt stack 22
  6275                           
  6276                           ;key_menu.c: 502: key_adj_value_fixed((uint16_t*)(&adjValue),adjLocation);
  6277                           
  6278                           ;incstack = 0
  6279  00A29A  0E39               	movlw	low _adjValue
  6280  00A29C  0100               	movlb	0	; () banked
  6281  00A29E  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6282  00A2A0  0E00               	movlw	high _adjValue
  6283  00A2A2  0100               	movlb	0	; () banked
  6284  00A2A4  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  6285  00A2A6  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  6286  00A2AA  EC0F  F033         	call	_key_adj_value_fixed	;wreg free
  6287  00A2AE  0012               	return		;funcret
  6288  00A2B0                     __end_of___up_poly_coefic_adj:
  6289                           	opt stack 0
  6290                           tblptru	equ	0xFF8
  6291                           tblptrh	equ	0xFF7
  6292                           tblptrl	equ	0xFF6
  6293                           tablat	equ	0xFF5
  6294                           prodh	equ	0xFF4
  6295                           prodl	equ	0xFF3
  6296                           intcon	equ	0xFF2
  6297                           postinc0	equ	0xFEE
  6298                           wreg	equ	0xFE8
  6299                           postdec1	equ	0xFE5
  6300                           plusw1	equ	0xFE3
  6301                           fsr1h	equ	0xFE2
  6302                           fsr1l	equ	0xFE1
  6303                           indf2	equ	0xFDF
  6304                           plusw2	equ	0xFDB
  6305                           fsr2h	equ	0xFDA
  6306                           fsr2l	equ	0xFD9
  6307                           status	equ	0xFD8
  6308                           
  6309 ;; *************** function ___up_home_adj *****************
  6310 ;; Defined at:
  6311 ;;		line 423 in file "src/api/key_menu.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;		None
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  t8              1   31[COMRAM] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg, status,2, status,0
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;Total ram usage:        1 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    4
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_key_process_up
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text23
  6340  009FFC                     __ptext23:
  6341                           	opt stack 0
  6342  009FFC                     ___up_home_adj:
  6343                           	opt stack 24
  6344                           
  6345                           ;key_menu.c: 425: uint8_t t8;
  6346                           ;key_menu.c: 429: t8=(subMenu & 0xf0);
  6347                           
  6348                           ;incstack = 0
  6349  009FFC  5032               	movf	_subMenu,w,c	;volatile
  6350  009FFE  0BF0               	andlw	240
  6351  00A000  6E20               	movwf	___up_home_adj@t8,c
  6352                           
  6353                           ;key_menu.c: 430: t8>>=4;
  6354  00A002  3A20               	swapf	___up_home_adj@t8,f,c
  6355  00A004  0E0F               	movlw	15
  6356  00A006  1620               	andwf	___up_home_adj@t8,f,c
  6357                           
  6358                           ;key_menu.c: 431: t8++;
  6359  00A008  2A20               	incf	___up_home_adj@t8,f,c
  6360                           
  6361                           ;key_menu.c: 432: if(t8>2)t8=0;
  6362  00A00A  0E02               	movlw	2
  6363  00A00C  6420               	cpfsgt	___up_home_adj@t8,c
  6364  00A00E  D002               	goto	l15831
  6365  00A010  0E00               	movlw	0
  6366  00A012  6E20               	movwf	___up_home_adj@t8,c
  6367  00A014                     l15831:
  6368                           
  6369                           ;key_menu.c: 433: t8<<=4;
  6370  00A014  3A20               	swapf	___up_home_adj@t8,f,c
  6371  00A016  0EF0               	movlw	240
  6372  00A018  1620               	andwf	___up_home_adj@t8,f,c
  6373                           
  6374                           ;key_menu.c: 434: subMenu &= 0x0f;
  6375  00A01A  0E0F               	movlw	15
  6376  00A01C  1632               	andwf	_subMenu,f,c	;volatile
  6377                           
  6378                           ;key_menu.c: 435: subMenu |= t8;
  6379  00A01E  5020               	movf	___up_home_adj@t8,w,c
  6380  00A020  1232               	iorwf	_subMenu,f,c	;volatile
  6381  00A022  0012               	return		;funcret
  6382  00A024                     __end_of___up_home_adj:
  6383                           	opt stack 0
  6384                           tblptru	equ	0xFF8
  6385                           tblptrh	equ	0xFF7
  6386                           tblptrl	equ	0xFF6
  6387                           tablat	equ	0xFF5
  6388                           prodh	equ	0xFF4
  6389                           prodl	equ	0xFF3
  6390                           intcon	equ	0xFF2
  6391                           postinc0	equ	0xFEE
  6392                           wreg	equ	0xFE8
  6393                           postdec1	equ	0xFE5
  6394                           plusw1	equ	0xFE3
  6395                           fsr1h	equ	0xFE2
  6396                           fsr1l	equ	0xFE1
  6397                           indf2	equ	0xFDF
  6398                           plusw2	equ	0xFDB
  6399                           fsr2h	equ	0xFDA
  6400                           fsr2l	equ	0xFD9
  6401                           status	equ	0xFD8
  6402                           
  6403 ;; *************** function ___up_epr_ilp_scale_adj *****************
  6404 ;; Defined at:
  6405 ;;		line 534 in file "src/api/key_menu.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    7
  6426 ;; This function calls:
  6427 ;;		_key_adj_value_float
  6428 ;; This function is called by:
  6429 ;;		_key_process_up
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text24
  6434  00A2B0                     __ptext24:
  6435                           	opt stack 0
  6436  00A2B0                     ___up_epr_ilp_scale_adj:
  6437                           	opt stack 21
  6438                           
  6439                           ;key_menu.c: 537: key_adj_value_float(&m_floatAdj,adjLocation);
  6440                           
  6441                           ;incstack = 0
  6442  00A2B0  0E35               	movlw	low _m_floatAdj
  6443  00A2B2  0100               	movlb	0	; () banked
  6444  00A2B4  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6445  00A2B6  0E00               	movlw	high _m_floatAdj
  6446  00A2B8  0100               	movlb	0	; () banked
  6447  00A2BA  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6448  00A2BC  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6449  00A2C0  EC6C  F034         	call	_key_adj_value_float	;wreg free
  6450  00A2C4  0012               	return		;funcret
  6451  00A2C6                     __end_of___up_epr_ilp_scale_adj:
  6452                           	opt stack 0
  6453                           tblptru	equ	0xFF8
  6454                           tblptrh	equ	0xFF7
  6455                           tblptrl	equ	0xFF6
  6456                           tablat	equ	0xFF5
  6457                           prodh	equ	0xFF4
  6458                           prodl	equ	0xFF3
  6459                           intcon	equ	0xFF2
  6460                           postinc0	equ	0xFEE
  6461                           wreg	equ	0xFE8
  6462                           postdec1	equ	0xFE5
  6463                           plusw1	equ	0xFE3
  6464                           fsr1h	equ	0xFE2
  6465                           fsr1l	equ	0xFE1
  6466                           indf2	equ	0xFDF
  6467                           plusw2	equ	0xFDB
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function ___up_epr_calib_adj *****************
  6473 ;; Defined at:
  6474 ;;		line 518 in file "src/api/key_menu.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    7
  6495 ;; This function calls:
  6496 ;;		_key_adj_value_float
  6497 ;; This function is called by:
  6498 ;;		_key_process_up
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text25
  6503  009CB6                     __ptext25:
  6504                           	opt stack 0
  6505  009CB6                     ___up_epr_calib_adj:
  6506                           	opt stack 21
  6507                           
  6508                           ;key_menu.c: 520: switch(subMenu){
  6509                           
  6510                           ;incstack = 0
  6511  009CB6  D00B               	goto	l15905
  6512  009CB8                     l15901:
  6513                           
  6514                           ;key_menu.c: 522: case 0x01:
  6515                           ;key_menu.c: 525: case 0x02:
  6516                           ;key_menu.c: 526: case 0x03:
  6517                           ;key_menu.c: 528: key_adj_value_float(&m_floatAdj,adjLocation);
  6518  009CB8  0E35               	movlw	low _m_floatAdj
  6519  009CBA  0100               	movlb	0	; () banked
  6520  009CBC  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6521  009CBE  0E00               	movlw	high _m_floatAdj
  6522  009CC0  0100               	movlb	0	; () banked
  6523  009CC2  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6524  009CC4  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6525  009CC8  EC6C  F034         	call	_key_adj_value_float	;wreg free
  6526                           
  6527                           ;key_menu.c: 531: }
  6528                           
  6529                           ;key_menu.c: 530: default:break;
  6530                           
  6531                           ;key_menu.c: 529: break;
  6532  009CCC  0012               	return	
  6533  009CCE                     l15905:
  6534  009CCE  5032               	movf	_subMenu,w,c	;volatile
  6535                           
  6536                           ; Switch size 1, requested type "space"
  6537                           ; Number of cases is 4, Range of values is 0 to 3
  6538                           ; switch strategies available:
  6539                           ; Name         Instructions Cycles
  6540                           ; simple_byte           13     7 (average)
  6541                           ;	Chosen strategy is simple_byte
  6542  009CD0  0A00               	xorlw	0	; case 0
  6543  009CD2  B4D8               	btfsc	status,2,c
  6544  009CD4  D7F1               	goto	l15901
  6545  009CD6  0A01               	xorlw	1	; case 1
  6546  009CD8  B4D8               	btfsc	status,2,c
  6547  009CDA  D7EE               	goto	l15901
  6548  009CDC  0A03               	xorlw	3	; case 2
  6549  009CDE  B4D8               	btfsc	status,2,c
  6550  009CE0  D7EB               	goto	l15901
  6551  009CE2  0A01               	xorlw	1	; case 3
  6552  009CE4  A4D8               	btfss	status,2,c
  6553  009CE6  0012               	return	
  6554  009CE8  D7E7               	goto	l15901
  6555  009CEA                     __end_of___up_epr_calib_adj:
  6556                           	opt stack 0
  6557                           tblptru	equ	0xFF8
  6558                           tblptrh	equ	0xFF7
  6559                           tblptrl	equ	0xFF6
  6560                           tablat	equ	0xFF5
  6561                           prodh	equ	0xFF4
  6562                           prodl	equ	0xFF3
  6563                           intcon	equ	0xFF2
  6564                           postinc0	equ	0xFEE
  6565                           wreg	equ	0xFE8
  6566                           postdec1	equ	0xFE5
  6567                           plusw1	equ	0xFE3
  6568                           fsr1h	equ	0xFE2
  6569                           fsr1l	equ	0xFE1
  6570                           indf2	equ	0xFDF
  6571                           plusw2	equ	0xFDB
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8
  6575                           
  6576 ;; *************** function ___up_diff_calib_adj *****************
  6577 ;; Defined at:
  6578 ;;		line 474 in file "src/api/key_menu.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  t8              1   27[BANK0 ] unsigned char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;Total ram usage:        1 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    7
  6599 ;; This function calls:
  6600 ;;		_key_adj_value_float
  6601 ;; This function is called by:
  6602 ;;		_key_process_up
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text26
  6607  009AFE                     __ptext26:
  6608                           	opt stack 0
  6609  009AFE                     ___up_diff_calib_adj:
  6610                           	opt stack 21
  6611                           
  6612                           ;key_menu.c: 476: uint8_t t8;
  6613                           ;key_menu.c: 477: if(calibCol==0){
  6614                           
  6615                           ;incstack = 0
  6616  009AFE  5030               	movf	_calibCol,w,c	;volatile
  6617  009B00  A4D8               	btfss	status,2,c
  6618  009B02  D00E               	goto	l15871
  6619                           
  6620                           ;key_menu.c: 478: t8=*(uint8_t*)(&adjValue);
  6621  009B04  C039  F07B         	movff	_adjValue,___up_diff_calib_adj@t8
  6622                           
  6623                           ;key_menu.c: 479: t8++;
  6624  009B08  0100               	movlb	0	; () banked
  6625  009B0A  2B7B               	incf	___up_diff_calib_adj@t8& (0+255),f,b
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;key_menu.c: 480: if(t8>=6)t8=2;
  6629  009B0C  0E05               	movlw	5
  6630  009B0E  0100               	movlb	0	; () banked
  6631  009B10  657B               	cpfsgt	___up_diff_calib_adj@t8& (0+255),b
  6632  009B12  D003               	goto	l15869
  6633                           
  6634                           ; BSR set to: 0
  6635  009B14  0E02               	movlw	2
  6636  009B16  0100               	movlb	0	; () banked
  6637  009B18  6F7B               	movwf	___up_diff_calib_adj@t8& (0+255),b
  6638  009B1A                     l15869:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;key_menu.c: 481: *(uint8_t*)(&adjValue)=t8;
  6642  009B1A  C07B  F039         	movff	___up_diff_calib_adj@t8,_adjValue
  6643                           
  6644                           ;key_menu.c: 482: }else{
  6645  009B1E  0012               	return	
  6646  009B20                     l15871:
  6647                           
  6648                           ;key_menu.c: 483: key_adj_value_float(&m_floatAdj,adjLocation);
  6649  009B20  0E35               	movlw	low _m_floatAdj
  6650  009B22  0100               	movlb	0	; () banked
  6651  009B24  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6652  009B26  0E00               	movlw	high _m_floatAdj
  6653  009B28  0100               	movlb	0	; () banked
  6654  009B2A  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6655  009B2C  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6656  009B30  EC6C  F034         	call	_key_adj_value_float	;wreg free
  6657  009B34  0012               	return	
  6658  009B36                     __end_of___up_diff_calib_adj:
  6659                           	opt stack 0
  6660                           tblptru	equ	0xFF8
  6661                           tblptrh	equ	0xFF7
  6662                           tblptrl	equ	0xFF6
  6663                           tablat	equ	0xFF5
  6664                           prodh	equ	0xFF4
  6665                           prodl	equ	0xFF3
  6666                           intcon	equ	0xFF2
  6667                           postinc0	equ	0xFEE
  6668                           wreg	equ	0xFE8
  6669                           postdec1	equ	0xFE5
  6670                           plusw1	equ	0xFE3
  6671                           fsr1h	equ	0xFE2
  6672                           fsr1l	equ	0xFE1
  6673                           indf2	equ	0xFDF
  6674                           plusw2	equ	0xFDB
  6675                           fsr2h	equ	0xFDA
  6676                           fsr2l	equ	0xFD9
  6677                           status	equ	0xFD8
  6678                           
  6679 ;; *************** function ___up_density_adj *****************
  6680 ;; Defined at:
  6681 ;;		line 445 in file "src/api/key_menu.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    7
  6702 ;; This function calls:
  6703 ;;		_key_adj_value_float
  6704 ;; This function is called by:
  6705 ;;		_key_process_up
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text27
  6710  00A2C6                     __ptext27:
  6711                           	opt stack 0
  6712  00A2C6                     ___up_density_adj:
  6713                           	opt stack 21
  6714                           
  6715                           ;key_menu.c: 447: key_adj_value_float(&m_floatAdj,adjLocation);
  6716                           
  6717                           ;incstack = 0
  6718  00A2C6  0E35               	movlw	low _m_floatAdj
  6719  00A2C8  0100               	movlb	0	; () banked
  6720  00A2CA  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6721  00A2CC  0E00               	movlw	high _m_floatAdj
  6722  00A2CE  0100               	movlb	0	; () banked
  6723  00A2D0  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6724  00A2D2  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6725  00A2D6  EC6C  F034         	call	_key_adj_value_float	;wreg free
  6726  00A2DA  0012               	return		;funcret
  6727  00A2DC                     __end_of___up_density_adj:
  6728                           	opt stack 0
  6729                           tblptru	equ	0xFF8
  6730                           tblptrh	equ	0xFF7
  6731                           tblptrl	equ	0xFF6
  6732                           tablat	equ	0xFF5
  6733                           prodh	equ	0xFF4
  6734                           prodl	equ	0xFF3
  6735                           intcon	equ	0xFF2
  6736                           postinc0	equ	0xFEE
  6737                           wreg	equ	0xFE8
  6738                           postdec1	equ	0xFE5
  6739                           plusw1	equ	0xFE3
  6740                           fsr1h	equ	0xFE2
  6741                           fsr1l	equ	0xFE1
  6742                           indf2	equ	0xFDF
  6743                           plusw2	equ	0xFDB
  6744                           fsr2h	equ	0xFDA
  6745                           fsr2l	equ	0xFD9
  6746                           status	equ	0xFD8
  6747                           
  6748 ;; *************** function ___up_base_zero_adj *****************
  6749 ;; Defined at:
  6750 ;;		line 467 in file "src/api/key_menu.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;		None
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;Total ram usage:        0 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    7
  6771 ;; This function calls:
  6772 ;;		_key_adj_value_float
  6773 ;; This function is called by:
  6774 ;;		_key_process_up
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text28
  6779  00A2DC                     __ptext28:
  6780                           	opt stack 0
  6781  00A2DC                     ___up_base_zero_adj:
  6782                           	opt stack 21
  6783                           
  6784                           ;key_menu.c: 469: key_adj_value_float(&m_floatAdj,adjLocation);
  6785                           
  6786                           ;incstack = 0
  6787  00A2DC  0E35               	movlw	low _m_floatAdj
  6788  00A2DE  0100               	movlb	0	; () banked
  6789  00A2E0  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6790  00A2E2  0E00               	movlw	high _m_floatAdj
  6791  00A2E4  0100               	movlb	0	; () banked
  6792  00A2E6  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6793  00A2E8  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6794  00A2EC  EC6C  F034         	call	_key_adj_value_float	;wreg free
  6795  00A2F0  0012               	return		;funcret
  6796  00A2F2                     __end_of___up_base_zero_adj:
  6797                           	opt stack 0
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           prodh	equ	0xFF4
  6803                           prodl	equ	0xFF3
  6804                           intcon	equ	0xFF2
  6805                           postinc0	equ	0xFEE
  6806                           wreg	equ	0xFE8
  6807                           postdec1	equ	0xFE5
  6808                           plusw1	equ	0xFE3
  6809                           fsr1h	equ	0xFE2
  6810                           fsr1l	equ	0xFE1
  6811                           indf2	equ	0xFDF
  6812                           plusw2	equ	0xFDB
  6813                           fsr2h	equ	0xFDA
  6814                           fsr2l	equ	0xFD9
  6815                           status	equ	0xFD8
  6816                           
  6817 ;; *************** function _key_adj_value_float *****************
  6818 ;; Defined at:
  6819 ;;		line 75 in file "src/api/key_menu.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  mfp             2   21[BANK0 ] PTR struct .
  6822 ;;		 -> m_floatAdj(4), 
  6823 ;;  loc             1   23[BANK0 ] unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  t16             2   24[BANK0 ] unsigned int 
  6826 ;;  t8              1   26[BANK0 ] unsigned char 
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  1    wreg      void 
  6829 ;; Registers used:
  6830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6836 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;Total ram usage:        6 bytes
  6841 ;; Hardware stack levels used:    1
  6842 ;; Hardware stack levels required when called:    6
  6843 ;; This function calls:
  6844 ;;		_key_adj_value_fixed
  6845 ;; This function is called by:
  6846 ;;		___up_density_adj
  6847 ;;		___up_pose_size_adj
  6848 ;;		___up_base_zero_adj
  6849 ;;		___up_diff_calib_adj
  6850 ;;		___up_pr_calib_adj
  6851 ;;		___up_warn_value_adj
  6852 ;;		___up_epr_calib_adj
  6853 ;;		___up_epr_ilp_scale_adj
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text29
  6858  0068D8                     __ptext29:
  6859                           	opt stack 0
  6860  0068D8                     _key_adj_value_float:
  6861                           	opt stack 21
  6862                           
  6863                           ;key_menu.c: 77: uint16_t t16;
  6864                           ;key_menu.c: 78: uint8_t t8;
  6865                           ;key_menu.c: 79: t16=mfp->stru.significand;
  6866                           
  6867                           ;incstack = 0
  6868  0068D8  C075  FFD9         	movff	key_adj_value_float@mfp,fsr2l
  6869  0068DC  C076  FFDA         	movff	key_adj_value_float@mfp+1,fsr2h
  6870  0068E0  CFDE F078          	movff	postinc2,key_adj_value_float@t16
  6871  0068E4  CFDD F079          	movff	postdec2,key_adj_value_float@t16+1
  6872                           
  6873                           ;key_menu.c: 80: if(loc<4){
  6874  0068E8  0E04               	movlw	4
  6875  0068EA  0100               	movlb	0	; () banked
  6876  0068EC  6177               	cpfslt	key_adj_value_float@loc& (0+255),b
  6877  0068EE  D013               	goto	l15089
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;key_menu.c: 81: key_adj_value_fixed(&t16,loc);
  6881  0068F0  0E78               	movlw	low key_adj_value_float@t16
  6882  0068F2  0100               	movlb	0	; () banked
  6883  0068F4  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6884  0068F6  0E00               	movlw	high key_adj_value_float@t16
  6885  0068F8  0100               	movlb	0	; () banked
  6886  0068FA  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  6887  0068FC  C077  F070         	movff	key_adj_value_float@loc,key_adj_value_fixed@loc
  6888  006900  EC0F  F033         	call	_key_adj_value_fixed	;wreg free
  6889                           
  6890                           ;key_menu.c: 82: mfp->stru.significand=t16;
  6891  006904  C075  FFD9         	movff	key_adj_value_float@mfp,fsr2l
  6892  006908  C076  FFDA         	movff	key_adj_value_float@mfp+1,fsr2h
  6893  00690C  C078  FFDE         	movff	key_adj_value_float@t16,postinc2
  6894  006910  C079  FFDD         	movff	key_adj_value_float@t16+1,postdec2
  6895                           
  6896                           ;key_menu.c: 83: }else if(loc==4){
  6897  006914  0012               	return	
  6898  006916                     l15089:
  6899  006916  0E04               	movlw	4
  6900  006918  0100               	movlb	0	; () banked
  6901  00691A  1977               	xorwf	key_adj_value_float@loc& (0+255),w,b
  6902  00691C  A4D8               	btfss	status,2,c
  6903  00691E  D02E               	goto	l15107
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;key_menu.c: 84: t8=mfp->stru.exponent;
  6907  006920  0100               	movlb	0	; () banked
  6908  006922  EE20 F002          	lfsr	2,2
  6909  006926  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  6910  006928  26D9               	addwf	fsr2l,f,c
  6911  00692A  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  6912  00692C  22DA               	addwfc	fsr2h,f,c
  6913  00692E  50DF               	movf	indf2,w,c
  6914  006930  0100               	movlb	0	; () banked
  6915  006932  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;key_menu.c: 85: t8++;
  6919  006934  0100               	movlb	0	; () banked
  6920  006936  2B7A               	incf	key_adj_value_float@t8& (0+255),f,b
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;key_menu.c: 86: if(t8>3 )t8=0;
  6924  006938  0E03               	movlw	3
  6925  00693A  0100               	movlb	0	; () banked
  6926  00693C  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  6927  00693E  D003               	goto	l15099
  6928                           
  6929                           ; BSR set to: 0
  6930  006940  0E00               	movlw	0
  6931  006942  0100               	movlb	0	; () banked
  6932  006944  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  6933  006946                     l15099:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;key_menu.c: 87: if(mfp->stru.sign){
  6937  006946  0100               	movlb	0	; () banked
  6938  006948  EE20 F003          	lfsr	2,3
  6939  00694C  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  6940  00694E  26D9               	addwf	fsr2l,f,c
  6941  006950  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  6942  006952  22DA               	addwfc	fsr2h,f,c
  6943  006954  50DF               	movf	indf2,w,c
  6944  006956  B4D8               	btfsc	status,2,c
  6945  006958  D007               	goto	l15105
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;key_menu.c: 88: if(t8>2)t8=0;
  6949  00695A  0E02               	movlw	2
  6950  00695C  0100               	movlb	0	; () banked
  6951  00695E  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  6952  006960  D003               	goto	l15105
  6953                           
  6954                           ; BSR set to: 0
  6955  006962  0E00               	movlw	0
  6956  006964  0100               	movlb	0	; () banked
  6957  006966  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  6958  006968                     l15105:
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;key_menu.c: 89: }
  6962                           ;key_menu.c: 90: mfp->stru.exponent=t8;
  6963  006968  0100               	movlb	0	; () banked
  6964  00696A  EE20 F002          	lfsr	2,2
  6965  00696E  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  6966  006970  26D9               	addwf	fsr2l,f,c
  6967  006972  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  6968  006974  22DA               	addwfc	fsr2h,f,c
  6969  006976  C07A  FFDF         	movff	key_adj_value_float@t8,indf2
  6970                           
  6971                           ;key_menu.c: 91: }else{
  6972  00697A  0012               	return	
  6973  00697C                     l15107:
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;key_menu.c: 92: t8=mfp->stru.sign;
  6977  00697C  0100               	movlb	0	; () banked
  6978  00697E  EE20 F003          	lfsr	2,3
  6979  006982  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  6980  006984  26D9               	addwf	fsr2l,f,c
  6981  006986  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  6982  006988  22DA               	addwfc	fsr2h,f,c
  6983  00698A  50DF               	movf	indf2,w,c
  6984  00698C  0100               	movlb	0	; () banked
  6985  00698E  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;key_menu.c: 93: t8++;
  6989  006990  0100               	movlb	0	; () banked
  6990  006992  2B7A               	incf	key_adj_value_float@t8& (0+255),f,b
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;key_menu.c: 94: if(t8>1)t8=0;
  6994  006994  0E01               	movlw	1
  6995  006996  0100               	movlb	0	; () banked
  6996  006998  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  6997  00699A  D003               	goto	l15115
  6998                           
  6999                           ; BSR set to: 0
  7000  00699C  0E00               	movlw	0
  7001  00699E  0100               	movlb	0	; () banked
  7002  0069A0  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7003  0069A2                     l15115:
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;key_menu.c: 96: mfp->stru.sign=t8;
  7007  0069A2  0100               	movlb	0	; () banked
  7008  0069A4  EE20 F003          	lfsr	2,3
  7009  0069A8  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7010  0069AA  26D9               	addwf	fsr2l,f,c
  7011  0069AC  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7012  0069AE  22DA               	addwfc	fsr2h,f,c
  7013  0069B0  C07A  FFDF         	movff	key_adj_value_float@t8,indf2
  7014                           
  7015                           ; BSR set to: 0
  7016  0069B4  0012               	return	
  7017  0069B6                     __end_of_key_adj_value_float:
  7018                           	opt stack 0
  7019                           tblptru	equ	0xFF8
  7020                           tblptrh	equ	0xFF7
  7021                           tblptrl	equ	0xFF6
  7022                           tablat	equ	0xFF5
  7023                           prodh	equ	0xFF4
  7024                           prodl	equ	0xFF3
  7025                           intcon	equ	0xFF2
  7026                           postinc0	equ	0xFEE
  7027                           wreg	equ	0xFE8
  7028                           postdec1	equ	0xFE5
  7029                           plusw1	equ	0xFE3
  7030                           fsr1h	equ	0xFE2
  7031                           fsr1l	equ	0xFE1
  7032                           indf2	equ	0xFDF
  7033                           postinc2	equ	0xFDE
  7034                           postdec2	equ	0xFDD
  7035                           plusw2	equ	0xFDB
  7036                           fsr2h	equ	0xFDA
  7037                           fsr2l	equ	0xFD9
  7038                           status	equ	0xFD8
  7039                           
  7040 ;; *************** function ___up_adj_work_mode *****************
  7041 ;; Defined at:
  7042 ;;		line 546 in file "src/api/key_menu.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7047 ;;		 -> adjValue(4), 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      void 
  7050 ;; Registers used:
  7051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;Total ram usage:        2 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    4
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_key_process_up
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text30
  7072  009C14                     __ptext30:
  7073                           	opt stack 0
  7074  009C14                     ___up_adj_work_mode:
  7075                           	opt stack 24
  7076                           
  7077                           ;key_menu.c: 548: uint8_t* p;
  7078                           ;key_menu.c: 549: p=(uint8_t*)(&adjValue);
  7079                           
  7080                           ;incstack = 0
  7081  009C14  0E39               	movlw	low _adjValue
  7082  009C16  0100               	movlb	0	; () banked
  7083  009C18  6F60               	movwf	___up_adj_work_mode@p& (0+255),b
  7084  009C1A  0E00               	movlw	high _adjValue
  7085  009C1C  0100               	movlb	0	; () banked
  7086  009C1E  6F61               	movwf	(___up_adj_work_mode@p+1)& (0+255),b
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;key_menu.c: 550: if(*p==TEST_MODE){
  7090  009C20  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7091  009C24  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7092  009C28  50DF               	movf	indf2,w,c
  7093  009C2A  A4D8               	btfss	status,2,c
  7094  009C2C  D007               	goto	l15917
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;key_menu.c: 551: *p=WORK_MODE;
  7098  009C2E  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7099  009C32  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7100  009C36  0E01               	movlw	1
  7101  009C38  6EDF               	movwf	indf2,c
  7102                           
  7103                           ;key_menu.c: 552: }else{
  7104  009C3A  0012               	return	
  7105  009C3C                     l15917:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;key_menu.c: 553: *p=TEST_MODE;
  7109  009C3C  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7110  009C40  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7111  009C44  0E00               	movlw	0
  7112  009C46  6EDF               	movwf	indf2,c
  7113  009C48  0012               	return	
  7114  009C4A                     __end_of___up_adj_work_mode:
  7115                           	opt stack 0
  7116                           tblptru	equ	0xFF8
  7117                           tblptrh	equ	0xFF7
  7118                           tblptrl	equ	0xFF6
  7119                           tablat	equ	0xFF5
  7120                           prodh	equ	0xFF4
  7121                           prodl	equ	0xFF3
  7122                           intcon	equ	0xFF2
  7123                           postinc0	equ	0xFEE
  7124                           wreg	equ	0xFE8
  7125                           postdec1	equ	0xFE5
  7126                           plusw1	equ	0xFE3
  7127                           fsr1h	equ	0xFE2
  7128                           fsr1l	equ	0xFE1
  7129                           indf2	equ	0xFDF
  7130                           postinc2	equ	0xFDE
  7131                           postdec2	equ	0xFDD
  7132                           plusw2	equ	0xFDB
  7133                           fsr2h	equ	0xFDA
  7134                           fsr2l	equ	0xFD9
  7135                           status	equ	0xFD8
  7136                           
  7137 ;; *************** function ___up_adj_bar_level_scale *****************
  7138 ;; Defined at:
  7139 ;;		line 541 in file "src/api/key_menu.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;		None
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;		None
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      void 
  7146 ;; Registers used:
  7147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;Total ram usage:        0 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    6
  7160 ;; This function calls:
  7161 ;;		_key_adj_value_fixed
  7162 ;; This function is called by:
  7163 ;;		_key_process_up
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text31
  7168  00A2F2                     __ptext31:
  7169                           	opt stack 0
  7170  00A2F2                     ___up_adj_bar_level_scale:
  7171                           	opt stack 22
  7172                           
  7173                           ;key_menu.c: 543: key_adj_value_fixed((uint16_t*)(&adjValue),adjLocation);
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;incstack = 0
  7177  00A2F2  0E39               	movlw	low _adjValue
  7178  00A2F4  0100               	movlb	0	; () banked
  7179  00A2F6  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  7180  00A2F8  0E00               	movlw	high _adjValue
  7181  00A2FA  0100               	movlb	0	; () banked
  7182  00A2FC  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  7183  00A2FE  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  7184  00A302  EC0F  F033         	call	_key_adj_value_fixed	;wreg free
  7185  00A306  0012               	return		;funcret
  7186  00A308                     __end_of___up_adj_bar_level_scale:
  7187                           	opt stack 0
  7188                           tblptru	equ	0xFF8
  7189                           tblptrh	equ	0xFF7
  7190                           tblptrl	equ	0xFF6
  7191                           tablat	equ	0xFF5
  7192                           prodh	equ	0xFF4
  7193                           prodl	equ	0xFF3
  7194                           intcon	equ	0xFF2
  7195                           postinc0	equ	0xFEE
  7196                           wreg	equ	0xFE8
  7197                           postdec1	equ	0xFE5
  7198                           plusw1	equ	0xFE3
  7199                           fsr1h	equ	0xFE2
  7200                           fsr1l	equ	0xFE1
  7201                           indf2	equ	0xFDF
  7202                           postinc2	equ	0xFDE
  7203                           postdec2	equ	0xFDD
  7204                           plusw2	equ	0xFDB
  7205                           fsr2h	equ	0xFDA
  7206                           fsr2l	equ	0xFD9
  7207                           status	equ	0xFD8
  7208                           
  7209 ;; *************** function _key_adj_value_fixed *****************
  7210 ;; Defined at:
  7211 ;;		line 61 in file "src/api/key_menu.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  value           2   14[BANK0 ] PTR unsigned int 
  7214 ;;		 -> adjValue(4), passWord(2), key_adj_value_float@t16(2), 
  7215 ;;  loc             1   16[BANK0 ] unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  t16             2   19[BANK0 ] unsigned int 
  7218 ;;  dloc            2   17[BANK0 ] unsigned int 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7228 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7229 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;Total ram usage:        7 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    5
  7235 ;; This function calls:
  7236 ;;		___exp_10
  7237 ;;		___lwdiv
  7238 ;;		___lwmod
  7239 ;;		___wmul
  7240 ;; This function is called by:
  7241 ;;		_key_adj_value_float
  7242 ;;		___up_psw_adj
  7243 ;;		___up_poly_coefic_adj
  7244 ;;		___up_adj_bar_level_scale
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text32
  7249  00661E                     __ptext32:
  7250                           	opt stack 0
  7251  00661E                     _key_adj_value_fixed:
  7252                           	opt stack 21
  7253                           
  7254                           ;key_menu.c: 63: uint16_t dloc;
  7255                           ;key_menu.c: 64: uint16_t t16=*value;
  7256                           
  7257                           ;incstack = 0
  7258  00661E  C06E  FFD9         	movff	key_adj_value_fixed@value,fsr2l
  7259  006622  C06F  FFDA         	movff	key_adj_value_fixed@value+1,fsr2h
  7260  006626  CFDE F073          	movff	postinc2,key_adj_value_fixed@t16
  7261  00662A  CFDD F074          	movff	postdec2,key_adj_value_fixed@t16+1
  7262                           
  7263                           ;key_menu.c: 65: if(loc>3)loc=3;
  7264  00662E  0E03               	movlw	3
  7265  006630  0100               	movlb	0	; () banked
  7266  006632  6570               	cpfsgt	key_adj_value_fixed@loc& (0+255),b
  7267  006634  D003               	goto	l14631
  7268                           
  7269                           ; BSR set to: 0
  7270  006636  0E03               	movlw	3
  7271  006638  0100               	movlb	0	; () banked
  7272  00663A  6F70               	movwf	key_adj_value_fixed@loc& (0+255),b
  7273  00663C                     l14631:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;key_menu.c: 66: dloc=(t16/__exp_10(loc))%10;
  7277  00663C  0100               	movlb	0	; () banked
  7278  00663E  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7279  006640  EC3D  F049         	call	___exp_10
  7280  006644  C060  F064         	movff	?___exp_10,___lwdiv@divisor
  7281  006648  C061  F065         	movff	?___exp_10+1,___lwdiv@divisor+1
  7282  00664C  C073  F062         	movff	key_adj_value_fixed@t16,___lwdiv@dividend
  7283  006650  C074  F063         	movff	key_adj_value_fixed@t16+1,___lwdiv@dividend+1
  7284  006654  EC46  F043         	call	___lwdiv	;wreg free
  7285  006658  C062  F069         	movff	?___lwdiv,___lwmod@dividend
  7286  00665C  C063  F06A         	movff	?___lwdiv+1,___lwmod@dividend+1
  7287  006660  0E00               	movlw	0
  7288  006662  0100               	movlb	0	; () banked
  7289  006664  6F6C               	movwf	(___lwmod@divisor+1)& (0+255),b
  7290  006666  0E0A               	movlw	10
  7291  006668  6F6B               	movwf	___lwmod@divisor& (0+255),b
  7292  00666A  EC1E  F048         	call	___lwmod	;wreg free
  7293  00666E  C069  F071         	movff	?___lwmod,key_adj_value_fixed@dloc
  7294  006672  C06A  F072         	movff	?___lwmod+1,key_adj_value_fixed@dloc+1
  7295                           
  7296                           ;key_menu.c: 67: t16=t16-dloc*__exp_10(loc);
  7297  006676  0100               	movlb	0	; () banked
  7298  006678  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7299  00667A  EC3D  F049         	call	___exp_10
  7300  00667E  C060  F062         	movff	?___exp_10,___wmul@multiplier
  7301  006682  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  7302  006686  C071  F064         	movff	key_adj_value_fixed@dloc,___wmul@multiplicand
  7303  00668A  C072  F065         	movff	key_adj_value_fixed@dloc+1,___wmul@multiplicand+1
  7304  00668E  EC25  F04E         	call	___wmul	;wreg free
  7305  006692  0100               	movlb	0	; () banked
  7306  006694  1F62               	comf	?___wmul& (0+255),f,b
  7307  006696  0100               	movlb	0	; () banked
  7308  006698  1F63               	comf	(?___wmul+1)& (0+255),f,b
  7309  00669A  0100               	movlb	0	; () banked
  7310  00669C  4B62               	infsnz	?___wmul& (0+255),f,b
  7311  00669E  2B63               	incf	(?___wmul+1)& (0+255),f,b
  7312  0066A0  0100               	movlb	0	; () banked
  7313  0066A2  5173               	movf	key_adj_value_fixed@t16& (0+255),w,b
  7314  0066A4  0100               	movlb	0	; () banked
  7315  0066A6  2562               	addwf	?___wmul& (0+255),w,b
  7316  0066A8  0100               	movlb	0	; () banked
  7317  0066AA  6F73               	movwf	key_adj_value_fixed@t16& (0+255),b
  7318  0066AC  0100               	movlb	0	; () banked
  7319  0066AE  5174               	movf	(key_adj_value_fixed@t16+1)& (0+255),w,b
  7320  0066B0  0100               	movlb	0	; () banked
  7321  0066B2  2163               	addwfc	(?___wmul+1)& (0+255),w,b
  7322  0066B4  0100               	movlb	0	; () banked
  7323  0066B6  6F74               	movwf	(key_adj_value_fixed@t16+1)& (0+255),b
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;key_menu.c: 68: dloc++;
  7327  0066B8  0100               	movlb	0	; () banked
  7328  0066BA  4B71               	infsnz	key_adj_value_fixed@dloc& (0+255),f,b
  7329  0066BC  2B72               	incf	(key_adj_value_fixed@dloc+1)& (0+255),f,b
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;key_menu.c: 69: if(dloc>9)dloc=0;
  7333  0066BE  0100               	movlb	0	; () banked
  7334  0066C0  5172               	movf	(key_adj_value_fixed@dloc+1)& (0+255),w,b
  7335  0066C2  E105               	bnz	u13360
  7336  0066C4  0E0A               	movlw	10
  7337  0066C6  0100               	movlb	0	; () banked
  7338  0066C8  5D71               	subwf	key_adj_value_fixed@dloc& (0+255),w,b
  7339  0066CA  A0D8               	btfss	status,0,c
  7340  0066CC  D005               	goto	l14641
  7341  0066CE                     u13360:
  7342                           
  7343                           ; BSR set to: 0
  7344  0066CE  0E00               	movlw	0
  7345  0066D0  0100               	movlb	0	; () banked
  7346  0066D2  6F72               	movwf	(key_adj_value_fixed@dloc+1)& (0+255),b
  7347  0066D4  0E00               	movlw	0
  7348  0066D6  6F71               	movwf	key_adj_value_fixed@dloc& (0+255),b
  7349  0066D8                     l14641:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;key_menu.c: 70: t16+=(dloc*__exp_10(loc));
  7353  0066D8  0100               	movlb	0	; () banked
  7354  0066DA  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7355  0066DC  EC3D  F049         	call	___exp_10
  7356  0066E0  C060  F062         	movff	?___exp_10,___wmul@multiplier
  7357  0066E4  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  7358  0066E8  C071  F064         	movff	key_adj_value_fixed@dloc,___wmul@multiplicand
  7359  0066EC  C072  F065         	movff	key_adj_value_fixed@dloc+1,___wmul@multiplicand+1
  7360  0066F0  EC25  F04E         	call	___wmul	;wreg free
  7361  0066F4  0100               	movlb	0	; () banked
  7362  0066F6  5162               	movf	?___wmul& (0+255),w,b
  7363  0066F8  0100               	movlb	0	; () banked
  7364  0066FA  2773               	addwf	key_adj_value_fixed@t16& (0+255),f,b
  7365  0066FC  0100               	movlb	0	; () banked
  7366  0066FE  5163               	movf	(?___wmul+1)& (0+255),w,b
  7367  006700  0100               	movlb	0	; () banked
  7368  006702  2374               	addwfc	(key_adj_value_fixed@t16+1)& (0+255),f,b
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;key_menu.c: 71: *value=t16;
  7372  006704  C06E  FFD9         	movff	key_adj_value_fixed@value,fsr2l
  7373  006708  C06F  FFDA         	movff	key_adj_value_fixed@value+1,fsr2h
  7374  00670C  C073  FFDE         	movff	key_adj_value_fixed@t16,postinc2
  7375  006710  C074  FFDD         	movff	key_adj_value_fixed@t16+1,postdec2
  7376                           
  7377                           ; BSR set to: 0
  7378  006714  0012               	return		;funcret
  7379  006716                     __end_of_key_adj_value_fixed:
  7380                           	opt stack 0
  7381                           tblptru	equ	0xFF8
  7382                           tblptrh	equ	0xFF7
  7383                           tblptrl	equ	0xFF6
  7384                           tablat	equ	0xFF5
  7385                           prodh	equ	0xFF4
  7386                           prodl	equ	0xFF3
  7387                           intcon	equ	0xFF2
  7388                           postinc0	equ	0xFEE
  7389                           wreg	equ	0xFE8
  7390                           postdec1	equ	0xFE5
  7391                           plusw1	equ	0xFE3
  7392                           fsr1h	equ	0xFE2
  7393                           fsr1l	equ	0xFE1
  7394                           indf2	equ	0xFDF
  7395                           postinc2	equ	0xFDE
  7396                           postdec2	equ	0xFDD
  7397                           plusw2	equ	0xFDB
  7398                           fsr2h	equ	0xFDA
  7399                           fsr2l	equ	0xFD9
  7400                           status	equ	0xFD8
  7401                           
  7402 ;; *************** function ___lwmod *****************
  7403 ;; Defined at:
  7404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  dividend        2    9[BANK0 ] unsigned int 
  7407 ;;  divisor         2   11[BANK0 ] unsigned int 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;  counter         1   13[BANK0 ] unsigned char 
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  2    9[BANK0 ] unsigned int 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7422 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7423 ;;Total ram usage:        5 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    4
  7426 ;; This function calls:
  7427 ;;		Nothing
  7428 ;; This function is called by:
  7429 ;;		_key_adj_value_fixed
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text33
  7434  00903C                     __ptext33:
  7435                           	opt stack 0
  7436  00903C                     ___lwmod:
  7437                           	opt stack 21
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;incstack = 0
  7441  00903C  0100               	movlb	0	; () banked
  7442  00903E  516B               	movf	___lwmod@divisor& (0+255),w,b
  7443  009040  0100               	movlb	0	; () banked
  7444  009042  116C               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7445  009044  B4D8               	btfsc	status,2,c
  7446  009046  D026               	goto	l2800
  7447                           
  7448                           ; BSR set to: 0
  7449  009048  0E01               	movlw	1
  7450  00904A  0100               	movlb	0	; () banked
  7451  00904C  6F6D               	movwf	___lwmod@counter& (0+255),b
  7452  00904E  D006               	goto	l14315
  7453  009050                     l14313:
  7454                           
  7455                           ; BSR set to: 0
  7456  009050  0100               	movlb	0	; () banked
  7457  009052  90D8               	bcf	status,0,c
  7458  009054  376B               	rlcf	___lwmod@divisor& (0+255),f,b
  7459  009056  376C               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7460  009058  0100               	movlb	0	; () banked
  7461  00905A  2B6D               	incf	___lwmod@counter& (0+255),f,b
  7462  00905C                     l14315:
  7463                           
  7464                           ; BSR set to: 0
  7465  00905C  0100               	movlb	0	; () banked
  7466  00905E  AF6C               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7467  009060  D7F7               	goto	l14313
  7468  009062                     l14317:
  7469                           
  7470                           ; BSR set to: 0
  7471  009062  0100               	movlb	0	; () banked
  7472  009064  516B               	movf	___lwmod@divisor& (0+255),w,b
  7473  009066  0100               	movlb	0	; () banked
  7474  009068  5D69               	subwf	___lwmod@dividend& (0+255),w,b
  7475  00906A  0100               	movlb	0	; () banked
  7476  00906C  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7477  00906E  0100               	movlb	0	; () banked
  7478  009070  596A               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7479  009072  A0D8               	btfss	status,0,c
  7480  009074  D008               	goto	l14321
  7481                           
  7482                           ; BSR set to: 0
  7483  009076  0100               	movlb	0	; () banked
  7484  009078  516B               	movf	___lwmod@divisor& (0+255),w,b
  7485  00907A  0100               	movlb	0	; () banked
  7486  00907C  5F69               	subwf	___lwmod@dividend& (0+255),f,b
  7487  00907E  0100               	movlb	0	; () banked
  7488  009080  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7489  009082  0100               	movlb	0	; () banked
  7490  009084  5B6A               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7491  009086                     l14321:
  7492                           
  7493                           ; BSR set to: 0
  7494  009086  0100               	movlb	0	; () banked
  7495  009088  90D8               	bcf	status,0,c
  7496  00908A  336C               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7497  00908C  336B               	rrcf	___lwmod@divisor& (0+255),f,b
  7498                           
  7499                           ; BSR set to: 0
  7500  00908E  0100               	movlb	0	; () banked
  7501  009090  2F6D               	decfsz	___lwmod@counter& (0+255),f,b
  7502  009092  D7E7               	goto	l14317
  7503  009094                     l2800:
  7504                           
  7505                           ; BSR set to: 0
  7506  009094  C069  F069         	movff	___lwmod@dividend,?___lwmod
  7507  009098  C06A  F06A         	movff	___lwmod@dividend+1,?___lwmod+1
  7508                           
  7509                           ; BSR set to: 0
  7510  00909C  0012               	return		;funcret
  7511  00909E                     __end_of___lwmod:
  7512                           	opt stack 0
  7513                           tblptru	equ	0xFF8
  7514                           tblptrh	equ	0xFF7
  7515                           tblptrl	equ	0xFF6
  7516                           tablat	equ	0xFF5
  7517                           prodh	equ	0xFF4
  7518                           prodl	equ	0xFF3
  7519                           intcon	equ	0xFF2
  7520                           postinc0	equ	0xFEE
  7521                           wreg	equ	0xFE8
  7522                           postdec1	equ	0xFE5
  7523                           plusw1	equ	0xFE3
  7524                           fsr1h	equ	0xFE2
  7525                           fsr1l	equ	0xFE1
  7526                           indf2	equ	0xFDF
  7527                           postinc2	equ	0xFDE
  7528                           postdec2	equ	0xFDD
  7529                           plusw2	equ	0xFDB
  7530                           fsr2h	equ	0xFDA
  7531                           fsr2l	equ	0xFD9
  7532                           status	equ	0xFD8
  7533                           
  7534 ;; *************** function ___exp_10 *****************
  7535 ;; Defined at:
  7536 ;;		line 21 in file "src/api/key_menu.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  n               1    wreg     unsigned char 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;  n               1   31[COMRAM] unsigned char 
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  2    0[BANK0 ] unsigned int 
  7543 ;; Registers used:
  7544 ;;		wreg, status,2, status,0
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;Total ram usage:        3 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:    4
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_key_adj_value_fixed
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text34
  7565  00927A                     __ptext34:
  7566                           	opt stack 0
  7567  00927A                     ___exp_10:
  7568                           	opt stack 21
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;incstack = 0
  7572                           ;___exp_10@n stored from wreg
  7573  00927A  6E20               	movwf	___exp_10@n,c
  7574                           
  7575                           ;key_menu.c: 23: switch(n){
  7576  00927C  D01E               	goto	l13997
  7577  00927E                     l13975:
  7578  00927E  0E00               	movlw	0
  7579  009280  0100               	movlb	0	; () banked
  7580  009282  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7581  009284  0E01               	movlw	1
  7582  009286  6F60               	movwf	?___exp_10& (0+255),b
  7583                           
  7584                           ; BSR set to: 0
  7585  009288  0012               	return	
  7586  00928A                     l13979:
  7587  00928A  0E00               	movlw	0
  7588  00928C  0100               	movlb	0	; () banked
  7589  00928E  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7590  009290  0E0A               	movlw	10
  7591  009292  6F60               	movwf	?___exp_10& (0+255),b
  7592                           
  7593                           ; BSR set to: 0
  7594  009294  0012               	return	
  7595  009296                     l13983:
  7596  009296  0E00               	movlw	0
  7597  009298  0100               	movlb	0	; () banked
  7598  00929A  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7599  00929C  0E64               	movlw	100
  7600  00929E  6F60               	movwf	?___exp_10& (0+255),b
  7601                           
  7602                           ; BSR set to: 0
  7603  0092A0  0012               	return	
  7604  0092A2                     l13987:
  7605  0092A2  0E03               	movlw	3
  7606  0092A4  0100               	movlb	0	; () banked
  7607  0092A6  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7608  0092A8  0EE8               	movlw	232
  7609  0092AA  6F60               	movwf	?___exp_10& (0+255),b
  7610                           
  7611                           ; BSR set to: 0
  7612  0092AC  0012               	return	
  7613  0092AE                     l13991:
  7614  0092AE  0E03               	movlw	3
  7615  0092B0  0100               	movlb	0	; () banked
  7616  0092B2  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7617  0092B4  0EE8               	movlw	232
  7618  0092B6  6F60               	movwf	?___exp_10& (0+255),b
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;key_menu.c: 29: }
  7622                           
  7623                           ; BSR set to: 0
  7624  0092B8  0012               	return	
  7625  0092BA                     l13997:
  7626  0092BA  5020               	movf	___exp_10@n,w,c
  7627                           
  7628                           ; Switch size 1, requested type "space"
  7629                           ; Number of cases is 4, Range of values is 0 to 3
  7630                           ; switch strategies available:
  7631                           ; Name         Instructions Cycles
  7632                           ; simple_byte           13     7 (average)
  7633                           ;	Chosen strategy is simple_byte
  7634  0092BC  0A00               	xorlw	0	; case 0
  7635  0092BE  B4D8               	btfsc	status,2,c
  7636  0092C0  D7DE               	goto	l13975
  7637  0092C2  0A01               	xorlw	1	; case 1
  7638  0092C4  B4D8               	btfsc	status,2,c
  7639  0092C6  D7E1               	goto	l13979
  7640  0092C8  0A03               	xorlw	3	; case 2
  7641  0092CA  B4D8               	btfsc	status,2,c
  7642  0092CC  D7E4               	goto	l13983
  7643  0092CE  0A01               	xorlw	1	; case 3
  7644  0092D0  B4D8               	btfsc	status,2,c
  7645  0092D2  D7E7               	goto	l13987
  7646  0092D4  D7EC               	goto	l13991
  7647  0092D6                     __end_of___exp_10:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           prodh	equ	0xFF4
  7654                           prodl	equ	0xFF3
  7655                           intcon	equ	0xFF2
  7656                           postinc0	equ	0xFEE
  7657                           wreg	equ	0xFE8
  7658                           postdec1	equ	0xFE5
  7659                           plusw1	equ	0xFE3
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           indf2	equ	0xFDF
  7663                           postinc2	equ	0xFDE
  7664                           postdec2	equ	0xFDD
  7665                           plusw2	equ	0xFDB
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8
  7669                           
  7670 ;; *************** function _key_process_set_long *****************
  7671 ;; Defined at:
  7672 ;;		line 913 in file "src/api/key_menu.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;Total ram usage:        0 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:   10
  7693 ;; This function calls:
  7694 ;;		___exit_menu_to_home_unsave
  7695 ;;		___set_long_bar_level_scale
  7696 ;;		___set_long_base_zero
  7697 ;;		___set_long_density
  7698 ;;		___set_long_work_mode
  7699 ;;		___set_short_diff_calib
  7700 ;;		___set_short_epr_ilp_scale
  7701 ;;		___set_short_epr_param
  7702 ;;		___set_short_poly_coefic
  7703 ;;		___set_short_pose_size
  7704 ;;		___set_short_pr_calib
  7705 ;;		___set_short_warn_type
  7706 ;;		___set_short_warn_value
  7707 ;; This function is called by:
  7708 ;;		_key_process
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text35
  7713  007474                     __ptext35:
  7714                           	opt stack 0
  7715  007474                     _key_process_set_long:
  7716                           	opt stack 19
  7717                           
  7718                           ;key_menu.c: 915: switch(menu){
  7719                           
  7720                           ;incstack = 0
  7721  007474  D02F               	goto	l17027
  7722  007476                     l16999:
  7723                           
  7724                           ;key_menu.c: 917: case 0x10: __exit_menu_to_home_unsave(); break;
  7725  007476  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  7726  00747A  0012               	return	
  7727  00747C                     l17001:
  7728  00747C  EC46  F04B         	call	___set_long_density	;wreg free
  7729  007480  0012               	return	
  7730  007482                     l17003:
  7731  007482  0E01               	movlw	1
  7732  007484  EC00  F02F         	call	___set_short_pose_size
  7733  007488  0012               	return	
  7734  00748A                     l17005:
  7735  00748A  ECF2  F049         	call	___set_long_base_zero	;wreg free
  7736  00748E  0012               	return	
  7737  007490                     l17007:
  7738  007490  0E01               	movlw	1
  7739  007492  EC89  F013         	call	___set_short_diff_calib
  7740  007496  0012               	return	
  7741  007498                     l17009:
  7742  007498  0E01               	movlw	1
  7743  00749A  EC3E  F015         	call	___set_short_pr_calib
  7744  00749E  0012               	return	
  7745  0074A0                     l17011:
  7746  0074A0  0E01               	movlw	1
  7747  0074A2  ECA4  F044         	call	___set_short_poly_coefic
  7748  0074A6  0012               	return	
  7749  0074A8                     l17013:
  7750  0074A8  0E01               	movlw	1
  7751  0074AA  ECD0  F041         	call	___set_short_warn_type
  7752  0074AE  0012               	return	
  7753  0074B0                     l17015:
  7754  0074B0  0E01               	movlw	1
  7755  0074B2  EC12  F036         	call	___set_short_warn_value
  7756  0074B6  0012               	return	
  7757  0074B8                     l17017:
  7758  0074B8  0E01               	movlw	1
  7759  0074BA  EC77  F02A         	call	___set_short_epr_param
  7760  0074BE  0012               	return	
  7761  0074C0                     l17019:
  7762  0074C0  0E01               	movlw	1
  7763  0074C2  EC96  F03A         	call	___set_short_epr_ilp_scale
  7764  0074C6  0012               	return	
  7765  0074C8                     l17021:
  7766  0074C8  EC90  F04C         	call	___set_long_bar_level_scale	;wreg free
  7767  0074CC  0012               	return	
  7768  0074CE                     l17023:
  7769  0074CE  ECB4  F050         	call	___set_long_work_mode	;wreg free
  7770                           
  7771                           ;key_menu.c: 932: }
  7772                           
  7773                           ;key_menu.c: 931: default:break;
  7774  0074D2  0012               	return	
  7775  0074D4                     l17027:
  7776  0074D4  5033               	movf	_menu,w,c	;volatile
  7777                           
  7778                           ; Switch size 1, requested type "space"
  7779                           ; Number of cases is 14, Range of values is 0 to 240
  7780                           ; switch strategies available:
  7781                           ; Name         Instructions Cycles
  7782                           ; simple_byte           43    22 (average)
  7783                           ;	Chosen strategy is simple_byte
  7784  0074D6  0A00               	xorlw	0	; case 0
  7785  0074D8  B4D8               	btfsc	status,2,c
  7786  0074DA  D7CD               	goto	l16999
  7787  0074DC  0A10               	xorlw	16	; case 16
  7788  0074DE  B4D8               	btfsc	status,2,c
  7789  0074E0  D7CA               	goto	l16999
  7790  0074E2  0A30               	xorlw	48	; case 32
  7791  0074E4  B4D8               	btfsc	status,2,c
  7792  0074E6  D7CA               	goto	l17001
  7793  0074E8  0A10               	xorlw	16	; case 48
  7794  0074EA  B4D8               	btfsc	status,2,c
  7795  0074EC  D7CA               	goto	l17003
  7796  0074EE  0A70               	xorlw	112	; case 64
  7797  0074F0  B4D8               	btfsc	status,2,c
  7798  0074F2  D7CB               	goto	l17005
  7799  0074F4  0A10               	xorlw	16	; case 80
  7800  0074F6  B4D8               	btfsc	status,2,c
  7801  0074F8  D7CB               	goto	l17007
  7802  0074FA  0A30               	xorlw	48	; case 96
  7803  0074FC  B4D8               	btfsc	status,2,c
  7804  0074FE  D7CC               	goto	l17009
  7805  007500  0A10               	xorlw	16	; case 112
  7806  007502  B4D8               	btfsc	status,2,c
  7807  007504  D7CD               	goto	l17011
  7808  007506  0AF0               	xorlw	240	; case 128
  7809  007508  B4D8               	btfsc	status,2,c
  7810  00750A  D7CE               	goto	l17013
  7811  00750C  0A10               	xorlw	16	; case 144
  7812  00750E  B4D8               	btfsc	status,2,c
  7813  007510  D7CF               	goto	l17015
  7814  007512  0A30               	xorlw	48	; case 160
  7815  007514  B4D8               	btfsc	status,2,c
  7816  007516  D7D0               	goto	l17017
  7817  007518  0A10               	xorlw	16	; case 176
  7818  00751A  B4D8               	btfsc	status,2,c
  7819  00751C  D7D1               	goto	l17019
  7820  00751E  0A70               	xorlw	112	; case 192
  7821  007520  B4D8               	btfsc	status,2,c
  7822  007522  D7D2               	goto	l17021
  7823  007524  0A30               	xorlw	48	; case 240
  7824  007526  A4D8               	btfss	status,2,c
  7825  007528  0012               	return	
  7826  00752A  D7D1               	goto	l17023
  7827  00752C                     __end_of_key_process_set_long:
  7828                           	opt stack 0
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           prodh	equ	0xFF4
  7834                           prodl	equ	0xFF3
  7835                           intcon	equ	0xFF2
  7836                           postinc0	equ	0xFEE
  7837                           wreg	equ	0xFE8
  7838                           postdec1	equ	0xFE5
  7839                           plusw1	equ	0xFE3
  7840                           fsr1h	equ	0xFE2
  7841                           fsr1l	equ	0xFE1
  7842                           indf2	equ	0xFDF
  7843                           postinc2	equ	0xFDE
  7844                           postdec2	equ	0xFDD
  7845                           plusw2	equ	0xFDB
  7846                           fsr2h	equ	0xFDA
  7847                           fsr2l	equ	0xFD9
  7848                           status	equ	0xFD8
  7849                           
  7850 ;; *************** function ___set_long_work_mode *****************
  7851 ;; Defined at:
  7852 ;;		line 901 in file "src/api/key_menu.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  t32             4    0        long 
  7857 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7858 ;;		 -> adjValue(4), 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7872 ;;Total ram usage:        2 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    5
  7875 ;; This function calls:
  7876 ;;		___exit_menu_to_home_unsave
  7877 ;; This function is called by:
  7878 ;;		_key_process_set_long
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text36
  7883  00A168                     __ptext36:
  7884                           	opt stack 0
  7885  00A168                     ___set_long_work_mode:
  7886                           	opt stack 23
  7887                           
  7888                           ;key_menu.c: 903: uint8_t* p;
  7889                           ;key_menu.c: 904: int32_t t32;
  7890                           ;key_menu.c: 907: p=(uint8_t*)(&adjValue);
  7891                           
  7892                           ;incstack = 0
  7893  00A168  0E39               	movlw	low _adjValue
  7894  00A16A  0100               	movlb	0	; () banked
  7895  00A16C  6F60               	movwf	___set_long_work_mode@p& (0+255),b
  7896  00A16E  0E00               	movlw	high _adjValue
  7897  00A170  0100               	movlb	0	; () banked
  7898  00A172  6F61               	movwf	(___set_long_work_mode@p+1)& (0+255),b
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;key_menu.c: 909: dwm=*p;
  7902  00A174  C060  FFD9         	movff	___set_long_work_mode@p,fsr2l
  7903  00A178  C061  FFDA         	movff	___set_long_work_mode@p+1,fsr2h
  7904  00A17C  50DF               	movf	indf2,w,c
  7905  00A17E  0100               	movlb	0	; () banked
  7906  00A180  6FFD               	movwf	_dwm& (0+255),b	;volatile
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;key_menu.c: 910: __exit_menu_to_home_unsave();
  7910  00A182  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  7911  00A186  0012               	return		;funcret
  7912  00A188                     __end_of___set_long_work_mode:
  7913                           	opt stack 0
  7914                           tblptru	equ	0xFF8
  7915                           tblptrh	equ	0xFF7
  7916                           tblptrl	equ	0xFF6
  7917                           tablat	equ	0xFF5
  7918                           prodh	equ	0xFF4
  7919                           prodl	equ	0xFF3
  7920                           intcon	equ	0xFF2
  7921                           postinc0	equ	0xFEE
  7922                           wreg	equ	0xFE8
  7923                           postdec1	equ	0xFE5
  7924                           plusw1	equ	0xFE3
  7925                           fsr1h	equ	0xFE2
  7926                           fsr1l	equ	0xFE1
  7927                           indf2	equ	0xFDF
  7928                           postinc2	equ	0xFDE
  7929                           postdec2	equ	0xFDD
  7930                           plusw2	equ	0xFDB
  7931                           fsr2h	equ	0xFDA
  7932                           fsr2l	equ	0xFD9
  7933                           status	equ	0xFD8
  7934                           
  7935 ;; *************** function ___set_long_density *****************
  7936 ;; Defined at:
  7937 ;;		line 857 in file "src/api/key_menu.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  t32             4    0[BANK3 ] long 
  7942 ;;  p               3    0        PTR unsigned char 
  7943 ;;  stp             2    4[BANK3 ] PTR struct .
  7944 ;;		 -> stSysData(240), 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      void 
  7947 ;; Registers used:
  7948 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;Total ram usage:        6 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    8
  7961 ;; This function calls:
  7962 ;;		___exit_menu_to_home_unsave
  7963 ;;		___mflot32_2_int32
  7964 ;;		___sys_data_save_write_flash
  7965 ;; This function is called by:
  7966 ;;		_key_process_set_long
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text37
  7971  00968C                     __ptext37:
  7972                           	opt stack 0
  7973  00968C                     ___set_long_density:
  7974                           	opt stack 20
  7975                           
  7976                           ;key_menu.c: 859: uint8_t* p;
  7977                           ;key_menu.c: 860: int32_t t32;
  7978                           ;key_menu.c: 863: st_sysDataDef* stp=&stSysData;
  7979                           
  7980                           ;incstack = 0
  7981  00968C  0E00               	movlw	low _stSysData
  7982  00968E  0103               	movlb	3	; () banked
  7983  009690  6FCE               	movwf	___set_long_density@stp& (0+255),b
  7984  009692  0E02               	movlw	high _stSysData
  7985  009694  0103               	movlb	3	; () banked
  7986  009696  6FCF               	movwf	(___set_long_density@stp+1)& (0+255),b
  7987                           
  7988                           ; BSR set to: 3
  7989                           ;key_menu.c: 864: t32=__mflot32_2_int32(m_floatAdj.t32);
  7990  009698  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  7991  00969C  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  7992  0096A0  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  7993  0096A4  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  7994  0096A8  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
  7995  0096AC  C06C  F3CA         	movff	?___mflot32_2_int32,___set_long_density@t32
  7996  0096B0  C06D  F3CB         	movff	?___mflot32_2_int32+1,___set_long_density@t32+1
  7997  0096B4  C06E  F3CC         	movff	?___mflot32_2_int32+2,___set_long_density@t32+2
  7998  0096B8  C06F  F3CD         	movff	?___mflot32_2_int32+3,___set_long_density@t32+3
  7999                           
  8000                           ;key_menu.c: 865: stp->density=t32;
  8001  0096BC  0103               	movlb	3	; () banked
  8002  0096BE  EE20 F006          	lfsr	2,6
  8003  0096C2  51CE               	movf	___set_long_density@stp& (0+255),w,b
  8004  0096C4  26D9               	addwf	fsr2l,f,c
  8005  0096C6  51CF               	movf	(___set_long_density@stp+1)& (0+255),w,b
  8006  0096C8  22DA               	addwfc	fsr2h,f,c
  8007  0096CA  C3CA  FFDE         	movff	___set_long_density@t32,postinc2
  8008  0096CE  C3CB  FFDD         	movff	___set_long_density@t32+1,postdec2
  8009                           
  8010                           ; BSR set to: 3
  8011                           ;key_menu.c: 867: __sys_data_save_write_flash();
  8012  0096D2  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
  8013                           
  8014                           ;key_menu.c: 869: __exit_menu_to_home_unsave();
  8015  0096D6  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8016  0096DA  0012               	return		;funcret
  8017  0096DC                     __end_of___set_long_density:
  8018                           	opt stack 0
  8019                           tblptru	equ	0xFF8
  8020                           tblptrh	equ	0xFF7
  8021                           tblptrl	equ	0xFF6
  8022                           tablat	equ	0xFF5
  8023                           prodh	equ	0xFF4
  8024                           prodl	equ	0xFF3
  8025                           intcon	equ	0xFF2
  8026                           postinc0	equ	0xFEE
  8027                           wreg	equ	0xFE8
  8028                           postdec1	equ	0xFE5
  8029                           plusw1	equ	0xFE3
  8030                           fsr1h	equ	0xFE2
  8031                           fsr1l	equ	0xFE1
  8032                           indf2	equ	0xFDF
  8033                           postinc2	equ	0xFDE
  8034                           postdec2	equ	0xFDD
  8035                           plusw2	equ	0xFDB
  8036                           fsr2h	equ	0xFDA
  8037                           fsr2l	equ	0xFD9
  8038                           status	equ	0xFD8
  8039                           
  8040 ;; *************** function ___set_long_base_zero *****************
  8041 ;; Defined at:
  8042 ;;		line 872 in file "src/api/key_menu.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  t32             4    0[BANK3 ] long 
  8047 ;;  p               3    0        PTR unsigned char 
  8048 ;;  stp             2    4[BANK3 ] PTR struct .
  8049 ;;		 -> stSysData(240), 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;Total ram usage:        6 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    8
  8066 ;; This function calls:
  8067 ;;		___exit_menu_to_home_unsave
  8068 ;;		___mflot32_2_int32
  8069 ;;		___sys_data_save_write_flash
  8070 ;; This function is called by:
  8071 ;;		_key_process_set_long
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text38
  8076  0093E4                     __ptext38:
  8077                           	opt stack 0
  8078  0093E4                     ___set_long_base_zero:
  8079                           	opt stack 20
  8080                           
  8081                           ;key_menu.c: 874: uint8_t* p;
  8082                           ;key_menu.c: 875: int32_t t32;
  8083                           ;key_menu.c: 878: st_sysDataDef* stp=&stSysData;
  8084                           
  8085                           ;incstack = 0
  8086  0093E4  0E00               	movlw	low _stSysData
  8087  0093E6  0103               	movlb	3	; () banked
  8088  0093E8  6FCE               	movwf	___set_long_base_zero@stp& (0+255),b
  8089  0093EA  0E02               	movlw	high _stSysData
  8090  0093EC  0103               	movlb	3	; () banked
  8091  0093EE  6FCF               	movwf	(___set_long_base_zero@stp+1)& (0+255),b
  8092                           
  8093                           ; BSR set to: 3
  8094                           ;key_menu.c: 879: t32=__mflot32_2_int32(m_floatAdj.t32);
  8095  0093F0  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  8096  0093F4  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  8097  0093F8  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  8098  0093FC  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  8099  009400  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
  8100  009404  C06C  F3CA         	movff	?___mflot32_2_int32,___set_long_base_zero@t32
  8101  009408  C06D  F3CB         	movff	?___mflot32_2_int32+1,___set_long_base_zero@t32+1
  8102  00940C  C06E  F3CC         	movff	?___mflot32_2_int32+2,___set_long_base_zero@t32+2
  8103  009410  C06F  F3CD         	movff	?___mflot32_2_int32+3,___set_long_base_zero@t32+3
  8104                           
  8105                           ;key_menu.c: 880: stp->baseZero=t32;
  8106  009414  0103               	movlb	3	; () banked
  8107  009416  EE20 F018          	lfsr	2,24
  8108  00941A  51CE               	movf	___set_long_base_zero@stp& (0+255),w,b
  8109  00941C  26D9               	addwf	fsr2l,f,c
  8110  00941E  51CF               	movf	(___set_long_base_zero@stp+1)& (0+255),w,b
  8111  009420  22DA               	addwfc	fsr2h,f,c
  8112  009422  C3CA  FFDE         	movff	___set_long_base_zero@t32,postinc2
  8113  009426  C3CB  FFDE         	movff	___set_long_base_zero@t32+1,postinc2
  8114  00942A  C3CC  FFDE         	movff	___set_long_base_zero@t32+2,postinc2
  8115  00942E  C3CD  FFDE         	movff	___set_long_base_zero@t32+3,postinc2
  8116                           
  8117                           ; BSR set to: 3
  8118                           ;key_menu.c: 882: __sys_data_save_write_flash();
  8119  009432  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
  8120                           
  8121                           ;key_menu.c: 884: __exit_menu_to_home_unsave();
  8122  009436  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8123  00943A  0012               	return		;funcret
  8124  00943C                     __end_of___set_long_base_zero:
  8125                           	opt stack 0
  8126                           tblptru	equ	0xFF8
  8127                           tblptrh	equ	0xFF7
  8128                           tblptrl	equ	0xFF6
  8129                           tablat	equ	0xFF5
  8130                           prodh	equ	0xFF4
  8131                           prodl	equ	0xFF3
  8132                           intcon	equ	0xFF2
  8133                           postinc0	equ	0xFEE
  8134                           wreg	equ	0xFE8
  8135                           postdec1	equ	0xFE5
  8136                           plusw1	equ	0xFE3
  8137                           fsr1h	equ	0xFE2
  8138                           fsr1l	equ	0xFE1
  8139                           indf2	equ	0xFDF
  8140                           postinc2	equ	0xFDE
  8141                           postdec2	equ	0xFDD
  8142                           plusw2	equ	0xFDB
  8143                           fsr2h	equ	0xFDA
  8144                           fsr2l	equ	0xFD9
  8145                           status	equ	0xFD8
  8146                           
  8147 ;; *************** function ___set_long_bar_level_scale *****************
  8148 ;; Defined at:
  8149 ;;		line 886 in file "src/api/key_menu.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;		None
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;  t32             4    0        long 
  8154 ;;  stp             2  133[BANK0 ] PTR struct .
  8155 ;;		 -> stSysData(240), 
  8156 ;;  p               2  131[BANK0 ] PTR int 
  8157 ;;		 -> adjValue(4), 
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;Total ram usage:        4 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:    8
  8174 ;; This function calls:
  8175 ;;		___exit_menu_to_home_unsave
  8176 ;;		___sys_data_save_write_flash
  8177 ;; This function is called by:
  8178 ;;		_key_process_set_long
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text39
  8183  009920                     __ptext39:
  8184                           	opt stack 0
  8185  009920                     ___set_long_bar_level_scale:
  8186                           	opt stack 20
  8187                           
  8188                           ;key_menu.c: 888: int16_t* p;
  8189                           ;key_menu.c: 889: int32_t t32;
  8190                           ;key_menu.c: 892: st_sysDataDef* stp=&stSysData;
  8191                           
  8192                           ;incstack = 0
  8193  009920  0E00               	movlw	low _stSysData
  8194  009922  0100               	movlb	0	; () banked
  8195  009924  6FE5               	movwf	___set_long_bar_level_scale@stp& (0+255),b
  8196  009926  0E02               	movlw	high _stSysData
  8197  009928  0100               	movlb	0	; () banked
  8198  00992A  6FE6               	movwf	(___set_long_bar_level_scale@stp+1)& (0+255),b
  8199                           
  8200                           ;key_menu.c: 893: p=(uint16_t*)(&adjValue);
  8201  00992C  0E39               	movlw	low _adjValue
  8202  00992E  0100               	movlb	0	; () banked
  8203  009930  6FE3               	movwf	___set_long_bar_level_scale@p& (0+255),b
  8204  009932  0E00               	movlw	high _adjValue
  8205  009934  0100               	movlb	0	; () banked
  8206  009936  6FE4               	movwf	(___set_long_bar_level_scale@p+1)& (0+255),b
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;key_menu.c: 894: stp->barScale=*p;
  8210  009938  C0E3  FFD9         	movff	___set_long_bar_level_scale@p,fsr2l
  8211  00993C  C0E4  FFDA         	movff	___set_long_bar_level_scale@p+1,fsr2h
  8212  009940  0100               	movlb	0	; () banked
  8213  009942  EE10 F0EC          	lfsr	1,236
  8214  009946  51E5               	movf	___set_long_bar_level_scale@stp& (0+255),w,b
  8215  009948  26E1               	addwf	fsr1l,f,c
  8216  00994A  51E6               	movf	(___set_long_bar_level_scale@stp+1)& (0+255),w,b
  8217  00994C  22E2               	addwfc	fsr1h,f,c
  8218  00994E  CFDE FFE6          	movff	postinc2,postinc1
  8219  009952  CFDD FFE5          	movff	postdec2,postdec1
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;key_menu.c: 896: __sys_data_save_write_flash();
  8223  009956  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
  8224                           
  8225                           ;key_menu.c: 898: __exit_menu_to_home_unsave();
  8226  00995A  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8227  00995E  0012               	return		;funcret
  8228  009960                     __end_of___set_long_bar_level_scale:
  8229                           	opt stack 0
  8230                           tblptru	equ	0xFF8
  8231                           tblptrh	equ	0xFF7
  8232                           tblptrl	equ	0xFF6
  8233                           tablat	equ	0xFF5
  8234                           prodh	equ	0xFF4
  8235                           prodl	equ	0xFF3
  8236                           intcon	equ	0xFF2
  8237                           postinc0	equ	0xFEE
  8238                           wreg	equ	0xFE8
  8239                           postinc1	equ	0xFE6
  8240                           postdec1	equ	0xFE5
  8241                           plusw1	equ	0xFE3
  8242                           fsr1h	equ	0xFE2
  8243                           fsr1l	equ	0xFE1
  8244                           indf2	equ	0xFDF
  8245                           postinc2	equ	0xFDE
  8246                           postdec2	equ	0xFDD
  8247                           plusw2	equ	0xFDB
  8248                           fsr2h	equ	0xFDA
  8249                           fsr2l	equ	0xFD9
  8250                           status	equ	0xFD8
  8251                           
  8252 ;; *************** function _key_process_set_down_long *****************
  8253 ;; Defined at:
  8254 ;;		line 580 in file "src/api/key_menu.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      void 
  8261 ;; Registers used:
  8262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;Total ram usage:        2 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    7
  8275 ;; This function calls:
  8276 ;;		___enter_menu_bar_scale
  8277 ;;		___enter_menu_calib_press
  8278 ;;		___enter_menu_calib_press_diff
  8279 ;;		___enter_menu_epr_calib
  8280 ;;		___enter_menu_epr_ilp_scale
  8281 ;;		___enter_menu_poly_coeffic
  8282 ;;		___enter_menu_set_base_zero
  8283 ;;		___enter_menu_set_density
  8284 ;;		___enter_menu_set_pose_size
  8285 ;;		___enter_menu_warn_type
  8286 ;;		___enter_menu_warn_value
  8287 ;;		___enter_menu_work_mode
  8288 ;; This function is called by:
  8289 ;;		_key_process
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text40
  8294  006B5C                     __ptext40:
  8295                           	opt stack 0
  8296  006B5C                     _key_process_set_down_long:
  8297                           	opt stack 22
  8298                           
  8299                           ;key_menu.c: 582: if(menu==0x10){
  8300                           
  8301                           ;incstack = 0
  8302  006B5C  0E10               	movlw	16
  8303  006B5E  1833               	xorwf	_menu,w,c	;volatile
  8304  006B60  A4D8               	btfss	status,2,c
  8305  006B62  0012               	return	
  8306  006B64  D02F               	goto	l16991
  8307  006B66                     l16965:
  8308  006B66  EC6B  F044         	call	___enter_menu_set_density	;wreg free
  8309  006B6A  0012               	return	
  8310  006B6C                     l16967:
  8311  006B6C  EC0C  F04D         	call	___enter_menu_set_pose_size	;wreg free
  8312  006B70  0012               	return	
  8313  006B72                     l16969:
  8314  006B72  EC0A  F043         	call	___enter_menu_set_base_zero	;wreg free
  8315  006B76  0012               	return	
  8316  006B78                     l16971:
  8317  006B78  0E00               	movlw	0
  8318  006B7A  6E20               	movwf	___enter_menu_calib_press_diff@col,c
  8319  006B7C  0E00               	movlw	0
  8320  006B7E  EC8F  F031         	call	___enter_menu_calib_press_diff
  8321  006B82  0012               	return	
  8322  006B84                     l16973:
  8323  006B84  0E00               	movlw	0
  8324  006B86  6E20               	movwf	___enter_menu_calib_press@col,c
  8325  006B88  0E00               	movlw	0
  8326  006B8A  EC8B  F030         	call	___enter_menu_calib_press
  8327  006B8E  0012               	return	
  8328  006B90                     l16975:
  8329  006B90  0E00               	movlw	0
  8330  006B92  EC6E  F04B         	call	___enter_menu_poly_coeffic
  8331  006B96  0012               	return	
  8332  006B98                     l16977:
  8333  006B98  0E00               	movlw	0
  8334  006B9A  EC4F  F048         	call	___enter_menu_warn_type
  8335  006B9E  0012               	return	
  8336  006BA0                     l16979:
  8337  006BA0  0E00               	movlw	0
  8338  006BA2  EC65  F038         	call	___enter_menu_warn_value
  8339  006BA6  0012               	return	
  8340  006BA8                     l16981:
  8341  006BA8  0E00               	movlw	0
  8342  006BAA  EC9C  F03B         	call	___enter_menu_epr_calib
  8343  006BAE  0012               	return	
  8344  006BB0                     l16983:
  8345  006BB0  0E00               	movlw	0
  8346  006BB2  EC81  F039         	call	___enter_menu_epr_ilp_scale
  8347  006BB6  0012               	return	
  8348  006BB8                     l16985:
  8349  006BB8  ECEE  F04C         	call	___enter_menu_bar_scale	;wreg free
  8350  006BBC  0012               	return	
  8351  006BBE                     l16987:
  8352  006BBE  ECAD  F051         	call	___enter_menu_work_mode	;wreg free
  8353                           
  8354                           ;key_menu.c: 597: }
  8355                           
  8356                           ;key_menu.c: 596: default:break;
  8357  006BC2  0012               	return	
  8358  006BC4                     l16991:
  8359  006BC4  C03D  F08A         	movff	_passWord,??_key_process_set_down_long	;volatile
  8360  006BC8  C03E  F08B         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
  8361                           
  8362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8363                           ; Switch size 1, requested type "space"
  8364                           ; Number of cases is 1, Range of values is 0 to 0
  8365                           ; switch strategies available:
  8366                           ; Name         Instructions Cycles
  8367                           ; simple_byte            4     3 (average)
  8368                           ;	Chosen strategy is simple_byte
  8369  006BCC  0100               	movlb	0	; () banked
  8370  006BCE  518B               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
  8371  006BD0  0A00               	xorlw	0	; case 0
  8372  006BD2  A4D8               	btfss	status,2,c
  8373  006BD4  0012               	return	
  8374                           
  8375                           ; BSR set to: 0
  8376                           ; Switch size 1, requested type "space"
  8377                           ; Number of cases is 12, Range of values is 6 to 188
  8378                           ; switch strategies available:
  8379                           ; Name         Instructions Cycles
  8380                           ; simple_byte           37    19 (average)
  8381                           ;	Chosen strategy is simple_byte
  8382  006BD6  0100               	movlb	0	; () banked
  8383  006BD8  518A               	movf	??_key_process_set_down_long& (0+255),w,b
  8384  006BDA  0A06               	xorlw	6	; case 6
  8385  006BDC  B4D8               	btfsc	status,2,c
  8386  006BDE  D7DC               	goto	l16977
  8387  006BE0  0A16               	xorlw	22	; case 16
  8388  006BE2  B4D8               	btfsc	status,2,c
  8389  006BE4  D7DD               	goto	l16979
  8390  006BE6  0A02               	xorlw	2	; case 18
  8391  006BE8  B4D8               	btfsc	status,2,c
  8392  006BEA  D7E9               	goto	l16987
  8393  006BEC  0A36               	xorlw	54	; case 36
  8394  006BEE  B4D8               	btfsc	status,2,c
  8395  006BF0  D7BA               	goto	l16965
  8396  006BF2  0A1C               	xorlw	28	; case 56
  8397  006BF4  B4D8               	btfsc	status,2,c
  8398  006BF6  D7BD               	goto	l16969
  8399  006BF8  0A7A               	xorlw	122	; case 66
  8400  006BFA  B4D8               	btfsc	status,2,c
  8401  006BFC  D7B7               	goto	l16967
  8402  006BFE  0AC7               	xorlw	199	; case 133
  8403  006C00  B4D8               	btfsc	status,2,c
  8404  006C02  D7C6               	goto	l16975
  8405  006C04  0A0F               	xorlw	15	; case 138
  8406  006C06  B4D8               	btfsc	status,2,c
  8407  006C08  D7CF               	goto	l16981
  8408  006C0A  0A01               	xorlw	1	; case 139
  8409  006C0C  B4D8               	btfsc	status,2,c
  8410  006C0E  D7D0               	goto	l16983
  8411  006C10  0A23               	xorlw	35	; case 168
  8412  006C12  B4D8               	btfsc	status,2,c
  8413  006C14  D7B1               	goto	l16971
  8414  006C16  0A01               	xorlw	1	; case 169
  8415  006C18  B4D8               	btfsc	status,2,c
  8416  006C1A  D7B4               	goto	l16973
  8417  006C1C  0A15               	xorlw	21	; case 188
  8418  006C1E  A4D8               	btfss	status,2,c
  8419                           
  8420                           ; BSR set to: 0
  8421  006C20  0012               	return	
  8422  006C22  D7CA               	goto	l16985
  8423  006C24                     __end_of_key_process_set_down_long:
  8424                           	opt stack 0
  8425                           tblptru	equ	0xFF8
  8426                           tblptrh	equ	0xFF7
  8427                           tblptrl	equ	0xFF6
  8428                           tablat	equ	0xFF5
  8429                           prodh	equ	0xFF4
  8430                           prodl	equ	0xFF3
  8431                           intcon	equ	0xFF2
  8432                           postinc0	equ	0xFEE
  8433                           wreg	equ	0xFE8
  8434                           postinc1	equ	0xFE6
  8435                           postdec1	equ	0xFE5
  8436                           plusw1	equ	0xFE3
  8437                           fsr1h	equ	0xFE2
  8438                           fsr1l	equ	0xFE1
  8439                           indf2	equ	0xFDF
  8440                           postinc2	equ	0xFDE
  8441                           postdec2	equ	0xFDD
  8442                           plusw2	equ	0xFDB
  8443                           fsr2h	equ	0xFDA
  8444                           fsr2l	equ	0xFD9
  8445                           status	equ	0xFD8
  8446                           
  8447 ;; *************** function ___enter_menu_work_mode *****************
  8448 ;; Defined at:
  8449 ;;		line 341 in file "src/api/key_menu.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;Total ram usage:        0 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    4
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_key_process_set_down_long
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text41
  8478  00A35A                     __ptext41:
  8479                           	opt stack 0
  8480  00A35A                     ___enter_menu_work_mode:
  8481                           	opt stack 24
  8482                           
  8483                           ;key_menu.c: 343: menu=0xf0;
  8484                           
  8485                           ;incstack = 0
  8486  00A35A  0EF0               	movlw	240
  8487  00A35C  6E33               	movwf	_menu,c	;volatile
  8488                           
  8489                           ;key_menu.c: 344: subMenu=0x00;
  8490  00A35E  0E00               	movlw	0
  8491  00A360  6E32               	movwf	_subMenu,c	;volatile
  8492                           
  8493                           ;key_menu.c: 345: *((uint8_t*)(&adjValue))=dwm;
  8494  00A362  C0FD  F039         	movff	_dwm,_adjValue	;volatile
  8495                           
  8496                           ;key_menu.c: 346: adjLocation=0;
  8497  00A366  0E00               	movlw	0
  8498  00A368  6E3F               	movwf	_adjLocation,c	;volatile
  8499  00A36A  0012               	return		;funcret
  8500  00A36C                     __end_of___enter_menu_work_mode:
  8501                           	opt stack 0
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           postinc0	equ	0xFEE
  8510                           wreg	equ	0xFE8
  8511                           postinc1	equ	0xFE6
  8512                           postdec1	equ	0xFE5
  8513                           plusw1	equ	0xFE3
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           indf2	equ	0xFDF
  8517                           postinc2	equ	0xFDE
  8518                           postdec2	equ	0xFDD
  8519                           plusw2	equ	0xFDB
  8520                           fsr2h	equ	0xFDA
  8521                           fsr2l	equ	0xFD9
  8522                           status	equ	0xFD8
  8523                           
  8524 ;; *************** function ___enter_menu_set_density *****************
  8525 ;; Defined at:
  8526 ;;		line 112 in file "src/api/key_menu.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  t32             4   33[BANK0 ] long 
  8531 ;;  fps             2   31[BANK0 ] PTR struct .
  8532 ;;		 -> stSysData(240), 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;Total ram usage:        8 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    6
  8549 ;; This function calls:
  8550 ;;		___int32_2_mflot32
  8551 ;; This function is called by:
  8552 ;;		_key_process_set_down_long
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text42
  8557  0088D6                     __ptext42:
  8558                           	opt stack 0
  8559  0088D6                     ___enter_menu_set_density:
  8560                           	opt stack 22
  8561                           
  8562                           ;key_menu.c: 114: int32_t t32;
  8563                           ;key_menu.c: 115: menu=0x20;
  8564                           
  8565                           ;incstack = 0
  8566  0088D6  0E20               	movlw	32
  8567  0088D8  6E33               	movwf	_menu,c	;volatile
  8568                           
  8569                           ;key_menu.c: 116: subMenu=0x00;
  8570  0088DA  0E00               	movlw	0
  8571  0088DC  6E32               	movwf	_subMenu,c	;volatile
  8572                           
  8573                           ;key_menu.c: 118: st_sysDataDef* fps= &stSysData;
  8574  0088DE  0E00               	movlw	low _stSysData
  8575  0088E0  0100               	movlb	0	; () banked
  8576  0088E2  6F7F               	movwf	___enter_menu_set_density@fps& (0+255),b
  8577  0088E4  0E02               	movlw	high _stSysData
  8578  0088E6  0100               	movlb	0	; () banked
  8579  0088E8  6F80               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;key_menu.c: 119: t32=fps->density;
  8583  0088EA  0100               	movlb	0	; () banked
  8584  0088EC  EE20 F006          	lfsr	2,6
  8585  0088F0  517F               	movf	___enter_menu_set_density@fps& (0+255),w,b
  8586  0088F2  26D9               	addwf	fsr2l,f,c
  8587  0088F4  5180               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
  8588  0088F6  22DA               	addwfc	fsr2h,f,c
  8589  0088F8  CFDE F07D          	movff	postinc2,??___enter_menu_set_density
  8590  0088FC  CFDD F07E          	movff	postdec2,??___enter_menu_set_density+1
  8591  008900  C07D  F081         	movff	??___enter_menu_set_density,___enter_menu_set_density@t32
  8592  008904  C07E  F082         	movff	??___enter_menu_set_density+1,___enter_menu_set_density@t32+1
  8593  008908  0100               	movlb	0	; () banked
  8594  00890A  6B83               	clrf	(___enter_menu_set_density@t32+2)& (0+255),b
  8595  00890C  6B84               	clrf	(___enter_menu_set_density@t32+3)& (0+255),b
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;key_menu.c: 120: t32=__int32_2_mflot32(t32);
  8599  00890E  C081  F06D         	movff	___enter_menu_set_density@t32,___int32_2_mflot32@x
  8600  008912  C082  F06E         	movff	___enter_menu_set_density@t32+1,___int32_2_mflot32@x+1
  8601  008916  C083  F06F         	movff	___enter_menu_set_density@t32+2,___int32_2_mflot32@x+2
  8602  00891A  C084  F070         	movff	___enter_menu_set_density@t32+3,___int32_2_mflot32@x+3
  8603  00891E  EC08  F030         	call	___int32_2_mflot32	;wreg free
  8604  008922  C06D  F081         	movff	?___int32_2_mflot32,___enter_menu_set_density@t32
  8605  008926  C06E  F082         	movff	?___int32_2_mflot32+1,___enter_menu_set_density@t32+1
  8606  00892A  C06F  F083         	movff	?___int32_2_mflot32+2,___enter_menu_set_density@t32+2
  8607  00892E  C070  F084         	movff	?___int32_2_mflot32+3,___enter_menu_set_density@t32+3
  8608                           
  8609                           ;key_menu.c: 121: m_floatAdj.t32=t32;
  8610  008932  C081  F035         	movff	___enter_menu_set_density@t32,_m_floatAdj
  8611  008936  C082  F036         	movff	___enter_menu_set_density@t32+1,_m_floatAdj+1
  8612  00893A  C083  F037         	movff	___enter_menu_set_density@t32+2,_m_floatAdj+2
  8613  00893E  C084  F038         	movff	___enter_menu_set_density@t32+3,_m_floatAdj+3
  8614                           
  8615                           ;key_menu.c: 122: adjLocation=0;
  8616  008942  0E00               	movlw	0
  8617  008944  6E3F               	movwf	_adjLocation,c	;volatile
  8618  008946  0012               	return		;funcret
  8619  008948                     __end_of___enter_menu_set_density:
  8620                           	opt stack 0
  8621                           tblptru	equ	0xFF8
  8622                           tblptrh	equ	0xFF7
  8623                           tblptrl	equ	0xFF6
  8624                           tablat	equ	0xFF5
  8625                           prodh	equ	0xFF4
  8626                           prodl	equ	0xFF3
  8627                           intcon	equ	0xFF2
  8628                           postinc0	equ	0xFEE
  8629                           wreg	equ	0xFE8
  8630                           postinc1	equ	0xFE6
  8631                           postdec1	equ	0xFE5
  8632                           plusw1	equ	0xFE3
  8633                           fsr1h	equ	0xFE2
  8634                           fsr1l	equ	0xFE1
  8635                           indf2	equ	0xFDF
  8636                           postinc2	equ	0xFDE
  8637                           postdec2	equ	0xFDD
  8638                           plusw2	equ	0xFDB
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function ___enter_menu_set_base_zero *****************
  8644 ;; Defined at:
  8645 ;;		line 158 in file "src/api/key_menu.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;		None
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  t32             4   31[BANK0 ] long 
  8650 ;;  fps             2   29[BANK0 ] PTR struct .
  8651 ;;		 -> stSysData(240), 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;Total ram usage:        6 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    6
  8668 ;; This function calls:
  8669 ;;		___int32_2_mflot32
  8670 ;; This function is called by:
  8671 ;;		_key_process_set_down_long
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text43
  8676  008614                     __ptext43:
  8677                           	opt stack 0
  8678  008614                     ___enter_menu_set_base_zero:
  8679                           	opt stack 22
  8680                           
  8681                           ;key_menu.c: 160: int32_t t32;
  8682                           ;key_menu.c: 161: menu=0x40;
  8683                           
  8684                           ;incstack = 0
  8685  008614  0E40               	movlw	64
  8686  008616  6E33               	movwf	_menu,c	;volatile
  8687                           
  8688                           ;key_menu.c: 162: subMenu=0;
  8689  008618  0E00               	movlw	0
  8690  00861A  6E32               	movwf	_subMenu,c	;volatile
  8691                           
  8692                           ;key_menu.c: 164: st_sysDataDef* fps= &stSysData;
  8693  00861C  0E00               	movlw	low _stSysData
  8694  00861E  0100               	movlb	0	; () banked
  8695  008620  6F7D               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
  8696  008622  0E02               	movlw	high _stSysData
  8697  008624  0100               	movlb	0	; () banked
  8698  008626  6F7E               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;key_menu.c: 165: t32=(fps->baseZero);
  8702  008628  0100               	movlb	0	; () banked
  8703  00862A  EE20 F018          	lfsr	2,24
  8704  00862E  517D               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
  8705  008630  26D9               	addwf	fsr2l,f,c
  8706  008632  517E               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
  8707  008634  22DA               	addwfc	fsr2h,f,c
  8708  008636  CFDE F07F          	movff	postinc2,___enter_menu_set_base_zero@t32
  8709  00863A  CFDE F080          	movff	postinc2,___enter_menu_set_base_zero@t32+1
  8710  00863E  CFDE F081          	movff	postinc2,___enter_menu_set_base_zero@t32+2
  8711  008642  CFDE F082          	movff	postinc2,___enter_menu_set_base_zero@t32+3
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;key_menu.c: 166: t32=__int32_2_mflot32(t32);
  8715  008646  C07F  F06D         	movff	___enter_menu_set_base_zero@t32,___int32_2_mflot32@x
  8716  00864A  C080  F06E         	movff	___enter_menu_set_base_zero@t32+1,___int32_2_mflot32@x+1
  8717  00864E  C081  F06F         	movff	___enter_menu_set_base_zero@t32+2,___int32_2_mflot32@x+2
  8718  008652  C082  F070         	movff	___enter_menu_set_base_zero@t32+3,___int32_2_mflot32@x+3
  8719  008656  EC08  F030         	call	___int32_2_mflot32	;wreg free
  8720  00865A  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_base_zero@t32
  8721  00865E  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_base_zero@t32+1
  8722  008662  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_base_zero@t32+2
  8723  008666  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_base_zero@t32+3
  8724                           
  8725                           ;key_menu.c: 167: m_floatAdj.t32=t32;
  8726  00866A  C07F  F035         	movff	___enter_menu_set_base_zero@t32,_m_floatAdj
  8727  00866E  C080  F036         	movff	___enter_menu_set_base_zero@t32+1,_m_floatAdj+1
  8728  008672  C081  F037         	movff	___enter_menu_set_base_zero@t32+2,_m_floatAdj+2
  8729  008676  C082  F038         	movff	___enter_menu_set_base_zero@t32+3,_m_floatAdj+3
  8730                           
  8731                           ;key_menu.c: 168: if(m_floatAdj.stru.sign){
  8732  00867A  5038               	movf	_m_floatAdj+3,w,c
  8733  00867C  B4D8               	btfsc	status,2,c
  8734  00867E  D003               	goto	l15781
  8735                           
  8736                           ;key_menu.c: 169: adjLocation=1;
  8737  008680  0E01               	movlw	1
  8738  008682  6E3F               	movwf	_adjLocation,c	;volatile
  8739                           
  8740                           ;key_menu.c: 170: }else{
  8741  008684  0012               	return	
  8742  008686                     l15781:
  8743                           
  8744                           ;key_menu.c: 171: adjLocation=0;
  8745  008686  0E00               	movlw	0
  8746  008688  6E3F               	movwf	_adjLocation,c	;volatile
  8747  00868A  0012               	return	
  8748  00868C                     __end_of___enter_menu_set_base_zero:
  8749                           	opt stack 0
  8750                           tblptru	equ	0xFF8
  8751                           tblptrh	equ	0xFF7
  8752                           tblptrl	equ	0xFF6
  8753                           tablat	equ	0xFF5
  8754                           prodh	equ	0xFF4
  8755                           prodl	equ	0xFF3
  8756                           intcon	equ	0xFF2
  8757                           postinc0	equ	0xFEE
  8758                           wreg	equ	0xFE8
  8759                           postinc1	equ	0xFE6
  8760                           postdec1	equ	0xFE5
  8761                           plusw1	equ	0xFE3
  8762                           fsr1h	equ	0xFE2
  8763                           fsr1l	equ	0xFE1
  8764                           indf2	equ	0xFDF
  8765                           postinc2	equ	0xFDE
  8766                           postdec2	equ	0xFDD
  8767                           plusw2	equ	0xFDB
  8768                           fsr2h	equ	0xFDA
  8769                           fsr2l	equ	0xFD9
  8770                           status	equ	0xFD8
  8771                           
  8772 ;; *************** function ___enter_menu_bar_scale *****************
  8773 ;; Defined at:
  8774 ;;		line 331 in file "src/api/key_menu.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;		None
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  fps             2    2[BANK0 ] PTR struct .
  8779 ;;		 -> stSysData(240), 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;Total ram usage:        4 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    4
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_key_process_set_down_long
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text44
  8804  0099DC                     __ptext44:
  8805                           	opt stack 0
  8806  0099DC                     ___enter_menu_bar_scale:
  8807                           	opt stack 24
  8808                           
  8809                           ;key_menu.c: 333: menu=0xc0;
  8810                           
  8811                           ;incstack = 0
  8812  0099DC  0EC0               	movlw	192
  8813  0099DE  6E33               	movwf	_menu,c	;volatile
  8814                           
  8815                           ;key_menu.c: 334: subMenu=0x00;
  8816  0099E0  0E00               	movlw	0
  8817  0099E2  6E32               	movwf	_subMenu,c	;volatile
  8818                           
  8819                           ;key_menu.c: 336: st_sysDataDef* fps= &stSysData;
  8820  0099E4  0E00               	movlw	low _stSysData
  8821  0099E6  0100               	movlb	0	; () banked
  8822  0099E8  6F62               	movwf	___enter_menu_bar_scale@fps& (0+255),b
  8823  0099EA  0E02               	movlw	high _stSysData
  8824  0099EC  0100               	movlb	0	; () banked
  8825  0099EE  6F63               	movwf	(___enter_menu_bar_scale@fps+1)& (0+255),b
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;key_menu.c: 337: adjValue=fps->barScale;
  8829  0099F0  0100               	movlb	0	; () banked
  8830  0099F2  EE20 F0EC          	lfsr	2,236
  8831  0099F6  5162               	movf	___enter_menu_bar_scale@fps& (0+255),w,b
  8832  0099F8  26D9               	addwf	fsr2l,f,c
  8833  0099FA  5163               	movf	(___enter_menu_bar_scale@fps+1)& (0+255),w,b
  8834  0099FC  22DA               	addwfc	fsr2h,f,c
  8835  0099FE  CFDE F060          	movff	postinc2,??___enter_menu_bar_scale
  8836  009A02  CFDD F061          	movff	postdec2,??___enter_menu_bar_scale+1
  8837  009A06  C060  F039         	movff	??___enter_menu_bar_scale,_adjValue	;volatile
  8838  009A0A  C061  F03A         	movff	??___enter_menu_bar_scale+1,_adjValue+1	;volatile
  8839  009A0E  6A3B               	clrf	_adjValue+2,c	;volatile
  8840  009A10  6A3C               	clrf	_adjValue+3,c	;volatile
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;key_menu.c: 338: adjLocation=0;
  8844  009A12  0E00               	movlw	0
  8845  009A14  6E3F               	movwf	_adjLocation,c	;volatile
  8846                           
  8847                           ; BSR set to: 0
  8848  009A16  0012               	return		;funcret
  8849  009A18                     __end_of___enter_menu_bar_scale:
  8850                           	opt stack 0
  8851                           tblptru	equ	0xFF8
  8852                           tblptrh	equ	0xFF7
  8853                           tblptrl	equ	0xFF6
  8854                           tablat	equ	0xFF5
  8855                           prodh	equ	0xFF4
  8856                           prodl	equ	0xFF3
  8857                           intcon	equ	0xFF2
  8858                           postinc0	equ	0xFEE
  8859                           wreg	equ	0xFE8
  8860                           postinc1	equ	0xFE6
  8861                           postdec1	equ	0xFE5
  8862                           plusw1	equ	0xFE3
  8863                           fsr1h	equ	0xFE2
  8864                           fsr1l	equ	0xFE1
  8865                           indf2	equ	0xFDF
  8866                           postinc2	equ	0xFDE
  8867                           postdec2	equ	0xFDD
  8868                           plusw2	equ	0xFDB
  8869                           fsr2h	equ	0xFDA
  8870                           fsr2l	equ	0xFD9
  8871                           status	equ	0xFD8
  8872                           
  8873 ;; *************** function _key_process_set *****************
  8874 ;; Defined at:
  8875 ;;		line 935 in file "src/api/key_menu.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;		None
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  1    wreg      void 
  8882 ;; Registers used:
  8883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;Total ram usage:        0 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:   10
  8896 ;; This function calls:
  8897 ;;		___enter_menu_password
  8898 ;;		___set_short_diff_calib
  8899 ;;		___set_short_epr_ilp_scale
  8900 ;;		___set_short_epr_param
  8901 ;;		___set_short_poly_coefic
  8902 ;;		___set_short_pose_size
  8903 ;;		___set_short_pr_calib
  8904 ;;		___set_short_warn_type
  8905 ;;		___set_short_warn_value
  8906 ;; This function is called by:
  8907 ;;		_key_process
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text45
  8912  007BB0                     __ptext45:
  8913                           	opt stack 0
  8914  007BB0                     _key_process_set:
  8915                           	opt stack 19
  8916                           
  8917                           ;key_menu.c: 937: switch(menu){
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;incstack = 0
  8921  007BB0  D023               	goto	l17051
  8922  007BB2                     l17031:
  8923  007BB2  EC84  F051         	call	___enter_menu_password	;wreg free
  8924                           
  8925                           ;key_menu.c: 940: case 0x20: break;
  8926                           
  8927                           ;key_menu.c: 939: case 0x10: break;
  8928  007BB6  0012               	return	
  8929  007BB8                     l17033:
  8930  007BB8  0E00               	movlw	0
  8931  007BBA  EC00  F02F         	call	___set_short_pose_size
  8932                           
  8933                           ;key_menu.c: 942: case 0x40: break;
  8934  007BBE  0012               	return	
  8935  007BC0                     l17035:
  8936  007BC0  0E00               	movlw	0
  8937  007BC2  EC89  F013         	call	___set_short_diff_calib
  8938  007BC6  0012               	return	
  8939  007BC8                     l17037:
  8940  007BC8  0E00               	movlw	0
  8941  007BCA  EC3E  F015         	call	___set_short_pr_calib
  8942  007BCE  0012               	return	
  8943  007BD0                     l17039:
  8944  007BD0  0E00               	movlw	0
  8945  007BD2  ECA4  F044         	call	___set_short_poly_coefic
  8946  007BD6  0012               	return	
  8947  007BD8                     l17041:
  8948  007BD8  0E00               	movlw	0
  8949  007BDA  ECD0  F041         	call	___set_short_warn_type
  8950  007BDE  0012               	return	
  8951  007BE0                     l17043:
  8952  007BE0  0E00               	movlw	0
  8953  007BE2  EC12  F036         	call	___set_short_warn_value
  8954  007BE6  0012               	return	
  8955  007BE8                     l17045:
  8956  007BE8  0E00               	movlw	0
  8957  007BEA  EC77  F02A         	call	___set_short_epr_param
  8958  007BEE  0012               	return	
  8959  007BF0                     l17047:
  8960  007BF0  0E00               	movlw	0
  8961  007BF2  EC96  F03A         	call	___set_short_epr_ilp_scale
  8962                           
  8963                           ;key_menu.c: 956: }
  8964                           
  8965                           ;key_menu.c: 955: default:break;
  8966                           
  8967                           ;key_menu.c: 954: case 0xf0: break;
  8968                           
  8969                           ;key_menu.c: 953: case 0xc0: break;
  8970  007BF6  0012               	return	
  8971  007BF8                     l17051:
  8972  007BF8  5033               	movf	_menu,w,c	;volatile
  8973                           
  8974                           ; Switch size 1, requested type "space"
  8975                           ; Number of cases is 14, Range of values is 0 to 240
  8976                           ; switch strategies available:
  8977                           ; Name         Instructions Cycles
  8978                           ; simple_byte           43    22 (average)
  8979                           ;	Chosen strategy is simple_byte
  8980  007BFA  0A00               	xorlw	0	; case 0
  8981  007BFC  B4D8               	btfsc	status,2,c
  8982  007BFE  D7D9               	goto	l17031
  8983  007C00  0A10               	xorlw	16	; case 16
  8984  007C02  B4D8               	btfsc	status,2,c
  8985  007C04  0012               	return	
  8986  007C06  0A30               	xorlw	48	; case 32
  8987  007C08  B4D8               	btfsc	status,2,c
  8988  007C0A  0012               	return	
  8989  007C0C  0A10               	xorlw	16	; case 48
  8990  007C0E  B4D8               	btfsc	status,2,c
  8991  007C10  D7D3               	goto	l17033
  8992  007C12  0A70               	xorlw	112	; case 64
  8993  007C14  B4D8               	btfsc	status,2,c
  8994  007C16  0012               	return	
  8995  007C18  0A10               	xorlw	16	; case 80
  8996  007C1A  B4D8               	btfsc	status,2,c
  8997  007C1C  D7D1               	goto	l17035
  8998  007C1E  0A30               	xorlw	48	; case 96
  8999  007C20  B4D8               	btfsc	status,2,c
  9000  007C22  D7D2               	goto	l17037
  9001  007C24  0A10               	xorlw	16	; case 112
  9002  007C26  B4D8               	btfsc	status,2,c
  9003  007C28  D7D3               	goto	l17039
  9004  007C2A  0AF0               	xorlw	240	; case 128
  9005  007C2C  B4D8               	btfsc	status,2,c
  9006  007C2E  D7D4               	goto	l17041
  9007  007C30  0A10               	xorlw	16	; case 144
  9008  007C32  B4D8               	btfsc	status,2,c
  9009  007C34  D7D5               	goto	l17043
  9010  007C36  0A30               	xorlw	48	; case 160
  9011  007C38  B4D8               	btfsc	status,2,c
  9012  007C3A  D7D6               	goto	l17045
  9013  007C3C  0A10               	xorlw	16	; case 176
  9014  007C3E  B4D8               	btfsc	status,2,c
  9015  007C40  D7D7               	goto	l17047
  9016  007C42  0A70               	xorlw	112	; case 192
  9017  007C44  B4D8               	btfsc	status,2,c
  9018  007C46  0012               	return	
  9019  007C48  0A30               	xorlw	48	; case 240
  9020  007C4A  0012               	return	
  9021  007C4C                     __end_of_key_process_set:
  9022                           	opt stack 0
  9023                           tblptru	equ	0xFF8
  9024                           tblptrh	equ	0xFF7
  9025                           tblptrl	equ	0xFF6
  9026                           tablat	equ	0xFF5
  9027                           prodh	equ	0xFF4
  9028                           prodl	equ	0xFF3
  9029                           intcon	equ	0xFF2
  9030                           postinc0	equ	0xFEE
  9031                           wreg	equ	0xFE8
  9032                           postinc1	equ	0xFE6
  9033                           postdec1	equ	0xFE5
  9034                           plusw1	equ	0xFE3
  9035                           fsr1h	equ	0xFE2
  9036                           fsr1l	equ	0xFE1
  9037                           indf2	equ	0xFDF
  9038                           postinc2	equ	0xFDE
  9039                           postdec2	equ	0xFDD
  9040                           plusw2	equ	0xFDB
  9041                           fsr2h	equ	0xFDA
  9042                           fsr2l	equ	0xFD9
  9043                           status	equ	0xFD8
  9044                           
  9045 ;; *************** function ___set_short_warn_value *****************
  9046 ;; Defined at:
  9047 ;;		line 777 in file "src/api/key_menu.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;  gohome          1    wreg     unsigned char 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;  gohome          1    0[BANK3 ] unsigned char 
  9052 ;;  t32             4    1[BANK3 ] long 
  9053 ;;  stp             2    5[BANK3 ] PTR struct .
  9054 ;;		 -> stSysData(240), 
  9055 ;;  t8              1    7[BANK3 ] unsigned char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9066 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Totals:         0       2       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;Total ram usage:       10 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    8
  9072 ;; This function calls:
  9073 ;;		___enter_menu_warn_value
  9074 ;;		___exit_menu_to_home_unsave
  9075 ;;		___mflot32_2_int32
  9076 ;;		___sys_data_save_write_flash
  9077 ;; This function is called by:
  9078 ;;		_key_process_set_long
  9079 ;;		_key_process_set
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text46
  9084  006C24                     __ptext46:
  9085                           	opt stack 0
  9086  006C24                     ___set_short_warn_value:
  9087                           	opt stack 20
  9088                           
  9089                           ;incstack = 0
  9090                           ;___set_short_warn_value@gohome stored from wreg
  9091  006C24  0103               	movlb	3	; () banked
  9092  006C26  6FCA               	movwf	___set_short_warn_value@gohome& (0+255),b
  9093                           
  9094                           ;key_menu.c: 779: uint8_t t8;
  9095                           ;key_menu.c: 781: int32_t t32;
  9096                           ;key_menu.c: 784: st_sysDataDef* stp=&stSysData;
  9097  006C28  0E00               	movlw	low _stSysData
  9098  006C2A  0103               	movlb	3	; () banked
  9099  006C2C  6FCF               	movwf	___set_short_warn_value@stp& (0+255),b
  9100  006C2E  0E02               	movlw	high _stSysData
  9101  006C30  0103               	movlb	3	; () banked
  9102  006C32  6FD0               	movwf	(___set_short_warn_value@stp+1)& (0+255),b
  9103                           
  9104                           ; BSR set to: 3
  9105                           ;key_menu.c: 785: t32=__mflot32_2_int32(m_floatAdj.t32);
  9106  006C34  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  9107  006C38  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  9108  006C3C  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  9109  006C40  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  9110  006C44  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
  9111  006C48  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_warn_value@t32
  9112  006C4C  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_warn_value@t32+1
  9113  006C50  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_warn_value@t32+2
  9114  006C54  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_warn_value@t32+3
  9115                           
  9116                           ;key_menu.c: 793: t8=subMenu>>1;
  9117  006C58  90D8               	bcf	status,0,c
  9118  006C5A  3032               	rrcf	_subMenu,w,c	;volatile
  9119  006C5C  0103               	movlb	3	; () banked
  9120  006C5E  6FD1               	movwf	___set_short_warn_value@t8& (0+255),b
  9121                           
  9122                           ; BSR set to: 3
  9123                           ;key_menu.c: 794: if(subMenu & 0x01){
  9124  006C60  A032               	btfss	_subMenu,0,c	;volatile
  9125  006C62  D019               	goto	l16109
  9126                           
  9127                           ; BSR set to: 3
  9128                           ;key_menu.c: 795: stp->diffPressureWarnSet[t8].warnValueHi=t32;
  9129  006C64  0103               	movlb	3	; () banked
  9130  006C66  51D1               	movf	___set_short_warn_value@t8& (0+255),w,b
  9131  006C68  0D0C               	mullw	12
  9132  006C6A  0E3C               	movlw	60
  9133  006C6C  26F3               	addwf	prodl,f,c
  9134  006C6E  0E00               	movlw	0
  9135  006C70  22F4               	addwfc	prodh,f,c
  9136  006C72  C3CF  F0E3         	movff	___set_short_warn_value@stp,??___set_short_warn_value
  9137  006C76  C3D0  F0E4         	movff	___set_short_warn_value@stp+1,??___set_short_warn_value+1
  9138  006C7A  50F3               	movf	prodl,w,c
  9139  006C7C  0100               	movlb	0	; () banked
  9140  006C7E  27E3               	addwf	??___set_short_warn_value& (0+255),f,b
  9141  006C80  50F4               	movf	prodh,w,c
  9142  006C82  0100               	movlb	0	; () banked
  9143  006C84  23E4               	addwfc	(??___set_short_warn_value+1)& (0+255),f,b
  9144  006C86  0E04               	movlw	4
  9145  006C88  0100               	movlb	0	; () banked
  9146  006C8A  25E3               	addwf	??___set_short_warn_value& (0+255),w,b
  9147  006C8C  6ED9               	movwf	fsr2l,c
  9148  006C8E  0E00               	movlw	0
  9149  006C90  0100               	movlb	0	; () banked
  9150  006C92  21E4               	addwfc	(??___set_short_warn_value+1)& (0+255),w,b
  9151  006C94  D00E               	goto	L1
  9152  006C96                     l16109:
  9153                           
  9154                           ;key_menu.c: 797: stp->diffPressureWarnSet[t8].warnValueLo=t32;
  9155  006C96  0103               	movlb	3	; () banked
  9156  006C98  51D1               	movf	___set_short_warn_value@t8& (0+255),w,b
  9157  006C9A  0D0C               	mullw	12
  9158  006C9C  0E3C               	movlw	60
  9159  006C9E  26F3               	addwf	prodl,f,c
  9160  006CA0  0E00               	movlw	0
  9161  006CA2  22F4               	addwfc	prodh,f,c
  9162  006CA4  50F3               	movf	prodl,w,c
  9163  006CA6  0103               	movlb	3	; () banked
  9164  006CA8  25CF               	addwf	___set_short_warn_value@stp& (0+255),w,b
  9165  006CAA  6ED9               	movwf	fsr2l,c
  9166  006CAC  50F4               	movf	prodh,w,c
  9167  006CAE  0103               	movlb	3	; () banked
  9168  006CB0  21D0               	addwfc	(___set_short_warn_value@stp+1)& (0+255),w,b
  9169  006CB2                     L1:
  9170  006CB2  6EDA               	movwf	fsr2h,c
  9171  006CB4  C3CB  FFDE         	movff	___set_short_warn_value@t32,postinc2
  9172  006CB8  C3CC  FFDE         	movff	___set_short_warn_value@t32+1,postinc2
  9173  006CBC  C3CD  FFDE         	movff	___set_short_warn_value@t32+2,postinc2
  9174  006CC0  C3CE  FFDE         	movff	___set_short_warn_value@t32+3,postinc2
  9175                           
  9176                           ;key_menu.c: 798: }
  9177                           ;key_menu.c: 800: __sys_data_save_write_flash();
  9178                           
  9179                           ; BSR set to: 3
  9180  006CC4  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
  9181                           
  9182                           ;key_menu.c: 802: if(gohome){__exit_menu_to_home_unsave(); return;}
  9183  006CC8  0103               	movlb	3	; () banked
  9184  006CCA  51CA               	movf	___set_short_warn_value@gohome& (0+255),w,b
  9185  006CCC  0103               	movlb	3	; () banked
  9186  006CCE  B4D8               	btfsc	status,2,c
  9187  006CD0  D003               	goto	l16119
  9188                           
  9189                           ; BSR set to: 3
  9190  006CD2  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  9191  006CD6  0012               	return	
  9192  006CD8                     l16119:
  9193                           
  9194                           ;key_menu.c: 804: subMenu++;
  9195  006CD8  2A32               	incf	_subMenu,f,c	;volatile
  9196                           
  9197                           ;key_menu.c: 805: if(subMenu>0x07)subMenu=0x00;
  9198  006CDA  0E07               	movlw	7
  9199  006CDC  6432               	cpfsgt	_subMenu,c	;volatile
  9200  006CDE  D002               	goto	l16125
  9201  006CE0  0E00               	movlw	0
  9202  006CE2  6E32               	movwf	_subMenu,c	;volatile
  9203  006CE4                     l16125:
  9204                           
  9205                           ;key_menu.c: 806: __enter_menu_warn_value(subMenu);
  9206  006CE4  5032               	movf	_subMenu,w,c	;volatile
  9207  006CE6  EC65  F038         	call	___enter_menu_warn_value
  9208  006CEA  0012               	return		;funcret
  9209  006CEC                     __end_of___set_short_warn_value:
  9210                           	opt stack 0
  9211                           tblptru	equ	0xFF8
  9212                           tblptrh	equ	0xFF7
  9213                           tblptrl	equ	0xFF6
  9214                           tablat	equ	0xFF5
  9215                           prodh	equ	0xFF4
  9216                           prodl	equ	0xFF3
  9217                           intcon	equ	0xFF2
  9218                           postinc0	equ	0xFEE
  9219                           wreg	equ	0xFE8
  9220                           postinc1	equ	0xFE6
  9221                           postdec1	equ	0xFE5
  9222                           plusw1	equ	0xFE3
  9223                           fsr1h	equ	0xFE2
  9224                           fsr1l	equ	0xFE1
  9225                           indf2	equ	0xFDF
  9226                           postinc2	equ	0xFDE
  9227                           postdec2	equ	0xFDD
  9228                           plusw2	equ	0xFDB
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8
  9232                           
  9233 ;; *************** function ___enter_menu_warn_value *****************
  9234 ;; Defined at:
  9235 ;;		line 260 in file "src/api/key_menu.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  __subMenu       1    wreg     unsigned char 
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;  __subMenu       1   31[BANK0 ] unsigned char 
  9240 ;;  t32             4   35[BANK0 ] long 
  9241 ;;  fps             2   32[BANK0 ] PTR struct .
  9242 ;;		 -> stSysData(240), 
  9243 ;;  t8              1   34[BANK0 ] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;Total ram usage:       10 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    6
  9260 ;; This function calls:
  9261 ;;		___int32_2_mflot32
  9262 ;; This function is called by:
  9263 ;;		_key_process_set_down_long
  9264 ;;		___set_short_warn_value
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text47
  9269  0070CA                     __ptext47:
  9270                           	opt stack 0
  9271  0070CA                     ___enter_menu_warn_value:
  9272                           	opt stack 21
  9273                           
  9274                           ;incstack = 0
  9275                           ;___enter_menu_warn_value@__subMenu stored from wreg
  9276  0070CA  0100               	movlb	0	; () banked
  9277  0070CC  6F7F               	movwf	___enter_menu_warn_value@__subMenu& (0+255),b
  9278                           
  9279                           ;key_menu.c: 262: uint8_t t8;
  9280                           ;key_menu.c: 263: int32_t t32;
  9281                           ;key_menu.c: 264: menu=0x90;
  9282  0070CE  0E90               	movlw	144
  9283  0070D0  6E33               	movwf	_menu,c	;volatile
  9284                           
  9285                           ;key_menu.c: 265: subMenu=__subMenu;
  9286  0070D2  C07F  F032         	movff	___enter_menu_warn_value@__subMenu,_subMenu	;volatile
  9287                           
  9288                           ;key_menu.c: 267: st_sysDataDef* fps= &stSysData;
  9289  0070D6  0E00               	movlw	low _stSysData
  9290  0070D8  0100               	movlb	0	; () banked
  9291  0070DA  6F80               	movwf	___enter_menu_warn_value@fps& (0+255),b
  9292  0070DC  0E02               	movlw	high _stSysData
  9293  0070DE  0100               	movlb	0	; () banked
  9294  0070E0  6F81               	movwf	(___enter_menu_warn_value@fps+1)& (0+255),b
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;key_menu.c: 275: t8=subMenu >>1;
  9298  0070E2  90D8               	bcf	status,0,c
  9299  0070E4  3032               	rrcf	_subMenu,w,c	;volatile
  9300  0070E6  0100               	movlb	0	; () banked
  9301  0070E8  6F82               	movwf	___enter_menu_warn_value@t8& (0+255),b
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;key_menu.c: 276: if(subMenu & 0x01){
  9305  0070EA  A032               	btfss	_subMenu,0,c	;volatile
  9306  0070EC  D019               	goto	l15225
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;key_menu.c: 278: t32=fps->diffPressureWarnSet[t8].warnValueHi;
  9310  0070EE  0100               	movlb	0	; () banked
  9311  0070F0  5182               	movf	___enter_menu_warn_value@t8& (0+255),w,b
  9312  0070F2  0D0C               	mullw	12
  9313  0070F4  0E3C               	movlw	60
  9314  0070F6  26F3               	addwf	prodl,f,c
  9315  0070F8  0E00               	movlw	0
  9316  0070FA  22F4               	addwfc	prodh,f,c
  9317  0070FC  C080  F07D         	movff	___enter_menu_warn_value@fps,??___enter_menu_warn_value
  9318  007100  C081  F07E         	movff	___enter_menu_warn_value@fps+1,??___enter_menu_warn_value+1
  9319  007104  50F3               	movf	prodl,w,c
  9320  007106  0100               	movlb	0	; () banked
  9321  007108  277D               	addwf	??___enter_menu_warn_value& (0+255),f,b
  9322  00710A  50F4               	movf	prodh,w,c
  9323  00710C  0100               	movlb	0	; () banked
  9324  00710E  237E               	addwfc	(??___enter_menu_warn_value+1)& (0+255),f,b
  9325  007110  0E04               	movlw	4
  9326  007112  0100               	movlb	0	; () banked
  9327  007114  257D               	addwf	??___enter_menu_warn_value& (0+255),w,b
  9328  007116  6ED9               	movwf	fsr2l,c
  9329  007118  0E00               	movlw	0
  9330  00711A  0100               	movlb	0	; () banked
  9331  00711C  217E               	addwfc	(??___enter_menu_warn_value+1)& (0+255),w,b
  9332  00711E  D00E               	goto	L2
  9333  007120                     l15225:
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;key_menu.c: 280: t32=fps->diffPressureWarnSet[t8].warnValueLo;
  9337  007120  0100               	movlb	0	; () banked
  9338  007122  5182               	movf	___enter_menu_warn_value@t8& (0+255),w,b
  9339  007124  0D0C               	mullw	12
  9340  007126  0E3C               	movlw	60
  9341  007128  26F3               	addwf	prodl,f,c
  9342  00712A  0E00               	movlw	0
  9343  00712C  22F4               	addwfc	prodh,f,c
  9344  00712E  50F3               	movf	prodl,w,c
  9345  007130  0100               	movlb	0	; () banked
  9346  007132  2580               	addwf	___enter_menu_warn_value@fps& (0+255),w,b
  9347  007134  6ED9               	movwf	fsr2l,c
  9348  007136  50F4               	movf	prodh,w,c
  9349  007138  0100               	movlb	0	; () banked
  9350  00713A  2181               	addwfc	(___enter_menu_warn_value@fps+1)& (0+255),w,b
  9351  00713C                     L2:
  9352  00713C  6EDA               	movwf	fsr2h,c
  9353  00713E  CFDE F083          	movff	postinc2,___enter_menu_warn_value@t32
  9354  007142  CFDE F084          	movff	postinc2,___enter_menu_warn_value@t32+1
  9355  007146  CFDE F085          	movff	postinc2,___enter_menu_warn_value@t32+2
  9356  00714A  CFDE F086          	movff	postinc2,___enter_menu_warn_value@t32+3
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;key_menu.c: 281: }
  9360                           ;key_menu.c: 283: t32=__int32_2_mflot32(t32);
  9361                           
  9362                           ; BSR set to: 0
  9363  00714E  C083  F06D         	movff	___enter_menu_warn_value@t32,___int32_2_mflot32@x
  9364  007152  C084  F06E         	movff	___enter_menu_warn_value@t32+1,___int32_2_mflot32@x+1
  9365  007156  C085  F06F         	movff	___enter_menu_warn_value@t32+2,___int32_2_mflot32@x+2
  9366  00715A  C086  F070         	movff	___enter_menu_warn_value@t32+3,___int32_2_mflot32@x+3
  9367  00715E  EC08  F030         	call	___int32_2_mflot32	;wreg free
  9368  007162  C06D  F083         	movff	?___int32_2_mflot32,___enter_menu_warn_value@t32
  9369  007166  C06E  F084         	movff	?___int32_2_mflot32+1,___enter_menu_warn_value@t32+1
  9370  00716A  C06F  F085         	movff	?___int32_2_mflot32+2,___enter_menu_warn_value@t32+2
  9371  00716E  C070  F086         	movff	?___int32_2_mflot32+3,___enter_menu_warn_value@t32+3
  9372                           
  9373                           ;key_menu.c: 284: m_floatAdj.t32=t32;
  9374  007172  C083  F035         	movff	___enter_menu_warn_value@t32,_m_floatAdj
  9375  007176  C084  F036         	movff	___enter_menu_warn_value@t32+1,_m_floatAdj+1
  9376  00717A  C085  F037         	movff	___enter_menu_warn_value@t32+2,_m_floatAdj+2
  9377  00717E  C086  F038         	movff	___enter_menu_warn_value@t32+3,_m_floatAdj+3
  9378                           
  9379                           ;key_menu.c: 285: adjLocation=0;
  9380  007182  0E00               	movlw	0
  9381  007184  6E3F               	movwf	_adjLocation,c	;volatile
  9382  007186  0012               	return		;funcret
  9383  007188                     __end_of___enter_menu_warn_value:
  9384                           	opt stack 0
  9385                           tblptru	equ	0xFF8
  9386                           tblptrh	equ	0xFF7
  9387                           tblptrl	equ	0xFF6
  9388                           tablat	equ	0xFF5
  9389                           prodh	equ	0xFF4
  9390                           prodl	equ	0xFF3
  9391                           intcon	equ	0xFF2
  9392                           postinc0	equ	0xFEE
  9393                           wreg	equ	0xFE8
  9394                           postinc1	equ	0xFE6
  9395                           postdec1	equ	0xFE5
  9396                           plusw1	equ	0xFE3
  9397                           fsr1h	equ	0xFE2
  9398                           fsr1l	equ	0xFE1
  9399                           indf2	equ	0xFDF
  9400                           postinc2	equ	0xFDE
  9401                           postdec2	equ	0xFDD
  9402                           plusw2	equ	0xFDB
  9403                           fsr2h	equ	0xFDA
  9404                           fsr2l	equ	0xFD9
  9405                           status	equ	0xFD8
  9406                           
  9407 ;; *************** function ___set_short_warn_type *****************
  9408 ;; Defined at:
  9409 ;;		line 759 in file "src/api/key_menu.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  gohome          1    wreg     unsigned char 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  gohome          1    0[BANK1 ] unsigned char 
  9414 ;;  stp             2    3[BANK1 ] PTR struct .
  9415 ;;		 -> stSysData(240), 
  9416 ;;  p               2    1[BANK1 ] PTR unsigned char 
  9417 ;;		 -> adjValue(4), 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9428 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;Total ram usage:        7 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:    8
  9434 ;; This function calls:
  9435 ;;		___enter_menu_warn_type
  9436 ;;		___exit_menu_to_home_unsave
  9437 ;;		___sys_data_save_write_flash
  9438 ;; This function is called by:
  9439 ;;		_key_process_set_long
  9440 ;;		_key_process_set
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text48
  9445  0083A0                     __ptext48:
  9446                           	opt stack 0
  9447  0083A0                     ___set_short_warn_type:
  9448                           	opt stack 20
  9449                           
  9450                           ;incstack = 0
  9451                           ;___set_short_warn_type@gohome stored from wreg
  9452  0083A0  0101               	movlb	1	; () banked
  9453  0083A2  6FFB               	movwf	___set_short_warn_type@gohome& (0+255),b
  9454                           
  9455                           ;key_menu.c: 761: uint8_t* p;
  9456                           ;key_menu.c: 765: st_sysDataDef* stp=&stSysData;
  9457  0083A4  0E00               	movlw	low _stSysData
  9458  0083A6  0101               	movlb	1	; () banked
  9459  0083A8  6FFE               	movwf	___set_short_warn_type@stp& (0+255),b
  9460  0083AA  0E02               	movlw	high _stSysData
  9461  0083AC  0101               	movlb	1	; () banked
  9462  0083AE  6FFF               	movwf	(___set_short_warn_type@stp+1)& (0+255),b
  9463                           
  9464                           ;key_menu.c: 766: p=(uint8_t*)(&adjValue);
  9465  0083B0  0E39               	movlw	low _adjValue
  9466  0083B2  0101               	movlb	1	; () banked
  9467  0083B4  6FFC               	movwf	___set_short_warn_type@p& (0+255),b
  9468  0083B6  0E00               	movlw	high _adjValue
  9469  0083B8  0101               	movlb	1	; () banked
  9470  0083BA  6FFD               	movwf	(___set_short_warn_type@p+1)& (0+255),b
  9471                           
  9472                           ; BSR set to: 1
  9473                           ;key_menu.c: 767: stp->diffPressureWarnSet[subMenu].type=*p;
  9474  0083BC  C1FC  FFD9         	movff	___set_short_warn_type@p,fsr2l
  9475  0083C0  C1FD  FFDA         	movff	___set_short_warn_type@p+1,fsr2h
  9476  0083C4  5032               	movf	_subMenu,w,c	;volatile
  9477  0083C6  0D0C               	mullw	12
  9478  0083C8  0E3C               	movlw	60
  9479  0083CA  26F3               	addwf	prodl,f,c
  9480  0083CC  0E00               	movlw	0
  9481  0083CE  22F4               	addwfc	prodh,f,c
  9482  0083D0  C1FE  F0E3         	movff	___set_short_warn_type@stp,??___set_short_warn_type
  9483  0083D4  C1FF  F0E4         	movff	___set_short_warn_type@stp+1,??___set_short_warn_type+1
  9484  0083D8  50F3               	movf	prodl,w,c
  9485  0083DA  0100               	movlb	0	; () banked
  9486  0083DC  27E3               	addwf	??___set_short_warn_type& (0+255),f,b
  9487  0083DE  50F4               	movf	prodh,w,c
  9488  0083E0  0100               	movlb	0	; () banked
  9489  0083E2  23E4               	addwfc	(??___set_short_warn_type+1)& (0+255),f,b
  9490  0083E4  0E08               	movlw	8
  9491  0083E6  0100               	movlb	0	; () banked
  9492  0083E8  25E3               	addwf	??___set_short_warn_type& (0+255),w,b
  9493  0083EA  6EE1               	movwf	fsr1l,c
  9494  0083EC  0E00               	movlw	0
  9495  0083EE  0100               	movlb	0	; () banked
  9496  0083F0  21E4               	addwfc	(??___set_short_warn_type+1)& (0+255),w,b
  9497  0083F2  6EE2               	movwf	fsr1h,c
  9498  0083F4  CFDF FFE7          	movff	indf2,indf1
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;key_menu.c: 768: __sys_data_save_write_flash();
  9502  0083F8  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
  9503                           
  9504                           ;key_menu.c: 770: if(gohome){__exit_menu_to_home_unsave(); return;}
  9505  0083FC  0101               	movlb	1	; () banked
  9506  0083FE  51FB               	movf	___set_short_warn_type@gohome& (0+255),w,b
  9507  008400  0101               	movlb	1	; () banked
  9508  008402  B4D8               	btfsc	status,2,c
  9509  008404  D003               	goto	l16091
  9510                           
  9511                           ; BSR set to: 1
  9512  008406  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  9513  00840A  0012               	return	
  9514  00840C                     l16091:
  9515                           
  9516                           ;key_menu.c: 772: subMenu++;
  9517  00840C  2A32               	incf	_subMenu,f,c	;volatile
  9518                           
  9519                           ;key_menu.c: 773: if(subMenu>0x03)subMenu=0x00;
  9520  00840E  0E03               	movlw	3
  9521  008410  6432               	cpfsgt	_subMenu,c	;volatile
  9522  008412  D002               	goto	l16097
  9523  008414  0E00               	movlw	0
  9524  008416  6E32               	movwf	_subMenu,c	;volatile
  9525  008418                     l16097:
  9526                           
  9527                           ;key_menu.c: 774: __enter_menu_warn_type(subMenu);
  9528  008418  5032               	movf	_subMenu,w,c	;volatile
  9529  00841A  EC4F  F048         	call	___enter_menu_warn_type
  9530  00841E  0012               	return		;funcret
  9531  008420                     __end_of___set_short_warn_type:
  9532                           	opt stack 0
  9533                           tblptru	equ	0xFF8
  9534                           tblptrh	equ	0xFF7
  9535                           tblptrl	equ	0xFF6
  9536                           tablat	equ	0xFF5
  9537                           prodh	equ	0xFF4
  9538                           prodl	equ	0xFF3
  9539                           intcon	equ	0xFF2
  9540                           postinc0	equ	0xFEE
  9541                           wreg	equ	0xFE8
  9542                           indf1	equ	0xFE7
  9543                           postinc1	equ	0xFE6
  9544                           postdec1	equ	0xFE5
  9545                           plusw1	equ	0xFE3
  9546                           fsr1h	equ	0xFE2
  9547                           fsr1l	equ	0xFE1
  9548                           indf2	equ	0xFDF
  9549                           postinc2	equ	0xFDE
  9550                           postdec2	equ	0xFDD
  9551                           plusw2	equ	0xFDB
  9552                           fsr2h	equ	0xFDA
  9553                           fsr2l	equ	0xFD9
  9554                           status	equ	0xFD8
  9555                           
  9556 ;; *************** function ___enter_menu_warn_type *****************
  9557 ;; Defined at:
  9558 ;;		line 249 in file "src/api/key_menu.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  __subMenu       1    wreg     unsigned char 
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;  __subMenu       1    2[BANK0 ] unsigned char 
  9563 ;;  fps             2    3[BANK0 ] PTR struct .
  9564 ;;		 -> stSysData(240), 
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9577 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9578 ;;Total ram usage:        5 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    4
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_key_process_set_down_long
  9585 ;;		___set_short_warn_type
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text49
  9590  00909E                     __ptext49:
  9591                           	opt stack 0
  9592  00909E                     ___enter_menu_warn_type:
  9593                           	opt stack 23
  9594                           
  9595                           ;incstack = 0
  9596                           ;___enter_menu_warn_type@__subMenu stored from wreg
  9597  00909E  0100               	movlb	0	; () banked
  9598  0090A0  6F62               	movwf	___enter_menu_warn_type@__subMenu& (0+255),b
  9599                           
  9600                           ;key_menu.c: 251: menu=0x80;
  9601  0090A2  0E80               	movlw	128
  9602  0090A4  6E33               	movwf	_menu,c	;volatile
  9603                           
  9604                           ;key_menu.c: 252: subMenu=__subMenu;
  9605  0090A6  C062  F032         	movff	___enter_menu_warn_type@__subMenu,_subMenu	;volatile
  9606                           
  9607                           ;key_menu.c: 254: st_sysDataDef* fps= &stSysData;
  9608  0090AA  0E00               	movlw	low _stSysData
  9609  0090AC  0100               	movlb	0	; () banked
  9610  0090AE  6F63               	movwf	___enter_menu_warn_type@fps& (0+255),b
  9611  0090B0  0E02               	movlw	high _stSysData
  9612  0090B2  0100               	movlb	0	; () banked
  9613  0090B4  6F64               	movwf	(___enter_menu_warn_type@fps+1)& (0+255),b
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;key_menu.c: 255: adjValue=0x00ul;
  9617  0090B6  0E00               	movlw	0
  9618  0090B8  6E39               	movwf	_adjValue,c	;volatile
  9619  0090BA  0E00               	movlw	0
  9620  0090BC  6E3A               	movwf	_adjValue+1,c	;volatile
  9621  0090BE  0E00               	movlw	0
  9622  0090C0  6E3B               	movwf	_adjValue+2,c	;volatile
  9623  0090C2  0E00               	movlw	0
  9624  0090C4  6E3C               	movwf	_adjValue+3,c	;volatile
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;key_menu.c: 256: *((uint8_t*)(&adjValue))=(uint8_t)(fps->diffPressureWarnSet[subMenu].t
      +                          ype);
  9628  0090C6  5032               	movf	_subMenu,w,c	;volatile
  9629  0090C8  0D0C               	mullw	12
  9630  0090CA  0E3C               	movlw	60
  9631  0090CC  26F3               	addwf	prodl,f,c
  9632  0090CE  0E00               	movlw	0
  9633  0090D0  22F4               	addwfc	prodh,f,c
  9634  0090D2  C063  F060         	movff	___enter_menu_warn_type@fps,??___enter_menu_warn_type
  9635  0090D6  C064  F061         	movff	___enter_menu_warn_type@fps+1,??___enter_menu_warn_type+1
  9636  0090DA  50F3               	movf	prodl,w,c
  9637  0090DC  0100               	movlb	0	; () banked
  9638  0090DE  2760               	addwf	??___enter_menu_warn_type& (0+255),f,b
  9639  0090E0  50F4               	movf	prodh,w,c
  9640  0090E2  0100               	movlb	0	; () banked
  9641  0090E4  2361               	addwfc	(??___enter_menu_warn_type+1)& (0+255),f,b
  9642  0090E6  0E08               	movlw	8
  9643  0090E8  0100               	movlb	0	; () banked
  9644  0090EA  2560               	addwf	??___enter_menu_warn_type& (0+255),w,b
  9645  0090EC  6ED9               	movwf	fsr2l,c
  9646  0090EE  0E00               	movlw	0
  9647  0090F0  0100               	movlb	0	; () banked
  9648  0090F2  2161               	addwfc	(??___enter_menu_warn_type+1)& (0+255),w,b
  9649  0090F4  6EDA               	movwf	fsr2h,c
  9650  0090F6  50DF               	movf	indf2,w,c
  9651  0090F8  6E39               	movwf	_adjValue,c
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;key_menu.c: 257: adjLocation=0;
  9655  0090FA  0E00               	movlw	0
  9656  0090FC  6E3F               	movwf	_adjLocation,c	;volatile
  9657                           
  9658                           ; BSR set to: 0
  9659  0090FE  0012               	return		;funcret
  9660  009100                     __end_of___enter_menu_warn_type:
  9661                           	opt stack 0
  9662                           tblptru	equ	0xFF8
  9663                           tblptrh	equ	0xFF7
  9664                           tblptrl	equ	0xFF6
  9665                           tablat	equ	0xFF5
  9666                           prodh	equ	0xFF4
  9667                           prodl	equ	0xFF3
  9668                           intcon	equ	0xFF2
  9669                           postinc0	equ	0xFEE
  9670                           wreg	equ	0xFE8
  9671                           indf1	equ	0xFE7
  9672                           postinc1	equ	0xFE6
  9673                           postdec1	equ	0xFE5
  9674                           plusw1	equ	0xFE3
  9675                           fsr1h	equ	0xFE2
  9676                           fsr1l	equ	0xFE1
  9677                           indf2	equ	0xFDF
  9678                           postinc2	equ	0xFDE
  9679                           postdec2	equ	0xFDD
  9680                           plusw2	equ	0xFDB
  9681                           fsr2h	equ	0xFDA
  9682                           fsr2l	equ	0xFD9
  9683                           status	equ	0xFD8
  9684                           
  9685 ;; *************** function ___set_short_pr_calib *****************
  9686 ;; Defined at:
  9687 ;;		line 700 in file "src/api/key_menu.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  gohome          1    wreg     unsigned char 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  gohome          1   52[BANK0 ] unsigned char 
  9692 ;;  t32             4   55[BANK0 ] unsigned long 
  9693 ;;  pra             4   48[BANK0 ] unsigned long 
  9694 ;;  t16             2   59[BANK0 ] unsigned int 
  9695 ;;  adjv            1   61[BANK0 ] unsigned char 
  9696 ;;  saveFlg         1   54[BANK0 ] unsigned char 
  9697 ;;  t8              1   53[BANK0 ] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      void 
  9700 ;; Registers used:
  9701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9710 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9711 ;;Total ram usage:       20 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    9
  9714 ;; This function calls:
  9715 ;;		___enter_menu_calib_press
  9716 ;;		___exit_menu_to_home_unsave
  9717 ;;		___mflot32_2_int32
  9718 ;;		_at24c02_write_n_byte
  9719 ;;		_crc_append
  9720 ;; This function is called by:
  9721 ;;		_key_process_set_long
  9722 ;;		_key_process_set
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text50
  9727  002A7C                     __ptext50:
  9728                           	opt stack 0
  9729  002A7C                     ___set_short_pr_calib:
  9730                           	opt stack 19
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;incstack = 0
  9734                           ;___set_short_pr_calib@gohome stored from wreg
  9735  002A7C  0100               	movlb	0	; () banked
  9736  002A7E  6F94               	movwf	___set_short_pr_calib@gohome& (0+255),b
  9737                           
  9738                           ;key_menu.c: 702: bool saveFlg=0;
  9739  002A80  0E00               	movlw	0
  9740  002A82  0100               	movlb	0	; () banked
  9741  002A84  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
  9742                           
  9743                           ; BSR set to: 0
  9744                           ;key_menu.c: 703: uint8_t t8,adjv;
  9745                           ;key_menu.c: 704: uint16_t t16;
  9746                           ;key_menu.c: 705: uint32_t t32,pra;
  9747                           ;key_menu.c: 706: if(calibCol==0){
  9748  002A86  5030               	movf	_calibCol,w,c	;volatile
  9749  002A88  A4D8               	btfss	status,2,c
  9750  002A8A  D021               	goto	l16027
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;key_menu.c: 707: t8=prCalibTabDef.prCalibRow[calibRow].pCount;
  9754  002A8C  5031               	movf	_calibRow,w,c	;volatile
  9755  002A8E  0D34               	mullw	52
  9756  002A90  0E04               	movlw	low (_prCalibTabDef+4)
  9757  002A92  24F3               	addwf	prodl,w,c
  9758  002A94  6ED9               	movwf	fsr2l,c
  9759  002A96  0E04               	movlw	high (_prCalibTabDef+4)
  9760  002A98  20F4               	addwfc	prodh,w,c
  9761  002A9A  6EDA               	movwf	fsr2h,c
  9762  002A9C  50DF               	movf	indf2,w,c
  9763  002A9E  0100               	movlb	0	; () banked
  9764  002AA0  6F95               	movwf	___set_short_pr_calib@t8& (0+255),b
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;key_menu.c: 708: adjv=*(uint8_t*)(&adjValue);
  9768  002AA2  C039  F09D         	movff	_adjValue,___set_short_pr_calib@adjv
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;key_menu.c: 709: if(t8!=adjv){
  9772  002AA6  0100               	movlb	0	; () banked
  9773  002AA8  519D               	movf	___set_short_pr_calib@adjv& (0+255),w,b
  9774  002AAA  0100               	movlb	0	; () banked
  9775  002AAC  1995               	xorwf	___set_short_pr_calib@t8& (0+255),w,b
  9776  002AAE  B4D8               	btfsc	status,2,c
  9777  002AB0  D148               	goto	l16037
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;key_menu.c: 710: saveFlg=1;
  9781  002AB2  0E01               	movlw	1
  9782  002AB4  0100               	movlb	0	; () banked
  9783  002AB6  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;key_menu.c: 711: prCalibTabDef.prCalibRow[calibRow].pCount=adjv;
  9787  002AB8  5031               	movf	_calibRow,w,c	;volatile
  9788  002ABA  0D34               	mullw	52
  9789  002ABC  0E04               	movlw	low (_prCalibTabDef+4)
  9790  002ABE  24F3               	addwf	prodl,w,c
  9791  002AC0  6ED9               	movwf	fsr2l,c
  9792  002AC2  0E04               	movlw	high (_prCalibTabDef+4)
  9793  002AC4  20F4               	addwfc	prodh,w,c
  9794  002AC6  6EDA               	movwf	fsr2h,c
  9795  002AC8  C09D  FFDF         	movff	___set_short_pr_calib@adjv,indf2
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;key_menu.c: 712: }
  9799                           ;key_menu.c: 713: }else{
  9800  002ACC  D13A               	goto	l16037
  9801  002ACE                     l16027:
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;key_menu.c: 714: t32=__mflot32_2_int32(m_floatAdj.t32);
  9805  002ACE  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  9806  002AD2  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  9807  002AD6  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  9808  002ADA  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  9809  002ADE  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
  9810  002AE2  C06C  F097         	movff	?___mflot32_2_int32,___set_short_pr_calib@t32
  9811  002AE6  C06D  F098         	movff	?___mflot32_2_int32+1,___set_short_pr_calib@t32+1
  9812  002AEA  C06E  F099         	movff	?___mflot32_2_int32+2,___set_short_pr_calib@t32+2
  9813  002AEE  C06F  F09A         	movff	?___mflot32_2_int32+3,___set_short_pr_calib@t32+3
  9814                           
  9815                           ;key_menu.c: 715: pra=prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue
      +                          ;
  9816  002AF2  5031               	movf	_calibRow,w,c	;volatile
  9817  002AF4  0D34               	mullw	52
  9818  002AF6  0EFC               	movlw	252
  9819  002AF8  0100               	movlb	0	; () banked
  9820  002AFA  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
  9821  002AFC  0EFF               	movlw	255
  9822  002AFE  0100               	movlb	0	; () banked
  9823  002B00  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
  9824  002B02  5030               	movf	_calibCol,w,c	;volatile
  9825  002B04  0100               	movlb	0	; () banked
  9826  002B06  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
  9827  002B08  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
  9828  002B0A  0100               	movlb	0	; () banked
  9829  002B0C  90D8               	bcf	status,0,c
  9830  002B0E  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9831  002B10  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9832  002B12  0100               	movlb	0	; () banked
  9833  002B14  90D8               	bcf	status,0,c
  9834  002B16  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9835  002B18  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9836  002B1A  0100               	movlb	0	; () banked
  9837  002B1C  90D8               	bcf	status,0,c
  9838  002B1E  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9839  002B20  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9840  002B22  0100               	movlb	0	; () banked
  9841  002B24  518A               	movf	??___set_short_pr_calib& (0+255),w,b
  9842  002B26  0100               	movlb	0	; () banked
  9843  002B28  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
  9844  002B2A  0100               	movlb	0	; () banked
  9845  002B2C  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
  9846  002B2E  0100               	movlb	0	; () banked
  9847  002B30  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
  9848  002B32  0E00               	movlw	low _prCalibTabDef
  9849  002B34  0100               	movlb	0	; () banked
  9850  002B36  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
  9851  002B38  0E04               	movlw	high _prCalibTabDef
  9852  002B3A  0100               	movlb	0	; () banked
  9853  002B3C  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
  9854  002B3E  0E04               	movlw	4
  9855  002B40  0100               	movlb	0	; () banked
  9856  002B42  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
  9857  002B44  0E00               	movlw	0
  9858  002B46  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
  9859  002B48  0100               	movlb	0	; () banked
  9860  002B4A  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
  9861  002B4C  0100               	movlb	0	; () banked
  9862  002B4E  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
  9863  002B50  0100               	movlb	0	; () banked
  9864  002B52  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
  9865  002B54  0100               	movlb	0	; () banked
  9866  002B56  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
  9867  002B58  50F3               	movf	prodl,w,c
  9868  002B5A  0100               	movlb	0	; () banked
  9869  002B5C  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
  9870  002B5E  6ED9               	movwf	fsr2l,c
  9871  002B60  50F4               	movf	prodh,w,c
  9872  002B62  0100               	movlb	0	; () banked
  9873  002B64  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
  9874  002B66  6EDA               	movwf	fsr2h,c
  9875  002B68  CFDE F090          	movff	postinc2,___set_short_pr_calib@pra
  9876  002B6C  CFDE F091          	movff	postinc2,___set_short_pr_calib@pra+1
  9877  002B70  CFDE F092          	movff	postinc2,___set_short_pr_calib@pra+2
  9878  002B74  CFDE F093          	movff	postinc2,___set_short_pr_calib@pra+3
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;key_menu.c: 716: if(pra!=t32){
  9882  002B78  0100               	movlb	0	; () banked
  9883  002B7A  5197               	movf	___set_short_pr_calib@t32& (0+255),w,b
  9884  002B7C  0100               	movlb	0	; () banked
  9885  002B7E  1990               	xorwf	___set_short_pr_calib@pra& (0+255),w,b
  9886  002B80  E110               	bnz	u14930
  9887  002B82  0100               	movlb	0	; () banked
  9888  002B84  5198               	movf	(___set_short_pr_calib@t32+1)& (0+255),w,b
  9889  002B86  0100               	movlb	0	; () banked
  9890  002B88  1991               	xorwf	(___set_short_pr_calib@pra+1)& (0+255),w,b
  9891  002B8A  E10B               	bnz	u14930
  9892  002B8C  0100               	movlb	0	; () banked
  9893  002B8E  5199               	movf	(___set_short_pr_calib@t32+2)& (0+255),w,b
  9894  002B90  0100               	movlb	0	; () banked
  9895  002B92  1992               	xorwf	(___set_short_pr_calib@pra+2)& (0+255),w,b
  9896  002B94  E106               	bnz	u14930
  9897  002B96  0100               	movlb	0	; () banked
  9898  002B98  519A               	movf	(___set_short_pr_calib@t32+3)& (0+255),w,b
  9899  002B9A  0100               	movlb	0	; () banked
  9900  002B9C  1993               	xorwf	(___set_short_pr_calib@pra+3)& (0+255),w,b
  9901  002B9E  B4D8               	btfsc	status,2,c
  9902  002BA0  D0D0               	goto	l16037
  9903  002BA2                     u14930:
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;key_menu.c: 717: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue=t32
      +                          ;
  9907  002BA2  5031               	movf	_calibRow,w,c	;volatile
  9908  002BA4  0D34               	mullw	52
  9909  002BA6  0EFC               	movlw	252
  9910  002BA8  0100               	movlb	0	; () banked
  9911  002BAA  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
  9912  002BAC  0EFF               	movlw	255
  9913  002BAE  0100               	movlb	0	; () banked
  9914  002BB0  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
  9915  002BB2  5030               	movf	_calibCol,w,c	;volatile
  9916  002BB4  0100               	movlb	0	; () banked
  9917  002BB6  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
  9918  002BB8  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
  9919  002BBA  0100               	movlb	0	; () banked
  9920  002BBC  90D8               	bcf	status,0,c
  9921  002BBE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9922  002BC0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9923  002BC2  0100               	movlb	0	; () banked
  9924  002BC4  90D8               	bcf	status,0,c
  9925  002BC6  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9926  002BC8  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9927  002BCA  0100               	movlb	0	; () banked
  9928  002BCC  90D8               	bcf	status,0,c
  9929  002BCE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9930  002BD0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9931  002BD2  0100               	movlb	0	; () banked
  9932  002BD4  518A               	movf	??___set_short_pr_calib& (0+255),w,b
  9933  002BD6  0100               	movlb	0	; () banked
  9934  002BD8  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
  9935  002BDA  0100               	movlb	0	; () banked
  9936  002BDC  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
  9937  002BDE  0100               	movlb	0	; () banked
  9938  002BE0  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
  9939  002BE2  0E00               	movlw	low _prCalibTabDef
  9940  002BE4  0100               	movlb	0	; () banked
  9941  002BE6  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
  9942  002BE8  0E04               	movlw	high _prCalibTabDef
  9943  002BEA  0100               	movlb	0	; () banked
  9944  002BEC  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
  9945  002BEE  0E04               	movlw	4
  9946  002BF0  0100               	movlb	0	; () banked
  9947  002BF2  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
  9948  002BF4  0E00               	movlw	0
  9949  002BF6  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
  9950  002BF8  0100               	movlb	0	; () banked
  9951  002BFA  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
  9952  002BFC  0100               	movlb	0	; () banked
  9953  002BFE  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
  9954  002C00  0100               	movlb	0	; () banked
  9955  002C02  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
  9956  002C04  0100               	movlb	0	; () banked
  9957  002C06  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
  9958  002C08  50F3               	movf	prodl,w,c
  9959  002C0A  0100               	movlb	0	; () banked
  9960  002C0C  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
  9961  002C0E  6ED9               	movwf	fsr2l,c
  9962  002C10  50F4               	movf	prodh,w,c
  9963  002C12  0100               	movlb	0	; () banked
  9964  002C14  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
  9965  002C16  6EDA               	movwf	fsr2h,c
  9966  002C18  C097  FFDE         	movff	___set_short_pr_calib@t32,postinc2
  9967  002C1C  C098  FFDE         	movff	___set_short_pr_calib@t32+1,postinc2
  9968  002C20  C099  FFDE         	movff	___set_short_pr_calib@t32+2,postinc2
  9969  002C24  C09A  FFDE         	movff	___set_short_pr_calib@t32+3,postinc2
  9970                           
  9971                           ;key_menu.c: 718: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pAdcValue=
      +                          x_prDiffData.pAdcValue;
  9972  002C28  5031               	movf	_calibRow,w,c	;volatile
  9973  002C2A  0D34               	mullw	52
  9974  002C2C  0EFC               	movlw	252
  9975  002C2E  0100               	movlb	0	; () banked
  9976  002C30  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
  9977  002C32  0EFF               	movlw	255
  9978  002C34  0100               	movlb	0	; () banked
  9979  002C36  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
  9980  002C38  5030               	movf	_calibCol,w,c	;volatile
  9981  002C3A  0100               	movlb	0	; () banked
  9982  002C3C  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
  9983  002C3E  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
  9984  002C40  0100               	movlb	0	; () banked
  9985  002C42  90D8               	bcf	status,0,c
  9986  002C44  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9987  002C46  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9988  002C48  0100               	movlb	0	; () banked
  9989  002C4A  90D8               	bcf	status,0,c
  9990  002C4C  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9991  002C4E  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9992  002C50  0100               	movlb	0	; () banked
  9993  002C52  90D8               	bcf	status,0,c
  9994  002C54  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9995  002C56  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9996  002C58  0100               	movlb	0	; () banked
  9997  002C5A  518A               	movf	??___set_short_pr_calib& (0+255),w,b
  9998  002C5C  0100               	movlb	0	; () banked
  9999  002C5E  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10000  002C60  0100               	movlb	0	; () banked
 10001  002C62  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10002  002C64  0100               	movlb	0	; () banked
 10003  002C66  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10004  002C68  0E00               	movlw	low _prCalibTabDef
 10005  002C6A  0100               	movlb	0	; () banked
 10006  002C6C  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10007  002C6E  0E04               	movlw	high _prCalibTabDef
 10008  002C70  0100               	movlb	0	; () banked
 10009  002C72  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10010  002C74  0E04               	movlw	4
 10011  002C76  0100               	movlb	0	; () banked
 10012  002C78  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10013  002C7A  0E00               	movlw	0
 10014  002C7C  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10015  002C7E  0100               	movlb	0	; () banked
 10016  002C80  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10017  002C82  0100               	movlb	0	; () banked
 10018  002C84  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10019  002C86  0100               	movlb	0	; () banked
 10020  002C88  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10021  002C8A  0100               	movlb	0	; () banked
 10022  002C8C  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10023  002C8E  50F3               	movf	prodl,w,c
 10024  002C90  0100               	movlb	0	; () banked
 10025  002C92  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10026  002C94  50F4               	movf	prodh,w,c
 10027  002C96  0100               	movlb	0	; () banked
 10028  002C98  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10029  002C9A  0E04               	movlw	4
 10030  002C9C  0100               	movlb	0	; () banked
 10031  002C9E  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10032  002CA0  6ED9               	movwf	fsr2l,c
 10033  002CA2  0E00               	movlw	0
 10034  002CA4  0100               	movlb	0	; () banked
 10035  002CA6  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10036  002CA8  6EDA               	movwf	fsr2h,c
 10037  002CAA  C1EA  FFDE         	movff	_x_prDiffData+4,postinc2
 10038  002CAE  C1EB  FFDD         	movff	_x_prDiffData+5,postdec2
 10039                           
 10040                           ;key_menu.c: 719: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].tAdcValue=
      +                          x_prDiffData.tAdcValue;
 10041  002CB2  5031               	movf	_calibRow,w,c	;volatile
 10042  002CB4  0D34               	mullw	52
 10043  002CB6  0EFC               	movlw	252
 10044  002CB8  0100               	movlb	0	; () banked
 10045  002CBA  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10046  002CBC  0EFF               	movlw	255
 10047  002CBE  0100               	movlb	0	; () banked
 10048  002CC0  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10049  002CC2  5030               	movf	_calibCol,w,c	;volatile
 10050  002CC4  0100               	movlb	0	; () banked
 10051  002CC6  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10052  002CC8  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10053  002CCA  0100               	movlb	0	; () banked
 10054  002CCC  90D8               	bcf	status,0,c
 10055  002CCE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10056  002CD0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10057  002CD2  0100               	movlb	0	; () banked
 10058  002CD4  90D8               	bcf	status,0,c
 10059  002CD6  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10060  002CD8  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10061  002CDA  0100               	movlb	0	; () banked
 10062  002CDC  90D8               	bcf	status,0,c
 10063  002CDE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10064  002CE0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10065  002CE2  0100               	movlb	0	; () banked
 10066  002CE4  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10067  002CE6  0100               	movlb	0	; () banked
 10068  002CE8  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10069  002CEA  0100               	movlb	0	; () banked
 10070  002CEC  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10071  002CEE  0100               	movlb	0	; () banked
 10072  002CF0  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10073  002CF2  0E00               	movlw	low _prCalibTabDef
 10074  002CF4  0100               	movlb	0	; () banked
 10075  002CF6  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10076  002CF8  0E04               	movlw	high _prCalibTabDef
 10077  002CFA  0100               	movlb	0	; () banked
 10078  002CFC  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10079  002CFE  0E04               	movlw	4
 10080  002D00  0100               	movlb	0	; () banked
 10081  002D02  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10082  002D04  0E00               	movlw	0
 10083  002D06  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10084  002D08  0100               	movlb	0	; () banked
 10085  002D0A  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10086  002D0C  0100               	movlb	0	; () banked
 10087  002D0E  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10088  002D10  0100               	movlb	0	; () banked
 10089  002D12  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10090  002D14  0100               	movlb	0	; () banked
 10091  002D16  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10092  002D18  50F3               	movf	prodl,w,c
 10093  002D1A  0100               	movlb	0	; () banked
 10094  002D1C  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10095  002D1E  50F4               	movf	prodh,w,c
 10096  002D20  0100               	movlb	0	; () banked
 10097  002D22  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10098  002D24  0E06               	movlw	6
 10099  002D26  0100               	movlb	0	; () banked
 10100  002D28  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10101  002D2A  6ED9               	movwf	fsr2l,c
 10102  002D2C  0E00               	movlw	0
 10103  002D2E  0100               	movlb	0	; () banked
 10104  002D30  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10105  002D32  6EDA               	movwf	fsr2h,c
 10106  002D34  C1EC  FFDE         	movff	_x_prDiffData+6,postinc2
 10107  002D38  C1ED  FFDD         	movff	_x_prDiffData+7,postdec2
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;key_menu.c: 720: saveFlg=1;
 10111  002D3C  0E01               	movlw	1
 10112  002D3E  0100               	movlb	0	; () banked
 10113  002D40  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
 10114  002D42                     l16037:
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;key_menu.c: 721: }
 10118                           ;key_menu.c: 722: }
 10119                           ;key_menu.c: 724: if(saveFlg){
 10120  002D42  0100               	movlb	0	; () banked
 10121  002D44  5196               	movf	___set_short_pr_calib@saveFlg& (0+255),w,b
 10122  002D46  0100               	movlb	0	; () banked
 10123  002D48  B4D8               	btfsc	status,2,c
 10124  002D4A  D02A               	goto	l16045
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;key_menu.c: 725: t16=sizeof(prCalibTabDef);
 10128  002D4C  0E00               	movlw	0
 10129  002D4E  0100               	movlb	0	; () banked
 10130  002D50  6F9C               	movwf	(___set_short_pr_calib@t16+1)& (0+255),b
 10131  002D52  0EA2               	movlw	162
 10132  002D54  6F9B               	movwf	___set_short_pr_calib@t16& (0+255),b
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;key_menu.c: 726: crc_append((uint8_t*)&prCalibTabDef,t16-2);
 10136  002D56  0E00               	movlw	low _prCalibTabDef
 10137  002D58  0100               	movlb	0	; () banked
 10138  002D5A  6F6C               	movwf	crc_append@message& (0+255),b
 10139  002D5C  0E04               	movlw	high _prCalibTabDef
 10140  002D5E  0100               	movlb	0	; () banked
 10141  002D60  6F6D               	movwf	(crc_append@message+1)& (0+255),b
 10142  002D62  0EFE               	movlw	254
 10143  002D64  0100               	movlb	0	; () banked
 10144  002D66  259B               	addwf	___set_short_pr_calib@t16& (0+255),w,b
 10145  002D68  0100               	movlb	0	; () banked
 10146  002D6A  6F6E               	movwf	crc_append@n& (0+255),b
 10147  002D6C  0EFF               	movlw	255
 10148  002D6E  0100               	movlb	0	; () banked
 10149  002D70  219C               	addwfc	(___set_short_pr_calib@t16+1)& (0+255),w,b
 10150  002D72  0100               	movlb	0	; () banked
 10151  002D74  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 10152  002D76  EC89  F047         	call	_crc_append	;wreg free
 10153                           
 10154                           ;key_menu.c: 727: at24c02_write_n_byte(pdiff_prEepromObj,0,(uint8_t*)&prCalibTabDef,t16)
      +                          ;
 10155  002D7A  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 10156  002D7E  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 10157  002D82  0E00               	movlw	0
 10158  002D84  0100               	movlb	0	; () banked
 10159  002D86  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 10160  002D88  0E00               	movlw	low _prCalibTabDef
 10161  002D8A  0100               	movlb	0	; () banked
 10162  002D8C  6F69               	movwf	at24c02_write_n_byte@buf& (0+255),b
 10163  002D8E  0E04               	movlw	high _prCalibTabDef
 10164  002D90  0100               	movlb	0	; () banked
 10165  002D92  6F6A               	movwf	(at24c02_write_n_byte@buf+1)& (0+255),b
 10166  002D94  C09B  F06B         	movff	___set_short_pr_calib@t16,at24c02_write_n_byte@len
 10167  002D98  C09C  F06C         	movff	___set_short_pr_calib@t16+1,at24c02_write_n_byte@len+1
 10168  002D9C  ECEF  F02D         	call	_at24c02_write_n_byte	;wreg free
 10169  002DA0                     l16045:
 10170                           
 10171                           ;key_menu.c: 728: }
 10172                           ;key_menu.c: 729: if(gohome){__exit_menu_to_home_unsave(); return;}
 10173  002DA0  0100               	movlb	0	; () banked
 10174  002DA2  5194               	movf	___set_short_pr_calib@gohome& (0+255),w,b
 10175  002DA4  0100               	movlb	0	; () banked
 10176  002DA6  B4D8               	btfsc	status,2,c
 10177  002DA8  D003               	goto	l16051
 10178                           
 10179                           ; BSR set to: 0
 10180  002DAA  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 10181  002DAE  0012               	return	
 10182  002DB0                     l16051:
 10183                           
 10184                           ;key_menu.c: 730: calibCol++;
 10185  002DB0  2A30               	incf	_calibCol,f,c	;volatile
 10186                           
 10187                           ;key_menu.c: 731: if(calibCol>prCalibTabDef.prCalibRow[calibRow].pCount){
 10188  002DB2  5031               	movf	_calibRow,w,c	;volatile
 10189  002DB4  0D34               	mullw	52
 10190  002DB6  0E04               	movlw	low (_prCalibTabDef+4)
 10191  002DB8  24F3               	addwf	prodl,w,c
 10192  002DBA  6ED9               	movwf	fsr2l,c
 10193  002DBC  0E04               	movlw	high (_prCalibTabDef+4)
 10194  002DBE  20F4               	addwfc	prodh,w,c
 10195  002DC0  6EDA               	movwf	fsr2h,c
 10196  002DC2  5030               	movf	_calibCol,w,c	;volatile
 10197  002DC4  5CDE               	subwf	postinc2,w,c
 10198  002DC6  B0D8               	btfsc	status,0,c
 10199  002DC8  D002               	goto	l16057
 10200                           
 10201                           ;key_menu.c: 732: calibCol=0;
 10202  002DCA  0E00               	movlw	0
 10203  002DCC  6E30               	movwf	_calibCol,c	;volatile
 10204  002DCE                     l16057:
 10205                           
 10206                           ;key_menu.c: 735: }
 10207                           ;key_menu.c: 736: __enter_menu_calib_press(0,calibCol);
 10208  002DCE  C030  F020         	movff	_calibCol,___enter_menu_calib_press@col	;volatile
 10209  002DD2  0E00               	movlw	0
 10210  002DD4  EC8B  F030         	call	___enter_menu_calib_press
 10211  002DD8  0012               	return		;funcret
 10212  002DDA                     __end_of___set_short_pr_calib:
 10213                           	opt stack 0
 10214                           tblptru	equ	0xFF8
 10215                           tblptrh	equ	0xFF7
 10216                           tblptrl	equ	0xFF6
 10217                           tablat	equ	0xFF5
 10218                           prodh	equ	0xFF4
 10219                           prodl	equ	0xFF3
 10220                           intcon	equ	0xFF2
 10221                           postinc0	equ	0xFEE
 10222                           wreg	equ	0xFE8
 10223                           indf1	equ	0xFE7
 10224                           postinc1	equ	0xFE6
 10225                           postdec1	equ	0xFE5
 10226                           plusw1	equ	0xFE3
 10227                           fsr1h	equ	0xFE2
 10228                           fsr1l	equ	0xFE1
 10229                           indf2	equ	0xFDF
 10230                           postinc2	equ	0xFDE
 10231                           postdec2	equ	0xFDD
 10232                           plusw2	equ	0xFDB
 10233                           fsr2h	equ	0xFDA
 10234                           fsr2l	equ	0xFD9
 10235                           status	equ	0xFD8
 10236                           
 10237 ;; *************** function ___enter_menu_calib_press *****************
 10238 ;; Defined at:
 10239 ;;		line 217 in file "src/api/key_menu.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  row             1    wreg     unsigned char 
 10242 ;;  col             1   31[COMRAM] unsigned char 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  row             1   35[BANK0 ] unsigned char 
 10245 ;;  t32             4   38[BANK0 ] long 
 10246 ;;  stp             2   36[BANK0 ] PTR struct .
 10247 ;;		 -> prCalibTabDef(162), 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10257 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;Total ram usage:       14 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    6
 10264 ;; This function calls:
 10265 ;;		___int32_2_mflot32
 10266 ;; This function is called by:
 10267 ;;		_key_process_set_down_long
 10268 ;;		___set_short_pr_calib
 10269 ;; This function uses a non-reentrant model
 10270 ;;
 10271                           
 10272                           	psect	text51
 10273  006116                     __ptext51:
 10274                           	opt stack 0
 10275  006116                     ___enter_menu_calib_press:
 10276                           	opt stack 21
 10277                           
 10278                           ;incstack = 0
 10279                           ;___enter_menu_calib_press@row stored from wreg
 10280  006116  0100               	movlb	0	; () banked
 10281  006118  6F83               	movwf	___enter_menu_calib_press@row& (0+255),b
 10282                           
 10283                           ;key_menu.c: 220: int32_t t32;
 10284                           ;key_menu.c: 221: st_prCalibTabDef* stp;
 10285                           ;key_menu.c: 223: menu=0x60;
 10286  00611A  0E60               	movlw	96
 10287  00611C  6E33               	movwf	_menu,c	;volatile
 10288                           
 10289                           ;key_menu.c: 224: subMenu=0;
 10290  00611E  0E00               	movlw	0
 10291  006120  6E32               	movwf	_subMenu,c	;volatile
 10292                           
 10293                           ;key_menu.c: 225: calibRow=row;
 10294  006122  C083  F031         	movff	___enter_menu_calib_press@row,_calibRow	;volatile
 10295                           
 10296                           ;key_menu.c: 226: calibCol=col;
 10297  006126  C020  F030         	movff	___enter_menu_calib_press@col,_calibCol	;volatile
 10298                           
 10299                           ;key_menu.c: 227: stp=(st_prCalibTabDef*)(&prCalibTabDef);
 10300  00612A  0E00               	movlw	low _prCalibTabDef
 10301  00612C  0100               	movlb	0	; () banked
 10302  00612E  6F84               	movwf	___enter_menu_calib_press@stp& (0+255),b
 10303  006130  0E04               	movlw	high _prCalibTabDef
 10304  006132  0100               	movlb	0	; () banked
 10305  006134  6F85               	movwf	(___enter_menu_calib_press@stp+1)& (0+255),b
 10306                           
 10307                           ; BSR set to: 0
 10308                           ;key_menu.c: 228: if(col==0){
 10309  006136  5020               	movf	___enter_menu_calib_press@col,w,c
 10310  006138  A4D8               	btfss	status,2,c
 10311  00613A  D012               	goto	l15183
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;key_menu.c: 229: *((uint8_t*)(&adjValue))=stp->prCalibRow[row].pCount;
 10315  00613C  0100               	movlb	0	; () banked
 10316  00613E  5183               	movf	___enter_menu_calib_press@row& (0+255),w,b
 10317  006140  0D34               	mullw	52
 10318  006142  0E04               	movlw	4
 10319  006144  26F3               	addwf	prodl,f,c
 10320  006146  0E00               	movlw	0
 10321  006148  22F4               	addwfc	prodh,f,c
 10322  00614A  50F3               	movf	prodl,w,c
 10323  00614C  0100               	movlb	0	; () banked
 10324  00614E  2584               	addwf	___enter_menu_calib_press@stp& (0+255),w,b
 10325  006150  6ED9               	movwf	fsr2l,c
 10326  006152  50F4               	movf	prodh,w,c
 10327  006154  0100               	movlb	0	; () banked
 10328  006156  2185               	addwfc	(___enter_menu_calib_press@stp+1)& (0+255),w,b
 10329  006158  6EDA               	movwf	fsr2h,c
 10330  00615A  50DF               	movf	indf2,w,c
 10331  00615C  6E39               	movwf	_adjValue,c
 10332                           
 10333                           ;key_menu.c: 230: }else{
 10334  00615E  D05A               	goto	l15189
 10335  006160                     l15183:
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;key_menu.c: 231: t32=stp->prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue;
 10339  006160  0EFC               	movlw	252
 10340  006162  0100               	movlb	0	; () banked
 10341  006164  6F7D               	movwf	??___enter_menu_calib_press& (0+255),b
 10342  006166  0EFF               	movlw	255
 10343  006168  0100               	movlb	0	; () banked
 10344  00616A  6F7E               	movwf	(??___enter_menu_calib_press+1)& (0+255),b
 10345  00616C  5030               	movf	_calibCol,w,c	;volatile
 10346  00616E  0100               	movlb	0	; () banked
 10347  006170  6F7F               	movwf	(??___enter_menu_calib_press+2)& (0+255),b
 10348  006172  6B80               	clrf	(??___enter_menu_calib_press+3)& (0+255),b
 10349  006174  0100               	movlb	0	; () banked
 10350  006176  90D8               	bcf	status,0,c
 10351  006178  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10352  00617A  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10353  00617C  0100               	movlb	0	; () banked
 10354  00617E  90D8               	bcf	status,0,c
 10355  006180  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10356  006182  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10357  006184  0100               	movlb	0	; () banked
 10358  006186  90D8               	bcf	status,0,c
 10359  006188  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10360  00618A  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10361  00618C  0100               	movlb	0	; () banked
 10362  00618E  517D               	movf	??___enter_menu_calib_press& (0+255),w,b
 10363  006190  0100               	movlb	0	; () banked
 10364  006192  277F               	addwf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10365  006194  0100               	movlb	0	; () banked
 10366  006196  517E               	movf	(??___enter_menu_calib_press+1)& (0+255),w,b
 10367  006198  0100               	movlb	0	; () banked
 10368  00619A  2380               	addwfc	(??___enter_menu_calib_press+3)& (0+255),f,b
 10369  00619C  5031               	movf	_calibRow,w,c	;volatile
 10370  00619E  0D34               	mullw	52
 10371  0061A0  0E04               	movlw	4
 10372  0061A2  26F3               	addwf	prodl,f,c
 10373  0061A4  0E00               	movlw	0
 10374  0061A6  22F4               	addwfc	prodh,f,c
 10375  0061A8  C084  F081         	movff	___enter_menu_calib_press@stp,??___enter_menu_calib_press+4
 10376  0061AC  C085  F082         	movff	___enter_menu_calib_press@stp+1,??___enter_menu_calib_press+5
 10377  0061B0  50F3               	movf	prodl,w,c
 10378  0061B2  0100               	movlb	0	; () banked
 10379  0061B4  2781               	addwf	(??___enter_menu_calib_press+4)& (0+255),f,b
 10380  0061B6  50F4               	movf	prodh,w,c
 10381  0061B8  0100               	movlb	0	; () banked
 10382  0061BA  2382               	addwfc	(??___enter_menu_calib_press+5)& (0+255),f,b
 10383  0061BC  0100               	movlb	0	; () banked
 10384  0061BE  517F               	movf	(??___enter_menu_calib_press+2)& (0+255),w,b
 10385  0061C0  0100               	movlb	0	; () banked
 10386  0061C2  2581               	addwf	(??___enter_menu_calib_press+4)& (0+255),w,b
 10387  0061C4  6ED9               	movwf	fsr2l,c
 10388  0061C6  0100               	movlb	0	; () banked
 10389  0061C8  5180               	movf	(??___enter_menu_calib_press+3)& (0+255),w,b
 10390  0061CA  0100               	movlb	0	; () banked
 10391  0061CC  2182               	addwfc	(??___enter_menu_calib_press+5)& (0+255),w,b
 10392  0061CE  6EDA               	movwf	fsr2h,c
 10393  0061D0  CFDE F086          	movff	postinc2,___enter_menu_calib_press@t32
 10394  0061D4  CFDE F087          	movff	postinc2,___enter_menu_calib_press@t32+1
 10395  0061D8  CFDE F088          	movff	postinc2,___enter_menu_calib_press@t32+2
 10396  0061DC  CFDE F089          	movff	postinc2,___enter_menu_calib_press@t32+3
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;key_menu.c: 232: t32=__int32_2_mflot32(t32);
 10400  0061E0  C086  F06D         	movff	___enter_menu_calib_press@t32,___int32_2_mflot32@x
 10401  0061E4  C087  F06E         	movff	___enter_menu_calib_press@t32+1,___int32_2_mflot32@x+1
 10402  0061E8  C088  F06F         	movff	___enter_menu_calib_press@t32+2,___int32_2_mflot32@x+2
 10403  0061EC  C089  F070         	movff	___enter_menu_calib_press@t32+3,___int32_2_mflot32@x+3
 10404  0061F0  EC08  F030         	call	___int32_2_mflot32	;wreg free
 10405  0061F4  C06D  F086         	movff	?___int32_2_mflot32,___enter_menu_calib_press@t32
 10406  0061F8  C06E  F087         	movff	?___int32_2_mflot32+1,___enter_menu_calib_press@t32+1
 10407  0061FC  C06F  F088         	movff	?___int32_2_mflot32+2,___enter_menu_calib_press@t32+2
 10408  006200  C070  F089         	movff	?___int32_2_mflot32+3,___enter_menu_calib_press@t32+3
 10409                           
 10410                           ;key_menu.c: 233: m_floatAdj.t32=t32;
 10411  006204  C086  F035         	movff	___enter_menu_calib_press@t32,_m_floatAdj
 10412  006208  C087  F036         	movff	___enter_menu_calib_press@t32+1,_m_floatAdj+1
 10413  00620C  C088  F037         	movff	___enter_menu_calib_press@t32+2,_m_floatAdj+2
 10414  006210  C089  F038         	movff	___enter_menu_calib_press@t32+3,_m_floatAdj+3
 10415  006214                     l15189:
 10416                           
 10417                           ;key_menu.c: 234: }
 10418                           ;key_menu.c: 235: adjLocation=0;
 10419  006214  0E00               	movlw	0
 10420  006216  6E3F               	movwf	_adjLocation,c	;volatile
 10421  006218  0012               	return		;funcret
 10422  00621A                     __end_of___enter_menu_calib_press:
 10423                           	opt stack 0
 10424                           tblptru	equ	0xFF8
 10425                           tblptrh	equ	0xFF7
 10426                           tblptrl	equ	0xFF6
 10427                           tablat	equ	0xFF5
 10428                           prodh	equ	0xFF4
 10429                           prodl	equ	0xFF3
 10430                           intcon	equ	0xFF2
 10431                           postinc0	equ	0xFEE
 10432                           wreg	equ	0xFE8
 10433                           indf1	equ	0xFE7
 10434                           postinc1	equ	0xFE6
 10435                           postdec1	equ	0xFE5
 10436                           plusw1	equ	0xFE3
 10437                           fsr1h	equ	0xFE2
 10438                           fsr1l	equ	0xFE1
 10439                           indf2	equ	0xFDF
 10440                           postinc2	equ	0xFDE
 10441                           postdec2	equ	0xFDD
 10442                           plusw2	equ	0xFDB
 10443                           fsr2h	equ	0xFDA
 10444                           fsr2l	equ	0xFD9
 10445                           status	equ	0xFD8
 10446                           
 10447 ;; *************** function ___set_short_pose_size *****************
 10448 ;; Defined at:
 10449 ;;		line 626 in file "src/api/key_menu.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  gohome          1    wreg     unsigned char 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;  gohome          1    0[BANK3 ] unsigned char 
 10454 ;;  t32             4    3[BANK3 ] long 
 10455 ;;  stp             2    7[BANK3 ] PTR struct .
 10456 ;;		 -> stSysData(240), 
 10457 ;;  p               2    1[BANK3 ] PTR unsigned char 
 10458 ;;		 -> adjValue(4), 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  1    wreg      void 
 10461 ;; Registers used:
 10462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Locals:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;      Totals:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;Total ram usage:        9 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; Hardware stack levels required when called:    8
 10475 ;; This function calls:
 10476 ;;		___enter_menu_set_d
 10477 ;;		___enter_menu_set_h
 10478 ;;		___enter_menu_set_pose_size
 10479 ;;		___exit_menu_to_home_unsave
 10480 ;;		___mflot32_2_int32
 10481 ;;		___sys_data_save_write_flash
 10482 ;; This function is called by:
 10483 ;;		_key_process_set_long
 10484 ;;		_key_process_set
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text52
 10489  005E00                     __ptext52:
 10490                           	opt stack 0
 10491  005E00                     ___set_short_pose_size:
 10492                           	opt stack 20
 10493                           
 10494                           ;incstack = 0
 10495                           ;___set_short_pose_size@gohome stored from wreg
 10496  005E00  0103               	movlb	3	; () banked
 10497  005E02  6FCA               	movwf	___set_short_pose_size@gohome& (0+255),b
 10498                           
 10499                           ;key_menu.c: 628: uint8_t* p;
 10500                           ;key_menu.c: 629: int32_t t32;
 10501                           ;key_menu.c: 632: st_sysDataDef* stp=&stSysData;
 10502  005E04  0E00               	movlw	low _stSysData
 10503  005E06  0103               	movlb	3	; () banked
 10504  005E08  6FD1               	movwf	___set_short_pose_size@stp& (0+255),b
 10505  005E0A  0E02               	movlw	high _stSysData
 10506  005E0C  0103               	movlb	3	; () banked
 10507  005E0E  6FD2               	movwf	(___set_short_pose_size@stp+1)& (0+255),b
 10508                           
 10509                           ;key_menu.c: 633: switch(subMenu){
 10510  005E10  D04C               	goto	l15935
 10511  005E12                     l15921:
 10512                           
 10513                           ; BSR set to: 3
 10514                           ;key_menu.c: 635: p=(uint8_t*)(&adjValue);
 10515  005E12  0E39               	movlw	low _adjValue
 10516  005E14  0103               	movlb	3	; () banked
 10517  005E16  6FCB               	movwf	___set_short_pose_size@p& (0+255),b
 10518  005E18  0E00               	movlw	high _adjValue
 10519  005E1A  0103               	movlb	3	; () banked
 10520  005E1C  6FCC               	movwf	(___set_short_pose_size@p+1)& (0+255),b
 10521                           
 10522                           ; BSR set to: 3
 10523                           ;key_menu.c: 636: stp->pos=(*p);
 10524  005E1E  C3CB  FFD9         	movff	___set_short_pose_size@p,fsr2l
 10525  005E22  C3CC  FFDA         	movff	___set_short_pose_size@p+1,fsr2h
 10526  005E26  0103               	movlb	3	; () banked
 10527  005E28  EE10 F004          	lfsr	1,4
 10528  005E2C  51D1               	movf	___set_short_pose_size@stp& (0+255),w,b
 10529  005E2E  26E1               	addwf	fsr1l,f,c
 10530  005E30  51D2               	movf	(___set_short_pose_size@stp+1)& (0+255),w,b
 10531  005E32  22E2               	addwfc	fsr1h,f,c
 10532  005E34  CFDF FFE7          	movff	indf2,indf1
 10533                           
 10534                           ;key_menu.c: 637: break;
 10535  005E38  D042               	goto	l15937
 10536  005E3A                     l15925:
 10537                           
 10538                           ; BSR set to: 3
 10539                           ;key_menu.c: 639: t32=__mflot32_2_int32(m_floatAdj.t32);
 10540  005E3A  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 10541  005E3E  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 10542  005E42  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 10543  005E46  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 10544  005E4A  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
 10545  005E4E  C06C  F3CD         	movff	?___mflot32_2_int32,___set_short_pose_size@t32
 10546  005E52  C06D  F3CE         	movff	?___mflot32_2_int32+1,___set_short_pose_size@t32+1
 10547  005E56  C06E  F3CF         	movff	?___mflot32_2_int32+2,___set_short_pose_size@t32+2
 10548  005E5A  C06F  F3D0         	movff	?___mflot32_2_int32+3,___set_short_pose_size@t32+3
 10549                           
 10550                           ;key_menu.c: 640: stp->h=t32;
 10551  005E5E  0103               	movlb	3	; () banked
 10552  005E60  EE20 F008          	lfsr	2,8
 10553  005E64  D015               	goto	L3
 10554  005E66                     l15929:
 10555                           
 10556                           ; BSR set to: 3
 10557                           ;key_menu.c: 643: t32=__mflot32_2_int32(m_floatAdj.t32);
 10558  005E66  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 10559  005E6A  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 10560  005E6E  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 10561  005E72  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 10562  005E76  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
 10563  005E7A  C06C  F3CD         	movff	?___mflot32_2_int32,___set_short_pose_size@t32
 10564  005E7E  C06D  F3CE         	movff	?___mflot32_2_int32+1,___set_short_pose_size@t32+1
 10565  005E82  C06E  F3CF         	movff	?___mflot32_2_int32+2,___set_short_pose_size@t32+2
 10566  005E86  C06F  F3D0         	movff	?___mflot32_2_int32+3,___set_short_pose_size@t32+3
 10567                           
 10568                           ;key_menu.c: 644: stp->d=t32;
 10569  005E8A  0103               	movlb	3	; () banked
 10570  005E8C  EE20 F00C          	lfsr	2,12
 10571  005E90                     L3:
 10572  005E90  51D1               	movf	___set_short_pose_size@stp& (0+255),w,b
 10573  005E92  26D9               	addwf	fsr2l,f,c
 10574  005E94  51D2               	movf	(___set_short_pose_size@stp+1)& (0+255),w,b
 10575  005E96  22DA               	addwfc	fsr2h,f,c
 10576  005E98  C3CD  FFDE         	movff	___set_short_pose_size@t32,postinc2
 10577  005E9C  C3CE  FFDE         	movff	___set_short_pose_size@t32+1,postinc2
 10578  005EA0  C3CF  FFDE         	movff	___set_short_pose_size@t32+2,postinc2
 10579  005EA4  C3D0  FFDE         	movff	___set_short_pose_size@t32+3,postinc2
 10580                           
 10581                           ; BSR set to: 3
 10582                           ;key_menu.c: 646: }
 10583                           
 10584                           ;key_menu.c: 645: break;
 10585  005EA8  D00A               	goto	l15937
 10586  005EAA                     l15935:
 10587                           
 10588                           ; BSR set to: 3
 10589  005EAA  5032               	movf	_subMenu,w,c	;volatile
 10590                           
 10591                           ; Switch size 1, requested type "space"
 10592                           ; Number of cases is 3, Range of values is 0 to 2
 10593                           ; switch strategies available:
 10594                           ; Name         Instructions Cycles
 10595                           ; simple_byte           10     6 (average)
 10596                           ;	Chosen strategy is simple_byte
 10597  005EAC  0A00               	xorlw	0	; case 0
 10598  005EAE  B4D8               	btfsc	status,2,c
 10599  005EB0  D7B0               	goto	l15921
 10600  005EB2  0A01               	xorlw	1	; case 1
 10601  005EB4  B4D8               	btfsc	status,2,c
 10602  005EB6  D7C1               	goto	l15925
 10603  005EB8  0A03               	xorlw	3	; case 2
 10604  005EBA  B4D8               	btfsc	status,2,c
 10605  005EBC  D7D4               	goto	l15929
 10606  005EBE                     l15937:
 10607                           
 10608                           ; BSR set to: 3
 10609                           ;key_menu.c: 647: if(gohome){__exit_menu_to_home_unsave(); return;}
 10610  005EBE  0103               	movlb	3	; () banked
 10611  005EC0  51CA               	movf	___set_short_pose_size@gohome& (0+255),w,b
 10612  005EC2  0103               	movlb	3	; () banked
 10613  005EC4  B4D8               	btfsc	status,2,c
 10614  005EC6  D003               	goto	l15943
 10615                           
 10616                           ; BSR set to: 3
 10617  005EC8  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 10618  005ECC  0012               	return	
 10619  005ECE                     l15943:
 10620                           
 10621                           ;key_menu.c: 648: __sys_data_save_write_flash();
 10622  005ECE  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
 10623                           
 10624                           ;key_menu.c: 649: subMenu++;
 10625  005ED2  2A32               	incf	_subMenu,f,c	;volatile
 10626                           
 10627                           ;key_menu.c: 650: if(subMenu>0x02)subMenu=0x00;
 10628  005ED4  0E02               	movlw	2
 10629  005ED6  6432               	cpfsgt	_subMenu,c	;volatile
 10630  005ED8  D00C               	goto	l15959
 10631  005EDA  0E00               	movlw	0
 10632  005EDC  6E32               	movwf	_subMenu,c	;volatile
 10633                           
 10634                           ;key_menu.c: 651: switch(subMenu){
 10635  005EDE  D009               	goto	l15959
 10636  005EE0                     l15951:
 10637  005EE0  EC0C  F04D         	call	___enter_menu_set_pose_size	;wreg free
 10638  005EE4  0012               	return	
 10639  005EE6                     l15953:
 10640  005EE6  EC23  F046         	call	___enter_menu_set_h	;wreg free
 10641  005EEA  0012               	return	
 10642  005EEC                     l15955:
 10643  005EEC  EC57  F046         	call	___enter_menu_set_d	;wreg free
 10644                           
 10645                           ;key_menu.c: 656: }
 10646                           
 10647                           ;key_menu.c: 655: default:break;
 10648  005EF0  0012               	return	
 10649  005EF2                     l15959:
 10650  005EF2  5032               	movf	_subMenu,w,c	;volatile
 10651                           
 10652                           ; Switch size 1, requested type "space"
 10653                           ; Number of cases is 3, Range of values is 0 to 2
 10654                           ; switch strategies available:
 10655                           ; Name         Instructions Cycles
 10656                           ; simple_byte           10     6 (average)
 10657                           ;	Chosen strategy is simple_byte
 10658  005EF4  0A00               	xorlw	0	; case 0
 10659  005EF6  B4D8               	btfsc	status,2,c
 10660  005EF8  D7F3               	goto	l15951
 10661  005EFA  0A01               	xorlw	1	; case 1
 10662  005EFC  B4D8               	btfsc	status,2,c
 10663  005EFE  D7F3               	goto	l15953
 10664  005F00  0A03               	xorlw	3	; case 2
 10665  005F02  A4D8               	btfss	status,2,c
 10666  005F04  0012               	return	
 10667  005F06  D7F2               	goto	l15955
 10668  005F08                     __end_of___set_short_pose_size:
 10669                           	opt stack 0
 10670                           tblptru	equ	0xFF8
 10671                           tblptrh	equ	0xFF7
 10672                           tblptrl	equ	0xFF6
 10673                           tablat	equ	0xFF5
 10674                           prodh	equ	0xFF4
 10675                           prodl	equ	0xFF3
 10676                           intcon	equ	0xFF2
 10677                           postinc0	equ	0xFEE
 10678                           wreg	equ	0xFE8
 10679                           indf1	equ	0xFE7
 10680                           postinc1	equ	0xFE6
 10681                           postdec1	equ	0xFE5
 10682                           plusw1	equ	0xFE3
 10683                           fsr1h	equ	0xFE2
 10684                           fsr1l	equ	0xFE1
 10685                           indf2	equ	0xFDF
 10686                           postinc2	equ	0xFDE
 10687                           postdec2	equ	0xFDD
 10688                           plusw2	equ	0xFDB
 10689                           fsr2h	equ	0xFDA
 10690                           fsr2l	equ	0xFD9
 10691                           status	equ	0xFD8
 10692                           
 10693 ;; *************** function ___enter_menu_set_pose_size *****************
 10694 ;; Defined at:
 10695 ;;		line 125 in file "src/api/key_menu.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;		None
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  fps             2    0[BANK0 ] PTR struct .
 10700 ;;		 -> stSysData(240), 
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  1    wreg      void 
 10703 ;; Registers used:
 10704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;Total ram usage:        2 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; Hardware stack levels required when called:    4
 10717 ;; This function calls:
 10718 ;;		Nothing
 10719 ;; This function is called by:
 10720 ;;		_key_process_set_down_long
 10721 ;;		___set_short_pose_size
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           	psect	text53
 10726  009A18                     __ptext53:
 10727                           	opt stack 0
 10728  009A18                     ___enter_menu_set_pose_size:
 10729                           	opt stack 23
 10730                           
 10731                           ;key_menu.c: 127: menu=0x30;
 10732                           
 10733                           ;incstack = 0
 10734  009A18  0E30               	movlw	48
 10735  009A1A  6E33               	movwf	_menu,c	;volatile
 10736                           
 10737                           ;key_menu.c: 128: subMenu=0x00;
 10738  009A1C  0E00               	movlw	0
 10739  009A1E  6E32               	movwf	_subMenu,c	;volatile
 10740                           
 10741                           ;key_menu.c: 130: st_sysDataDef* fps= &stSysData;
 10742  009A20  0E00               	movlw	low _stSysData
 10743  009A22  0100               	movlb	0	; () banked
 10744  009A24  6F60               	movwf	___enter_menu_set_pose_size@fps& (0+255),b
 10745  009A26  0E02               	movlw	high _stSysData
 10746  009A28  0100               	movlb	0	; () banked
 10747  009A2A  6F61               	movwf	(___enter_menu_set_pose_size@fps+1)& (0+255),b
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;key_menu.c: 131: adjValue=0x00ul;
 10751  009A2C  0E00               	movlw	0
 10752  009A2E  6E39               	movwf	_adjValue,c	;volatile
 10753  009A30  0E00               	movlw	0
 10754  009A32  6E3A               	movwf	_adjValue+1,c	;volatile
 10755  009A34  0E00               	movlw	0
 10756  009A36  6E3B               	movwf	_adjValue+2,c	;volatile
 10757  009A38  0E00               	movlw	0
 10758  009A3A  6E3C               	movwf	_adjValue+3,c	;volatile
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;key_menu.c: 132: *((uint8_t*)(&adjValue))=(uint8_t)(fps->pos);
 10762  009A3C  0100               	movlb	0	; () banked
 10763  009A3E  EE20 F004          	lfsr	2,4
 10764  009A42  5160               	movf	___enter_menu_set_pose_size@fps& (0+255),w,b
 10765  009A44  26D9               	addwf	fsr2l,f,c
 10766  009A46  5161               	movf	(___enter_menu_set_pose_size@fps+1)& (0+255),w,b
 10767  009A48  22DA               	addwfc	fsr2h,f,c
 10768  009A4A  50DF               	movf	indf2,w,c
 10769  009A4C  6E39               	movwf	_adjValue,c
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;key_menu.c: 133: adjLocation=0;
 10773  009A4E  0E00               	movlw	0
 10774  009A50  6E3F               	movwf	_adjLocation,c	;volatile
 10775                           
 10776                           ; BSR set to: 0
 10777  009A52  0012               	return		;funcret
 10778  009A54                     __end_of___enter_menu_set_pose_size:
 10779                           	opt stack 0
 10780                           tblptru	equ	0xFF8
 10781                           tblptrh	equ	0xFF7
 10782                           tblptrl	equ	0xFF6
 10783                           tablat	equ	0xFF5
 10784                           prodh	equ	0xFF4
 10785                           prodl	equ	0xFF3
 10786                           intcon	equ	0xFF2
 10787                           postinc0	equ	0xFEE
 10788                           wreg	equ	0xFE8
 10789                           indf1	equ	0xFE7
 10790                           postinc1	equ	0xFE6
 10791                           postdec1	equ	0xFE5
 10792                           plusw1	equ	0xFE3
 10793                           fsr1h	equ	0xFE2
 10794                           fsr1l	equ	0xFE1
 10795                           indf2	equ	0xFDF
 10796                           postinc2	equ	0xFDE
 10797                           postdec2	equ	0xFDD
 10798                           plusw2	equ	0xFDB
 10799                           fsr2h	equ	0xFDA
 10800                           fsr2l	equ	0xFD9
 10801                           status	equ	0xFD8
 10802                           
 10803 ;; *************** function ___enter_menu_set_h *****************
 10804 ;; Defined at:
 10805 ;;		line 147 in file "src/api/key_menu.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;		None
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  t32             4   31[BANK0 ] long 
 10810 ;;  fps             2   29[BANK0 ] PTR struct .
 10811 ;;		 -> stSysData(240), 
 10812 ;; Return value:  Size  Location     Type
 10813 ;;                  1    wreg      void 
 10814 ;; Registers used:
 10815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10816 ;; Tracked objects:
 10817 ;;		On entry : 0/0
 10818 ;;		On exit  : 0/0
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10824 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10825 ;;Total ram usage:        6 bytes
 10826 ;; Hardware stack levels used:    1
 10827 ;; Hardware stack levels required when called:    6
 10828 ;; This function calls:
 10829 ;;		___int32_2_mflot32
 10830 ;; This function is called by:
 10831 ;;		___set_short_pose_size
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           	psect	text54
 10836  008C46                     __ptext54:
 10837                           	opt stack 0
 10838  008C46                     ___enter_menu_set_h:
 10839                           	opt stack 21
 10840                           
 10841                           ;key_menu.c: 148: int32_t t32;
 10842                           ;key_menu.c: 149: subMenu=0x01;
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;incstack = 0
 10846  008C46  0E01               	movlw	1
 10847  008C48  6E32               	movwf	_subMenu,c	;volatile
 10848                           
 10849                           ;key_menu.c: 151: st_sysDataDef* fps= &stSysData;
 10850  008C4A  0E00               	movlw	low _stSysData
 10851  008C4C  0100               	movlb	0	; () banked
 10852  008C4E  6F7D               	movwf	___enter_menu_set_h@fps& (0+255),b
 10853  008C50  0E02               	movlw	high _stSysData
 10854  008C52  0100               	movlb	0	; () banked
 10855  008C54  6F7E               	movwf	(___enter_menu_set_h@fps+1)& (0+255),b
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;key_menu.c: 152: t32=(fps->h);
 10859  008C56  0100               	movlb	0	; () banked
 10860  008C58  EE20 F008          	lfsr	2,8
 10861  008C5C  517D               	movf	___enter_menu_set_h@fps& (0+255),w,b
 10862  008C5E  26D9               	addwf	fsr2l,f,c
 10863  008C60  517E               	movf	(___enter_menu_set_h@fps+1)& (0+255),w,b
 10864  008C62  22DA               	addwfc	fsr2h,f,c
 10865  008C64  CFDE F07F          	movff	postinc2,___enter_menu_set_h@t32
 10866  008C68  CFDE F080          	movff	postinc2,___enter_menu_set_h@t32+1
 10867  008C6C  CFDE F081          	movff	postinc2,___enter_menu_set_h@t32+2
 10868  008C70  CFDE F082          	movff	postinc2,___enter_menu_set_h@t32+3
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;key_menu.c: 153: t32=__int32_2_mflot32(t32);
 10872  008C74  C07F  F06D         	movff	___enter_menu_set_h@t32,___int32_2_mflot32@x
 10873  008C78  C080  F06E         	movff	___enter_menu_set_h@t32+1,___int32_2_mflot32@x+1
 10874  008C7C  C081  F06F         	movff	___enter_menu_set_h@t32+2,___int32_2_mflot32@x+2
 10875  008C80  C082  F070         	movff	___enter_menu_set_h@t32+3,___int32_2_mflot32@x+3
 10876  008C84  EC08  F030         	call	___int32_2_mflot32	;wreg free
 10877  008C88  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_h@t32
 10878  008C8C  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_h@t32+1
 10879  008C90  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_h@t32+2
 10880  008C94  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_h@t32+3
 10881                           
 10882                           ;key_menu.c: 154: m_floatAdj.t32=t32;
 10883  008C98  C07F  F035         	movff	___enter_menu_set_h@t32,_m_floatAdj
 10884  008C9C  C080  F036         	movff	___enter_menu_set_h@t32+1,_m_floatAdj+1
 10885  008CA0  C081  F037         	movff	___enter_menu_set_h@t32+2,_m_floatAdj+2
 10886  008CA4  C082  F038         	movff	___enter_menu_set_h@t32+3,_m_floatAdj+3
 10887                           
 10888                           ;key_menu.c: 155: adjLocation=0;
 10889  008CA8  0E00               	movlw	0
 10890  008CAA  6E3F               	movwf	_adjLocation,c	;volatile
 10891  008CAC  0012               	return		;funcret
 10892  008CAE                     __end_of___enter_menu_set_h:
 10893                           	opt stack 0
 10894                           tblptru	equ	0xFF8
 10895                           tblptrh	equ	0xFF7
 10896                           tblptrl	equ	0xFF6
 10897                           tablat	equ	0xFF5
 10898                           prodh	equ	0xFF4
 10899                           prodl	equ	0xFF3
 10900                           intcon	equ	0xFF2
 10901                           postinc0	equ	0xFEE
 10902                           wreg	equ	0xFE8
 10903                           indf1	equ	0xFE7
 10904                           postinc1	equ	0xFE6
 10905                           postdec1	equ	0xFE5
 10906                           plusw1	equ	0xFE3
 10907                           fsr1h	equ	0xFE2
 10908                           fsr1l	equ	0xFE1
 10909                           indf2	equ	0xFDF
 10910                           postinc2	equ	0xFDE
 10911                           postdec2	equ	0xFDD
 10912                           plusw2	equ	0xFDB
 10913                           fsr2h	equ	0xFDA
 10914                           fsr2l	equ	0xFD9
 10915                           status	equ	0xFD8
 10916                           
 10917 ;; *************** function ___enter_menu_set_d *****************
 10918 ;; Defined at:
 10919 ;;		line 136 in file "src/api/key_menu.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;		None
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;  t32             4   31[BANK0 ] long 
 10924 ;;  fps             2   29[BANK0 ] PTR struct .
 10925 ;;		 -> stSysData(240), 
 10926 ;; Return value:  Size  Location     Type
 10927 ;;                  1    wreg      void 
 10928 ;; Registers used:
 10929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10930 ;; Tracked objects:
 10931 ;;		On entry : 0/0
 10932 ;;		On exit  : 0/0
 10933 ;;		Unchanged: 0/0
 10934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10938 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10939 ;;Total ram usage:        6 bytes
 10940 ;; Hardware stack levels used:    1
 10941 ;; Hardware stack levels required when called:    6
 10942 ;; This function calls:
 10943 ;;		___int32_2_mflot32
 10944 ;; This function is called by:
 10945 ;;		___set_short_pose_size
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           	psect	text55
 10950  008CAE                     __ptext55:
 10951                           	opt stack 0
 10952  008CAE                     ___enter_menu_set_d:
 10953                           	opt stack 21
 10954                           
 10955                           ;key_menu.c: 137: int32_t t32;
 10956                           ;key_menu.c: 138: subMenu=0x02;
 10957                           
 10958                           ;incstack = 0
 10959  008CAE  0E02               	movlw	2
 10960  008CB0  6E32               	movwf	_subMenu,c	;volatile
 10961                           
 10962                           ;key_menu.c: 140: st_sysDataDef* fps= &stSysData;
 10963  008CB2  0E00               	movlw	low _stSysData
 10964  008CB4  0100               	movlb	0	; () banked
 10965  008CB6  6F7D               	movwf	___enter_menu_set_d@fps& (0+255),b
 10966  008CB8  0E02               	movlw	high _stSysData
 10967  008CBA  0100               	movlb	0	; () banked
 10968  008CBC  6F7E               	movwf	(___enter_menu_set_d@fps+1)& (0+255),b
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;key_menu.c: 141: t32=fps->d;
 10972  008CBE  0100               	movlb	0	; () banked
 10973  008CC0  EE20 F00C          	lfsr	2,12
 10974  008CC4  517D               	movf	___enter_menu_set_d@fps& (0+255),w,b
 10975  008CC6  26D9               	addwf	fsr2l,f,c
 10976  008CC8  517E               	movf	(___enter_menu_set_d@fps+1)& (0+255),w,b
 10977  008CCA  22DA               	addwfc	fsr2h,f,c
 10978  008CCC  CFDE F07F          	movff	postinc2,___enter_menu_set_d@t32
 10979  008CD0  CFDE F080          	movff	postinc2,___enter_menu_set_d@t32+1
 10980  008CD4  CFDE F081          	movff	postinc2,___enter_menu_set_d@t32+2
 10981  008CD8  CFDE F082          	movff	postinc2,___enter_menu_set_d@t32+3
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;key_menu.c: 142: t32=__int32_2_mflot32(t32);
 10985  008CDC  C07F  F06D         	movff	___enter_menu_set_d@t32,___int32_2_mflot32@x
 10986  008CE0  C080  F06E         	movff	___enter_menu_set_d@t32+1,___int32_2_mflot32@x+1
 10987  008CE4  C081  F06F         	movff	___enter_menu_set_d@t32+2,___int32_2_mflot32@x+2
 10988  008CE8  C082  F070         	movff	___enter_menu_set_d@t32+3,___int32_2_mflot32@x+3
 10989  008CEC  EC08  F030         	call	___int32_2_mflot32	;wreg free
 10990  008CF0  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_d@t32
 10991  008CF4  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_d@t32+1
 10992  008CF8  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_d@t32+2
 10993  008CFC  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_d@t32+3
 10994                           
 10995                           ;key_menu.c: 143: m_floatAdj.t32=t32;
 10996  008D00  C07F  F035         	movff	___enter_menu_set_d@t32,_m_floatAdj
 10997  008D04  C080  F036         	movff	___enter_menu_set_d@t32+1,_m_floatAdj+1
 10998  008D08  C081  F037         	movff	___enter_menu_set_d@t32+2,_m_floatAdj+2
 10999  008D0C  C082  F038         	movff	___enter_menu_set_d@t32+3,_m_floatAdj+3
 11000                           
 11001                           ;key_menu.c: 144: adjLocation=0;
 11002  008D10  0E00               	movlw	0
 11003  008D12  6E3F               	movwf	_adjLocation,c	;volatile
 11004  008D14  0012               	return		;funcret
 11005  008D16                     __end_of___enter_menu_set_d:
 11006                           	opt stack 0
 11007                           tblptru	equ	0xFF8
 11008                           tblptrh	equ	0xFF7
 11009                           tblptrl	equ	0xFF6
 11010                           tablat	equ	0xFF5
 11011                           prodh	equ	0xFF4
 11012                           prodl	equ	0xFF3
 11013                           intcon	equ	0xFF2
 11014                           postinc0	equ	0xFEE
 11015                           wreg	equ	0xFE8
 11016                           indf1	equ	0xFE7
 11017                           postinc1	equ	0xFE6
 11018                           postdec1	equ	0xFE5
 11019                           plusw1	equ	0xFE3
 11020                           fsr1h	equ	0xFE2
 11021                           fsr1l	equ	0xFE1
 11022                           indf2	equ	0xFDF
 11023                           postinc2	equ	0xFDE
 11024                           postdec2	equ	0xFDD
 11025                           plusw2	equ	0xFDB
 11026                           fsr2h	equ	0xFDA
 11027                           fsr2l	equ	0xFD9
 11028                           status	equ	0xFD8
 11029                           
 11030 ;; *************** function ___set_short_poly_coefic *****************
 11031 ;; Defined at:
 11032 ;;		line 740 in file "src/api/key_menu.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  gohome          1    wreg     unsigned char 
 11035 ;; Auto vars:     Size  Location     Type
 11036 ;;  gohome          1    0[BANK1 ] unsigned char 
 11037 ;;  stp             2    3[BANK1 ] PTR struct .
 11038 ;;		 -> stSysData(240), 
 11039 ;;  p               2    1[BANK1 ] PTR int 
 11040 ;;		 -> adjValue(4), 
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;Total ram usage:        5 bytes
 11055 ;; Hardware stack levels used:    1
 11056 ;; Hardware stack levels required when called:    8
 11057 ;; This function calls:
 11058 ;;		___enter_menu_poly_coeffic
 11059 ;;		___exit_menu_to_home_unsave
 11060 ;;		___sys_data_save_write_flash
 11061 ;; This function is called by:
 11062 ;;		_key_process_set_long
 11063 ;;		_key_process_set
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text56
 11068  008948                     __ptext56:
 11069                           	opt stack 0
 11070  008948                     ___set_short_poly_coefic:
 11071                           	opt stack 20
 11072                           
 11073                           ;incstack = 0
 11074                           ;___set_short_poly_coefic@gohome stored from wreg
 11075  008948  0101               	movlb	1	; () banked
 11076  00894A  6FFB               	movwf	___set_short_poly_coefic@gohome& (0+255),b
 11077                           
 11078                           ;key_menu.c: 742: int16_t* p;
 11079                           ;key_menu.c: 746: st_sysDataDef* stp=&stSysData;
 11080  00894C  0E00               	movlw	low _stSysData
 11081  00894E  0101               	movlb	1	; () banked
 11082  008950  6FFE               	movwf	___set_short_poly_coefic@stp& (0+255),b
 11083  008952  0E02               	movlw	high _stSysData
 11084  008954  0101               	movlb	1	; () banked
 11085  008956  6FFF               	movwf	(___set_short_poly_coefic@stp+1)& (0+255),b
 11086                           
 11087                           ;key_menu.c: 748: p=(int16_t*)(&adjValue);
 11088  008958  0E39               	movlw	low _adjValue
 11089  00895A  0101               	movlb	1	; () banked
 11090  00895C  6FFC               	movwf	___set_short_poly_coefic@p& (0+255),b
 11091  00895E  0E00               	movlw	high _adjValue
 11092  008960  0101               	movlb	1	; () banked
 11093  008962  6FFD               	movwf	(___set_short_poly_coefic@p+1)& (0+255),b
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;key_menu.c: 749: stp->ployCoeffic[subMenu]=*p;
 11097  008964  C1FC  FFD9         	movff	___set_short_poly_coefic@p,fsr2l
 11098  008968  C1FD  FFDA         	movff	___set_short_poly_coefic@p+1,fsr2h
 11099  00896C  5032               	movf	_subMenu,w,c	;volatile
 11100  00896E  0D02               	mullw	2
 11101  008970  0E84               	movlw	132
 11102  008972  26F3               	addwf	prodl,f,c
 11103  008974  0E00               	movlw	0
 11104  008976  22F4               	addwfc	prodh,f,c
 11105  008978  50F3               	movf	prodl,w,c
 11106  00897A  0101               	movlb	1	; () banked
 11107  00897C  25FE               	addwf	___set_short_poly_coefic@stp& (0+255),w,b
 11108  00897E  6EE1               	movwf	fsr1l,c
 11109  008980  50F4               	movf	prodh,w,c
 11110  008982  0101               	movlb	1	; () banked
 11111  008984  21FF               	addwfc	(___set_short_poly_coefic@stp+1)& (0+255),w,b
 11112  008986  6EE2               	movwf	fsr1h,c
 11113  008988  CFDE FFE6          	movff	postinc2,postinc1
 11114  00898C  CFDD FFE5          	movff	postdec2,postdec1
 11115                           
 11116                           ; BSR set to: 1
 11117                           ;key_menu.c: 750: __sys_data_save_write_flash();
 11118  008990  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
 11119                           
 11120                           ;key_menu.c: 752: if(gohome){__exit_menu_to_home_unsave(); return;}
 11121  008994  0101               	movlb	1	; () banked
 11122  008996  51FB               	movf	___set_short_poly_coefic@gohome& (0+255),w,b
 11123  008998  0101               	movlb	1	; () banked
 11124  00899A  B4D8               	btfsc	status,2,c
 11125  00899C  D003               	goto	l16071
 11126                           
 11127                           ; BSR set to: 1
 11128  00899E  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 11129  0089A2  0012               	return	
 11130  0089A4                     l16071:
 11131                           
 11132                           ;key_menu.c: 754: subMenu++;
 11133  0089A4  2A32               	incf	_subMenu,f,c	;volatile
 11134                           
 11135                           ;key_menu.c: 755: if(subMenu>0x03)subMenu=0x00;
 11136  0089A6  0E03               	movlw	3
 11137  0089A8  6432               	cpfsgt	_subMenu,c	;volatile
 11138  0089AA  D002               	goto	l16077
 11139  0089AC  0E00               	movlw	0
 11140  0089AE  6E32               	movwf	_subMenu,c	;volatile
 11141  0089B0                     l16077:
 11142                           
 11143                           ;key_menu.c: 756: __enter_menu_poly_coeffic(subMenu);
 11144  0089B0  5032               	movf	_subMenu,w,c	;volatile
 11145  0089B2  EC6E  F04B         	call	___enter_menu_poly_coeffic
 11146  0089B6  0012               	return		;funcret
 11147  0089B8                     __end_of___set_short_poly_coefic:
 11148                           	opt stack 0
 11149                           tblptru	equ	0xFF8
 11150                           tblptrh	equ	0xFF7
 11151                           tblptrl	equ	0xFF6
 11152                           tablat	equ	0xFF5
 11153                           prodh	equ	0xFF4
 11154                           prodl	equ	0xFF3
 11155                           intcon	equ	0xFF2
 11156                           postinc0	equ	0xFEE
 11157                           wreg	equ	0xFE8
 11158                           indf1	equ	0xFE7
 11159                           postinc1	equ	0xFE6
 11160                           postdec1	equ	0xFE5
 11161                           plusw1	equ	0xFE3
 11162                           fsr1h	equ	0xFE2
 11163                           fsr1l	equ	0xFE1
 11164                           indf2	equ	0xFDF
 11165                           postinc2	equ	0xFDE
 11166                           postdec2	equ	0xFDD
 11167                           plusw2	equ	0xFDB
 11168                           fsr2h	equ	0xFDA
 11169                           fsr2l	equ	0xFD9
 11170                           status	equ	0xFD8
 11171                           
 11172 ;; *************** function ___enter_menu_poly_coeffic *****************
 11173 ;; Defined at:
 11174 ;;		line 238 in file "src/api/key_menu.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  __subMenu       1    wreg     unsigned char 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  __subMenu       1    2[BANK0 ] unsigned char 
 11179 ;;  fps             2    3[BANK0 ] PTR struct .
 11180 ;;		 -> stSysData(240), 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11193 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11194 ;;Total ram usage:        5 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    4
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_key_process_set_down_long
 11201 ;;		___set_short_poly_coefic
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           	psect	text57
 11206  0096DC                     __ptext57:
 11207                           	opt stack 0
 11208  0096DC                     ___enter_menu_poly_coeffic:
 11209                           	opt stack 23
 11210                           
 11211                           ;incstack = 0
 11212                           ;___enter_menu_poly_coeffic@__subMenu stored from wreg
 11213  0096DC  0100               	movlb	0	; () banked
 11214  0096DE  6F62               	movwf	___enter_menu_poly_coeffic@__subMenu& (0+255),b
 11215                           
 11216                           ;key_menu.c: 240: menu=0x70;
 11217  0096E0  0E70               	movlw	112
 11218  0096E2  6E33               	movwf	_menu,c	;volatile
 11219                           
 11220                           ;key_menu.c: 241: subMenu=__subMenu;
 11221  0096E4  C062  F032         	movff	___enter_menu_poly_coeffic@__subMenu,_subMenu	;volatile
 11222                           
 11223                           ;key_menu.c: 243: st_sysDataDef* fps= &stSysData;
 11224  0096E8  0E00               	movlw	low _stSysData
 11225  0096EA  0100               	movlb	0	; () banked
 11226  0096EC  6F63               	movwf	___enter_menu_poly_coeffic@fps& (0+255),b
 11227  0096EE  0E02               	movlw	high _stSysData
 11228  0096F0  0100               	movlb	0	; () banked
 11229  0096F2  6F64               	movwf	(___enter_menu_poly_coeffic@fps+1)& (0+255),b
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;key_menu.c: 245: adjValue=(int32_t)(fps->ployCoeffic[subMenu]);
 11233  0096F4  5032               	movf	_subMenu,w,c	;volatile
 11234  0096F6  0D02               	mullw	2
 11235  0096F8  0E84               	movlw	132
 11236  0096FA  26F3               	addwf	prodl,f,c
 11237  0096FC  0E00               	movlw	0
 11238  0096FE  22F4               	addwfc	prodh,f,c
 11239  009700  50F3               	movf	prodl,w,c
 11240  009702  0100               	movlb	0	; () banked
 11241  009704  2563               	addwf	___enter_menu_poly_coeffic@fps& (0+255),w,b
 11242  009706  6ED9               	movwf	fsr2l,c
 11243  009708  50F4               	movf	prodh,w,c
 11244  00970A  0100               	movlb	0	; () banked
 11245  00970C  2164               	addwfc	(___enter_menu_poly_coeffic@fps+1)& (0+255),w,b
 11246  00970E  6EDA               	movwf	fsr2h,c
 11247  009710  CFDE F060          	movff	postinc2,??___enter_menu_poly_coeffic
 11248  009714  CFDD F061          	movff	postdec2,??___enter_menu_poly_coeffic+1
 11249  009718  C060  F039         	movff	??___enter_menu_poly_coeffic,_adjValue	;volatile
 11250  00971C  C061  F03A         	movff	??___enter_menu_poly_coeffic+1,_adjValue+1	;volatile
 11251  009720  6A3B               	clrf	_adjValue+2,c	;volatile
 11252  009722  6A3C               	clrf	_adjValue+3,c	;volatile
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;key_menu.c: 246: adjLocation=0;
 11256  009724  0E00               	movlw	0
 11257  009726  6E3F               	movwf	_adjLocation,c	;volatile
 11258                           
 11259                           ; BSR set to: 0
 11260  009728  0012               	return		;funcret
 11261  00972A                     __end_of___enter_menu_poly_coeffic:
 11262                           	opt stack 0
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           postinc0	equ	0xFEE
 11271                           wreg	equ	0xFE8
 11272                           indf1	equ	0xFE7
 11273                           postinc1	equ	0xFE6
 11274                           postdec1	equ	0xFE5
 11275                           plusw1	equ	0xFE3
 11276                           fsr1h	equ	0xFE2
 11277                           fsr1l	equ	0xFE1
 11278                           indf2	equ	0xFDF
 11279                           postinc2	equ	0xFDE
 11280                           postdec2	equ	0xFDD
 11281                           plusw2	equ	0xFDB
 11282                           fsr2h	equ	0xFDA
 11283                           fsr2l	equ	0xFD9
 11284                           status	equ	0xFD8
 11285                           
 11286 ;; *************** function ___set_short_epr_param *****************
 11287 ;; Defined at:
 11288 ;;		line 809 in file "src/api/key_menu.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;  gohome          1    wreg     unsigned char 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  gohome          1    0[BANK3 ] unsigned char 
 11293 ;;  t32             4    1[BANK3 ] long 
 11294 ;;  p               3    0        PTR unsigned char 
 11295 ;;  stp             2    5[BANK3 ] PTR struct .
 11296 ;;		 -> stSysData(240), 
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      void 
 11299 ;; Registers used:
 11300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11310 ;;Total ram usage:        7 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:    8
 11313 ;; This function calls:
 11314 ;;		___enter_menu_epr_calib
 11315 ;;		___exit_menu_to_home_unsave
 11316 ;;		___mflot32_2_int32
 11317 ;;		___sys_data_save_write_flash
 11318 ;; This function is called by:
 11319 ;;		_key_process_set_long
 11320 ;;		_key_process_set
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           	psect	text58
 11325  0054EE                     __ptext58:
 11326                           	opt stack 0
 11327  0054EE                     ___set_short_epr_param:
 11328                           	opt stack 20
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;incstack = 0
 11332                           ;___set_short_epr_param@gohome stored from wreg
 11333  0054EE  0103               	movlb	3	; () banked
 11334  0054F0  6FCA               	movwf	___set_short_epr_param@gohome& (0+255),b
 11335                           
 11336                           ;key_menu.c: 811: uint8_t* p;
 11337                           ;key_menu.c: 812: int32_t t32;
 11338                           ;key_menu.c: 815: st_sysDataDef* stp=&stSysData;
 11339  0054F2  0E00               	movlw	low _stSysData
 11340  0054F4  0103               	movlb	3	; () banked
 11341  0054F6  6FCF               	movwf	___set_short_epr_param@stp& (0+255),b
 11342  0054F8  0E02               	movlw	high _stSysData
 11343  0054FA  0103               	movlb	3	; () banked
 11344  0054FC  6FD0               	movwf	(___set_short_epr_param@stp+1)& (0+255),b
 11345                           
 11346                           ; BSR set to: 3
 11347                           ;key_menu.c: 816: t32=__mflot32_2_int32(m_floatAdj.t32);
 11348  0054FE  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 11349  005502  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 11350  005506  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 11351  00550A  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 11352  00550E  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
 11353  005512  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_epr_param@t32
 11354  005516  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_epr_param@t32+1
 11355  00551A  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_epr_param@t32+2
 11356  00551E  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_epr_param@t32+3
 11357                           
 11358                           ;key_menu.c: 817: switch(subMenu){
 11359  005522  D05C               	goto	l16141
 11360  005524                     l16131:
 11361  005524  0103               	movlb	3	; () banked
 11362  005526  EE20 F09C          	lfsr	2,156
 11363  00552A  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11364  00552C  26D9               	addwf	fsr2l,f,c
 11365  00552E  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11366  005530  22DA               	addwfc	fsr2h,f,c
 11367  005532  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11368  005536  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11369  00553A  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11370  00553E  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11371  005542  0103               	movlb	3	; () banked
 11372  005544  EE20 F0A0          	lfsr	2,160
 11373  005548  D012               	goto	L4
 11374  00554A                     l16133:
 11375  00554A  0103               	movlb	3	; () banked
 11376  00554C  EE20 F0A4          	lfsr	2,164
 11377  005550  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11378  005552  26D9               	addwf	fsr2l,f,c
 11379  005554  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11380  005556  22DA               	addwfc	fsr2h,f,c
 11381  005558  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11382  00555C  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11383  005560  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11384  005564  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11385  005568  0103               	movlb	3	; () banked
 11386  00556A  EE20 F0A8          	lfsr	2,168
 11387  00556E                     L4:
 11388  00556E  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11389  005570  26D9               	addwf	fsr2l,f,c
 11390  005572  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11391  005574  22DA               	addwfc	fsr2h,f,c
 11392  005576  C156  FFDE         	movff	_adc_iPrEx,postinc2	;volatile
 11393  00557A  C157  FFDD         	movff	_adc_iPrEx+1,postdec2	;volatile
 11394  00557E  D03B               	goto	l16143
 11395  005580                     l16135:
 11396  005580  0103               	movlb	3	; () banked
 11397  005582  EE20 F0AC          	lfsr	2,172
 11398  005586  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11399  005588  26D9               	addwf	fsr2l,f,c
 11400  00558A  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11401  00558C  22DA               	addwfc	fsr2h,f,c
 11402  00558E  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11403  005592  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11404  005596  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11405  00559A  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11406  00559E  0103               	movlb	3	; () banked
 11407  0055A0  EE20 F0B0          	lfsr	2,176
 11408  0055A4  D012               	goto	L5
 11409  0055A6                     l16137:
 11410  0055A6  0103               	movlb	3	; () banked
 11411  0055A8  EE20 F0B4          	lfsr	2,180
 11412  0055AC  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11413  0055AE  26D9               	addwf	fsr2l,f,c
 11414  0055B0  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11415  0055B2  22DA               	addwfc	fsr2h,f,c
 11416  0055B4  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11417  0055B8  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11418  0055BC  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11419  0055C0  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11420  0055C4  0103               	movlb	3	; () banked
 11421  0055C6  EE20 F0B8          	lfsr	2,184
 11422  0055CA                     L5:
 11423  0055CA  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11424  0055CC  26D9               	addwf	fsr2l,f,c
 11425  0055CE  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11426  0055D0  22DA               	addwfc	fsr2h,f,c
 11427  0055D2  C158  FFDE         	movff	_adc_iPrEx+2,postinc2	;volatile
 11428  0055D6  C159  FFDD         	movff	_adc_iPrEx+3,postdec2	;volatile
 11429                           
 11430                           ; BSR set to: 3
 11431                           ;key_menu.c: 823: }
 11432                           
 11433                           ; BSR set to: 3
 11434                           
 11435                           ;key_menu.c: 822: default:break;
 11436  0055DA  D00D               	goto	l16143
 11437  0055DC                     l16141:
 11438  0055DC  5032               	movf	_subMenu,w,c	;volatile
 11439                           
 11440                           ; Switch size 1, requested type "space"
 11441                           ; Number of cases is 4, Range of values is 0 to 3
 11442                           ; switch strategies available:
 11443                           ; Name         Instructions Cycles
 11444                           ; simple_byte           13     7 (average)
 11445                           ;	Chosen strategy is simple_byte
 11446  0055DE  0A00               	xorlw	0	; case 0
 11447  0055E0  B4D8               	btfsc	status,2,c
 11448  0055E2  D7A0               	goto	l16131
 11449  0055E4  0A01               	xorlw	1	; case 1
 11450  0055E6  B4D8               	btfsc	status,2,c
 11451  0055E8  D7B0               	goto	l16133
 11452  0055EA  0A03               	xorlw	3	; case 2
 11453  0055EC  B4D8               	btfsc	status,2,c
 11454  0055EE  D7C8               	goto	l16135
 11455  0055F0  0A01               	xorlw	1	; case 3
 11456  0055F2  B4D8               	btfsc	status,2,c
 11457  0055F4  D7D8               	goto	l16137
 11458  0055F6                     l16143:
 11459                           
 11460                           ;key_menu.c: 824: __sys_data_save_write_flash();
 11461  0055F6  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
 11462                           
 11463                           ;key_menu.c: 826: if(gohome){__exit_menu_to_home_unsave(); return;}
 11464  0055FA  0103               	movlb	3	; () banked
 11465  0055FC  51CA               	movf	___set_short_epr_param@gohome& (0+255),w,b
 11466  0055FE  0103               	movlb	3	; () banked
 11467  005600  B4D8               	btfsc	status,2,c
 11468  005602  D003               	goto	l16151
 11469                           
 11470                           ; BSR set to: 3
 11471  005604  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 11472  005608  0012               	return	
 11473  00560A                     l16151:
 11474                           
 11475                           ;key_menu.c: 828: subMenu++;
 11476  00560A  2A32               	incf	_subMenu,f,c	;volatile
 11477                           
 11478                           ;key_menu.c: 829: if(subMenu>0x03)subMenu=0x00;
 11479  00560C  0E03               	movlw	3
 11480  00560E  6432               	cpfsgt	_subMenu,c	;volatile
 11481  005610  D002               	goto	l16157
 11482  005612  0E00               	movlw	0
 11483  005614  6E32               	movwf	_subMenu,c	;volatile
 11484  005616                     l16157:
 11485                           
 11486                           ;key_menu.c: 830: __enter_menu_epr_calib(subMenu);
 11487  005616  5032               	movf	_subMenu,w,c	;volatile
 11488  005618  EC9C  F03B         	call	___enter_menu_epr_calib
 11489  00561C  0012               	return		;funcret
 11490  00561E                     __end_of___set_short_epr_param:
 11491                           	opt stack 0
 11492                           tblptru	equ	0xFF8
 11493                           tblptrh	equ	0xFF7
 11494                           tblptrl	equ	0xFF6
 11495                           tablat	equ	0xFF5
 11496                           prodh	equ	0xFF4
 11497                           prodl	equ	0xFF3
 11498                           intcon	equ	0xFF2
 11499                           postinc0	equ	0xFEE
 11500                           wreg	equ	0xFE8
 11501                           indf1	equ	0xFE7
 11502                           postinc1	equ	0xFE6
 11503                           postdec1	equ	0xFE5
 11504                           plusw1	equ	0xFE3
 11505                           fsr1h	equ	0xFE2
 11506                           fsr1l	equ	0xFE1
 11507                           indf2	equ	0xFDF
 11508                           postinc2	equ	0xFDE
 11509                           postdec2	equ	0xFDD
 11510                           plusw2	equ	0xFDB
 11511                           fsr2h	equ	0xFDA
 11512                           fsr2l	equ	0xFD9
 11513                           status	equ	0xFD8
 11514                           
 11515 ;; *************** function ___enter_menu_epr_calib *****************
 11516 ;; Defined at:
 11517 ;;		line 288 in file "src/api/key_menu.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  __subMenu       1    wreg     unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  __subMenu       1   29[BANK0 ] unsigned char 
 11522 ;;  t32             4   30[BANK0 ] long 
 11523 ;;  fps             2   34[BANK0 ] PTR struct .
 11524 ;;		 -> stSysData(240), 
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  1    wreg      void 
 11527 ;; Registers used:
 11528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11529 ;; Tracked objects:
 11530 ;;		On entry : 0/0
 11531 ;;		On exit  : 0/0
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11535 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11537 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11538 ;;Total ram usage:        7 bytes
 11539 ;; Hardware stack levels used:    1
 11540 ;; Hardware stack levels required when called:    6
 11541 ;; This function calls:
 11542 ;;		___int32_2_mflot32
 11543 ;; This function is called by:
 11544 ;;		_key_process_set_down_long
 11545 ;;		___set_short_epr_param
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           	psect	text59
 11550  007738                     __ptext59:
 11551                           	opt stack 0
 11552  007738                     ___enter_menu_epr_calib:
 11553                           	opt stack 21
 11554                           
 11555                           ;incstack = 0
 11556                           ;___enter_menu_epr_calib@__subMenu stored from wreg
 11557  007738  0100               	movlb	0	; () banked
 11558  00773A  6F7D               	movwf	___enter_menu_epr_calib@__subMenu& (0+255),b
 11559                           
 11560                           ;key_menu.c: 290: int32_t t32;
 11561                           ;key_menu.c: 291: menu=0xa0;
 11562  00773C  0EA0               	movlw	160
 11563  00773E  6E33               	movwf	_menu,c	;volatile
 11564                           
 11565                           ;key_menu.c: 292: subMenu=__subMenu;
 11566  007740  C07D  F032         	movff	___enter_menu_epr_calib@__subMenu,_subMenu	;volatile
 11567                           
 11568                           ;key_menu.c: 295: st_sysDataDef* fps= &stSysData;
 11569  007744  0E00               	movlw	low _stSysData
 11570  007746  0100               	movlb	0	; () banked
 11571  007748  6F82               	movwf	___enter_menu_epr_calib@fps& (0+255),b
 11572  00774A  0E02               	movlw	high _stSysData
 11573  00774C  0100               	movlb	0	; () banked
 11574  00774E  6F83               	movwf	(___enter_menu_epr_calib@fps+1)& (0+255),b
 11575                           
 11576                           ;key_menu.c: 296: switch(subMenu){
 11577  007750  D01C               	goto	l15249
 11578  007752                     l15239:
 11579                           
 11580                           ; BSR set to: 0
 11581  007752  0100               	movlb	0	; () banked
 11582  007754  EE20 F09C          	lfsr	2,156
 11583  007758  D00B               	goto	L8
 11584  00775A                     l15241:
 11585                           
 11586                           ; BSR set to: 0
 11587  00775A  0100               	movlb	0	; () banked
 11588  00775C  EE20 F0A4          	lfsr	2,164
 11589  007760  D007               	goto	L8
 11590  007762                     l15243:
 11591                           
 11592                           ; BSR set to: 0
 11593  007762  0100               	movlb	0	; () banked
 11594  007764  EE20 F0AC          	lfsr	2,172
 11595  007768  D003               	goto	L8
 11596  00776A                     l15245:
 11597                           
 11598                           ; BSR set to: 0
 11599  00776A  0100               	movlb	0	; () banked
 11600  00776C  EE20 F0B4          	lfsr	2,180
 11601  007770                     L8:
 11602  007770  5182               	movf	___enter_menu_epr_calib@fps& (0+255),w,b
 11603  007772  26D9               	addwf	fsr2l,f,c
 11604  007774  5183               	movf	(___enter_menu_epr_calib@fps+1)& (0+255),w,b
 11605  007776  22DA               	addwfc	fsr2h,f,c
 11606  007778  CFDE F07E          	movff	postinc2,___enter_menu_epr_calib@t32
 11607  00777C  CFDE F07F          	movff	postinc2,___enter_menu_epr_calib@t32+1
 11608  007780  CFDE F080          	movff	postinc2,___enter_menu_epr_calib@t32+2
 11609  007784  CFDE F081          	movff	postinc2,___enter_menu_epr_calib@t32+3
 11610  007788  D00E               	goto	l15251
 11611  00778A                     l15249:
 11612                           
 11613                           ; BSR set to: 0
 11614  00778A  5032               	movf	_subMenu,w,c	;volatile
 11615                           
 11616                           ; Switch size 1, requested type "space"
 11617                           ; Number of cases is 4, Range of values is 0 to 3
 11618                           ; switch strategies available:
 11619                           ; Name         Instructions Cycles
 11620                           ; simple_byte           13     7 (average)
 11621                           ;	Chosen strategy is simple_byte
 11622  00778C  0A00               	xorlw	0	; case 0
 11623  00778E  B4D8               	btfsc	status,2,c
 11624  007790  D7E0               	goto	l15239
 11625  007792  0A01               	xorlw	1	; case 1
 11626  007794  B4D8               	btfsc	status,2,c
 11627  007796  D7E1               	goto	l15241
 11628  007798  0A03               	xorlw	3	; case 2
 11629  00779A  B4D8               	btfsc	status,2,c
 11630  00779C  D7E2               	goto	l15243
 11631  00779E  0A01               	xorlw	1	; case 3
 11632  0077A0  A4D8               	btfss	status,2,c
 11633  0077A2  0012               	return	
 11634  0077A4  D7E2               	goto	l15245
 11635  0077A6                     l15251:
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;key_menu.c: 304: t32=__int32_2_mflot32(t32);
 11639  0077A6  C07E  F06D         	movff	___enter_menu_epr_calib@t32,___int32_2_mflot32@x
 11640  0077AA  C07F  F06E         	movff	___enter_menu_epr_calib@t32+1,___int32_2_mflot32@x+1
 11641  0077AE  C080  F06F         	movff	___enter_menu_epr_calib@t32+2,___int32_2_mflot32@x+2
 11642  0077B2  C081  F070         	movff	___enter_menu_epr_calib@t32+3,___int32_2_mflot32@x+3
 11643  0077B6  EC08  F030         	call	___int32_2_mflot32	;wreg free
 11644  0077BA  C06D  F07E         	movff	?___int32_2_mflot32,___enter_menu_epr_calib@t32
 11645  0077BE  C06E  F07F         	movff	?___int32_2_mflot32+1,___enter_menu_epr_calib@t32+1
 11646  0077C2  C06F  F080         	movff	?___int32_2_mflot32+2,___enter_menu_epr_calib@t32+2
 11647  0077C6  C070  F081         	movff	?___int32_2_mflot32+3,___enter_menu_epr_calib@t32+3
 11648                           
 11649                           ;key_menu.c: 305: m_floatAdj.t32=t32;
 11650  0077CA  C07E  F035         	movff	___enter_menu_epr_calib@t32,_m_floatAdj
 11651  0077CE  C07F  F036         	movff	___enter_menu_epr_calib@t32+1,_m_floatAdj+1
 11652  0077D2  C080  F037         	movff	___enter_menu_epr_calib@t32+2,_m_floatAdj+2
 11653  0077D6  C081  F038         	movff	___enter_menu_epr_calib@t32+3,_m_floatAdj+3
 11654                           
 11655                           ;key_menu.c: 306: adjLocation=0;
 11656  0077DA  0E00               	movlw	0
 11657  0077DC  6E3F               	movwf	_adjLocation,c	;volatile
 11658  0077DE  0012               	return		;funcret
 11659  0077E0                     __end_of___enter_menu_epr_calib:
 11660                           	opt stack 0
 11661                           tblptru	equ	0xFF8
 11662                           tblptrh	equ	0xFF7
 11663                           tblptrl	equ	0xFF6
 11664                           tablat	equ	0xFF5
 11665                           prodh	equ	0xFF4
 11666                           prodl	equ	0xFF3
 11667                           intcon	equ	0xFF2
 11668                           postinc0	equ	0xFEE
 11669                           wreg	equ	0xFE8
 11670                           indf1	equ	0xFE7
 11671                           postinc1	equ	0xFE6
 11672                           postdec1	equ	0xFE5
 11673                           plusw1	equ	0xFE3
 11674                           fsr1h	equ	0xFE2
 11675                           fsr1l	equ	0xFE1
 11676                           indf2	equ	0xFDF
 11677                           postinc2	equ	0xFDE
 11678                           postdec2	equ	0xFDD
 11679                           plusw2	equ	0xFDB
 11680                           fsr2h	equ	0xFDA
 11681                           fsr2l	equ	0xFD9
 11682                           status	equ	0xFD8
 11683                           
 11684 ;; *************** function ___set_short_epr_ilp_scale *****************
 11685 ;; Defined at:
 11686 ;;		line 833 in file "src/api/key_menu.c"
 11687 ;; Parameters:    Size  Location     Type
 11688 ;;  gohome          1    wreg     unsigned char 
 11689 ;; Auto vars:     Size  Location     Type
 11690 ;;  gohome          1    0[BANK3 ] unsigned char 
 11691 ;;  t32             4    1[BANK3 ] long 
 11692 ;;  p               3    0        PTR unsigned char 
 11693 ;;  stp             2    5[BANK3 ] PTR struct .
 11694 ;;		 -> stSysData(240), 
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;Total ram usage:        7 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:    8
 11711 ;; This function calls:
 11712 ;;		___enter_menu_epr_ilp_scale
 11713 ;;		___exit_menu_to_home_unsave
 11714 ;;		___mflot32_2_int32
 11715 ;;		___sys_data_save_write_flash
 11716 ;; This function is called by:
 11717 ;;		_key_process_set_long
 11718 ;;		_key_process_set
 11719 ;; This function uses a non-reentrant model
 11720 ;;
 11721                           
 11722                           	psect	text60
 11723  00752C                     __ptext60:
 11724                           	opt stack 0
 11725  00752C                     ___set_short_epr_ilp_scale:
 11726                           	opt stack 20
 11727                           
 11728                           ;incstack = 0
 11729                           ;___set_short_epr_ilp_scale@gohome stored from wreg
 11730  00752C  0103               	movlb	3	; () banked
 11731  00752E  6FCA               	movwf	___set_short_epr_ilp_scale@gohome& (0+255),b
 11732                           
 11733                           ;key_menu.c: 835: uint8_t* p;
 11734                           ;key_menu.c: 836: int32_t t32;
 11735                           ;key_menu.c: 839: st_sysDataDef* stp=&stSysData;
 11736  007530  0E00               	movlw	low _stSysData
 11737  007532  0103               	movlb	3	; () banked
 11738  007534  6FCF               	movwf	___set_short_epr_ilp_scale@stp& (0+255),b
 11739  007536  0E02               	movlw	high _stSysData
 11740  007538  0103               	movlb	3	; () banked
 11741  00753A  6FD0               	movwf	(___set_short_epr_ilp_scale@stp+1)& (0+255),b
 11742                           
 11743                           ; BSR set to: 3
 11744                           ;key_menu.c: 840: t32=__mflot32_2_int32(m_floatAdj.t32);
 11745  00753C  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 11746  007540  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 11747  007544  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 11748  007548  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 11749  00754C  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
 11750  007550  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_epr_ilp_scale@t32
 11751  007554  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_epr_ilp_scale@t32+1
 11752  007558  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_epr_ilp_scale@t32+2
 11753  00755C  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_epr_ilp_scale@t32+3
 11754                           
 11755                           ;key_menu.c: 841: switch(subMenu){
 11756  007560  D01C               	goto	l16173
 11757  007562                     l16163:
 11758  007562  0103               	movlb	3	; () banked
 11759  007564  EE20 F0DC          	lfsr	2,220
 11760  007568  D00B               	goto	L11
 11761  00756A                     l16165:
 11762  00756A  0103               	movlb	3	; () banked
 11763  00756C  EE20 F0E0          	lfsr	2,224
 11764  007570  D007               	goto	L11
 11765  007572                     l16167:
 11766  007572  0103               	movlb	3	; () banked
 11767  007574  EE20 F0E4          	lfsr	2,228
 11768  007578  D003               	goto	L11
 11769  00757A                     l16169:
 11770  00757A  0103               	movlb	3	; () banked
 11771  00757C  EE20 F0E8          	lfsr	2,232
 11772  007580                     L11:
 11773  007580  51CF               	movf	___set_short_epr_ilp_scale@stp& (0+255),w,b
 11774  007582  26D9               	addwf	fsr2l,f,c
 11775  007584  51D0               	movf	(___set_short_epr_ilp_scale@stp+1)& (0+255),w,b
 11776  007586  22DA               	addwfc	fsr2h,f,c
 11777  007588  C3CB  FFDE         	movff	___set_short_epr_ilp_scale@t32,postinc2
 11778  00758C  C3CC  FFDE         	movff	___set_short_epr_ilp_scale@t32+1,postinc2
 11779  007590  C3CD  FFDE         	movff	___set_short_epr_ilp_scale@t32+2,postinc2
 11780  007594  C3CE  FFDE         	movff	___set_short_epr_ilp_scale@t32+3,postinc2
 11781                           
 11782                           ; BSR set to: 3
 11783                           ;key_menu.c: 847: }
 11784                           
 11785                           ; BSR set to: 3
 11786                           
 11787                           ;key_menu.c: 846: default:break;
 11788  007598  D00D               	goto	l16175
 11789  00759A                     l16173:
 11790  00759A  5032               	movf	_subMenu,w,c	;volatile
 11791                           
 11792                           ; Switch size 1, requested type "space"
 11793                           ; Number of cases is 4, Range of values is 0 to 3
 11794                           ; switch strategies available:
 11795                           ; Name         Instructions Cycles
 11796                           ; simple_byte           13     7 (average)
 11797                           ;	Chosen strategy is simple_byte
 11798  00759C  0A00               	xorlw	0	; case 0
 11799  00759E  B4D8               	btfsc	status,2,c
 11800  0075A0  D7E0               	goto	l16163
 11801  0075A2  0A01               	xorlw	1	; case 1
 11802  0075A4  B4D8               	btfsc	status,2,c
 11803  0075A6  D7E1               	goto	l16165
 11804  0075A8  0A03               	xorlw	3	; case 2
 11805  0075AA  B4D8               	btfsc	status,2,c
 11806  0075AC  D7E2               	goto	l16167
 11807  0075AE  0A01               	xorlw	1	; case 3
 11808  0075B0  B4D8               	btfsc	status,2,c
 11809  0075B2  D7E3               	goto	l16169
 11810  0075B4                     l16175:
 11811                           
 11812                           ;key_menu.c: 848: __sys_data_save_write_flash();
 11813  0075B4  EC0D  F031         	call	___sys_data_save_write_flash	;wreg free
 11814                           
 11815                           ;key_menu.c: 850: if(gohome){__exit_menu_to_home_unsave(); return;}
 11816  0075B8  0103               	movlb	3	; () banked
 11817  0075BA  51CA               	movf	___set_short_epr_ilp_scale@gohome& (0+255),w,b
 11818  0075BC  0103               	movlb	3	; () banked
 11819  0075BE  B4D8               	btfsc	status,2,c
 11820  0075C0  D003               	goto	l16183
 11821                           
 11822                           ; BSR set to: 3
 11823  0075C2  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 11824  0075C6  0012               	return	
 11825  0075C8                     l16183:
 11826                           
 11827                           ;key_menu.c: 852: subMenu++;
 11828  0075C8  2A32               	incf	_subMenu,f,c	;volatile
 11829                           
 11830                           ;key_menu.c: 853: if(subMenu>0x03)subMenu=0x00;
 11831  0075CA  0E03               	movlw	3
 11832  0075CC  6432               	cpfsgt	_subMenu,c	;volatile
 11833  0075CE  D002               	goto	l16189
 11834  0075D0  0E00               	movlw	0
 11835  0075D2  6E32               	movwf	_subMenu,c	;volatile
 11836  0075D4                     l16189:
 11837                           
 11838                           ;key_menu.c: 854: __enter_menu_epr_ilp_scale(subMenu);
 11839  0075D4  5032               	movf	_subMenu,w,c	;volatile
 11840  0075D6  EC81  F039         	call	___enter_menu_epr_ilp_scale
 11841  0075DA  0012               	return		;funcret
 11842  0075DC                     __end_of___set_short_epr_ilp_scale:
 11843                           	opt stack 0
 11844                           tblptru	equ	0xFF8
 11845                           tblptrh	equ	0xFF7
 11846                           tblptrl	equ	0xFF6
 11847                           tablat	equ	0xFF5
 11848                           prodh	equ	0xFF4
 11849                           prodl	equ	0xFF3
 11850                           intcon	equ	0xFF2
 11851                           postinc0	equ	0xFEE
 11852                           wreg	equ	0xFE8
 11853                           indf1	equ	0xFE7
 11854                           postinc1	equ	0xFE6
 11855                           postdec1	equ	0xFE5
 11856                           plusw1	equ	0xFE3
 11857                           fsr1h	equ	0xFE2
 11858                           fsr1l	equ	0xFE1
 11859                           indf2	equ	0xFDF
 11860                           postinc2	equ	0xFDE
 11861                           postdec2	equ	0xFDD
 11862                           plusw2	equ	0xFDB
 11863                           fsr2h	equ	0xFDA
 11864                           fsr2l	equ	0xFD9
 11865                           status	equ	0xFD8
 11866                           
 11867 ;; *************** function ___sys_data_save_write_flash *****************
 11868 ;; Defined at:
 11869 ;;		line 609 in file "src/api/key_menu.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;		None
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;  buf             2  129[BANK0 ] PTR unsigned char 
 11874 ;;		 -> stSysData(240), 
 11875 ;;  stp             2  127[BANK0 ] PTR struct .
 11876 ;;		 -> stSysData(240), 
 11877 ;;  ret             1  126[BANK0 ] unsigned char 
 11878 ;; Return value:  Size  Location     Type
 11879 ;;                  1    wreg      unsigned char 
 11880 ;; Registers used:
 11881 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11882 ;; Tracked objects:
 11883 ;;		On entry : 0/0
 11884 ;;		On exit  : 0/0
 11885 ;;		Unchanged: 0/0
 11886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;Total ram usage:        5 bytes
 11892 ;; Hardware stack levels used:    1
 11893 ;; Hardware stack levels required when called:    7
 11894 ;; This function calls:
 11895 ;;		_crc_append
 11896 ;;		_crc_verify
 11897 ;;		_data_sys_cal_v1
 11898 ;;		_data_sys_cal_v2
 11899 ;;		_m_flash_read
 11900 ;;		_m_flash_write
 11901 ;; This function is called by:
 11902 ;;		___set_short_pose_size
 11903 ;;		___set_short_poly_coefic
 11904 ;;		___set_short_warn_type
 11905 ;;		___set_short_warn_value
 11906 ;;		___set_short_epr_param
 11907 ;;		___set_short_epr_ilp_scale
 11908 ;;		___set_long_density
 11909 ;;		___set_long_base_zero
 11910 ;;		___set_long_bar_level_scale
 11911 ;; This function uses a non-reentrant model
 11912 ;;
 11913                           
 11914                           	psect	text61
 11915  00621A                     __ptext61:
 11916                           	opt stack 0
 11917  00621A                     ___sys_data_save_write_flash:
 11918                           	opt stack 20
 11919                           
 11920                           ;key_menu.c: 611: uint8_t ret=0;
 11921                           
 11922                           ;incstack = 0
 11923  00621A  0E00               	movlw	0
 11924  00621C  0100               	movlb	0	; () banked
 11925  00621E  6FDE               	movwf	___sys_data_save_write_flash@ret& (0+255),b
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;key_menu.c: 614: st_sysDataDef* stp=&stSysData;
 11929  006220  0E00               	movlw	low _stSysData
 11930  006222  0100               	movlb	0	; () banked
 11931  006224  6FDF               	movwf	___sys_data_save_write_flash@stp& (0+255),b
 11932  006226  0E02               	movlw	high _stSysData
 11933  006228  0100               	movlb	0	; () banked
 11934  00622A  6FE0               	movwf	(___sys_data_save_write_flash@stp+1)& (0+255),b
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;key_menu.c: 615: uint8_t* buf=(uint8_t*)(&stSysData);
 11938  00622C  0E00               	movlw	low _stSysData
 11939  00622E  0100               	movlb	0	; () banked
 11940  006230  6FE1               	movwf	___sys_data_save_write_flash@buf& (0+255),b
 11941  006232  0E02               	movlw	high _stSysData
 11942  006234  0100               	movlb	0	; () banked
 11943  006236  6FE2               	movwf	(___sys_data_save_write_flash@buf+1)& (0+255),b
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;key_menu.c: 616: stp->V1=data_sys_cal_v1(stp);
 11947  006238  C0DF  F0C2         	movff	___sys_data_save_write_flash@stp,data_sys_cal_v1@stp
 11948  00623C  C0E0  F0C3         	movff	___sys_data_save_write_flash@stp+1,data_sys_cal_v1@stp+1
 11949  006240  EC37  F01D         	call	_data_sys_cal_v1	;wreg free
 11950  006244  0100               	movlb	0	; () banked
 11951  006246  EE20 F010          	lfsr	2,16
 11952  00624A  51DF               	movf	___sys_data_save_write_flash@stp& (0+255),w,b
 11953  00624C  26D9               	addwf	fsr2l,f,c
 11954  00624E  51E0               	movf	(___sys_data_save_write_flash@stp+1)& (0+255),w,b
 11955  006250  22DA               	addwfc	fsr2h,f,c
 11956  006252  0100               	movlb	0	; () banked
 11957  006254  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 11958  006258  0100               	movlb	0	; () banked
 11959  00625A  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 11960  00625E  0100               	movlb	0	; () banked
 11961  006260  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 11962  006264  0100               	movlb	0	; () banked
 11963  006266  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;key_menu.c: 617: stp->V2=data_sys_cal_v2(stp);
 11967  00626A  C0DF  F0C2         	movff	___sys_data_save_write_flash@stp,data_sys_cal_v2@stp
 11968  00626E  C0E0  F0C3         	movff	___sys_data_save_write_flash@stp+1,data_sys_cal_v2@stp+1
 11969  006272  EC32  F027         	call	_data_sys_cal_v2	;wreg free
 11970  006276  0100               	movlb	0	; () banked
 11971  006278  EE20 F014          	lfsr	2,20
 11972  00627C  51DF               	movf	___sys_data_save_write_flash@stp& (0+255),w,b
 11973  00627E  26D9               	addwf	fsr2l,f,c
 11974  006280  51E0               	movf	(___sys_data_save_write_flash@stp+1)& (0+255),w,b
 11975  006282  22DA               	addwfc	fsr2h,f,c
 11976  006284  0100               	movlb	0	; () banked
 11977  006286  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 11978  00628A  0100               	movlb	0	; () banked
 11979  00628C  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 11980  006290  0100               	movlb	0	; () banked
 11981  006292  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 11982  006296  0100               	movlb	0	; () banked
 11983  006298  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;key_menu.c: 618: crc_append(buf,sizeof(st_sysDataDef)-2);
 11987  00629C  C0E1  F06C         	movff	___sys_data_save_write_flash@buf,crc_append@message
 11988  0062A0  C0E2  F06D         	movff	___sys_data_save_write_flash@buf+1,crc_append@message+1
 11989  0062A4  0E00               	movlw	0
 11990  0062A6  0100               	movlb	0	; () banked
 11991  0062A8  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 11992  0062AA  0EEE               	movlw	238
 11993  0062AC  6F6E               	movwf	crc_append@n& (0+255),b
 11994  0062AE  EC89  F047         	call	_crc_append	;wreg free
 11995                           
 11996                           ;key_menu.c: 619: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 11997  0062B2  0E00               	movlw	0
 11998  0062B4  0100               	movlb	0	; () banked
 11999  0062B6  6F6E               	movwf	m_flash_write@addr& (0+255),b
 12000  0062B8  0EF4               	movlw	244
 12001  0062BA  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 12002  0062BC  0E00               	movlw	0
 12003  0062BE  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 12004  0062C0  0E00               	movlw	0
 12005  0062C2  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 12006  0062C4  C0E1  F072         	movff	___sys_data_save_write_flash@buf,m_flash_write@buf
 12007  0062C8  C0E2  F073         	movff	___sys_data_save_write_flash@buf+1,m_flash_write@buf+1
 12008  0062CC  0E00               	movlw	0
 12009  0062CE  0100               	movlb	0	; () banked
 12010  0062D0  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 12011  0062D2  0EF0               	movlw	240
 12012  0062D4  6F74               	movwf	m_flash_write@len& (0+255),b
 12013  0062D6  ECDC  F029         	call	_m_flash_write	;wreg free
 12014                           
 12015                           ;key_menu.c: 620: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 12016  0062DA  0E00               	movlw	0
 12017  0062DC  0100               	movlb	0	; () banked
 12018  0062DE  6F60               	movwf	m_flash_read@addr& (0+255),b
 12019  0062E0  0EF4               	movlw	244
 12020  0062E2  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 12021  0062E4  0E00               	movlw	0
 12022  0062E6  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 12023  0062E8  0E00               	movlw	0
 12024  0062EA  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 12025  0062EC  C0E1  F064         	movff	___sys_data_save_write_flash@buf,m_flash_read@buf
 12026  0062F0  C0E2  F065         	movff	___sys_data_save_write_flash@buf+1,m_flash_read@buf+1
 12027  0062F4  0E00               	movlw	0
 12028  0062F6  0100               	movlb	0	; () banked
 12029  0062F8  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 12030  0062FA  0EF0               	movlw	240
 12031  0062FC  6F66               	movwf	m_flash_read@len& (0+255),b
 12032  0062FE  EC4F  F042         	call	_m_flash_read	;wreg free
 12033                           
 12034                           ;key_menu.c: 621: ret=crc_verify(buf,sizeof(st_sysDataDef));
 12035  006302  C0E1  F06C         	movff	___sys_data_save_write_flash@buf,crc_verify@message
 12036  006306  C0E2  F06D         	movff	___sys_data_save_write_flash@buf+1,crc_verify@message+1
 12037  00630A  0E00               	movlw	0
 12038  00630C  0100               	movlb	0	; () banked
 12039  00630E  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 12040  006310  0EF0               	movlw	240
 12041  006312  6F6E               	movwf	crc_verify@n& (0+255),b
 12042  006314  EC45  F041         	call	_crc_verify	;wreg free
 12043  006318  0100               	movlb	0	; () banked
 12044  00631A  6FDE               	movwf	___sys_data_save_write_flash@ret& (0+255),b
 12045  00631C  0012               	return	
 12046  00631E                     __end_of___sys_data_save_write_flash:
 12047                           	opt stack 0
 12048                           tblptru	equ	0xFF8
 12049                           tblptrh	equ	0xFF7
 12050                           tblptrl	equ	0xFF6
 12051                           tablat	equ	0xFF5
 12052                           prodh	equ	0xFF4
 12053                           prodl	equ	0xFF3
 12054                           intcon	equ	0xFF2
 12055                           postinc0	equ	0xFEE
 12056                           wreg	equ	0xFE8
 12057                           indf1	equ	0xFE7
 12058                           postinc1	equ	0xFE6
 12059                           postdec1	equ	0xFE5
 12060                           plusw1	equ	0xFE3
 12061                           fsr1h	equ	0xFE2
 12062                           fsr1l	equ	0xFE1
 12063                           indf2	equ	0xFDF
 12064                           postinc2	equ	0xFDE
 12065                           postdec2	equ	0xFDD
 12066                           plusw2	equ	0xFDB
 12067                           fsr2h	equ	0xFDA
 12068                           fsr2l	equ	0xFD9
 12069                           status	equ	0xFD8
 12070                           
 12071 ;; *************** function ___enter_menu_epr_ilp_scale *****************
 12072 ;; Defined at:
 12073 ;;		line 309 in file "src/api/key_menu.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  __subMenu       1    wreg     unsigned char 
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;  __subMenu       1   29[BANK0 ] unsigned char 
 12078 ;;  t32             4   30[BANK0 ] long 
 12079 ;;  fps             2   34[BANK0 ] PTR struct .
 12080 ;;		 -> stSysData(240), 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12091 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12093 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12094 ;;Total ram usage:        7 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    6
 12097 ;; This function calls:
 12098 ;;		___int32_2_mflot32
 12099 ;; This function is called by:
 12100 ;;		_key_process_set_down_long
 12101 ;;		___set_short_epr_ilp_scale
 12102 ;; This function uses a non-reentrant model
 12103 ;;
 12104                           
 12105                           	psect	text62
 12106  007302                     __ptext62:
 12107                           	opt stack 0
 12108  007302                     ___enter_menu_epr_ilp_scale:
 12109                           	opt stack 21
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;incstack = 0
 12113                           ;___enter_menu_epr_ilp_scale@__subMenu stored from wreg
 12114  007302  0100               	movlb	0	; () banked
 12115  007304  6F7D               	movwf	___enter_menu_epr_ilp_scale@__subMenu& (0+255),b
 12116                           
 12117                           ;key_menu.c: 311: menu=0xb0;
 12118  007306  0EB0               	movlw	176
 12119  007308  6E33               	movwf	_menu,c	;volatile
 12120                           
 12121                           ;key_menu.c: 312: subMenu=__subMenu;
 12122  00730A  C07D  F032         	movff	___enter_menu_epr_ilp_scale@__subMenu,_subMenu	;volatile
 12123                           
 12124                           ;key_menu.c: 313: int32_t t32=0;
 12125  00730E  0E00               	movlw	0
 12126  007310  0100               	movlb	0	; () banked
 12127  007312  6F7E               	movwf	___enter_menu_epr_ilp_scale@t32& (0+255),b
 12128  007314  0E00               	movlw	0
 12129  007316  6F7F               	movwf	(___enter_menu_epr_ilp_scale@t32+1)& (0+255),b
 12130  007318  0E00               	movlw	0
 12131  00731A  6F80               	movwf	(___enter_menu_epr_ilp_scale@t32+2)& (0+255),b
 12132  00731C  0E00               	movlw	0
 12133  00731E  6F81               	movwf	(___enter_menu_epr_ilp_scale@t32+3)& (0+255),b
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;key_menu.c: 316: st_sysDataDef* fps= &stSysData;
 12137  007320  0E00               	movlw	low _stSysData
 12138  007322  0100               	movlb	0	; () banked
 12139  007324  6F82               	movwf	___enter_menu_epr_ilp_scale@fps& (0+255),b
 12140  007326  0E02               	movlw	high _stSysData
 12141  007328  0100               	movlb	0	; () banked
 12142  00732A  6F83               	movwf	(___enter_menu_epr_ilp_scale@fps+1)& (0+255),b
 12143                           
 12144                           ;key_menu.c: 317: switch(subMenu)
 12145  00732C  D01C               	goto	l15275
 12146  00732E                     l15265:
 12147                           
 12148                           ; BSR set to: 0
 12149  00732E  0100               	movlb	0	; () banked
 12150  007330  EE20 F0DC          	lfsr	2,220
 12151  007334  D00B               	goto	L14
 12152  007336                     l15267:
 12153                           
 12154                           ; BSR set to: 0
 12155  007336  0100               	movlb	0	; () banked
 12156  007338  EE20 F0E0          	lfsr	2,224
 12157  00733C  D007               	goto	L14
 12158  00733E                     l15269:
 12159                           
 12160                           ; BSR set to: 0
 12161  00733E  0100               	movlb	0	; () banked
 12162  007340  EE20 F0E4          	lfsr	2,228
 12163  007344  D003               	goto	L14
 12164  007346                     l15271:
 12165                           
 12166                           ; BSR set to: 0
 12167  007346  0100               	movlb	0	; () banked
 12168  007348  EE20 F0E8          	lfsr	2,232
 12169  00734C                     L14:
 12170  00734C  5182               	movf	___enter_menu_epr_ilp_scale@fps& (0+255),w,b
 12171  00734E  26D9               	addwf	fsr2l,f,c
 12172  007350  5183               	movf	(___enter_menu_epr_ilp_scale@fps+1)& (0+255),w,b
 12173  007352  22DA               	addwfc	fsr2h,f,c
 12174  007354  CFDE F07E          	movff	postinc2,___enter_menu_epr_ilp_scale@t32
 12175  007358  CFDE F07F          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+1
 12176  00735C  CFDE F080          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+2
 12177  007360  CFDE F081          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+3
 12178  007364  D00E               	goto	l15277
 12179  007366                     l15275:
 12180                           
 12181                           ; BSR set to: 0
 12182  007366  5032               	movf	_subMenu,w,c	;volatile
 12183                           
 12184                           ; Switch size 1, requested type "space"
 12185                           ; Number of cases is 4, Range of values is 0 to 3
 12186                           ; switch strategies available:
 12187                           ; Name         Instructions Cycles
 12188                           ; simple_byte           13     7 (average)
 12189                           ;	Chosen strategy is simple_byte
 12190  007368  0A00               	xorlw	0	; case 0
 12191  00736A  B4D8               	btfsc	status,2,c
 12192  00736C  D7E0               	goto	l15265
 12193  00736E  0A01               	xorlw	1	; case 1
 12194  007370  B4D8               	btfsc	status,2,c
 12195  007372  D7E1               	goto	l15267
 12196  007374  0A03               	xorlw	3	; case 2
 12197  007376  B4D8               	btfsc	status,2,c
 12198  007378  D7E2               	goto	l15269
 12199  00737A  0A01               	xorlw	1	; case 3
 12200  00737C  A4D8               	btfss	status,2,c
 12201  00737E  0012               	return	
 12202  007380  D7E2               	goto	l15271
 12203  007382                     l15277:
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;key_menu.c: 326: t32=__int32_2_mflot32(t32);
 12207  007382  C07E  F06D         	movff	___enter_menu_epr_ilp_scale@t32,___int32_2_mflot32@x
 12208  007386  C07F  F06E         	movff	___enter_menu_epr_ilp_scale@t32+1,___int32_2_mflot32@x+1
 12209  00738A  C080  F06F         	movff	___enter_menu_epr_ilp_scale@t32+2,___int32_2_mflot32@x+2
 12210  00738E  C081  F070         	movff	___enter_menu_epr_ilp_scale@t32+3,___int32_2_mflot32@x+3
 12211  007392  EC08  F030         	call	___int32_2_mflot32	;wreg free
 12212  007396  C06D  F07E         	movff	?___int32_2_mflot32,___enter_menu_epr_ilp_scale@t32
 12213  00739A  C06E  F07F         	movff	?___int32_2_mflot32+1,___enter_menu_epr_ilp_scale@t32+1
 12214  00739E  C06F  F080         	movff	?___int32_2_mflot32+2,___enter_menu_epr_ilp_scale@t32+2
 12215  0073A2  C070  F081         	movff	?___int32_2_mflot32+3,___enter_menu_epr_ilp_scale@t32+3
 12216                           
 12217                           ;key_menu.c: 327: m_floatAdj.t32=t32;
 12218  0073A6  C07E  F035         	movff	___enter_menu_epr_ilp_scale@t32,_m_floatAdj
 12219  0073AA  C07F  F036         	movff	___enter_menu_epr_ilp_scale@t32+1,_m_floatAdj+1
 12220  0073AE  C080  F037         	movff	___enter_menu_epr_ilp_scale@t32+2,_m_floatAdj+2
 12221  0073B2  C081  F038         	movff	___enter_menu_epr_ilp_scale@t32+3,_m_floatAdj+3
 12222                           
 12223                           ;key_menu.c: 328: adjLocation=0;
 12224  0073B6  0E00               	movlw	0
 12225  0073B8  6E3F               	movwf	_adjLocation,c	;volatile
 12226  0073BA  0012               	return		;funcret
 12227  0073BC                     __end_of___enter_menu_epr_ilp_scale:
 12228                           	opt stack 0
 12229                           tblptru	equ	0xFF8
 12230                           tblptrh	equ	0xFF7
 12231                           tblptrl	equ	0xFF6
 12232                           tablat	equ	0xFF5
 12233                           prodh	equ	0xFF4
 12234                           prodl	equ	0xFF3
 12235                           intcon	equ	0xFF2
 12236                           postinc0	equ	0xFEE
 12237                           wreg	equ	0xFE8
 12238                           indf1	equ	0xFE7
 12239                           postinc1	equ	0xFE6
 12240                           postdec1	equ	0xFE5
 12241                           plusw1	equ	0xFE3
 12242                           fsr1h	equ	0xFE2
 12243                           fsr1l	equ	0xFE1
 12244                           indf2	equ	0xFDF
 12245                           postinc2	equ	0xFDE
 12246                           postdec2	equ	0xFDD
 12247                           plusw2	equ	0xFDB
 12248                           fsr2h	equ	0xFDA
 12249                           fsr2l	equ	0xFD9
 12250                           status	equ	0xFD8
 12251                           
 12252 ;; *************** function ___set_short_diff_calib *****************
 12253 ;; Defined at:
 12254 ;;		line 660 in file "src/api/key_menu.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;  gohome          1    wreg     unsigned char 
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  gohome          1   52[BANK0 ] unsigned char 
 12259 ;;  t32             4   55[BANK0 ] unsigned long 
 12260 ;;  pra             4   48[BANK0 ] unsigned long 
 12261 ;;  t16             2   59[BANK0 ] unsigned int 
 12262 ;;  adjv            1   61[BANK0 ] unsigned char 
 12263 ;;  saveFlg         1   54[BANK0 ] unsigned char 
 12264 ;;  t8              1   53[BANK0 ] unsigned char 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  1    wreg      void 
 12267 ;; Registers used:
 12268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12276 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12278 ;;Total ram usage:       20 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; Hardware stack levels required when called:    9
 12281 ;; This function calls:
 12282 ;;		___enter_menu_calib_press_diff
 12283 ;;		___exit_menu_to_home_unsave
 12284 ;;		___mflot32_2_int32
 12285 ;;		_at24c02_write_n_byte
 12286 ;;		_crc_append
 12287 ;; This function is called by:
 12288 ;;		_key_process_set_long
 12289 ;;		_key_process_set
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text63
 12294  002712                     __ptext63:
 12295                           	opt stack 0
 12296  002712                     ___set_short_diff_calib:
 12297                           	opt stack 19
 12298                           
 12299                           ;incstack = 0
 12300                           ;___set_short_diff_calib@gohome stored from wreg
 12301  002712  0100               	movlb	0	; () banked
 12302  002714  6F94               	movwf	___set_short_diff_calib@gohome& (0+255),b
 12303                           
 12304                           ;key_menu.c: 662: bool saveFlg=0;
 12305  002716  0E00               	movlw	0
 12306  002718  0100               	movlb	0	; () banked
 12307  00271A  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;key_menu.c: 663: uint8_t t8,adjv;
 12311                           ;key_menu.c: 664: uint16_t t16;
 12312                           ;key_menu.c: 665: uint32_t t32,pra;
 12313                           ;key_menu.c: 666: if(calibCol==0){
 12314  00271C  5030               	movf	_calibCol,w,c	;volatile
 12315  00271E  A4D8               	btfss	status,2,c
 12316  002720  D021               	goto	l15975
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;key_menu.c: 667: t8=diff_prCalibTabDef.prCalibRow[calibRow].pCount;
 12320  002722  5031               	movf	_calibRow,w,c	;volatile
 12321  002724  0D34               	mullw	52
 12322  002726  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12323  002728  24F3               	addwf	prodl,w,c
 12324  00272A  6ED9               	movwf	fsr2l,c
 12325  00272C  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12326  00272E  20F4               	addwfc	prodh,w,c
 12327  002730  6EDA               	movwf	fsr2h,c
 12328  002732  50DF               	movf	indf2,w,c
 12329  002734  0100               	movlb	0	; () banked
 12330  002736  6F95               	movwf	___set_short_diff_calib@t8& (0+255),b
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;key_menu.c: 668: adjv=*(uint8_t*)(&adjValue);
 12334  002738  C039  F09D         	movff	_adjValue,___set_short_diff_calib@adjv
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;key_menu.c: 669: if(t8!=adjv){
 12338  00273C  0100               	movlb	0	; () banked
 12339  00273E  519D               	movf	___set_short_diff_calib@adjv& (0+255),w,b
 12340  002740  0100               	movlb	0	; () banked
 12341  002742  1995               	xorwf	___set_short_diff_calib@t8& (0+255),w,b
 12342  002744  B4D8               	btfsc	status,2,c
 12343  002746  D148               	goto	l15985
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;key_menu.c: 670: saveFlg=1;
 12347  002748  0E01               	movlw	1
 12348  00274A  0100               	movlb	0	; () banked
 12349  00274C  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;key_menu.c: 671: diff_prCalibTabDef.prCalibRow[calibRow].pCount=adjv;
 12353  00274E  5031               	movf	_calibRow,w,c	;volatile
 12354  002750  0D34               	mullw	52
 12355  002752  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12356  002754  24F3               	addwf	prodl,w,c
 12357  002756  6ED9               	movwf	fsr2l,c
 12358  002758  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12359  00275A  20F4               	addwfc	prodh,w,c
 12360  00275C  6EDA               	movwf	fsr2h,c
 12361  00275E  C09D  FFDF         	movff	___set_short_diff_calib@adjv,indf2
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;key_menu.c: 672: }
 12365                           ;key_menu.c: 673: }else{
 12366  002762  D13A               	goto	l15985
 12367  002764                     l15975:
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;key_menu.c: 674: t32=__mflot32_2_int32(m_floatAdj.t32);
 12371  002764  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 12372  002768  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 12373  00276C  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 12374  002770  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 12375  002774  ECF0  F03B         	call	___mflot32_2_int32	;wreg free
 12376  002778  C06C  F097         	movff	?___mflot32_2_int32,___set_short_diff_calib@t32
 12377  00277C  C06D  F098         	movff	?___mflot32_2_int32+1,___set_short_diff_calib@t32+1
 12378  002780  C06E  F099         	movff	?___mflot32_2_int32+2,___set_short_diff_calib@t32+2
 12379  002784  C06F  F09A         	movff	?___mflot32_2_int32+3,___set_short_diff_calib@t32+3
 12380                           
 12381                           ;key_menu.c: 675: pra=diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].p
      +                          Value;
 12382  002788  5031               	movf	_calibRow,w,c	;volatile
 12383  00278A  0D34               	mullw	52
 12384  00278C  0EFC               	movlw	252
 12385  00278E  0100               	movlb	0	; () banked
 12386  002790  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12387  002792  0EFF               	movlw	255
 12388  002794  0100               	movlb	0	; () banked
 12389  002796  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12390  002798  5030               	movf	_calibCol,w,c	;volatile
 12391  00279A  0100               	movlb	0	; () banked
 12392  00279C  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12393  00279E  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12394  0027A0  0100               	movlb	0	; () banked
 12395  0027A2  90D8               	bcf	status,0,c
 12396  0027A4  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12397  0027A6  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12398  0027A8  0100               	movlb	0	; () banked
 12399  0027AA  90D8               	bcf	status,0,c
 12400  0027AC  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12401  0027AE  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12402  0027B0  0100               	movlb	0	; () banked
 12403  0027B2  90D8               	bcf	status,0,c
 12404  0027B4  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12405  0027B6  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12406  0027B8  0100               	movlb	0	; () banked
 12407  0027BA  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12408  0027BC  0100               	movlb	0	; () banked
 12409  0027BE  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12410  0027C0  0100               	movlb	0	; () banked
 12411  0027C2  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12412  0027C4  0100               	movlb	0	; () banked
 12413  0027C6  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12414  0027C8  0E10               	movlw	low _diff_prCalibTabDef
 12415  0027CA  0100               	movlb	0	; () banked
 12416  0027CC  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12417  0027CE  0E03               	movlw	high _diff_prCalibTabDef
 12418  0027D0  0100               	movlb	0	; () banked
 12419  0027D2  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12420  0027D4  0E04               	movlw	4
 12421  0027D6  0100               	movlb	0	; () banked
 12422  0027D8  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12423  0027DA  0E00               	movlw	0
 12424  0027DC  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12425  0027DE  0100               	movlb	0	; () banked
 12426  0027E0  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12427  0027E2  0100               	movlb	0	; () banked
 12428  0027E4  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12429  0027E6  0100               	movlb	0	; () banked
 12430  0027E8  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12431  0027EA  0100               	movlb	0	; () banked
 12432  0027EC  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12433  0027EE  50F3               	movf	prodl,w,c
 12434  0027F0  0100               	movlb	0	; () banked
 12435  0027F2  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12436  0027F4  6ED9               	movwf	fsr2l,c
 12437  0027F6  50F4               	movf	prodh,w,c
 12438  0027F8  0100               	movlb	0	; () banked
 12439  0027FA  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12440  0027FC  6EDA               	movwf	fsr2h,c
 12441  0027FE  CFDE F090          	movff	postinc2,___set_short_diff_calib@pra
 12442  002802  CFDE F091          	movff	postinc2,___set_short_diff_calib@pra+1
 12443  002806  CFDE F092          	movff	postinc2,___set_short_diff_calib@pra+2
 12444  00280A  CFDE F093          	movff	postinc2,___set_short_diff_calib@pra+3
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;key_menu.c: 676: if(pra!=t32){
 12448  00280E  0100               	movlb	0	; () banked
 12449  002810  5197               	movf	___set_short_diff_calib@t32& (0+255),w,b
 12450  002812  0100               	movlb	0	; () banked
 12451  002814  1990               	xorwf	___set_short_diff_calib@pra& (0+255),w,b
 12452  002816  E110               	bnz	u14860
 12453  002818  0100               	movlb	0	; () banked
 12454  00281A  5198               	movf	(___set_short_diff_calib@t32+1)& (0+255),w,b
 12455  00281C  0100               	movlb	0	; () banked
 12456  00281E  1991               	xorwf	(___set_short_diff_calib@pra+1)& (0+255),w,b
 12457  002820  E10B               	bnz	u14860
 12458  002822  0100               	movlb	0	; () banked
 12459  002824  5199               	movf	(___set_short_diff_calib@t32+2)& (0+255),w,b
 12460  002826  0100               	movlb	0	; () banked
 12461  002828  1992               	xorwf	(___set_short_diff_calib@pra+2)& (0+255),w,b
 12462  00282A  E106               	bnz	u14860
 12463  00282C  0100               	movlb	0	; () banked
 12464  00282E  519A               	movf	(___set_short_diff_calib@t32+3)& (0+255),w,b
 12465  002830  0100               	movlb	0	; () banked
 12466  002832  1993               	xorwf	(___set_short_diff_calib@pra+3)& (0+255),w,b
 12467  002834  B4D8               	btfsc	status,2,c
 12468  002836  D0D0               	goto	l15985
 12469  002838                     u14860:
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;key_menu.c: 677: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValu
      +                          e=t32;
 12473  002838  5031               	movf	_calibRow,w,c	;volatile
 12474  00283A  0D34               	mullw	52
 12475  00283C  0EFC               	movlw	252
 12476  00283E  0100               	movlb	0	; () banked
 12477  002840  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12478  002842  0EFF               	movlw	255
 12479  002844  0100               	movlb	0	; () banked
 12480  002846  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12481  002848  5030               	movf	_calibCol,w,c	;volatile
 12482  00284A  0100               	movlb	0	; () banked
 12483  00284C  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12484  00284E  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12485  002850  0100               	movlb	0	; () banked
 12486  002852  90D8               	bcf	status,0,c
 12487  002854  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12488  002856  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12489  002858  0100               	movlb	0	; () banked
 12490  00285A  90D8               	bcf	status,0,c
 12491  00285C  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12492  00285E  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12493  002860  0100               	movlb	0	; () banked
 12494  002862  90D8               	bcf	status,0,c
 12495  002864  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12496  002866  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12497  002868  0100               	movlb	0	; () banked
 12498  00286A  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12499  00286C  0100               	movlb	0	; () banked
 12500  00286E  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12501  002870  0100               	movlb	0	; () banked
 12502  002872  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12503  002874  0100               	movlb	0	; () banked
 12504  002876  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12505  002878  0E10               	movlw	low _diff_prCalibTabDef
 12506  00287A  0100               	movlb	0	; () banked
 12507  00287C  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12508  00287E  0E03               	movlw	high _diff_prCalibTabDef
 12509  002880  0100               	movlb	0	; () banked
 12510  002882  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12511  002884  0E04               	movlw	4
 12512  002886  0100               	movlb	0	; () banked
 12513  002888  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12514  00288A  0E00               	movlw	0
 12515  00288C  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12516  00288E  0100               	movlb	0	; () banked
 12517  002890  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12518  002892  0100               	movlb	0	; () banked
 12519  002894  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12520  002896  0100               	movlb	0	; () banked
 12521  002898  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12522  00289A  0100               	movlb	0	; () banked
 12523  00289C  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12524  00289E  50F3               	movf	prodl,w,c
 12525  0028A0  0100               	movlb	0	; () banked
 12526  0028A2  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12527  0028A4  6ED9               	movwf	fsr2l,c
 12528  0028A6  50F4               	movf	prodh,w,c
 12529  0028A8  0100               	movlb	0	; () banked
 12530  0028AA  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12531  0028AC  6EDA               	movwf	fsr2h,c
 12532  0028AE  C097  FFDE         	movff	___set_short_diff_calib@t32,postinc2
 12533  0028B2  C098  FFDE         	movff	___set_short_diff_calib@t32+1,postinc2
 12534  0028B6  C099  FFDE         	movff	___set_short_diff_calib@t32+2,postinc2
 12535  0028BA  C09A  FFDE         	movff	___set_short_diff_calib@t32+3,postinc2
 12536                           
 12537                           ;key_menu.c: 678: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pAdcV
      +                          alue=x_prDiffData.pAdcValue;
 12538  0028BE  5031               	movf	_calibRow,w,c	;volatile
 12539  0028C0  0D34               	mullw	52
 12540  0028C2  0EFC               	movlw	252
 12541  0028C4  0100               	movlb	0	; () banked
 12542  0028C6  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12543  0028C8  0EFF               	movlw	255
 12544  0028CA  0100               	movlb	0	; () banked
 12545  0028CC  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12546  0028CE  5030               	movf	_calibCol,w,c	;volatile
 12547  0028D0  0100               	movlb	0	; () banked
 12548  0028D2  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12549  0028D4  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12550  0028D6  0100               	movlb	0	; () banked
 12551  0028D8  90D8               	bcf	status,0,c
 12552  0028DA  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12553  0028DC  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12554  0028DE  0100               	movlb	0	; () banked
 12555  0028E0  90D8               	bcf	status,0,c
 12556  0028E2  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12557  0028E4  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12558  0028E6  0100               	movlb	0	; () banked
 12559  0028E8  90D8               	bcf	status,0,c
 12560  0028EA  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12561  0028EC  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12562  0028EE  0100               	movlb	0	; () banked
 12563  0028F0  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12564  0028F2  0100               	movlb	0	; () banked
 12565  0028F4  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12566  0028F6  0100               	movlb	0	; () banked
 12567  0028F8  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12568  0028FA  0100               	movlb	0	; () banked
 12569  0028FC  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12570  0028FE  0E10               	movlw	low _diff_prCalibTabDef
 12571  002900  0100               	movlb	0	; () banked
 12572  002902  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12573  002904  0E03               	movlw	high _diff_prCalibTabDef
 12574  002906  0100               	movlb	0	; () banked
 12575  002908  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12576  00290A  0E04               	movlw	4
 12577  00290C  0100               	movlb	0	; () banked
 12578  00290E  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12579  002910  0E00               	movlw	0
 12580  002912  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12581  002914  0100               	movlb	0	; () banked
 12582  002916  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12583  002918  0100               	movlb	0	; () banked
 12584  00291A  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12585  00291C  0100               	movlb	0	; () banked
 12586  00291E  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12587  002920  0100               	movlb	0	; () banked
 12588  002922  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12589  002924  50F3               	movf	prodl,w,c
 12590  002926  0100               	movlb	0	; () banked
 12591  002928  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12592  00292A  50F4               	movf	prodh,w,c
 12593  00292C  0100               	movlb	0	; () banked
 12594  00292E  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12595  002930  0E04               	movlw	4
 12596  002932  0100               	movlb	0	; () banked
 12597  002934  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12598  002936  6ED9               	movwf	fsr2l,c
 12599  002938  0E00               	movlw	0
 12600  00293A  0100               	movlb	0	; () banked
 12601  00293C  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12602  00293E  6EDA               	movwf	fsr2h,c
 12603  002940  C1EA  FFDE         	movff	_x_prDiffData+4,postinc2
 12604  002944  C1EB  FFDD         	movff	_x_prDiffData+5,postdec2
 12605                           
 12606                           ;key_menu.c: 679: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].tAdcV
      +                          alue=x_prDiffData.tAdcValue;
 12607  002948  5031               	movf	_calibRow,w,c	;volatile
 12608  00294A  0D34               	mullw	52
 12609  00294C  0EFC               	movlw	252
 12610  00294E  0100               	movlb	0	; () banked
 12611  002950  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12612  002952  0EFF               	movlw	255
 12613  002954  0100               	movlb	0	; () banked
 12614  002956  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12615  002958  5030               	movf	_calibCol,w,c	;volatile
 12616  00295A  0100               	movlb	0	; () banked
 12617  00295C  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12618  00295E  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12619  002960  0100               	movlb	0	; () banked
 12620  002962  90D8               	bcf	status,0,c
 12621  002964  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12622  002966  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12623  002968  0100               	movlb	0	; () banked
 12624  00296A  90D8               	bcf	status,0,c
 12625  00296C  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12626  00296E  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12627  002970  0100               	movlb	0	; () banked
 12628  002972  90D8               	bcf	status,0,c
 12629  002974  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12630  002976  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12631  002978  0100               	movlb	0	; () banked
 12632  00297A  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12633  00297C  0100               	movlb	0	; () banked
 12634  00297E  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12635  002980  0100               	movlb	0	; () banked
 12636  002982  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12637  002984  0100               	movlb	0	; () banked
 12638  002986  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12639  002988  0E10               	movlw	low _diff_prCalibTabDef
 12640  00298A  0100               	movlb	0	; () banked
 12641  00298C  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12642  00298E  0E03               	movlw	high _diff_prCalibTabDef
 12643  002990  0100               	movlb	0	; () banked
 12644  002992  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12645  002994  0E04               	movlw	4
 12646  002996  0100               	movlb	0	; () banked
 12647  002998  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12648  00299A  0E00               	movlw	0
 12649  00299C  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12650  00299E  0100               	movlb	0	; () banked
 12651  0029A0  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12652  0029A2  0100               	movlb	0	; () banked
 12653  0029A4  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12654  0029A6  0100               	movlb	0	; () banked
 12655  0029A8  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12656  0029AA  0100               	movlb	0	; () banked
 12657  0029AC  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12658  0029AE  50F3               	movf	prodl,w,c
 12659  0029B0  0100               	movlb	0	; () banked
 12660  0029B2  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12661  0029B4  50F4               	movf	prodh,w,c
 12662  0029B6  0100               	movlb	0	; () banked
 12663  0029B8  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12664  0029BA  0E06               	movlw	6
 12665  0029BC  0100               	movlb	0	; () banked
 12666  0029BE  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12667  0029C0  6ED9               	movwf	fsr2l,c
 12668  0029C2  0E00               	movlw	0
 12669  0029C4  0100               	movlb	0	; () banked
 12670  0029C6  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12671  0029C8  6EDA               	movwf	fsr2h,c
 12672  0029CA  C1EC  FFDE         	movff	_x_prDiffData+6,postinc2
 12673  0029CE  C1ED  FFDD         	movff	_x_prDiffData+7,postdec2
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;key_menu.c: 680: saveFlg=1;
 12677  0029D2  0E01               	movlw	1
 12678  0029D4  0100               	movlb	0	; () banked
 12679  0029D6  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12680  0029D8                     l15985:
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;key_menu.c: 681: }
 12684                           ;key_menu.c: 682: }
 12685                           ;key_menu.c: 684: if(saveFlg){
 12686  0029D8  0100               	movlb	0	; () banked
 12687  0029DA  5196               	movf	___set_short_diff_calib@saveFlg& (0+255),w,b
 12688  0029DC  0100               	movlb	0	; () banked
 12689  0029DE  B4D8               	btfsc	status,2,c
 12690  0029E0  D02A               	goto	l15993
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;key_menu.c: 685: t16=sizeof(diff_prCalibTabDef);
 12694  0029E2  0E00               	movlw	0
 12695  0029E4  0100               	movlb	0	; () banked
 12696  0029E6  6F9C               	movwf	(___set_short_diff_calib@t16+1)& (0+255),b
 12697  0029E8  0EA2               	movlw	162
 12698  0029EA  6F9B               	movwf	___set_short_diff_calib@t16& (0+255),b
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;key_menu.c: 686: crc_append((uint8_t*)&diff_prCalibTabDef,t16-2);
 12702  0029EC  0E10               	movlw	low _diff_prCalibTabDef
 12703  0029EE  0100               	movlb	0	; () banked
 12704  0029F0  6F6C               	movwf	crc_append@message& (0+255),b
 12705  0029F2  0E03               	movlw	high _diff_prCalibTabDef
 12706  0029F4  0100               	movlb	0	; () banked
 12707  0029F6  6F6D               	movwf	(crc_append@message+1)& (0+255),b
 12708  0029F8  0EFE               	movlw	254
 12709  0029FA  0100               	movlb	0	; () banked
 12710  0029FC  259B               	addwf	___set_short_diff_calib@t16& (0+255),w,b
 12711  0029FE  0100               	movlb	0	; () banked
 12712  002A00  6F6E               	movwf	crc_append@n& (0+255),b
 12713  002A02  0EFF               	movlw	255
 12714  002A04  0100               	movlb	0	; () banked
 12715  002A06  219C               	addwfc	(___set_short_diff_calib@t16+1)& (0+255),w,b
 12716  002A08  0100               	movlb	0	; () banked
 12717  002A0A  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 12718  002A0C  EC89  F047         	call	_crc_append	;wreg free
 12719                           
 12720                           ;key_menu.c: 687: at24c02_write_n_byte(pdiff_prEepromObj,0,(uint8_t*)&diff_prCalibTabDef
      +                          ,t16);
 12721  002A10  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 12722  002A14  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 12723  002A18  0E00               	movlw	0
 12724  002A1A  0100               	movlb	0	; () banked
 12725  002A1C  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 12726  002A1E  0E10               	movlw	low _diff_prCalibTabDef
 12727  002A20  0100               	movlb	0	; () banked
 12728  002A22  6F69               	movwf	at24c02_write_n_byte@buf& (0+255),b
 12729  002A24  0E03               	movlw	high _diff_prCalibTabDef
 12730  002A26  0100               	movlb	0	; () banked
 12731  002A28  6F6A               	movwf	(at24c02_write_n_byte@buf+1)& (0+255),b
 12732  002A2A  C09B  F06B         	movff	___set_short_diff_calib@t16,at24c02_write_n_byte@len
 12733  002A2E  C09C  F06C         	movff	___set_short_diff_calib@t16+1,at24c02_write_n_byte@len+1
 12734  002A32  ECEF  F02D         	call	_at24c02_write_n_byte	;wreg free
 12735  002A36                     l15993:
 12736                           
 12737                           ;key_menu.c: 688: }
 12738                           ;key_menu.c: 689: if(gohome){__exit_menu_to_home_unsave(); return;}
 12739  002A36  0100               	movlb	0	; () banked
 12740  002A38  5194               	movf	___set_short_diff_calib@gohome& (0+255),w,b
 12741  002A3A  0100               	movlb	0	; () banked
 12742  002A3C  B4D8               	btfsc	status,2,c
 12743  002A3E  D003               	goto	l15999
 12744                           
 12745                           ; BSR set to: 0
 12746  002A40  ECCF  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 12747  002A44  0012               	return	
 12748  002A46                     l15999:
 12749                           
 12750                           ;key_menu.c: 690: calibCol++;
 12751  002A46  2A30               	incf	_calibCol,f,c	;volatile
 12752                           
 12753                           ;key_menu.c: 691: if(calibCol>diff_prCalibTabDef.prCalibRow[calibRow].pCount){
 12754  002A48  5031               	movf	_calibRow,w,c	;volatile
 12755  002A4A  0D34               	mullw	52
 12756  002A4C  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12757  002A4E  24F3               	addwf	prodl,w,c
 12758  002A50  6ED9               	movwf	fsr2l,c
 12759  002A52  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12760  002A54  20F4               	addwfc	prodh,w,c
 12761  002A56  6EDA               	movwf	fsr2h,c
 12762  002A58  5030               	movf	_calibCol,w,c	;volatile
 12763  002A5A  5CDE               	subwf	postinc2,w,c
 12764  002A5C  B0D8               	btfsc	status,0,c
 12765  002A5E  D008               	goto	l16011
 12766                           
 12767                           ;key_menu.c: 692: calibCol=0;
 12768  002A60  0E00               	movlw	0
 12769  002A62  6E30               	movwf	_calibCol,c	;volatile
 12770                           
 12771                           ;key_menu.c: 693: calibRow++;
 12772  002A64  2A31               	incf	_calibRow,f,c	;volatile
 12773                           
 12774                           ;key_menu.c: 694: if(calibRow>2)calibRow=0;
 12775  002A66  0E02               	movlw	2
 12776  002A68  6431               	cpfsgt	_calibRow,c	;volatile
 12777  002A6A  D002               	goto	l16011
 12778  002A6C  0E00               	movlw	0
 12779  002A6E  6E31               	movwf	_calibRow,c	;volatile
 12780  002A70                     l16011:
 12781                           
 12782                           ;key_menu.c: 695: }
 12783                           ;key_menu.c: 696: __enter_menu_calib_press_diff(calibRow,calibCol);
 12784  002A70  C030  F020         	movff	_calibCol,___enter_menu_calib_press_diff@col	;volatile
 12785  002A74  5031               	movf	_calibRow,w,c	;volatile
 12786  002A76  EC8F  F031         	call	___enter_menu_calib_press_diff
 12787  002A7A  0012               	return		;funcret
 12788  002A7C                     __end_of___set_short_diff_calib:
 12789                           	opt stack 0
 12790                           tblptru	equ	0xFF8
 12791                           tblptrh	equ	0xFF7
 12792                           tblptrl	equ	0xFF6
 12793                           tablat	equ	0xFF5
 12794                           prodh	equ	0xFF4
 12795                           prodl	equ	0xFF3
 12796                           intcon	equ	0xFF2
 12797                           postinc0	equ	0xFEE
 12798                           wreg	equ	0xFE8
 12799                           indf1	equ	0xFE7
 12800                           postinc1	equ	0xFE6
 12801                           postdec1	equ	0xFE5
 12802                           plusw1	equ	0xFE3
 12803                           fsr1h	equ	0xFE2
 12804                           fsr1l	equ	0xFE1
 12805                           indf2	equ	0xFDF
 12806                           postinc2	equ	0xFDE
 12807                           postdec2	equ	0xFDD
 12808                           plusw2	equ	0xFDB
 12809                           fsr2h	equ	0xFDA
 12810                           fsr2l	equ	0xFD9
 12811                           status	equ	0xFD8
 12812                           
 12813 ;; *************** function ___mflot32_2_int32 *****************
 12814 ;; Defined at:
 12815 ;;		line 77 in file "src/api/ui.c"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;  x               4   12[BANK0 ] long 
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;  mf              4   21[BANK0 ] struct .
 12820 ;;  ret             4   17[BANK0 ] long 
 12821 ;;  i               1   16[BANK0 ] unsigned char 
 12822 ;; Return value:  Size  Location     Type
 12823 ;;                  4   12[BANK0 ] long 
 12824 ;; Registers used:
 12825 ;;		wreg, status,2, status,0, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12832 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12834 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12835 ;;Total ram usage:       13 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:    5
 12838 ;; This function calls:
 12839 ;;		___lmul
 12840 ;; This function is called by:
 12841 ;;		___set_short_pose_size
 12842 ;;		___set_short_diff_calib
 12843 ;;		___set_short_pr_calib
 12844 ;;		___set_short_warn_value
 12845 ;;		___set_short_epr_param
 12846 ;;		___set_short_epr_ilp_scale
 12847 ;;		___set_long_density
 12848 ;;		___set_long_base_zero
 12849 ;; This function uses a non-reentrant model
 12850 ;;
 12851                           
 12852                           	psect	text64
 12853  0077E0                     __ptext64:
 12854                           	opt stack 0
 12855  0077E0                     ___mflot32_2_int32:
 12856                           	opt stack 22
 12857                           
 12858                           ;ui.c: 79: uint8_t i;
 12859                           ;ui.c: 80: st_float32 mf={0};
 12860                           
 12861                           ;incstack = 0
 12862  0077E0  C13E  F075         	movff	___mflot32_2_int32@F7710,___mflot32_2_int32@mf
 12863  0077E4  C13F  F076         	movff	___mflot32_2_int32@F7710+1,___mflot32_2_int32@mf+1
 12864  0077E8  C140  F077         	movff	___mflot32_2_int32@F7710+2,___mflot32_2_int32@mf+2
 12865  0077EC  C141  F078         	movff	___mflot32_2_int32@F7710+3,___mflot32_2_int32@mf+3
 12866                           
 12867                           ;ui.c: 81: int32_t ret;
 12868                           ;ui.c: 82: mf.t32=x;
 12869  0077F0  C06C  F075         	movff	___mflot32_2_int32@x,___mflot32_2_int32@mf
 12870  0077F4  C06D  F076         	movff	___mflot32_2_int32@x+1,___mflot32_2_int32@mf+1
 12871  0077F8  C06E  F077         	movff	___mflot32_2_int32@x+2,___mflot32_2_int32@mf+2
 12872  0077FC  C06F  F078         	movff	___mflot32_2_int32@x+3,___mflot32_2_int32@mf+3
 12873                           
 12874                           ;ui.c: 83: ret=mf.stru.significand;
 12875  007800  C075  F071         	movff	___mflot32_2_int32@mf,___mflot32_2_int32@ret
 12876  007804  C076  F072         	movff	___mflot32_2_int32@mf+1,___mflot32_2_int32@ret+1
 12877  007808  0100               	movlb	0	; () banked
 12878  00780A  6B73               	clrf	(___mflot32_2_int32@ret+2)& (0+255),b
 12879  00780C  6B74               	clrf	(___mflot32_2_int32@ret+3)& (0+255),b
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;ui.c: 84: for(i=0;i<mf.stru.exponent;i++){
 12883  00780E  0E00               	movlw	0
 12884  007810  0100               	movlb	0	; () banked
 12885  007812  6F70               	movwf	___mflot32_2_int32@i& (0+255),b
 12886  007814  D01D               	goto	l15315
 12887  007816                     l15311:
 12888                           
 12889                           ; BSR set to: 0
 12890                           ;ui.c: 85: ret*=10;
 12891  007816  C071  F060         	movff	___mflot32_2_int32@ret,___lmul@multiplier
 12892  00781A  C072  F061         	movff	___mflot32_2_int32@ret+1,___lmul@multiplier+1
 12893  00781E  C073  F062         	movff	___mflot32_2_int32@ret+2,___lmul@multiplier+2
 12894  007822  C074  F063         	movff	___mflot32_2_int32@ret+3,___lmul@multiplier+3
 12895  007826  0E0A               	movlw	10
 12896  007828  0100               	movlb	0	; () banked
 12897  00782A  6F64               	movwf	___lmul@multiplicand& (0+255),b
 12898  00782C  0E00               	movlw	0
 12899  00782E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12900  007830  0E00               	movlw	0
 12901  007832  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12902  007834  0E00               	movlw	0
 12903  007836  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12904  007838  ECBD  F043         	call	___lmul	;wreg free
 12905  00783C  C060  F071         	movff	?___lmul,___mflot32_2_int32@ret
 12906  007840  C061  F072         	movff	?___lmul+1,___mflot32_2_int32@ret+1
 12907  007844  C062  F073         	movff	?___lmul+2,___mflot32_2_int32@ret+2
 12908  007848  C063  F074         	movff	?___lmul+3,___mflot32_2_int32@ret+3
 12909  00784C  0100               	movlb	0	; () banked
 12910  00784E  2B70               	incf	___mflot32_2_int32@i& (0+255),f,b
 12911  007850                     l15315:
 12912                           
 12913                           ; BSR set to: 0
 12914  007850  0100               	movlb	0	; () banked
 12915  007852  5177               	movf	(___mflot32_2_int32@mf+2)& (0+255),w,b
 12916  007854  0100               	movlb	0	; () banked
 12917  007856  5D70               	subwf	___mflot32_2_int32@i& (0+255),w,b
 12918  007858  A0D8               	btfss	status,0,c
 12919  00785A  D7DD               	goto	l15311
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;ui.c: 86: }
 12923                           ;ui.c: 87: if(mf.stru.sign)ret=((~ret)+1);
 12924                           
 12925                           ; BSR set to: 0
 12926  00785C  0100               	movlb	0	; () banked
 12927  00785E  5178               	movf	(___mflot32_2_int32@mf+3)& (0+255),w,b
 12928  007860  B4D8               	btfsc	status,2,c
 12929  007862  D009               	goto	l15321
 12930                           
 12931                           ; BSR set to: 0
 12932  007864  0100               	movlb	0	; () banked
 12933  007866  1F74               	comf	(___mflot32_2_int32@ret+3)& (0+255),f,b
 12934  007868  1F73               	comf	(___mflot32_2_int32@ret+2)& (0+255),f,b
 12935  00786A  1F72               	comf	(___mflot32_2_int32@ret+1)& (0+255),f,b
 12936  00786C  6D71               	negf	___mflot32_2_int32@ret& (0+255),b
 12937  00786E  0E00               	movlw	0
 12938  007870  2372               	addwfc	(___mflot32_2_int32@ret+1)& (0+255),f,b
 12939  007872  2373               	addwfc	(___mflot32_2_int32@ret+2)& (0+255),f,b
 12940  007874  2374               	addwfc	(___mflot32_2_int32@ret+3)& (0+255),f,b
 12941  007876                     l15321:
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;ui.c: 88: return ret;
 12945  007876  C071  F06C         	movff	___mflot32_2_int32@ret,?___mflot32_2_int32
 12946  00787A  C072  F06D         	movff	___mflot32_2_int32@ret+1,?___mflot32_2_int32+1
 12947  00787E  C073  F06E         	movff	___mflot32_2_int32@ret+2,?___mflot32_2_int32+2
 12948  007882  C074  F06F         	movff	___mflot32_2_int32@ret+3,?___mflot32_2_int32+3
 12949  007886  0012               	return	
 12950  007888                     __end_of___mflot32_2_int32:
 12951                           	opt stack 0
 12952                           tblptru	equ	0xFF8
 12953                           tblptrh	equ	0xFF7
 12954                           tblptrl	equ	0xFF6
 12955                           tablat	equ	0xFF5
 12956                           prodh	equ	0xFF4
 12957                           prodl	equ	0xFF3
 12958                           intcon	equ	0xFF2
 12959                           postinc0	equ	0xFEE
 12960                           wreg	equ	0xFE8
 12961                           indf1	equ	0xFE7
 12962                           postinc1	equ	0xFE6
 12963                           postdec1	equ	0xFE5
 12964                           plusw1	equ	0xFE3
 12965                           fsr1h	equ	0xFE2
 12966                           fsr1l	equ	0xFE1
 12967                           indf2	equ	0xFDF
 12968                           postinc2	equ	0xFDE
 12969                           postdec2	equ	0xFDD
 12970                           plusw2	equ	0xFDB
 12971                           fsr2h	equ	0xFDA
 12972                           fsr2l	equ	0xFD9
 12973                           status	equ	0xFD8
 12974                           
 12975 ;; *************** function ___exit_menu_to_home_unsave *****************
 12976 ;; Defined at:
 12977 ;;		line 349 in file "src/api/key_menu.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;		None
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;		None
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1    wreg      void 
 12984 ;; Registers used:
 12985 ;;		wreg, status,2
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/0
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12995 ;;Total ram usage:        0 bytes
 12996 ;; Hardware stack levels used:    1
 12997 ;; Hardware stack levels required when called:    4
 12998 ;; This function calls:
 12999 ;;		Nothing
 13000 ;; This function is called by:
 13001 ;;		___set_short_pose_size
 13002 ;;		___set_short_diff_calib
 13003 ;;		___set_short_pr_calib
 13004 ;;		___set_short_poly_coefic
 13005 ;;		___set_short_warn_type
 13006 ;;		___set_short_warn_value
 13007 ;;		___set_short_epr_param
 13008 ;;		___set_short_epr_ilp_scale
 13009 ;;		___set_long_density
 13010 ;;		___set_long_base_zero
 13011 ;;		___set_long_bar_level_scale
 13012 ;;		___set_long_work_mode
 13013 ;;		_key_process_set_long
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text65
 13018  00999E                     __ptext65:
 13019                           	opt stack 0
 13020  00999E                     ___exit_menu_to_home_unsave:
 13021                           	opt stack 23
 13022                           
 13023                           ;key_menu.c: 351: menu=0x00;
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;incstack = 0
 13027  00999E  0E00               	movlw	0
 13028  0099A0  6E33               	movwf	_menu,c	;volatile
 13029                           
 13030                           ;key_menu.c: 352: subMenu=0x00;
 13031  0099A2  0E00               	movlw	0
 13032  0099A4  6E32               	movwf	_subMenu,c	;volatile
 13033                           
 13034                           ;key_menu.c: 354: adjValue=0;
 13035  0099A6  0E00               	movlw	0
 13036  0099A8  6E39               	movwf	_adjValue,c	;volatile
 13037  0099AA  0E00               	movlw	0
 13038  0099AC  6E3A               	movwf	_adjValue+1,c	;volatile
 13039  0099AE  0E00               	movlw	0
 13040  0099B0  6E3B               	movwf	_adjValue+2,c	;volatile
 13041  0099B2  0E00               	movlw	0
 13042  0099B4  6E3C               	movwf	_adjValue+3,c	;volatile
 13043                           
 13044                           ;key_menu.c: 355: m_floatAdj.t32=0;
 13045  0099B6  0E00               	movlw	0
 13046  0099B8  6E35               	movwf	_m_floatAdj,c
 13047  0099BA  0E00               	movlw	0
 13048  0099BC  6E36               	movwf	_m_floatAdj+1,c
 13049  0099BE  0E00               	movlw	0
 13050  0099C0  6E37               	movwf	_m_floatAdj+2,c
 13051  0099C2  0E00               	movlw	0
 13052  0099C4  6E38               	movwf	_m_floatAdj+3,c
 13053                           
 13054                           ;key_menu.c: 356: adjLocation=0x00;
 13055  0099C6  0E00               	movlw	0
 13056  0099C8  6E3F               	movwf	_adjLocation,c	;volatile
 13057                           
 13058                           ;key_menu.c: 358: calibRow=0;
 13059  0099CA  0E00               	movlw	0
 13060  0099CC  6E31               	movwf	_calibRow,c	;volatile
 13061                           
 13062                           ;key_menu.c: 359: calibCol=0;
 13063  0099CE  0E00               	movlw	0
 13064  0099D0  6E30               	movwf	_calibCol,c	;volatile
 13065                           
 13066                           ;key_menu.c: 360: passWord=0x00;
 13067  0099D2  0E00               	movlw	0
 13068  0099D4  6E3E               	movwf	_passWord+1,c	;volatile
 13069  0099D6  0E00               	movlw	0
 13070  0099D8  6E3D               	movwf	_passWord,c	;volatile
 13071  0099DA  0012               	return		;funcret
 13072  0099DC                     __end_of___exit_menu_to_home_unsave:
 13073                           	opt stack 0
 13074                           tblptru	equ	0xFF8
 13075                           tblptrh	equ	0xFF7
 13076                           tblptrl	equ	0xFF6
 13077                           tablat	equ	0xFF5
 13078                           prodh	equ	0xFF4
 13079                           prodl	equ	0xFF3
 13080                           intcon	equ	0xFF2
 13081                           postinc0	equ	0xFEE
 13082                           wreg	equ	0xFE8
 13083                           indf1	equ	0xFE7
 13084                           postinc1	equ	0xFE6
 13085                           postdec1	equ	0xFE5
 13086                           plusw1	equ	0xFE3
 13087                           fsr1h	equ	0xFE2
 13088                           fsr1l	equ	0xFE1
 13089                           indf2	equ	0xFDF
 13090                           postinc2	equ	0xFDE
 13091                           postdec2	equ	0xFDD
 13092                           plusw2	equ	0xFDB
 13093                           fsr2h	equ	0xFDA
 13094                           fsr2l	equ	0xFD9
 13095                           status	equ	0xFD8
 13096                           
 13097 ;; *************** function ___enter_menu_calib_press_diff *****************
 13098 ;; Defined at:
 13099 ;;		line 195 in file "src/api/key_menu.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;  row             1    wreg     unsigned char 
 13102 ;;  col             1   31[COMRAM] unsigned char 
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;  row             1   35[BANK0 ] unsigned char 
 13105 ;;  t32             4   38[BANK0 ] long 
 13106 ;;  stp             2   36[BANK0 ] PTR struct .
 13107 ;;		 -> diff_prCalibTabDef(162), 
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1    wreg      void 
 13110 ;; Registers used:
 13111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13117 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13119 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13120 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13121 ;;Total ram usage:       14 bytes
 13122 ;; Hardware stack levels used:    1
 13123 ;; Hardware stack levels required when called:    6
 13124 ;; This function calls:
 13125 ;;		___int32_2_mflot32
 13126 ;; This function is called by:
 13127 ;;		_key_process_set_down_long
 13128 ;;		___set_short_diff_calib
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132                           	psect	text66
 13133  00631E                     __ptext66:
 13134                           	opt stack 0
 13135  00631E                     ___enter_menu_calib_press_diff:
 13136                           	opt stack 21
 13137                           
 13138                           ;incstack = 0
 13139                           ;___enter_menu_calib_press_diff@row stored from wreg
 13140  00631E  0100               	movlb	0	; () banked
 13141  006320  6F83               	movwf	___enter_menu_calib_press_diff@row& (0+255),b
 13142                           
 13143                           ;key_menu.c: 198: int32_t t32;
 13144                           ;key_menu.c: 199: st_prCalibTabDef* stp;
 13145                           ;key_menu.c: 201: menu=0x50;
 13146  006322  0E50               	movlw	80
 13147  006324  6E33               	movwf	_menu,c	;volatile
 13148                           
 13149                           ;key_menu.c: 202: subMenu=0;
 13150  006326  0E00               	movlw	0
 13151  006328  6E32               	movwf	_subMenu,c	;volatile
 13152                           
 13153                           ;key_menu.c: 203: calibRow=row;
 13154  00632A  C083  F031         	movff	___enter_menu_calib_press_diff@row,_calibRow	;volatile
 13155                           
 13156                           ;key_menu.c: 204: calibCol=col;
 13157  00632E  C020  F030         	movff	___enter_menu_calib_press_diff@col,_calibCol	;volatile
 13158                           
 13159                           ;key_menu.c: 205: stp=(st_prCalibTabDef*)(&diff_prCalibTabDef);
 13160  006332  0E10               	movlw	low _diff_prCalibTabDef
 13161  006334  0100               	movlb	0	; () banked
 13162  006336  6F84               	movwf	___enter_menu_calib_press_diff@stp& (0+255),b
 13163  006338  0E03               	movlw	high _diff_prCalibTabDef
 13164  00633A  0100               	movlb	0	; () banked
 13165  00633C  6F85               	movwf	(___enter_menu_calib_press_diff@stp+1)& (0+255),b
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;key_menu.c: 206: if(col==0){
 13169  00633E  5020               	movf	___enter_menu_calib_press_diff@col,w,c
 13170  006340  A4D8               	btfss	status,2,c
 13171  006342  D012               	goto	l15163
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;key_menu.c: 207: *((uint8_t*)(&adjValue))=stp->prCalibRow[row].pCount;
 13175  006344  0100               	movlb	0	; () banked
 13176  006346  5183               	movf	___enter_menu_calib_press_diff@row& (0+255),w,b
 13177  006348  0D34               	mullw	52
 13178  00634A  0E04               	movlw	4
 13179  00634C  26F3               	addwf	prodl,f,c
 13180  00634E  0E00               	movlw	0
 13181  006350  22F4               	addwfc	prodh,f,c
 13182  006352  50F3               	movf	prodl,w,c
 13183  006354  0100               	movlb	0	; () banked
 13184  006356  2584               	addwf	___enter_menu_calib_press_diff@stp& (0+255),w,b
 13185  006358  6ED9               	movwf	fsr2l,c
 13186  00635A  50F4               	movf	prodh,w,c
 13187  00635C  0100               	movlb	0	; () banked
 13188  00635E  2185               	addwfc	(___enter_menu_calib_press_diff@stp+1)& (0+255),w,b
 13189  006360  6EDA               	movwf	fsr2h,c
 13190  006362  50DF               	movf	indf2,w,c
 13191  006364  6E39               	movwf	_adjValue,c
 13192                           
 13193                           ;key_menu.c: 208: }else{
 13194  006366  D05A               	goto	l15169
 13195  006368                     l15163:
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;key_menu.c: 209: t32=stp->prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue;
 13199  006368  0EFC               	movlw	252
 13200  00636A  0100               	movlb	0	; () banked
 13201  00636C  6F7D               	movwf	??___enter_menu_calib_press_diff& (0+255),b
 13202  00636E  0EFF               	movlw	255
 13203  006370  0100               	movlb	0	; () banked
 13204  006372  6F7E               	movwf	(??___enter_menu_calib_press_diff+1)& (0+255),b
 13205  006374  5030               	movf	_calibCol,w,c	;volatile
 13206  006376  0100               	movlb	0	; () banked
 13207  006378  6F7F               	movwf	(??___enter_menu_calib_press_diff+2)& (0+255),b
 13208  00637A  6B80               	clrf	(??___enter_menu_calib_press_diff+3)& (0+255),b
 13209  00637C  0100               	movlb	0	; () banked
 13210  00637E  90D8               	bcf	status,0,c
 13211  006380  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13212  006382  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13213  006384  0100               	movlb	0	; () banked
 13214  006386  90D8               	bcf	status,0,c
 13215  006388  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13216  00638A  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13217  00638C  0100               	movlb	0	; () banked
 13218  00638E  90D8               	bcf	status,0,c
 13219  006390  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13220  006392  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13221  006394  0100               	movlb	0	; () banked
 13222  006396  517D               	movf	??___enter_menu_calib_press_diff& (0+255),w,b
 13223  006398  0100               	movlb	0	; () banked
 13224  00639A  277F               	addwf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13225  00639C  0100               	movlb	0	; () banked
 13226  00639E  517E               	movf	(??___enter_menu_calib_press_diff+1)& (0+255),w,b
 13227  0063A0  0100               	movlb	0	; () banked
 13228  0063A2  2380               	addwfc	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13229  0063A4  5031               	movf	_calibRow,w,c	;volatile
 13230  0063A6  0D34               	mullw	52
 13231  0063A8  0E04               	movlw	4
 13232  0063AA  26F3               	addwf	prodl,f,c
 13233  0063AC  0E00               	movlw	0
 13234  0063AE  22F4               	addwfc	prodh,f,c
 13235  0063B0  C084  F081         	movff	___enter_menu_calib_press_diff@stp,??___enter_menu_calib_press_diff+4
 13236  0063B4  C085  F082         	movff	___enter_menu_calib_press_diff@stp+1,??___enter_menu_calib_press_diff+5
 13237  0063B8  50F3               	movf	prodl,w,c
 13238  0063BA  0100               	movlb	0	; () banked
 13239  0063BC  2781               	addwf	(??___enter_menu_calib_press_diff+4)& (0+255),f,b
 13240  0063BE  50F4               	movf	prodh,w,c
 13241  0063C0  0100               	movlb	0	; () banked
 13242  0063C2  2382               	addwfc	(??___enter_menu_calib_press_diff+5)& (0+255),f,b
 13243  0063C4  0100               	movlb	0	; () banked
 13244  0063C6  517F               	movf	(??___enter_menu_calib_press_diff+2)& (0+255),w,b
 13245  0063C8  0100               	movlb	0	; () banked
 13246  0063CA  2581               	addwf	(??___enter_menu_calib_press_diff+4)& (0+255),w,b
 13247  0063CC  6ED9               	movwf	fsr2l,c
 13248  0063CE  0100               	movlb	0	; () banked
 13249  0063D0  5180               	movf	(??___enter_menu_calib_press_diff+3)& (0+255),w,b
 13250  0063D2  0100               	movlb	0	; () banked
 13251  0063D4  2182               	addwfc	(??___enter_menu_calib_press_diff+5)& (0+255),w,b
 13252  0063D6  6EDA               	movwf	fsr2h,c
 13253  0063D8  CFDE F086          	movff	postinc2,___enter_menu_calib_press_diff@t32
 13254  0063DC  CFDE F087          	movff	postinc2,___enter_menu_calib_press_diff@t32+1
 13255  0063E0  CFDE F088          	movff	postinc2,___enter_menu_calib_press_diff@t32+2
 13256  0063E4  CFDE F089          	movff	postinc2,___enter_menu_calib_press_diff@t32+3
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;key_menu.c: 210: t32=__int32_2_mflot32(t32);
 13260  0063E8  C086  F06D         	movff	___enter_menu_calib_press_diff@t32,___int32_2_mflot32@x
 13261  0063EC  C087  F06E         	movff	___enter_menu_calib_press_diff@t32+1,___int32_2_mflot32@x+1
 13262  0063F0  C088  F06F         	movff	___enter_menu_calib_press_diff@t32+2,___int32_2_mflot32@x+2
 13263  0063F4  C089  F070         	movff	___enter_menu_calib_press_diff@t32+3,___int32_2_mflot32@x+3
 13264  0063F8  EC08  F030         	call	___int32_2_mflot32	;wreg free
 13265  0063FC  C06D  F086         	movff	?___int32_2_mflot32,___enter_menu_calib_press_diff@t32
 13266  006400  C06E  F087         	movff	?___int32_2_mflot32+1,___enter_menu_calib_press_diff@t32+1
 13267  006404  C06F  F088         	movff	?___int32_2_mflot32+2,___enter_menu_calib_press_diff@t32+2
 13268  006408  C070  F089         	movff	?___int32_2_mflot32+3,___enter_menu_calib_press_diff@t32+3
 13269                           
 13270                           ;key_menu.c: 211: m_floatAdj.t32=t32;
 13271  00640C  C086  F035         	movff	___enter_menu_calib_press_diff@t32,_m_floatAdj
 13272  006410  C087  F036         	movff	___enter_menu_calib_press_diff@t32+1,_m_floatAdj+1
 13273  006414  C088  F037         	movff	___enter_menu_calib_press_diff@t32+2,_m_floatAdj+2
 13274  006418  C089  F038         	movff	___enter_menu_calib_press_diff@t32+3,_m_floatAdj+3
 13275  00641C                     l15169:
 13276                           
 13277                           ;key_menu.c: 212: }
 13278                           ;key_menu.c: 213: adjLocation=0;
 13279  00641C  0E00               	movlw	0
 13280  00641E  6E3F               	movwf	_adjLocation,c	;volatile
 13281  006420  0012               	return		;funcret
 13282  006422                     __end_of___enter_menu_calib_press_diff:
 13283                           	opt stack 0
 13284                           tblptru	equ	0xFF8
 13285                           tblptrh	equ	0xFF7
 13286                           tblptrl	equ	0xFF6
 13287                           tablat	equ	0xFF5
 13288                           prodh	equ	0xFF4
 13289                           prodl	equ	0xFF3
 13290                           intcon	equ	0xFF2
 13291                           postinc0	equ	0xFEE
 13292                           wreg	equ	0xFE8
 13293                           indf1	equ	0xFE7
 13294                           postinc1	equ	0xFE6
 13295                           postdec1	equ	0xFE5
 13296                           plusw1	equ	0xFE3
 13297                           fsr1h	equ	0xFE2
 13298                           fsr1l	equ	0xFE1
 13299                           indf2	equ	0xFDF
 13300                           postinc2	equ	0xFDE
 13301                           postdec2	equ	0xFDD
 13302                           plusw2	equ	0xFDB
 13303                           fsr2h	equ	0xFDA
 13304                           fsr2l	equ	0xFD9
 13305                           status	equ	0xFD8
 13306                           
 13307 ;; *************** function ___enter_menu_password *****************
 13308 ;; Defined at:
 13309 ;;		line 103 in file "src/api/key_menu.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;		None
 13312 ;; Auto vars:     Size  Location     Type
 13313 ;;		None
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  1    wreg      void 
 13316 ;; Registers used:
 13317 ;;		wreg, status,2
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13327 ;;Total ram usage:        0 bytes
 13328 ;; Hardware stack levels used:    1
 13329 ;; Hardware stack levels required when called:    4
 13330 ;; This function calls:
 13331 ;;		Nothing
 13332 ;; This function is called by:
 13333 ;;		_key_process_set
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           	psect	text67
 13338  00A308                     __ptext67:
 13339                           	opt stack 0
 13340  00A308                     ___enter_menu_password:
 13341                           	opt stack 24
 13342                           
 13343                           ;key_menu.c: 105: menu=0x10;
 13344                           
 13345                           ;incstack = 0
 13346  00A308  0E10               	movlw	16
 13347  00A30A  6E33               	movwf	_menu,c	;volatile
 13348                           
 13349                           ;key_menu.c: 106: subMenu=0x00;
 13350  00A30C  0E00               	movlw	0
 13351  00A30E  6E32               	movwf	_subMenu,c	;volatile
 13352                           
 13353                           ;key_menu.c: 108: passWord=0x00;
 13354  00A310  0E00               	movlw	0
 13355  00A312  6E3E               	movwf	_passWord+1,c	;volatile
 13356  00A314  0E00               	movlw	0
 13357  00A316  6E3D               	movwf	_passWord,c	;volatile
 13358                           
 13359                           ;key_menu.c: 109: adjLocation=0x00;
 13360  00A318  0E00               	movlw	0
 13361  00A31A  6E3F               	movwf	_adjLocation,c	;volatile
 13362  00A31C  0012               	return		;funcret
 13363  00A31E                     __end_of___enter_menu_password:
 13364                           	opt stack 0
 13365                           tblptru	equ	0xFF8
 13366                           tblptrh	equ	0xFF7
 13367                           tblptrl	equ	0xFF6
 13368                           tablat	equ	0xFF5
 13369                           prodh	equ	0xFF4
 13370                           prodl	equ	0xFF3
 13371                           intcon	equ	0xFF2
 13372                           postinc0	equ	0xFEE
 13373                           wreg	equ	0xFE8
 13374                           indf1	equ	0xFE7
 13375                           postinc1	equ	0xFE6
 13376                           postdec1	equ	0xFE5
 13377                           plusw1	equ	0xFE3
 13378                           fsr1h	equ	0xFE2
 13379                           fsr1l	equ	0xFE1
 13380                           indf2	equ	0xFDF
 13381                           postinc2	equ	0xFDE
 13382                           postdec2	equ	0xFDD
 13383                           plusw2	equ	0xFDB
 13384                           fsr2h	equ	0xFDA
 13385                           fsr2l	equ	0xFD9
 13386                           status	equ	0xFD8
 13387                           
 13388 ;; *************** function _key_process_down *****************
 13389 ;; Defined at:
 13390 ;;		line 403 in file "src/api/key_menu.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;		None
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;		None
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1    wreg      void 
 13397 ;; Registers used:
 13398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13399 ;; Tracked objects:
 13400 ;;		On entry : 0/0
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13408 ;;Total ram usage:        0 bytes
 13409 ;; Hardware stack levels used:    1
 13410 ;; Hardware stack levels required when called:    6
 13411 ;; This function calls:
 13412 ;;		___down_dpr_calib
 13413 ;;		___down_home_adj
 13414 ;;		___down_pose_size
 13415 ;;		___down_pr_calib
 13416 ;;		_key_shift_loc
 13417 ;; This function is called by:
 13418 ;;		_key_process
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           	psect	text68
 13423  005126                     __ptext68:
 13424                           	opt stack 0
 13425  005126                     _key_process_down:
 13426                           	opt stack 23
 13427                           
 13428                           ;key_menu.c: 405: switch(menu){
 13429                           
 13430                           ;incstack = 0
 13431  005126  D084               	goto	l16925
 13432  005128                     l16899:
 13433  005128  ECF2  F050         	call	___down_home_adj	;wreg free
 13434  00512C  0012               	return	
 13435  00512E                     l16901:
 13436  00512E  0E3F               	movlw	low _adjLocation
 13437  005130  0100               	movlb	0	; () banked
 13438  005132  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13439  005134  0E00               	movlw	high _adjLocation
 13440  005136  0100               	movlb	0	; () banked
 13441  005138  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13442  00513A  0E00               	movlw	0
 13443  00513C  0100               	movlb	0	; () banked
 13444  00513E  6F62               	movwf	key_shift_loc@min& (0+255),b
 13445  005140  0E03               	movlw	3
 13446  005142  0100               	movlb	0	; () banked
 13447  005144  6F63               	movwf	key_shift_loc@max& (0+255),b
 13448  005146  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13449  00514A  0012               	return	
 13450  00514C                     l16903:
 13451  00514C  0E3F               	movlw	low _adjLocation
 13452  00514E  0100               	movlb	0	; () banked
 13453  005150  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13454  005152  0E00               	movlw	high _adjLocation
 13455  005154  0100               	movlb	0	; () banked
 13456  005156  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13457  005158  0E00               	movlw	0
 13458  00515A  0100               	movlb	0	; () banked
 13459  00515C  6F62               	movwf	key_shift_loc@min& (0+255),b
 13460  00515E  0E04               	movlw	4
 13461  005160  0100               	movlb	0	; () banked
 13462  005162  6F63               	movwf	key_shift_loc@max& (0+255),b
 13463  005164  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13464  005168  0012               	return	
 13465  00516A                     l16905:
 13466  00516A  EC75  F04E         	call	___down_pose_size	;wreg free
 13467  00516E  0012               	return	
 13468  005170                     l16907:
 13469  005170  0E3F               	movlw	low _adjLocation
 13470  005172  0100               	movlb	0	; () banked
 13471  005174  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13472  005176  0E00               	movlw	high _adjLocation
 13473  005178  0100               	movlb	0	; () banked
 13474  00517A  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13475  00517C  0E00               	movlw	0
 13476  00517E  0100               	movlb	0	; () banked
 13477  005180  6F62               	movwf	key_shift_loc@min& (0+255),b
 13478  005182  0E05               	movlw	5
 13479  005184  0100               	movlb	0	; () banked
 13480  005186  6F63               	movwf	key_shift_loc@max& (0+255),b
 13481  005188  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13482  00518C  0012               	return	
 13483  00518E                     l16909:
 13484  00518E  EC4A  F050         	call	___down_dpr_calib	;wreg free
 13485  005192  0012               	return	
 13486  005194                     l16911:
 13487  005194  EC38  F050         	call	___down_pr_calib	;wreg free
 13488  005198  0012               	return	
 13489  00519A                     l16913:
 13490  00519A  0E3F               	movlw	low _adjLocation
 13491  00519C  0100               	movlb	0	; () banked
 13492  00519E  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13493  0051A0  0E00               	movlw	high _adjLocation
 13494  0051A2  0100               	movlb	0	; () banked
 13495  0051A4  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13496  0051A6  0E00               	movlw	0
 13497  0051A8  0100               	movlb	0	; () banked
 13498  0051AA  6F62               	movwf	key_shift_loc@min& (0+255),b
 13499  0051AC  0E02               	movlw	2
 13500  0051AE  0100               	movlb	0	; () banked
 13501  0051B0  6F63               	movwf	key_shift_loc@max& (0+255),b
 13502  0051B2  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13503                           
 13504                           ;key_menu.c: 414: case 0x80:break;
 13505  0051B6  0012               	return	
 13506  0051B8                     l16915:
 13507  0051B8  0E3F               	movlw	low _adjLocation
 13508  0051BA  0100               	movlb	0	; () banked
 13509  0051BC  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13510  0051BE  0E00               	movlw	high _adjLocation
 13511  0051C0  0100               	movlb	0	; () banked
 13512  0051C2  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13513  0051C4  0E00               	movlw	0
 13514  0051C6  0100               	movlb	0	; () banked
 13515  0051C8  6F62               	movwf	key_shift_loc@min& (0+255),b
 13516  0051CA  0E04               	movlw	4
 13517  0051CC  0100               	movlb	0	; () banked
 13518  0051CE  6F63               	movwf	key_shift_loc@max& (0+255),b
 13519  0051D0  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13520  0051D4  0012               	return	
 13521  0051D6                     l16917:
 13522  0051D6  0E3F               	movlw	low _adjLocation
 13523  0051D8  0100               	movlb	0	; () banked
 13524  0051DA  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13525  0051DC  0E00               	movlw	high _adjLocation
 13526  0051DE  0100               	movlb	0	; () banked
 13527  0051E0  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13528  0051E2  0E00               	movlw	0
 13529  0051E4  0100               	movlb	0	; () banked
 13530  0051E6  6F62               	movwf	key_shift_loc@min& (0+255),b
 13531  0051E8  0E04               	movlw	4
 13532  0051EA  0100               	movlb	0	; () banked
 13533  0051EC  6F63               	movwf	key_shift_loc@max& (0+255),b
 13534  0051EE  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13535  0051F2  0012               	return	
 13536  0051F4                     l16919:
 13537  0051F4  0E3F               	movlw	low _adjLocation
 13538  0051F6  0100               	movlb	0	; () banked
 13539  0051F8  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13540  0051FA  0E00               	movlw	high _adjLocation
 13541  0051FC  0100               	movlb	0	; () banked
 13542  0051FE  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13543  005200  0E00               	movlw	0
 13544  005202  0100               	movlb	0	; () banked
 13545  005204  6F62               	movwf	key_shift_loc@min& (0+255),b
 13546  005206  0E04               	movlw	4
 13547  005208  0100               	movlb	0	; () banked
 13548  00520A  6F63               	movwf	key_shift_loc@max& (0+255),b
 13549  00520C  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13550  005210  0012               	return	
 13551  005212                     l16921:
 13552  005212  0E3F               	movlw	low _adjLocation
 13553  005214  0100               	movlb	0	; () banked
 13554  005216  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13555  005218  0E00               	movlw	high _adjLocation
 13556  00521A  0100               	movlb	0	; () banked
 13557  00521C  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13558  00521E  0E00               	movlw	0
 13559  005220  0100               	movlb	0	; () banked
 13560  005222  6F62               	movwf	key_shift_loc@min& (0+255),b
 13561  005224  0E02               	movlw	2
 13562  005226  0100               	movlb	0	; () banked
 13563  005228  6F63               	movwf	key_shift_loc@max& (0+255),b
 13564  00522A  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13565                           
 13566                           ;key_menu.c: 420: }
 13567                           
 13568                           ;key_menu.c: 419: default:break;
 13569  00522E  0012               	return	
 13570  005230                     l16925:
 13571  005230  5033               	movf	_menu,w,c	;volatile
 13572                           
 13573                           ; Switch size 1, requested type "space"
 13574                           ; Number of cases is 13, Range of values is 0 to 192
 13575                           ; switch strategies available:
 13576                           ; Name         Instructions Cycles
 13577                           ; simple_byte           40    21 (average)
 13578                           ;	Chosen strategy is simple_byte
 13579  005232  0A00               	xorlw	0	; case 0
 13580  005234  B4D8               	btfsc	status,2,c
 13581  005236  D778               	goto	l16899
 13582  005238  0A10               	xorlw	16	; case 16
 13583  00523A  B4D8               	btfsc	status,2,c
 13584  00523C  D778               	goto	l16901
 13585  00523E  0A30               	xorlw	48	; case 32
 13586  005240  B4D8               	btfsc	status,2,c
 13587  005242  D784               	goto	l16903
 13588  005244  0A10               	xorlw	16	; case 48
 13589  005246  B4D8               	btfsc	status,2,c
 13590  005248  D790               	goto	l16905
 13591  00524A  0A70               	xorlw	112	; case 64
 13592  00524C  B4D8               	btfsc	status,2,c
 13593  00524E  D790               	goto	l16907
 13594  005250  0A10               	xorlw	16	; case 80
 13595  005252  B4D8               	btfsc	status,2,c
 13596  005254  D79C               	goto	l16909
 13597  005256  0A30               	xorlw	48	; case 96
 13598  005258  B4D8               	btfsc	status,2,c
 13599  00525A  D79C               	goto	l16911
 13600  00525C  0A10               	xorlw	16	; case 112
 13601  00525E  B4D8               	btfsc	status,2,c
 13602  005260  D79C               	goto	l16913
 13603  005262  0AF0               	xorlw	240	; case 128
 13604  005264  B4D8               	btfsc	status,2,c
 13605  005266  0012               	return	
 13606  005268  0A10               	xorlw	16	; case 144
 13607  00526A  B4D8               	btfsc	status,2,c
 13608  00526C  D7A5               	goto	l16915
 13609  00526E  0A30               	xorlw	48	; case 160
 13610  005270  B4D8               	btfsc	status,2,c
 13611  005272  D7B1               	goto	l16917
 13612  005274  0A10               	xorlw	16	; case 176
 13613  005276  B4D8               	btfsc	status,2,c
 13614  005278  D7BD               	goto	l16919
 13615  00527A  0A70               	xorlw	112	; case 192
 13616  00527C  A4D8               	btfss	status,2,c
 13617  00527E  0012               	return	
 13618  005280  D7C8               	goto	l16921
 13619  005282                     __end_of_key_process_down:
 13620                           	opt stack 0
 13621                           tblptru	equ	0xFF8
 13622                           tblptrh	equ	0xFF7
 13623                           tblptrl	equ	0xFF6
 13624                           tablat	equ	0xFF5
 13625                           prodh	equ	0xFF4
 13626                           prodl	equ	0xFF3
 13627                           intcon	equ	0xFF2
 13628                           postinc0	equ	0xFEE
 13629                           wreg	equ	0xFE8
 13630                           indf1	equ	0xFE7
 13631                           postinc1	equ	0xFE6
 13632                           postdec1	equ	0xFE5
 13633                           plusw1	equ	0xFE3
 13634                           fsr1h	equ	0xFE2
 13635                           fsr1l	equ	0xFE1
 13636                           indf2	equ	0xFDF
 13637                           postinc2	equ	0xFDE
 13638                           postdec2	equ	0xFDD
 13639                           plusw2	equ	0xFDB
 13640                           fsr2h	equ	0xFDA
 13641                           fsr2l	equ	0xFD9
 13642                           status	equ	0xFD8
 13643                           
 13644 ;; *************** function ___down_pr_calib *****************
 13645 ;; Defined at:
 13646 ;;		line 380 in file "src/api/key_menu.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;		None
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;		None
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  1    wreg      void 
 13653 ;; Registers used:
 13654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 0/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13664 ;;Total ram usage:        0 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; Hardware stack levels required when called:    5
 13667 ;; This function calls:
 13668 ;;		_key_shift_loc
 13669 ;; This function is called by:
 13670 ;;		_key_process_down
 13671 ;; This function uses a non-reentrant model
 13672 ;;
 13673                           
 13674                           	psect	text69
 13675  00A070                     __ptext69:
 13676                           	opt stack 0
 13677  00A070                     ___down_pr_calib:
 13678                           	opt stack 23
 13679                           
 13680                           ;key_menu.c: 382: if(calibCol){
 13681                           
 13682                           ;incstack = 0
 13683  00A070  5030               	movf	_calibCol,w,c	;volatile
 13684  00A072  B4D8               	btfsc	status,2,c
 13685  00A074  0012               	return	
 13686                           
 13687                           ;key_menu.c: 383: key_shift_loc((uint8_t*)(&adjLocation),0,4);
 13688  00A076  0E3F               	movlw	low _adjLocation
 13689  00A078  0100               	movlb	0	; () banked
 13690  00A07A  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13691  00A07C  0E00               	movlw	high _adjLocation
 13692  00A07E  0100               	movlb	0	; () banked
 13693  00A080  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13694  00A082  0E00               	movlw	0
 13695  00A084  0100               	movlb	0	; () banked
 13696  00A086  6F62               	movwf	key_shift_loc@min& (0+255),b
 13697  00A088  0E04               	movlw	4
 13698  00A08A  0100               	movlb	0	; () banked
 13699  00A08C  6F63               	movwf	key_shift_loc@max& (0+255),b
 13700  00A08E  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13701  00A092  0012               	return	
 13702  00A094                     __end_of___down_pr_calib:
 13703                           	opt stack 0
 13704                           tblptru	equ	0xFF8
 13705                           tblptrh	equ	0xFF7
 13706                           tblptrl	equ	0xFF6
 13707                           tablat	equ	0xFF5
 13708                           prodh	equ	0xFF4
 13709                           prodl	equ	0xFF3
 13710                           intcon	equ	0xFF2
 13711                           postinc0	equ	0xFEE
 13712                           wreg	equ	0xFE8
 13713                           indf1	equ	0xFE7
 13714                           postinc1	equ	0xFE6
 13715                           postdec1	equ	0xFE5
 13716                           plusw1	equ	0xFE3
 13717                           fsr1h	equ	0xFE2
 13718                           fsr1l	equ	0xFE1
 13719                           indf2	equ	0xFDF
 13720                           postinc2	equ	0xFDE
 13721                           postdec2	equ	0xFDD
 13722                           plusw2	equ	0xFDB
 13723                           fsr2h	equ	0xFDA
 13724                           fsr2l	equ	0xFD9
 13725                           status	equ	0xFD8
 13726                           
 13727 ;; *************** function ___down_pose_size *****************
 13728 ;; Defined at:
 13729 ;;		line 363 in file "src/api/key_menu.c"
 13730 ;; Parameters:    Size  Location     Type
 13731 ;;		None
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;		None
 13734 ;; Return value:  Size  Location     Type
 13735 ;;                  1    wreg      void 
 13736 ;; Registers used:
 13737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13738 ;; Tracked objects:
 13739 ;;		On entry : 0/0
 13740 ;;		On exit  : 0/0
 13741 ;;		Unchanged: 0/0
 13742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13747 ;;Total ram usage:        0 bytes
 13748 ;; Hardware stack levels used:    1
 13749 ;; Hardware stack levels required when called:    5
 13750 ;; This function calls:
 13751 ;;		_key_shift_loc
 13752 ;; This function is called by:
 13753 ;;		_key_process_down
 13754 ;; This function uses a non-reentrant model
 13755 ;;
 13756                           
 13757                           	psect	text70
 13758  009CEA                     __ptext70:
 13759                           	opt stack 0
 13760  009CEA                     ___down_pose_size:
 13761                           	opt stack 23
 13762                           
 13763                           ;key_menu.c: 365: switch(subMenu){
 13764                           
 13765                           ;incstack = 0
 13766  009CEA  D00F               	goto	l15801
 13767  009CEC                     l15797:
 13768                           
 13769                           ;key_menu.c: 367: case 0x02:
 13770                           ;key_menu.c: 368: key_shift_loc((uint8_t*)(&adjLocation),0,4);break;
 13771  009CEC  0E3F               	movlw	low _adjLocation
 13772  009CEE  0100               	movlb	0	; () banked
 13773  009CF0  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13774  009CF2  0E00               	movlw	high _adjLocation
 13775  009CF4  0100               	movlb	0	; () banked
 13776  009CF6  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13777  009CF8  0E00               	movlw	0
 13778  009CFA  0100               	movlb	0	; () banked
 13779  009CFC  6F62               	movwf	key_shift_loc@min& (0+255),b
 13780  009CFE  0E04               	movlw	4
 13781  009D00  0100               	movlb	0	; () banked
 13782  009D02  6F63               	movwf	key_shift_loc@max& (0+255),b
 13783  009D04  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13784                           
 13785                           ;key_menu.c: 370: }
 13786                           
 13787                           ;key_menu.c: 369: default:break;
 13788  009D08  0012               	return	
 13789  009D0A                     l15801:
 13790  009D0A  5032               	movf	_subMenu,w,c	;volatile
 13791                           
 13792                           ; Switch size 1, requested type "space"
 13793                           ; Number of cases is 2, Range of values is 1 to 2
 13794                           ; switch strategies available:
 13795                           ; Name         Instructions Cycles
 13796                           ; simple_byte            7     4 (average)
 13797                           ;	Chosen strategy is simple_byte
 13798  009D0C  0A01               	xorlw	1	; case 1
 13799  009D0E  B4D8               	btfsc	status,2,c
 13800  009D10  D7ED               	goto	l15797
 13801  009D12  0A03               	xorlw	3	; case 2
 13802  009D14  A4D8               	btfss	status,2,c
 13803  009D16  0012               	return	
 13804  009D18  D7E9               	goto	l15797
 13805  009D1A                     __end_of___down_pose_size:
 13806                           	opt stack 0
 13807                           tblptru	equ	0xFF8
 13808                           tblptrh	equ	0xFF7
 13809                           tblptrl	equ	0xFF6
 13810                           tablat	equ	0xFF5
 13811                           prodh	equ	0xFF4
 13812                           prodl	equ	0xFF3
 13813                           intcon	equ	0xFF2
 13814                           postinc0	equ	0xFEE
 13815                           wreg	equ	0xFE8
 13816                           indf1	equ	0xFE7
 13817                           postinc1	equ	0xFE6
 13818                           postdec1	equ	0xFE5
 13819                           plusw1	equ	0xFE3
 13820                           fsr1h	equ	0xFE2
 13821                           fsr1l	equ	0xFE1
 13822                           indf2	equ	0xFDF
 13823                           postinc2	equ	0xFDE
 13824                           postdec2	equ	0xFDD
 13825                           plusw2	equ	0xFDB
 13826                           fsr2h	equ	0xFDA
 13827                           fsr2l	equ	0xFD9
 13828                           status	equ	0xFD8
 13829                           
 13830 ;; *************** function ___down_home_adj *****************
 13831 ;; Defined at:
 13832 ;;		line 387 in file "src/api/key_menu.c"
 13833 ;; Parameters:    Size  Location     Type
 13834 ;;		None
 13835 ;; Auto vars:     Size  Location     Type
 13836 ;;  t8              1   31[COMRAM] unsigned char 
 13837 ;; Return value:  Size  Location     Type
 13838 ;;                  1    wreg      void 
 13839 ;; Registers used:
 13840 ;;		wreg, status,2, status,0
 13841 ;; Tracked objects:
 13842 ;;		On entry : 0/0
 13843 ;;		On exit  : 0/0
 13844 ;;		Unchanged: 0/0
 13845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;Total ram usage:        1 bytes
 13851 ;; Hardware stack levels used:    1
 13852 ;; Hardware stack levels required when called:    4
 13853 ;; This function calls:
 13854 ;;		Nothing
 13855 ;; This function is called by:
 13856 ;;		_key_process_down
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860                           	psect	text71
 13861  00A1E4                     __ptext71:
 13862                           	opt stack 0
 13863  00A1E4                     ___down_home_adj:
 13864                           	opt stack 24
 13865                           
 13866                           ;key_menu.c: 389: uint8_t t8;
 13867                           ;key_menu.c: 392: t8=subMenu & 0x0f;
 13868                           
 13869                           ;incstack = 0
 13870  00A1E4  5032               	movf	_subMenu,w,c	;volatile
 13871  00A1E6  0B0F               	andlw	15
 13872  00A1E8  6E20               	movwf	___down_home_adj@t8,c
 13873                           
 13874                           ;key_menu.c: 393: t8++;
 13875  00A1EA  2A20               	incf	___down_home_adj@t8,f,c
 13876                           
 13877                           ;key_menu.c: 394: if(t8>3)t8=0;
 13878  00A1EC  0E03               	movlw	3
 13879  00A1EE  6420               	cpfsgt	___down_home_adj@t8,c
 13880  00A1F0  D002               	goto	l15819
 13881  00A1F2  0E00               	movlw	0
 13882  00A1F4  6E20               	movwf	___down_home_adj@t8,c
 13883  00A1F6                     l15819:
 13884                           
 13885                           ;key_menu.c: 396: subMenu &= 0xf0;
 13886  00A1F6  0EF0               	movlw	240
 13887  00A1F8  1632               	andwf	_subMenu,f,c	;volatile
 13888                           
 13889                           ;key_menu.c: 397: subMenu |= t8;
 13890  00A1FA  5020               	movf	___down_home_adj@t8,w,c
 13891  00A1FC  1232               	iorwf	_subMenu,f,c	;volatile
 13892  00A1FE  0012               	return		;funcret
 13893  00A200                     __end_of___down_home_adj:
 13894                           	opt stack 0
 13895                           tblptru	equ	0xFF8
 13896                           tblptrh	equ	0xFF7
 13897                           tblptrl	equ	0xFF6
 13898                           tablat	equ	0xFF5
 13899                           prodh	equ	0xFF4
 13900                           prodl	equ	0xFF3
 13901                           intcon	equ	0xFF2
 13902                           postinc0	equ	0xFEE
 13903                           wreg	equ	0xFE8
 13904                           indf1	equ	0xFE7
 13905                           postinc1	equ	0xFE6
 13906                           postdec1	equ	0xFE5
 13907                           plusw1	equ	0xFE3
 13908                           fsr1h	equ	0xFE2
 13909                           fsr1l	equ	0xFE1
 13910                           indf2	equ	0xFDF
 13911                           postinc2	equ	0xFDE
 13912                           postdec2	equ	0xFDD
 13913                           plusw2	equ	0xFDB
 13914                           fsr2h	equ	0xFDA
 13915                           fsr2l	equ	0xFD9
 13916                           status	equ	0xFD8
 13917                           
 13918 ;; *************** function ___down_dpr_calib *****************
 13919 ;; Defined at:
 13920 ;;		line 373 in file "src/api/key_menu.c"
 13921 ;; Parameters:    Size  Location     Type
 13922 ;;		None
 13923 ;; Auto vars:     Size  Location     Type
 13924 ;;		None
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  1    wreg      void 
 13927 ;; Registers used:
 13928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;Total ram usage:        0 bytes
 13939 ;; Hardware stack levels used:    1
 13940 ;; Hardware stack levels required when called:    5
 13941 ;; This function calls:
 13942 ;;		_key_shift_loc
 13943 ;; This function is called by:
 13944 ;;		_key_process_down
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           	psect	text72
 13949  00A094                     __ptext72:
 13950                           	opt stack 0
 13951  00A094                     ___down_dpr_calib:
 13952                           	opt stack 23
 13953                           
 13954                           ;key_menu.c: 375: if(calibCol){
 13955                           
 13956                           ;incstack = 0
 13957  00A094  5030               	movf	_calibCol,w,c	;volatile
 13958  00A096  B4D8               	btfsc	status,2,c
 13959  00A098  0012               	return	
 13960                           
 13961                           ;key_menu.c: 376: key_shift_loc((uint8_t*)(&adjLocation),0,4);
 13962  00A09A  0E3F               	movlw	low _adjLocation
 13963  00A09C  0100               	movlb	0	; () banked
 13964  00A09E  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13965  00A0A0  0E00               	movlw	high _adjLocation
 13966  00A0A2  0100               	movlb	0	; () banked
 13967  00A0A4  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13968  00A0A6  0E00               	movlw	0
 13969  00A0A8  0100               	movlb	0	; () banked
 13970  00A0AA  6F62               	movwf	key_shift_loc@min& (0+255),b
 13971  00A0AC  0E04               	movlw	4
 13972  00A0AE  0100               	movlb	0	; () banked
 13973  00A0B0  6F63               	movwf	key_shift_loc@max& (0+255),b
 13974  00A0B2  EC2D  F04C         	call	_key_shift_loc	;wreg free
 13975  00A0B6  0012               	return	
 13976  00A0B8                     __end_of___down_dpr_calib:
 13977                           	opt stack 0
 13978                           tblptru	equ	0xFF8
 13979                           tblptrh	equ	0xFF7
 13980                           tblptrl	equ	0xFF6
 13981                           tablat	equ	0xFF5
 13982                           prodh	equ	0xFF4
 13983                           prodl	equ	0xFF3
 13984                           intcon	equ	0xFF2
 13985                           postinc0	equ	0xFEE
 13986                           wreg	equ	0xFE8
 13987                           indf1	equ	0xFE7
 13988                           postinc1	equ	0xFE6
 13989                           postdec1	equ	0xFE5
 13990                           plusw1	equ	0xFE3
 13991                           fsr1h	equ	0xFE2
 13992                           fsr1l	equ	0xFE1
 13993                           indf2	equ	0xFDF
 13994                           postinc2	equ	0xFDE
 13995                           postdec2	equ	0xFDD
 13996                           plusw2	equ	0xFDB
 13997                           fsr2h	equ	0xFDA
 13998                           fsr2l	equ	0xFD9
 13999                           status	equ	0xFD8
 14000                           
 14001 ;; *************** function _key_shift_loc *****************
 14002 ;; Defined at:
 14003 ;;		line 46 in file "src/api/key_menu.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;  loc             2    0[BANK0 ] PTR unsigned char 
 14006 ;;		 -> adjLocation(1), 
 14007 ;;  min             1    2[BANK0 ] unsigned char 
 14008 ;;  max             1    3[BANK0 ] unsigned char 
 14009 ;; Auto vars:     Size  Location     Type
 14010 ;;  t8              1   31[COMRAM] unsigned char 
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  1    wreg      void 
 14013 ;; Registers used:
 14014 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14023 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14024 ;;Total ram usage:        5 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; Hardware stack levels required when called:    4
 14027 ;; This function calls:
 14028 ;;		Nothing
 14029 ;; This function is called by:
 14030 ;;		___down_pose_size
 14031 ;;		___down_dpr_calib
 14032 ;;		___down_pr_calib
 14033 ;;		_key_process_down
 14034 ;; This function uses a non-reentrant model
 14035 ;;
 14036                           
 14037                           	psect	text73
 14038  00985A                     __ptext73:
 14039                           	opt stack 0
 14040  00985A                     _key_shift_loc:
 14041                           	opt stack 24
 14042                           
 14043                           ;key_menu.c: 48: uint8_t t8=*loc;
 14044                           
 14045                           ;incstack = 0
 14046  00985A  C060  FFD9         	movff	key_shift_loc@loc,fsr2l
 14047  00985E  C061  FFDA         	movff	key_shift_loc@loc+1,fsr2h
 14048  009862  50DF               	movf	indf2,w,c
 14049  009864  6E20               	movwf	key_shift_loc@t8,c
 14050                           
 14051                           ;key_menu.c: 49: if(min>=max){
 14052  009866  0100               	movlb	0	; () banked
 14053  009868  5163               	movf	key_shift_loc@max& (0+255),w,b
 14054  00986A  0100               	movlb	0	; () banked
 14055  00986C  5D62               	subwf	key_shift_loc@min& (0+255),w,b
 14056  00986E  B0D8               	btfsc	status,0,c
 14057  009870  D005               	goto	l15071
 14058                           
 14059                           ; BSR set to: 0
 14060                           ;key_menu.c: 52: t8++;
 14061                           
 14062                           ; BSR set to: 0
 14063                           
 14064                           ;key_menu.c: 51: }else{
 14065                           
 14066                           ; BSR set to: 0
 14067                           ;key_menu.c: 50: t8=min;
 14068  009872  2A20               	incf	key_shift_loc@t8,f,c
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;key_menu.c: 53: if(t8>max)t8=min;
 14072  009874  5020               	movf	key_shift_loc@t8,w,c
 14073  009876  0100               	movlb	0	; () banked
 14074  009878  5D63               	subwf	key_shift_loc@max& (0+255),w,b
 14075  00987A  A0D8               	btfss	status,0,c
 14076  00987C                     l15071:
 14077                           
 14078                           ; BSR set to: 0
 14079  00987C  C062  F020         	movff	key_shift_loc@min,key_shift_loc@t8
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;key_menu.c: 54: }
 14083                           ;key_menu.c: 55: if(m_floatAdj.stru.sign){
 14084                           
 14085                           ; BSR set to: 0
 14086                           
 14087                           ; BSR set to: 0
 14088  009880  5038               	movf	_m_floatAdj+3,w,c
 14089  009882  B4D8               	btfsc	status,2,c
 14090  009884  D005               	goto	l15079
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;key_menu.c: 56: if(t8==0)t8=1;
 14094  009886  5020               	movf	key_shift_loc@t8,w,c
 14095  009888  A4D8               	btfss	status,2,c
 14096  00988A  D002               	goto	l15079
 14097                           
 14098                           ; BSR set to: 0
 14099  00988C  0E01               	movlw	1
 14100  00988E  6E20               	movwf	key_shift_loc@t8,c
 14101  009890                     l15079:
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;key_menu.c: 57: }
 14105                           ;key_menu.c: 58: *loc=t8;
 14106  009890  C060  FFD9         	movff	key_shift_loc@loc,fsr2l
 14107  009894  C061  FFDA         	movff	key_shift_loc@loc+1,fsr2h
 14108  009898  C020  FFDF         	movff	key_shift_loc@t8,indf2
 14109                           
 14110                           ; BSR set to: 0
 14111  00989C  0012               	return		;funcret
 14112  00989E                     __end_of_key_shift_loc:
 14113                           	opt stack 0
 14114                           tblptru	equ	0xFF8
 14115                           tblptrh	equ	0xFF7
 14116                           tblptrl	equ	0xFF6
 14117                           tablat	equ	0xFF5
 14118                           prodh	equ	0xFF4
 14119                           prodl	equ	0xFF3
 14120                           intcon	equ	0xFF2
 14121                           postinc0	equ	0xFEE
 14122                           wreg	equ	0xFE8
 14123                           indf1	equ	0xFE7
 14124                           postinc1	equ	0xFE6
 14125                           postdec1	equ	0xFE5
 14126                           plusw1	equ	0xFE3
 14127                           fsr1h	equ	0xFE2
 14128                           fsr1l	equ	0xFE1
 14129                           indf2	equ	0xFDF
 14130                           postinc2	equ	0xFDE
 14131                           postdec2	equ	0xFDD
 14132                           plusw2	equ	0xFDB
 14133                           fsr2h	equ	0xFDA
 14134                           fsr2l	equ	0xFD9
 14135                           status	equ	0xFD8
 14136                           
 14137 ;; *************** function _event_process_time_out *****************
 14138 ;; Defined at:
 14139 ;;		line 30 in file "src/app/event.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;		None
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;		None
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  1    wreg      char 
 14146 ;; Registers used:
 14147 ;;		None
 14148 ;; Tracked objects:
 14149 ;;		On entry : 0/0
 14150 ;;		On exit  : 0/0
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14157 ;;Total ram usage:        0 bytes
 14158 ;; Hardware stack levels used:    1
 14159 ;; Hardware stack levels required when called:    4
 14160 ;; This function calls:
 14161 ;;		Nothing
 14162 ;; This function is called by:
 14163 ;;		_main
 14164 ;;		_event_process
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	text74
 14169  00A3F2                     __ptext74:
 14170                           	opt stack 0
 14171  00A3F2                     _event_process_time_out:
 14172                           	opt stack 26
 14173                           
 14174                           ;event.c: 33: return 1;
 14175                           ;	Return value of _event_process_time_out is never used
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;incstack = 0
 14179  00A3F2  0012               	return		;funcret
 14180  00A3F4                     __end_of_event_process_time_out:
 14181                           	opt stack 0
 14182                           tblptru	equ	0xFF8
 14183                           tblptrh	equ	0xFF7
 14184                           tblptrl	equ	0xFF6
 14185                           tablat	equ	0xFF5
 14186                           prodh	equ	0xFF4
 14187                           prodl	equ	0xFF3
 14188                           intcon	equ	0xFF2
 14189                           postinc0	equ	0xFEE
 14190                           wreg	equ	0xFE8
 14191                           indf1	equ	0xFE7
 14192                           postinc1	equ	0xFE6
 14193                           postdec1	equ	0xFE5
 14194                           plusw1	equ	0xFE3
 14195                           fsr1h	equ	0xFE2
 14196                           fsr1l	equ	0xFE1
 14197                           indf2	equ	0xFDF
 14198                           postinc2	equ	0xFDE
 14199                           postdec2	equ	0xFDD
 14200                           plusw2	equ	0xFDB
 14201                           fsr2h	equ	0xFDA
 14202                           fsr2l	equ	0xFD9
 14203                           status	equ	0xFD8
 14204                           
 14205 ;; *************** function _event_process_ticker *****************
 14206 ;; Defined at:
 14207 ;;		line 23 in file "src/app/event.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;		None
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;  ret             1    4[BANK1 ] unsigned char 
 14212 ;; Return value:  Size  Location     Type
 14213 ;;                  1    wreg      char 
 14214 ;; Registers used:
 14215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14216 ;; Tracked objects:
 14217 ;;		On entry : 0/0
 14218 ;;		On exit  : 0/0
 14219 ;;		Unchanged: 0/0
 14220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14222 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14224 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14225 ;;Total ram usage:        1 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:   12
 14228 ;; This function calls:
 14229 ;;		_sample_call_in_ticker
 14230 ;; This function is called by:
 14231 ;;		_main
 14232 ;;		_event_process
 14233 ;; This function uses a non-reentrant model
 14234 ;;
 14235                           
 14236                           	psect	text75
 14237  00A3DC                     __ptext75:
 14238                           	opt stack 0
 14239  00A3DC                     _event_process_ticker:
 14240                           	opt stack 18
 14241                           
 14242                           ;event.c: 25: uint8_t ret=0;
 14243                           
 14244                           ;incstack = 0
 14245  00A3DC  0E00               	movlw	0
 14246  00A3DE  0101               	movlb	1	; () banked
 14247  00A3E0  6FFF               	movwf	event_process_ticker@ret& (0+255),b
 14248                           
 14249                           ; BSR set to: 1
 14250                           ;event.c: 26: sample_call_in_ticker();
 14251  00A3E2  EC95  F04B         	call	_sample_call_in_ticker	;wreg free
 14252  00A3E6  0012               	return	
 14253  00A3E8                     __end_of_event_process_ticker:
 14254                           	opt stack 0
 14255                           tblptru	equ	0xFF8
 14256                           tblptrh	equ	0xFF7
 14257                           tblptrl	equ	0xFF6
 14258                           tablat	equ	0xFF5
 14259                           prodh	equ	0xFF4
 14260                           prodl	equ	0xFF3
 14261                           intcon	equ	0xFF2
 14262                           postinc0	equ	0xFEE
 14263                           wreg	equ	0xFE8
 14264                           indf1	equ	0xFE7
 14265                           postinc1	equ	0xFE6
 14266                           postdec1	equ	0xFE5
 14267                           plusw1	equ	0xFE3
 14268                           fsr1h	equ	0xFE2
 14269                           fsr1l	equ	0xFE1
 14270                           indf2	equ	0xFDF
 14271                           postinc2	equ	0xFDE
 14272                           postdec2	equ	0xFDD
 14273                           plusw2	equ	0xFDB
 14274                           fsr2h	equ	0xFDA
 14275                           fsr2l	equ	0xFD9
 14276                           status	equ	0xFD8
 14277                           
 14278 ;; *************** function _sample_call_in_ticker *****************
 14279 ;; Defined at:
 14280 ;;		line 148 in file "src/api/sample.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;		None
 14283 ;; Auto vars:     Size  Location     Type
 14284 ;;  ret             1  134[BANK0 ] unsigned char 
 14285 ;; Return value:  Size  Location     Type
 14286 ;;                  1    wreg      void 
 14287 ;; Registers used:
 14288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14289 ;; Tracked objects:
 14290 ;;		On entry : 0/0
 14291 ;;		On exit  : 0/0
 14292 ;;		Unchanged: 0/0
 14293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14297 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14298 ;;Total ram usage:        1 bytes
 14299 ;; Hardware stack levels used:    1
 14300 ;; Hardware stack levels required when called:   11
 14301 ;; This function calls:
 14302 ;;		_sample_call_cal_diff_pr
 14303 ;;		_sample_call_cal_in_soc
 14304 ;;		_sample_call_cal_pr
 14305 ;;		_sample_diff_pr_chip_fast
 14306 ;;		_sample_in_soc_adc_ch
 14307 ;;		_sample_pr_chip_fast
 14308 ;; This function is called by:
 14309 ;;		_event_process_ticker
 14310 ;; This function uses a non-reentrant model
 14311 ;;
 14312                           
 14313                           	psect	text76
 14314  00972A                     __ptext76:
 14315                           	opt stack 0
 14316  00972A                     _sample_call_in_ticker:
 14317                           	opt stack 18
 14318                           
 14319                           ;sample.c: 150: uint8_t ret=0;
 14320                           
 14321                           ;incstack = 0
 14322  00972A  0E00               	movlw	0
 14323  00972C  0100               	movlb	0	; () banked
 14324  00972E  6FE6               	movwf	sample_call_in_ticker@ret& (0+255),b
 14325                           
 14326                           ;sample.c: 151: if(!sensorSimpleEn)return;
 14327  009730  0100               	movlb	0	; () banked
 14328  009732  51F2               	movf	_sensorSimpleEn& (0+255),w,b	;volatile
 14329  009734  B4D8               	btfsc	status,2,c
 14330  009736  0012               	return	
 14331                           
 14332                           ; BSR set to: 0
 14333                           ;sample.c: 152: if(dwm!=WORK_MODE){
 14334                           
 14335                           ; BSR set to: 0
 14336                           
 14337                           ; BSR set to: 0
 14338  009738  0100               	movlb	0	; () banked
 14339  00973A  05FD               	decf	_dwm& (0+255),w,b	;volatile
 14340  00973C  B4D8               	btfsc	status,2,c
 14341  00973E  D00F               	goto	l17121
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;sample.c: 153: if(sample_call_cal_diff_pr())return;
 14345  009740  ECE3  F050         	call	_sample_call_cal_diff_pr	;wreg free
 14346  009744  0900               	iorlw	0
 14347  009746  A4D8               	btfss	status,2,c
 14348  009748  0012               	return	
 14349                           
 14350                           ;sample.c: 154: if(sample_call_cal_pr())return;
 14351  00974A  ECD4  F050         	call	_sample_call_cal_pr	;wreg free
 14352  00974E  0900               	iorlw	0
 14353  009750  A4D8               	btfss	status,2,c
 14354  009752  0012               	return	
 14355                           
 14356                           ;sample.c: 155: if(sample_call_cal_in_soc())return;
 14357  009754  EC92  F050         	call	_sample_call_cal_in_soc	;wreg free
 14358  009758  0900               	iorlw	0
 14359  00975A  A4D8               	btfss	status,2,c
 14360  00975C  0012               	return	
 14361  00975E                     l17121:
 14362                           
 14363                           ;sample.c: 156: }
 14364                           ;sample.c: 157: if(sample_diff_pr_chip_fast())return;
 14365  00975E  EC28  F01F         	call	_sample_diff_pr_chip_fast	;wreg free
 14366  009762  0900               	iorlw	0
 14367  009764  A4D8               	btfss	status,2,c
 14368  009766  0012               	return	
 14369                           
 14370                           ;sample.c: 158: if(sample_pr_chip_fast())return;
 14371  009768  EC15  F025         	call	_sample_pr_chip_fast	;wreg free
 14372  00976C  0900               	iorlw	0
 14373  00976E  A4D8               	btfss	status,2,c
 14374  009770  0012               	return	
 14375                           
 14376                           ;sample.c: 159: if(sample_in_soc_adc_ch())return;
 14377  009772  EC7F  F026         	call	_sample_in_soc_adc_ch	;wreg free
 14378  009776  0012               	return	
 14379  009778                     __end_of_sample_call_in_ticker:
 14380                           	opt stack 0
 14381                           tblptru	equ	0xFF8
 14382                           tblptrh	equ	0xFF7
 14383                           tblptrl	equ	0xFF6
 14384                           tablat	equ	0xFF5
 14385                           prodh	equ	0xFF4
 14386                           prodl	equ	0xFF3
 14387                           intcon	equ	0xFF2
 14388                           postinc0	equ	0xFEE
 14389                           wreg	equ	0xFE8
 14390                           indf1	equ	0xFE7
 14391                           postinc1	equ	0xFE6
 14392                           postdec1	equ	0xFE5
 14393                           plusw1	equ	0xFE3
 14394                           fsr1h	equ	0xFE2
 14395                           fsr1l	equ	0xFE1
 14396                           indf2	equ	0xFDF
 14397                           postinc2	equ	0xFDE
 14398                           postdec2	equ	0xFDD
 14399                           plusw2	equ	0xFDB
 14400                           fsr2h	equ	0xFDA
 14401                           fsr2l	equ	0xFD9
 14402                           status	equ	0xFD8
 14403                           
 14404 ;; *************** function _sample_pr_chip_fast *****************
 14405 ;; Defined at:
 14406 ;;		line 242 in file "src/api/sample.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;		None
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;  t16             2   43[BANK0 ] unsigned int 
 14411 ;;  ret             1   42[BANK0 ] unsigned char 
 14412 ;; Return value:  Size  Location     Type
 14413 ;;                  1    wreg      unsigned char 
 14414 ;; Registers used:
 14415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14422 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14424 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14425 ;;Total ram usage:        3 bytes
 14426 ;; Hardware stack levels used:    1
 14427 ;; Hardware stack levels required when called:   10
 14428 ;; This function calls:
 14429 ;;		___x_sample_fifo
 14430 ;;		_ads1115_read_conversion
 14431 ;;		_ads1115_set_mux
 14432 ;;		_ads1115_start_conversion
 14433 ;; This function is called by:
 14434 ;;		_sample_call_in_ticker
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           	psect	text77
 14439  004A2A                     __ptext77:
 14440                           	opt stack 0
 14441  004A2A                     _sample_pr_chip_fast:
 14442                           	opt stack 18
 14443                           
 14444                           ;sample.c: 244: uint8_t ret=0;
 14445                           
 14446                           ;incstack = 0
 14447  004A2A  0E00               	movlw	0
 14448  004A2C  0100               	movlb	0	; () banked
 14449  004A2E  6F8A               	movwf	sample_pr_chip_fast@ret& (0+255),b
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;sample.c: 245: uint16_t t16;
 14453                           ;sample.c: 246: PrChipSampleTimer+=(1000/100);
 14454  004A30  0E0A               	movlw	10
 14455  004A32  0101               	movlb	1	; () banked
 14456  004A34  275E               	addwf	_PrChipSampleTimer& (0+255),f,b	;volatile
 14457  004A36  0E00               	movlw	0
 14458  004A38  235F               	addwfc	(_PrChipSampleTimer+1)& (0+255),f,b	;volatile
 14459                           
 14460                           ; BSR set to: 1
 14461                           ;sample.c: 247: if(PrChipSampleTimer<100)return 0;
 14462  004A3A  0101               	movlb	1	; () banked
 14463  004A3C  515F               	movf	(_PrChipSampleTimer+1)& (0+255),w,b	;volatile
 14464  004A3E  E107               	bnz	l16663
 14465  004A40  0E64               	movlw	100
 14466  004A42  0101               	movlb	1	; () banked
 14467  004A44  5D5E               	subwf	_PrChipSampleTimer& (0+255),w,b	;volatile
 14468  004A46  B0D8               	btfsc	status,0,c
 14469  004A48  D002               	goto	l16663
 14470                           
 14471                           ; BSR set to: 1
 14472  004A4A  0E00               	movlw	0
 14473                           
 14474                           ; BSR set to: 1
 14475  004A4C  0012               	return	
 14476  004A4E                     l16663:
 14477                           
 14478                           ; BSR set to: 1
 14479                           ;sample.c: 248: PrChipSampleTimer=0;
 14480  004A4E  0E00               	movlw	0
 14481  004A50  0101               	movlb	1	; () banked
 14482  004A52  6F5F               	movwf	(_PrChipSampleTimer+1)& (0+255),b	;volatile
 14483  004A54  0E00               	movlw	0
 14484  004A56  6F5E               	movwf	_PrChipSampleTimer& (0+255),b	;volatile
 14485                           
 14486                           ;sample.c: 249: if(prChipSampleCount==0){
 14487  004A58  0100               	movlb	0	; () banked
 14488  004A5A  51F7               	movf	_prChipSampleCount& (0+255),w,b	;volatile
 14489  004A5C  A4D8               	btfss	status,2,c
 14490  004A5E  D015               	goto	l16677
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;sample.c: 250: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 14494  004A60  0E04               	movlw	4
 14495  004A62  0100               	movlb	0	; () banked
 14496  004A64  6FF8               	movwf	_prChipSampleCh& (0+255),b	;volatile
 14497                           
 14498                           ; BSR set to: 0
 14499                           ;sample.c: 251: ads1115_set_mux(pAds1115PrObj,prChipSampleCh);
 14500  004A66  C025  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 14501  004A6A  C026  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 14502  004A6E  C0F8  F062         	movff	_prChipSampleCh,ads1115_set_mux@mux	;volatile
 14503  004A72  EC80  F050         	call	_ads1115_set_mux	;wreg free
 14504                           
 14505                           ;sample.c: 252: ads1115_start_conversion(pAds1115PrObj);
 14506  004A76  C025  F06B         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 14507  004A7A  C026  F06C         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 14508  004A7E  ECAA  F04F         	call	_ads1115_start_conversion	;wreg free
 14509                           
 14510                           ;sample.c: 253: prChipSampleCount++;
 14511  004A82  0100               	movlb	0	; () banked
 14512  004A84  2BF7               	incf	_prChipSampleCount& (0+255),f,b	;volatile
 14513                           
 14514                           ; BSR set to: 0
 14515                           ;sample.c: 254: return 1;
 14516  004A86  0E01               	movlw	1
 14517                           
 14518                           ; BSR set to: 0
 14519  004A88  0012               	return	
 14520  004A8A                     l16677:
 14521                           
 14522                           ; BSR set to: 0
 14523                           ;sample.c: 255: }
 14524                           ;sample.c: 257: t16=ads1115_read_conversion(pAds1115PrObj);
 14525  004A8A  C025  F06E         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 14526  004A8E  C026  F06F         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 14527  004A92  EC0A  F04C         	call	_ads1115_read_conversion	;wreg free
 14528  004A96  C06E  F08B         	movff	?_ads1115_read_conversion,sample_pr_chip_fast@t16
 14529  004A9A  C06F  F08C         	movff	?_ads1115_read_conversion+1,sample_pr_chip_fast@t16+1
 14530                           
 14531                           ;sample.c: 258: if(prChipSampleCh==ADS1X1X_MUX_SINGLE_0){
 14532  004A9E  0E04               	movlw	4
 14533  004AA0  0100               	movlb	0	; () banked
 14534  004AA2  19F8               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 14535  004AA4  A4D8               	btfss	status,2,c
 14536  004AA6  D015               	goto	l16685
 14537                           
 14538                           ; BSR set to: 0
 14539                           ;sample.c: 259: adc_exPt100=__x_sample_fifo(sampBufPt100ExA,t16,4);
 14540  004AA8  0EC6               	movlw	low _sampBufPt100ExA
 14541  004AAA  0100               	movlb	0	; () banked
 14542  004AAC  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14543  004AAE  0E01               	movlw	high _sampBufPt100ExA
 14544  004AB0  0100               	movlb	0	; () banked
 14545  004AB2  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14546  004AB4  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 14547  004AB8  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 14548  004ABC  0E04               	movlw	4
 14549  004ABE  0100               	movlb	0	; () banked
 14550  004AC0  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14551  004AC2  ECCA  F025         	call	___x_sample_fifo	;wreg free
 14552  004AC6  C07A  F16A         	movff	?___x_sample_fifo,_adc_exPt100	;volatile
 14553  004ACA  C07B  F16B         	movff	?___x_sample_fifo+1,_adc_exPt100+1	;volatile
 14554                           
 14555                           ;sample.c: 260: prChipSampleCh=ADS1X1X_MUX_SINGLE_1;
 14556  004ACE  0E05               	movlw	5
 14557  004AD0  D045               	goto	L16
 14558  004AD2                     l16685:
 14559                           
 14560                           ; BSR set to: 0
 14561  004AD2  0E05               	movlw	5
 14562  004AD4  0100               	movlb	0	; () banked
 14563  004AD6  19F8               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 14564  004AD8  A4D8               	btfss	status,2,c
 14565  004ADA  D021               	goto	l16695
 14566                           
 14567                           ; BSR set to: 0
 14568                           ;sample.c: 262: t16=__x_sample_fifo(sampBufPt100ExB,t16,4);
 14569  004ADC  0EBE               	movlw	low _sampBufPt100ExB
 14570  004ADE  0100               	movlb	0	; () banked
 14571  004AE0  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14572  004AE2  0E01               	movlw	high _sampBufPt100ExB
 14573  004AE4  0100               	movlb	0	; () banked
 14574  004AE6  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14575  004AE8  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 14576  004AEC  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 14577  004AF0  0E04               	movlw	4
 14578  004AF2  0100               	movlb	0	; () banked
 14579  004AF4  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14580  004AF6  ECCA  F025         	call	___x_sample_fifo	;wreg free
 14581  004AFA  C07A  F08B         	movff	?___x_sample_fifo,sample_pr_chip_fast@t16
 14582  004AFE  C07B  F08C         	movff	?___x_sample_fifo+1,sample_pr_chip_fast@t16+1
 14583                           
 14584                           ;sample.c: 263: t16*=2;
 14585  004B02  0100               	movlb	0	; () banked
 14586  004B04  90D8               	bcf	status,0,c
 14587  004B06  378B               	rlcf	sample_pr_chip_fast@t16& (0+255),f,b
 14588  004B08  378C               	rlcf	(sample_pr_chip_fast@t16+1)& (0+255),f,b
 14589                           
 14590                           ; BSR set to: 0
 14591                           ;sample.c: 264: adc_exPt100-=t16;
 14592  004B0A  0100               	movlb	0	; () banked
 14593  004B0C  518B               	movf	sample_pr_chip_fast@t16& (0+255),w,b
 14594  004B0E  0101               	movlb	1	; () banked
 14595  004B10  5F6A               	subwf	_adc_exPt100& (0+255),f,b	;volatile
 14596  004B12  0100               	movlb	0	; () banked
 14597  004B14  518C               	movf	(sample_pr_chip_fast@t16+1)& (0+255),w,b
 14598  004B16  0101               	movlb	1	; () banked
 14599  004B18  5B6B               	subwfb	(_adc_exPt100+1)& (0+255),f,b	;volatile
 14600                           
 14601                           ; BSR set to: 1
 14602                           ;sample.c: 265: prChipSampleCh=ADS1X1X_MUX_DIFF_2_3;
 14603  004B1A  0E03               	movlw	3
 14604  004B1C  D01F               	goto	L16
 14605  004B1E                     l16695:
 14606                           
 14607                           ; BSR set to: 0
 14608  004B1E  0E03               	movlw	3
 14609  004B20  0100               	movlb	0	; () banked
 14610  004B22  19F8               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 14611  004B24  A4D8               	btfss	status,2,c
 14612  004B26  D019               	goto	l16703
 14613                           
 14614                           ; BSR set to: 0
 14615                           ;sample.c: 267: adc_pressure=__x_sample_fifo(sampBufPr,t16,4);
 14616  004B28  0EB6               	movlw	low _sampBufPr
 14617  004B2A  0100               	movlb	0	; () banked
 14618  004B2C  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14619  004B2E  0E01               	movlw	high _sampBufPr
 14620  004B30  0100               	movlb	0	; () banked
 14621  004B32  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14622  004B34  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 14623  004B38  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 14624  004B3C  0E04               	movlw	4
 14625  004B3E  0100               	movlb	0	; () banked
 14626  004B40  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14627  004B42  ECCA  F025         	call	___x_sample_fifo	;wreg free
 14628  004B46  C07A  F16C         	movff	?___x_sample_fifo,_adc_pressure	;volatile
 14629  004B4A  C07B  F16D         	movff	?___x_sample_fifo+1,_adc_pressure+1	;volatile
 14630                           
 14631                           ;sample.c: 268: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 14632  004B4E  0E04               	movlw	4
 14633  004B50  0100               	movlb	0	; () banked
 14634  004B52  6FF8               	movwf	_prChipSampleCh& (0+255),b	;volatile
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;sample.c: 269: prChipSampleCount++;
 14638  004B54  0100               	movlb	0	; () banked
 14639  004B56  2BF7               	incf	_prChipSampleCount& (0+255),f,b	;volatile
 14640                           
 14641                           ;sample.c: 270: }else{
 14642  004B58  D003               	goto	l16705
 14643  004B5A                     l16703:
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;sample.c: 271: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 14647  004B5A  0E04               	movlw	4
 14648  004B5C                     L16:
 14649  004B5C  0100               	movlb	0	; () banked
 14650  004B5E  6FF8               	movwf	_prChipSampleCh& (0+255),b	;volatile
 14651  004B60                     l16705:
 14652                           
 14653                           ; BSR set to: 0
 14654                           ;sample.c: 272: }
 14655                           ;sample.c: 274: ads1115_set_mux(pAds1115PrObj,prChipSampleCh);
 14656  004B60  C025  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 14657  004B64  C026  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 14658  004B68  C0F8  F062         	movff	_prChipSampleCh,ads1115_set_mux@mux	;volatile
 14659  004B6C  EC80  F050         	call	_ads1115_set_mux	;wreg free
 14660                           
 14661                           ;sample.c: 275: ads1115_start_conversion(pAds1115PrObj);
 14662  004B70  C025  F06B         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 14663  004B74  C026  F06C         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 14664  004B78  ECAA  F04F         	call	_ads1115_start_conversion	;wreg free
 14665                           
 14666                           ;sample.c: 276: if(prChipSampleCount>4){
 14667  004B7C  0E04               	movlw	4
 14668  004B7E  0100               	movlb	0	; () banked
 14669  004B80  65F7               	cpfsgt	_prChipSampleCount& (0+255),b	;volatile
 14670  004B82  D006               	goto	l16713
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;sample.c: 277: PrChipSampleFinish=1;
 14674  004B84  0E01               	movlw	1
 14675  004B86  0100               	movlb	0	; () banked
 14676  004B88  6FF6               	movwf	_PrChipSampleFinish& (0+255),b
 14677                           
 14678                           ;sample.c: 278: prChipSampleCount=0;
 14679  004B8A  0E00               	movlw	0
 14680  004B8C  0100               	movlb	0	; () banked
 14681  004B8E  6FF7               	movwf	_prChipSampleCount& (0+255),b	;volatile
 14682  004B90                     l16713:
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;sample.c: 279: }
 14686                           ;sample.c: 280: return 1;
 14687  004B90  0E01               	movlw	1
 14688  004B92  0012               	return	
 14689  004B94                     __end_of_sample_pr_chip_fast:
 14690                           	opt stack 0
 14691                           tblptru	equ	0xFF8
 14692                           tblptrh	equ	0xFF7
 14693                           tblptrl	equ	0xFF6
 14694                           tablat	equ	0xFF5
 14695                           prodh	equ	0xFF4
 14696                           prodl	equ	0xFF3
 14697                           intcon	equ	0xFF2
 14698                           postinc0	equ	0xFEE
 14699                           wreg	equ	0xFE8
 14700                           indf1	equ	0xFE7
 14701                           postinc1	equ	0xFE6
 14702                           postdec1	equ	0xFE5
 14703                           plusw1	equ	0xFE3
 14704                           fsr1h	equ	0xFE2
 14705                           fsr1l	equ	0xFE1
 14706                           indf2	equ	0xFDF
 14707                           postinc2	equ	0xFDE
 14708                           postdec2	equ	0xFDD
 14709                           plusw2	equ	0xFDB
 14710                           fsr2h	equ	0xFDA
 14711                           fsr2l	equ	0xFD9
 14712                           status	equ	0xFD8
 14713                           
 14714 ;; *************** function _sample_in_soc_adc_ch *****************
 14715 ;; Defined at:
 14716 ;;		line 283 in file "src/api/sample.c"
 14717 ;; Parameters:    Size  Location     Type
 14718 ;;		None
 14719 ;; Auto vars:     Size  Location     Type
 14720 ;;  t16             2   42[BANK0 ] unsigned int 
 14721 ;; Return value:  Size  Location     Type
 14722 ;;                  1    wreg      unsigned char 
 14723 ;; Registers used:
 14724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14725 ;; Tracked objects:
 14726 ;;		On entry : 0/0
 14727 ;;		On exit  : 0/0
 14728 ;;		Unchanged: 0/0
 14729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14731 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14733 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14734 ;;Total ram usage:        2 bytes
 14735 ;; Hardware stack levels used:    1
 14736 ;; Hardware stack levels required when called:    6
 14737 ;; This function calls:
 14738 ;;		___x_sample_fifo
 14739 ;;		_in_adc_init
 14740 ;;		_in_adc_start_and_read
 14741 ;; This function is called by:
 14742 ;;		_sample_call_in_ticker
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           	psect	text78
 14747  004CFE                     __ptext78:
 14748                           	opt stack 0
 14749  004CFE                     _sample_in_soc_adc_ch:
 14750                           	opt stack 22
 14751                           
 14752                           ;sample.c: 285: uint16_t t16;
 14753                           ;sample.c: 286: inSocAdcSampleTimer+=(1000/100);
 14754                           
 14755                           ;incstack = 0
 14756  004CFE  0E0A               	movlw	10
 14757  004D00  0101               	movlb	1	; () banked
 14758  004D02  275C               	addwf	_inSocAdcSampleTimer& (0+255),f,b	;volatile
 14759  004D04  0E00               	movlw	0
 14760  004D06  235D               	addwfc	(_inSocAdcSampleTimer+1)& (0+255),f,b	;volatile
 14761                           
 14762                           ;sample.c: 287: if(inSocAdcSampleTimer<50)return 0;
 14763  004D08  0101               	movlb	1	; () banked
 14764  004D0A  515D               	movf	(_inSocAdcSampleTimer+1)& (0+255),w,b	;volatile
 14765  004D0C  E107               	bnz	l16723
 14766  004D0E  0E32               	movlw	50
 14767  004D10  0101               	movlb	1	; () banked
 14768  004D12  5D5C               	subwf	_inSocAdcSampleTimer& (0+255),w,b	;volatile
 14769  004D14  B0D8               	btfsc	status,0,c
 14770  004D16  D002               	goto	l16723
 14771                           
 14772                           ; BSR set to: 1
 14773  004D18  0E00               	movlw	0
 14774                           
 14775                           ; BSR set to: 1
 14776  004D1A  0012               	return	
 14777  004D1C                     l16723:
 14778                           
 14779                           ; BSR set to: 1
 14780                           ;sample.c: 288: inSocAdcSampleTimer=0;
 14781  004D1C  0E00               	movlw	0
 14782  004D1E  0101               	movlb	1	; () banked
 14783  004D20  6F5D               	movwf	(_inSocAdcSampleTimer+1)& (0+255),b	;volatile
 14784  004D22  0E00               	movlw	0
 14785  004D24  6F5C               	movwf	_inSocAdcSampleTimer& (0+255),b	;volatile
 14786                           
 14787                           ;sample.c: 289: if(inSocAdcSampleCount==0){
 14788  004D26  0100               	movlb	0	; () banked
 14789  004D28  51F5               	movf	_inSocAdcSampleCount& (0+255),w,b	;volatile
 14790  004D2A  A4D8               	btfss	status,2,c
 14791  004D2C  D00A               	goto	l16735
 14792                           
 14793                           ; BSR set to: 0
 14794                           ;sample.c: 290: in_adc_init();
 14795  004D2E  EC5C  F050         	call	_in_adc_init	;wreg free
 14796                           
 14797                           ;sample.c: 291: inSocAdcSampleCh=2;
 14798  004D32  0E02               	movlw	2
 14799  004D34  0100               	movlb	0	; () banked
 14800  004D36  6FF4               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;sample.c: 292: inSocAdcSampleCount=1;
 14804  004D38  0E01               	movlw	1
 14805  004D3A  0100               	movlb	0	; () banked
 14806  004D3C  6FF5               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 14807                           
 14808                           ; BSR set to: 0
 14809                           ;sample.c: 293: return 1;
 14810  004D3E  0E01               	movlw	1
 14811                           
 14812                           ; BSR set to: 0
 14813  004D40  0012               	return	
 14814  004D42                     l16735:
 14815                           
 14816                           ; BSR set to: 0
 14817                           ;sample.c: 294: }
 14818                           ;sample.c: 295: if(inSocAdcSampleCh==2){
 14819  004D42  0E02               	movlw	2
 14820  004D44  0100               	movlb	0	; () banked
 14821  004D46  19F4               	xorwf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14822  004D48  A4D8               	btfss	status,2,c
 14823  004D4A  D01D               	goto	l16743
 14824                           
 14825                           ; BSR set to: 0
 14826                           ;sample.c: 296: t16=in_adc_start_and_read(inSocAdcSampleCh);
 14827  004D4C  0100               	movlb	0	; () banked
 14828  004D4E  51F4               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14829  004D50  ECEE  F045         	call	_in_adc_start_and_read
 14830  004D54  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14831  004D58  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14832                           
 14833                           ;sample.c: 297: adc_iPrEx[0]=__x_sample_fifo((int16_t*)sampBufExPr0InSoc,t16,4);
 14834  004D5C  0EAE               	movlw	low _sampBufExPr0InSoc
 14835  004D5E  0100               	movlb	0	; () banked
 14836  004D60  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14837  004D62  0E01               	movlw	high _sampBufExPr0InSoc
 14838  004D64  0100               	movlb	0	; () banked
 14839  004D66  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14840  004D68  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 14841  004D6C  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 14842  004D70  0E04               	movlw	4
 14843  004D72  0100               	movlb	0	; () banked
 14844  004D74  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14845  004D76  ECCA  F025         	call	___x_sample_fifo	;wreg free
 14846  004D7A  C07A  F156         	movff	?___x_sample_fifo,_adc_iPrEx	;volatile
 14847  004D7E  C07B  F157         	movff	?___x_sample_fifo+1,_adc_iPrEx+1	;volatile
 14848                           
 14849                           ;sample.c: 298: inSocAdcSampleCh=1;
 14850  004D82  0E01               	movlw	1
 14851  004D84  D061               	goto	L19
 14852  004D86                     l16743:
 14853                           
 14854                           ; BSR set to: 0
 14855  004D86  0100               	movlb	0	; () banked
 14856  004D88  05F4               	decf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14857  004D8A  A4D8               	btfss	status,2,c
 14858  004D8C  D01D               	goto	l16751
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;sample.c: 300: t16=in_adc_start_and_read(inSocAdcSampleCh);
 14862  004D8E  0100               	movlb	0	; () banked
 14863  004D90  51F4               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14864  004D92  ECEE  F045         	call	_in_adc_start_and_read
 14865  004D96  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14866  004D9A  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14867                           
 14868                           ;sample.c: 301: adc_iPrEx[1]=__x_sample_fifo((int16_t*)sampBufExPr1InSoc,t16,4);
 14869  004D9E  0EA6               	movlw	low _sampBufExPr1InSoc
 14870  004DA0  0100               	movlb	0	; () banked
 14871  004DA2  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14872  004DA4  0E01               	movlw	high _sampBufExPr1InSoc
 14873  004DA6  0100               	movlb	0	; () banked
 14874  004DA8  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14875  004DAA  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 14876  004DAE  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 14877  004DB2  0E04               	movlw	4
 14878  004DB4  0100               	movlb	0	; () banked
 14879  004DB6  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14880  004DB8  ECCA  F025         	call	___x_sample_fifo	;wreg free
 14881  004DBC  C07A  F158         	movff	?___x_sample_fifo,_adc_iPrEx+2	;volatile
 14882  004DC0  C07B  F159         	movff	?___x_sample_fifo+1,_adc_iPrEx+3	;volatile
 14883                           
 14884                           ;sample.c: 302: inSocAdcSampleCh=0;
 14885  004DC4  0E00               	movlw	0
 14886  004DC6  D040               	goto	L19
 14887  004DC8                     l16751:
 14888                           
 14889                           ; BSR set to: 0
 14890  004DC8  0100               	movlb	0	; () banked
 14891  004DCA  51F4               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14892  004DCC  A4D8               	btfss	status,2,c
 14893  004DCE  D019               	goto	l16759
 14894                           
 14895                           ; BSR set to: 0
 14896                           ;sample.c: 304: t16=in_adc_start_and_read(inSocAdcSampleCh);
 14897  004DD0  0100               	movlb	0	; () banked
 14898  004DD2  51F4               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14899  004DD4  ECEE  F045         	call	_in_adc_start_and_read
 14900  004DD8  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14901  004DDC  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14902                           
 14903                           ;sample.c: 305: __x_sample_fifo((int16_t*)sampBufBatInSoc,t16,4);
 14904  004DE0  0E9E               	movlw	low _sampBufBatInSoc
 14905  004DE2  0100               	movlb	0	; () banked
 14906  004DE4  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14907  004DE6  0E01               	movlw	high _sampBufBatInSoc
 14908  004DE8  0100               	movlb	0	; () banked
 14909  004DEA  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14910  004DEC  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 14911  004DF0  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 14912  004DF4  0E04               	movlw	4
 14913  004DF6  0100               	movlb	0	; () banked
 14914  004DF8  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14915  004DFA  ECCA  F025         	call	___x_sample_fifo	;wreg free
 14916                           
 14917                           ;sample.c: 306: inSocAdcSampleCh=3;
 14918  004DFE  0E03               	movlw	3
 14919  004E00  D023               	goto	L19
 14920  004E02                     l16759:
 14921                           
 14922                           ; BSR set to: 0
 14923  004E02  0E03               	movlw	3
 14924  004E04  0100               	movlb	0	; () banked
 14925  004E06  19F4               	xorwf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14926  004E08  A4D8               	btfss	status,2,c
 14927  004E0A  D01D               	goto	l16769
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;sample.c: 308: t16=in_adc_start_and_read(inSocAdcSampleCh);
 14931  004E0C  0100               	movlb	0	; () banked
 14932  004E0E  51F4               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14933  004E10  ECEE  F045         	call	_in_adc_start_and_read
 14934  004E14  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14935  004E18  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14936                           
 14937                           ;sample.c: 309: __x_sample_fifo((int16_t*)sampBufRefInSoc,t16,4);
 14938  004E1C  0E96               	movlw	low _sampBufRefInSoc
 14939  004E1E  0100               	movlb	0	; () banked
 14940  004E20  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14941  004E22  0E01               	movlw	high _sampBufRefInSoc
 14942  004E24  0100               	movlb	0	; () banked
 14943  004E26  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14944  004E28  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 14945  004E2C  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 14946  004E30  0E04               	movlw	4
 14947  004E32  0100               	movlb	0	; () banked
 14948  004E34  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14949  004E36  ECCA  F025         	call	___x_sample_fifo	;wreg free
 14950                           
 14951                           ;sample.c: 310: inSocAdcSampleCh=2;
 14952  004E3A  0E02               	movlw	2
 14953  004E3C  0100               	movlb	0	; () banked
 14954  004E3E  6FF4               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;sample.c: 311: inSocAdcSampleCount++;
 14958  004E40  0100               	movlb	0	; () banked
 14959  004E42  2BF5               	incf	_inSocAdcSampleCount& (0+255),f,b	;volatile
 14960                           
 14961                           ;sample.c: 312: }else{
 14962  004E44  D003               	goto	l16771
 14963  004E46                     l16769:
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;sample.c: 313: inSocAdcSampleCh=2;
 14967  004E46  0E02               	movlw	2
 14968  004E48                     L19:
 14969  004E48  0100               	movlb	0	; () banked
 14970  004E4A  6FF4               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 14971  004E4C                     l16771:
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;sample.c: 314: }
 14975                           ;sample.c: 315: if(inSocAdcSampleCount>4){
 14976  004E4C  0E04               	movlw	4
 14977  004E4E  0100               	movlb	0	; () banked
 14978  004E50  65F5               	cpfsgt	_inSocAdcSampleCount& (0+255),b	;volatile
 14979  004E52  D006               	goto	l16775
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;sample.c: 316: inSocAdcSampleFinish=1;
 14983  004E54  0E01               	movlw	1
 14984  004E56  0100               	movlb	0	; () banked
 14985  004E58  6FF3               	movwf	_inSocAdcSampleFinish& (0+255),b
 14986                           
 14987                           ;sample.c: 317: inSocAdcSampleCount=0;
 14988  004E5A  0E00               	movlw	0
 14989  004E5C  0100               	movlb	0	; () banked
 14990  004E5E  6FF5               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 14991  004E60                     l16775:
 14992                           
 14993                           ; BSR set to: 0
 14994                           ;sample.c: 318: }
 14995                           ;sample.c: 319: return 1;
 14996  004E60  0E01               	movlw	1
 14997  004E62  0012               	return	
 14998  004E64                     __end_of_sample_in_soc_adc_ch:
 14999                           	opt stack 0
 15000                           tblptru	equ	0xFF8
 15001                           tblptrh	equ	0xFF7
 15002                           tblptrl	equ	0xFF6
 15003                           tablat	equ	0xFF5
 15004                           prodh	equ	0xFF4
 15005                           prodl	equ	0xFF3
 15006                           intcon	equ	0xFF2
 15007                           postinc0	equ	0xFEE
 15008                           wreg	equ	0xFE8
 15009                           indf1	equ	0xFE7
 15010                           postinc1	equ	0xFE6
 15011                           postdec1	equ	0xFE5
 15012                           plusw1	equ	0xFE3
 15013                           fsr1h	equ	0xFE2
 15014                           fsr1l	equ	0xFE1
 15015                           indf2	equ	0xFDF
 15016                           postinc2	equ	0xFDE
 15017                           postdec2	equ	0xFDD
 15018                           plusw2	equ	0xFDB
 15019                           fsr2h	equ	0xFDA
 15020                           fsr2l	equ	0xFD9
 15021                           status	equ	0xFD8
 15022                           
 15023 ;; *************** function _in_adc_start_and_read *****************
 15024 ;; Defined at:
 15025 ;;		line 21 in file "src/driver/in_adc.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  ch              1    wreg     unsigned char 
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;  ch              1    6[BANK0 ] unsigned char 
 15030 ;;  ret             2    7[BANK0 ] unsigned int 
 15031 ;; Return value:  Size  Location     Type
 15032 ;;                  2    4[BANK0 ] unsigned int 
 15033 ;; Registers used:
 15034 ;;		wreg, status,2, status,0, cstack
 15035 ;; Tracked objects:
 15036 ;;		On entry : 0/0
 15037 ;;		On exit  : 0/0
 15038 ;;		Unchanged: 0/0
 15039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15041 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15043 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15044 ;;Total ram usage:        6 bytes
 15045 ;; Hardware stack levels used:    1
 15046 ;; Hardware stack levels required when called:    5
 15047 ;; This function calls:
 15048 ;;		_delay_us
 15049 ;; This function is called by:
 15050 ;;		_sample_in_soc_adc_ch
 15051 ;; This function uses a non-reentrant model
 15052 ;;
 15053                           
 15054                           	psect	text79
 15055  008BDC                     __ptext79:
 15056                           	opt stack 0
 15057  008BDC                     _in_adc_start_and_read:
 15058                           	opt stack 22
 15059                           
 15060                           ;incstack = 0
 15061                           ;in_adc_start_and_read@ch stored from wreg
 15062  008BDC  0100               	movlb	0	; () banked
 15063  008BDE  6F66               	movwf	in_adc_start_and_read@ch& (0+255),b
 15064                           
 15065                           ;in_adc.c: 23: uint16_t ret=0;
 15066  008BE0  0E00               	movlw	0
 15067  008BE2  0100               	movlb	0	; () banked
 15068  008BE4  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 15069  008BE6  0E00               	movlw	0
 15070  008BE8  6F67               	movwf	in_adc_start_and_read@ret& (0+255),b
 15071                           
 15072                           ; BSR set to: 0
 15073                           
 15074                           ; BSR set to: 0
 15075                           
 15076                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 15077  008BEA  80C2               	bsf	4034,0,c	;volatile
 15078                           
 15079                           ; BSR set to: 0
 15080                           
 15081                           ; BSR set to: 0
 15082                           
 15083                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 15084                           
 15085                           ; BSR set to: 0
 15086  008BEC  C066  F020         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 15087  008BF0  4620               	rlncf	??_in_adc_start_and_read,f,c
 15088  008BF2  4620               	rlncf	??_in_adc_start_and_read,f,c
 15089  008BF4  50C2               	movf	4034,w,c	;volatile
 15090  008BF6  1820               	xorwf	??_in_adc_start_and_read,w,c
 15091  008BF8  0BC3               	andlw	-61
 15092  008BFA  1820               	xorwf	??_in_adc_start_and_read,w,c
 15093  008BFC  6EC2               	movwf	4034,c	;volatile
 15094                           
 15095                           ; BSR set to: 0
 15096                           ;in_adc.c: 26: delay_us(2);
 15097                           
 15098                           ; BSR set to: 0
 15099  008BFE  0E00               	movlw	0
 15100  008C00  0100               	movlb	0	; () banked
 15101  008C02  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15102  008C04  0E02               	movlw	2
 15103  008C06  6F60               	movwf	delay_us@dly& (0+255),b
 15104  008C08  ECD3  F04D         	call	_delay_us	;wreg free
 15105                           
 15106                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 15107  008C0C  82C2               	bsf	4034,1,c	;volatile
 15108                           
 15109                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 15110  008C0E  D001               	goto	l1725
 15111  008C10                     l1726:
 15112  008C10  F000               	nop	
 15113  008C12                     l1725:
 15114  008C12  B2C2               	btfsc	4034,1,c	;volatile
 15115  008C14  D7FD               	goto	l1726
 15116                           
 15117                           ;in_adc.c: 30: ret=ADRESH;
 15118  008C16  CFC4 F067          	movff	4036,in_adc_start_and_read@ret	;volatile
 15119  008C1A  0100               	movlb	0	; () banked
 15120  008C1C  6B68               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;in_adc.c: 31: ret<<=8;
 15124  008C1E  0100               	movlb	0	; () banked
 15125  008C20  5167               	movf	in_adc_start_and_read@ret& (0+255),w,b
 15126  008C22  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 15127  008C24  6B67               	clrf	in_adc_start_and_read@ret& (0+255),b
 15128                           
 15129                           ; BSR set to: 0
 15130                           ;in_adc.c: 32: ret |= ADRESL;
 15131  008C26  50C3               	movf	4035,w,c	;volatile
 15132  008C28  0100               	movlb	0	; () banked
 15133  008C2A  1367               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 15134                           
 15135                           ; BSR set to: 0
 15136                           ;in_adc.c: 33: delay_us(2);
 15137  008C2C  0E00               	movlw	0
 15138  008C2E  0100               	movlb	0	; () banked
 15139  008C30  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15140  008C32  0E02               	movlw	2
 15141  008C34  6F60               	movwf	delay_us@dly& (0+255),b
 15142  008C36  ECD3  F04D         	call	_delay_us	;wreg free
 15143                           
 15144                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 15145  008C3A  90C2               	bcf	4034,0,c	;volatile
 15146                           
 15147                           ;in_adc.c: 35: return ret;
 15148  008C3C  C067  F064         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 15149  008C40  C068  F065         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 15150  008C44  0012               	return	
 15151  008C46                     __end_of_in_adc_start_and_read:
 15152                           	opt stack 0
 15153                           tblptru	equ	0xFF8
 15154                           tblptrh	equ	0xFF7
 15155                           tblptrl	equ	0xFF6
 15156                           tablat	equ	0xFF5
 15157                           prodh	equ	0xFF4
 15158                           prodl	equ	0xFF3
 15159                           intcon	equ	0xFF2
 15160                           postinc0	equ	0xFEE
 15161                           wreg	equ	0xFE8
 15162                           indf1	equ	0xFE7
 15163                           postinc1	equ	0xFE6
 15164                           postdec1	equ	0xFE5
 15165                           plusw1	equ	0xFE3
 15166                           fsr1h	equ	0xFE2
 15167                           fsr1l	equ	0xFE1
 15168                           indf2	equ	0xFDF
 15169                           postinc2	equ	0xFDE
 15170                           postdec2	equ	0xFDD
 15171                           plusw2	equ	0xFDB
 15172                           fsr2h	equ	0xFDA
 15173                           fsr2l	equ	0xFD9
 15174                           status	equ	0xFD8
 15175                           
 15176 ;; *************** function _in_adc_init *****************
 15177 ;; Defined at:
 15178 ;;		line 9 in file "src/driver/in_adc.c"
 15179 ;; Parameters:    Size  Location     Type
 15180 ;;		None
 15181 ;; Auto vars:     Size  Location     Type
 15182 ;;		None
 15183 ;; Return value:  Size  Location     Type
 15184 ;;                  1    wreg      void 
 15185 ;; Registers used:
 15186 ;;		wreg, status,2
 15187 ;; Tracked objects:
 15188 ;;		On entry : 0/0
 15189 ;;		On exit  : 0/0
 15190 ;;		Unchanged: 0/0
 15191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15196 ;;Total ram usage:        0 bytes
 15197 ;; Hardware stack levels used:    1
 15198 ;; Hardware stack levels required when called:    4
 15199 ;; This function calls:
 15200 ;;		Nothing
 15201 ;; This function is called by:
 15202 ;;		_sample_in_soc_adc_ch
 15203 ;;		_main
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207                           	psect	text80
 15208  00A0B8                     __ptext80:
 15209                           	opt stack 0
 15210  00A0B8                     _in_adc_init:
 15211                           	opt stack 26
 15212                           
 15213                           ;in_adc.c: 11: ADCON1=0b00001101;
 15214                           
 15215                           ;incstack = 0
 15216  00A0B8  0E0D               	movlw	13
 15217  00A0BA  6EC1               	movwf	4033,c	;volatile
 15218                           
 15219                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 15220  00A0BC  8EC0               	bsf	4032,7,c	;volatile
 15221                           
 15222                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 15223  00A0BE  86C0               	bsf	4032,3,c	;volatile
 15224  00A0C0  88C0               	bsf	4032,4,c	;volatile
 15225  00A0C2  8AC0               	bsf	4032,5,c	;volatile
 15226                           
 15227                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 15228  00A0C4  80C0               	bsf	4032,0,c	;volatile
 15229  00A0C6  82C0               	bsf	4032,1,c	;volatile
 15230  00A0C8  84C0               	bsf	4032,2,c	;volatile
 15231                           
 15232                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 15233  00A0CA  8EC2               	bsf	4034,7,c	;volatile
 15234                           
 15235                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 15236  00A0CC  50C2               	movf	4034,w,c	;volatile
 15237  00A0CE  0BC3               	andlw	-61
 15238  00A0D0  090C               	iorlw	12
 15239  00A0D2  6EC2               	movwf	4034,c	;volatile
 15240                           
 15241                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 15242  00A0D4  9C9E               	bcf	3998,6,c	;volatile
 15243                           
 15244                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 15245  00A0D6  9C9D               	bcf	3997,6,c	;volatile
 15246                           
 15247                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 15248  00A0D8  9C9F               	bcf	3999,6,c	;volatile
 15249  00A0DA  0012               	return		;funcret
 15250  00A0DC                     __end_of_in_adc_init:
 15251                           	opt stack 0
 15252                           tblptru	equ	0xFF8
 15253                           tblptrh	equ	0xFF7
 15254                           tblptrl	equ	0xFF6
 15255                           tablat	equ	0xFF5
 15256                           prodh	equ	0xFF4
 15257                           prodl	equ	0xFF3
 15258                           intcon	equ	0xFF2
 15259                           postinc0	equ	0xFEE
 15260                           wreg	equ	0xFE8
 15261                           indf1	equ	0xFE7
 15262                           postinc1	equ	0xFE6
 15263                           postdec1	equ	0xFE5
 15264                           plusw1	equ	0xFE3
 15265                           fsr1h	equ	0xFE2
 15266                           fsr1l	equ	0xFE1
 15267                           indf2	equ	0xFDF
 15268                           postinc2	equ	0xFDE
 15269                           postdec2	equ	0xFDD
 15270                           plusw2	equ	0xFDB
 15271                           fsr2h	equ	0xFDA
 15272                           fsr2l	equ	0xFD9
 15273                           status	equ	0xFD8
 15274                           
 15275 ;; *************** function _sample_diff_pr_chip_fast *****************
 15276 ;; Defined at:
 15277 ;;		line 197 in file "src/api/sample.c"
 15278 ;; Parameters:    Size  Location     Type
 15279 ;;		None
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;  t16             2   49[BANK0 ] int 
 15282 ;; Return value:  Size  Location     Type
 15283 ;;                  1    wreg      unsigned char 
 15284 ;; Registers used:
 15285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15286 ;; Tracked objects:
 15287 ;;		On entry : 0/0
 15288 ;;		On exit  : 0/0
 15289 ;;		Unchanged: 0/0
 15290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15295 ;;Total ram usage:        2 bytes
 15296 ;; Hardware stack levels used:    1
 15297 ;; Hardware stack levels required when called:   10
 15298 ;; This function calls:
 15299 ;;		___x_sample_fifo
 15300 ;;		_ads1115_read_conversion
 15301 ;;		_ads1115_set_data_rate
 15302 ;;		_ads1115_set_mux
 15303 ;;		_ads1115_set_pga
 15304 ;;		_ads1115_start_conversion
 15305 ;;		_sample_diff_pr_fliter
 15306 ;; This function is called by:
 15307 ;;		_sample_call_in_ticker
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text81
 15312  003E50                     __ptext81:
 15313                           	opt stack 0
 15314  003E50                     _sample_diff_pr_chip_fast:
 15315                           	opt stack 18
 15316                           
 15317                           ;sample.c: 199: int16_t t16;
 15318                           ;sample.c: 200: diffPrChipSampleTimer+=(1000/100);
 15319                           
 15320                           ;incstack = 0
 15321  003E50  0E0A               	movlw	10
 15322  003E52  0101               	movlb	1	; () banked
 15323  003E54  2760               	addwf	_diffPrChipSampleTimer& (0+255),f,b	;volatile
 15324  003E56  0E00               	movlw	0
 15325  003E58  2361               	addwfc	(_diffPrChipSampleTimer+1)& (0+255),f,b	;volatile
 15326                           
 15327                           ;sample.c: 201: if(diffPrChipSampleTimer<100)return 0;
 15328  003E5A  0101               	movlb	1	; () banked
 15329  003E5C  5161               	movf	(_diffPrChipSampleTimer+1)& (0+255),w,b	;volatile
 15330  003E5E  E107               	bnz	l16585
 15331  003E60  0E64               	movlw	100
 15332  003E62  0101               	movlb	1	; () banked
 15333  003E64  5D60               	subwf	_diffPrChipSampleTimer& (0+255),w,b	;volatile
 15334  003E66  B0D8               	btfsc	status,0,c
 15335  003E68  D002               	goto	l16585
 15336                           
 15337                           ; BSR set to: 1
 15338  003E6A  0E00               	movlw	0
 15339                           
 15340                           ; BSR set to: 1
 15341  003E6C  0012               	return	
 15342  003E6E                     l16585:
 15343                           
 15344                           ; BSR set to: 1
 15345                           ;sample.c: 202: diffPrChipSampleTimer=0;
 15346  003E6E  0E00               	movlw	0
 15347  003E70  0101               	movlb	1	; () banked
 15348  003E72  6F61               	movwf	(_diffPrChipSampleTimer+1)& (0+255),b	;volatile
 15349  003E74  0E00               	movlw	0
 15350  003E76  6F60               	movwf	_diffPrChipSampleTimer& (0+255),b	;volatile
 15351                           
 15352                           ;sample.c: 203: if(diffPrChipSampleCount==0){
 15353  003E78  0100               	movlb	0	; () banked
 15354  003E7A  51FB               	movf	_diffPrChipSampleCount& (0+255),w,b	;volatile
 15355  003E7C  A4D8               	btfss	status,2,c
 15356  003E7E  D028               	goto	l16603
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;sample.c: 205: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 15360  003E80  0E00               	movlw	0
 15361  003E82  0100               	movlb	0	; () banked
 15362  003E84  6FFA               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15363                           
 15364                           ; BSR set to: 0
 15365                           ;sample.c: 206: ads1115_set_data_rate(pAds1115DiffPrObj,ADS1X1X_DATA_RATE_32);
 15366  003E86  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_data_rate@pAds1115
 15367  003E8A  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_data_rate@pAds1115+1
 15368  003E8E  0E02               	movlw	2
 15369  003E90  0100               	movlb	0	; () banked
 15370  003E92  6F62               	movwf	ads1115_set_data_rate@dr& (0+255),b
 15371  003E94  EC12  F050         	call	_ads1115_set_data_rate	;wreg free
 15372                           
 15373                           ;sample.c: 207: ads1115_set_mux(pAds1115DiffPrObj,diffPrChipSampCh);
 15374  003E98  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 15375  003E9C  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 15376  003EA0  C0FA  F062         	movff	_diffPrChipSampCh,ads1115_set_mux@mux	;volatile
 15377  003EA4  EC80  F050         	call	_ads1115_set_mux	;wreg free
 15378                           
 15379                           ;sample.c: 208: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 15380  003EA8  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15381  003EAC  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15382  003EB0  0E00               	movlw	0
 15383  003EB2  0100               	movlb	0	; () banked
 15384  003EB4  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15385  003EB6  EC6E  F050         	call	_ads1115_set_pga	;wreg free
 15386                           
 15387                           ;sample.c: 209: ads1115_start_conversion(pAds1115DiffPrObj);
 15388  003EBA  C0EF  F06B         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 15389  003EBE  C0F0  F06C         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 15390  003EC2  ECAA  F04F         	call	_ads1115_start_conversion	;wreg free
 15391                           
 15392                           ;sample.c: 210: diffPrChipSampleCount=1;
 15393  003EC6  0E01               	movlw	1
 15394  003EC8  0100               	movlb	0	; () banked
 15395  003ECA  6FFB               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;sample.c: 211: return 1;
 15399  003ECC  0E01               	movlw	1
 15400                           
 15401                           ; BSR set to: 0
 15402  003ECE  0012               	return	
 15403  003ED0                     l16603:
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;sample.c: 212: }
 15407                           ;sample.c: 213: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 15408  003ED0  C0EF  F06E         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 15409  003ED4  C0F0  F06F         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 15410  003ED8  EC0A  F04C         	call	_ads1115_read_conversion	;wreg free
 15411  003EDC  C06E  F091         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_fast@t16
 15412  003EE0  C06F  F092         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_fast@t16+1
 15413                           
 15414                           ;sample.c: 214: if(diffPrChipSampCh==ADS1X1X_MUX_DIFF_0_1){
 15415  003EE4  0100               	movlb	0	; () banked
 15416  003EE6  51FA               	movf	_diffPrChipSampCh& (0+255),w,b	;volatile
 15417  003EE8  A4D8               	btfss	status,2,c
 15418  003EEA  D01C               	goto	l16613
 15419                           
 15420                           ; BSR set to: 0
 15421                           ;sample.c: 215: __x_sample_fifo(sampBufDiffPr_D01,t16,4);
 15422  003EEC  0EDE               	movlw	low _sampBufDiffPr_D01
 15423  003EEE  0100               	movlb	0	; () banked
 15424  003EF0  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15425  003EF2  0E01               	movlw	high _sampBufDiffPr_D01
 15426  003EF4  0100               	movlb	0	; () banked
 15427  003EF6  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15428  003EF8  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 15429  003EFC  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15430  003F00  0E04               	movlw	4
 15431  003F02  0100               	movlb	0	; () banked
 15432  003F04  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15433  003F06  ECCA  F025         	call	___x_sample_fifo	;wreg free
 15434                           
 15435                           ;sample.c: 216: diffPrChipSampCh=ADS1X1X_MUX_DIFF_2_3;
 15436  003F0A  0E03               	movlw	3
 15437  003F0C  0100               	movlb	0	; () banked
 15438  003F0E  6FFA               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;sample.c: 217: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_256);
 15442  003F10  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15443  003F14  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15444  003F18  0E05               	movlw	5
 15445  003F1A  0100               	movlb	0	; () banked
 15446  003F1C  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15447  003F1E  EC6E  F050         	call	_ads1115_set_pga	;wreg free
 15448                           
 15449                           ;sample.c: 218: }else if(diffPrChipSampCh==ADS1X1X_MUX_DIFF_2_3){
 15450  003F22  D054               	goto	l16635
 15451  003F24                     l16613:
 15452  003F24  0E03               	movlw	3
 15453  003F26  0100               	movlb	0	; () banked
 15454  003F28  19FA               	xorwf	_diffPrChipSampCh& (0+255),w,b	;volatile
 15455  003F2A  A4D8               	btfss	status,2,c
 15456  003F2C  D01C               	goto	l16621
 15457                           
 15458                           ; BSR set to: 0
 15459                           ;sample.c: 219: __x_sample_fifo(sampBufDiffPr_D23,t16,4);
 15460  003F2E  0ED6               	movlw	low _sampBufDiffPr_D23
 15461  003F30  0100               	movlb	0	; () banked
 15462  003F32  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15463  003F34  0E01               	movlw	high _sampBufDiffPr_D23
 15464  003F36  0100               	movlb	0	; () banked
 15465  003F38  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15466  003F3A  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 15467  003F3E  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15468  003F42  0E04               	movlw	4
 15469  003F44  0100               	movlb	0	; () banked
 15470  003F46  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15471  003F48  ECCA  F025         	call	___x_sample_fifo	;wreg free
 15472                           
 15473                           ;sample.c: 220: diffPrChipSampCh=ADS1X1X_MUX_SINGLE_1;
 15474  003F4C  0E05               	movlw	5
 15475  003F4E  0100               	movlb	0	; () banked
 15476  003F50  6FFA               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15477                           
 15478                           ; BSR set to: 0
 15479                           ;sample.c: 221: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_512);
 15480  003F52  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15481  003F56  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15482  003F5A  0E04               	movlw	4
 15483  003F5C  0100               	movlb	0	; () banked
 15484  003F5E  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15485  003F60  EC6E  F050         	call	_ads1115_set_pga	;wreg free
 15486                           
 15487                           ;sample.c: 222: }else if(diffPrChipSampCh==ADS1X1X_MUX_SINGLE_1){
 15488  003F64  D033               	goto	l16635
 15489  003F66                     l16621:
 15490  003F66  0E05               	movlw	5
 15491  003F68  0100               	movlb	0	; () banked
 15492  003F6A  19FA               	xorwf	_diffPrChipSampCh& (0+255),w,b	;volatile
 15493  003F6C  A4D8               	btfss	status,2,c
 15494  003F6E  D022               	goto	l16631
 15495                           
 15496                           ; BSR set to: 0
 15497                           ;sample.c: 223: adc_inPt100=__x_sample_fifo(sampBufDiffPr_S1,t16,4);
 15498  003F70  0ECE               	movlw	low _sampBufDiffPr_S1
 15499  003F72  0100               	movlb	0	; () banked
 15500  003F74  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15501  003F76  0E01               	movlw	high _sampBufDiffPr_S1
 15502  003F78  0100               	movlb	0	; () banked
 15503  003F7A  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15504  003F7C  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 15505  003F80  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15506  003F84  0E04               	movlw	4
 15507  003F86  0100               	movlb	0	; () banked
 15508  003F88  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15509  003F8A  ECCA  F025         	call	___x_sample_fifo	;wreg free
 15510  003F8E  C07A  F16E         	movff	?___x_sample_fifo,_adc_inPt100	;volatile
 15511  003F92  C07B  F16F         	movff	?___x_sample_fifo+1,_adc_inPt100+1	;volatile
 15512                           
 15513                           ;sample.c: 224: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 15514  003F96  0E00               	movlw	0
 15515  003F98  0100               	movlb	0	; () banked
 15516  003F9A  6FFA               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15517                           
 15518                           ; BSR set to: 0
 15519                           ;sample.c: 225: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 15520  003F9C  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15521  003FA0  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15522  003FA4  0E00               	movlw	0
 15523  003FA6  0100               	movlb	0	; () banked
 15524  003FA8  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15525  003FAA  EC6E  F050         	call	_ads1115_set_pga	;wreg free
 15526                           
 15527                           ;sample.c: 226: diffPrChipSampleCount++;
 15528  003FAE  0100               	movlb	0	; () banked
 15529  003FB0  2BFB               	incf	_diffPrChipSampleCount& (0+255),f,b	;volatile
 15530                           
 15531                           ;sample.c: 227: }else{
 15532  003FB2  D00C               	goto	l16635
 15533  003FB4                     l16631:
 15534                           
 15535                           ; BSR set to: 0
 15536                           ;sample.c: 228: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 15537  003FB4  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15538  003FB8  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15539  003FBC  0E00               	movlw	0
 15540  003FBE  0100               	movlb	0	; () banked
 15541  003FC0  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15542  003FC2  EC6E  F050         	call	_ads1115_set_pga	;wreg free
 15543                           
 15544                           ;sample.c: 229: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 15545  003FC6  0E00               	movlw	0
 15546  003FC8  0100               	movlb	0	; () banked
 15547  003FCA  6FFA               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15548  003FCC                     l16635:
 15549                           
 15550                           ;sample.c: 230: }
 15551                           ;sample.c: 231: ads1115_set_data_rate(pAds1115DiffPrObj,ADS1X1X_DATA_RATE_32);
 15552  003FCC  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_data_rate@pAds1115
 15553  003FD0  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_data_rate@pAds1115+1
 15554  003FD4  0E02               	movlw	2
 15555  003FD6  0100               	movlb	0	; () banked
 15556  003FD8  6F62               	movwf	ads1115_set_data_rate@dr& (0+255),b
 15557  003FDA  EC12  F050         	call	_ads1115_set_data_rate	;wreg free
 15558                           
 15559                           ;sample.c: 232: ads1115_set_mux(pAds1115DiffPrObj,diffPrChipSampCh);
 15560  003FDE  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 15561  003FE2  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 15562  003FE6  C0FA  F062         	movff	_diffPrChipSampCh,ads1115_set_mux@mux	;volatile
 15563  003FEA  EC80  F050         	call	_ads1115_set_mux	;wreg free
 15564                           
 15565                           ;sample.c: 233: ads1115_start_conversion(pAds1115DiffPrObj);
 15566  003FEE  C0EF  F06B         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 15567  003FF2  C0F0  F06C         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 15568  003FF6  ECAA  F04F         	call	_ads1115_start_conversion	;wreg free
 15569                           
 15570                           ;sample.c: 234: if(diffPrChipSampleCount>4){
 15571  003FFA  0E04               	movlw	4
 15572  003FFC  0100               	movlb	0	; () banked
 15573  003FFE  65FB               	cpfsgt	_diffPrChipSampleCount& (0+255),b	;volatile
 15574  004000  D00E               	goto	l16649
 15575                           
 15576                           ; BSR set to: 0
 15577                           ;sample.c: 235: sample_diff_pr_fliter(&x_prDiffData);
 15578  004002  0EE6               	movlw	low _x_prDiffData
 15579  004004  0100               	movlb	0	; () banked
 15580  004006  6F8F               	movwf	sample_diff_pr_fliter@xin& (0+255),b
 15581  004008  0E01               	movlw	high _x_prDiffData
 15582  00400A  0100               	movlb	0	; () banked
 15583  00400C  6F90               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
 15584  00400E  EC10  F042         	call	_sample_diff_pr_fliter	;wreg free
 15585                           
 15586                           ;sample.c: 236: diffPrChipSampleFinish=1;
 15587  004012  0E01               	movlw	1
 15588  004014  0100               	movlb	0	; () banked
 15589  004016  6FF9               	movwf	_diffPrChipSampleFinish& (0+255),b
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;sample.c: 237: diffPrChipSampleCount=0;
 15593  004018  0E00               	movlw	0
 15594  00401A  0100               	movlb	0	; () banked
 15595  00401C  6FFB               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 15596  00401E                     l16649:
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;sample.c: 238: }
 15600                           ;sample.c: 239: return 1;
 15601  00401E  0E01               	movlw	1
 15602  004020  0012               	return	
 15603  004022                     __end_of_sample_diff_pr_chip_fast:
 15604                           	opt stack 0
 15605                           tblptru	equ	0xFF8
 15606                           tblptrh	equ	0xFF7
 15607                           tblptrl	equ	0xFF6
 15608                           tablat	equ	0xFF5
 15609                           prodh	equ	0xFF4
 15610                           prodl	equ	0xFF3
 15611                           intcon	equ	0xFF2
 15612                           postinc0	equ	0xFEE
 15613                           wreg	equ	0xFE8
 15614                           indf1	equ	0xFE7
 15615                           postinc1	equ	0xFE6
 15616                           postdec1	equ	0xFE5
 15617                           plusw1	equ	0xFE3
 15618                           fsr1h	equ	0xFE2
 15619                           fsr1l	equ	0xFE1
 15620                           indf2	equ	0xFDF
 15621                           postinc2	equ	0xFDE
 15622                           postdec2	equ	0xFDD
 15623                           plusw2	equ	0xFDB
 15624                           fsr2h	equ	0xFDA
 15625                           fsr2l	equ	0xFD9
 15626                           status	equ	0xFD8
 15627                           
 15628 ;; *************** function _sample_diff_pr_fliter *****************
 15629 ;; Defined at:
 15630 ;;		line 80 in file "src/api/sample.c"
 15631 ;; Parameters:    Size  Location     Type
 15632 ;;  xin             2   47[BANK0 ] PTR struct .
 15633 ;;		 -> x_prDiffData(8), 
 15634 ;; Auto vars:     Size  Location     Type
 15635 ;;		None
 15636 ;; Return value:  Size  Location     Type
 15637 ;;                  1    wreg      unsigned char 
 15638 ;; Registers used:
 15639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15640 ;; Tracked objects:
 15641 ;;		On entry : 0/0
 15642 ;;		On exit  : 0/0
 15643 ;;		Unchanged: 0/0
 15644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15645 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15648 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15649 ;;Total ram usage:        2 bytes
 15650 ;; Hardware stack levels used:    1
 15651 ;; Hardware stack levels required when called:    6
 15652 ;; This function calls:
 15653 ;;		___x_sample_fliter
 15654 ;; This function is called by:
 15655 ;;		_sample_diff_pr_chip_fast
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           	psect	text82
 15660  008420                     __ptext82:
 15661                           	opt stack 0
 15662  008420                     _sample_diff_pr_fliter:
 15663                           	opt stack 21
 15664                           
 15665                           ;sample.c: 82: xin->tAdcValue=__x_sample_fliter(sampBufDiffPr_D01,4,4);
 15666                           
 15667                           ;incstack = 0
 15668  008420  0EDE               	movlw	low _sampBufDiffPr_D01
 15669  008422  0100               	movlb	0	; () banked
 15670  008424  6F7A               	movwf	___x_sample_fliter@buf& (0+255),b
 15671  008426  0E01               	movlw	high _sampBufDiffPr_D01
 15672  008428  0100               	movlb	0	; () banked
 15673  00842A  6F7B               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 15674  00842C  0E04               	movlw	4
 15675  00842E  0100               	movlb	0	; () banked
 15676  008430  6F7C               	movwf	___x_sample_fliter@len& (0+255),b
 15677  008432  0E04               	movlw	4
 15678  008434  0100               	movlb	0	; () banked
 15679  008436  6F7D               	movwf	___x_sample_fliter@loop& (0+255),b
 15680  008438  ECED  F016         	call	___x_sample_fliter	;wreg free
 15681  00843C  0100               	movlb	0	; () banked
 15682  00843E  EE20 F006          	lfsr	2,6
 15683  008442  518F               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 15684  008444  26D9               	addwf	fsr2l,f,c
 15685  008446  5190               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 15686  008448  22DA               	addwfc	fsr2h,f,c
 15687  00844A  0100               	movlb	0	; () banked
 15688  00844C  C07A  FFDE         	movff	?___x_sample_fliter,postinc2
 15689  008450  0100               	movlb	0	; () banked
 15690  008452  C07B  FFDD         	movff	?___x_sample_fliter+1,postdec2
 15691                           
 15692                           ;sample.c: 83: xin->pAdcValue=__x_sample_fliter(sampBufDiffPr_D23,4,4);
 15693  008456  0ED6               	movlw	low _sampBufDiffPr_D23
 15694  008458  0100               	movlb	0	; () banked
 15695  00845A  6F7A               	movwf	___x_sample_fliter@buf& (0+255),b
 15696  00845C  0E01               	movlw	high _sampBufDiffPr_D23
 15697  00845E  0100               	movlb	0	; () banked
 15698  008460  6F7B               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 15699  008462  0E04               	movlw	4
 15700  008464  0100               	movlb	0	; () banked
 15701  008466  6F7C               	movwf	___x_sample_fliter@len& (0+255),b
 15702  008468  0E04               	movlw	4
 15703  00846A  0100               	movlb	0	; () banked
 15704  00846C  6F7D               	movwf	___x_sample_fliter@loop& (0+255),b
 15705  00846E  ECED  F016         	call	___x_sample_fliter	;wreg free
 15706  008472  0100               	movlb	0	; () banked
 15707  008474  EE20 F004          	lfsr	2,4
 15708  008478  518F               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 15709  00847A  26D9               	addwf	fsr2l,f,c
 15710  00847C  5190               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 15711  00847E  22DA               	addwfc	fsr2h,f,c
 15712  008480  0100               	movlb	0	; () banked
 15713  008482  C07A  FFDE         	movff	?___x_sample_fliter,postinc2
 15714  008486  0100               	movlb	0	; () banked
 15715  008488  C07B  FFDD         	movff	?___x_sample_fliter+1,postdec2
 15716                           
 15717                           ; BSR set to: 0
 15718                           ;sample.c: 84: xin->pValue=0;
 15719  00848C  C08F  FFD9         	movff	sample_diff_pr_fliter@xin,fsr2l
 15720  008490  C090  FFDA         	movff	sample_diff_pr_fliter@xin+1,fsr2h
 15721  008494  6ADE               	clrf	postinc2,c
 15722  008496  6ADE               	clrf	postinc2,c
 15723  008498  6ADE               	clrf	postinc2,c
 15724  00849A  6ADD               	clrf	postdec2,c
 15725  00849C  0012               	return	
 15726  00849E                     __end_of_sample_diff_pr_fliter:
 15727                           	opt stack 0
 15728                           tblptru	equ	0xFF8
 15729                           tblptrh	equ	0xFF7
 15730                           tblptrl	equ	0xFF6
 15731                           tablat	equ	0xFF5
 15732                           prodh	equ	0xFF4
 15733                           prodl	equ	0xFF3
 15734                           intcon	equ	0xFF2
 15735                           postinc0	equ	0xFEE
 15736                           wreg	equ	0xFE8
 15737                           indf1	equ	0xFE7
 15738                           postinc1	equ	0xFE6
 15739                           postdec1	equ	0xFE5
 15740                           plusw1	equ	0xFE3
 15741                           fsr1h	equ	0xFE2
 15742                           fsr1l	equ	0xFE1
 15743                           indf2	equ	0xFDF
 15744                           postinc2	equ	0xFDE
 15745                           postdec2	equ	0xFDD
 15746                           plusw2	equ	0xFDB
 15747                           fsr2h	equ	0xFDA
 15748                           fsr2l	equ	0xFD9
 15749                           status	equ	0xFD8
 15750                           
 15751 ;; *************** function ___x_sample_fliter *****************
 15752 ;; Defined at:
 15753 ;;		line 42 in file "src/api/sample.c"
 15754 ;; Parameters:    Size  Location     Type
 15755 ;;  buf             2   26[BANK0 ] PTR int 
 15756 ;;		 -> sampBufDiffPr_D23(8), sampBufDiffPr_D01(8), 
 15757 ;;  len             1   28[BANK0 ] unsigned char 
 15758 ;;  loop            1   29[BANK0 ] unsigned char 
 15759 ;; Auto vars:     Size  Location     Type
 15760 ;;  t32             4   42[BANK0 ] long 
 15761 ;;  min             2   40[BANK0 ] int 
 15762 ;;  max             2   38[BANK0 ] int 
 15763 ;;  i               1   46[BANK0 ] unsigned char 
 15764 ;;  minLoc          1   37[BANK0 ] unsigned char 
 15765 ;;  maxLoc          1   36[BANK0 ] unsigned char 
 15766 ;; Return value:  Size  Location     Type
 15767 ;;                  2   26[BANK0 ] int 
 15768 ;; Registers used:
 15769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15770 ;; Tracked objects:
 15771 ;;		On entry : 0/0
 15772 ;;		On exit  : 0/0
 15773 ;;		Unchanged: 0/0
 15774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15776 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15777 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15778 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15779 ;;Total ram usage:       21 bytes
 15780 ;; Hardware stack levels used:    1
 15781 ;; Hardware stack levels required when called:    5
 15782 ;; This function calls:
 15783 ;;		___aldiv
 15784 ;; This function is called by:
 15785 ;;		_sample_diff_pr_fliter
 15786 ;; This function uses a non-reentrant model
 15787 ;;
 15788                           
 15789                           	psect	text83
 15790  002DDA                     __ptext83:
 15791                           	opt stack 0
 15792  002DDA                     ___x_sample_fliter:
 15793                           	opt stack 21
 15794                           
 15795                           ;sample.c: 44: int16_t max,min;
 15796                           ;sample.c: 45: uint8_t i,maxLoc,minLoc;
 15797                           ;sample.c: 46: int32_t t32=0;
 15798                           
 15799                           ; BSR set to: 0
 15800                           ;incstack = 0
 15801  002DDA  0E00               	movlw	0
 15802  002DDC  0100               	movlb	0	; () banked
 15803  002DDE  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 15804  002DE0  0E00               	movlw	0
 15805  002DE2  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 15806  002DE4  0E00               	movlw	0
 15807  002DE6  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 15808  002DE8  0E00               	movlw	0
 15809  002DEA  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 15810                           
 15811                           ; BSR set to: 0
 15812                           ;sample.c: 47: if(len<3)return 0;
 15813  002DEC  0E03               	movlw	3
 15814  002DEE  0100               	movlb	0	; () banked
 15815  002DF0  617C               	cpfslt	___x_sample_fliter@len& (0+255),b
 15816  002DF2  D14B               	goto	l14855
 15817                           
 15818                           ; BSR set to: 0
 15819  002DF4  0E00               	movlw	0
 15820  002DF6  0100               	movlb	0	; () banked
 15821  002DF8  6F7B               	movwf	(?___x_sample_fliter+1)& (0+255),b
 15822  002DFA  0E00               	movlw	0
 15823  002DFC  6F7A               	movwf	?___x_sample_fliter& (0+255),b
 15824                           
 15825                           ; BSR set to: 0
 15826  002DFE  0012               	return	
 15827  002E00                     l14825:
 15828                           
 15829                           ; BSR set to: 0
 15830                           ;sample.c: 49: min=max=buf[0];
 15831  002E00  C07A  FFD9         	movff	___x_sample_fliter@buf,fsr2l
 15832  002E04  C07B  FFDA         	movff	___x_sample_fliter@buf+1,fsr2h
 15833  002E08  CFDE F086          	movff	postinc2,___x_sample_fliter@max
 15834  002E0C  CFDD F087          	movff	postdec2,___x_sample_fliter@max+1
 15835  002E10  C086  F088         	movff	___x_sample_fliter@max,___x_sample_fliter@min
 15836  002E14  C087  F089         	movff	___x_sample_fliter@max+1,___x_sample_fliter@min+1
 15837                           
 15838                           ; BSR set to: 0
 15839                           ;sample.c: 50: t32=0;
 15840  002E18  0E00               	movlw	0
 15841  002E1A  0100               	movlb	0	; () banked
 15842  002E1C  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 15843  002E1E  0E00               	movlw	0
 15844  002E20  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 15845  002E22  0E00               	movlw	0
 15846  002E24  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 15847  002E26  0E00               	movlw	0
 15848  002E28  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;sample.c: 51: for(i=0;i<len;i++){
 15852  002E2A  0E00               	movlw	0
 15853  002E2C  0100               	movlb	0	; () banked
 15854  002E2E  6F8E               	movwf	___x_sample_fliter@i& (0+255),b
 15855  002E30  D07F               	goto	l14843
 15856  002E32                     l14831:
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;sample.c: 52: if(min>buf[i]){min=buf[i];minLoc=i;}
 15860  002E32  0100               	movlb	0	; () banked
 15861  002E34  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 15862  002E36  0D02               	mullw	2
 15863  002E38  50F3               	movf	prodl,w,c
 15864  002E3A  0100               	movlb	0	; () banked
 15865  002E3C  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15866  002E3E  6ED9               	movwf	fsr2l,c
 15867  002E40  50F4               	movf	prodh,w,c
 15868  002E42  0100               	movlb	0	; () banked
 15869  002E44  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15870  002E46  6EDA               	movwf	fsr2h,c
 15871  002E48  0100               	movlb	0	; () banked
 15872  002E4A  5188               	movf	___x_sample_fliter@min& (0+255),w,b
 15873  002E4C  5CDE               	subwf	postinc2,w,c
 15874  002E4E  50DE               	movf	postinc2,w,c
 15875  002E50  0A80               	xorlw	128
 15876  002E52  0100               	movlb	0	; () banked
 15877  002E54  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 15878  002E56  0100               	movlb	0	; () banked
 15879  002E58  5189               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 15880  002E5A  0A80               	xorlw	128
 15881  002E5C  0100               	movlb	0	; () banked
 15882  002E5E  5980               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 15883  002E60  B0D8               	btfsc	status,0,c
 15884  002E62  D011               	goto	l1103
 15885                           
 15886                           ; BSR set to: 0
 15887  002E64  0100               	movlb	0	; () banked
 15888  002E66  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 15889  002E68  0D02               	mullw	2
 15890  002E6A  50F3               	movf	prodl,w,c
 15891  002E6C  0100               	movlb	0	; () banked
 15892  002E6E  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15893  002E70  6ED9               	movwf	fsr2l,c
 15894  002E72  50F4               	movf	prodh,w,c
 15895  002E74  0100               	movlb	0	; () banked
 15896  002E76  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15897  002E78  6EDA               	movwf	fsr2h,c
 15898  002E7A  CFDE F088          	movff	postinc2,___x_sample_fliter@min
 15899  002E7E  CFDD F089          	movff	postdec2,___x_sample_fliter@min+1
 15900                           
 15901                           ; BSR set to: 0
 15902  002E82  C08E  F085         	movff	___x_sample_fliter@i,___x_sample_fliter@minLoc
 15903  002E86                     l1103:
 15904                           
 15905                           ; BSR set to: 0
 15906                           ;sample.c: 53: if(max<buf[i]){max=buf[i];maxLoc=i;}
 15907  002E86  0100               	movlb	0	; () banked
 15908  002E88  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 15909  002E8A  0D02               	mullw	2
 15910  002E8C  50F3               	movf	prodl,w,c
 15911  002E8E  0100               	movlb	0	; () banked
 15912  002E90  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15913  002E92  6ED9               	movwf	fsr2l,c
 15914  002E94  50F4               	movf	prodh,w,c
 15915  002E96  0100               	movlb	0	; () banked
 15916  002E98  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15917  002E9A  6EDA               	movwf	fsr2h,c
 15918  002E9C  50DE               	movf	postinc2,w,c
 15919  002E9E  0100               	movlb	0	; () banked
 15920  002EA0  5D86               	subwf	___x_sample_fliter@max& (0+255),w,b
 15921  002EA2  0100               	movlb	0	; () banked
 15922  002EA4  5187               	movf	(___x_sample_fliter@max+1)& (0+255),w,b
 15923  002EA6  0A80               	xorlw	128
 15924  002EA8  0100               	movlb	0	; () banked
 15925  002EAA  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 15926  002EAC  50DE               	movf	postinc2,w,c
 15927  002EAE  0A80               	xorlw	128
 15928  002EB0  0100               	movlb	0	; () banked
 15929  002EB2  5980               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 15930  002EB4  B0D8               	btfsc	status,0,c
 15931  002EB6  D011               	goto	l1104
 15932                           
 15933                           ; BSR set to: 0
 15934  002EB8  0100               	movlb	0	; () banked
 15935  002EBA  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 15936  002EBC  0D02               	mullw	2
 15937  002EBE  50F3               	movf	prodl,w,c
 15938  002EC0  0100               	movlb	0	; () banked
 15939  002EC2  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15940  002EC4  6ED9               	movwf	fsr2l,c
 15941  002EC6  50F4               	movf	prodh,w,c
 15942  002EC8  0100               	movlb	0	; () banked
 15943  002ECA  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15944  002ECC  6EDA               	movwf	fsr2h,c
 15945  002ECE  CFDE F086          	movff	postinc2,___x_sample_fliter@max
 15946  002ED2  CFDD F087          	movff	postdec2,___x_sample_fliter@max+1
 15947                           
 15948                           ; BSR set to: 0
 15949  002ED6  C08E  F084         	movff	___x_sample_fliter@i,___x_sample_fliter@maxLoc
 15950  002EDA                     l1104:
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;sample.c: 54: t32+=buf[i];
 15954  002EDA  0100               	movlb	0	; () banked
 15955  002EDC  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 15956  002EDE  0D02               	mullw	2
 15957  002EE0  50F3               	movf	prodl,w,c
 15958  002EE2  0100               	movlb	0	; () banked
 15959  002EE4  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15960  002EE6  6ED9               	movwf	fsr2l,c
 15961  002EE8  50F4               	movf	prodh,w,c
 15962  002EEA  0100               	movlb	0	; () banked
 15963  002EEC  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15964  002EEE  6EDA               	movwf	fsr2h,c
 15965  002EF0  CFDE F07E          	movff	postinc2,??___x_sample_fliter
 15966  002EF4  CFDD F07F          	movff	postdec2,??___x_sample_fliter+1
 15967  002EF8  C07E  F080         	movff	??___x_sample_fliter,??___x_sample_fliter+2
 15968  002EFC  C07F  F081         	movff	??___x_sample_fliter+1,??___x_sample_fliter+3
 15969  002F00  0E00               	movlw	0
 15970  002F02  0100               	movlb	0	; () banked
 15971  002F04  BF81               	btfsc	(??___x_sample_fliter+3)& (0+255),7,b
 15972  002F06  0EFF               	movlw	255
 15973  002F08  6F82               	movwf	(??___x_sample_fliter+4)& (0+255),b
 15974  002F0A  6F83               	movwf	(??___x_sample_fliter+5)& (0+255),b
 15975  002F0C  0100               	movlb	0	; () banked
 15976  002F0E  5180               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 15977  002F10  0100               	movlb	0	; () banked
 15978  002F12  278A               	addwf	___x_sample_fliter@t32& (0+255),f,b
 15979  002F14  0100               	movlb	0	; () banked
 15980  002F16  5181               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 15981  002F18  0100               	movlb	0	; () banked
 15982  002F1A  238B               	addwfc	(___x_sample_fliter@t32+1)& (0+255),f,b
 15983  002F1C  0100               	movlb	0	; () banked
 15984  002F1E  5182               	movf	(??___x_sample_fliter+4)& (0+255),w,b
 15985  002F20  0100               	movlb	0	; () banked
 15986  002F22  238C               	addwfc	(___x_sample_fliter@t32+2)& (0+255),f,b
 15987  002F24  0100               	movlb	0	; () banked
 15988  002F26  5183               	movf	(??___x_sample_fliter+5)& (0+255),w,b
 15989  002F28  0100               	movlb	0	; () banked
 15990  002F2A  238D               	addwfc	(___x_sample_fliter@t32+3)& (0+255),f,b
 15991                           
 15992                           ; BSR set to: 0
 15993  002F2C  0100               	movlb	0	; () banked
 15994  002F2E  2B8E               	incf	___x_sample_fliter@i& (0+255),f,b
 15995  002F30                     l14843:
 15996                           
 15997                           ; BSR set to: 0
 15998  002F30  0100               	movlb	0	; () banked
 15999  002F32  517C               	movf	___x_sample_fliter@len& (0+255),w,b
 16000  002F34  0100               	movlb	0	; () banked
 16001  002F36  5D8E               	subwf	___x_sample_fliter@i& (0+255),w,b
 16002  002F38  A0D8               	btfss	status,0,c
 16003  002F3A  D77B               	goto	l14831
 16004                           
 16005                           ; BSR set to: 0
 16006                           ;sample.c: 55: }
 16007                           ;sample.c: 57: t32=t32-(int32_t)max;
 16008                           
 16009                           ; BSR set to: 0
 16010  002F3C  C086  F07E         	movff	___x_sample_fliter@max,??___x_sample_fliter
 16011  002F40  C087  F07F         	movff	___x_sample_fliter@max+1,??___x_sample_fliter+1
 16012  002F44  0E00               	movlw	0
 16013  002F46  0100               	movlb	0	; () banked
 16014  002F48  BF7F               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 16015  002F4A  0EFF               	movlw	255
 16016  002F4C  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16017  002F4E  6F81               	movwf	(??___x_sample_fliter+3)& (0+255),b
 16018  002F50  0100               	movlb	0	; () banked
 16019  002F52  1F7E               	comf	??___x_sample_fliter& (0+255),f,b
 16020  002F54  1F7F               	comf	(??___x_sample_fliter+1)& (0+255),f,b
 16021  002F56  1F80               	comf	(??___x_sample_fliter+2)& (0+255),f,b
 16022  002F58  1F81               	comf	(??___x_sample_fliter+3)& (0+255),f,b
 16023  002F5A  2B7E               	incf	??___x_sample_fliter& (0+255),f,b
 16024  002F5C  0E00               	movlw	0
 16025  002F5E  237F               	addwfc	(??___x_sample_fliter+1)& (0+255),f,b
 16026  002F60  2380               	addwfc	(??___x_sample_fliter+2)& (0+255),f,b
 16027  002F62  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16028  002F64  0100               	movlb	0	; () banked
 16029  002F66  518A               	movf	___x_sample_fliter@t32& (0+255),w,b
 16030  002F68  0100               	movlb	0	; () banked
 16031  002F6A  257E               	addwf	??___x_sample_fliter& (0+255),w,b
 16032  002F6C  0100               	movlb	0	; () banked
 16033  002F6E  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16034  002F70  0100               	movlb	0	; () banked
 16035  002F72  518B               	movf	(___x_sample_fliter@t32+1)& (0+255),w,b
 16036  002F74  0100               	movlb	0	; () banked
 16037  002F76  217F               	addwfc	(??___x_sample_fliter+1)& (0+255),w,b
 16038  002F78  0100               	movlb	0	; () banked
 16039  002F7A  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16040  002F7C  0100               	movlb	0	; () banked
 16041  002F7E  518C               	movf	(___x_sample_fliter@t32+2)& (0+255),w,b
 16042  002F80  0100               	movlb	0	; () banked
 16043  002F82  2180               	addwfc	(??___x_sample_fliter+2)& (0+255),w,b
 16044  002F84  0100               	movlb	0	; () banked
 16045  002F86  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16046  002F88  0100               	movlb	0	; () banked
 16047  002F8A  518D               	movf	(___x_sample_fliter@t32+3)& (0+255),w,b
 16048  002F8C  0100               	movlb	0	; () banked
 16049  002F8E  2181               	addwfc	(??___x_sample_fliter+3)& (0+255),w,b
 16050  002F90  0100               	movlb	0	; () banked
 16051  002F92  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16052                           
 16053                           ;sample.c: 58: t32=t32-(int32_t)min;
 16054  002F94  C088  F07E         	movff	___x_sample_fliter@min,??___x_sample_fliter
 16055  002F98  C089  F07F         	movff	___x_sample_fliter@min+1,??___x_sample_fliter+1
 16056  002F9C  0E00               	movlw	0
 16057  002F9E  0100               	movlb	0	; () banked
 16058  002FA0  BF7F               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 16059  002FA2  0EFF               	movlw	255
 16060  002FA4  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16061  002FA6  6F81               	movwf	(??___x_sample_fliter+3)& (0+255),b
 16062  002FA8  0100               	movlb	0	; () banked
 16063  002FAA  1F7E               	comf	??___x_sample_fliter& (0+255),f,b
 16064  002FAC  1F7F               	comf	(??___x_sample_fliter+1)& (0+255),f,b
 16065  002FAE  1F80               	comf	(??___x_sample_fliter+2)& (0+255),f,b
 16066  002FB0  1F81               	comf	(??___x_sample_fliter+3)& (0+255),f,b
 16067  002FB2  2B7E               	incf	??___x_sample_fliter& (0+255),f,b
 16068  002FB4  0E00               	movlw	0
 16069  002FB6  237F               	addwfc	(??___x_sample_fliter+1)& (0+255),f,b
 16070  002FB8  2380               	addwfc	(??___x_sample_fliter+2)& (0+255),f,b
 16071  002FBA  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16072  002FBC  0100               	movlb	0	; () banked
 16073  002FBE  518A               	movf	___x_sample_fliter@t32& (0+255),w,b
 16074  002FC0  0100               	movlb	0	; () banked
 16075  002FC2  257E               	addwf	??___x_sample_fliter& (0+255),w,b
 16076  002FC4  0100               	movlb	0	; () banked
 16077  002FC6  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16078  002FC8  0100               	movlb	0	; () banked
 16079  002FCA  518B               	movf	(___x_sample_fliter@t32+1)& (0+255),w,b
 16080  002FCC  0100               	movlb	0	; () banked
 16081  002FCE  217F               	addwfc	(??___x_sample_fliter+1)& (0+255),w,b
 16082  002FD0  0100               	movlb	0	; () banked
 16083  002FD2  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16084  002FD4  0100               	movlb	0	; () banked
 16085  002FD6  518C               	movf	(___x_sample_fliter@t32+2)& (0+255),w,b
 16086  002FD8  0100               	movlb	0	; () banked
 16087  002FDA  2180               	addwfc	(??___x_sample_fliter+2)& (0+255),w,b
 16088  002FDC  0100               	movlb	0	; () banked
 16089  002FDE  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16090  002FE0  0100               	movlb	0	; () banked
 16091  002FE2  518D               	movf	(___x_sample_fliter@t32+3)& (0+255),w,b
 16092  002FE4  0100               	movlb	0	; () banked
 16093  002FE6  2181               	addwfc	(??___x_sample_fliter+3)& (0+255),w,b
 16094  002FE8  0100               	movlb	0	; () banked
 16095  002FEA  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;sample.c: 59: t32=t32/(len-2);
 16099  002FEC  C08A  F06C         	movff	___x_sample_fliter@t32,___aldiv@dividend
 16100  002FF0  C08B  F06D         	movff	___x_sample_fliter@t32+1,___aldiv@dividend+1
 16101  002FF4  C08C  F06E         	movff	___x_sample_fliter@t32+2,___aldiv@dividend+2
 16102  002FF8  C08D  F06F         	movff	___x_sample_fliter@t32+3,___aldiv@dividend+3
 16103  002FFC  0EFE               	movlw	254
 16104  002FFE  0100               	movlb	0	; () banked
 16105  003000  6F7E               	movwf	??___x_sample_fliter& (0+255),b
 16106  003002  0EFF               	movlw	255
 16107  003004  0100               	movlb	0	; () banked
 16108  003006  6F7F               	movwf	(??___x_sample_fliter+1)& (0+255),b
 16109  003008  0100               	movlb	0	; () banked
 16110  00300A  517C               	movf	___x_sample_fliter@len& (0+255),w,b
 16111  00300C  0100               	movlb	0	; () banked
 16112  00300E  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16113  003010  6B81               	clrf	(??___x_sample_fliter+3)& (0+255),b
 16114  003012  0100               	movlb	0	; () banked
 16115  003014  517E               	movf	??___x_sample_fliter& (0+255),w,b
 16116  003016  0100               	movlb	0	; () banked
 16117  003018  2780               	addwf	(??___x_sample_fliter+2)& (0+255),f,b
 16118  00301A  0100               	movlb	0	; () banked
 16119  00301C  517F               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 16120  00301E  0100               	movlb	0	; () banked
 16121  003020  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16122  003022  C080  F070         	movff	??___x_sample_fliter+2,___aldiv@divisor
 16123  003026  C081  F071         	movff	??___x_sample_fliter+3,___aldiv@divisor+1
 16124  00302A  0100               	movlb	0	; () banked
 16125  00302C  0E00               	movlw	0
 16126  00302E  BF71               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
 16127  003030  0EFF               	movlw	-1
 16128  003032  6F72               	movwf	(___aldiv@divisor+2)& (0+255),b
 16129  003034  6F73               	movwf	(___aldiv@divisor+3)& (0+255),b
 16130  003036  EC62  F02D         	call	___aldiv	;wreg free
 16131  00303A  C06C  F08A         	movff	?___aldiv,___x_sample_fliter@t32
 16132  00303E  C06D  F08B         	movff	?___aldiv+1,___x_sample_fliter@t32+1
 16133  003042  C06E  F08C         	movff	?___aldiv+2,___x_sample_fliter@t32+2
 16134  003046  C06F  F08D         	movff	?___aldiv+3,___x_sample_fliter@t32+3
 16135                           
 16136                           ;sample.c: 60: buf[minLoc]=(int16_t)t32;
 16137  00304A  0100               	movlb	0	; () banked
 16138  00304C  5185               	movf	___x_sample_fliter@minLoc& (0+255),w,b
 16139  00304E  0D02               	mullw	2
 16140  003050  50F3               	movf	prodl,w,c
 16141  003052  0100               	movlb	0	; () banked
 16142  003054  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16143  003056  6ED9               	movwf	fsr2l,c
 16144  003058  50F4               	movf	prodh,w,c
 16145  00305A  0100               	movlb	0	; () banked
 16146  00305C  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16147  00305E  6EDA               	movwf	fsr2h,c
 16148  003060  C08A  FFDE         	movff	___x_sample_fliter@t32,postinc2
 16149  003064  C08B  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;sample.c: 61: buf[maxLoc]=(int16_t)t32;
 16153  003068  0100               	movlb	0	; () banked
 16154  00306A  5184               	movf	___x_sample_fliter@maxLoc& (0+255),w,b
 16155  00306C  0D02               	mullw	2
 16156  00306E  50F3               	movf	prodl,w,c
 16157  003070  0100               	movlb	0	; () banked
 16158  003072  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16159  003074  6ED9               	movwf	fsr2l,c
 16160  003076  50F4               	movf	prodh,w,c
 16161  003078  0100               	movlb	0	; () banked
 16162  00307A  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16163  00307C  6EDA               	movwf	fsr2h,c
 16164  00307E  C08A  FFDE         	movff	___x_sample_fliter@t32,postinc2
 16165  003082  C08B  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 16166                           
 16167                           ; BSR set to: 0
 16168                           ;sample.c: 62: loop--;
 16169  003086  0100               	movlb	0	; () banked
 16170  003088  077D               	decf	___x_sample_fliter@loop& (0+255),f,b
 16171  00308A                     l14855:
 16172                           
 16173                           ; BSR set to: 0
 16174  00308A  0100               	movlb	0	; () banked
 16175  00308C  517D               	movf	___x_sample_fliter@loop& (0+255),w,b
 16176  00308E  0100               	movlb	0	; () banked
 16177  003090  A4D8               	btfss	status,2,c
 16178  003092  D6B6               	goto	l14825
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;sample.c: 63: }
 16182                           ;sample.c: 64: return (int16_t)t32;
 16183  003094  C08A  F07A         	movff	___x_sample_fliter@t32,?___x_sample_fliter
 16184  003098  C08B  F07B         	movff	___x_sample_fliter@t32+1,?___x_sample_fliter+1
 16185                           
 16186                           ; BSR set to: 0
 16187  00309C  0012               	return		;funcret
 16188  00309E                     __end_of___x_sample_fliter:
 16189                           	opt stack 0
 16190                           tblptru	equ	0xFF8
 16191                           tblptrh	equ	0xFF7
 16192                           tblptrl	equ	0xFF6
 16193                           tablat	equ	0xFF5
 16194                           prodh	equ	0xFF4
 16195                           prodl	equ	0xFF3
 16196                           intcon	equ	0xFF2
 16197                           postinc0	equ	0xFEE
 16198                           wreg	equ	0xFE8
 16199                           indf1	equ	0xFE7
 16200                           postinc1	equ	0xFE6
 16201                           postdec1	equ	0xFE5
 16202                           plusw1	equ	0xFE3
 16203                           fsr1h	equ	0xFE2
 16204                           fsr1l	equ	0xFE1
 16205                           indf2	equ	0xFDF
 16206                           postinc2	equ	0xFDE
 16207                           postdec2	equ	0xFDD
 16208                           plusw2	equ	0xFDB
 16209                           fsr2h	equ	0xFDA
 16210                           fsr2l	equ	0xFD9
 16211                           status	equ	0xFD8
 16212                           
 16213 ;; *************** function _ads1115_start_conversion *****************
 16214 ;; Defined at:
 16215 ;;		line 122 in file "src/driver/ads1115.c"
 16216 ;; Parameters:    Size  Location     Type
 16217 ;;  pAds1115        2   11[BANK0 ] PTR struct .
 16218 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;		None
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16234 ;;Total ram usage:        2 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; Hardware stack levels required when called:    9
 16237 ;; This function calls:
 16238 ;;		_ads1115_write_reg
 16239 ;; This function is called by:
 16240 ;;		_sample_diff_pr_chip_fast
 16241 ;;		_sample_pr_chip_fast
 16242 ;; This function uses a non-reentrant model
 16243 ;;
 16244                           
 16245                           	psect	text84
 16246  009F54                     __ptext84:
 16247                           	opt stack 0
 16248  009F54                     _ads1115_start_conversion:
 16249                           	opt stack 18
 16250                           
 16251                           ;ads1115.c: 124: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;incstack = 0
 16255  009F54  C06B  F066         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 16256  009F58  C06C  F067         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 16257  009F5C  0E01               	movlw	1
 16258  009F5E  0100               	movlb	0	; () banked
 16259  009F60  6F68               	movwf	ads1115_write_reg@addr& (0+255),b
 16260  009F62  0100               	movlb	0	; () banked
 16261  009F64  EE20 F002          	lfsr	2,2
 16262  009F68  516B               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 16263  009F6A  26D9               	addwf	fsr2l,f,c
 16264  009F6C  516C               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 16265  009F6E  22DA               	addwfc	fsr2h,f,c
 16266  009F70  CFDE F069          	movff	postinc2,ads1115_write_reg@value
 16267  009F74  CFDD F06A          	movff	postdec2,ads1115_write_reg@value+1
 16268  009F78  EC11  F032         	call	_ads1115_write_reg	;wreg free
 16269  009F7C  0012               	return		;funcret
 16270  009F7E                     __end_of_ads1115_start_conversion:
 16271                           	opt stack 0
 16272                           tblptru	equ	0xFF8
 16273                           tblptrh	equ	0xFF7
 16274                           tblptrl	equ	0xFF6
 16275                           tablat	equ	0xFF5
 16276                           prodh	equ	0xFF4
 16277                           prodl	equ	0xFF3
 16278                           intcon	equ	0xFF2
 16279                           postinc0	equ	0xFEE
 16280                           wreg	equ	0xFE8
 16281                           indf1	equ	0xFE7
 16282                           postinc1	equ	0xFE6
 16283                           postdec1	equ	0xFE5
 16284                           plusw1	equ	0xFE3
 16285                           fsr1h	equ	0xFE2
 16286                           fsr1l	equ	0xFE1
 16287                           indf2	equ	0xFDF
 16288                           postinc2	equ	0xFDE
 16289                           postdec2	equ	0xFDD
 16290                           plusw2	equ	0xFDB
 16291                           fsr2h	equ	0xFDA
 16292                           fsr2l	equ	0xFD9
 16293                           status	equ	0xFD8
 16294                           
 16295 ;; *************** function _ads1115_write_reg *****************
 16296 ;; Defined at:
 16297 ;;		line 17 in file "src/driver/ads1115.c"
 16298 ;; Parameters:    Size  Location     Type
 16299 ;;  pAds1115        2    6[BANK0 ] PTR struct .
 16300 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16301 ;;  addr            1    8[BANK0 ] unsigned char 
 16302 ;;  value           2    9[BANK0 ] unsigned int 
 16303 ;; Auto vars:     Size  Location     Type
 16304 ;;		None
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      void 
 16307 ;; Registers used:
 16308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16314 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16317 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16318 ;;Total ram usage:        5 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    8
 16321 ;; This function calls:
 16322 ;;		_iic_send_byte
 16323 ;;		_iic_start
 16324 ;;		_iic_stop
 16325 ;; This function is called by:
 16326 ;;		_ads1115_start_conversion
 16327 ;;		_ads1115_set_threshold_lo
 16328 ;;		_ads1115_set_threshold_hi
 16329 ;; This function uses a non-reentrant model
 16330 ;;
 16331                           
 16332                           	psect	text85
 16333  006422                     __ptext85:
 16334                           	opt stack 0
 16335  006422                     _ads1115_write_reg:
 16336                           	opt stack 18
 16337                           
 16338                           ;ads1115.c: 19: pAds1115->iic_start();
 16339                           
 16340                           ;incstack = 0
 16341  006422  0100               	movlb	0	; () banked
 16342  006424  EE20 F006          	lfsr	2,6
 16343  006428  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16344  00642A  26D9               	addwf	fsr2l,f,c
 16345  00642C  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16346  00642E  22DA               	addwfc	fsr2h,f,c
 16347  006430  D801               	call	u13758
 16348  006432  D00A               	goto	u13759
 16349  006434                     u13758:
 16350  006434  0005               	push	
 16351  006436  6EFA               	movwf	pclath,c
 16352  006438  50DE               	movf	postinc2,w,c
 16353  00643A  6EFD               	movwf	tosl,c
 16354  00643C  50DE               	movf	postinc2,w,c
 16355  00643E  6EFE               	movwf	tosh,c
 16356  006440  50F8               	movf	tblptru,w,c
 16357  006442  6EFF               	movwf	tosu,c
 16358  006444  50FA               	movf	pclath,w,c
 16359  006446  0012               	return		;indir
 16360  006448                     u13759:
 16361                           
 16362                           ;ads1115.c: 21: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 16363  006448  0100               	movlb	0	; () banked
 16364  00644A  EE20 F00A          	lfsr	2,10
 16365  00644E  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16366  006450  26D9               	addwf	fsr2l,f,c
 16367  006452  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16368  006454  22DA               	addwfc	fsr2h,f,c
 16369  006456  D801               	call	u13768
 16370  006458  D012               	goto	u13769
 16371  00645A                     u13768:
 16372  00645A  0005               	push	
 16373  00645C  6EFA               	movwf	pclath,c
 16374  00645E  50DE               	movf	postinc2,w,c
 16375  006460  6EFD               	movwf	tosl,c
 16376  006462  50DE               	movf	postinc2,w,c
 16377  006464  6EFE               	movwf	tosh,c
 16378  006466  50F8               	movf	tblptru,w,c
 16379  006468  6EFF               	movwf	tosu,c
 16380  00646A  50FA               	movf	pclath,w,c
 16381  00646C  0100               	movlb	0	; () banked
 16382  00646E  EE20 F001          	lfsr	2,1
 16383  006472  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16384  006474  26D9               	addwf	fsr2l,f,c
 16385  006476  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16386  006478  22DA               	addwfc	fsr2h,f,c
 16387  00647A  50DF               	movf	indf2,w,c
 16388  00647C  0012               	return		;indir
 16389  00647E                     u13769:
 16390                           
 16391                           ;ads1115.c: 22: pAds1115->iic_send_byte(addr);
 16392  00647E  0100               	movlb	0	; () banked
 16393  006480  EE20 F00A          	lfsr	2,10
 16394  006484  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16395  006486  26D9               	addwf	fsr2l,f,c
 16396  006488  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16397  00648A  22DA               	addwfc	fsr2h,f,c
 16398  00648C  D801               	call	u13778
 16399  00648E  D00C               	goto	u13779
 16400  006490                     u13778:
 16401  006490  0005               	push	
 16402  006492  6EFA               	movwf	pclath,c
 16403  006494  50DE               	movf	postinc2,w,c
 16404  006496  6EFD               	movwf	tosl,c
 16405  006498  50DE               	movf	postinc2,w,c
 16406  00649A  6EFE               	movwf	tosh,c
 16407  00649C  50F8               	movf	tblptru,w,c
 16408  00649E  6EFF               	movwf	tosu,c
 16409  0064A0  50FA               	movf	pclath,w,c
 16410  0064A2  0100               	movlb	0	; () banked
 16411  0064A4  5168               	movf	ads1115_write_reg@addr& (0+255),w,b
 16412  0064A6  0012               	return		;indir
 16413  0064A8                     u13779:
 16414                           
 16415                           ;ads1115.c: 24: pAds1115->iic_send_byte((uint8_t)(value>>8));
 16416  0064A8  0100               	movlb	0	; () banked
 16417  0064AA  EE20 F00A          	lfsr	2,10
 16418  0064AE  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16419  0064B0  26D9               	addwf	fsr2l,f,c
 16420  0064B2  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16421  0064B4  22DA               	addwfc	fsr2h,f,c
 16422  0064B6  D801               	call	u13788
 16423  0064B8  D00C               	goto	u13789
 16424  0064BA                     u13788:
 16425  0064BA  0005               	push	
 16426  0064BC  6EFA               	movwf	pclath,c
 16427  0064BE  50DE               	movf	postinc2,w,c
 16428  0064C0  6EFD               	movwf	tosl,c
 16429  0064C2  50DE               	movf	postinc2,w,c
 16430  0064C4  6EFE               	movwf	tosh,c
 16431  0064C6  50F8               	movf	tblptru,w,c
 16432  0064C8  6EFF               	movwf	tosu,c
 16433  0064CA  50FA               	movf	pclath,w,c
 16434  0064CC  0100               	movlb	0	; () banked
 16435  0064CE  516A               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 16436  0064D0  0012               	return		;indir
 16437  0064D2                     u13789:
 16438                           
 16439                           ;ads1115.c: 25: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 16440  0064D2  0100               	movlb	0	; () banked
 16441  0064D4  EE20 F00A          	lfsr	2,10
 16442  0064D8  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16443  0064DA  26D9               	addwf	fsr2l,f,c
 16444  0064DC  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16445  0064DE  22DA               	addwfc	fsr2h,f,c
 16446  0064E0  D801               	call	u13798
 16447  0064E2  D00C               	goto	u13799
 16448  0064E4                     u13798:
 16449  0064E4  0005               	push	
 16450  0064E6  6EFA               	movwf	pclath,c
 16451  0064E8  50DE               	movf	postinc2,w,c
 16452  0064EA  6EFD               	movwf	tosl,c
 16453  0064EC  50DE               	movf	postinc2,w,c
 16454  0064EE  6EFE               	movwf	tosh,c
 16455  0064F0  50F8               	movf	tblptru,w,c
 16456  0064F2  6EFF               	movwf	tosu,c
 16457  0064F4  50FA               	movf	pclath,w,c
 16458  0064F6  0100               	movlb	0	; () banked
 16459  0064F8  5169               	movf	ads1115_write_reg@value& (0+255),w,b
 16460  0064FA  0012               	return		;indir
 16461  0064FC                     u13799:
 16462                           
 16463                           ;ads1115.c: 26: pAds1115->iic_stop();
 16464  0064FC  0100               	movlb	0	; () banked
 16465  0064FE  EE20 F008          	lfsr	2,8
 16466  006502  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16467  006504  26D9               	addwf	fsr2l,f,c
 16468  006506  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16469  006508  22DA               	addwfc	fsr2h,f,c
 16470  00650A  D801               	call	u13808
 16471  00650C  0012               	return	
 16472  00650E                     u13808:
 16473  00650E  0005               	push	
 16474  006510  6EFA               	movwf	pclath,c
 16475  006512  50DE               	movf	postinc2,w,c
 16476  006514  6EFD               	movwf	tosl,c
 16477  006516  50DE               	movf	postinc2,w,c
 16478  006518  6EFE               	movwf	tosh,c
 16479  00651A  50F8               	movf	tblptru,w,c
 16480  00651C  6EFF               	movwf	tosu,c
 16481  00651E  50FA               	movf	pclath,w,c
 16482  006520  0012               	return		;indir
 16483  006522                     __end_of_ads1115_write_reg:
 16484                           	opt stack 0
 16485                           tosu	equ	0xFFF
 16486                           tosh	equ	0xFFE
 16487                           tosl	equ	0xFFD
 16488                           pclath	equ	0xFFA
 16489                           tblptru	equ	0xFF8
 16490                           tblptrh	equ	0xFF7
 16491                           tblptrl	equ	0xFF6
 16492                           tablat	equ	0xFF5
 16493                           prodh	equ	0xFF4
 16494                           prodl	equ	0xFF3
 16495                           intcon	equ	0xFF2
 16496                           postinc0	equ	0xFEE
 16497                           wreg	equ	0xFE8
 16498                           indf1	equ	0xFE7
 16499                           postinc1	equ	0xFE6
 16500                           postdec1	equ	0xFE5
 16501                           plusw1	equ	0xFE3
 16502                           fsr1h	equ	0xFE2
 16503                           fsr1l	equ	0xFE1
 16504                           indf2	equ	0xFDF
 16505                           postinc2	equ	0xFDE
 16506                           postdec2	equ	0xFDD
 16507                           plusw2	equ	0xFDB
 16508                           fsr2h	equ	0xFDA
 16509                           fsr2l	equ	0xFD9
 16510                           status	equ	0xFD8
 16511                           
 16512 ;; *************** function _ads1115_set_pga *****************
 16513 ;; Defined at:
 16514 ;;		line 59 in file "src/driver/ads1115.c"
 16515 ;; Parameters:    Size  Location     Type
 16516 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16517 ;;		 -> ads1115Chip1(16), NULL(0), 
 16518 ;;  pga             1    2[BANK0 ] enum E6987
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;		None
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  1    wreg      void 
 16523 ;; Registers used:
 16524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16530 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16533 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16534 ;;Total ram usage:        4 bytes
 16535 ;; Hardware stack levels used:    1
 16536 ;; Hardware stack levels required when called:    4
 16537 ;; This function calls:
 16538 ;;		Nothing
 16539 ;; This function is called by:
 16540 ;;		_sample_diff_pr_chip_fast
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text86
 16545  00A0DC                     __ptext86:
 16546                           	opt stack 0
 16547  00A0DC                     _ads1115_set_pga:
 16548                           	opt stack 23
 16549                           
 16550                           ;ads1115.c: 61: pAds1115->config.bits.PGA=pga;
 16551                           
 16552                           ;incstack = 0
 16553  00A0DC  C062  F020         	movff	ads1115_set_pga@pga,??_ads1115_set_pga
 16554  00A0E0  0100               	movlb	0	; () banked
 16555  00A0E2  EE20 F003          	lfsr	2,3
 16556  00A0E6  5160               	movf	ads1115_set_pga@pAds1115& (0+255),w,b
 16557  00A0E8  26D9               	addwf	fsr2l,f,c
 16558  00A0EA  5161               	movf	(ads1115_set_pga@pAds1115+1)& (0+255),w,b
 16559  00A0EC  22DA               	addwfc	fsr2h,f,c
 16560  00A0EE  4620               	rlncf	??_ads1115_set_pga,f,c
 16561  00A0F0  0100               	movlb	0	; () banked
 16562  00A0F2  50DF               	movf	223,w,c
 16563  00A0F4  1820               	xorwf	??_ads1115_set_pga,w,c
 16564  00A0F6  0BF1               	andlw	-15
 16565  00A0F8  1820               	xorwf	??_ads1115_set_pga,w,c
 16566  00A0FA  0100               	movlb	0	; () banked
 16567  00A0FC  6EDF               	movwf	223,c
 16568                           
 16569                           ; BSR set to: 0
 16570  00A0FE  0012               	return		;funcret
 16571  00A100                     __end_of_ads1115_set_pga:
 16572                           	opt stack 0
 16573                           tosu	equ	0xFFF
 16574                           tosh	equ	0xFFE
 16575                           tosl	equ	0xFFD
 16576                           pclath	equ	0xFFA
 16577                           tblptru	equ	0xFF8
 16578                           tblptrh	equ	0xFF7
 16579                           tblptrl	equ	0xFF6
 16580                           tablat	equ	0xFF5
 16581                           prodh	equ	0xFF4
 16582                           prodl	equ	0xFF3
 16583                           intcon	equ	0xFF2
 16584                           postinc0	equ	0xFEE
 16585                           wreg	equ	0xFE8
 16586                           indf1	equ	0xFE7
 16587                           postinc1	equ	0xFE6
 16588                           postdec1	equ	0xFE5
 16589                           plusw1	equ	0xFE3
 16590                           fsr1h	equ	0xFE2
 16591                           fsr1l	equ	0xFE1
 16592                           indf2	equ	0xFDF
 16593                           postinc2	equ	0xFDE
 16594                           postdec2	equ	0xFDD
 16595                           plusw2	equ	0xFDB
 16596                           fsr2h	equ	0xFDA
 16597                           fsr2l	equ	0xFD9
 16598                           status	equ	0xFD8
 16599                           
 16600 ;; *************** function _ads1115_set_mux *****************
 16601 ;; Defined at:
 16602 ;;		line 54 in file "src/driver/ads1115.c"
 16603 ;; Parameters:    Size  Location     Type
 16604 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16605 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16606 ;;  mux             1    2[BANK0 ] enum E6976
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;		None
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  1    wreg      void 
 16611 ;; Registers used:
 16612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/0
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16618 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16621 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16622 ;;Total ram usage:        4 bytes
 16623 ;; Hardware stack levels used:    1
 16624 ;; Hardware stack levels required when called:    4
 16625 ;; This function calls:
 16626 ;;		Nothing
 16627 ;; This function is called by:
 16628 ;;		_sample_diff_pr_chip_fast
 16629 ;;		_sample_pr_chip_fast
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text87
 16634  00A100                     __ptext87:
 16635                           	opt stack 0
 16636  00A100                     _ads1115_set_mux:
 16637                           	opt stack 23
 16638                           
 16639                           ;ads1115.c: 56: pAds1115->config.bits.MUX=mux;
 16640                           
 16641                           ; BSR set to: 0
 16642                           ;incstack = 0
 16643  00A100  C062  F020         	movff	ads1115_set_mux@mux,??_ads1115_set_mux
 16644  00A104  0100               	movlb	0	; () banked
 16645  00A106  EE20 F003          	lfsr	2,3
 16646  00A10A  5160               	movf	ads1115_set_mux@pAds1115& (0+255),w,b
 16647  00A10C  26D9               	addwf	fsr2l,f,c
 16648  00A10E  5161               	movf	(ads1115_set_mux@pAds1115+1)& (0+255),w,b
 16649  00A110  22DA               	addwfc	fsr2h,f,c
 16650  00A112  3A20               	swapf	??_ads1115_set_mux,f,c
 16651  00A114  0100               	movlb	0	; () banked
 16652  00A116  50DF               	movf	223,w,c
 16653  00A118  1820               	xorwf	??_ads1115_set_mux,w,c
 16654  00A11A  0B8F               	andlw	-113
 16655  00A11C  1820               	xorwf	??_ads1115_set_mux,w,c
 16656  00A11E  0100               	movlb	0	; () banked
 16657  00A120  6EDF               	movwf	223,c
 16658                           
 16659                           ; BSR set to: 0
 16660  00A122  0012               	return		;funcret
 16661  00A124                     __end_of_ads1115_set_mux:
 16662                           	opt stack 0
 16663                           tosu	equ	0xFFF
 16664                           tosh	equ	0xFFE
 16665                           tosl	equ	0xFFD
 16666                           pclath	equ	0xFFA
 16667                           tblptru	equ	0xFF8
 16668                           tblptrh	equ	0xFF7
 16669                           tblptrl	equ	0xFF6
 16670                           tablat	equ	0xFF5
 16671                           prodh	equ	0xFF4
 16672                           prodl	equ	0xFF3
 16673                           intcon	equ	0xFF2
 16674                           postinc0	equ	0xFEE
 16675                           wreg	equ	0xFE8
 16676                           indf1	equ	0xFE7
 16677                           postinc1	equ	0xFE6
 16678                           postdec1	equ	0xFE5
 16679                           plusw1	equ	0xFE3
 16680                           fsr1h	equ	0xFE2
 16681                           fsr1l	equ	0xFE1
 16682                           indf2	equ	0xFDF
 16683                           postinc2	equ	0xFDE
 16684                           postdec2	equ	0xFDD
 16685                           plusw2	equ	0xFDB
 16686                           fsr2h	equ	0xFDA
 16687                           fsr2l	equ	0xFD9
 16688                           status	equ	0xFD8
 16689                           
 16690 ;; *************** function _ads1115_set_data_rate *****************
 16691 ;; Defined at:
 16692 ;;		line 69 in file "src/driver/ads1115.c"
 16693 ;; Parameters:    Size  Location     Type
 16694 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16695 ;;		 -> ads1115Chip1(16), NULL(0), 
 16696 ;;  dr              1    2[BANK0 ] enum E7001
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;		None
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  1    wreg      void 
 16701 ;; Registers used:
 16702 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16708 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16711 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16712 ;;Total ram usage:        4 bytes
 16713 ;; Hardware stack levels used:    1
 16714 ;; Hardware stack levels required when called:    4
 16715 ;; This function calls:
 16716 ;;		Nothing
 16717 ;; This function is called by:
 16718 ;;		_sample_diff_pr_chip_fast
 16719 ;; This function uses a non-reentrant model
 16720 ;;
 16721                           
 16722                           	psect	text88
 16723  00A024                     __ptext88:
 16724                           	opt stack 0
 16725  00A024                     _ads1115_set_data_rate:
 16726                           	opt stack 23
 16727                           
 16728                           ;ads1115.c: 71: pAds1115->config.bits.DR=dr;
 16729                           
 16730                           ; BSR set to: 0
 16731                           ;incstack = 0
 16732  00A024  C062  F020         	movff	ads1115_set_data_rate@dr,??_ads1115_set_data_rate
 16733  00A028  0100               	movlb	0	; () banked
 16734  00A02A  EE20 F002          	lfsr	2,2
 16735  00A02E  5160               	movf	ads1115_set_data_rate@pAds1115& (0+255),w,b
 16736  00A030  26D9               	addwf	fsr2l,f,c
 16737  00A032  5161               	movf	(ads1115_set_data_rate@pAds1115+1)& (0+255),w,b
 16738  00A034  22DA               	addwfc	fsr2h,f,c
 16739  00A036  3A20               	swapf	??_ads1115_set_data_rate,f,c
 16740  00A038  4620               	rlncf	??_ads1115_set_data_rate,f,c
 16741  00A03A  0100               	movlb	0	; () banked
 16742  00A03C  50DF               	movf	223,w,c
 16743  00A03E  1820               	xorwf	??_ads1115_set_data_rate,w,c
 16744  00A040  0B1F               	andlw	-225
 16745  00A042  1820               	xorwf	??_ads1115_set_data_rate,w,c
 16746  00A044  0100               	movlb	0	; () banked
 16747  00A046  6EDF               	movwf	223,c
 16748                           
 16749                           ; BSR set to: 0
 16750  00A048  0012               	return		;funcret
 16751  00A04A                     __end_of_ads1115_set_data_rate:
 16752                           	opt stack 0
 16753                           tosu	equ	0xFFF
 16754                           tosh	equ	0xFFE
 16755                           tosl	equ	0xFFD
 16756                           pclath	equ	0xFFA
 16757                           tblptru	equ	0xFF8
 16758                           tblptrh	equ	0xFF7
 16759                           tblptrl	equ	0xFF6
 16760                           tablat	equ	0xFF5
 16761                           prodh	equ	0xFF4
 16762                           prodl	equ	0xFF3
 16763                           intcon	equ	0xFF2
 16764                           postinc0	equ	0xFEE
 16765                           wreg	equ	0xFE8
 16766                           indf1	equ	0xFE7
 16767                           postinc1	equ	0xFE6
 16768                           postdec1	equ	0xFE5
 16769                           plusw1	equ	0xFE3
 16770                           fsr1h	equ	0xFE2
 16771                           fsr1l	equ	0xFE1
 16772                           indf2	equ	0xFDF
 16773                           postinc2	equ	0xFDE
 16774                           postdec2	equ	0xFDD
 16775                           plusw2	equ	0xFDB
 16776                           fsr2h	equ	0xFDA
 16777                           fsr2l	equ	0xFD9
 16778                           status	equ	0xFD8
 16779                           
 16780 ;; *************** function _ads1115_read_conversion *****************
 16781 ;; Defined at:
 16782 ;;		line 127 in file "src/driver/ads1115.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;  pAds1115        2   14[BANK0 ] PTR struct .
 16785 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;  result          2   17[BANK0 ] unsigned int 
 16788 ;; Return value:  Size  Location     Type
 16789 ;;                  2   14[BANK0 ] unsigned int 
 16790 ;; Registers used:
 16791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16792 ;; Tracked objects:
 16793 ;;		On entry : 0/0
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16800 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16801 ;;Total ram usage:        5 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; Hardware stack levels required when called:    9
 16804 ;; This function calls:
 16805 ;;		_ads1115_read_reg
 16806 ;; This function is called by:
 16807 ;;		_sample_diff_pr_chip_fast
 16808 ;;		_sample_pr_chip_fast
 16809 ;; This function uses a non-reentrant model
 16810 ;;
 16811                           
 16812                           	psect	text89
 16813  009814                     __ptext89:
 16814                           	opt stack 0
 16815  009814                     _ads1115_read_conversion:
 16816                           	opt stack 18
 16817                           
 16818                           ;ads1115.c: 129: uint16_t result;
 16819                           ;ads1115.c: 130: result=ads1115_read_reg(pAds1115,(0x00));
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;incstack = 0
 16823  009814  C06E  F068         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 16824  009818  C06F  F069         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 16825  00981C  0E00               	movlw	0
 16826  00981E  0100               	movlb	0	; () banked
 16827  009820  6F6A               	movwf	ads1115_read_reg@addr& (0+255),b
 16828  009822  ECDA  F021         	call	_ads1115_read_reg
 16829  009826  C068  F071         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 16830  00982A  C069  F072         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 16831                           
 16832                           ;ads1115.c: 131: if(pAds1115->chip<ADS1113){
 16833  00982E  C06E  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 16834  009832  C06F  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 16835  009836  0E03               	movlw	3
 16836  009838  60DF               	cpfslt	indf2,c
 16837  00983A  D00A               	goto	l15581
 16838                           
 16839                           ;ads1115.c: 132: result >>= 4;
 16840  00983C  0100               	movlb	0	; () banked
 16841  00983E  3B71               	swapf	ads1115_read_conversion@result& (0+255),f,b
 16842  009840  3B72               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 16843  009842  0E0F               	movlw	15
 16844  009844  1771               	andwf	ads1115_read_conversion@result& (0+255),f,b
 16845  009846  5172               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 16846  009848  0BF0               	andlw	240
 16847  00984A  1371               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 16848  00984C  0E0F               	movlw	15
 16849  00984E  1772               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 16850  009850                     l15581:
 16851                           
 16852                           ;ads1115.c: 133: }
 16853                           ;ads1115.c: 134: return result;
 16854  009850  C071  F06E         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 16855  009854  C072  F06F         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 16856  009858  0012               	return	
 16857  00985A                     __end_of_ads1115_read_conversion:
 16858                           	opt stack 0
 16859                           tosu	equ	0xFFF
 16860                           tosh	equ	0xFFE
 16861                           tosl	equ	0xFFD
 16862                           pclath	equ	0xFFA
 16863                           tblptru	equ	0xFF8
 16864                           tblptrh	equ	0xFF7
 16865                           tblptrl	equ	0xFF6
 16866                           tablat	equ	0xFF5
 16867                           prodh	equ	0xFF4
 16868                           prodl	equ	0xFF3
 16869                           intcon	equ	0xFF2
 16870                           postinc0	equ	0xFEE
 16871                           wreg	equ	0xFE8
 16872                           indf1	equ	0xFE7
 16873                           postinc1	equ	0xFE6
 16874                           postdec1	equ	0xFE5
 16875                           plusw1	equ	0xFE3
 16876                           fsr1h	equ	0xFE2
 16877                           fsr1l	equ	0xFE1
 16878                           indf2	equ	0xFDF
 16879                           postinc2	equ	0xFDE
 16880                           postdec2	equ	0xFDD
 16881                           plusw2	equ	0xFDB
 16882                           fsr2h	equ	0xFDA
 16883                           fsr2l	equ	0xFD9
 16884                           status	equ	0xFD8
 16885                           
 16886 ;; *************** function _ads1115_read_reg *****************
 16887 ;; Defined at:
 16888 ;;		line 29 in file "src/driver/ads1115.c"
 16889 ;; Parameters:    Size  Location     Type
 16890 ;;  pAds1115        2    8[BANK0 ] PTR struct .
 16891 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16892 ;;  addr            1   10[BANK0 ] unsigned char 
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;  t16             2   12[BANK0 ] unsigned int 
 16895 ;; Return value:  Size  Location     Type
 16896 ;;                  2    8[BANK0 ] unsigned int 
 16897 ;; Registers used:
 16898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16899 ;; Tracked objects:
 16900 ;;		On entry : 0/0
 16901 ;;		On exit  : 0/0
 16902 ;;		Unchanged: 0/0
 16903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16904 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16908 ;;Total ram usage:        6 bytes
 16909 ;; Hardware stack levels used:    1
 16910 ;; Hardware stack levels required when called:    8
 16911 ;; This function calls:
 16912 ;;		_iic_received_byte_if_ack
 16913 ;;		_iic_send_byte
 16914 ;;		_iic_start
 16915 ;;		_iic_stop
 16916 ;; This function is called by:
 16917 ;;		_ads1115_read_conversion
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text90
 16922  0043B4                     __ptext90:
 16923                           	opt stack 0
 16924  0043B4                     _ads1115_read_reg:
 16925                           	opt stack 18
 16926                           
 16927                           ;ads1115.c: 31: uint16_t t16=0;
 16928                           
 16929                           ;incstack = 0
 16930  0043B4  0E00               	movlw	0
 16931  0043B6  0100               	movlb	0	; () banked
 16932  0043B8  6F6D               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 16933  0043BA  0E00               	movlw	0
 16934  0043BC  6F6C               	movwf	ads1115_read_reg@t16& (0+255),b
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;ads1115.c: 32: pAds1115->iic_start();
 16938  0043BE  0100               	movlb	0	; () banked
 16939  0043C0  EE20 F006          	lfsr	2,6
 16940  0043C4  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16941  0043C6  26D9               	addwf	fsr2l,f,c
 16942  0043C8  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16943  0043CA  22DA               	addwfc	fsr2h,f,c
 16944  0043CC  D801               	call	u13818
 16945  0043CE  D00A               	goto	l14863
 16946  0043D0                     u13818:
 16947  0043D0  0005               	push	
 16948  0043D2  6EFA               	movwf	pclath,c
 16949  0043D4  50DE               	movf	postinc2,w,c
 16950  0043D6  6EFD               	movwf	tosl,c
 16951  0043D8  50DE               	movf	postinc2,w,c
 16952  0043DA  6EFE               	movwf	tosh,c
 16953  0043DC  50F8               	movf	tblptru,w,c
 16954  0043DE  6EFF               	movwf	tosu,c
 16955  0043E0  50FA               	movf	pclath,w,c
 16956  0043E2  0012               	return		;indir
 16957  0043E4                     l14863:
 16958                           
 16959                           ;ads1115.c: 34: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 16960  0043E4  0100               	movlb	0	; () banked
 16961  0043E6  EE20 F00A          	lfsr	2,10
 16962  0043EA  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16963  0043EC  26D9               	addwf	fsr2l,f,c
 16964  0043EE  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16965  0043F0  22DA               	addwfc	fsr2h,f,c
 16966  0043F2  D801               	call	u13828
 16967  0043F4  D012               	goto	l14865
 16968  0043F6                     u13828:
 16969  0043F6  0005               	push	
 16970  0043F8  6EFA               	movwf	pclath,c
 16971  0043FA  50DE               	movf	postinc2,w,c
 16972  0043FC  6EFD               	movwf	tosl,c
 16973  0043FE  50DE               	movf	postinc2,w,c
 16974  004400  6EFE               	movwf	tosh,c
 16975  004402  50F8               	movf	tblptru,w,c
 16976  004404  6EFF               	movwf	tosu,c
 16977  004406  50FA               	movf	pclath,w,c
 16978  004408  0100               	movlb	0	; () banked
 16979  00440A  EE20 F001          	lfsr	2,1
 16980  00440E  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16981  004410  26D9               	addwf	fsr2l,f,c
 16982  004412  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16983  004414  22DA               	addwfc	fsr2h,f,c
 16984  004416  50DF               	movf	indf2,w,c
 16985  004418  0012               	return		;indir
 16986  00441A                     l14865:
 16987                           
 16988                           ;ads1115.c: 35: pAds1115->iic_send_byte(addr);
 16989  00441A  0100               	movlb	0	; () banked
 16990  00441C  EE20 F00A          	lfsr	2,10
 16991  004420  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 16992  004422  26D9               	addwf	fsr2l,f,c
 16993  004424  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 16994  004426  22DA               	addwfc	fsr2h,f,c
 16995  004428  D801               	call	u13838
 16996  00442A  D00C               	goto	l14867
 16997  00442C                     u13838:
 16998  00442C  0005               	push	
 16999  00442E  6EFA               	movwf	pclath,c
 17000  004430  50DE               	movf	postinc2,w,c
 17001  004432  6EFD               	movwf	tosl,c
 17002  004434  50DE               	movf	postinc2,w,c
 17003  004436  6EFE               	movwf	tosh,c
 17004  004438  50F8               	movf	tblptru,w,c
 17005  00443A  6EFF               	movwf	tosu,c
 17006  00443C  50FA               	movf	pclath,w,c
 17007  00443E  0100               	movlb	0	; () banked
 17008  004440  516A               	movf	ads1115_read_reg@addr& (0+255),w,b
 17009  004442  0012               	return		;indir
 17010  004444                     l14867:
 17011                           
 17012                           ;ads1115.c: 36: pAds1115->iic_stop();
 17013  004444  0100               	movlb	0	; () banked
 17014  004446  EE20 F008          	lfsr	2,8
 17015  00444A  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17016  00444C  26D9               	addwf	fsr2l,f,c
 17017  00444E  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17018  004450  22DA               	addwfc	fsr2h,f,c
 17019  004452  D801               	call	u13848
 17020  004454  D00A               	goto	l14869
 17021  004456                     u13848:
 17022  004456  0005               	push	
 17023  004458  6EFA               	movwf	pclath,c
 17024  00445A  50DE               	movf	postinc2,w,c
 17025  00445C  6EFD               	movwf	tosl,c
 17026  00445E  50DE               	movf	postinc2,w,c
 17027  004460  6EFE               	movwf	tosh,c
 17028  004462  50F8               	movf	tblptru,w,c
 17029  004464  6EFF               	movwf	tosu,c
 17030  004466  50FA               	movf	pclath,w,c
 17031  004468  0012               	return		;indir
 17032  00446A                     l14869:
 17033                           
 17034                           ;ads1115.c: 38: pAds1115->iic_start();
 17035  00446A  0100               	movlb	0	; () banked
 17036  00446C  EE20 F006          	lfsr	2,6
 17037  004470  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17038  004472  26D9               	addwf	fsr2l,f,c
 17039  004474  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17040  004476  22DA               	addwfc	fsr2h,f,c
 17041  004478  D801               	call	u13858
 17042  00447A  D00A               	goto	l14871
 17043  00447C                     u13858:
 17044  00447C  0005               	push	
 17045  00447E  6EFA               	movwf	pclath,c
 17046  004480  50DE               	movf	postinc2,w,c
 17047  004482  6EFD               	movwf	tosl,c
 17048  004484  50DE               	movf	postinc2,w,c
 17049  004486  6EFE               	movwf	tosh,c
 17050  004488  50F8               	movf	tblptru,w,c
 17051  00448A  6EFF               	movwf	tosu,c
 17052  00448C  50FA               	movf	pclath,w,c
 17053  00448E  0012               	return		;indir
 17054  004490                     l14871:
 17055                           
 17056                           ;ads1115.c: 39: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 17057  004490  0100               	movlb	0	; () banked
 17058  004492  EE20 F00A          	lfsr	2,10
 17059  004496  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17060  004498  26D9               	addwf	fsr2l,f,c
 17061  00449A  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17062  00449C  22DA               	addwfc	fsr2h,f,c
 17063  00449E  D801               	call	u13868
 17064  0044A0  D016               	goto	l14873
 17065  0044A2                     u13868:
 17066  0044A2  0005               	push	
 17067  0044A4  6EFA               	movwf	pclath,c
 17068  0044A6  50DE               	movf	postinc2,w,c
 17069  0044A8  6EFD               	movwf	tosl,c
 17070  0044AA  50DE               	movf	postinc2,w,c
 17071  0044AC  6EFE               	movwf	tosh,c
 17072  0044AE  50F8               	movf	tblptru,w,c
 17073  0044B0  6EFF               	movwf	tosu,c
 17074  0044B2  50FA               	movf	pclath,w,c
 17075  0044B4  0100               	movlb	0	; () banked
 17076  0044B6  EE20 F001          	lfsr	2,1
 17077  0044BA  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17078  0044BC  26D9               	addwf	fsr2l,f,c
 17079  0044BE  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17080  0044C0  22DA               	addwfc	fsr2h,f,c
 17081  0044C2  50DF               	movf	indf2,w,c
 17082  0044C4  0100               	movlb	0	; () banked
 17083  0044C6  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17084  0044C8  0100               	movlb	0	; () banked
 17085  0044CA  296B               	incf	??_ads1115_read_reg& (0+255),w,b
 17086  0044CC  0012               	return		;indir
 17087  0044CE                     l14873:
 17088                           
 17089                           ;ads1115.c: 40: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 17090  0044CE  0100               	movlb	0	; () banked
 17091  0044D0  EE20 F00E          	lfsr	2,14
 17092  0044D4  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17093  0044D6  26D9               	addwf	fsr2l,f,c
 17094  0044D8  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17095  0044DA  22DA               	addwfc	fsr2h,f,c
 17096  0044DC  D801               	call	u13878
 17097  0044DE  D00B               	goto	u13879
 17098  0044E0                     u13878:
 17099  0044E0  0005               	push	
 17100  0044E2  6EFA               	movwf	pclath,c
 17101  0044E4  50DE               	movf	postinc2,w,c
 17102  0044E6  6EFD               	movwf	tosl,c
 17103  0044E8  50DE               	movf	postinc2,w,c
 17104  0044EA  6EFE               	movwf	tosh,c
 17105  0044EC  50F8               	movf	tblptru,w,c
 17106  0044EE  6EFF               	movwf	tosu,c
 17107  0044F0  50FA               	movf	pclath,w,c
 17108  0044F2  0E00               	movlw	0
 17109  0044F4  0012               	return		;indir
 17110  0044F6                     u13879:
 17111  0044F6  0100               	movlb	0	; () banked
 17112  0044F8  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17113  0044FA  0100               	movlb	0	; () banked
 17114  0044FC  516B               	movf	??_ads1115_read_reg& (0+255),w,b
 17115  0044FE  0100               	movlb	0	; () banked
 17116  004500  6F6C               	movwf	ads1115_read_reg@t16& (0+255),b
 17117  004502  6B6D               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;ads1115.c: 41: t16<<=8;
 17121  004504  0100               	movlb	0	; () banked
 17122  004506  516C               	movf	ads1115_read_reg@t16& (0+255),w,b
 17123  004508  6F6D               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 17124  00450A  6B6C               	clrf	ads1115_read_reg@t16& (0+255),b
 17125                           
 17126                           ;ads1115.c: 42: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 17127  00450C  0100               	movlb	0	; () banked
 17128  00450E  EE20 F00E          	lfsr	2,14
 17129  004512  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17130  004514  26D9               	addwf	fsr2l,f,c
 17131  004516  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17132  004518  22DA               	addwfc	fsr2h,f,c
 17133  00451A  D801               	call	u13888
 17134  00451C  D00B               	goto	u13889
 17135  00451E                     u13888:
 17136  00451E  0005               	push	
 17137  004520  6EFA               	movwf	pclath,c
 17138  004522  50DE               	movf	postinc2,w,c
 17139  004524  6EFD               	movwf	tosl,c
 17140  004526  50DE               	movf	postinc2,w,c
 17141  004528  6EFE               	movwf	tosh,c
 17142  00452A  50F8               	movf	tblptru,w,c
 17143  00452C  6EFF               	movwf	tosu,c
 17144  00452E  50FA               	movf	pclath,w,c
 17145  004530  0E00               	movlw	0
 17146  004532  0012               	return		;indir
 17147  004534                     u13889:
 17148  004534  0100               	movlb	0	; () banked
 17149  004536  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17150  004538  0100               	movlb	0	; () banked
 17151  00453A  516B               	movf	??_ads1115_read_reg& (0+255),w,b
 17152  00453C  0100               	movlb	0	; () banked
 17153  00453E  136C               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 17154                           
 17155                           ;ads1115.c: 44: pAds1115->iic_stop();
 17156  004540  0100               	movlb	0	; () banked
 17157  004542  EE20 F008          	lfsr	2,8
 17158  004546  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17159  004548  26D9               	addwf	fsr2l,f,c
 17160  00454A  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17161  00454C  22DA               	addwfc	fsr2h,f,c
 17162  00454E  D801               	call	u13898
 17163  004550  D00A               	goto	l14877
 17164  004552                     u13898:
 17165  004552  0005               	push	
 17166  004554  6EFA               	movwf	pclath,c
 17167  004556  50DE               	movf	postinc2,w,c
 17168  004558  6EFD               	movwf	tosl,c
 17169  00455A  50DE               	movf	postinc2,w,c
 17170  00455C  6EFE               	movwf	tosh,c
 17171  00455E  50F8               	movf	tblptru,w,c
 17172  004560  6EFF               	movwf	tosu,c
 17173  004562  50FA               	movf	pclath,w,c
 17174  004564  0012               	return		;indir
 17175  004566                     l14877:
 17176                           
 17177                           ;ads1115.c: 45: return t16;
 17178  004566  C06C  F068         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 17179  00456A  C06D  F069         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 17180  00456E  0012               	return	
 17181  004570                     __end_of_ads1115_read_reg:
 17182                           	opt stack 0
 17183                           tosu	equ	0xFFF
 17184                           tosh	equ	0xFFE
 17185                           tosl	equ	0xFFD
 17186                           pclath	equ	0xFFA
 17187                           tblptru	equ	0xFF8
 17188                           tblptrh	equ	0xFF7
 17189                           tblptrl	equ	0xFF6
 17190                           tablat	equ	0xFF5
 17191                           prodh	equ	0xFF4
 17192                           prodl	equ	0xFF3
 17193                           intcon	equ	0xFF2
 17194                           postinc0	equ	0xFEE
 17195                           wreg	equ	0xFE8
 17196                           indf1	equ	0xFE7
 17197                           postinc1	equ	0xFE6
 17198                           postdec1	equ	0xFE5
 17199                           plusw1	equ	0xFE3
 17200                           fsr1h	equ	0xFE2
 17201                           fsr1l	equ	0xFE1
 17202                           indf2	equ	0xFDF
 17203                           postinc2	equ	0xFDE
 17204                           postdec2	equ	0xFDD
 17205                           plusw2	equ	0xFDB
 17206                           fsr2h	equ	0xFDA
 17207                           fsr2l	equ	0xFD9
 17208                           status	equ	0xFD8
 17209                           
 17210 ;; *************** function ___x_sample_fifo *****************
 17211 ;; Defined at:
 17212 ;;		line 67 in file "src/api/sample.c"
 17213 ;; Parameters:    Size  Location     Type
 17214 ;;  buf             2   26[BANK0 ] PTR int 
 17215 ;;		 -> sampBufRefInSoc(8), sampBufBatInSoc(8), sampBufExPr1InSoc(8), sampBufExPr0InSoc(8), 
 17216 ;;		 -> sampBufPr(8), sampBufPt100ExB(8), sampBufPt100ExA(8), sampBufDiffPr_S1(8), 
 17217 ;;		 -> sampBufDiffPr_D23(8), sampBufDiffPr_D01(8), 
 17218 ;;  x               2   28[BANK0 ] int 
 17219 ;;  len             1   30[BANK0 ] unsigned char 
 17220 ;; Auto vars:     Size  Location     Type
 17221 ;;  ret             4   37[BANK0 ] long 
 17222 ;;  i               1   41[BANK0 ] unsigned char 
 17223 ;; Return value:  Size  Location     Type
 17224 ;;                  2   26[BANK0 ] int 
 17225 ;; Registers used:
 17226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17227 ;; Tracked objects:
 17228 ;;		On entry : 0/0
 17229 ;;		On exit  : 0/0
 17230 ;;		Unchanged: 0/0
 17231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17232 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17233 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17234 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17235 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17236 ;;Total ram usage:       16 bytes
 17237 ;; Hardware stack levels used:    1
 17238 ;; Hardware stack levels required when called:    5
 17239 ;; This function calls:
 17240 ;;		___aldiv
 17241 ;; This function is called by:
 17242 ;;		_sample_diff_pr_chip_fast
 17243 ;;		_sample_pr_chip_fast
 17244 ;;		_sample_in_soc_adc_ch
 17245 ;; This function uses a non-reentrant model
 17246 ;;
 17247                           
 17248                           	psect	text91
 17249  004B94                     __ptext91:
 17250                           	opt stack 0
 17251  004B94                     ___x_sample_fifo:
 17252                           	opt stack 22
 17253                           
 17254                           ;sample.c: 69: int32_t ret=0;
 17255                           
 17256                           ;incstack = 0
 17257  004B94  0E00               	movlw	0
 17258  004B96  0100               	movlb	0	; () banked
 17259  004B98  6F85               	movwf	___x_sample_fifo@ret& (0+255),b
 17260  004B9A  0E00               	movlw	0
 17261  004B9C  6F86               	movwf	(___x_sample_fifo@ret+1)& (0+255),b
 17262  004B9E  0E00               	movlw	0
 17263  004BA0  6F87               	movwf	(___x_sample_fifo@ret+2)& (0+255),b
 17264  004BA2  0E00               	movlw	0
 17265  004BA4  6F88               	movwf	(___x_sample_fifo@ret+3)& (0+255),b
 17266                           
 17267                           ; BSR set to: 0
 17268                           ;sample.c: 70: uint8_t i;
 17269                           ;sample.c: 71: for(i=len-1;i>0;i--){
 17270  004BA6  0100               	movlb	0	; () banked
 17271  004BA8  057E               	decf	___x_sample_fifo@len& (0+255),w,b
 17272  004BAA  0100               	movlb	0	; () banked
 17273  004BAC  6F89               	movwf	___x_sample_fifo@i& (0+255),b
 17274  004BAE                     l15539:
 17275                           
 17276                           ; BSR set to: 0
 17277  004BAE  0100               	movlb	0	; () banked
 17278  004BB0  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17279  004BB2  0100               	movlb	0	; () banked
 17280  004BB4  B4D8               	btfsc	status,2,c
 17281  004BB6  D05C               	goto	l15551
 17282                           
 17283                           ; BSR set to: 0
 17284                           ;sample.c: 72: buf[i]=buf[i-1];
 17285                           
 17286                           ; BSR set to: 0
 17287                           
 17288                           ; BSR set to: 0
 17289  004BB8  0EFE               	movlw	254
 17290  004BBA  0100               	movlb	0	; () banked
 17291  004BBC  6F7F               	movwf	??___x_sample_fifo& (0+255),b
 17292  004BBE  0EFF               	movlw	255
 17293  004BC0  0100               	movlb	0	; () banked
 17294  004BC2  6F80               	movwf	(??___x_sample_fifo+1)& (0+255),b
 17295  004BC4  0100               	movlb	0	; () banked
 17296  004BC6  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17297  004BC8  0100               	movlb	0	; () banked
 17298  004BCA  6F81               	movwf	(??___x_sample_fifo+2)& (0+255),b
 17299  004BCC  6B82               	clrf	(??___x_sample_fifo+3)& (0+255),b
 17300  004BCE  90D8               	bcf	status,0,c
 17301  004BD0  0100               	movlb	0	; () banked
 17302  004BD2  3781               	rlcf	(??___x_sample_fifo+2)& (0+255),f,b
 17303  004BD4  3782               	rlcf	(??___x_sample_fifo+3)& (0+255),f,b
 17304  004BD6  0100               	movlb	0	; () banked
 17305  004BD8  517F               	movf	??___x_sample_fifo& (0+255),w,b
 17306  004BDA  0100               	movlb	0	; () banked
 17307  004BDC  2781               	addwf	(??___x_sample_fifo+2)& (0+255),f,b
 17308  004BDE  0100               	movlb	0	; () banked
 17309  004BE0  5180               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 17310  004BE2  0100               	movlb	0	; () banked
 17311  004BE4  2382               	addwfc	(??___x_sample_fifo+3)& (0+255),f,b
 17312  004BE6  0100               	movlb	0	; () banked
 17313  004BE8  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17314  004BEA  0100               	movlb	0	; () banked
 17315  004BEC  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17316  004BEE  6ED9               	movwf	fsr2l,c
 17317  004BF0  0100               	movlb	0	; () banked
 17318  004BF2  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17319  004BF4  0100               	movlb	0	; () banked
 17320  004BF6  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17321  004BF8  6EDA               	movwf	fsr2h,c
 17322  004BFA  0100               	movlb	0	; () banked
 17323  004BFC  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17324  004BFE  0D02               	mullw	2
 17325  004C00  50F3               	movf	prodl,w,c
 17326  004C02  0100               	movlb	0	; () banked
 17327  004C04  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17328  004C06  6EE1               	movwf	fsr1l,c
 17329  004C08  50F4               	movf	prodh,w,c
 17330  004C0A  0100               	movlb	0	; () banked
 17331  004C0C  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17332  004C0E  6EE2               	movwf	fsr1h,c
 17333  004C10  CFDE FFE6          	movff	postinc2,postinc1
 17334  004C14  CFDD FFE5          	movff	postdec2,postdec1
 17335                           
 17336                           ; BSR set to: 0
 17337                           ;sample.c: 73: ret+=buf[i];
 17338  004C18  0100               	movlb	0	; () banked
 17339  004C1A  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17340  004C1C  0D02               	mullw	2
 17341  004C1E  50F3               	movf	prodl,w,c
 17342  004C20  0100               	movlb	0	; () banked
 17343  004C22  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17344  004C24  6ED9               	movwf	fsr2l,c
 17345  004C26  50F4               	movf	prodh,w,c
 17346  004C28  0100               	movlb	0	; () banked
 17347  004C2A  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17348  004C2C  6EDA               	movwf	fsr2h,c
 17349  004C2E  CFDE F07F          	movff	postinc2,??___x_sample_fifo
 17350  004C32  CFDD F080          	movff	postdec2,??___x_sample_fifo+1
 17351  004C36  C07F  F081         	movff	??___x_sample_fifo,??___x_sample_fifo+2
 17352  004C3A  C080  F082         	movff	??___x_sample_fifo+1,??___x_sample_fifo+3
 17353  004C3E  0E00               	movlw	0
 17354  004C40  0100               	movlb	0	; () banked
 17355  004C42  BF82               	btfsc	(??___x_sample_fifo+3)& (0+255),7,b
 17356  004C44  0EFF               	movlw	255
 17357  004C46  6F83               	movwf	(??___x_sample_fifo+4)& (0+255),b
 17358  004C48  6F84               	movwf	(??___x_sample_fifo+5)& (0+255),b
 17359  004C4A  0100               	movlb	0	; () banked
 17360  004C4C  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17361  004C4E  0100               	movlb	0	; () banked
 17362  004C50  2785               	addwf	___x_sample_fifo@ret& (0+255),f,b
 17363  004C52  0100               	movlb	0	; () banked
 17364  004C54  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17365  004C56  0100               	movlb	0	; () banked
 17366  004C58  2386               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 17367  004C5A  0100               	movlb	0	; () banked
 17368  004C5C  5183               	movf	(??___x_sample_fifo+4)& (0+255),w,b
 17369  004C5E  0100               	movlb	0	; () banked
 17370  004C60  2387               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 17371  004C62  0100               	movlb	0	; () banked
 17372  004C64  5184               	movf	(??___x_sample_fifo+5)& (0+255),w,b
 17373  004C66  0100               	movlb	0	; () banked
 17374  004C68  2388               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 17375                           
 17376                           ; BSR set to: 0
 17377  004C6A  0100               	movlb	0	; () banked
 17378  004C6C  0789               	decf	___x_sample_fifo@i& (0+255),f,b
 17379  004C6E  D79F               	goto	l15539
 17380  004C70                     l15551:
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;sample.c: 74: }
 17384                           ;sample.c: 75: buf[i]=x;
 17385  004C70  0100               	movlb	0	; () banked
 17386  004C72  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17387  004C74  0D02               	mullw	2
 17388  004C76  50F3               	movf	prodl,w,c
 17389  004C78  0100               	movlb	0	; () banked
 17390  004C7A  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17391  004C7C  6ED9               	movwf	fsr2l,c
 17392  004C7E  50F4               	movf	prodh,w,c
 17393  004C80  0100               	movlb	0	; () banked
 17394  004C82  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17395  004C84  6EDA               	movwf	fsr2h,c
 17396  004C86  C07C  FFDE         	movff	___x_sample_fifo@x,postinc2
 17397  004C8A  C07D  FFDD         	movff	___x_sample_fifo@x+1,postdec2
 17398                           
 17399                           ; BSR set to: 0
 17400                           ;sample.c: 76: ret+=x;
 17401  004C8E  C07C  F07F         	movff	___x_sample_fifo@x,??___x_sample_fifo
 17402  004C92  C07D  F080         	movff	___x_sample_fifo@x+1,??___x_sample_fifo+1
 17403  004C96  0E00               	movlw	0
 17404  004C98  0100               	movlb	0	; () banked
 17405  004C9A  BF80               	btfsc	(??___x_sample_fifo+1)& (0+255),7,b
 17406  004C9C  0EFF               	movlw	255
 17407  004C9E  6F81               	movwf	(??___x_sample_fifo+2)& (0+255),b
 17408  004CA0  6F82               	movwf	(??___x_sample_fifo+3)& (0+255),b
 17409  004CA2  0100               	movlb	0	; () banked
 17410  004CA4  517F               	movf	??___x_sample_fifo& (0+255),w,b
 17411  004CA6  0100               	movlb	0	; () banked
 17412  004CA8  2785               	addwf	___x_sample_fifo@ret& (0+255),f,b
 17413  004CAA  0100               	movlb	0	; () banked
 17414  004CAC  5180               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 17415  004CAE  0100               	movlb	0	; () banked
 17416  004CB0  2386               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 17417  004CB2  0100               	movlb	0	; () banked
 17418  004CB4  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17419  004CB6  0100               	movlb	0	; () banked
 17420  004CB8  2387               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 17421  004CBA  0100               	movlb	0	; () banked
 17422  004CBC  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17423  004CBE  0100               	movlb	0	; () banked
 17424  004CC0  2388               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 17425                           
 17426                           ; BSR set to: 0
 17427                           ;sample.c: 77: ret/=len;
 17428  004CC2  C085  F06C         	movff	___x_sample_fifo@ret,___aldiv@dividend
 17429  004CC6  C086  F06D         	movff	___x_sample_fifo@ret+1,___aldiv@dividend+1
 17430  004CCA  C087  F06E         	movff	___x_sample_fifo@ret+2,___aldiv@dividend+2
 17431  004CCE  C088  F06F         	movff	___x_sample_fifo@ret+3,___aldiv@dividend+3
 17432  004CD2  0100               	movlb	0	; () banked
 17433  004CD4  517E               	movf	___x_sample_fifo@len& (0+255),w,b
 17434  004CD6  0100               	movlb	0	; () banked
 17435  004CD8  6F70               	movwf	___aldiv@divisor& (0+255),b
 17436  004CDA  6B71               	clrf	(___aldiv@divisor+1)& (0+255),b
 17437  004CDC  6B72               	clrf	(___aldiv@divisor+2)& (0+255),b
 17438  004CDE  6B73               	clrf	(___aldiv@divisor+3)& (0+255),b
 17439  004CE0  EC62  F02D         	call	___aldiv
 17440  004CE4  C06C  F085         	movff	?___aldiv,___x_sample_fifo@ret
 17441  004CE8  C06D  F086         	movff	?___aldiv+1,___x_sample_fifo@ret+1
 17442  004CEC  C06E  F087         	movff	?___aldiv+2,___x_sample_fifo@ret+2
 17443  004CF0  C06F  F088         	movff	?___aldiv+3,___x_sample_fifo@ret+3
 17444                           
 17445                           ;sample.c: 78: return (int16_t)(ret);
 17446  004CF4  C085  F07A         	movff	___x_sample_fifo@ret,?___x_sample_fifo
 17447  004CF8  C086  F07B         	movff	___x_sample_fifo@ret+1,?___x_sample_fifo+1
 17448  004CFC  0012               	return	
 17449  004CFE                     __end_of___x_sample_fifo:
 17450                           	opt stack 0
 17451                           tosu	equ	0xFFF
 17452                           tosh	equ	0xFFE
 17453                           tosl	equ	0xFFD
 17454                           pclath	equ	0xFFA
 17455                           tblptru	equ	0xFF8
 17456                           tblptrh	equ	0xFF7
 17457                           tblptrl	equ	0xFF6
 17458                           tablat	equ	0xFF5
 17459                           prodh	equ	0xFF4
 17460                           prodl	equ	0xFF3
 17461                           intcon	equ	0xFF2
 17462                           postinc0	equ	0xFEE
 17463                           wreg	equ	0xFE8
 17464                           indf1	equ	0xFE7
 17465                           postinc1	equ	0xFE6
 17466                           postdec1	equ	0xFE5
 17467                           plusw1	equ	0xFE3
 17468                           fsr1h	equ	0xFE2
 17469                           fsr1l	equ	0xFE1
 17470                           indf2	equ	0xFDF
 17471                           postinc2	equ	0xFDE
 17472                           postdec2	equ	0xFDD
 17473                           plusw2	equ	0xFDB
 17474                           fsr2h	equ	0xFDA
 17475                           fsr2l	equ	0xFD9
 17476                           status	equ	0xFD8
 17477                           
 17478 ;; *************** function _event_process_rtc *****************
 17479 ;; Defined at:
 17480 ;;		line 6 in file "src/app/event.c"
 17481 ;; Parameters:    Size  Location     Type
 17482 ;;		None
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;  ret             1    4[BANK1 ] unsigned char 
 17485 ;; Return value:  Size  Location     Type
 17486 ;;                  1    wreg      char 
 17487 ;; Registers used:
 17488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/0
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17495 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17497 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17498 ;;Total ram usage:        1 bytes
 17499 ;; Hardware stack levels used:    1
 17500 ;; Hardware stack levels required when called:   13
 17501 ;; This function calls:
 17502 ;;		_sample_function_enable_fi_in_rtc
 17503 ;;		_ui_disp_menu
 17504 ;; This function is called by:
 17505 ;;		_main
 17506 ;;		_event_process
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510                           	psect	text92
 17511  009F7E                     __ptext92:
 17512                           	opt stack 0
 17513  009F7E                     _event_process_rtc:
 17514                           	opt stack 17
 17515                           
 17516                           ;event.c: 8: uint8_t ret=0;
 17517                           
 17518                           ;incstack = 0
 17519  009F7E  0E00               	movlw	0
 17520  009F80  0101               	movlb	1	; () banked
 17521  009F82  6FFF               	movwf	event_process_rtc@ret& (0+255),b
 17522                           
 17523                           ; BSR set to: 1
 17524                           ;event.c: 9: sample_function_enable_fi_in_rtc();
 17525  009F84  EC47  F035         	call	_sample_function_enable_fi_in_rtc	;wreg free
 17526                           
 17527                           ;event.c: 11: if(glNoEventTimeOut){
 17528  009F88  0100               	movlb	0	; () banked
 17529  009F8A  51FF               	movf	_glNoEventTimeOut& (0+255),w,b	;volatile
 17530  009F8C  B4D8               	btfsc	status,2,c
 17531  009F8E  D006               	goto	l17323
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;event.c: 12: glNoEventTimeOut--;
 17535  009F90  0100               	movlb	0	; () banked
 17536  009F92  07FF               	decf	_glNoEventTimeOut& (0+255),f,b	;volatile
 17537                           
 17538                           ; BSR set to: 0
 17539                           ;event.c: 13: if(!glNoEventTimeOut){
 17540  009F94  0100               	movlb	0	; () banked
 17541  009F96  51FF               	movf	_glNoEventTimeOut& (0+255),w,b	;volatile
 17542  009F98  B4D8               	btfsc	status,2,c
 17543                           
 17544                           ; BSR set to: 0
 17545                           ;event.c: 14: glbEvent |= (1<<2);
 17546  009F9A  842E               	bsf	_glbEvent,2,c	;volatile
 17547  009F9C                     l17323:
 17548                           
 17549                           ; BSR set to: 0
 17550                           ;event.c: 15: }
 17551                           ;event.c: 16: }
 17552                           ;event.c: 18: if(lcdTwinkle>0)lcdTwinkle--;
 17553  009F9C  5034               	movf	_lcdTwinkle,w,c
 17554  009F9E  A4D8               	btfss	status,2,c
 17555                           
 17556                           ; BSR set to: 0
 17557  009FA0  0634               	decf	_lcdTwinkle,f,c
 17558                           
 17559                           ; BSR set to: 0
 17560                           ;event.c: 19: ui_disp_menu();
 17561                           
 17562                           ; BSR set to: 0
 17563  009FA2  EC45  F03B         	call	_ui_disp_menu	;wreg free
 17564  009FA6  0012               	return	
 17565  009FA8                     __end_of_event_process_rtc:
 17566                           	opt stack 0
 17567                           tosu	equ	0xFFF
 17568                           tosh	equ	0xFFE
 17569                           tosl	equ	0xFFD
 17570                           pclath	equ	0xFFA
 17571                           tblptru	equ	0xFF8
 17572                           tblptrh	equ	0xFF7
 17573                           tblptrl	equ	0xFF6
 17574                           tablat	equ	0xFF5
 17575                           prodh	equ	0xFF4
 17576                           prodl	equ	0xFF3
 17577                           intcon	equ	0xFF2
 17578                           postinc0	equ	0xFEE
 17579                           wreg	equ	0xFE8
 17580                           indf1	equ	0xFE7
 17581                           postinc1	equ	0xFE6
 17582                           postdec1	equ	0xFE5
 17583                           plusw1	equ	0xFE3
 17584                           fsr1h	equ	0xFE2
 17585                           fsr1l	equ	0xFE1
 17586                           indf2	equ	0xFDF
 17587                           postinc2	equ	0xFDE
 17588                           postdec2	equ	0xFDD
 17589                           plusw2	equ	0xFDB
 17590                           fsr2h	equ	0xFDA
 17591                           fsr2l	equ	0xFD9
 17592                           status	equ	0xFD8
 17593                           
 17594 ;; *************** function _ui_disp_menu *****************
 17595 ;; Defined at:
 17596 ;;		line 732 in file "src/api/ui.c"
 17597 ;; Parameters:    Size  Location     Type
 17598 ;;		None
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;		None
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  1    wreg      void 
 17603 ;; Registers used:
 17604 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17614 ;;Total ram usage:        0 bytes
 17615 ;; Hardware stack levels used:    1
 17616 ;; Hardware stack levels required when called:   12
 17617 ;; This function calls:
 17618 ;;		_ui_disp_menu_bar_full_adj
 17619 ;;		_ui_disp_menu_bzero_adj
 17620 ;;		_ui_disp_menu_calib_diff_adj
 17621 ;;		_ui_disp_menu_calib_pr_adj
 17622 ;;		_ui_disp_menu_density_adj
 17623 ;;		_ui_disp_menu_epr_calib_adj
 17624 ;;		_ui_disp_menu_epr_ilp_scale_adj
 17625 ;;		_ui_disp_menu_home
 17626 ;;		_ui_disp_menu_poly_c_adj
 17627 ;;		_ui_disp_menu_pose_size
 17628 ;;		_ui_disp_menu_psw_adj
 17629 ;;		_ui_disp_menu_warn_t_adj
 17630 ;;		_ui_disp_menu_warn_v_adj
 17631 ;;		_ui_disp_menu_work_mode_adj
 17632 ;; This function is called by:
 17633 ;;		_key_process
 17634 ;;		_event_process_rtc
 17635 ;; This function uses a non-reentrant model
 17636 ;;
 17637                           
 17638                           	psect	text93
 17639  00768A                     __ptext93:
 17640                           	opt stack 0
 17641  00768A                     _ui_disp_menu:
 17642                           	opt stack 17
 17643                           
 17644                           ;ui.c: 734: switch(menu){
 17645                           
 17646                           ;incstack = 0
 17647  00768A  D02A               	goto	l17085
 17648  00768C                     l17055:
 17649  00768C  EC15  F01C         	call	_ui_disp_menu_home	;wreg free
 17650  007690  0012               	return	
 17651  007692                     l17057:
 17652  007692  ECD4  F04F         	call	_ui_disp_menu_psw_adj	;wreg free
 17653  007696  0012               	return	
 17654  007698                     l17059:
 17655  007698  EC7C  F04F         	call	_ui_disp_menu_density_adj	;wreg free
 17656  00769C  0012               	return	
 17657  00769E                     l17061:
 17658  00769E  ECE9  F04F         	call	_ui_disp_menu_pose_size	;wreg free
 17659  0076A2  0012               	return	
 17660  0076A4                     l17063:
 17661  0076A4  EC93  F04F         	call	_ui_disp_menu_bzero_adj	;wreg free
 17662  0076A8  0012               	return	
 17663  0076AA                     l17065:
 17664  0076AA  EC91  F032         	call	_ui_disp_menu_calib_diff_adj	;wreg free
 17665  0076AE  0012               	return	
 17666  0076B0                     l17067:
 17667  0076B0  ECFC  F033         	call	_ui_disp_menu_calib_pr_adj	;wreg free
 17668  0076B4  0012               	return	
 17669  0076B6                     l17069:
 17670  0076B6  EC57  F047         	call	_ui_disp_menu_poly_c_adj	;wreg free
 17671  0076BA  0012               	return	
 17672  0076BC                     l17071:
 17673  0076BC  EC0F  F02B         	call	_ui_disp_menu_warn_t_adj	;wreg free
 17674  0076C0  0012               	return	
 17675  0076C2                     l17073:
 17676  0076C2  EC8B  F033         	call	_ui_disp_menu_warn_v_adj	;wreg free
 17677  0076C6  0012               	return	
 17678  0076C8                     l17075:
 17679                           
 17680                           ;ui.c: 750: ui_disp_menu_epr_calib_adj(); break;
 17681  0076C8  EC04  F038         	call	_ui_disp_menu_epr_calib_adj	;wreg free
 17682  0076CC  0012               	return	
 17683  0076CE                     l17077:
 17684                           
 17685                           ;ui.c: 752: ui_disp_menu_epr_ilp_scale_adj(); break;
 17686  0076CE  ECA2  F037         	call	_ui_disp_menu_epr_ilp_scale_adj	;wreg free
 17687  0076D2  0012               	return	
 17688  0076D4                     l17079:
 17689  0076D4  EC8D  F04E         	call	_ui_disp_menu_bar_full_adj	;wreg free
 17690  0076D8  0012               	return	
 17691  0076DA                     l17081:
 17692  0076DA  EC82  F043         	call	_ui_disp_menu_work_mode_adj	;wreg free
 17693                           
 17694                           ;ui.c: 756: }
 17695                           
 17696                           ;ui.c: 755: default:break;
 17697  0076DE  0012               	return	
 17698  0076E0                     l17085:
 17699  0076E0  5033               	movf	_menu,w,c	;volatile
 17700                           
 17701                           ; Switch size 1, requested type "space"
 17702                           ; Number of cases is 14, Range of values is 0 to 240
 17703                           ; switch strategies available:
 17704                           ; Name         Instructions Cycles
 17705                           ; simple_byte           43    22 (average)
 17706                           ;	Chosen strategy is simple_byte
 17707  0076E2  0A00               	xorlw	0	; case 0
 17708  0076E4  B4D8               	btfsc	status,2,c
 17709  0076E6  D7D2               	goto	l17055
 17710  0076E8  0A10               	xorlw	16	; case 16
 17711  0076EA  B4D8               	btfsc	status,2,c
 17712  0076EC  D7D2               	goto	l17057
 17713  0076EE  0A30               	xorlw	48	; case 32
 17714  0076F0  B4D8               	btfsc	status,2,c
 17715  0076F2  D7D2               	goto	l17059
 17716  0076F4  0A10               	xorlw	16	; case 48
 17717  0076F6  B4D8               	btfsc	status,2,c
 17718  0076F8  D7D2               	goto	l17061
 17719  0076FA  0A70               	xorlw	112	; case 64
 17720  0076FC  B4D8               	btfsc	status,2,c
 17721  0076FE  D7D2               	goto	l17063
 17722  007700  0A10               	xorlw	16	; case 80
 17723  007702  B4D8               	btfsc	status,2,c
 17724  007704  D7D2               	goto	l17065
 17725  007706  0A30               	xorlw	48	; case 96
 17726  007708  B4D8               	btfsc	status,2,c
 17727  00770A  D7D2               	goto	l17067
 17728  00770C  0A10               	xorlw	16	; case 112
 17729  00770E  B4D8               	btfsc	status,2,c
 17730  007710  D7D2               	goto	l17069
 17731  007712  0AF0               	xorlw	240	; case 128
 17732  007714  B4D8               	btfsc	status,2,c
 17733  007716  D7D2               	goto	l17071
 17734  007718  0A10               	xorlw	16	; case 144
 17735  00771A  B4D8               	btfsc	status,2,c
 17736  00771C  D7D2               	goto	l17073
 17737  00771E  0A30               	xorlw	48	; case 160
 17738  007720  B4D8               	btfsc	status,2,c
 17739  007722  D7D2               	goto	l17075
 17740  007724  0A10               	xorlw	16	; case 176
 17741  007726  B4D8               	btfsc	status,2,c
 17742  007728  D7D2               	goto	l17077
 17743  00772A  0A70               	xorlw	112	; case 192
 17744  00772C  B4D8               	btfsc	status,2,c
 17745  00772E  D7D2               	goto	l17079
 17746  007730  0A30               	xorlw	48	; case 240
 17747  007732  A4D8               	btfss	status,2,c
 17748  007734  0012               	return	
 17749  007736  D7D1               	goto	l17081
 17750  007738                     __end_of_ui_disp_menu:
 17751                           	opt stack 0
 17752                           tosu	equ	0xFFF
 17753                           tosh	equ	0xFFE
 17754                           tosl	equ	0xFFD
 17755                           pclath	equ	0xFFA
 17756                           tblptru	equ	0xFF8
 17757                           tblptrh	equ	0xFF7
 17758                           tblptrl	equ	0xFF6
 17759                           tablat	equ	0xFF5
 17760                           prodh	equ	0xFF4
 17761                           prodl	equ	0xFF3
 17762                           intcon	equ	0xFF2
 17763                           postinc0	equ	0xFEE
 17764                           wreg	equ	0xFE8
 17765                           indf1	equ	0xFE7
 17766                           postinc1	equ	0xFE6
 17767                           postdec1	equ	0xFE5
 17768                           plusw1	equ	0xFE3
 17769                           fsr1h	equ	0xFE2
 17770                           fsr1l	equ	0xFE1
 17771                           indf2	equ	0xFDF
 17772                           postinc2	equ	0xFDE
 17773                           postdec2	equ	0xFDD
 17774                           plusw2	equ	0xFDB
 17775                           fsr2h	equ	0xFDA
 17776                           fsr2l	equ	0xFD9
 17777                           status	equ	0xFD8
 17778                           
 17779 ;; *************** function _ui_disp_menu_work_mode_adj *****************
 17780 ;; Defined at:
 17781 ;;		line 716 in file "src/api/ui.c"
 17782 ;; Parameters:    Size  Location     Type
 17783 ;;		None
 17784 ;; Auto vars:     Size  Location     Type
 17785 ;;  buf            10   23[BANK0 ] unsigned char [10]
 17786 ;;  p               2   33[BANK0 ] PTR unsigned char 
 17787 ;;		 -> adjValue(4), 
 17788 ;; Return value:  Size  Location     Type
 17789 ;;                  1    wreg      void 
 17790 ;; Registers used:
 17791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17792 ;; Tracked objects:
 17793 ;;		On entry : 0/0
 17794 ;;		On exit  : 0/0
 17795 ;;		Unchanged: 0/0
 17796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17798 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17800 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17801 ;;Total ram usage:       13 bytes
 17802 ;; Hardware stack levels used:    1
 17803 ;; Hardware stack levels required when called:    9
 17804 ;; This function calls:
 17805 ;;		_lcd_disp_all
 17806 ;;		_lcd_disp_logo
 17807 ;;		_lcd_disp_refresh
 17808 ;;		_lcd_show_string
 17809 ;;		_m_mem_cpy
 17810 ;; This function is called by:
 17811 ;;		_ui_disp_menu
 17812 ;; This function uses a non-reentrant model
 17813 ;;
 17814                           
 17815                           	psect	text94
 17816  008704                     __ptext94:
 17817                           	opt stack 0
 17818  008704                     _ui_disp_menu_work_mode_adj:
 17819                           	opt stack 19
 17820                           
 17821                           ;ui.c: 718: uint8_t* p;
 17822                           ;ui.c: 719: uint8_t buf[10];
 17823                           ;ui.c: 720: lcd_disp_all(0x00);;
 17824                           
 17825                           ;incstack = 0
 17826  008704  0E00               	movlw	0
 17827  008706  EC4D  F04F         	call	_lcd_disp_all
 17828                           
 17829                           ;ui.c: 721: lcd_disp_logo(1);
 17830  00870A  0E01               	movlw	1
 17831  00870C  EC35  F04F         	call	_lcd_disp_logo
 17832                           
 17833                           ;ui.c: 722: p=(uint8_t*)(&adjValue);
 17834  008710  0E39               	movlw	low _adjValue
 17835  008712  0100               	movlb	0	; () banked
 17836  008714  6F81               	movwf	ui_disp_menu_work_mode_adj@p& (0+255),b
 17837  008716  0E00               	movlw	high _adjValue
 17838  008718  0100               	movlb	0	; () banked
 17839  00871A  6F82               	movwf	(ui_disp_menu_work_mode_adj@p+1)& (0+255),b
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;ui.c: 724: if(*p==WORK_MODE){
 17843  00871C  C081  FFD9         	movff	ui_disp_menu_work_mode_adj@p,fsr2l
 17844  008720  C082  FFDA         	movff	ui_disp_menu_work_mode_adj@p+1,fsr2h
 17845  008724  04DE               	decf	postinc2,w,c
 17846  008726  A4D8               	btfss	status,2,c
 17847  008728  D00F               	goto	l16515
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;ui.c: 725: m_mem_cpy(buf,(uint8_t*)" sta nor");
 17851  00872A  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 17852  00872C  0100               	movlb	0	; () banked
 17853  00872E  6F60               	movwf	m_mem_cpy@d& (0+255),b
 17854  008730  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 17855  008732  0100               	movlb	0	; () banked
 17856  008734  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 17857  008736  0E79               	movlw	low STR_32
 17858  008738  0100               	movlb	0	; () banked
 17859  00873A  6F62               	movwf	m_mem_cpy@s& (0+255),b
 17860  00873C  0EF3               	movlw	high STR_32
 17861  00873E  0100               	movlb	0	; () banked
 17862  008740  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 17863  008742  ECB8  F045         	call	_m_mem_cpy	;wreg free
 17864                           
 17865                           ;ui.c: 726: }else{
 17866  008746  D00E               	goto	l16517
 17867  008748                     l16515:
 17868                           
 17869                           ;ui.c: 727: m_mem_cpy(buf,(uint8_t*)" sta tst");
 17870  008748  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 17871  00874A  0100               	movlb	0	; () banked
 17872  00874C  6F60               	movwf	m_mem_cpy@d& (0+255),b
 17873  00874E  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 17874  008750  0100               	movlb	0	; () banked
 17875  008752  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 17876  008754  0E82               	movlw	low STR_33
 17877  008756  0100               	movlb	0	; () banked
 17878  008758  6F62               	movwf	m_mem_cpy@s& (0+255),b
 17879  00875A  0EF3               	movlw	high STR_33
 17880  00875C  0100               	movlb	0	; () banked
 17881  00875E  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 17882  008760  ECB8  F045         	call	_m_mem_cpy	;wreg free
 17883  008764                     l16517:
 17884                           
 17885                           ;ui.c: 728: }
 17886                           ;ui.c: 729: lcd_show_string(buf);
 17887  008764  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 17888  008766  0100               	movlb	0	; () banked
 17889  008768  6F73               	movwf	lcd_show_string@str& (0+255),b
 17890  00876A  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 17891  00876C  0100               	movlb	0	; () banked
 17892  00876E  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 17893  008770  EC4B  F045         	call	_lcd_show_string	;wreg free
 17894                           
 17895                           ;ui.c: 730: lcd_disp_refresh();
 17896  008774  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 17897  008778  0012               	return		;funcret
 17898  00877A                     __end_of_ui_disp_menu_work_mode_adj:
 17899                           	opt stack 0
 17900                           tosu	equ	0xFFF
 17901                           tosh	equ	0xFFE
 17902                           tosl	equ	0xFFD
 17903                           pclath	equ	0xFFA
 17904                           tblptru	equ	0xFF8
 17905                           tblptrh	equ	0xFF7
 17906                           tblptrl	equ	0xFF6
 17907                           tablat	equ	0xFF5
 17908                           prodh	equ	0xFF4
 17909                           prodl	equ	0xFF3
 17910                           intcon	equ	0xFF2
 17911                           postinc0	equ	0xFEE
 17912                           wreg	equ	0xFE8
 17913                           indf1	equ	0xFE7
 17914                           postinc1	equ	0xFE6
 17915                           postdec1	equ	0xFE5
 17916                           plusw1	equ	0xFE3
 17917                           fsr1h	equ	0xFE2
 17918                           fsr1l	equ	0xFE1
 17919                           indf2	equ	0xFDF
 17920                           postinc2	equ	0xFDE
 17921                           postdec2	equ	0xFDD
 17922                           plusw2	equ	0xFDB
 17923                           fsr2h	equ	0xFDA
 17924                           fsr2l	equ	0xFD9
 17925                           status	equ	0xFD8
 17926                           
 17927 ;; *************** function _ui_disp_menu_warn_v_adj *****************
 17928 ;; Defined at:
 17929 ;;		line 636 in file "src/api/ui.c"
 17930 ;; Parameters:    Size  Location     Type
 17931 ;;		None
 17932 ;; Auto vars:     Size  Location     Type
 17933 ;;  buf             6   44[BANK0 ] unsigned char [6]
 17934 ;;  t32             4    0        long 
 17935 ;;  fps             2   50[BANK0 ] PTR struct .
 17936 ;;		 -> stSysData(240), 
 17937 ;;  t8              1   53[BANK0 ] unsigned char 
 17938 ;;  type            1   52[BANK0 ] unsigned char 
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  1    wreg      void 
 17941 ;; Registers used:
 17942 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17949 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17951 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17952 ;;Total ram usage:       12 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; Hardware stack levels required when called:   10
 17955 ;; This function calls:
 17956 ;;		_lcd_disp_all
 17957 ;;		_lcd_disp_logo
 17958 ;;		_lcd_disp_unit_2nd_m
 17959 ;;		_lcd_disp_unit_mpa
 17960 ;;		_m_mem_cpy
 17961 ;;		_ui_disp_adj_xfloat_pt
 17962 ;; This function is called by:
 17963 ;;		_ui_disp_menu
 17964 ;; This function uses a non-reentrant model
 17965 ;;
 17966                           
 17967                           	psect	text95
 17968  006716                     __ptext95:
 17969                           	opt stack 0
 17970  006716                     _ui_disp_menu_warn_v_adj:
 17971                           	opt stack 18
 17972                           
 17973                           ;ui.c: 638: uint8_t buf[6];
 17974                           ;ui.c: 639: uint8_t t8,type;
 17975                           ;ui.c: 640: int32_t t32 ;
 17976                           ;ui.c: 641: lcd_disp_all(0x00);;
 17977                           
 17978                           ;incstack = 0
 17979  006716  0E00               	movlw	0
 17980  006718  EC4D  F04F         	call	_lcd_disp_all
 17981                           
 17982                           ;ui.c: 642: lcd_disp_logo(1);
 17983  00671C  0E01               	movlw	1
 17984  00671E  EC35  F04F         	call	_lcd_disp_logo
 17985                           
 17986                           ;ui.c: 643: t8=subMenu;
 17987  006722  C032  F095         	movff	_subMenu,ui_disp_menu_warn_v_adj@t8	;volatile
 17988                           
 17989                           ;ui.c: 644: if(t8>7)return;
 17990  006726  0E07               	movlw	7
 17991  006728  0100               	movlb	0	; () banked
 17992  00672A  6595               	cpfsgt	ui_disp_menu_warn_v_adj@t8& (0+255),b
 17993  00672C  D001               	goto	l16451
 17994  00672E  0012               	return	
 17995  006730                     l16451:
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;ui.c: 646: st_sysDataDef* fps= &stSysData;
 17999  006730  0E00               	movlw	low _stSysData
 18000  006732  0100               	movlb	0	; () banked
 18001  006734  6F92               	movwf	ui_disp_menu_warn_v_adj@fps& (0+255),b
 18002  006736  0E02               	movlw	high _stSysData
 18003  006738  0100               	movlb	0	; () banked
 18004  00673A  6F93               	movwf	(ui_disp_menu_warn_v_adj@fps+1)& (0+255),b
 18005                           
 18006                           ;ui.c: 660: t8=subMenu>>1;
 18007  00673C  90D8               	bcf	status,0,c
 18008  00673E  3032               	rrcf	_subMenu,w,c	;volatile
 18009  006740  0100               	movlb	0	; () banked
 18010  006742  6F95               	movwf	ui_disp_menu_warn_v_adj@t8& (0+255),b
 18011                           
 18012                           ;ui.c: 662: buf[3]='0'+t8;
 18013  006744  0100               	movlb	0	; () banked
 18014  006746  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18015  006748  0F30               	addlw	48
 18016  00674A  0100               	movlb	0	; () banked
 18017  00674C  6F8F               	movwf	(ui_disp_menu_warn_v_adj@buf+3)& (0+255),b
 18018                           
 18019                           ; BSR set to: 0
 18020                           ;ui.c: 663: type=fps->diffPressureWarnSet[t8].type;
 18021  00674E  0100               	movlb	0	; () banked
 18022  006750  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18023  006752  0D0C               	mullw	12
 18024  006754  0E3C               	movlw	60
 18025  006756  26F3               	addwf	prodl,f,c
 18026  006758  0E00               	movlw	0
 18027  00675A  22F4               	addwfc	prodh,f,c
 18028  00675C  C092  F08A         	movff	ui_disp_menu_warn_v_adj@fps,??_ui_disp_menu_warn_v_adj
 18029  006760  C093  F08B         	movff	ui_disp_menu_warn_v_adj@fps+1,??_ui_disp_menu_warn_v_adj+1
 18030  006764  50F3               	movf	prodl,w,c
 18031  006766  0100               	movlb	0	; () banked
 18032  006768  278A               	addwf	??_ui_disp_menu_warn_v_adj& (0+255),f,b
 18033  00676A  50F4               	movf	prodh,w,c
 18034  00676C  0100               	movlb	0	; () banked
 18035  00676E  238B               	addwfc	(??_ui_disp_menu_warn_v_adj+1)& (0+255),f,b
 18036  006770  0E08               	movlw	8
 18037  006772  0100               	movlb	0	; () banked
 18038  006774  258A               	addwf	??_ui_disp_menu_warn_v_adj& (0+255),w,b
 18039  006776  6ED9               	movwf	fsr2l,c
 18040  006778  0E00               	movlw	0
 18041  00677A  0100               	movlb	0	; () banked
 18042  00677C  218B               	addwfc	(??_ui_disp_menu_warn_v_adj+1)& (0+255),w,b
 18043  00677E  6EDA               	movwf	fsr2h,c
 18044  006780  50DF               	movf	indf2,w,c
 18045  006782  0100               	movlb	0	; () banked
 18046  006784  6F94               	movwf	ui_disp_menu_warn_v_adj@type& (0+255),b
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;ui.c: 664: m_mem_cpy(buf,(uint8_t*)" al0");
 18050  006786  0E8C               	movlw	low ui_disp_menu_warn_v_adj@buf
 18051  006788  0100               	movlb	0	; () banked
 18052  00678A  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18053  00678C  0E00               	movlw	high ui_disp_menu_warn_v_adj@buf
 18054  00678E  0100               	movlb	0	; () banked
 18055  006790  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18056  006792  0E95               	movlw	low STR_22
 18057  006794  0100               	movlb	0	; () banked
 18058  006796  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18059  006798  0EF3               	movlw	high STR_22
 18060  00679A  0100               	movlb	0	; () banked
 18061  00679C  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18062  00679E  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18063                           
 18064                           ;ui.c: 665: buf[3]='0'+t8;
 18065  0067A2  0100               	movlb	0	; () banked
 18066  0067A4  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18067  0067A6  0F30               	addlw	48
 18068  0067A8  0100               	movlb	0	; () banked
 18069  0067AA  6F8F               	movwf	(ui_disp_menu_warn_v_adj@buf+3)& (0+255),b
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;ui.c: 666: if(subMenu & 0x01){
 18073  0067AC  A032               	btfss	_subMenu,0,c	;volatile
 18074  0067AE  D003               	goto	l938
 18075                           
 18076                           ; BSR set to: 0
 18077                           ;ui.c: 668: buf[2]='H';
 18078  0067B0  0E48               	movlw	72
 18079  0067B2  0100               	movlb	0	; () banked
 18080  0067B4  6F8E               	movwf	(ui_disp_menu_warn_v_adj@buf+2)& (0+255),b
 18081  0067B6                     l938:
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;ui.c: 669: }
 18085                           ;ui.c: 671: if(type == HIGHT_HI || type== HIGHT_LO){
 18086  0067B6  0100               	movlb	0	; () banked
 18087  0067B8  5194               	movf	ui_disp_menu_warn_v_adj@type& (0+255),w,b
 18088  0067BA  0100               	movlb	0	; () banked
 18089  0067BC  B4D8               	btfsc	status,2,c
 18090  0067BE  D004               	goto	l16465
 18091                           
 18092                           ; BSR set to: 0
 18093  0067C0  0100               	movlb	0	; () banked
 18094  0067C2  0594               	decf	ui_disp_menu_warn_v_adj@type& (0+255),w,b
 18095  0067C4  A4D8               	btfss	status,2,c
 18096  0067C6  D004               	goto	l16467
 18097  0067C8                     l16465:
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;ui.c: 672: lcd_disp_unit_2nd_m(1);
 18101  0067C8  0E01               	movlw	1
 18102  0067CA  ECF1  F046         	call	_lcd_disp_unit_2nd_m
 18103                           
 18104                           ;ui.c: 673: }else{
 18105  0067CE  D003               	goto	l16469
 18106  0067D0                     l16467:
 18107                           
 18108                           ;ui.c: 674: lcd_disp_unit_mpa(1);
 18109  0067D0  0E01               	movlw	1
 18110  0067D2  ECBE  F046         	call	_lcd_disp_unit_mpa
 18111  0067D6                     l16469:
 18112                           
 18113                           ;ui.c: 675: }
 18114                           ;ui.c: 676: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 18115  0067D6  0E8C               	movlw	low ui_disp_menu_warn_v_adj@buf
 18116  0067D8  0100               	movlb	0	; () banked
 18117  0067DA  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 18118  0067DC  0E00               	movlw	high ui_disp_menu_warn_v_adj@buf
 18119  0067DE  0100               	movlb	0	; () banked
 18120  0067E0  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 18121  0067E2  0E35               	movlw	low _m_floatAdj
 18122  0067E4  0100               	movlb	0	; () banked
 18123  0067E6  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 18124  0067E8  0E00               	movlw	high _m_floatAdj
 18125  0067EA  0100               	movlb	0	; () banked
 18126  0067EC  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 18127  0067EE  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 18128  0067F2  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 18129  0067F6  0012               	return		;funcret
 18130  0067F8                     __end_of_ui_disp_menu_warn_v_adj:
 18131                           	opt stack 0
 18132                           tosu	equ	0xFFF
 18133                           tosh	equ	0xFFE
 18134                           tosl	equ	0xFFD
 18135                           pclath	equ	0xFFA
 18136                           tblptru	equ	0xFF8
 18137                           tblptrh	equ	0xFF7
 18138                           tblptrl	equ	0xFF6
 18139                           tablat	equ	0xFF5
 18140                           prodh	equ	0xFF4
 18141                           prodl	equ	0xFF3
 18142                           intcon	equ	0xFF2
 18143                           postinc0	equ	0xFEE
 18144                           wreg	equ	0xFE8
 18145                           indf1	equ	0xFE7
 18146                           postinc1	equ	0xFE6
 18147                           postdec1	equ	0xFE5
 18148                           plusw1	equ	0xFE3
 18149                           fsr1h	equ	0xFE2
 18150                           fsr1l	equ	0xFE1
 18151                           indf2	equ	0xFDF
 18152                           postinc2	equ	0xFDE
 18153                           postdec2	equ	0xFDD
 18154                           plusw2	equ	0xFDB
 18155                           fsr2h	equ	0xFDA
 18156                           fsr2l	equ	0xFD9
 18157                           status	equ	0xFD8
 18158                           
 18159 ;; *************** function _ui_disp_menu_warn_t_adj *****************
 18160 ;; Defined at:
 18161 ;;		line 607 in file "src/api/ui.c"
 18162 ;; Parameters:    Size  Location     Type
 18163 ;;		None
 18164 ;; Auto vars:     Size  Location     Type
 18165 ;;  buf             6   23[BANK0 ] unsigned char [6]
 18166 ;;  p               2   30[BANK0 ] PTR unsigned char 
 18167 ;;		 -> adjValue(4), 
 18168 ;;  t8              1   29[BANK0 ] unsigned char 
 18169 ;; Return value:  Size  Location     Type
 18170 ;;                  1    wreg      void 
 18171 ;; Registers used:
 18172 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18173 ;; Tracked objects:
 18174 ;;		On entry : 0/0
 18175 ;;		On exit  : 0/0
 18176 ;;		Unchanged: 0/0
 18177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18179 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18181 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18182 ;;Total ram usage:       10 bytes
 18183 ;; Hardware stack levels used:    1
 18184 ;; Hardware stack levels required when called:    9
 18185 ;; This function calls:
 18186 ;;		_lcd_disp_all
 18187 ;;		_lcd_disp_logo
 18188 ;;		_lcd_disp_refresh
 18189 ;;		_lcd_show_string_l0
 18190 ;;		_lcd_show_string_l1
 18191 ;;		_m_mem_cpy
 18192 ;; This function is called by:
 18193 ;;		_ui_disp_menu
 18194 ;; This function uses a non-reentrant model
 18195 ;;
 18196                           
 18197                           	psect	text96
 18198  00561E                     __ptext96:
 18199                           	opt stack 0
 18200  00561E                     _ui_disp_menu_warn_t_adj:
 18201                           	opt stack 19
 18202                           
 18203                           ;ui.c: 609: uint8_t buf[6];
 18204                           ;ui.c: 610: uint8_t t8;
 18205                           ;ui.c: 611: lcd_disp_all(0x00);;
 18206                           
 18207                           ;incstack = 0
 18208  00561E  0E00               	movlw	0
 18209  005620  EC4D  F04F         	call	_lcd_disp_all
 18210                           
 18211                           ;ui.c: 612: lcd_disp_logo(1);
 18212  005624  0E01               	movlw	1
 18213  005626  EC35  F04F         	call	_lcd_disp_logo
 18214                           
 18215                           ;ui.c: 613: t8=subMenu;
 18216  00562A  C032  F07D         	movff	_subMenu,ui_disp_menu_warn_t_adj@t8	;volatile
 18217                           
 18218                           ;ui.c: 614: if(t8>3)return;
 18219  00562E  0E03               	movlw	3
 18220  005630  0100               	movlb	0	; () banked
 18221  005632  657D               	cpfsgt	ui_disp_menu_warn_t_adj@t8& (0+255),b
 18222  005634  D001               	goto	l16415
 18223  005636  0012               	return	
 18224  005638                     l16415:
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;ui.c: 616: m_mem_cpy(buf,(uint8_t*)"alt0");
 18228  005638  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18229  00563A  0100               	movlb	0	; () banked
 18230  00563C  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18231  00563E  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18232  005640  0100               	movlb	0	; () banked
 18233  005642  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18234  005644  0E9A               	movlw	low STR_16
 18235  005646  0100               	movlb	0	; () banked
 18236  005648  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18237  00564A  0EF3               	movlw	high STR_16
 18238  00564C  0100               	movlb	0	; () banked
 18239  00564E  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18240  005650  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18241                           
 18242                           ;ui.c: 617: buf[3]='0'+t8;
 18243  005654  0100               	movlb	0	; () banked
 18244  005656  517D               	movf	ui_disp_menu_warn_t_adj@t8& (0+255),w,b
 18245  005658  0F30               	addlw	48
 18246  00565A  0100               	movlb	0	; () banked
 18247  00565C  6F7A               	movwf	(ui_disp_menu_warn_t_adj@buf+3)& (0+255),b
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;ui.c: 619: lcd_show_string_l0(buf);
 18251  00565E  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18252  005660  0100               	movlb	0	; () banked
 18253  005662  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 18254  005664  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18255  005666  0100               	movlb	0	; () banked
 18256  005668  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 18257  00566A  EC14  F045         	call	_lcd_show_string_l0	;wreg free
 18258                           
 18259                           ;ui.c: 620: uint8_t* p=(uint8_t*)(&adjValue);
 18260  00566E  0E39               	movlw	low _adjValue
 18261  005670  0100               	movlb	0	; () banked
 18262  005672  6F7E               	movwf	ui_disp_menu_warn_t_adj@p& (0+255),b
 18263  005674  0E00               	movlw	high _adjValue
 18264  005676  0100               	movlb	0	; () banked
 18265  005678  6F7F               	movwf	(ui_disp_menu_warn_t_adj@p+1)& (0+255),b
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;ui.c: 621: m_mem_cpy(buf,(uint8_t*)"    ");
 18269  00567A  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18270  00567C  0100               	movlb	0	; () banked
 18271  00567E  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18272  005680  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18273  005682  0100               	movlb	0	; () banked
 18274  005684  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18275  005686  0E74               	movlw	low (STR_2+4)
 18276  005688  0100               	movlb	0	; () banked
 18277  00568A  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18278  00568C  0EF3               	movlw	high (STR_2+4)
 18279  00568E  0100               	movlb	0	; () banked
 18280  005690  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18281  005692  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18282                           
 18283                           ;ui.c: 622: if(*p==HIGHT_HI){
 18284  005696  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 18285  00569A  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 18286  00569E  50DF               	movf	indf2,w,c
 18287  0056A0  A4D8               	btfss	status,2,c
 18288  0056A2  D00F               	goto	l16429
 18289                           
 18290                           ;ui.c: 623: m_mem_cpy(buf,(uint8_t*)" h-u");
 18291  0056A4  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18292  0056A6  0100               	movlb	0	; () banked
 18293  0056A8  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18294  0056AA  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18295  0056AC  0100               	movlb	0	; () banked
 18296  0056AE  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18297  0056B0  0EF4               	movlw	low STR_18
 18298  0056B2  0100               	movlb	0	; () banked
 18299  0056B4  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18300  0056B6  0EF3               	movlw	high STR_18
 18301  0056B8  0100               	movlb	0	; () banked
 18302  0056BA  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18303  0056BC  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18304                           
 18305                           ;ui.c: 624: }else if(*p==HIGHT_LO){
 18306  0056C0  D03B               	goto	l16439
 18307  0056C2                     l16429:
 18308  0056C2  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 18309  0056C6  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 18310  0056CA  04DE               	decf	postinc2,w,c
 18311  0056CC  A4D8               	btfss	status,2,c
 18312  0056CE  D00F               	goto	l16433
 18313                           
 18314                           ;ui.c: 625: m_mem_cpy(buf,(uint8_t*)" h-d");
 18315  0056D0  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18316  0056D2  0100               	movlb	0	; () banked
 18317  0056D4  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18318  0056D6  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18319  0056D8  0100               	movlb	0	; () banked
 18320  0056DA  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18321  0056DC  0EC2               	movlw	low STR_19
 18322  0056DE  0100               	movlb	0	; () banked
 18323  0056E0  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18324  0056E2  0EF3               	movlw	high STR_19
 18325  0056E4  0100               	movlb	0	; () banked
 18326  0056E6  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18327  0056E8  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18328                           
 18329                           ;ui.c: 626: }else if(*p==PRESSURE_HI){
 18330  0056EC  D025               	goto	l16439
 18331  0056EE                     l16433:
 18332  0056EE  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 18333  0056F2  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 18334  0056F6  0E02               	movlw	2
 18335  0056F8  18DE               	xorwf	postinc2,w,c
 18336  0056FA  A4D8               	btfss	status,2,c
 18337  0056FC  D00F               	goto	l16437
 18338                           
 18339                           ;ui.c: 627: m_mem_cpy(buf,(uint8_t*)" p-u");
 18340  0056FE  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18341  005700  0100               	movlb	0	; () banked
 18342  005702  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18343  005704  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18344  005706  0100               	movlb	0	; () banked
 18345  005708  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18346  00570A  0EF9               	movlw	low STR_20
 18347  00570C  0100               	movlb	0	; () banked
 18348  00570E  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18349  005710  0EF3               	movlw	high STR_20
 18350  005712  0100               	movlb	0	; () banked
 18351  005714  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18352  005716  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18353                           
 18354                           ;ui.c: 628: }else{
 18355  00571A  D00E               	goto	l16439
 18356  00571C                     l16437:
 18357                           
 18358                           ;ui.c: 629: m_mem_cpy(buf,(uint8_t*)" p-d");
 18359  00571C  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18360  00571E  0100               	movlb	0	; () banked
 18361  005720  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18362  005722  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18363  005724  0100               	movlb	0	; () banked
 18364  005726  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18365  005728  0EC7               	movlw	low STR_21
 18366  00572A  0100               	movlb	0	; () banked
 18367  00572C  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18368  00572E  0EF3               	movlw	high STR_21
 18369  005730  0100               	movlb	0	; () banked
 18370  005732  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18371  005734  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18372  005738                     l16439:
 18373                           
 18374                           ;ui.c: 630: }
 18375                           ;ui.c: 631: lcd_show_string_l1(buf);
 18376  005738  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18377  00573A  0100               	movlb	0	; () banked
 18378  00573C  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 18379  00573E  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18380  005740  0100               	movlb	0	; () banked
 18381  005742  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 18382  005744  EC4F  F04C         	call	_lcd_show_string_l1	;wreg free
 18383                           
 18384                           ;ui.c: 632: lcd_disp_refresh();
 18385  005748  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 18386  00574C  0012               	return		;funcret
 18387  00574E                     __end_of_ui_disp_menu_warn_t_adj:
 18388                           	opt stack 0
 18389                           tosu	equ	0xFFF
 18390                           tosh	equ	0xFFE
 18391                           tosl	equ	0xFFD
 18392                           pclath	equ	0xFFA
 18393                           tblptru	equ	0xFF8
 18394                           tblptrh	equ	0xFF7
 18395                           tblptrl	equ	0xFF6
 18396                           tablat	equ	0xFF5
 18397                           prodh	equ	0xFF4
 18398                           prodl	equ	0xFF3
 18399                           intcon	equ	0xFF2
 18400                           postinc0	equ	0xFEE
 18401                           wreg	equ	0xFE8
 18402                           indf1	equ	0xFE7
 18403                           postinc1	equ	0xFE6
 18404                           postdec1	equ	0xFE5
 18405                           plusw1	equ	0xFE3
 18406                           fsr1h	equ	0xFE2
 18407                           fsr1l	equ	0xFE1
 18408                           indf2	equ	0xFDF
 18409                           postinc2	equ	0xFDE
 18410                           postdec2	equ	0xFDD
 18411                           plusw2	equ	0xFDB
 18412                           fsr2h	equ	0xFDA
 18413                           fsr2l	equ	0xFD9
 18414                           status	equ	0xFD8
 18415                           
 18416 ;; *************** function _ui_disp_menu_psw_adj *****************
 18417 ;; Defined at:
 18418 ;;		line 353 in file "src/api/ui.c"
 18419 ;; Parameters:    Size  Location     Type
 18420 ;;		None
 18421 ;; Auto vars:     Size  Location     Type
 18422 ;;		None
 18423 ;; Return value:  Size  Location     Type
 18424 ;;                  1    wreg      void 
 18425 ;; Registers used:
 18426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18427 ;; Tracked objects:
 18428 ;;		On entry : 0/0
 18429 ;;		On exit  : 0/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18436 ;;Total ram usage:        0 bytes
 18437 ;; Hardware stack levels used:    1
 18438 ;; Hardware stack levels required when called:   11
 18439 ;; This function calls:
 18440 ;;		_lcd_disp_all
 18441 ;;		_lcd_disp_logo
 18442 ;;		_ui_disp_adj_xfixed_pt
 18443 ;; This function is called by:
 18444 ;;		_ui_disp_menu
 18445 ;; This function uses a non-reentrant model
 18446 ;;
 18447                           
 18448                           	psect	text97
 18449  009FA8                     __ptext97:
 18450                           	opt stack 0
 18451  009FA8                     _ui_disp_menu_psw_adj:
 18452                           	opt stack 17
 18453                           
 18454                           ;ui.c: 355: lcd_disp_all(0x00);;
 18455                           
 18456                           ;incstack = 0
 18457  009FA8  0E00               	movlw	0
 18458  009FAA  EC4D  F04F         	call	_lcd_disp_all
 18459                           
 18460                           ;ui.c: 356: lcd_disp_logo(1);
 18461  009FAE  0E01               	movlw	1
 18462  009FB0  EC35  F04F         	call	_lcd_disp_logo
 18463                           
 18464                           ;ui.c: 357: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
 18465  009FB4  0ECC               	movlw	low STR_5
 18466  009FB6  0100               	movlb	0	; () banked
 18467  009FB8  6F76               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
 18468  009FBA  0EF3               	movlw	high STR_5
 18469  009FBC  0100               	movlb	0	; () banked
 18470  009FBE  6F77               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
 18471  009FC0  C03D  F078         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
 18472  009FC4  C03E  F079         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
 18473  009FC8  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
 18474  009FCC  EC76  F036         	call	_ui_disp_adj_xfixed_pt	;wreg free
 18475  009FD0  0012               	return		;funcret
 18476  009FD2                     __end_of_ui_disp_menu_psw_adj:
 18477                           	opt stack 0
 18478                           tosu	equ	0xFFF
 18479                           tosh	equ	0xFFE
 18480                           tosl	equ	0xFFD
 18481                           pclath	equ	0xFFA
 18482                           tblptru	equ	0xFF8
 18483                           tblptrh	equ	0xFF7
 18484                           tblptrl	equ	0xFF6
 18485                           tablat	equ	0xFF5
 18486                           prodh	equ	0xFF4
 18487                           prodl	equ	0xFF3
 18488                           intcon	equ	0xFF2
 18489                           postinc0	equ	0xFEE
 18490                           wreg	equ	0xFE8
 18491                           indf1	equ	0xFE7
 18492                           postinc1	equ	0xFE6
 18493                           postdec1	equ	0xFE5
 18494                           plusw1	equ	0xFE3
 18495                           fsr1h	equ	0xFE2
 18496                           fsr1l	equ	0xFE1
 18497                           indf2	equ	0xFDF
 18498                           postinc2	equ	0xFDE
 18499                           postdec2	equ	0xFDD
 18500                           plusw2	equ	0xFDB
 18501                           fsr2h	equ	0xFDA
 18502                           fsr2l	equ	0xFD9
 18503                           status	equ	0xFD8
 18504                           
 18505 ;; *************** function _ui_disp_adj_xfixed_pt *****************
 18506 ;; Defined at:
 18507 ;;		line 291 in file "src/api/ui.c"
 18508 ;; Parameters:    Size  Location     Type
 18509 ;;  str             2   22[BANK0 ] PTR unsigned char 
 18510 ;;		 -> STR_5(5), 
 18511 ;;  x               2   24[BANK0 ] unsigned int 
 18512 ;;  loc             1   26[BANK0 ] unsigned char 
 18513 ;; Auto vars:     Size  Location     Type
 18514 ;;  buf            10   29[BANK0 ] unsigned char [10]
 18515 ;; Return value:  Size  Location     Type
 18516 ;;                  1    wreg      void 
 18517 ;; Registers used:
 18518 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18519 ;; Tracked objects:
 18520 ;;		On entry : 0/0
 18521 ;;		On exit  : 0/0
 18522 ;;		Unchanged: 0/0
 18523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18524 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18525 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18526 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18527 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18528 ;;Total ram usage:       17 bytes
 18529 ;; Hardware stack levels used:    1
 18530 ;; Hardware stack levels required when called:   10
 18531 ;; This function calls:
 18532 ;;		___x_arrange_str
 18533 ;;		_lcd_disp_refresh
 18534 ;;		_lcd_show_string
 18535 ;;		_m_int16_2_str_4
 18536 ;;		_m_mem_cpy
 18537 ;;		_ui_disp_clear_num_dp
 18538 ;; This function is called by:
 18539 ;;		_ui_disp_menu_psw_adj
 18540 ;; This function uses a non-reentrant model
 18541 ;;
 18542                           
 18543                           	psect	text98
 18544  006CEC                     __ptext98:
 18545                           	opt stack 0
 18546  006CEC                     _ui_disp_adj_xfixed_pt:
 18547                           	opt stack 17
 18548                           
 18549                           ;ui.c: 293: uint8_t buf[10];
 18550                           ;ui.c: 294: ui_disp_clear_num_dp();
 18551                           
 18552                           ;incstack = 0
 18553  006CEC  EC98  F049         	call	_ui_disp_clear_num_dp	;wreg free
 18554                           
 18555                           ;ui.c: 295: if(x>9999)x=9999;
 18556  006CF0  0E10               	movlw	16
 18557  006CF2  0100               	movlb	0	; () banked
 18558  006CF4  5D78               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
 18559  006CF6  0E27               	movlw	39
 18560  006CF8  0100               	movlb	0	; () banked
 18561  006CFA  5979               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
 18562  006CFC  A0D8               	btfss	status,0,c
 18563  006CFE  D005               	goto	l15355
 18564                           
 18565                           ; BSR set to: 0
 18566  006D00  0E27               	movlw	39
 18567  006D02  0100               	movlb	0	; () banked
 18568  006D04  6F79               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
 18569  006D06  0E0F               	movlw	15
 18570  006D08  6F78               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
 18571  006D0A                     l15355:
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;ui.c: 296: m_mem_cpy(buf,str);
 18575  006D0A  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18576  006D0C  0100               	movlb	0	; () banked
 18577  006D0E  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18578  006D10  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18579  006D12  0100               	movlb	0	; () banked
 18580  006D14  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18581  006D16  C076  F062         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
 18582  006D1A  C077  F063         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
 18583  006D1E  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18584                           
 18585                           ;ui.c: 297: m_int16_2_str_4(buf+4,x);
 18586  006D22  0E81               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
 18587  006D24  0100               	movlb	0	; () banked
 18588  006D26  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 18589  006D28  0E00               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
 18590  006D2A  0100               	movlb	0	; () banked
 18591  006D2C  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 18592  006D2E  C078  F06A         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
 18593  006D32  C079  F06B         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
 18594  006D36  ECE4  F027         	call	_m_int16_2_str_4	;wreg free
 18595                           
 18596                           ;ui.c: 298: __x_arrange_str(buf,8);
 18597  006D3A  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18598  006D3C  0100               	movlb	0	; () banked
 18599  006D3E  6F60               	movwf	___x_arrange_str@str& (0+255),b
 18600  006D40  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18601  006D42  0100               	movlb	0	; () banked
 18602  006D44  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 18603  006D46  0E08               	movlw	8
 18604  006D48  0100               	movlb	0	; () banked
 18605  006D4A  6F62               	movwf	___x_arrange_str@len& (0+255),b
 18606  006D4C  ECE0  F048         	call	___x_arrange_str	;wreg free
 18607                           
 18608                           ;ui.c: 299: if(loc>3)loc=3;
 18609  006D50  0E03               	movlw	3
 18610  006D52  0100               	movlb	0	; () banked
 18611  006D54  657A               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
 18612  006D56  D003               	goto	l15365
 18613                           
 18614                           ; BSR set to: 0
 18615  006D58  0E03               	movlw	3
 18616  006D5A  0100               	movlb	0	; () banked
 18617  006D5C  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
 18618  006D5E                     l15365:
 18619                           
 18620                           ; BSR set to: 0
 18621                           ;ui.c: 300: loc=3-loc;
 18622  006D5E  0100               	movlb	0	; () banked
 18623  006D60  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
 18624  006D62  0800               	sublw	0
 18625  006D64  0F03               	addlw	3
 18626  006D66  0100               	movlb	0	; () banked
 18627  006D68  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
 18628                           
 18629                           ; BSR set to: 0
 18630                           ;ui.c: 301: if(!(lcdTwinkle>0)){
 18631  006D6A  5034               	movf	_lcdTwinkle,w,c
 18632  006D6C  A4D8               	btfss	status,2,c
 18633  006D6E  D017               	goto	l15373
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;ui.c: 302: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
 18637  006D70  010F               	movlb	15	; () banked
 18638  006D72  B75F               	btfsc	95,3,b	;volatile
 18639  006D74  D014               	goto	l15373
 18640                           
 18641                           ; BSR set to: 15
 18642  006D76  0100               	movlb	0	; () banked
 18643  006D78  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
 18644  006D7A  0100               	movlb	0	; () banked
 18645  006D7C  6F7B               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
 18646  006D7E  6B7C               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
 18647  006D80  0E04               	movlw	4
 18648  006D82  0100               	movlb	0	; () banked
 18649  006D84  277B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
 18650  006D86  0E00               	movlw	0
 18651  006D88  237C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
 18652  006D8A  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18653  006D8C  0100               	movlb	0	; () banked
 18654  006D8E  257B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
 18655  006D90  6ED9               	movwf	fsr2l,c
 18656  006D92  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18657  006D94  0100               	movlb	0	; () banked
 18658  006D96  217C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
 18659  006D98  6EDA               	movwf	fsr2h,c
 18660  006D9A  0E20               	movlw	32
 18661  006D9C  6EDF               	movwf	indf2,c
 18662  006D9E                     l15373:
 18663                           
 18664                           ;ui.c: 303: }
 18665                           ;ui.c: 304: lcd_show_string(buf);
 18666  006D9E  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18667  006DA0  0100               	movlb	0	; () banked
 18668  006DA2  6F73               	movwf	lcd_show_string@str& (0+255),b
 18669  006DA4  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18670  006DA6  0100               	movlb	0	; () banked
 18671  006DA8  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 18672  006DAA  EC4B  F045         	call	_lcd_show_string	;wreg free
 18673                           
 18674                           ;ui.c: 305: lcd_disp_refresh();
 18675  006DAE  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 18676  006DB2  0012               	return		;funcret
 18677  006DB4                     __end_of_ui_disp_adj_xfixed_pt:
 18678                           	opt stack 0
 18679                           tosu	equ	0xFFF
 18680                           tosh	equ	0xFFE
 18681                           tosl	equ	0xFFD
 18682                           pclath	equ	0xFFA
 18683                           tblptru	equ	0xFF8
 18684                           tblptrh	equ	0xFF7
 18685                           tblptrl	equ	0xFF6
 18686                           tablat	equ	0xFF5
 18687                           prodh	equ	0xFF4
 18688                           prodl	equ	0xFF3
 18689                           intcon	equ	0xFF2
 18690                           postinc0	equ	0xFEE
 18691                           wreg	equ	0xFE8
 18692                           indf1	equ	0xFE7
 18693                           postinc1	equ	0xFE6
 18694                           postdec1	equ	0xFE5
 18695                           plusw1	equ	0xFE3
 18696                           fsr1h	equ	0xFE2
 18697                           fsr1l	equ	0xFE1
 18698                           indf2	equ	0xFDF
 18699                           postinc2	equ	0xFDE
 18700                           postdec2	equ	0xFDD
 18701                           plusw2	equ	0xFDB
 18702                           fsr2h	equ	0xFDA
 18703                           fsr2l	equ	0xFD9
 18704                           status	equ	0xFD8
 18705                           
 18706 ;; *************** function _ui_disp_menu_pose_size *****************
 18707 ;; Defined at:
 18708 ;;		line 518 in file "src/api/ui.c"
 18709 ;; Parameters:    Size  Location     Type
 18710 ;;		None
 18711 ;; Auto vars:     Size  Location     Type
 18712 ;;		None
 18713 ;; Return value:  Size  Location     Type
 18714 ;;                  1    wreg      void 
 18715 ;; Registers used:
 18716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18717 ;; Tracked objects:
 18718 ;;		On entry : 0/0
 18719 ;;		On exit  : 0/0
 18720 ;;		Unchanged: 0/0
 18721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18726 ;;Total ram usage:        0 bytes
 18727 ;; Hardware stack levels used:    1
 18728 ;; Hardware stack levels required when called:   11
 18729 ;; This function calls:
 18730 ;;		_ui_disp_menu_d_adj
 18731 ;;		_ui_disp_menu_h_adj
 18732 ;;		_ui_disp_menu_pos_adj
 18733 ;; This function is called by:
 18734 ;;		_ui_disp_menu
 18735 ;; This function uses a non-reentrant model
 18736 ;;
 18737                           
 18738                           	psect	text99
 18739  009FD2                     __ptext99:
 18740                           	opt stack 0
 18741  009FD2                     _ui_disp_menu_pose_size:
 18742                           	opt stack 17
 18743                           
 18744                           ;ui.c: 520: switch(subMenu){
 18745                           
 18746                           ;incstack = 0
 18747  009FD2  D009               	goto	l16313
 18748  009FD4                     l16305:
 18749  009FD4  ECFE  F040         	call	_ui_disp_menu_pos_adj	;wreg free
 18750  009FD8  0012               	return	
 18751  009FDA                     l16307:
 18752  009FDA  ECDC  F044         	call	_ui_disp_menu_h_adj	;wreg free
 18753  009FDE  0012               	return	
 18754  009FE0                     l16309:
 18755  009FE0  EC65  F04F         	call	_ui_disp_menu_d_adj	;wreg free
 18756                           
 18757                           ;ui.c: 525: }
 18758                           
 18759                           ;ui.c: 524: default:break;
 18760  009FE4  0012               	return	
 18761  009FE6                     l16313:
 18762  009FE6  5032               	movf	_subMenu,w,c	;volatile
 18763                           
 18764                           ; Switch size 1, requested type "space"
 18765                           ; Number of cases is 3, Range of values is 0 to 2
 18766                           ; switch strategies available:
 18767                           ; Name         Instructions Cycles
 18768                           ; simple_byte           10     6 (average)
 18769                           ;	Chosen strategy is simple_byte
 18770  009FE8  0A00               	xorlw	0	; case 0
 18771  009FEA  B4D8               	btfsc	status,2,c
 18772  009FEC  D7F3               	goto	l16305
 18773  009FEE  0A01               	xorlw	1	; case 1
 18774  009FF0  B4D8               	btfsc	status,2,c
 18775  009FF2  D7F3               	goto	l16307
 18776  009FF4  0A03               	xorlw	3	; case 2
 18777  009FF6  A4D8               	btfss	status,2,c
 18778  009FF8  0012               	return	
 18779  009FFA  D7F2               	goto	l16309
 18780  009FFC                     __end_of_ui_disp_menu_pose_size:
 18781                           	opt stack 0
 18782                           tosu	equ	0xFFF
 18783                           tosh	equ	0xFFE
 18784                           tosl	equ	0xFFD
 18785                           pclath	equ	0xFFA
 18786                           tblptru	equ	0xFF8
 18787                           tblptrh	equ	0xFF7
 18788                           tblptrl	equ	0xFF6
 18789                           tablat	equ	0xFF5
 18790                           prodh	equ	0xFF4
 18791                           prodl	equ	0xFF3
 18792                           intcon	equ	0xFF2
 18793                           postinc0	equ	0xFEE
 18794                           wreg	equ	0xFE8
 18795                           indf1	equ	0xFE7
 18796                           postinc1	equ	0xFE6
 18797                           postdec1	equ	0xFE5
 18798                           plusw1	equ	0xFE3
 18799                           fsr1h	equ	0xFE2
 18800                           fsr1l	equ	0xFE1
 18801                           indf2	equ	0xFDF
 18802                           postinc2	equ	0xFDE
 18803                           postdec2	equ	0xFDD
 18804                           plusw2	equ	0xFDB
 18805                           fsr2h	equ	0xFDA
 18806                           fsr2l	equ	0xFD9
 18807                           status	equ	0xFD8
 18808                           
 18809 ;; *************** function _ui_disp_menu_pos_adj *****************
 18810 ;; Defined at:
 18811 ;;		line 481 in file "src/api/ui.c"
 18812 ;; Parameters:    Size  Location     Type
 18813 ;;		None
 18814 ;; Auto vars:     Size  Location     Type
 18815 ;;  buf             6   24[BANK0 ] unsigned char [6]
 18816 ;;  p               2   22[BANK0 ] PTR unsigned char 
 18817 ;;		 -> adjValue(4), 
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  1    wreg      void 
 18820 ;; Registers used:
 18821 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18828 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18830 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18831 ;;Total ram usage:        8 bytes
 18832 ;; Hardware stack levels used:    1
 18833 ;; Hardware stack levels required when called:    9
 18834 ;; This function calls:
 18835 ;;		_lcd_disp_all
 18836 ;;		_lcd_disp_logo
 18837 ;;		_lcd_disp_refresh
 18838 ;;		_lcd_show_string_l0
 18839 ;;		_lcd_show_string_l1
 18840 ;;		_m_mem_cpy
 18841 ;; This function is called by:
 18842 ;;		_ui_disp_menu_pose_size
 18843 ;; This function uses a non-reentrant model
 18844 ;;
 18845                           
 18846                           	psect	text100
 18847  0081FC                     __ptext100:
 18848                           	opt stack 0
 18849  0081FC                     _ui_disp_menu_pos_adj:
 18850                           	opt stack 18
 18851                           
 18852                           ;ui.c: 483: uint8_t buf[6];
 18853                           ;ui.c: 484: lcd_disp_all(0x00);;
 18854                           
 18855                           ;incstack = 0
 18856  0081FC  0E00               	movlw	0
 18857  0081FE  EC4D  F04F         	call	_lcd_disp_all
 18858                           
 18859                           ;ui.c: 485: lcd_disp_logo(1);
 18860  008202  0E01               	movlw	1
 18861  008204  EC35  F04F         	call	_lcd_disp_logo
 18862                           
 18863                           ;ui.c: 486: m_mem_cpy(buf,(uint8_t*)"  fs");
 18864  008208  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 18865  00820A  0100               	movlb	0	; () banked
 18866  00820C  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18867  00820E  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 18868  008210  0100               	movlb	0	; () banked
 18869  008212  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18870  008214  0EEF               	movlw	low STR_7
 18871  008216  0100               	movlb	0	; () banked
 18872  008218  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18873  00821A  0EF3               	movlw	high STR_7
 18874  00821C  0100               	movlb	0	; () banked
 18875  00821E  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18876  008220  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18877                           
 18878                           ;ui.c: 487: lcd_show_string_l0(buf);
 18879  008224  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 18880  008226  0100               	movlb	0	; () banked
 18881  008228  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 18882  00822A  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 18883  00822C  0100               	movlb	0	; () banked
 18884  00822E  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 18885  008230  EC14  F045         	call	_lcd_show_string_l0	;wreg free
 18886                           
 18887                           ;ui.c: 488: uint8_t* p=(uint8_t*)(&adjValue);
 18888  008234  0E39               	movlw	low _adjValue
 18889  008236  0100               	movlb	0	; () banked
 18890  008238  6F76               	movwf	ui_disp_menu_pos_adj@p& (0+255),b
 18891  00823A  0E00               	movlw	high _adjValue
 18892  00823C  0100               	movlb	0	; () banked
 18893  00823E  6F77               	movwf	(ui_disp_menu_pos_adj@p+1)& (0+255),b
 18894                           
 18895                           ; BSR set to: 0
 18896                           ;ui.c: 489: m_mem_cpy(buf,(uint8_t*)"    ");
 18897  008240  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 18898  008242  0100               	movlb	0	; () banked
 18899  008244  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18900  008246  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 18901  008248  0100               	movlb	0	; () banked
 18902  00824A  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18903  00824C  0E74               	movlw	low (STR_2+4)
 18904  00824E  0100               	movlb	0	; () banked
 18905  008250  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18906  008252  0EF3               	movlw	high (STR_2+4)
 18907  008254  0100               	movlb	0	; () banked
 18908  008256  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18909  008258  ECB8  F045         	call	_m_mem_cpy	;wreg free
 18910                           
 18911                           ;ui.c: 490: if(*p==HOTIZONTAL){
 18912  00825C  C076  FFD9         	movff	ui_disp_menu_pos_adj@p,fsr2l
 18913  008260  C077  FFDA         	movff	ui_disp_menu_pos_adj@p+1,fsr2h
 18914  008264  50DF               	movf	indf2,w,c
 18915  008266  A4D8               	btfss	status,2,c
 18916  008268  D002               	goto	l15515
 18917                           
 18918                           ;ui.c: 491: buf[3]='l';
 18919  00826A  0E6C               	movlw	108
 18920  00826C  D001               	goto	L20
 18921  00826E                     l15515:
 18922                           
 18923                           ;ui.c: 493: buf[3]='h';
 18924  00826E  0E68               	movlw	104
 18925  008270                     L20:
 18926  008270  0100               	movlb	0	; () banked
 18927  008272  6F7B               	movwf	(ui_disp_menu_pos_adj@buf+3)& (0+255),b
 18928                           
 18929                           ; BSR set to: 0
 18930                           ;ui.c: 494: }
 18931                           ;ui.c: 495: lcd_show_string_l1(buf);
 18932                           
 18933                           ; BSR set to: 0
 18934  008274  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 18935  008276  0100               	movlb	0	; () banked
 18936  008278  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 18937  00827A  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 18938  00827C  0100               	movlb	0	; () banked
 18939  00827E  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 18940  008280  EC4F  F04C         	call	_lcd_show_string_l1	;wreg free
 18941                           
 18942                           ;ui.c: 496: lcd_disp_refresh();
 18943  008284  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 18944  008288  0012               	return		;funcret
 18945  00828A                     __end_of_ui_disp_menu_pos_adj:
 18946                           	opt stack 0
 18947                           tosu	equ	0xFFF
 18948                           tosh	equ	0xFFE
 18949                           tosl	equ	0xFFD
 18950                           pclath	equ	0xFFA
 18951                           tblptru	equ	0xFF8
 18952                           tblptrh	equ	0xFF7
 18953                           tblptrl	equ	0xFF6
 18954                           tablat	equ	0xFF5
 18955                           prodh	equ	0xFF4
 18956                           prodl	equ	0xFF3
 18957                           intcon	equ	0xFF2
 18958                           postinc0	equ	0xFEE
 18959                           wreg	equ	0xFE8
 18960                           indf1	equ	0xFE7
 18961                           postinc1	equ	0xFE6
 18962                           postdec1	equ	0xFE5
 18963                           plusw1	equ	0xFE3
 18964                           fsr1h	equ	0xFE2
 18965                           fsr1l	equ	0xFE1
 18966                           indf2	equ	0xFDF
 18967                           postinc2	equ	0xFDE
 18968                           postdec2	equ	0xFDD
 18969                           plusw2	equ	0xFDB
 18970                           fsr2h	equ	0xFDA
 18971                           fsr2l	equ	0xFD9
 18972                           status	equ	0xFD8
 18973                           
 18974 ;; *************** function _ui_disp_menu_h_adj *****************
 18975 ;; Defined at:
 18976 ;;		line 499 in file "src/api/ui.c"
 18977 ;; Parameters:    Size  Location     Type
 18978 ;;		None
 18979 ;; Auto vars:     Size  Location     Type
 18980 ;;  fps             2   42[BANK0 ] PTR struct .
 18981 ;;		 -> stSysData(240), 
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  1    wreg      void 
 18984 ;; Registers used:
 18985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18995 ;;Total ram usage:        2 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; Hardware stack levels required when called:   10
 18998 ;; This function calls:
 18999 ;;		_lcd_disp_all
 19000 ;;		_lcd_disp_logo
 19001 ;;		_ui_disp_adj_xfloat_pt
 19002 ;; This function is called by:
 19003 ;;		_ui_disp_menu_pose_size
 19004 ;; This function uses a non-reentrant model
 19005 ;;
 19006                           
 19007                           	psect	text101
 19008  0089B8                     __ptext101:
 19009                           	opt stack 0
 19010  0089B8                     _ui_disp_menu_h_adj:
 19011                           	opt stack 17
 19012                           
 19013                           ;ui.c: 501: lcd_disp_all(0x00);;
 19014                           
 19015                           ;incstack = 0
 19016  0089B8  0E00               	movlw	0
 19017  0089BA  EC4D  F04F         	call	_lcd_disp_all
 19018                           
 19019                           ;ui.c: 502: lcd_disp_logo(1);
 19020  0089BE  0E01               	movlw	1
 19021  0089C0  EC35  F04F         	call	_lcd_disp_logo
 19022                           
 19023                           ;ui.c: 504: st_sysDataDef* fps= &stSysData;
 19024  0089C4  0E00               	movlw	low _stSysData
 19025  0089C6  0100               	movlb	0	; () banked
 19026  0089C8  6F8A               	movwf	ui_disp_menu_h_adj@fps& (0+255),b
 19027  0089CA  0E02               	movlw	high _stSysData
 19028  0089CC  0100               	movlb	0	; () banked
 19029  0089CE  6F8B               	movwf	(ui_disp_menu_h_adj@fps+1)& (0+255),b
 19030                           
 19031                           ; BSR set to: 0
 19032                           ;ui.c: 505: if(fps->pos==HOTIZONTAL){
 19033  0089D0  0100               	movlb	0	; () banked
 19034  0089D2  EE20 F004          	lfsr	2,4
 19035  0089D6  518A               	movf	ui_disp_menu_h_adj@fps& (0+255),w,b
 19036  0089D8  26D9               	addwf	fsr2l,f,c
 19037  0089DA  518B               	movf	(ui_disp_menu_h_adj@fps+1)& (0+255),w,b
 19038  0089DC  22DA               	addwfc	fsr2h,f,c
 19039  0089DE  50DF               	movf	indf2,w,c
 19040  0089E0  A4D8               	btfss	status,2,c
 19041  0089E2  D011               	goto	l15529
 19042                           
 19043                           ; BSR set to: 0
 19044                           ;ui.c: 506: ui_disp_adj_xfloat_pt((uint8_t*)"   l",&m_floatAdj,adjLocation);
 19045  0089E4  0ED6               	movlw	low STR_9
 19046  0089E6  0100               	movlb	0	; () banked
 19047  0089E8  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 19048  0089EA  0EF3               	movlw	high STR_9
 19049  0089EC  0100               	movlb	0	; () banked
 19050  0089EE  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 19051  0089F0  0E35               	movlw	low _m_floatAdj
 19052  0089F2  0100               	movlb	0	; () banked
 19053  0089F4  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 19054  0089F6  0E00               	movlw	high _m_floatAdj
 19055  0089F8  0100               	movlb	0	; () banked
 19056  0089FA  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 19057  0089FC  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 19058  008A00  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 19059                           
 19060                           ;ui.c: 507: }else{
 19061  008A04  0012               	return	
 19062  008A06                     l15529:
 19063                           
 19064                           ;ui.c: 508: ui_disp_adj_xfloat_pt((uint8_t*)"   h",&m_floatAdj,adjLocation);
 19065  008A06  0ED1               	movlw	low STR_10
 19066  008A08  0100               	movlb	0	; () banked
 19067  008A0A  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 19068  008A0C  0EF3               	movlw	high STR_10
 19069  008A0E  0100               	movlb	0	; () banked
 19070  008A10  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 19071  008A12  0E35               	movlw	low _m_floatAdj
 19072  008A14  0100               	movlb	0	; () banked
 19073  008A16  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 19074  008A18  0E00               	movlw	high _m_floatAdj
 19075  008A1A  0100               	movlb	0	; () banked
 19076  008A1C  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 19077  008A1E  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 19078  008A22  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 19079  008A26  0012               	return	
 19080  008A28                     __end_of_ui_disp_menu_h_adj:
 19081                           	opt stack 0
 19082                           tosu	equ	0xFFF
 19083                           tosh	equ	0xFFE
 19084                           tosl	equ	0xFFD
 19085                           pclath	equ	0xFFA
 19086                           tblptru	equ	0xFF8
 19087                           tblptrh	equ	0xFF7
 19088                           tblptrl	equ	0xFF6
 19089                           tablat	equ	0xFF5
 19090                           prodh	equ	0xFF4
 19091                           prodl	equ	0xFF3
 19092                           intcon	equ	0xFF2
 19093                           postinc0	equ	0xFEE
 19094                           wreg	equ	0xFE8
 19095                           indf1	equ	0xFE7
 19096                           postinc1	equ	0xFE6
 19097                           postdec1	equ	0xFE5
 19098                           plusw1	equ	0xFE3
 19099                           fsr1h	equ	0xFE2
 19100                           fsr1l	equ	0xFE1
 19101                           indf2	equ	0xFDF
 19102                           postinc2	equ	0xFDE
 19103                           postdec2	equ	0xFDD
 19104                           plusw2	equ	0xFDB
 19105                           fsr2h	equ	0xFDA
 19106                           fsr2l	equ	0xFD9
 19107                           status	equ	0xFD8
 19108                           
 19109 ;; *************** function _ui_disp_menu_d_adj *****************
 19110 ;; Defined at:
 19111 ;;		line 512 in file "src/api/ui.c"
 19112 ;; Parameters:    Size  Location     Type
 19113 ;;		None
 19114 ;; Auto vars:     Size  Location     Type
 19115 ;;		None
 19116 ;; Return value:  Size  Location     Type
 19117 ;;                  1    wreg      void 
 19118 ;; Registers used:
 19119 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19120 ;; Tracked objects:
 19121 ;;		On entry : 0/0
 19122 ;;		On exit  : 0/0
 19123 ;;		Unchanged: 0/0
 19124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19129 ;;Total ram usage:        0 bytes
 19130 ;; Hardware stack levels used:    1
 19131 ;; Hardware stack levels required when called:   10
 19132 ;; This function calls:
 19133 ;;		_lcd_disp_all
 19134 ;;		_lcd_disp_logo
 19135 ;;		_ui_disp_adj_xfloat_pt
 19136 ;; This function is called by:
 19137 ;;		_ui_disp_menu_pose_size
 19138 ;; This function uses a non-reentrant model
 19139 ;;
 19140                           
 19141                           	psect	text102
 19142  009ECA                     __ptext102:
 19143                           	opt stack 0
 19144  009ECA                     _ui_disp_menu_d_adj:
 19145                           	opt stack 17
 19146                           
 19147                           ;ui.c: 514: lcd_disp_all(0x00);;
 19148                           
 19149                           ;incstack = 0
 19150  009ECA  0E00               	movlw	0
 19151  009ECC  EC4D  F04F         	call	_lcd_disp_all
 19152                           
 19153                           ;ui.c: 515: lcd_disp_logo(1);
 19154  009ED0  0E01               	movlw	1
 19155  009ED2  EC35  F04F         	call	_lcd_disp_logo
 19156                           
 19157                           ;ui.c: 516: ui_disp_adj_xfloat_pt((uint8_t*)"   d",&m_floatAdj,adjLocation);
 19158  009ED6  0EBD               	movlw	low STR_11
 19159  009ED8  0100               	movlb	0	; () banked
 19160  009EDA  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 19161  009EDC  0EF3               	movlw	high STR_11
 19162  009EDE  0100               	movlb	0	; () banked
 19163  009EE0  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 19164  009EE2  0E35               	movlw	low _m_floatAdj
 19165  009EE4  0100               	movlb	0	; () banked
 19166  009EE6  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 19167  009EE8  0E00               	movlw	high _m_floatAdj
 19168  009EEA  0100               	movlb	0	; () banked
 19169  009EEC  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 19170  009EEE  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 19171  009EF2  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 19172  009EF6  0012               	return		;funcret
 19173  009EF8                     __end_of_ui_disp_menu_d_adj:
 19174                           	opt stack 0
 19175                           tosu	equ	0xFFF
 19176                           tosh	equ	0xFFE
 19177                           tosl	equ	0xFFD
 19178                           pclath	equ	0xFFA
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           intcon	equ	0xFF2
 19186                           postinc0	equ	0xFEE
 19187                           wreg	equ	0xFE8
 19188                           indf1	equ	0xFE7
 19189                           postinc1	equ	0xFE6
 19190                           postdec1	equ	0xFE5
 19191                           plusw1	equ	0xFE3
 19192                           fsr1h	equ	0xFE2
 19193                           fsr1l	equ	0xFE1
 19194                           indf2	equ	0xFDF
 19195                           postinc2	equ	0xFDE
 19196                           postdec2	equ	0xFDD
 19197                           plusw2	equ	0xFDB
 19198                           fsr2h	equ	0xFDA
 19199                           fsr2l	equ	0xFD9
 19200                           status	equ	0xFD8
 19201                           
 19202 ;; *************** function _ui_disp_menu_poly_c_adj *****************
 19203 ;; Defined at:
 19204 ;;		line 591 in file "src/api/ui.c"
 19205 ;; Parameters:    Size  Location     Type
 19206 ;;		None
 19207 ;; Auto vars:     Size  Location     Type
 19208 ;;  buf             6   40[BANK0 ] unsigned char [6]
 19209 ;;  t8              1   46[BANK0 ] unsigned char 
 19210 ;; Return value:  Size  Location     Type
 19211 ;;                  1    wreg      void 
 19212 ;; Registers used:
 19213 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19214 ;; Tracked objects:
 19215 ;;		On entry : 0/0
 19216 ;;		On exit  : 0/0
 19217 ;;		Unchanged: 0/0
 19218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19220 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19222 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19223 ;;Total ram usage:        7 bytes
 19224 ;; Hardware stack levels used:    1
 19225 ;; Hardware stack levels required when called:   11
 19226 ;; This function calls:
 19227 ;;		_lcd_disp_all
 19228 ;;		_lcd_disp_logo
 19229 ;;		_m_mem_cpy
 19230 ;;		_ui_disp_adj_xfixed_pt_dp
 19231 ;; This function is called by:
 19232 ;;		_ui_disp_menu
 19233 ;; This function uses a non-reentrant model
 19234 ;;
 19235                           
 19236                           	psect	text103
 19237  008EAE                     __ptext103:
 19238                           	opt stack 0
 19239  008EAE                     _ui_disp_menu_poly_c_adj:
 19240                           	opt stack 17
 19241                           
 19242                           ;ui.c: 593: uint8_t buf[6];
 19243                           ;ui.c: 594: uint8_t t8;
 19244                           ;ui.c: 596: lcd_disp_all(0x00);;
 19245                           
 19246                           ;incstack = 0
 19247  008EAE  0E00               	movlw	0
 19248  008EB0  EC4D  F04F         	call	_lcd_disp_all
 19249                           
 19250                           ;ui.c: 597: lcd_disp_logo(1);
 19251  008EB4  0E01               	movlw	1
 19252  008EB6  EC35  F04F         	call	_lcd_disp_logo
 19253                           
 19254                           ;ui.c: 599: t8=subMenu;
 19255  008EBA  C032  F08E         	movff	_subMenu,ui_disp_menu_poly_c_adj@t8	;volatile
 19256                           
 19257                           ;ui.c: 600: if(t8>3)return;
 19258  008EBE  0E03               	movlw	3
 19259  008EC0  0100               	movlb	0	; () banked
 19260  008EC2  658E               	cpfsgt	ui_disp_menu_poly_c_adj@t8& (0+255),b
 19261  008EC4  D001               	goto	l16401
 19262  008EC6  0012               	return	
 19263  008EC8                     l16401:
 19264                           
 19265                           ; BSR set to: 0
 19266                           ;ui.c: 601: m_mem_cpy(buf,(uint8_t*)"    ");
 19267  008EC8  0E88               	movlw	low ui_disp_menu_poly_c_adj@buf
 19268  008ECA  0100               	movlb	0	; () banked
 19269  008ECC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19270  008ECE  0E00               	movlw	high ui_disp_menu_poly_c_adj@buf
 19271  008ED0  0100               	movlb	0	; () banked
 19272  008ED2  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19273  008ED4  0E74               	movlw	low (STR_2+4)
 19274  008ED6  0100               	movlb	0	; () banked
 19275  008ED8  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19276  008EDA  0EF3               	movlw	high (STR_2+4)
 19277  008EDC  0100               	movlb	0	; () banked
 19278  008EDE  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19279  008EE0  ECB8  F045         	call	_m_mem_cpy	;wreg free
 19280                           
 19281                           ;ui.c: 603: buf[3]='a'+t8;
 19282  008EE4  0100               	movlb	0	; () banked
 19283  008EE6  518E               	movf	ui_disp_menu_poly_c_adj@t8& (0+255),w,b
 19284  008EE8  0F61               	addlw	97
 19285  008EEA  0100               	movlb	0	; () banked
 19286  008EEC  6F8B               	movwf	(ui_disp_menu_poly_c_adj@buf+3)& (0+255),b
 19287                           
 19288                           ; BSR set to: 0
 19289                           ;ui.c: 604: ui_disp_adj_xfixed_pt_dp(buf,adjValue,adjLocation,0);
 19290  008EEE  0E88               	movlw	low ui_disp_menu_poly_c_adj@buf
 19291  008EF0  0100               	movlb	0	; () banked
 19292  008EF2  6F76               	movwf	ui_disp_adj_xfixed_pt_dp@str& (0+255),b
 19293  008EF4  0E00               	movlw	high ui_disp_menu_poly_c_adj@buf
 19294  008EF6  0100               	movlb	0	; () banked
 19295  008EF8  6F77               	movwf	(ui_disp_adj_xfixed_pt_dp@str+1)& (0+255),b
 19296  008EFA  C039  F078         	movff	_adjValue,ui_disp_adj_xfixed_pt_dp@x	;volatile
 19297  008EFE  C03A  F079         	movff	_adjValue+1,ui_disp_adj_xfixed_pt_dp@x+1	;volatile
 19298  008F02  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt_dp@loc	;volatile
 19299  008F06  0E00               	movlw	0
 19300  008F08  0100               	movlb	0	; () banked
 19301  008F0A  6F7B               	movwf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),b
 19302  008F0C  ECDB  F034         	call	_ui_disp_adj_xfixed_pt_dp	;wreg free
 19303  008F10  0012               	return		;funcret
 19304  008F12                     __end_of_ui_disp_menu_poly_c_adj:
 19305                           	opt stack 0
 19306                           tosu	equ	0xFFF
 19307                           tosh	equ	0xFFE
 19308                           tosl	equ	0xFFD
 19309                           pclath	equ	0xFFA
 19310                           tblptru	equ	0xFF8
 19311                           tblptrh	equ	0xFF7
 19312                           tblptrl	equ	0xFF6
 19313                           tablat	equ	0xFF5
 19314                           prodh	equ	0xFF4
 19315                           prodl	equ	0xFF3
 19316                           intcon	equ	0xFF2
 19317                           postinc0	equ	0xFEE
 19318                           wreg	equ	0xFE8
 19319                           indf1	equ	0xFE7
 19320                           postinc1	equ	0xFE6
 19321                           postdec1	equ	0xFE5
 19322                           plusw1	equ	0xFE3
 19323                           fsr1h	equ	0xFE2
 19324                           fsr1l	equ	0xFE1
 19325                           indf2	equ	0xFDF
 19326                           postinc2	equ	0xFDE
 19327                           postdec2	equ	0xFDD
 19328                           plusw2	equ	0xFDB
 19329                           fsr2h	equ	0xFDA
 19330                           fsr2l	equ	0xFD9
 19331                           status	equ	0xFD8
 19332                           
 19333 ;; *************** function _ui_disp_menu_home *****************
 19334 ;; Defined at:
 19335 ;;		line 423 in file "src/api/ui.c"
 19336 ;; Parameters:    Size  Location     Type
 19337 ;;		None
 19338 ;; Auto vars:     Size  Location     Type
 19339 ;;  mf              4   40[BANK0 ] struct .
 19340 ;;  t8              1   39[BANK0 ] unsigned char 
 19341 ;; Return value:  Size  Location     Type
 19342 ;;                  1    wreg      void 
 19343 ;; Registers used:
 19344 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19345 ;; Tracked objects:
 19346 ;;		On entry : 0/0
 19347 ;;		On exit  : 0/0
 19348 ;;		Unchanged: 0/0
 19349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19351 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19353 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19354 ;;Total ram usage:        5 bytes
 19355 ;; Hardware stack levels used:    1
 19356 ;; Hardware stack levels required when called:   10
 19357 ;; This function calls:
 19358 ;;		___int32_2_mflot32
 19359 ;;		_lcd_disp_all
 19360 ;;		_lcd_disp_level
 19361 ;;		_lcd_disp_logo
 19362 ;;		_lcd_disp_refresh
 19363 ;;		_lcd_disp_unit_1st_m
 19364 ;;		_lcd_disp_unit_1st_m3
 19365 ;;		_lcd_disp_unit_2nd_m
 19366 ;;		_lcd_disp_unit_2nd_m3
 19367 ;;		_lcd_disp_unit_mpa
 19368 ;;		_lcd_disp_unit_t
 19369 ;;		_lcd_disp_unit_temperature
 19370 ;;		_ui_disp_xfloat_pt
 19371 ;; This function is called by:
 19372 ;;		_ui_disp_menu
 19373 ;; This function uses a non-reentrant model
 19374 ;;
 19375                           
 19376                           	psect	text104
 19377  00382A                     __ptext104:
 19378                           	opt stack 0
 19379  00382A                     _ui_disp_menu_home:
 19380                           	opt stack 18
 19381                           
 19382                           ;ui.c: 425: uint8_t t8;
 19383                           ;ui.c: 426: st_float32 mf;
 19384                           ;ui.c: 427: lcd_disp_all(0x00);;
 19385                           
 19386                           ;incstack = 0
 19387  00382A  0E00               	movlw	0
 19388  00382C  EC4D  F04F         	call	_lcd_disp_all
 19389                           
 19390                           ;ui.c: 428: lcd_disp_logo(1);
 19391  003830  0E01               	movlw	1
 19392  003832  EC35  F04F         	call	_lcd_disp_logo
 19393                           
 19394                           ;ui.c: 429: t8=subMenu & 0xf0;
 19395  003836  5032               	movf	_subMenu,w,c	;volatile
 19396  003838  0BF0               	andlw	240
 19397  00383A  0100               	movlb	0	; () banked
 19398  00383C  6F87               	movwf	ui_disp_menu_home@t8& (0+255),b
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;ui.c: 430: t8>>=4;
 19402  00383E  0100               	movlb	0	; () banked
 19403  003840  3B87               	swapf	ui_disp_menu_home@t8& (0+255),f,b
 19404  003842  0E0F               	movlw	15
 19405  003844  1787               	andwf	ui_disp_menu_home@t8& (0+255),f,b
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;ui.c: 431: if(t8==0){
 19409  003846  0100               	movlb	0	; () banked
 19410  003848  5187               	movf	ui_disp_menu_home@t8& (0+255),w,b
 19411  00384A  0100               	movlb	0	; () banked
 19412  00384C  A4D8               	btfss	status,2,c
 19413  00384E  D021               	goto	l16243
 19414                           
 19415                           ; BSR set to: 0
 19416                           ;ui.c: 432: mf.t32=__int32_2_mflot32(rtHight);
 19417  003850  C0EB  F06D         	movff	_rtHight,___int32_2_mflot32@x	;volatile
 19418  003854  C0EC  F06E         	movff	_rtHight+1,___int32_2_mflot32@x+1	;volatile
 19419  003858  C0ED  F06F         	movff	_rtHight+2,___int32_2_mflot32@x+2	;volatile
 19420  00385C  C0EE  F070         	movff	_rtHight+3,___int32_2_mflot32@x+3	;volatile
 19421  003860  EC08  F030         	call	___int32_2_mflot32	;wreg free
 19422  003864  C06D  F088         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19423  003868  C06E  F089         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19424  00386C  C06F  F08A         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19425  003870  C070  F08B         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19426                           
 19427                           ;ui.c: 433: ui_disp_xfloat_pt(&mf,0);
 19428  003874  0E88               	movlw	low ui_disp_menu_home@mf
 19429  003876  0100               	movlb	0	; () banked
 19430  003878  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19431  00387A  0E00               	movlw	high ui_disp_menu_home@mf
 19432  00387C  0100               	movlb	0	; () banked
 19433  00387E  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19434  003880  0E00               	movlw	0
 19435  003882  0100               	movlb	0	; () banked
 19436  003884  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19437  003886  EC41  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19438                           
 19439                           ;ui.c: 434: lcd_disp_unit_1st_m(1);
 19440  00388A  0E01               	movlw	1
 19441  00388C  ECCB  F04A         	call	_lcd_disp_unit_1st_m
 19442                           
 19443                           ;ui.c: 435: }else if(t8==1){
 19444  003890  D04A               	goto	l16259
 19445  003892                     l16243:
 19446  003892  0100               	movlb	0	; () banked
 19447  003894  0587               	decf	ui_disp_menu_home@t8& (0+255),w,b
 19448  003896  A4D8               	btfss	status,2,c
 19449  003898  D021               	goto	l16251
 19450                           
 19451                           ; BSR set to: 0
 19452                           ;ui.c: 436: mf.t32=__int32_2_mflot32(rtVolume);
 19453  00389A  C021  F06D         	movff	_rtVolume,___int32_2_mflot32@x	;volatile
 19454  00389E  C022  F06E         	movff	_rtVolume+1,___int32_2_mflot32@x+1	;volatile
 19455  0038A2  C023  F06F         	movff	_rtVolume+2,___int32_2_mflot32@x+2	;volatile
 19456  0038A6  C024  F070         	movff	_rtVolume+3,___int32_2_mflot32@x+3	;volatile
 19457  0038AA  EC08  F030         	call	___int32_2_mflot32	;wreg free
 19458  0038AE  C06D  F088         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19459  0038B2  C06E  F089         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19460  0038B6  C06F  F08A         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19461  0038BA  C070  F08B         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19462                           
 19463                           ;ui.c: 437: ui_disp_xfloat_pt(&mf,0);
 19464  0038BE  0E88               	movlw	low ui_disp_menu_home@mf
 19465  0038C0  0100               	movlb	0	; () banked
 19466  0038C2  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19467  0038C4  0E00               	movlw	high ui_disp_menu_home@mf
 19468  0038C6  0100               	movlb	0	; () banked
 19469  0038C8  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19470  0038CA  0E00               	movlw	0
 19471  0038CC  0100               	movlb	0	; () banked
 19472  0038CE  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19473  0038D0  EC41  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19474                           
 19475                           ;ui.c: 438: lcd_disp_unit_1st_m3(1);
 19476  0038D4  0E01               	movlw	1
 19477  0038D6  EC24  F047         	call	_lcd_disp_unit_1st_m3
 19478                           
 19479                           ;ui.c: 439: }else if(t8==2){
 19480  0038DA  D025               	goto	l16259
 19481  0038DC                     l16251:
 19482  0038DC  0E02               	movlw	2
 19483  0038DE  0100               	movlb	0	; () banked
 19484  0038E0  1987               	xorwf	ui_disp_menu_home@t8& (0+255),w,b
 19485  0038E2  A4D8               	btfss	status,2,c
 19486  0038E4  D020               	goto	l16259
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;ui.c: 440: mf.t32=__int32_2_mflot32(rtWeight);
 19490  0038E6  C14E  F06D         	movff	_rtWeight,___int32_2_mflot32@x	;volatile
 19491  0038EA  C14F  F06E         	movff	_rtWeight+1,___int32_2_mflot32@x+1	;volatile
 19492  0038EE  C150  F06F         	movff	_rtWeight+2,___int32_2_mflot32@x+2	;volatile
 19493  0038F2  C151  F070         	movff	_rtWeight+3,___int32_2_mflot32@x+3	;volatile
 19494  0038F6  EC08  F030         	call	___int32_2_mflot32	;wreg free
 19495  0038FA  C06D  F088         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19496  0038FE  C06E  F089         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19497  003902  C06F  F08A         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19498  003906  C070  F08B         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19499                           
 19500                           ;ui.c: 441: ui_disp_xfloat_pt(&mf,0);
 19501  00390A  0E88               	movlw	low ui_disp_menu_home@mf
 19502  00390C  0100               	movlb	0	; () banked
 19503  00390E  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19504  003910  0E00               	movlw	high ui_disp_menu_home@mf
 19505  003912  0100               	movlb	0	; () banked
 19506  003914  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19507  003916  0E00               	movlw	0
 19508  003918  0100               	movlb	0	; () banked
 19509  00391A  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19510  00391C  EC41  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19511                           
 19512                           ;ui.c: 442: lcd_disp_unit_t(1);
 19513  003920  0E01               	movlw	1
 19514  003922  ECA1  F04A         	call	_lcd_disp_unit_t
 19515  003926                     l16259:
 19516                           
 19517                           ;ui.c: 443: }
 19518                           ;ui.c: 445: t8=subMenu & 0x0f;
 19519  003926  5032               	movf	_subMenu,w,c	;volatile
 19520  003928  0B0F               	andlw	15
 19521  00392A  0100               	movlb	0	; () banked
 19522  00392C  6F87               	movwf	ui_disp_menu_home@t8& (0+255),b
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;ui.c: 446: if(t8==0){
 19526  00392E  0100               	movlb	0	; () banked
 19527  003930  5187               	movf	ui_disp_menu_home@t8& (0+255),w,b
 19528  003932  0100               	movlb	0	; () banked
 19529  003934  A4D8               	btfss	status,2,c
 19530  003936  D021               	goto	l16269
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;ui.c: 447: mf.t32=__int32_2_mflot32(rtPressure);
 19534  003938  C0E7  F06D         	movff	_rtPressure,___int32_2_mflot32@x	;volatile
 19535  00393C  C0E8  F06E         	movff	_rtPressure+1,___int32_2_mflot32@x+1	;volatile
 19536  003940  C0E9  F06F         	movff	_rtPressure+2,___int32_2_mflot32@x+2	;volatile
 19537  003944  C0EA  F070         	movff	_rtPressure+3,___int32_2_mflot32@x+3	;volatile
 19538  003948  EC08  F030         	call	___int32_2_mflot32	;wreg free
 19539  00394C  C06D  F088         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19540  003950  C06E  F089         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19541  003954  C06F  F08A         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19542  003958  C070  F08B         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19543                           
 19544                           ;ui.c: 448: ui_disp_xfloat_pt(&mf,1);
 19545  00395C  0E88               	movlw	low ui_disp_menu_home@mf
 19546  00395E  0100               	movlb	0	; () banked
 19547  003960  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19548  003962  0E00               	movlw	high ui_disp_menu_home@mf
 19549  003964  0100               	movlb	0	; () banked
 19550  003966  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19551  003968  0E01               	movlw	1
 19552  00396A  0100               	movlb	0	; () banked
 19553  00396C  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19554  00396E  EC41  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19555                           
 19556                           ;ui.c: 449: lcd_disp_unit_mpa(1);
 19557  003972  0E01               	movlw	1
 19558  003974  ECBE  F046         	call	_lcd_disp_unit_mpa
 19559                           
 19560                           ;ui.c: 450: }else if(t8==1){
 19561  003978  D070               	goto	l16293
 19562  00397A                     l16269:
 19563  00397A  0100               	movlb	0	; () banked
 19564  00397C  0587               	decf	ui_disp_menu_home@t8& (0+255),w,b
 19565  00397E  A4D8               	btfss	status,2,c
 19566  003980  D021               	goto	l16277
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;ui.c: 451: mf.t32=__int32_2_mflot32(rtTemperatureEx);
 19570  003982  C146  F06D         	movff	_rtTemperatureEx,___int32_2_mflot32@x	;volatile
 19571  003986  C147  F06E         	movff	_rtTemperatureEx+1,___int32_2_mflot32@x+1	;volatile
 19572  00398A  C148  F06F         	movff	_rtTemperatureEx+2,___int32_2_mflot32@x+2	;volatile
 19573  00398E  C149  F070         	movff	_rtTemperatureEx+3,___int32_2_mflot32@x+3	;volatile
 19574  003992  EC08  F030         	call	___int32_2_mflot32	;wreg free
 19575  003996  C06D  F088         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19576  00399A  C06E  F089         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19577  00399E  C06F  F08A         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19578  0039A2  C070  F08B         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19579                           
 19580                           ;ui.c: 452: ui_disp_xfloat_pt(&mf,1);
 19581  0039A6  0E88               	movlw	low ui_disp_menu_home@mf
 19582  0039A8  0100               	movlb	0	; () banked
 19583  0039AA  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19584  0039AC  0E00               	movlw	high ui_disp_menu_home@mf
 19585  0039AE  0100               	movlb	0	; () banked
 19586  0039B0  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19587  0039B2  0E01               	movlw	1
 19588  0039B4  0100               	movlb	0	; () banked
 19589  0039B6  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19590  0039B8  EC41  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19591                           
 19592                           ;ui.c: 453: lcd_disp_unit_temperature(1);
 19593  0039BC  0E01               	movlw	1
 19594  0039BE  EC8B  F046         	call	_lcd_disp_unit_temperature
 19595                           
 19596                           ;ui.c: 454: }else if(t8==2){
 19597  0039C2  D04B               	goto	l16293
 19598  0039C4                     l16277:
 19599  0039C4  0E02               	movlw	2
 19600  0039C6  0100               	movlb	0	; () banked
 19601  0039C8  1987               	xorwf	ui_disp_menu_home@t8& (0+255),w,b
 19602  0039CA  A4D8               	btfss	status,2,c
 19603  0039CC  D021               	goto	l16285
 19604                           
 19605                           ; BSR set to: 0
 19606                           ;ui.c: 455: mf.t32=__int32_2_mflot32(rtHight);
 19607  0039CE  C0EB  F06D         	movff	_rtHight,___int32_2_mflot32@x	;volatile
 19608  0039D2  C0EC  F06E         	movff	_rtHight+1,___int32_2_mflot32@x+1	;volatile
 19609  0039D6  C0ED  F06F         	movff	_rtHight+2,___int32_2_mflot32@x+2	;volatile
 19610  0039DA  C0EE  F070         	movff	_rtHight+3,___int32_2_mflot32@x+3	;volatile
 19611  0039DE  EC08  F030         	call	___int32_2_mflot32	;wreg free
 19612  0039E2  C06D  F088         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19613  0039E6  C06E  F089         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19614  0039EA  C06F  F08A         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19615  0039EE  C070  F08B         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19616                           
 19617                           ;ui.c: 456: ui_disp_xfloat_pt(&mf,1);
 19618  0039F2  0E88               	movlw	low ui_disp_menu_home@mf
 19619  0039F4  0100               	movlb	0	; () banked
 19620  0039F6  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19621  0039F8  0E00               	movlw	high ui_disp_menu_home@mf
 19622  0039FA  0100               	movlb	0	; () banked
 19623  0039FC  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19624  0039FE  0E01               	movlw	1
 19625  003A00  0100               	movlb	0	; () banked
 19626  003A02  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19627  003A04  EC41  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19628                           
 19629                           ;ui.c: 457: lcd_disp_unit_2nd_m(1);
 19630  003A08  0E01               	movlw	1
 19631  003A0A  ECF1  F046         	call	_lcd_disp_unit_2nd_m
 19632                           
 19633                           ;ui.c: 458: }else if(t8==3){
 19634  003A0E  D025               	goto	l16293
 19635  003A10                     l16285:
 19636  003A10  0E03               	movlw	3
 19637  003A12  0100               	movlb	0	; () banked
 19638  003A14  1987               	xorwf	ui_disp_menu_home@t8& (0+255),w,b
 19639  003A16  A4D8               	btfss	status,2,c
 19640  003A18  D020               	goto	l16293
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;ui.c: 459: mf.t32=__int32_2_mflot32(rtVolume);
 19644  003A1A  C021  F06D         	movff	_rtVolume,___int32_2_mflot32@x	;volatile
 19645  003A1E  C022  F06E         	movff	_rtVolume+1,___int32_2_mflot32@x+1	;volatile
 19646  003A22  C023  F06F         	movff	_rtVolume+2,___int32_2_mflot32@x+2	;volatile
 19647  003A26  C024  F070         	movff	_rtVolume+3,___int32_2_mflot32@x+3	;volatile
 19648  003A2A  EC08  F030         	call	___int32_2_mflot32	;wreg free
 19649  003A2E  C06D  F088         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19650  003A32  C06E  F089         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19651  003A36  C06F  F08A         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19652  003A3A  C070  F08B         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19653                           
 19654                           ;ui.c: 460: ui_disp_xfloat_pt(&mf,1);
 19655  003A3E  0E88               	movlw	low ui_disp_menu_home@mf
 19656  003A40  0100               	movlb	0	; () banked
 19657  003A42  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19658  003A44  0E00               	movlw	high ui_disp_menu_home@mf
 19659  003A46  0100               	movlb	0	; () banked
 19660  003A48  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19661  003A4A  0E01               	movlw	1
 19662  003A4C  0100               	movlb	0	; () banked
 19663  003A4E  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19664  003A50  EC41  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19665                           
 19666                           ;ui.c: 461: lcd_disp_unit_2nd_m3(1);
 19667  003A54  0E01               	movlw	1
 19668  003A56  EC8B  F041         	call	_lcd_disp_unit_2nd_m3
 19669  003A5A                     l16293:
 19670                           
 19671                           ;ui.c: 462: }
 19672                           ;ui.c: 464: t8=60;
 19673  003A5A  0E3C               	movlw	60
 19674  003A5C  0100               	movlb	0	; () banked
 19675  003A5E  6F87               	movwf	ui_disp_menu_home@t8& (0+255),b
 19676                           
 19677                           ; BSR set to: 0
 19678                           ;ui.c: 465: lcd_disp_level(t8);
 19679  003A60  0100               	movlb	0	; () banked
 19680  003A62  5187               	movf	ui_disp_menu_home@t8& (0+255),w,b
 19681  003A64  EC1E  F04A         	call	_lcd_disp_level
 19682                           
 19683                           ;ui.c: 466: lcd_disp_refresh();
 19684  003A68  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 19685  003A6C  0012               	return		;funcret
 19686  003A6E                     __end_of_ui_disp_menu_home:
 19687                           	opt stack 0
 19688                           tosu	equ	0xFFF
 19689                           tosh	equ	0xFFE
 19690                           tosl	equ	0xFFD
 19691                           pclath	equ	0xFFA
 19692                           tblptru	equ	0xFF8
 19693                           tblptrh	equ	0xFF7
 19694                           tblptrl	equ	0xFF6
 19695                           tablat	equ	0xFF5
 19696                           prodh	equ	0xFF4
 19697                           prodl	equ	0xFF3
 19698                           intcon	equ	0xFF2
 19699                           postinc0	equ	0xFEE
 19700                           wreg	equ	0xFE8
 19701                           indf1	equ	0xFE7
 19702                           postinc1	equ	0xFE6
 19703                           postdec1	equ	0xFE5
 19704                           plusw1	equ	0xFE3
 19705                           fsr1h	equ	0xFE2
 19706                           fsr1l	equ	0xFE1
 19707                           indf2	equ	0xFDF
 19708                           postinc2	equ	0xFDE
 19709                           postdec2	equ	0xFDD
 19710                           plusw2	equ	0xFDB
 19711                           fsr2h	equ	0xFDA
 19712                           fsr2l	equ	0xFD9
 19713                           status	equ	0xFD8
 19714                           
 19715 ;; *************** function _ui_disp_xfloat_pt *****************
 19716 ;; Defined at:
 19717 ;;		line 326 in file "src/api/ui.c"
 19718 ;; Parameters:    Size  Location     Type
 19719 ;;  xpf             2   22[BANK0 ] PTR struct .
 19720 ;;		 -> ui_disp_menu_home@mf(4), ui_disp_menu_home_02@mf(4), ui_disp_menu_home_01@mf(4), ui_disp_menu_home_00@mf(4), 
 19721 ;;  line            1   24[BANK0 ] unsigned char 
 19722 ;; Auto vars:     Size  Location     Type
 19723 ;;  buf            10   26[BANK0 ] unsigned char [10]
 19724 ;;  x               2   37[BANK0 ] unsigned int 
 19725 ;;  t8              1   36[BANK0 ] unsigned char 
 19726 ;; Return value:  Size  Location     Type
 19727 ;;                  1    wreg      void 
 19728 ;; Registers used:
 19729 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19730 ;; Tracked objects:
 19731 ;;		On entry : 0/0
 19732 ;;		On exit  : 0/0
 19733 ;;		Unchanged: 0/0
 19734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19735 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19736 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19738 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19739 ;;Total ram usage:       17 bytes
 19740 ;; Hardware stack levels used:    1
 19741 ;; Hardware stack levels required when called:    9
 19742 ;; This function calls:
 19743 ;;		___lwdiv
 19744 ;;		_lcd_show_dp
 19745 ;;		_lcd_show_string_l0
 19746 ;;		_lcd_show_string_l1
 19747 ;;		_m_int16_2_str_4
 19748 ;; This function is called by:
 19749 ;;		_ui_disp_menu_home
 19750 ;;		_ui_disp_menu_home_00
 19751 ;;		_ui_disp_menu_home_01
 19752 ;;		_ui_disp_menu_home_02
 19753 ;; This function uses a non-reentrant model
 19754 ;;
 19755                           
 19756                           	psect	text105
 19757  005282                     __ptext105:
 19758                           	opt stack 0
 19759  005282                     _ui_disp_xfloat_pt:
 19760                           	opt stack 18
 19761                           
 19762                           ;ui.c: 328: uint8_t buf[10];
 19763                           ;ui.c: 329: uint8_t t8;
 19764                           ;ui.c: 330: uint16_t x;
 19765                           ;ui.c: 331: if(line>1)return;
 19766                           
 19767                           ;incstack = 0
 19768  005282  0E01               	movlw	1
 19769  005284  0100               	movlb	0	; () banked
 19770  005286  6578               	cpfsgt	ui_disp_xfloat_pt@line& (0+255),b
 19771  005288  D001               	goto	l15411
 19772  00528A  0012               	return	
 19773  00528C                     l15411:
 19774                           
 19775                           ; BSR set to: 0
 19776                           ;ui.c: 332: x=xpf->stru.significand;
 19777  00528C  C076  FFD9         	movff	ui_disp_xfloat_pt@xpf,fsr2l
 19778  005290  C077  FFDA         	movff	ui_disp_xfloat_pt@xpf+1,fsr2h
 19779  005294  CFDE F085          	movff	postinc2,ui_disp_xfloat_pt@x
 19780  005298  CFDD F086          	movff	postdec2,ui_disp_xfloat_pt@x+1
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;ui.c: 333: if(xpf->stru.sign){
 19784  00529C  0100               	movlb	0	; () banked
 19785  00529E  EE20 F003          	lfsr	2,3
 19786  0052A2  5176               	movf	ui_disp_xfloat_pt@xpf& (0+255),w,b
 19787  0052A4  26D9               	addwf	fsr2l,f,c
 19788  0052A6  5177               	movf	(ui_disp_xfloat_pt@xpf+1)& (0+255),w,b
 19789  0052A8  22DA               	addwfc	fsr2h,f,c
 19790  0052AA  50DF               	movf	indf2,w,c
 19791  0052AC  B4D8               	btfsc	status,2,c
 19792  0052AE  D02C               	goto	l15425
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;ui.c: 334: x/=10;
 19796  0052B0  C085  F062         	movff	ui_disp_xfloat_pt@x,___lwdiv@dividend
 19797  0052B4  C086  F063         	movff	ui_disp_xfloat_pt@x+1,___lwdiv@dividend+1
 19798  0052B8  0E00               	movlw	0
 19799  0052BA  0100               	movlb	0	; () banked
 19800  0052BC  6F65               	movwf	(___lwdiv@divisor+1)& (0+255),b
 19801  0052BE  0E0A               	movlw	10
 19802  0052C0  6F64               	movwf	___lwdiv@divisor& (0+255),b
 19803  0052C2  EC46  F043         	call	___lwdiv	;wreg free
 19804  0052C6  C062  F085         	movff	?___lwdiv,ui_disp_xfloat_pt@x
 19805  0052CA  C063  F086         	movff	?___lwdiv+1,ui_disp_xfloat_pt@x+1
 19806                           
 19807                           ;ui.c: 335: if(x>999)x=999;
 19808  0052CE  0EE8               	movlw	232
 19809  0052D0  0100               	movlb	0	; () banked
 19810  0052D2  5D85               	subwf	ui_disp_xfloat_pt@x& (0+255),w,b
 19811  0052D4  0E03               	movlw	3
 19812  0052D6  0100               	movlb	0	; () banked
 19813  0052D8  5986               	subwfb	(ui_disp_xfloat_pt@x+1)& (0+255),w,b
 19814  0052DA  A0D8               	btfss	status,0,c
 19815  0052DC  D005               	goto	l15421
 19816                           
 19817                           ; BSR set to: 0
 19818  0052DE  0E03               	movlw	3
 19819  0052E0  0100               	movlb	0	; () banked
 19820  0052E2  6F86               	movwf	(ui_disp_xfloat_pt@x+1)& (0+255),b
 19821  0052E4  0EE7               	movlw	231
 19822  0052E6  6F85               	movwf	ui_disp_xfloat_pt@x& (0+255),b
 19823  0052E8                     l15421:
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;ui.c: 336: m_int16_2_str_4(buf,x);
 19827  0052E8  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19828  0052EA  0100               	movlb	0	; () banked
 19829  0052EC  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 19830  0052EE  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19831  0052F0  0100               	movlb	0	; () banked
 19832  0052F2  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 19833  0052F4  C085  F06A         	movff	ui_disp_xfloat_pt@x,m_int16_2_str_4@x
 19834  0052F8  C086  F06B         	movff	ui_disp_xfloat_pt@x+1,m_int16_2_str_4@x+1
 19835  0052FC  ECE4  F027         	call	_m_int16_2_str_4	;wreg free
 19836                           
 19837                           ;ui.c: 337: buf[0]='-';
 19838  005300  0E2D               	movlw	45
 19839  005302  0100               	movlb	0	; () banked
 19840  005304  6F7A               	movwf	ui_disp_xfloat_pt@buf& (0+255),b
 19841                           
 19842                           ;ui.c: 338: }else{
 19843  005306  D019               	goto	l15431
 19844  005308                     l15425:
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;ui.c: 339: if(x>9999)x=9999;
 19848  005308  0E10               	movlw	16
 19849  00530A  0100               	movlb	0	; () banked
 19850  00530C  5D85               	subwf	ui_disp_xfloat_pt@x& (0+255),w,b
 19851  00530E  0E27               	movlw	39
 19852  005310  0100               	movlb	0	; () banked
 19853  005312  5986               	subwfb	(ui_disp_xfloat_pt@x+1)& (0+255),w,b
 19854  005314  A0D8               	btfss	status,0,c
 19855  005316  D005               	goto	l15429
 19856                           
 19857                           ; BSR set to: 0
 19858  005318  0E27               	movlw	39
 19859  00531A  0100               	movlb	0	; () banked
 19860  00531C  6F86               	movwf	(ui_disp_xfloat_pt@x+1)& (0+255),b
 19861  00531E  0E0F               	movlw	15
 19862  005320  6F85               	movwf	ui_disp_xfloat_pt@x& (0+255),b
 19863  005322                     l15429:
 19864                           
 19865                           ; BSR set to: 0
 19866                           ;ui.c: 340: m_int16_2_str_4(buf,x);
 19867  005322  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19868  005324  0100               	movlb	0	; () banked
 19869  005326  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 19870  005328  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19871  00532A  0100               	movlb	0	; () banked
 19872  00532C  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 19873  00532E  C085  F06A         	movff	ui_disp_xfloat_pt@x,m_int16_2_str_4@x
 19874  005332  C086  F06B         	movff	ui_disp_xfloat_pt@x+1,m_int16_2_str_4@x+1
 19875  005336  ECE4  F027         	call	_m_int16_2_str_4	;wreg free
 19876  00533A                     l15431:
 19877                           
 19878                           ;ui.c: 341: }
 19879                           ;ui.c: 342: buf[5]='\0';
 19880  00533A  0E00               	movlw	0
 19881  00533C  0100               	movlb	0	; () banked
 19882  00533E  6F7F               	movwf	(ui_disp_xfloat_pt@buf+5)& (0+255),b
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;ui.c: 343: if(line==0){
 19886  005340  0100               	movlb	0	; () banked
 19887  005342  5178               	movf	ui_disp_xfloat_pt@line& (0+255),w,b
 19888  005344  0100               	movlb	0	; () banked
 19889  005346  A4D8               	btfss	status,2,c
 19890  005348  D009               	goto	l15437
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;ui.c: 344: lcd_show_string_l0(buf);
 19894  00534A  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19895  00534C  0100               	movlb	0	; () banked
 19896  00534E  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 19897  005350  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19898  005352  0100               	movlb	0	; () banked
 19899  005354  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 19900  005356  EC14  F045         	call	_lcd_show_string_l0	;wreg free
 19901                           
 19902                           ;ui.c: 345: }else{
 19903  00535A  D008               	goto	l15439
 19904  00535C                     l15437:
 19905                           
 19906                           ;ui.c: 346: lcd_show_string_l1(buf);
 19907  00535C  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19908  00535E  0100               	movlb	0	; () banked
 19909  005360  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 19910  005362  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19911  005364  0100               	movlb	0	; () banked
 19912  005366  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 19913  005368  EC4F  F04C         	call	_lcd_show_string_l1	;wreg free
 19914  00536C                     l15439:
 19915                           
 19916                           ;ui.c: 347: }
 19917                           ;ui.c: 348: t8=xpf->stru.exponent+xpf->stru.sign;
 19918  00536C  0100               	movlb	0	; () banked
 19919  00536E  EE20 F003          	lfsr	2,3
 19920  005372  5176               	movf	ui_disp_xfloat_pt@xpf& (0+255),w,b
 19921  005374  26D9               	addwf	fsr2l,f,c
 19922  005376  5177               	movf	(ui_disp_xfloat_pt@xpf+1)& (0+255),w,b
 19923  005378  22DA               	addwfc	fsr2h,f,c
 19924  00537A  50DF               	movf	indf2,w,c
 19925  00537C  0100               	movlb	0	; () banked
 19926  00537E  6F79               	movwf	??_ui_disp_xfloat_pt& (0+255),b
 19927  005380  0100               	movlb	0	; () banked
 19928  005382  EE20 F002          	lfsr	2,2
 19929  005386  5176               	movf	ui_disp_xfloat_pt@xpf& (0+255),w,b
 19930  005388  26D9               	addwf	fsr2l,f,c
 19931  00538A  5177               	movf	(ui_disp_xfloat_pt@xpf+1)& (0+255),w,b
 19932  00538C  22DA               	addwfc	fsr2h,f,c
 19933  00538E  50DF               	movf	indf2,w,c
 19934  005390  0100               	movlb	0	; () banked
 19935  005392  2579               	addwf	??_ui_disp_xfloat_pt& (0+255),w,b
 19936  005394  0100               	movlb	0	; () banked
 19937  005396  6F84               	movwf	ui_disp_xfloat_pt@t8& (0+255),b
 19938                           
 19939                           ; BSR set to: 0
 19940                           ;ui.c: 349: if(t8<3)lcd_show_dp(t8+4*line,1);
 19941  005398  0E03               	movlw	3
 19942  00539A  0100               	movlb	0	; () banked
 19943  00539C  6184               	cpfslt	ui_disp_xfloat_pt@t8& (0+255),b
 19944  00539E  0012               	return	
 19945                           
 19946                           ; BSR set to: 0
 19947  0053A0  0E01               	movlw	1
 19948  0053A2  0100               	movlb	0	; () banked
 19949  0053A4  6F70               	movwf	lcd_show_dp@show& (0+255),b
 19950  0053A6  0100               	movlb	0	; () banked
 19951  0053A8  5178               	movf	ui_disp_xfloat_pt@line& (0+255),w,b
 19952  0053AA  0D04               	mullw	4
 19953  0053AC  50F3               	movf	prodl,w,c
 19954  0053AE  0100               	movlb	0	; () banked
 19955  0053B0  2584               	addwf	ui_disp_xfloat_pt@t8& (0+255),w,b
 19956  0053B2  EC82  F045         	call	_lcd_show_dp
 19957  0053B6  0012               	return	
 19958  0053B8                     __end_of_ui_disp_xfloat_pt:
 19959                           	opt stack 0
 19960                           tosu	equ	0xFFF
 19961                           tosh	equ	0xFFE
 19962                           tosl	equ	0xFFD
 19963                           pclath	equ	0xFFA
 19964                           tblptru	equ	0xFF8
 19965                           tblptrh	equ	0xFF7
 19966                           tblptrl	equ	0xFF6
 19967                           tablat	equ	0xFF5
 19968                           prodh	equ	0xFF4
 19969                           prodl	equ	0xFF3
 19970                           intcon	equ	0xFF2
 19971                           postinc0	equ	0xFEE
 19972                           wreg	equ	0xFE8
 19973                           indf1	equ	0xFE7
 19974                           postinc1	equ	0xFE6
 19975                           postdec1	equ	0xFE5
 19976                           plusw1	equ	0xFE3
 19977                           fsr1h	equ	0xFE2
 19978                           fsr1l	equ	0xFE1
 19979                           indf2	equ	0xFDF
 19980                           postinc2	equ	0xFDE
 19981                           postdec2	equ	0xFDD
 19982                           plusw2	equ	0xFDB
 19983                           fsr2h	equ	0xFDA
 19984                           fsr2l	equ	0xFD9
 19985                           status	equ	0xFD8
 19986                           
 19987 ;; *************** function _lcd_show_string_l1 *****************
 19988 ;; Defined at:
 19989 ;;		line 549 in file "src/driver/lcd.c"
 19990 ;; Parameters:    Size  Location     Type
 19991 ;;  str             2   19[BANK0 ] PTR unsigned char 
 19992 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_pos_adj@buf(6), ui_disp_xfloat_pt@buf(10), ui_disp_start_cs600@buf(
      +6), 
 19993 ;; Auto vars:     Size  Location     Type
 19994 ;;  t8              1   21[BANK0 ] unsigned char 
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  1    wreg      void 
 19997 ;; Registers used:
 19998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20007 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20008 ;;Total ram usage:        3 bytes
 20009 ;; Hardware stack levels used:    1
 20010 ;; Hardware stack levels required when called:    8
 20011 ;; This function calls:
 20012 ;;		_lcd_show_chr
 20013 ;; This function is called by:
 20014 ;;		_ui_disp_start_cs600
 20015 ;;		_ui_disp_xfloat_pt
 20016 ;;		_ui_disp_menu_pos_adj
 20017 ;;		_ui_disp_menu_warn_t_adj
 20018 ;; This function uses a non-reentrant model
 20019 ;;
 20020                           
 20021                           	psect	text106
 20022  00989E                     __ptext106:
 20023                           	opt stack 0
 20024  00989E                     _lcd_show_string_l1:
 20025                           	opt stack 21
 20026                           
 20027                           ;lcd.c: 551: uint8_t t8=0;
 20028                           
 20029                           ;incstack = 0
 20030  00989E  0E00               	movlw	0
 20031  0098A0  0100               	movlb	0	; () banked
 20032  0098A2  6F75               	movwf	lcd_show_string_l1@t8& (0+255),b
 20033                           
 20034                           ;lcd.c: 552: while(*str!='\0' && t8<4){
 20035  0098A4  D011               	goto	l14711
 20036  0098A6                     l14705:
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;lcd.c: 553: lcd_show_chr(t8+4,*str);
 20040  0098A6  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
 20041  0098AA  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
 20042  0098AE  50DF               	movf	indf2,w,c
 20043  0098B0  0100               	movlb	0	; () banked
 20044  0098B2  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 20045  0098B4  0100               	movlb	0	; () banked
 20046  0098B6  5175               	movf	lcd_show_string_l1@t8& (0+255),w,b
 20047  0098B8  0F04               	addlw	4
 20048  0098BA  EC72  F03E         	call	_lcd_show_chr
 20049                           
 20050                           ;lcd.c: 554: str++;
 20051  0098BE  0100               	movlb	0	; () banked
 20052  0098C0  4B73               	infsnz	lcd_show_string_l1@str& (0+255),f,b
 20053  0098C2  2B74               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
 20054                           
 20055                           ; BSR set to: 0
 20056                           ;lcd.c: 555: t8++;
 20057  0098C4  0100               	movlb	0	; () banked
 20058  0098C6  2B75               	incf	lcd_show_string_l1@t8& (0+255),f,b
 20059  0098C8                     l14711:
 20060                           
 20061                           ; BSR set to: 0
 20062  0098C8  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
 20063  0098CC  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
 20064  0098D0  50DF               	movf	indf2,w,c
 20065  0098D2  B4D8               	btfsc	status,2,c
 20066  0098D4  0012               	return	
 20067                           
 20068                           ; BSR set to: 0
 20069  0098D6  0E03               	movlw	3
 20070  0098D8  0100               	movlb	0	; () banked
 20071  0098DA  6575               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
 20072  0098DC  D7E4               	goto	l14705
 20073  0098DE  0012               	return	
 20074  0098E0                     __end_of_lcd_show_string_l1:
 20075                           	opt stack 0
 20076                           tosu	equ	0xFFF
 20077                           tosh	equ	0xFFE
 20078                           tosl	equ	0xFFD
 20079                           pclath	equ	0xFFA
 20080                           tblptru	equ	0xFF8
 20081                           tblptrh	equ	0xFF7
 20082                           tblptrl	equ	0xFF6
 20083                           tablat	equ	0xFF5
 20084                           prodh	equ	0xFF4
 20085                           prodl	equ	0xFF3
 20086                           intcon	equ	0xFF2
 20087                           postinc0	equ	0xFEE
 20088                           wreg	equ	0xFE8
 20089                           indf1	equ	0xFE7
 20090                           postinc1	equ	0xFE6
 20091                           postdec1	equ	0xFE5
 20092                           plusw1	equ	0xFE3
 20093                           fsr1h	equ	0xFE2
 20094                           fsr1l	equ	0xFE1
 20095                           indf2	equ	0xFDF
 20096                           postinc2	equ	0xFDE
 20097                           postdec2	equ	0xFDD
 20098                           plusw2	equ	0xFDB
 20099                           fsr2h	equ	0xFDA
 20100                           fsr2l	equ	0xFD9
 20101                           status	equ	0xFD8
 20102                           
 20103 ;; *************** function _lcd_show_string_l0 *****************
 20104 ;; Defined at:
 20105 ;;		line 539 in file "src/driver/lcd.c"
 20106 ;; Parameters:    Size  Location     Type
 20107 ;;  str             2   19[BANK0 ] PTR unsigned char 
 20108 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_pos_adj@buf(6), ui_disp_xfloat_pt@buf(10), STR_1(5), 
 20109 ;; Auto vars:     Size  Location     Type
 20110 ;;  t8              1   21[BANK0 ] unsigned char 
 20111 ;; Return value:  Size  Location     Type
 20112 ;;                  1    wreg      void 
 20113 ;; Registers used:
 20114 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20115 ;; Tracked objects:
 20116 ;;		On entry : 0/0
 20117 ;;		On exit  : 0/0
 20118 ;;		Unchanged: 0/0
 20119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20123 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20124 ;;Total ram usage:        3 bytes
 20125 ;; Hardware stack levels used:    1
 20126 ;; Hardware stack levels required when called:    8
 20127 ;; This function calls:
 20128 ;;		_lcd_show_chr
 20129 ;; This function is called by:
 20130 ;;		_ui_disp_start_cs600
 20131 ;;		_ui_disp_xfloat_pt
 20132 ;;		_ui_disp_menu_pos_adj
 20133 ;;		_ui_disp_menu_warn_t_adj
 20134 ;; This function uses a non-reentrant model
 20135 ;;
 20136                           
 20137                           	psect	text107
 20138  008A28                     __ptext107:
 20139                           	opt stack 0
 20140  008A28                     _lcd_show_string_l0:
 20141                           	opt stack 21
 20142                           
 20143                           ;lcd.c: 541: uint8_t t8=0;
 20144                           
 20145                           ; BSR set to: 0
 20146                           ;incstack = 0
 20147  008A28  0E00               	movlw	0
 20148  008A2A  0100               	movlb	0	; () banked
 20149  008A2C  6F75               	movwf	lcd_show_string_l0@t8& (0+255),b
 20150                           
 20151                           ;lcd.c: 542: while(*str!='\0' && t8<4){
 20152  008A2E  D01B               	goto	l14693
 20153  008A30                     l14687:
 20154                           
 20155                           ; BSR set to: 0
 20156                           ;lcd.c: 543: lcd_show_chr(t8,*str);
 20157  008A30  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
 20158  008A34  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
 20159  008A38  6AF8               	clrf	tblptru,c
 20160  008A3A  0E0F               	movlw	(high __ramtop+-1)
 20161  008A3C  64F7               	cpfsgt	tblptrh,c
 20162  008A3E  D003               	bra	u13437
 20163  008A40  0008               	tblrd		*
 20164  008A42  50F5               	movf	tablat,w,c
 20165  008A44  D005               	bra	u13430
 20166  008A46                     u13437:
 20167  008A46  CFF6 FFE9          	movff	tblptrl,fsr0l
 20168  008A4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20169  008A4E  50EF               	movf	indf0,w,c
 20170  008A50                     u13430:
 20171  008A50  0100               	movlb	0	; () banked
 20172  008A52  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 20173  008A54  0100               	movlb	0	; () banked
 20174  008A56  5175               	movf	lcd_show_string_l0@t8& (0+255),w,b
 20175  008A58  EC72  F03E         	call	_lcd_show_chr
 20176                           
 20177                           ;lcd.c: 544: str++;
 20178  008A5C  0100               	movlb	0	; () banked
 20179  008A5E  4B73               	infsnz	lcd_show_string_l0@str& (0+255),f,b
 20180  008A60  2B74               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;lcd.c: 545: t8++;
 20184  008A62  0100               	movlb	0	; () banked
 20185  008A64  2B75               	incf	lcd_show_string_l0@t8& (0+255),f,b
 20186  008A66                     l14693:
 20187                           
 20188                           ; BSR set to: 0
 20189  008A66  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
 20190  008A6A  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
 20191  008A6E  6AF8               	clrf	tblptru,c
 20192  008A70  0E0F               	movlw	(high __ramtop+-1)
 20193  008A72  64F7               	cpfsgt	tblptrh,c
 20194  008A74  D003               	bra	u13447
 20195  008A76  0008               	tblrd		*
 20196  008A78  50F5               	movf	tablat,w,c
 20197  008A7A  D005               	bra	u13440
 20198  008A7C                     u13447:
 20199  008A7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 20200  008A80  CFF7 FFEA          	movff	tblptrh,fsr0h
 20201  008A84  50EF               	movf	indf0,w,c
 20202  008A86                     u13440:
 20203  008A86  0900               	iorlw	0
 20204  008A88  B4D8               	btfsc	status,2,c
 20205  008A8A  0012               	return	
 20206  008A8C  0E03               	movlw	3
 20207  008A8E  0100               	movlb	0	; () banked
 20208  008A90  6575               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
 20209  008A92  D7CE               	goto	l14687
 20210  008A94  0012               	return	
 20211  008A96                     __end_of_lcd_show_string_l0:
 20212                           	opt stack 0
 20213                           tosu	equ	0xFFF
 20214                           tosh	equ	0xFFE
 20215                           tosl	equ	0xFFD
 20216                           pclath	equ	0xFFA
 20217                           tblptru	equ	0xFF8
 20218                           tblptrh	equ	0xFF7
 20219                           tblptrl	equ	0xFF6
 20220                           tablat	equ	0xFF5
 20221                           prodh	equ	0xFF4
 20222                           prodl	equ	0xFF3
 20223                           intcon	equ	0xFF2
 20224                           indf0	equ	0xFEF
 20225                           postinc0	equ	0xFEE
 20226                           fsr0h	equ	0xFEA
 20227                           fsr0l	equ	0xFE9
 20228                           wreg	equ	0xFE8
 20229                           indf1	equ	0xFE7
 20230                           postinc1	equ	0xFE6
 20231                           postdec1	equ	0xFE5
 20232                           plusw1	equ	0xFE3
 20233                           fsr1h	equ	0xFE2
 20234                           fsr1l	equ	0xFE1
 20235                           indf2	equ	0xFDF
 20236                           postinc2	equ	0xFDE
 20237                           postdec2	equ	0xFDD
 20238                           plusw2	equ	0xFDB
 20239                           fsr2h	equ	0xFDA
 20240                           fsr2l	equ	0xFD9
 20241                           status	equ	0xFD8
 20242                           
 20243 ;; *************** function ___lwdiv *****************
 20244 ;; Defined at:
 20245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 20246 ;; Parameters:    Size  Location     Type
 20247 ;;  dividend        2    2[BANK0 ] unsigned int 
 20248 ;;  divisor         2    4[BANK0 ] unsigned int 
 20249 ;; Auto vars:     Size  Location     Type
 20250 ;;  quotient        2    7[BANK0 ] unsigned int 
 20251 ;;  counter         1    6[BANK0 ] unsigned char 
 20252 ;; Return value:  Size  Location     Type
 20253 ;;                  2    2[BANK0 ] unsigned int 
 20254 ;; Registers used:
 20255 ;;		wreg, status,2, status,0
 20256 ;; Tracked objects:
 20257 ;;		On entry : 0/0
 20258 ;;		On exit  : 0/0
 20259 ;;		Unchanged: 0/0
 20260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20261 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20262 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20264 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20265 ;;Total ram usage:        7 bytes
 20266 ;; Hardware stack levels used:    1
 20267 ;; Hardware stack levels required when called:    4
 20268 ;; This function calls:
 20269 ;;		Nothing
 20270 ;; This function is called by:
 20271 ;;		_key_adj_value_fixed
 20272 ;;		_ui_disp_xfloat_pt
 20273 ;; This function uses a non-reentrant model
 20274 ;;
 20275                           
 20276                           	psect	text108
 20277  00868C                     __ptext108:
 20278                           	opt stack 0
 20279  00868C                     ___lwdiv:
 20280                           	opt stack 22
 20281                           
 20282                           ;incstack = 0
 20283  00868C  0E00               	movlw	0
 20284  00868E  0100               	movlb	0	; () banked
 20285  008690  6F68               	movwf	(___lwdiv@quotient+1)& (0+255),b
 20286  008692  0E00               	movlw	0
 20287  008694  6F67               	movwf	___lwdiv@quotient& (0+255),b
 20288                           
 20289                           ; BSR set to: 0
 20290  008696  0100               	movlb	0	; () banked
 20291  008698  5164               	movf	___lwdiv@divisor& (0+255),w,b
 20292  00869A  0100               	movlb	0	; () banked
 20293  00869C  1165               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20294  00869E  B4D8               	btfsc	status,2,c
 20295  0086A0  D02C               	goto	l2790
 20296                           
 20297                           ; BSR set to: 0
 20298  0086A2  0E01               	movlw	1
 20299  0086A4  0100               	movlb	0	; () banked
 20300  0086A6  6F66               	movwf	___lwdiv@counter& (0+255),b
 20301  0086A8  D006               	goto	l14295
 20302  0086AA                     l14293:
 20303                           
 20304                           ; BSR set to: 0
 20305  0086AA  0100               	movlb	0	; () banked
 20306  0086AC  90D8               	bcf	status,0,c
 20307  0086AE  3764               	rlcf	___lwdiv@divisor& (0+255),f,b
 20308  0086B0  3765               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20309  0086B2  0100               	movlb	0	; () banked
 20310  0086B4  2B66               	incf	___lwdiv@counter& (0+255),f,b
 20311  0086B6                     l14295:
 20312                           
 20313                           ; BSR set to: 0
 20314  0086B6  0100               	movlb	0	; () banked
 20315  0086B8  AF65               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20316  0086BA  D7F7               	goto	l14293
 20317  0086BC                     l14297:
 20318                           
 20319                           ; BSR set to: 0
 20320  0086BC  0100               	movlb	0	; () banked
 20321  0086BE  90D8               	bcf	status,0,c
 20322  0086C0  3767               	rlcf	___lwdiv@quotient& (0+255),f,b
 20323  0086C2  3768               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20324                           
 20325                           ; BSR set to: 0
 20326  0086C4  0100               	movlb	0	; () banked
 20327  0086C6  5164               	movf	___lwdiv@divisor& (0+255),w,b
 20328  0086C8  0100               	movlb	0	; () banked
 20329  0086CA  5D62               	subwf	___lwdiv@dividend& (0+255),w,b
 20330  0086CC  0100               	movlb	0	; () banked
 20331  0086CE  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20332  0086D0  0100               	movlb	0	; () banked
 20333  0086D2  5963               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20334  0086D4  A0D8               	btfss	status,0,c
 20335  0086D6  D00A               	goto	l14305
 20336                           
 20337                           ; BSR set to: 0
 20338  0086D8  0100               	movlb	0	; () banked
 20339  0086DA  5164               	movf	___lwdiv@divisor& (0+255),w,b
 20340  0086DC  0100               	movlb	0	; () banked
 20341  0086DE  5F62               	subwf	___lwdiv@dividend& (0+255),f,b
 20342  0086E0  0100               	movlb	0	; () banked
 20343  0086E2  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20344  0086E4  0100               	movlb	0	; () banked
 20345  0086E6  5B63               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20346                           
 20347                           ; BSR set to: 0
 20348  0086E8  0100               	movlb	0	; () banked
 20349  0086EA  8167               	bsf	___lwdiv@quotient& (0+255),0,b
 20350  0086EC                     l14305:
 20351                           
 20352                           ; BSR set to: 0
 20353  0086EC  0100               	movlb	0	; () banked
 20354  0086EE  90D8               	bcf	status,0,c
 20355  0086F0  3365               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20356  0086F2  3364               	rrcf	___lwdiv@divisor& (0+255),f,b
 20357                           
 20358                           ; BSR set to: 0
 20359  0086F4  0100               	movlb	0	; () banked
 20360  0086F6  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 20361  0086F8  D7E1               	goto	l14297
 20362  0086FA                     l2790:
 20363                           
 20364                           ; BSR set to: 0
 20365  0086FA  C067  F062         	movff	___lwdiv@quotient,?___lwdiv
 20366  0086FE  C068  F063         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20367                           
 20368                           ; BSR set to: 0
 20369  008702  0012               	return		;funcret
 20370  008704                     __end_of___lwdiv:
 20371                           	opt stack 0
 20372                           tosu	equ	0xFFF
 20373                           tosh	equ	0xFFE
 20374                           tosl	equ	0xFFD
 20375                           pclath	equ	0xFFA
 20376                           tblptru	equ	0xFF8
 20377                           tblptrh	equ	0xFF7
 20378                           tblptrl	equ	0xFF6
 20379                           tablat	equ	0xFF5
 20380                           prodh	equ	0xFF4
 20381                           prodl	equ	0xFF3
 20382                           intcon	equ	0xFF2
 20383                           indf0	equ	0xFEF
 20384                           postinc0	equ	0xFEE
 20385                           fsr0h	equ	0xFEA
 20386                           fsr0l	equ	0xFE9
 20387                           wreg	equ	0xFE8
 20388                           indf1	equ	0xFE7
 20389                           postinc1	equ	0xFE6
 20390                           postdec1	equ	0xFE5
 20391                           plusw1	equ	0xFE3
 20392                           fsr1h	equ	0xFE2
 20393                           fsr1l	equ	0xFE1
 20394                           indf2	equ	0xFDF
 20395                           postinc2	equ	0xFDE
 20396                           postdec2	equ	0xFDD
 20397                           plusw2	equ	0xFDB
 20398                           fsr2h	equ	0xFDA
 20399                           fsr2l	equ	0xFD9
 20400                           status	equ	0xFD8
 20401                           
 20402 ;; *************** function _lcd_disp_unit_temperature *****************
 20403 ;; Defined at:
 20404 ;;		line 422 in file "src/driver/lcd.c"
 20405 ;; Parameters:    Size  Location     Type
 20406 ;;  show            1    wreg     unsigned char 
 20407 ;; Auto vars:     Size  Location     Type
 20408 ;;  show            1   31[COMRAM] unsigned char 
 20409 ;; Return value:  Size  Location     Type
 20410 ;;                  1    wreg      void 
 20411 ;; Registers used:
 20412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20413 ;; Tracked objects:
 20414 ;;		On entry : 0/0
 20415 ;;		On exit  : 0/0
 20416 ;;		Unchanged: 0/0
 20417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20422 ;;Total ram usage:        1 bytes
 20423 ;; Hardware stack levels used:    1
 20424 ;; Hardware stack levels required when called:    6
 20425 ;; This function calls:
 20426 ;;		_lcd_set_com_seg
 20427 ;; This function is called by:
 20428 ;;		_ui_disp_menu_home
 20429 ;; This function uses a non-reentrant model
 20430 ;;
 20431                           
 20432                           	psect	text109
 20433  008D16                     __ptext109:
 20434                           	opt stack 0
 20435  008D16                     _lcd_disp_unit_temperature:
 20436                           	opt stack 21
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;incstack = 0
 20440                           ;lcd_disp_unit_temperature@show stored from wreg
 20441  008D16  6E20               	movwf	lcd_disp_unit_temperature@show,c
 20442                           
 20443                           ;lcd.c: 424: lcd_set_com_seg(3,13,0);
 20444  008D18  0E0D               	movlw	13
 20445  008D1A  0100               	movlb	0	; () banked
 20446  008D1C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20447  008D1E  0E00               	movlw	0
 20448  008D20  0100               	movlb	0	; () banked
 20449  008D22  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20450  008D24  0E03               	movlw	3
 20451  008D26  ECDA  F036         	call	_lcd_set_com_seg
 20452                           
 20453                           ;lcd.c: 425: lcd_set_com_seg(1,41,0);
 20454  008D2A  0E29               	movlw	41
 20455  008D2C  0100               	movlb	0	; () banked
 20456  008D2E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20457  008D30  0E00               	movlw	0
 20458  008D32  0100               	movlb	0	; () banked
 20459  008D34  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20460  008D36  0E01               	movlw	1
 20461  008D38  ECDA  F036         	call	_lcd_set_com_seg
 20462                           
 20463                           ;lcd.c: 426: lcd_set_com_seg(0,41,0);
 20464  008D3C  0E29               	movlw	41
 20465  008D3E  0100               	movlb	0	; () banked
 20466  008D40  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20467  008D42  0E00               	movlw	0
 20468  008D44  0100               	movlb	0	; () banked
 20469  008D46  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20470  008D48  0E00               	movlw	0
 20471  008D4A  ECDA  F036         	call	_lcd_set_com_seg
 20472                           
 20473                           ;lcd.c: 427: if(show){
 20474  008D4E  5020               	movf	lcd_disp_unit_temperature@show,w,c
 20475  008D50  B4D8               	btfsc	status,2,c
 20476  008D52  D00A               	goto	l15483
 20477                           
 20478                           ;lcd.c: 428: lcd_set_com_seg(3,13,1);
 20479  008D54  0E0D               	movlw	13
 20480  008D56  0100               	movlb	0	; () banked
 20481  008D58  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20482  008D5A  0E01               	movlw	1
 20483  008D5C  0100               	movlb	0	; () banked
 20484  008D5E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20485  008D60  0E03               	movlw	3
 20486  008D62  ECDA  F036         	call	_lcd_set_com_seg
 20487                           
 20488                           ;lcd.c: 429: }else{
 20489  008D66  0012               	return	
 20490  008D68                     l15483:
 20491                           
 20492                           ;lcd.c: 430: lcd_set_com_seg(3,13,0);
 20493  008D68  0E0D               	movlw	13
 20494  008D6A  0100               	movlb	0	; () banked
 20495  008D6C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20496  008D6E  0E00               	movlw	0
 20497  008D70  0100               	movlb	0	; () banked
 20498  008D72  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20499  008D74  0E03               	movlw	3
 20500  008D76  ECDA  F036         	call	_lcd_set_com_seg
 20501  008D7A  0012               	return	
 20502  008D7C                     __end_of_lcd_disp_unit_temperature:
 20503                           	opt stack 0
 20504                           tosu	equ	0xFFF
 20505                           tosh	equ	0xFFE
 20506                           tosl	equ	0xFFD
 20507                           pclath	equ	0xFFA
 20508                           tblptru	equ	0xFF8
 20509                           tblptrh	equ	0xFF7
 20510                           tblptrl	equ	0xFF6
 20511                           tablat	equ	0xFF5
 20512                           prodh	equ	0xFF4
 20513                           prodl	equ	0xFF3
 20514                           intcon	equ	0xFF2
 20515                           indf0	equ	0xFEF
 20516                           postinc0	equ	0xFEE
 20517                           fsr0h	equ	0xFEA
 20518                           fsr0l	equ	0xFE9
 20519                           wreg	equ	0xFE8
 20520                           indf1	equ	0xFE7
 20521                           postinc1	equ	0xFE6
 20522                           postdec1	equ	0xFE5
 20523                           plusw1	equ	0xFE3
 20524                           fsr1h	equ	0xFE2
 20525                           fsr1l	equ	0xFE1
 20526                           indf2	equ	0xFDF
 20527                           postinc2	equ	0xFDE
 20528                           postdec2	equ	0xFDD
 20529                           plusw2	equ	0xFDB
 20530                           fsr2h	equ	0xFDA
 20531                           fsr2l	equ	0xFD9
 20532                           status	equ	0xFD8
 20533                           
 20534 ;; *************** function _lcd_disp_unit_t *****************
 20535 ;; Defined at:
 20536 ;;		line 387 in file "src/driver/lcd.c"
 20537 ;; Parameters:    Size  Location     Type
 20538 ;;  show            1    wreg     unsigned char 
 20539 ;; Auto vars:     Size  Location     Type
 20540 ;;  show            1   31[COMRAM] unsigned char 
 20541 ;; Return value:  Size  Location     Type
 20542 ;;                  1    wreg      void 
 20543 ;; Registers used:
 20544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20545 ;; Tracked objects:
 20546 ;;		On entry : 0/0
 20547 ;;		On exit  : 0/0
 20548 ;;		Unchanged: 0/0
 20549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20554 ;;Total ram usage:        1 bytes
 20555 ;; Hardware stack levels used:    1
 20556 ;; Hardware stack levels required when called:    6
 20557 ;; This function calls:
 20558 ;;		_lcd_set_com_seg
 20559 ;; This function is called by:
 20560 ;;		_ui_disp_menu_home
 20561 ;;		_ui_disp_menu_home_02
 20562 ;; This function uses a non-reentrant model
 20563 ;;
 20564                           
 20565                           	psect	text110
 20566  009542                     __ptext110:
 20567                           	opt stack 0
 20568  009542                     _lcd_disp_unit_t:
 20569                           	opt stack 21
 20570                           
 20571                           ;incstack = 0
 20572                           ;lcd_disp_unit_t@show stored from wreg
 20573  009542  6E20               	movwf	lcd_disp_unit_t@show,c
 20574                           
 20575                           ;lcd.c: 389: lcd_set_com_seg(3,41,0);
 20576  009544  0E29               	movlw	41
 20577  009546  0100               	movlb	0	; () banked
 20578  009548  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20579  00954A  0E00               	movlw	0
 20580  00954C  0100               	movlb	0	; () banked
 20581  00954E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20582  009550  0E03               	movlw	3
 20583  009552  ECDA  F036         	call	_lcd_set_com_seg
 20584                           
 20585                           ;lcd.c: 390: lcd_set_com_seg(2,41,0);
 20586  009556  0E29               	movlw	41
 20587  009558  0100               	movlb	0	; () banked
 20588  00955A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20589  00955C  0E00               	movlw	0
 20590  00955E  0100               	movlb	0	; () banked
 20591  009560  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20592  009562  0E02               	movlw	2
 20593  009564  ECDA  F036         	call	_lcd_set_com_seg
 20594                           
 20595                           ;lcd.c: 391: if(show)
 20596  009568  5020               	movf	lcd_disp_unit_t@show,w,c
 20597  00956A  B4D8               	btfsc	status,2,c
 20598  00956C  D00A               	goto	l15475
 20599                           
 20600                           ;lcd.c: 392: lcd_set_com_seg(3,42,1);
 20601  00956E  0E2A               	movlw	42
 20602  009570  0100               	movlb	0	; () banked
 20603  009572  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20604  009574  0E01               	movlw	1
 20605  009576  0100               	movlb	0	; () banked
 20606  009578  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20607  00957A  0E03               	movlw	3
 20608  00957C  ECDA  F036         	call	_lcd_set_com_seg
 20609  009580  0012               	return	
 20610  009582                     l15475:
 20611                           
 20612                           ;lcd.c: 393: else
 20613                           ;lcd.c: 394: lcd_set_com_seg(3,42,0);
 20614  009582  0E2A               	movlw	42
 20615  009584  0100               	movlb	0	; () banked
 20616  009586  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20617  009588  0E00               	movlw	0
 20618  00958A  0100               	movlb	0	; () banked
 20619  00958C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20620  00958E  0E03               	movlw	3
 20621  009590  ECDA  F036         	call	_lcd_set_com_seg
 20622  009594  0012               	return	
 20623  009596                     __end_of_lcd_disp_unit_t:
 20624                           	opt stack 0
 20625                           tosu	equ	0xFFF
 20626                           tosh	equ	0xFFE
 20627                           tosl	equ	0xFFD
 20628                           pclath	equ	0xFFA
 20629                           tblptru	equ	0xFF8
 20630                           tblptrh	equ	0xFF7
 20631                           tblptrl	equ	0xFF6
 20632                           tablat	equ	0xFF5
 20633                           prodh	equ	0xFF4
 20634                           prodl	equ	0xFF3
 20635                           intcon	equ	0xFF2
 20636                           indf0	equ	0xFEF
 20637                           postinc0	equ	0xFEE
 20638                           fsr0h	equ	0xFEA
 20639                           fsr0l	equ	0xFE9
 20640                           wreg	equ	0xFE8
 20641                           indf1	equ	0xFE7
 20642                           postinc1	equ	0xFE6
 20643                           postdec1	equ	0xFE5
 20644                           plusw1	equ	0xFE3
 20645                           fsr1h	equ	0xFE2
 20646                           fsr1l	equ	0xFE1
 20647                           indf2	equ	0xFDF
 20648                           postinc2	equ	0xFDE
 20649                           postdec2	equ	0xFDD
 20650                           plusw2	equ	0xFDB
 20651                           fsr2h	equ	0xFDA
 20652                           fsr2l	equ	0xFD9
 20653                           status	equ	0xFD8
 20654                           
 20655 ;; *************** function _lcd_disp_unit_mpa *****************
 20656 ;; Defined at:
 20657 ;;		line 462 in file "src/driver/lcd.c"
 20658 ;; Parameters:    Size  Location     Type
 20659 ;;  show            1    wreg     unsigned char 
 20660 ;; Auto vars:     Size  Location     Type
 20661 ;;  show            1   31[COMRAM] unsigned char 
 20662 ;; Return value:  Size  Location     Type
 20663 ;;                  1    wreg      void 
 20664 ;; Registers used:
 20665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20666 ;; Tracked objects:
 20667 ;;		On entry : 0/0
 20668 ;;		On exit  : 0/0
 20669 ;;		Unchanged: 0/0
 20670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20675 ;;Total ram usage:        1 bytes
 20676 ;; Hardware stack levels used:    1
 20677 ;; Hardware stack levels required when called:    6
 20678 ;; This function calls:
 20679 ;;		_lcd_set_com_seg
 20680 ;; This function is called by:
 20681 ;;		_ui_disp_menu_home
 20682 ;;		_ui_disp_menu_warn_v_adj
 20683 ;;		_ui_disp_menu_home_00
 20684 ;;		_ui_disp_menu_home_01
 20685 ;;		_ui_disp_menu_home_02
 20686 ;; This function uses a non-reentrant model
 20687 ;;
 20688                           
 20689                           	psect	text111
 20690  008D7C                     __ptext111:
 20691                           	opt stack 0
 20692  008D7C                     _lcd_disp_unit_mpa:
 20693                           	opt stack 21
 20694                           
 20695                           ;incstack = 0
 20696                           ;lcd_disp_unit_mpa@show stored from wreg
 20697  008D7C  6E20               	movwf	lcd_disp_unit_mpa@show,c
 20698                           
 20699                           ;lcd.c: 465: lcd_set_com_seg(3,13,0);
 20700  008D7E  0E0D               	movlw	13
 20701  008D80  0100               	movlb	0	; () banked
 20702  008D82  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20703  008D84  0E00               	movlw	0
 20704  008D86  0100               	movlb	0	; () banked
 20705  008D88  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20706  008D8A  0E03               	movlw	3
 20707  008D8C  ECDA  F036         	call	_lcd_set_com_seg
 20708                           
 20709                           ;lcd.c: 466: lcd_set_com_seg(1,41,0);
 20710  008D90  0E29               	movlw	41
 20711  008D92  0100               	movlb	0	; () banked
 20712  008D94  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20713  008D96  0E00               	movlw	0
 20714  008D98  0100               	movlb	0	; () banked
 20715  008D9A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20716  008D9C  0E01               	movlw	1
 20717  008D9E  ECDA  F036         	call	_lcd_set_com_seg
 20718                           
 20719                           ;lcd.c: 467: lcd_set_com_seg(0,41,0);
 20720  008DA2  0E29               	movlw	41
 20721  008DA4  0100               	movlb	0	; () banked
 20722  008DA6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20723  008DA8  0E00               	movlw	0
 20724  008DAA  0100               	movlb	0	; () banked
 20725  008DAC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20726  008DAE  0E00               	movlw	0
 20727  008DB0  ECDA  F036         	call	_lcd_set_com_seg
 20728                           
 20729                           ;lcd.c: 468: if(show){
 20730  008DB4  5020               	movf	lcd_disp_unit_mpa@show,w,c
 20731  008DB6  B4D8               	btfsc	status,2,c
 20732  008DB8  D00A               	goto	l15459
 20733                           
 20734                           ;lcd.c: 469: lcd_set_com_seg(0,40,1);
 20735  008DBA  0E28               	movlw	40
 20736  008DBC  0100               	movlb	0	; () banked
 20737  008DBE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20738  008DC0  0E01               	movlw	1
 20739  008DC2  0100               	movlb	0	; () banked
 20740  008DC4  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20741  008DC6  0E00               	movlw	0
 20742  008DC8  ECDA  F036         	call	_lcd_set_com_seg
 20743                           
 20744                           ;lcd.c: 470: }else{
 20745  008DCC  0012               	return	
 20746  008DCE                     l15459:
 20747                           
 20748                           ;lcd.c: 471: lcd_set_com_seg(0,40,0);
 20749  008DCE  0E28               	movlw	40
 20750  008DD0  0100               	movlb	0	; () banked
 20751  008DD2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20752  008DD4  0E00               	movlw	0
 20753  008DD6  0100               	movlb	0	; () banked
 20754  008DD8  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20755  008DDA  0E00               	movlw	0
 20756  008DDC  ECDA  F036         	call	_lcd_set_com_seg
 20757  008DE0  0012               	return	
 20758  008DE2                     __end_of_lcd_disp_unit_mpa:
 20759                           	opt stack 0
 20760                           tosu	equ	0xFFF
 20761                           tosh	equ	0xFFE
 20762                           tosl	equ	0xFFD
 20763                           pclath	equ	0xFFA
 20764                           tblptru	equ	0xFF8
 20765                           tblptrh	equ	0xFF7
 20766                           tblptrl	equ	0xFF6
 20767                           tablat	equ	0xFF5
 20768                           prodh	equ	0xFF4
 20769                           prodl	equ	0xFF3
 20770                           intcon	equ	0xFF2
 20771                           indf0	equ	0xFEF
 20772                           postinc0	equ	0xFEE
 20773                           fsr0h	equ	0xFEA
 20774                           fsr0l	equ	0xFE9
 20775                           wreg	equ	0xFE8
 20776                           indf1	equ	0xFE7
 20777                           postinc1	equ	0xFE6
 20778                           postdec1	equ	0xFE5
 20779                           plusw1	equ	0xFE3
 20780                           fsr1h	equ	0xFE2
 20781                           fsr1l	equ	0xFE1
 20782                           indf2	equ	0xFDF
 20783                           postinc2	equ	0xFDE
 20784                           postdec2	equ	0xFDD
 20785                           plusw2	equ	0xFDB
 20786                           fsr2h	equ	0xFDA
 20787                           fsr2l	equ	0xFD9
 20788                           status	equ	0xFD8
 20789                           
 20790 ;; *************** function _lcd_disp_unit_2nd_m3 *****************
 20791 ;; Defined at:
 20792 ;;		line 446 in file "src/driver/lcd.c"
 20793 ;; Parameters:    Size  Location     Type
 20794 ;;  show            1    wreg     unsigned char 
 20795 ;; Auto vars:     Size  Location     Type
 20796 ;;  show            1   31[COMRAM] unsigned char 
 20797 ;; Return value:  Size  Location     Type
 20798 ;;                  1    wreg      void 
 20799 ;; Registers used:
 20800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20801 ;; Tracked objects:
 20802 ;;		On entry : 0/0
 20803 ;;		On exit  : 0/0
 20804 ;;		Unchanged: 0/0
 20805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20810 ;;Total ram usage:        1 bytes
 20811 ;; Hardware stack levels used:    1
 20812 ;; Hardware stack levels required when called:    6
 20813 ;; This function calls:
 20814 ;;		_lcd_set_com_seg
 20815 ;; This function is called by:
 20816 ;;		_ui_disp_menu_home
 20817 ;; This function uses a non-reentrant model
 20818 ;;
 20819                           
 20820                           	psect	text112
 20821  008316                     __ptext112:
 20822                           	opt stack 0
 20823  008316                     _lcd_disp_unit_2nd_m3:
 20824                           	opt stack 21
 20825                           
 20826                           ;incstack = 0
 20827                           ;lcd_disp_unit_2nd_m3@show stored from wreg
 20828  008316  6E20               	movwf	lcd_disp_unit_2nd_m3@show,c
 20829                           
 20830                           ;lcd.c: 449: lcd_set_com_seg(0,40,0);
 20831  008318  0E28               	movlw	40
 20832  00831A  0100               	movlb	0	; () banked
 20833  00831C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20834  00831E  0E00               	movlw	0
 20835  008320  0100               	movlb	0	; () banked
 20836  008322  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20837  008324  0E00               	movlw	0
 20838  008326  ECDA  F036         	call	_lcd_set_com_seg
 20839                           
 20840                           ;lcd.c: 450: lcd_set_com_seg(1,41,0);
 20841  00832A  0E29               	movlw	41
 20842  00832C  0100               	movlb	0	; () banked
 20843  00832E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20844  008330  0E00               	movlw	0
 20845  008332  0100               	movlb	0	; () banked
 20846  008334  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20847  008336  0E01               	movlw	1
 20848  008338  ECDA  F036         	call	_lcd_set_com_seg
 20849                           
 20850                           ;lcd.c: 451: lcd_set_com_seg(3,13,0);
 20851  00833C  0E0D               	movlw	13
 20852  00833E  0100               	movlb	0	; () banked
 20853  008340  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20854  008342  0E00               	movlw	0
 20855  008344  0100               	movlb	0	; () banked
 20856  008346  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20857  008348  0E03               	movlw	3
 20858  00834A  ECDA  F036         	call	_lcd_set_com_seg
 20859                           
 20860                           ;lcd.c: 453: if(show){
 20861  00834E  5020               	movf	lcd_disp_unit_2nd_m3@show,w,c
 20862  008350  B4D8               	btfsc	status,2,c
 20863  008352  D013               	goto	l15499
 20864                           
 20865                           ;lcd.c: 454: lcd_set_com_seg(0,41,1);
 20866  008354  0E29               	movlw	41
 20867  008356  0100               	movlb	0	; () banked
 20868  008358  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20869  00835A  0E01               	movlw	1
 20870  00835C  0100               	movlb	0	; () banked
 20871  00835E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20872  008360  0E00               	movlw	0
 20873  008362  ECDA  F036         	call	_lcd_set_com_seg
 20874                           
 20875                           ;lcd.c: 455: lcd_set_com_seg(1,41,1);
 20876  008366  0E29               	movlw	41
 20877  008368  0100               	movlb	0	; () banked
 20878  00836A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20879  00836C  0E01               	movlw	1
 20880  00836E  0100               	movlb	0	; () banked
 20881  008370  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20882  008372  0E01               	movlw	1
 20883  008374  ECDA  F036         	call	_lcd_set_com_seg
 20884                           
 20885                           ;lcd.c: 456: }else{
 20886  008378  0012               	return	
 20887  00837A                     l15499:
 20888                           
 20889                           ;lcd.c: 457: lcd_set_com_seg(0,41,0);
 20890  00837A  0E29               	movlw	41
 20891  00837C  0100               	movlb	0	; () banked
 20892  00837E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20893  008380  0E00               	movlw	0
 20894  008382  0100               	movlb	0	; () banked
 20895  008384  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20896  008386  0E00               	movlw	0
 20897  008388  ECDA  F036         	call	_lcd_set_com_seg
 20898                           
 20899                           ;lcd.c: 458: lcd_set_com_seg(1,41,0);
 20900  00838C  0E29               	movlw	41
 20901  00838E  0100               	movlb	0	; () banked
 20902  008390  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20903  008392  0E00               	movlw	0
 20904  008394  0100               	movlb	0	; () banked
 20905  008396  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20906  008398  0E01               	movlw	1
 20907  00839A  ECDA  F036         	call	_lcd_set_com_seg
 20908  00839E  0012               	return	
 20909  0083A0                     __end_of_lcd_disp_unit_2nd_m3:
 20910                           	opt stack 0
 20911                           tosu	equ	0xFFF
 20912                           tosh	equ	0xFFE
 20913                           tosl	equ	0xFFD
 20914                           pclath	equ	0xFFA
 20915                           tblptru	equ	0xFF8
 20916                           tblptrh	equ	0xFF7
 20917                           tblptrl	equ	0xFF6
 20918                           tablat	equ	0xFF5
 20919                           prodh	equ	0xFF4
 20920                           prodl	equ	0xFF3
 20921                           intcon	equ	0xFF2
 20922                           indf0	equ	0xFEF
 20923                           postinc0	equ	0xFEE
 20924                           fsr0h	equ	0xFEA
 20925                           fsr0l	equ	0xFE9
 20926                           wreg	equ	0xFE8
 20927                           indf1	equ	0xFE7
 20928                           postinc1	equ	0xFE6
 20929                           postdec1	equ	0xFE5
 20930                           plusw1	equ	0xFE3
 20931                           fsr1h	equ	0xFE2
 20932                           fsr1l	equ	0xFE1
 20933                           indf2	equ	0xFDF
 20934                           postinc2	equ	0xFDE
 20935                           postdec2	equ	0xFDD
 20936                           plusw2	equ	0xFDB
 20937                           fsr2h	equ	0xFDA
 20938                           fsr2l	equ	0xFD9
 20939                           status	equ	0xFD8
 20940                           
 20941 ;; *************** function _lcd_disp_unit_2nd_m *****************
 20942 ;; Defined at:
 20943 ;;		line 434 in file "src/driver/lcd.c"
 20944 ;; Parameters:    Size  Location     Type
 20945 ;;  show            1    wreg     unsigned char 
 20946 ;; Auto vars:     Size  Location     Type
 20947 ;;  show            1   31[COMRAM] unsigned char 
 20948 ;; Return value:  Size  Location     Type
 20949 ;;                  1    wreg      void 
 20950 ;; Registers used:
 20951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20952 ;; Tracked objects:
 20953 ;;		On entry : 0/0
 20954 ;;		On exit  : 0/0
 20955 ;;		Unchanged: 0/0
 20956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20961 ;;Total ram usage:        1 bytes
 20962 ;; Hardware stack levels used:    1
 20963 ;; Hardware stack levels required when called:    6
 20964 ;; This function calls:
 20965 ;;		_lcd_set_com_seg
 20966 ;; This function is called by:
 20967 ;;		_ui_disp_menu_home
 20968 ;;		_ui_disp_menu_warn_v_adj
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           	psect	text113
 20973  008DE2                     __ptext113:
 20974                           	opt stack 0
 20975  008DE2                     _lcd_disp_unit_2nd_m:
 20976                           	opt stack 21
 20977                           
 20978                           ;incstack = 0
 20979                           ;lcd_disp_unit_2nd_m@show stored from wreg
 20980  008DE2  6E20               	movwf	lcd_disp_unit_2nd_m@show,c
 20981                           
 20982                           ;lcd.c: 437: lcd_set_com_seg(0,40,0);
 20983  008DE4  0E28               	movlw	40
 20984  008DE6  0100               	movlb	0	; () banked
 20985  008DE8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20986  008DEA  0E00               	movlw	0
 20987  008DEC  0100               	movlb	0	; () banked
 20988  008DEE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20989  008DF0  0E00               	movlw	0
 20990  008DF2  ECDA  F036         	call	_lcd_set_com_seg
 20991                           
 20992                           ;lcd.c: 438: lcd_set_com_seg(1,41,0);
 20993  008DF6  0E29               	movlw	41
 20994  008DF8  0100               	movlb	0	; () banked
 20995  008DFA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20996  008DFC  0E00               	movlw	0
 20997  008DFE  0100               	movlb	0	; () banked
 20998  008E00  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20999  008E02  0E01               	movlw	1
 21000  008E04  ECDA  F036         	call	_lcd_set_com_seg
 21001                           
 21002                           ;lcd.c: 439: lcd_set_com_seg(3,13,0);
 21003  008E08  0E0D               	movlw	13
 21004  008E0A  0100               	movlb	0	; () banked
 21005  008E0C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21006  008E0E  0E00               	movlw	0
 21007  008E10  0100               	movlb	0	; () banked
 21008  008E12  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21009  008E14  0E03               	movlw	3
 21010  008E16  ECDA  F036         	call	_lcd_set_com_seg
 21011                           
 21012                           ;lcd.c: 440: if(show)
 21013  008E1A  5020               	movf	lcd_disp_unit_2nd_m@show,w,c
 21014  008E1C  B4D8               	btfsc	status,2,c
 21015  008E1E  D00A               	goto	l15491
 21016                           
 21017                           ;lcd.c: 441: lcd_set_com_seg(0,41,1);
 21018  008E20  0E29               	movlw	41
 21019  008E22  0100               	movlb	0	; () banked
 21020  008E24  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21021  008E26  0E01               	movlw	1
 21022  008E28  0100               	movlb	0	; () banked
 21023  008E2A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21024  008E2C  0E00               	movlw	0
 21025  008E2E  ECDA  F036         	call	_lcd_set_com_seg
 21026  008E32  0012               	return	
 21027  008E34                     l15491:
 21028                           
 21029                           ;lcd.c: 442: else
 21030                           ;lcd.c: 443: lcd_set_com_seg(0,41,0);
 21031  008E34  0E29               	movlw	41
 21032  008E36  0100               	movlb	0	; () banked
 21033  008E38  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21034  008E3A  0E00               	movlw	0
 21035  008E3C  0100               	movlb	0	; () banked
 21036  008E3E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21037  008E40  0E00               	movlw	0
 21038  008E42  ECDA  F036         	call	_lcd_set_com_seg
 21039  008E46  0012               	return	
 21040  008E48                     __end_of_lcd_disp_unit_2nd_m:
 21041                           	opt stack 0
 21042                           tosu	equ	0xFFF
 21043                           tosh	equ	0xFFE
 21044                           tosl	equ	0xFFD
 21045                           pclath	equ	0xFFA
 21046                           tblptru	equ	0xFF8
 21047                           tblptrh	equ	0xFF7
 21048                           tblptrl	equ	0xFF6
 21049                           tablat	equ	0xFF5
 21050                           prodh	equ	0xFF4
 21051                           prodl	equ	0xFF3
 21052                           intcon	equ	0xFF2
 21053                           indf0	equ	0xFEF
 21054                           postinc0	equ	0xFEE
 21055                           fsr0h	equ	0xFEA
 21056                           fsr0l	equ	0xFE9
 21057                           wreg	equ	0xFE8
 21058                           indf1	equ	0xFE7
 21059                           postinc1	equ	0xFE6
 21060                           postdec1	equ	0xFE5
 21061                           plusw1	equ	0xFE3
 21062                           fsr1h	equ	0xFE2
 21063                           fsr1l	equ	0xFE1
 21064                           indf2	equ	0xFDF
 21065                           postinc2	equ	0xFDE
 21066                           postdec2	equ	0xFDD
 21067                           plusw2	equ	0xFDB
 21068                           fsr2h	equ	0xFDA
 21069                           fsr2l	equ	0xFD9
 21070                           status	equ	0xFD8
 21071                           
 21072 ;; *************** function _lcd_disp_unit_1st_m3 *****************
 21073 ;; Defined at:
 21074 ;;		line 409 in file "src/driver/lcd.c"
 21075 ;; Parameters:    Size  Location     Type
 21076 ;;  show            1    wreg     unsigned char 
 21077 ;; Auto vars:     Size  Location     Type
 21078 ;;  show            1   31[COMRAM] unsigned char 
 21079 ;; Return value:  Size  Location     Type
 21080 ;;                  1    wreg      void 
 21081 ;; Registers used:
 21082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21083 ;; Tracked objects:
 21084 ;;		On entry : 0/0
 21085 ;;		On exit  : 0/0
 21086 ;;		Unchanged: 0/0
 21087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21092 ;;Total ram usage:        1 bytes
 21093 ;; Hardware stack levels used:    1
 21094 ;; Hardware stack levels required when called:    6
 21095 ;; This function calls:
 21096 ;;		_lcd_set_com_seg
 21097 ;; This function is called by:
 21098 ;;		_ui_disp_menu_home
 21099 ;;		_ui_disp_menu_home_01
 21100 ;; This function uses a non-reentrant model
 21101 ;;
 21102                           
 21103                           	psect	text114
 21104  008E48                     __ptext114:
 21105                           	opt stack 0
 21106  008E48                     _lcd_disp_unit_1st_m3:
 21107                           	opt stack 21
 21108                           
 21109                           ;incstack = 0
 21110                           ;lcd_disp_unit_1st_m3@show stored from wreg
 21111  008E48  6E20               	movwf	lcd_disp_unit_1st_m3@show,c
 21112                           
 21113                           ;lcd.c: 412: lcd_set_com_seg(3,42,0);
 21114  008E4A  0E2A               	movlw	42
 21115  008E4C  0100               	movlb	0	; () banked
 21116  008E4E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21117  008E50  0E00               	movlw	0
 21118  008E52  0100               	movlb	0	; () banked
 21119  008E54  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21120  008E56  0E03               	movlw	3
 21121  008E58  ECDA  F036         	call	_lcd_set_com_seg
 21122                           
 21123                           ;lcd.c: 413: if(show){
 21124  008E5C  5020               	movf	lcd_disp_unit_1st_m3@show,w,c
 21125  008E5E  B4D8               	btfsc	status,2,c
 21126  008E60  D013               	goto	l15467
 21127                           
 21128                           ;lcd.c: 414: lcd_set_com_seg(2,41,1);
 21129  008E62  0E29               	movlw	41
 21130  008E64  0100               	movlb	0	; () banked
 21131  008E66  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21132  008E68  0E01               	movlw	1
 21133  008E6A  0100               	movlb	0	; () banked
 21134  008E6C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21135  008E6E  0E02               	movlw	2
 21136  008E70  ECDA  F036         	call	_lcd_set_com_seg
 21137                           
 21138                           ;lcd.c: 415: lcd_set_com_seg(3,41,1);
 21139  008E74  0E29               	movlw	41
 21140  008E76  0100               	movlb	0	; () banked
 21141  008E78  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21142  008E7A  0E01               	movlw	1
 21143  008E7C  0100               	movlb	0	; () banked
 21144  008E7E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21145  008E80  0E03               	movlw	3
 21146  008E82  ECDA  F036         	call	_lcd_set_com_seg
 21147                           
 21148                           ;lcd.c: 416: }else{
 21149  008E86  0012               	return	
 21150  008E88                     l15467:
 21151                           
 21152                           ;lcd.c: 417: lcd_set_com_seg(2,41,0);
 21153  008E88  0E29               	movlw	41
 21154  008E8A  0100               	movlb	0	; () banked
 21155  008E8C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21156  008E8E  0E00               	movlw	0
 21157  008E90  0100               	movlb	0	; () banked
 21158  008E92  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21159  008E94  0E02               	movlw	2
 21160  008E96  ECDA  F036         	call	_lcd_set_com_seg
 21161                           
 21162                           ;lcd.c: 418: lcd_set_com_seg(3,41,0);
 21163  008E9A  0E29               	movlw	41
 21164  008E9C  0100               	movlb	0	; () banked
 21165  008E9E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21166  008EA0  0E00               	movlw	0
 21167  008EA2  0100               	movlb	0	; () banked
 21168  008EA4  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21169  008EA6  0E03               	movlw	3
 21170  008EA8  ECDA  F036         	call	_lcd_set_com_seg
 21171  008EAC  0012               	return	
 21172  008EAE                     __end_of_lcd_disp_unit_1st_m3:
 21173                           	opt stack 0
 21174                           tosu	equ	0xFFF
 21175                           tosh	equ	0xFFE
 21176                           tosl	equ	0xFFD
 21177                           pclath	equ	0xFFA
 21178                           tblptru	equ	0xFF8
 21179                           tblptrh	equ	0xFF7
 21180                           tblptrl	equ	0xFF6
 21181                           tablat	equ	0xFF5
 21182                           prodh	equ	0xFF4
 21183                           prodl	equ	0xFF3
 21184                           intcon	equ	0xFF2
 21185                           indf0	equ	0xFEF
 21186                           postinc0	equ	0xFEE
 21187                           fsr0h	equ	0xFEA
 21188                           fsr0l	equ	0xFE9
 21189                           wreg	equ	0xFE8
 21190                           indf1	equ	0xFE7
 21191                           postinc1	equ	0xFE6
 21192                           postdec1	equ	0xFE5
 21193                           plusw1	equ	0xFE3
 21194                           fsr1h	equ	0xFE2
 21195                           fsr1l	equ	0xFE1
 21196                           indf2	equ	0xFDF
 21197                           postinc2	equ	0xFDE
 21198                           postdec2	equ	0xFDD
 21199                           plusw2	equ	0xFDB
 21200                           fsr2h	equ	0xFDA
 21201                           fsr2l	equ	0xFD9
 21202                           status	equ	0xFD8
 21203                           
 21204 ;; *************** function _lcd_disp_unit_1st_m *****************
 21205 ;; Defined at:
 21206 ;;		line 397 in file "src/driver/lcd.c"
 21207 ;; Parameters:    Size  Location     Type
 21208 ;;  show            1    wreg     unsigned char 
 21209 ;; Auto vars:     Size  Location     Type
 21210 ;;  show            1   31[COMRAM] unsigned char 
 21211 ;; Return value:  Size  Location     Type
 21212 ;;                  1    wreg      void 
 21213 ;; Registers used:
 21214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21215 ;; Tracked objects:
 21216 ;;		On entry : 0/0
 21217 ;;		On exit  : 0/0
 21218 ;;		Unchanged: 0/0
 21219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21224 ;;Total ram usage:        1 bytes
 21225 ;; Hardware stack levels used:    1
 21226 ;; Hardware stack levels required when called:    6
 21227 ;; This function calls:
 21228 ;;		_lcd_set_com_seg
 21229 ;; This function is called by:
 21230 ;;		_ui_disp_menu_home
 21231 ;;		_ui_disp_menu_home_00
 21232 ;; This function uses a non-reentrant model
 21233 ;;
 21234                           
 21235                           	psect	text115
 21236  009596                     __ptext115:
 21237                           	opt stack 0
 21238  009596                     _lcd_disp_unit_1st_m:
 21239                           	opt stack 21
 21240                           
 21241                           ;incstack = 0
 21242                           ;lcd_disp_unit_1st_m@show stored from wreg
 21243  009596  6E20               	movwf	lcd_disp_unit_1st_m@show,c
 21244                           
 21245                           ;lcd.c: 400: lcd_set_com_seg(3,42,0);
 21246  009598  0E2A               	movlw	42
 21247  00959A  0100               	movlb	0	; () banked
 21248  00959C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21249  00959E  0E00               	movlw	0
 21250  0095A0  0100               	movlb	0	; () banked
 21251  0095A2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21252  0095A4  0E03               	movlw	3
 21253  0095A6  ECDA  F036         	call	_lcd_set_com_seg
 21254                           
 21255                           ;lcd.c: 401: lcd_set_com_seg(3,41,0);
 21256  0095AA  0E29               	movlw	41
 21257  0095AC  0100               	movlb	0	; () banked
 21258  0095AE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21259  0095B0  0E00               	movlw	0
 21260  0095B2  0100               	movlb	0	; () banked
 21261  0095B4  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21262  0095B6  0E03               	movlw	3
 21263  0095B8  ECDA  F036         	call	_lcd_set_com_seg
 21264                           
 21265                           ;lcd.c: 402: if(show){
 21266  0095BC  5020               	movf	lcd_disp_unit_1st_m@show,w,c
 21267  0095BE  B4D8               	btfsc	status,2,c
 21268  0095C0  D00A               	goto	l15451
 21269                           
 21270                           ;lcd.c: 403: lcd_set_com_seg(2,41,1);
 21271  0095C2  0E29               	movlw	41
 21272  0095C4  0100               	movlb	0	; () banked
 21273  0095C6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21274  0095C8  0E01               	movlw	1
 21275  0095CA  0100               	movlb	0	; () banked
 21276  0095CC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21277  0095CE  0E02               	movlw	2
 21278  0095D0  ECDA  F036         	call	_lcd_set_com_seg
 21279                           
 21280                           ;lcd.c: 404: }else{
 21281  0095D4  0012               	return	
 21282  0095D6                     l15451:
 21283                           
 21284                           ;lcd.c: 405: lcd_set_com_seg(2,41,0);
 21285  0095D6  0E29               	movlw	41
 21286  0095D8  0100               	movlb	0	; () banked
 21287  0095DA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21288  0095DC  0E00               	movlw	0
 21289  0095DE  0100               	movlb	0	; () banked
 21290  0095E0  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21291  0095E2  0E02               	movlw	2
 21292  0095E4  ECDA  F036         	call	_lcd_set_com_seg
 21293  0095E8  0012               	return	
 21294  0095EA                     __end_of_lcd_disp_unit_1st_m:
 21295                           	opt stack 0
 21296                           tosu	equ	0xFFF
 21297                           tosh	equ	0xFFE
 21298                           tosl	equ	0xFFD
 21299                           pclath	equ	0xFFA
 21300                           tblptru	equ	0xFF8
 21301                           tblptrh	equ	0xFF7
 21302                           tblptrl	equ	0xFF6
 21303                           tablat	equ	0xFF5
 21304                           prodh	equ	0xFF4
 21305                           prodl	equ	0xFF3
 21306                           intcon	equ	0xFF2
 21307                           indf0	equ	0xFEF
 21308                           postinc0	equ	0xFEE
 21309                           fsr0h	equ	0xFEA
 21310                           fsr0l	equ	0xFE9
 21311                           wreg	equ	0xFE8
 21312                           indf1	equ	0xFE7
 21313                           postinc1	equ	0xFE6
 21314                           postdec1	equ	0xFE5
 21315                           plusw1	equ	0xFE3
 21316                           fsr1h	equ	0xFE2
 21317                           fsr1l	equ	0xFE1
 21318                           indf2	equ	0xFDF
 21319                           postinc2	equ	0xFDE
 21320                           postdec2	equ	0xFDD
 21321                           plusw2	equ	0xFDB
 21322                           fsr2h	equ	0xFDA
 21323                           fsr2l	equ	0xFD9
 21324                           status	equ	0xFD8
 21325                           
 21326 ;; *************** function _lcd_disp_level *****************
 21327 ;; Defined at:
 21328 ;;		line 119 in file "src/driver/lcd.c"
 21329 ;; Parameters:    Size  Location     Type
 21330 ;;  level           1    wreg     unsigned char 
 21331 ;; Auto vars:     Size  Location     Type
 21332 ;;  level           1   18[BANK0 ] unsigned char 
 21333 ;;  i               1   19[BANK0 ] unsigned char 
 21334 ;; Return value:  Size  Location     Type
 21335 ;;                  1    wreg      void 
 21336 ;; Registers used:
 21337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21338 ;; Tracked objects:
 21339 ;;		On entry : 0/0
 21340 ;;		On exit  : 0/0
 21341 ;;		Unchanged: 0/0
 21342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21346 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21347 ;;Total ram usage:        2 bytes
 21348 ;; Hardware stack levels used:    1
 21349 ;; Hardware stack levels required when called:    7
 21350 ;; This function calls:
 21351 ;;		_lcd_disp_level_bar
 21352 ;; This function is called by:
 21353 ;;		_ui_disp_menu_home
 21354 ;;		_ui_disp_rtc_mm_ss
 21355 ;;		_ui_disp_menu_home_00
 21356 ;;		_ui_disp_menu_home_01
 21357 ;;		_ui_disp_menu_home_02
 21358 ;; This function uses a non-reentrant model
 21359 ;;
 21360                           
 21361                           	psect	text116
 21362  00943C                     __ptext116:
 21363                           	opt stack 0
 21364  00943C                     _lcd_disp_level:
 21365                           	opt stack 20
 21366                           
 21367                           ;incstack = 0
 21368                           ;lcd_disp_level@level stored from wreg
 21369  00943C  0100               	movlb	0	; () banked
 21370  00943E  6F72               	movwf	lcd_disp_level@level& (0+255),b
 21371                           
 21372                           ;lcd.c: 121: uint8_t i;
 21373                           ;lcd.c: 122: if(level>=99)level=99;
 21374  009440  0E62               	movlw	98
 21375  009442  0100               	movlb	0	; () banked
 21376  009444  6572               	cpfsgt	lcd_disp_level@level& (0+255),b
 21377  009446  D003               	goto	l15329
 21378                           
 21379                           ; BSR set to: 0
 21380  009448  0E63               	movlw	99
 21381  00944A  0100               	movlb	0	; () banked
 21382  00944C  6F72               	movwf	lcd_disp_level@level& (0+255),b
 21383  00944E                     l15329:
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;lcd.c: 123: level/=2;
 21387  00944E  0100               	movlb	0	; () banked
 21388  009450  90D8               	bcf	status,0,c
 21389  009452  3372               	rrcf	lcd_disp_level@level& (0+255),f,b
 21390                           
 21391                           ; BSR set to: 0
 21392                           ;lcd.c: 124: for(i=0;i<level;i++){
 21393  009454  0E00               	movlw	0
 21394  009456  0100               	movlb	0	; () banked
 21395  009458  6F73               	movwf	lcd_disp_level@i& (0+255),b
 21396  00945A  D008               	goto	l15337
 21397  00945C                     l15333:
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;lcd.c: 125: lcd_disp_level_bar(i,1);
 21401  00945C  0E01               	movlw	1
 21402  00945E  6E20               	movwf	lcd_disp_level_bar@show,c
 21403  009460  0100               	movlb	0	; () banked
 21404  009462  5173               	movf	lcd_disp_level@i& (0+255),w,b
 21405  009464  EC4B  F006         	call	_lcd_disp_level_bar
 21406  009468  0100               	movlb	0	; () banked
 21407  00946A  2B73               	incf	lcd_disp_level@i& (0+255),f,b
 21408  00946C                     l15337:
 21409                           
 21410                           ; BSR set to: 0
 21411  00946C  0100               	movlb	0	; () banked
 21412  00946E  5172               	movf	lcd_disp_level@level& (0+255),w,b
 21413  009470  0100               	movlb	0	; () banked
 21414  009472  5D73               	subwf	lcd_disp_level@i& (0+255),w,b
 21415  009474  A0D8               	btfss	status,0,c
 21416  009476  D7F2               	goto	l15333
 21417  009478                     l15339:
 21418                           
 21419                           ; BSR set to: 0
 21420                           ;lcd.c: 126: }
 21421                           ;lcd.c: 127: for(;i<50;i++){
 21422  009478  0E31               	movlw	49
 21423  00947A  0100               	movlb	0	; () banked
 21424  00947C  6573               	cpfsgt	lcd_disp_level@i& (0+255),b
 21425  00947E  D001               	goto	l15343
 21426  009480  0012               	return	
 21427  009482                     l15343:
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;lcd.c: 128: lcd_disp_level_bar(i,0);
 21431  009482  0E00               	movlw	0
 21432  009484  6E20               	movwf	lcd_disp_level_bar@show,c
 21433  009486  0100               	movlb	0	; () banked
 21434  009488  5173               	movf	lcd_disp_level@i& (0+255),w,b
 21435  00948A  EC4B  F006         	call	_lcd_disp_level_bar
 21436  00948E  0100               	movlb	0	; () banked
 21437  009490  2B73               	incf	lcd_disp_level@i& (0+255),f,b
 21438  009492  D7F2               	goto	l15339
 21439  009494                     __end_of_lcd_disp_level:
 21440                           	opt stack 0
 21441                           tosu	equ	0xFFF
 21442                           tosh	equ	0xFFE
 21443                           tosl	equ	0xFFD
 21444                           pclath	equ	0xFFA
 21445                           tblptru	equ	0xFF8
 21446                           tblptrh	equ	0xFF7
 21447                           tblptrl	equ	0xFF6
 21448                           tablat	equ	0xFF5
 21449                           prodh	equ	0xFF4
 21450                           prodl	equ	0xFF3
 21451                           intcon	equ	0xFF2
 21452                           indf0	equ	0xFEF
 21453                           postinc0	equ	0xFEE
 21454                           fsr0h	equ	0xFEA
 21455                           fsr0l	equ	0xFE9
 21456                           wreg	equ	0xFE8
 21457                           indf1	equ	0xFE7
 21458                           postinc1	equ	0xFE6
 21459                           postdec1	equ	0xFE5
 21460                           plusw1	equ	0xFE3
 21461                           fsr1h	equ	0xFE2
 21462                           fsr1l	equ	0xFE1
 21463                           indf2	equ	0xFDF
 21464                           postinc2	equ	0xFDE
 21465                           postdec2	equ	0xFDD
 21466                           plusw2	equ	0xFDB
 21467                           fsr2h	equ	0xFDA
 21468                           fsr2l	equ	0xFD9
 21469                           status	equ	0xFD8
 21470                           
 21471 ;; *************** function _lcd_disp_level_bar *****************
 21472 ;; Defined at:
 21473 ;;		line 47 in file "src/driver/lcd.c"
 21474 ;; Parameters:    Size  Location     Type
 21475 ;;  bar             1    wreg     unsigned char 
 21476 ;;  show            1   31[COMRAM] unsigned char 
 21477 ;; Auto vars:     Size  Location     Type
 21478 ;;  bar             1   17[BANK0 ] unsigned char 
 21479 ;;  __bar           1   16[BANK0 ] unsigned char 
 21480 ;; Return value:  Size  Location     Type
 21481 ;;                  1    wreg      void 
 21482 ;; Registers used:
 21483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21484 ;; Tracked objects:
 21485 ;;		On entry : 0/0
 21486 ;;		On exit  : 0/0
 21487 ;;		Unchanged: 0/0
 21488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21489 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21492 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21493 ;;Total ram usage:        3 bytes
 21494 ;; Hardware stack levels used:    1
 21495 ;; Hardware stack levels required when called:    6
 21496 ;; This function calls:
 21497 ;;		_lcd_set_com_seg
 21498 ;; This function is called by:
 21499 ;;		_lcd_disp_level
 21500 ;;		_lcd_disp_level_off
 21501 ;; This function uses a non-reentrant model
 21502 ;;
 21503                           
 21504                           	psect	text117
 21505  000C96                     __ptext117:
 21506                           	opt stack 0
 21507  000C96                     _lcd_disp_level_bar:
 21508                           	opt stack 20
 21509                           
 21510                           ; BSR set to: 0
 21511                           ;incstack = 0
 21512                           ;lcd_disp_level_bar@bar stored from wreg
 21513  000C96  0100               	movlb	0	; () banked
 21514  000C98  6F71               	movwf	lcd_disp_level_bar@bar& (0+255),b
 21515                           
 21516                           ;lcd.c: 50: uint8_t __bar;
 21517                           ;lcd.c: 51: if(bar>49)return;
 21518  000C9A  0E31               	movlw	49
 21519  000C9C  0100               	movlb	0	; () banked
 21520  000C9E  6571               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
 21521  000CA0  D001               	goto	l14885
 21522  000CA2  0012               	return	
 21523  000CA4                     l14885:
 21524                           
 21525                           ; BSR set to: 0
 21526                           ;lcd.c: 52: __bar=49-bar;
 21527  000CA4  0100               	movlb	0	; () banked
 21528  000CA6  5171               	movf	lcd_disp_level_bar@bar& (0+255),w,b
 21529  000CA8  0800               	sublw	0
 21530  000CAA  0F31               	addlw	49
 21531  000CAC  0100               	movlb	0	; () banked
 21532  000CAE  6F70               	movwf	lcd_disp_level_bar@__bar& (0+255),b
 21533                           
 21534                           ;lcd.c: 53: switch(__bar){
 21535  000CB0  D1C2               	goto	l14989
 21536  000CB2                     l14887:
 21537                           
 21538                           ; BSR set to: 0
 21539  000CB2  0E2E               	movlw	46
 21540  000CB4  0100               	movlb	0	; () banked
 21541  000CB6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21542  000CB8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21543  000CBC  0E00               	movlw	0
 21544  000CBE  ECDA  F036         	call	_lcd_set_com_seg
 21545  000CC2  0012               	return	
 21546  000CC4                     l14889:
 21547  000CC4  0E2E               	movlw	46
 21548  000CC6  0100               	movlb	0	; () banked
 21549  000CC8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21550  000CCA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21551  000CCE  0E01               	movlw	1
 21552  000CD0  ECDA  F036         	call	_lcd_set_com_seg
 21553  000CD4  0012               	return	
 21554  000CD6                     l14891:
 21555  000CD6  0E2E               	movlw	46
 21556  000CD8  0100               	movlb	0	; () banked
 21557  000CDA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21558  000CDC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21559  000CE0  0E02               	movlw	2
 21560  000CE2  ECDA  F036         	call	_lcd_set_com_seg
 21561  000CE6  0012               	return	
 21562  000CE8                     l14893:
 21563  000CE8  0E2E               	movlw	46
 21564  000CEA  0100               	movlb	0	; () banked
 21565  000CEC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21566  000CEE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21567  000CF2  0E03               	movlw	3
 21568  000CF4  ECDA  F036         	call	_lcd_set_com_seg
 21569  000CF8  0012               	return	
 21570  000CFA                     l14895:
 21571  000CFA  0E2F               	movlw	47
 21572  000CFC  0100               	movlb	0	; () banked
 21573  000CFE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21574  000D00  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21575  000D04  0E03               	movlw	3
 21576  000D06  ECDA  F036         	call	_lcd_set_com_seg
 21577  000D0A  0012               	return	
 21578  000D0C                     l14897:
 21579  000D0C  0E2F               	movlw	47
 21580  000D0E  0100               	movlb	0	; () banked
 21581  000D10  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21582  000D12  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21583  000D16  0E02               	movlw	2
 21584  000D18  ECDA  F036         	call	_lcd_set_com_seg
 21585  000D1C  0012               	return	
 21586  000D1E                     l14899:
 21587  000D1E  0E2F               	movlw	47
 21588  000D20  0100               	movlb	0	; () banked
 21589  000D22  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21590  000D24  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21591  000D28  0E01               	movlw	1
 21592  000D2A  ECDA  F036         	call	_lcd_set_com_seg
 21593  000D2E  0012               	return	
 21594  000D30                     l14901:
 21595  000D30  0E2F               	movlw	47
 21596  000D32  0100               	movlb	0	; () banked
 21597  000D34  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21598  000D36  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21599  000D3A  0E00               	movlw	0
 21600  000D3C  ECDA  F036         	call	_lcd_set_com_seg
 21601  000D40  0012               	return	
 21602  000D42                     l14903:
 21603  000D42  0E1F               	movlw	31
 21604  000D44  0100               	movlb	0	; () banked
 21605  000D46  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21606  000D48  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21607  000D4C  0E00               	movlw	0
 21608  000D4E  ECDA  F036         	call	_lcd_set_com_seg
 21609  000D52  0012               	return	
 21610  000D54                     l14905:
 21611  000D54  0E1F               	movlw	31
 21612  000D56  0100               	movlb	0	; () banked
 21613  000D58  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21614  000D5A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21615  000D5E  0E01               	movlw	1
 21616  000D60  ECDA  F036         	call	_lcd_set_com_seg
 21617  000D64  0012               	return	
 21618  000D66                     l14907:
 21619  000D66  0E1F               	movlw	31
 21620  000D68  0100               	movlb	0	; () banked
 21621  000D6A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21622  000D6C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21623  000D70  0E02               	movlw	2
 21624  000D72  ECDA  F036         	call	_lcd_set_com_seg
 21625  000D76  0012               	return	
 21626  000D78                     l14909:
 21627  000D78  0E1F               	movlw	31
 21628  000D7A  0100               	movlb	0	; () banked
 21629  000D7C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21630  000D7E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21631  000D82  0E03               	movlw	3
 21632  000D84  ECDA  F036         	call	_lcd_set_com_seg
 21633  000D88  0012               	return	
 21634  000D8A                     l14911:
 21635  000D8A  0E00               	movlw	0
 21636  000D8C  0100               	movlb	0	; () banked
 21637  000D8E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21638  000D90  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21639  000D94  0E03               	movlw	3
 21640  000D96  ECDA  F036         	call	_lcd_set_com_seg
 21641  000D9A  0012               	return	
 21642  000D9C                     l14913:
 21643  000D9C  0E00               	movlw	0
 21644  000D9E  0100               	movlb	0	; () banked
 21645  000DA0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21646  000DA2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21647  000DA6  0E02               	movlw	2
 21648  000DA8  ECDA  F036         	call	_lcd_set_com_seg
 21649  000DAC  0012               	return	
 21650  000DAE                     l14915:
 21651  000DAE  0E00               	movlw	0
 21652  000DB0  0100               	movlb	0	; () banked
 21653  000DB2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21654  000DB4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21655  000DB8  0E01               	movlw	1
 21656  000DBA  ECDA  F036         	call	_lcd_set_com_seg
 21657  000DBE  0012               	return	
 21658  000DC0                     l14917:
 21659  000DC0  0E00               	movlw	0
 21660  000DC2  0100               	movlb	0	; () banked
 21661  000DC4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21662  000DC6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21663  000DCA  0E00               	movlw	0
 21664  000DCC  ECDA  F036         	call	_lcd_set_com_seg
 21665  000DD0  0012               	return	
 21666  000DD2                     l14919:
 21667  000DD2  0E01               	movlw	1
 21668  000DD4  0100               	movlb	0	; () banked
 21669  000DD6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21670  000DD8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21671  000DDC  0E00               	movlw	0
 21672  000DDE  ECDA  F036         	call	_lcd_set_com_seg
 21673  000DE2  0012               	return	
 21674  000DE4                     l14921:
 21675  000DE4  0E01               	movlw	1
 21676  000DE6  0100               	movlb	0	; () banked
 21677  000DE8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21678  000DEA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21679  000DEE  0E01               	movlw	1
 21680  000DF0  ECDA  F036         	call	_lcd_set_com_seg
 21681  000DF4  0012               	return	
 21682  000DF6                     l14923:
 21683  000DF6  0E01               	movlw	1
 21684  000DF8  0100               	movlb	0	; () banked
 21685  000DFA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21686  000DFC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21687  000E00  0E02               	movlw	2
 21688  000E02  ECDA  F036         	call	_lcd_set_com_seg
 21689  000E06  0012               	return	
 21690  000E08                     l14925:
 21691  000E08  0E01               	movlw	1
 21692  000E0A  0100               	movlb	0	; () banked
 21693  000E0C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21694  000E0E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21695  000E12  0E03               	movlw	3
 21696  000E14  ECDA  F036         	call	_lcd_set_com_seg
 21697  000E18  0012               	return	
 21698  000E1A                     l14927:
 21699  000E1A  0E02               	movlw	2
 21700  000E1C  0100               	movlb	0	; () banked
 21701  000E1E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21702  000E20  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21703  000E24  0E03               	movlw	3
 21704  000E26  ECDA  F036         	call	_lcd_set_com_seg
 21705  000E2A  0012               	return	
 21706  000E2C                     l14929:
 21707  000E2C  0E02               	movlw	2
 21708  000E2E  0100               	movlb	0	; () banked
 21709  000E30  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21710  000E32  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21711  000E36  0E02               	movlw	2
 21712  000E38  ECDA  F036         	call	_lcd_set_com_seg
 21713  000E3C  0012               	return	
 21714  000E3E                     l14931:
 21715  000E3E  0E02               	movlw	2
 21716  000E40  0100               	movlb	0	; () banked
 21717  000E42  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21718  000E44  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21719  000E48  0E01               	movlw	1
 21720  000E4A  ECDA  F036         	call	_lcd_set_com_seg
 21721  000E4E  0012               	return	
 21722  000E50                     l14933:
 21723  000E50  0E02               	movlw	2
 21724  000E52  0100               	movlb	0	; () banked
 21725  000E54  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21726  000E56  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21727  000E5A  0E00               	movlw	0
 21728  000E5C  ECDA  F036         	call	_lcd_set_com_seg
 21729  000E60  0012               	return	
 21730  000E62                     l14935:
 21731  000E62  0E03               	movlw	3
 21732  000E64  0100               	movlb	0	; () banked
 21733  000E66  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21734  000E68  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21735  000E6C  0E00               	movlw	0
 21736  000E6E  ECDA  F036         	call	_lcd_set_com_seg
 21737  000E72  0012               	return	
 21738  000E74                     l14937:
 21739  000E74  0E03               	movlw	3
 21740  000E76  0100               	movlb	0	; () banked
 21741  000E78  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21742  000E7A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21743  000E7E  0E01               	movlw	1
 21744  000E80  ECDA  F036         	call	_lcd_set_com_seg
 21745  000E84  0012               	return	
 21746  000E86                     l14939:
 21747  000E86  0E03               	movlw	3
 21748  000E88  0100               	movlb	0	; () banked
 21749  000E8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21750  000E8C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21751  000E90  0E02               	movlw	2
 21752  000E92  ECDA  F036         	call	_lcd_set_com_seg
 21753  000E96  0012               	return	
 21754  000E98                     l14941:
 21755  000E98  0E03               	movlw	3
 21756  000E9A  0100               	movlb	0	; () banked
 21757  000E9C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21758  000E9E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21759  000EA2  0E03               	movlw	3
 21760  000EA4  ECDA  F036         	call	_lcd_set_com_seg
 21761  000EA8  0012               	return	
 21762  000EAA                     l14943:
 21763  000EAA  0E04               	movlw	4
 21764  000EAC  0100               	movlb	0	; () banked
 21765  000EAE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21766  000EB0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21767  000EB4  0E03               	movlw	3
 21768  000EB6  ECDA  F036         	call	_lcd_set_com_seg
 21769  000EBA  0012               	return	
 21770  000EBC                     l14945:
 21771  000EBC  0E04               	movlw	4
 21772  000EBE  0100               	movlb	0	; () banked
 21773  000EC0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21774  000EC2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21775  000EC6  0E02               	movlw	2
 21776  000EC8  ECDA  F036         	call	_lcd_set_com_seg
 21777  000ECC  0012               	return	
 21778  000ECE                     l14947:
 21779  000ECE  0E04               	movlw	4
 21780  000ED0  0100               	movlb	0	; () banked
 21781  000ED2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21782  000ED4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21783  000ED8  0E01               	movlw	1
 21784  000EDA  ECDA  F036         	call	_lcd_set_com_seg
 21785  000EDE  0012               	return	
 21786  000EE0                     l14949:
 21787  000EE0  0E04               	movlw	4
 21788  000EE2  0100               	movlb	0	; () banked
 21789  000EE4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21790  000EE6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21791  000EEA  0E00               	movlw	0
 21792  000EEC  ECDA  F036         	call	_lcd_set_com_seg
 21793  000EF0  0012               	return	
 21794  000EF2                     l14951:
 21795  000EF2  0E05               	movlw	5
 21796  000EF4  0100               	movlb	0	; () banked
 21797  000EF6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21798  000EF8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21799  000EFC  0E00               	movlw	0
 21800  000EFE  ECDA  F036         	call	_lcd_set_com_seg
 21801  000F02  0012               	return	
 21802  000F04                     l14953:
 21803  000F04  0E05               	movlw	5
 21804  000F06  0100               	movlb	0	; () banked
 21805  000F08  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21806  000F0A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21807  000F0E  0E01               	movlw	1
 21808  000F10  ECDA  F036         	call	_lcd_set_com_seg
 21809  000F14  0012               	return	
 21810  000F16                     l14955:
 21811  000F16  0E05               	movlw	5
 21812  000F18  0100               	movlb	0	; () banked
 21813  000F1A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21814  000F1C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21815  000F20  0E02               	movlw	2
 21816  000F22  ECDA  F036         	call	_lcd_set_com_seg
 21817  000F26  0012               	return	
 21818  000F28                     l14957:
 21819  000F28  0E05               	movlw	5
 21820  000F2A  0100               	movlb	0	; () banked
 21821  000F2C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21822  000F2E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21823  000F32  0E03               	movlw	3
 21824  000F34  ECDA  F036         	call	_lcd_set_com_seg
 21825  000F38  0012               	return	
 21826  000F3A                     l14959:
 21827  000F3A  0E06               	movlw	6
 21828  000F3C  0100               	movlb	0	; () banked
 21829  000F3E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21830  000F40  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21831  000F44  0E03               	movlw	3
 21832  000F46  ECDA  F036         	call	_lcd_set_com_seg
 21833  000F4A  0012               	return	
 21834  000F4C                     l14961:
 21835  000F4C  0E06               	movlw	6
 21836  000F4E  0100               	movlb	0	; () banked
 21837  000F50  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21838  000F52  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21839  000F56  0E02               	movlw	2
 21840  000F58  ECDA  F036         	call	_lcd_set_com_seg
 21841  000F5C  0012               	return	
 21842  000F5E                     l14963:
 21843  000F5E  0E06               	movlw	6
 21844  000F60  0100               	movlb	0	; () banked
 21845  000F62  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21846  000F64  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21847  000F68  0E01               	movlw	1
 21848  000F6A  ECDA  F036         	call	_lcd_set_com_seg
 21849  000F6E  0012               	return	
 21850  000F70                     l14965:
 21851  000F70  0E06               	movlw	6
 21852  000F72  0100               	movlb	0	; () banked
 21853  000F74  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21854  000F76  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21855  000F7A  0E00               	movlw	0
 21856  000F7C  ECDA  F036         	call	_lcd_set_com_seg
 21857  000F80  0012               	return	
 21858  000F82                     l14967:
 21859  000F82  0E07               	movlw	7
 21860  000F84  0100               	movlb	0	; () banked
 21861  000F86  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21862  000F88  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21863  000F8C  0E00               	movlw	0
 21864  000F8E  ECDA  F036         	call	_lcd_set_com_seg
 21865  000F92  0012               	return	
 21866  000F94                     l14969:
 21867  000F94  0E07               	movlw	7
 21868  000F96  0100               	movlb	0	; () banked
 21869  000F98  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21870  000F9A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21871  000F9E  0E01               	movlw	1
 21872  000FA0  ECDA  F036         	call	_lcd_set_com_seg
 21873  000FA4  0012               	return	
 21874  000FA6                     l14971:
 21875  000FA6  0E07               	movlw	7
 21876  000FA8  0100               	movlb	0	; () banked
 21877  000FAA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21878  000FAC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21879  000FB0  0E02               	movlw	2
 21880  000FB2  ECDA  F036         	call	_lcd_set_com_seg
 21881  000FB6  0012               	return	
 21882  000FB8                     l14973:
 21883  000FB8  0E07               	movlw	7
 21884  000FBA  0100               	movlb	0	; () banked
 21885  000FBC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21886  000FBE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21887  000FC2  0E03               	movlw	3
 21888  000FC4  ECDA  F036         	call	_lcd_set_com_seg
 21889  000FC8  0012               	return	
 21890  000FCA                     l14975:
 21891  000FCA  0E21               	movlw	33
 21892  000FCC  0100               	movlb	0	; () banked
 21893  000FCE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21894  000FD0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21895  000FD4  0E03               	movlw	3
 21896  000FD6  ECDA  F036         	call	_lcd_set_com_seg
 21897  000FDA  0012               	return	
 21898  000FDC                     l14977:
 21899  000FDC  0E21               	movlw	33
 21900  000FDE  0100               	movlb	0	; () banked
 21901  000FE0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21902  000FE2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21903  000FE6  0E02               	movlw	2
 21904  000FE8  ECDA  F036         	call	_lcd_set_com_seg
 21905  000FEC  0012               	return	
 21906  000FEE                     l14979:
 21907  000FEE  0E21               	movlw	33
 21908  000FF0  0100               	movlb	0	; () banked
 21909  000FF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21910  000FF4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21911  000FF8  0E01               	movlw	1
 21912  000FFA  ECDA  F036         	call	_lcd_set_com_seg
 21913  000FFE  0012               	return	
 21914  001000                     l14981:
 21915  001000  0E21               	movlw	33
 21916  001002  0100               	movlb	0	; () banked
 21917  001004  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21918  001006  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21919  00100A  0E00               	movlw	0
 21920  00100C  ECDA  F036         	call	_lcd_set_com_seg
 21921  001010  0012               	return	
 21922  001012                     l14983:
 21923  001012  0E22               	movlw	34
 21924  001014  0100               	movlb	0	; () banked
 21925  001016  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21926  001018  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21927  00101C  0E00               	movlw	0
 21928  00101E  ECDA  F036         	call	_lcd_set_com_seg
 21929  001022  0012               	return	
 21930  001024                     l14985:
 21931  001024  0E22               	movlw	34
 21932  001026  0100               	movlb	0	; () banked
 21933  001028  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21934  00102A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21935  00102E  0E01               	movlw	1
 21936  001030  ECDA  F036         	call	_lcd_set_com_seg
 21937                           
 21938                           ;lcd.c: 116: }
 21939  001034  0012               	return	
 21940  001036                     l14989:
 21941  001036  0100               	movlb	0	; () banked
 21942  001038  5170               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
 21943                           
 21944                           ; Switch size 1, requested type "space"
 21945                           ; Number of cases is 50, Range of values is 0 to 49
 21946                           ; switch strategies available:
 21947                           ; Name         Instructions Cycles
 21948                           ; simple_byte          151    76 (average)
 21949                           ;	Chosen strategy is simple_byte
 21950  00103A  0A00               	xorlw	0	; case 0
 21951  00103C  B4D8               	btfsc	status,2,c
 21952  00103E  D639               	goto	l14887
 21953  001040  0A01               	xorlw	1	; case 1
 21954  001042  B4D8               	btfsc	status,2,c
 21955  001044  D63F               	goto	l14889
 21956  001046  0A03               	xorlw	3	; case 2
 21957  001048  B4D8               	btfsc	status,2,c
 21958  00104A  D645               	goto	l14891
 21959  00104C  0A01               	xorlw	1	; case 3
 21960  00104E  B4D8               	btfsc	status,2,c
 21961  001050  D64B               	goto	l14893
 21962  001052  0A07               	xorlw	7	; case 4
 21963  001054  B4D8               	btfsc	status,2,c
 21964  001056  D651               	goto	l14895
 21965  001058  0A01               	xorlw	1	; case 5
 21966  00105A  B4D8               	btfsc	status,2,c
 21967  00105C  D657               	goto	l14897
 21968  00105E  0A03               	xorlw	3	; case 6
 21969  001060  B4D8               	btfsc	status,2,c
 21970  001062  D65D               	goto	l14899
 21971  001064  0A01               	xorlw	1	; case 7
 21972  001066  B4D8               	btfsc	status,2,c
 21973  001068  D663               	goto	l14901
 21974  00106A  0A0F               	xorlw	15	; case 8
 21975  00106C  B4D8               	btfsc	status,2,c
 21976  00106E  D669               	goto	l14903
 21977  001070  0A01               	xorlw	1	; case 9
 21978  001072  B4D8               	btfsc	status,2,c
 21979  001074  D66F               	goto	l14905
 21980  001076  0A03               	xorlw	3	; case 10
 21981  001078  B4D8               	btfsc	status,2,c
 21982  00107A  D675               	goto	l14907
 21983  00107C  0A01               	xorlw	1	; case 11
 21984  00107E  B4D8               	btfsc	status,2,c
 21985  001080  D67B               	goto	l14909
 21986  001082  0A07               	xorlw	7	; case 12
 21987  001084  B4D8               	btfsc	status,2,c
 21988  001086  D681               	goto	l14911
 21989  001088  0A01               	xorlw	1	; case 13
 21990  00108A  B4D8               	btfsc	status,2,c
 21991  00108C  D687               	goto	l14913
 21992  00108E  0A03               	xorlw	3	; case 14
 21993  001090  B4D8               	btfsc	status,2,c
 21994  001092  D68D               	goto	l14915
 21995  001094  0A01               	xorlw	1	; case 15
 21996  001096  B4D8               	btfsc	status,2,c
 21997  001098  D693               	goto	l14917
 21998  00109A  0A1F               	xorlw	31	; case 16
 21999  00109C  B4D8               	btfsc	status,2,c
 22000  00109E  D699               	goto	l14919
 22001  0010A0  0A01               	xorlw	1	; case 17
 22002  0010A2  B4D8               	btfsc	status,2,c
 22003  0010A4  D69F               	goto	l14921
 22004  0010A6  0A03               	xorlw	3	; case 18
 22005  0010A8  B4D8               	btfsc	status,2,c
 22006  0010AA  D6A5               	goto	l14923
 22007  0010AC  0A01               	xorlw	1	; case 19
 22008  0010AE  B4D8               	btfsc	status,2,c
 22009  0010B0  D6AB               	goto	l14925
 22010  0010B2  0A07               	xorlw	7	; case 20
 22011  0010B4  B4D8               	btfsc	status,2,c
 22012  0010B6  D6B1               	goto	l14927
 22013  0010B8  0A01               	xorlw	1	; case 21
 22014  0010BA  B4D8               	btfsc	status,2,c
 22015  0010BC  D6B7               	goto	l14929
 22016  0010BE  0A03               	xorlw	3	; case 22
 22017  0010C0  B4D8               	btfsc	status,2,c
 22018  0010C2  D6BD               	goto	l14931
 22019  0010C4  0A01               	xorlw	1	; case 23
 22020  0010C6  B4D8               	btfsc	status,2,c
 22021  0010C8  D6C3               	goto	l14933
 22022  0010CA  0A0F               	xorlw	15	; case 24
 22023  0010CC  B4D8               	btfsc	status,2,c
 22024  0010CE  D6C9               	goto	l14935
 22025  0010D0  0A01               	xorlw	1	; case 25
 22026  0010D2  B4D8               	btfsc	status,2,c
 22027  0010D4  D6CF               	goto	l14937
 22028  0010D6  0A03               	xorlw	3	; case 26
 22029  0010D8  B4D8               	btfsc	status,2,c
 22030  0010DA  D6D5               	goto	l14939
 22031  0010DC  0A01               	xorlw	1	; case 27
 22032  0010DE  B4D8               	btfsc	status,2,c
 22033  0010E0  D6DB               	goto	l14941
 22034  0010E2  0A07               	xorlw	7	; case 28
 22035  0010E4  B4D8               	btfsc	status,2,c
 22036  0010E6  D6E1               	goto	l14943
 22037  0010E8  0A01               	xorlw	1	; case 29
 22038  0010EA  B4D8               	btfsc	status,2,c
 22039  0010EC  D6E7               	goto	l14945
 22040  0010EE  0A03               	xorlw	3	; case 30
 22041  0010F0  B4D8               	btfsc	status,2,c
 22042  0010F2  D6ED               	goto	l14947
 22043  0010F4  0A01               	xorlw	1	; case 31
 22044  0010F6  B4D8               	btfsc	status,2,c
 22045  0010F8  D6F3               	goto	l14949
 22046  0010FA  0A3F               	xorlw	63	; case 32
 22047  0010FC  B4D8               	btfsc	status,2,c
 22048  0010FE  D6F9               	goto	l14951
 22049  001100  0A01               	xorlw	1	; case 33
 22050  001102  B4D8               	btfsc	status,2,c
 22051  001104  D6FF               	goto	l14953
 22052  001106  0A03               	xorlw	3	; case 34
 22053  001108  B4D8               	btfsc	status,2,c
 22054  00110A  D705               	goto	l14955
 22055  00110C  0A01               	xorlw	1	; case 35
 22056  00110E  B4D8               	btfsc	status,2,c
 22057  001110  D70B               	goto	l14957
 22058  001112  0A07               	xorlw	7	; case 36
 22059  001114  B4D8               	btfsc	status,2,c
 22060  001116  D711               	goto	l14959
 22061  001118  0A01               	xorlw	1	; case 37
 22062  00111A  B4D8               	btfsc	status,2,c
 22063  00111C  D717               	goto	l14961
 22064  00111E  0A03               	xorlw	3	; case 38
 22065  001120  B4D8               	btfsc	status,2,c
 22066  001122  D71D               	goto	l14963
 22067  001124  0A01               	xorlw	1	; case 39
 22068  001126  B4D8               	btfsc	status,2,c
 22069  001128  D723               	goto	l14965
 22070  00112A  0A0F               	xorlw	15	; case 40
 22071  00112C  B4D8               	btfsc	status,2,c
 22072  00112E  D729               	goto	l14967
 22073  001130  0A01               	xorlw	1	; case 41
 22074  001132  B4D8               	btfsc	status,2,c
 22075  001134  D72F               	goto	l14969
 22076  001136  0A03               	xorlw	3	; case 42
 22077  001138  B4D8               	btfsc	status,2,c
 22078  00113A  D735               	goto	l14971
 22079  00113C  0A01               	xorlw	1	; case 43
 22080  00113E  B4D8               	btfsc	status,2,c
 22081  001140  D73B               	goto	l14973
 22082  001142  0A07               	xorlw	7	; case 44
 22083  001144  B4D8               	btfsc	status,2,c
 22084  001146  D741               	goto	l14975
 22085  001148  0A01               	xorlw	1	; case 45
 22086  00114A  B4D8               	btfsc	status,2,c
 22087  00114C  D747               	goto	l14977
 22088  00114E  0A03               	xorlw	3	; case 46
 22089  001150  B4D8               	btfsc	status,2,c
 22090  001152  D74D               	goto	l14979
 22091  001154  0A01               	xorlw	1	; case 47
 22092  001156  B4D8               	btfsc	status,2,c
 22093  001158  D753               	goto	l14981
 22094  00115A  0A1F               	xorlw	31	; case 48
 22095  00115C  B4D8               	btfsc	status,2,c
 22096  00115E  D759               	goto	l14983
 22097  001160  0A01               	xorlw	1	; case 49
 22098  001162  A4D8               	btfss	status,2,c
 22099  001164  0012               	return	
 22100  001166  D75E               	goto	l14985
 22101  001168                     __end_of_lcd_disp_level_bar:
 22102                           	opt stack 0
 22103                           tosu	equ	0xFFF
 22104                           tosh	equ	0xFFE
 22105                           tosl	equ	0xFFD
 22106                           pclath	equ	0xFFA
 22107                           tblptru	equ	0xFF8
 22108                           tblptrh	equ	0xFF7
 22109                           tblptrl	equ	0xFF6
 22110                           tablat	equ	0xFF5
 22111                           prodh	equ	0xFF4
 22112                           prodl	equ	0xFF3
 22113                           intcon	equ	0xFF2
 22114                           indf0	equ	0xFEF
 22115                           postinc0	equ	0xFEE
 22116                           fsr0h	equ	0xFEA
 22117                           fsr0l	equ	0xFE9
 22118                           wreg	equ	0xFE8
 22119                           indf1	equ	0xFE7
 22120                           postinc1	equ	0xFE6
 22121                           postdec1	equ	0xFE5
 22122                           plusw1	equ	0xFE3
 22123                           fsr1h	equ	0xFE2
 22124                           fsr1l	equ	0xFE1
 22125                           indf2	equ	0xFDF
 22126                           postinc2	equ	0xFDE
 22127                           postdec2	equ	0xFDD
 22128                           plusw2	equ	0xFDB
 22129                           fsr2h	equ	0xFDA
 22130                           fsr2l	equ	0xFD9
 22131                           status	equ	0xFD8
 22132                           
 22133 ;; *************** function ___int32_2_mflot32 *****************
 22134 ;; Defined at:
 22135 ;;		line 58 in file "src/api/ui.c"
 22136 ;; Parameters:    Size  Location     Type
 22137 ;;  x               4   13[BANK0 ] long 
 22138 ;; Auto vars:     Size  Location     Type
 22139 ;;  mf              4   25[BANK0 ] struct .
 22140 ;;  t32             4   21[BANK0 ] unsigned long 
 22141 ;; Return value:  Size  Location     Type
 22142 ;;                  4   13[BANK0 ] long 
 22143 ;; Registers used:
 22144 ;;		wreg, status,2, status,0, cstack
 22145 ;; Tracked objects:
 22146 ;;		On entry : 0/0
 22147 ;;		On exit  : 0/0
 22148 ;;		Unchanged: 0/0
 22149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22151 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22152 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22153 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22154 ;;Total ram usage:       16 bytes
 22155 ;; Hardware stack levels used:    1
 22156 ;; Hardware stack levels required when called:    5
 22157 ;; This function calls:
 22158 ;;		___lldiv
 22159 ;; This function is called by:
 22160 ;;		___enter_menu_set_density
 22161 ;;		___enter_menu_set_d
 22162 ;;		___enter_menu_set_h
 22163 ;;		___enter_menu_set_base_zero
 22164 ;;		___enter_menu_calib_press_diff
 22165 ;;		___enter_menu_calib_press
 22166 ;;		___enter_menu_warn_value
 22167 ;;		___enter_menu_epr_calib
 22168 ;;		___enter_menu_epr_ilp_scale
 22169 ;;		_ui_disp_menu_home
 22170 ;;		_ui_disp_menu_home_00
 22171 ;;		_ui_disp_menu_home_01
 22172 ;;		_ui_disp_menu_home_02
 22173 ;; This function uses a non-reentrant model
 22174 ;;
 22175                           
 22176                           	psect	text118
 22177  006010                     __ptext118:
 22178                           	opt stack 0
 22179  006010                     ___int32_2_mflot32:
 22180                           	opt stack 22
 22181                           
 22182                           ;ui.c: 60: st_float32 mf={0};
 22183                           
 22184                           ;incstack = 0
 22185  006010  C142  F079         	movff	___int32_2_mflot32@F7705,___int32_2_mflot32@mf
 22186  006014  C143  F07A         	movff	___int32_2_mflot32@F7705+1,___int32_2_mflot32@mf+1
 22187  006018  C144  F07B         	movff	___int32_2_mflot32@F7705+2,___int32_2_mflot32@mf+2
 22188  00601C  C145  F07C         	movff	___int32_2_mflot32@F7705+3,___int32_2_mflot32@mf+3
 22189                           
 22190                           ;ui.c: 61: uint32_t t32;
 22191                           ;ui.c: 62: t32=x;
 22192  006020  C06D  F075         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
 22193  006024  C06E  F076         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
 22194  006028  C06F  F077         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
 22195  00602C  C070  F078         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
 22196                           
 22197                           ;ui.c: 63: if(x<0){
 22198  006030  0100               	movlb	0	; () banked
 22199  006032  AF70               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
 22200  006034  D040               	goto	l14661
 22201                           
 22202                           ; BSR set to: 0
 22203                           ;ui.c: 64: t32 = ((~x) +1);
 22204  006036  C06D  F071         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
 22205  00603A  C06E  F072         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
 22206  00603E  C06F  F073         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
 22207  006042  C070  F074         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
 22208  006046  0100               	movlb	0	; () banked
 22209  006048  1F71               	comf	??___int32_2_mflot32& (0+255),f,b
 22210  00604A  1F72               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
 22211  00604C  1F73               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
 22212  00604E  1F74               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
 22213  006050  2B71               	incf	??___int32_2_mflot32& (0+255),f,b
 22214  006052  0E00               	movlw	0
 22215  006054  2372               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
 22216  006056  2373               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
 22217  006058  2374               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
 22218  00605A  C071  F075         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
 22219  00605E  C072  F076         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
 22220  006062  C073  F077         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
 22221  006066  C074  F078         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
 22222                           
 22223                           ; BSR set to: 0
 22224                           ;ui.c: 65: mf.stru.sign=1;
 22225  00606A  0E01               	movlw	1
 22226  00606C  0100               	movlb	0	; () banked
 22227  00606E  6F7C               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
 22228                           
 22229                           ; BSR set to: 0
 22230                           ;ui.c: 66: }
 22231                           ;ui.c: 67: while(t32>9999){
 22232  006070  D022               	goto	l14661
 22233  006072                     l14653:
 22234                           
 22235                           ; BSR set to: 0
 22236                           ;ui.c: 68: mf.stru.exponent++;
 22237  006072  0100               	movlb	0	; () banked
 22238  006074  2B7B               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
 22239                           
 22240                           ; BSR set to: 0
 22241                           ;ui.c: 69: t32/=10;
 22242  006076  C075  F060         	movff	___int32_2_mflot32@t32,___lldiv@dividend
 22243  00607A  C076  F061         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
 22244  00607E  C077  F062         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
 22245  006082  C078  F063         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
 22246  006086  0E0A               	movlw	10
 22247  006088  0100               	movlb	0	; () banked
 22248  00608A  6F64               	movwf	___lldiv@divisor& (0+255),b
 22249  00608C  0E00               	movlw	0
 22250  00608E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22251  006090  0E00               	movlw	0
 22252  006092  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22253  006094  0E00               	movlw	0
 22254  006096  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22255  006098  EC23  F039         	call	___lldiv	;wreg free
 22256  00609C  C060  F075         	movff	?___lldiv,___int32_2_mflot32@t32
 22257  0060A0  C061  F076         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
 22258  0060A4  C062  F077         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
 22259  0060A8  C063  F078         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
 22260                           
 22261                           ;ui.c: 70: if( mf.stru.exponent>=3)break;
 22262  0060AC  0E02               	movlw	2
 22263  0060AE  0100               	movlb	0	; () banked
 22264  0060B0  657B               	cpfsgt	(___int32_2_mflot32@mf+2)& (0+255),b
 22265  0060B2  D001               	goto	l14661
 22266  0060B4  D00D               	goto	l14663
 22267  0060B6                     l14661:
 22268                           
 22269                           ; BSR set to: 0
 22270  0060B6  0100               	movlb	0	; () banked
 22271  0060B8  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 22272  0060BA  0100               	movlb	0	; () banked
 22273  0060BC  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 22274  0060BE  E1D9               	bnz	l14653
 22275  0060C0  0E10               	movlw	16
 22276  0060C2  0100               	movlb	0	; () banked
 22277  0060C4  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 22278  0060C6  0E27               	movlw	39
 22279  0060C8  0100               	movlb	0	; () banked
 22280  0060CA  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 22281  0060CC  B0D8               	btfsc	status,0,c
 22282  0060CE  D7D1               	goto	l14653
 22283  0060D0                     l14663:
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;ui.c: 71: }
 22287                           ;ui.c: 72: if(t32>9999)t32=9999;
 22288  0060D0  0100               	movlb	0	; () banked
 22289  0060D2  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 22290  0060D4  0100               	movlb	0	; () banked
 22291  0060D6  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 22292  0060D8  E108               	bnz	u13400
 22293  0060DA  0E10               	movlw	16
 22294  0060DC  0100               	movlb	0	; () banked
 22295  0060DE  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 22296  0060E0  0E27               	movlw	39
 22297  0060E2  0100               	movlb	0	; () banked
 22298  0060E4  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 22299  0060E6  A0D8               	btfss	status,0,c
 22300  0060E8  D009               	goto	l14667
 22301  0060EA                     u13400:
 22302                           
 22303                           ; BSR set to: 0
 22304  0060EA  0E0F               	movlw	15
 22305  0060EC  0100               	movlb	0	; () banked
 22306  0060EE  6F75               	movwf	___int32_2_mflot32@t32& (0+255),b
 22307  0060F0  0E27               	movlw	39
 22308  0060F2  6F76               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
 22309  0060F4  0E00               	movlw	0
 22310  0060F6  6F77               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
 22311  0060F8  0E00               	movlw	0
 22312  0060FA  6F78               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
 22313  0060FC                     l14667:
 22314                           
 22315                           ; BSR set to: 0
 22316                           ;ui.c: 73: mf.stru.significand=t32;
 22317  0060FC  C075  F079         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
 22318  006100  C076  F07A         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;ui.c: 74: return mf.t32;
 22322  006104  C079  F06D         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
 22323  006108  C07A  F06E         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
 22324  00610C  C07B  F06F         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
 22325  006110  C07C  F070         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
 22326  006114  0012               	return	
 22327  006116                     __end_of___int32_2_mflot32:
 22328                           	opt stack 0
 22329                           tosu	equ	0xFFF
 22330                           tosh	equ	0xFFE
 22331                           tosl	equ	0xFFD
 22332                           pclath	equ	0xFFA
 22333                           tblptru	equ	0xFF8
 22334                           tblptrh	equ	0xFF7
 22335                           tblptrl	equ	0xFF6
 22336                           tablat	equ	0xFF5
 22337                           prodh	equ	0xFF4
 22338                           prodl	equ	0xFF3
 22339                           intcon	equ	0xFF2
 22340                           indf0	equ	0xFEF
 22341                           postinc0	equ	0xFEE
 22342                           fsr0h	equ	0xFEA
 22343                           fsr0l	equ	0xFE9
 22344                           wreg	equ	0xFE8
 22345                           indf1	equ	0xFE7
 22346                           postinc1	equ	0xFE6
 22347                           postdec1	equ	0xFE5
 22348                           plusw1	equ	0xFE3
 22349                           fsr1h	equ	0xFE2
 22350                           fsr1l	equ	0xFE1
 22351                           indf2	equ	0xFDF
 22352                           postinc2	equ	0xFDE
 22353                           postdec2	equ	0xFDD
 22354                           plusw2	equ	0xFDB
 22355                           fsr2h	equ	0xFDA
 22356                           fsr2l	equ	0xFD9
 22357                           status	equ	0xFD8
 22358                           
 22359 ;; *************** function ___lldiv *****************
 22360 ;; Defined at:
 22361 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 22362 ;; Parameters:    Size  Location     Type
 22363 ;;  dividend        4    0[BANK0 ] unsigned long 
 22364 ;;  divisor         4    4[BANK0 ] unsigned long 
 22365 ;; Auto vars:     Size  Location     Type
 22366 ;;  quotient        4    8[BANK0 ] unsigned long 
 22367 ;;  counter         1   12[BANK0 ] unsigned char 
 22368 ;; Return value:  Size  Location     Type
 22369 ;;                  4    0[BANK0 ] unsigned long 
 22370 ;; Registers used:
 22371 ;;		wreg, status,2, status,0
 22372 ;; Tracked objects:
 22373 ;;		On entry : 0/0
 22374 ;;		On exit  : 0/0
 22375 ;;		Unchanged: 0/0
 22376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22378 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22380 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22381 ;;Total ram usage:       13 bytes
 22382 ;; Hardware stack levels used:    1
 22383 ;; Hardware stack levels required when called:    4
 22384 ;; This function calls:
 22385 ;;		Nothing
 22386 ;; This function is called by:
 22387 ;;		___int32_2_mflot32
 22388 ;; This function uses a non-reentrant model
 22389 ;;
 22390                           
 22391                           	psect	text119
 22392  007246                     __ptext119:
 22393                           	opt stack 0
 22394  007246                     ___lldiv:
 22395                           	opt stack 22
 22396                           
 22397                           ; BSR set to: 0
 22398                           ;incstack = 0
 22399  007246  0E00               	movlw	0
 22400  007248  0100               	movlb	0	; () banked
 22401  00724A  6F68               	movwf	___lldiv@quotient& (0+255),b
 22402  00724C  0E00               	movlw	0
 22403  00724E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 22404  007250  0E00               	movlw	0
 22405  007252  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 22406  007254  0E00               	movlw	0
 22407  007256  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 22408                           
 22409                           ; BSR set to: 0
 22410  007258  0100               	movlb	0	; () banked
 22411  00725A  5164               	movf	___lldiv@divisor& (0+255),w,b
 22412  00725C  0100               	movlb	0	; () banked
 22413  00725E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 22414  007260  0100               	movlb	0	; () banked
 22415  007262  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 22416  007264  0100               	movlb	0	; () banked
 22417  007266  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 22418  007268  B4D8               	btfsc	status,2,c
 22419  00726A  D042               	goto	l2737
 22420                           
 22421                           ; BSR set to: 0
 22422  00726C  0E01               	movlw	1
 22423  00726E  0100               	movlb	0	; () banked
 22424  007270  6F6C               	movwf	___lldiv@counter& (0+255),b
 22425  007272  D008               	goto	l14273
 22426  007274                     l14271:
 22427                           
 22428                           ; BSR set to: 0
 22429  007274  0100               	movlb	0	; () banked
 22430  007276  90D8               	bcf	status,0,c
 22431  007278  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 22432  00727A  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 22433  00727C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 22434  00727E  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 22435  007280  0100               	movlb	0	; () banked
 22436  007282  2B6C               	incf	___lldiv@counter& (0+255),f,b
 22437  007284                     l14273:
 22438                           
 22439                           ; BSR set to: 0
 22440  007284  0100               	movlb	0	; () banked
 22441  007286  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 22442  007288  D7F5               	goto	l14271
 22443  00728A                     l14275:
 22444                           
 22445                           ; BSR set to: 0
 22446  00728A  0100               	movlb	0	; () banked
 22447  00728C  90D8               	bcf	status,0,c
 22448  00728E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 22449  007290  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 22450  007292  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 22451  007294  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 22452                           
 22453                           ; BSR set to: 0
 22454  007296  0100               	movlb	0	; () banked
 22455  007298  5164               	movf	___lldiv@divisor& (0+255),w,b
 22456  00729A  0100               	movlb	0	; () banked
 22457  00729C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 22458  00729E  0100               	movlb	0	; () banked
 22459  0072A0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22460  0072A2  0100               	movlb	0	; () banked
 22461  0072A4  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 22462  0072A6  0100               	movlb	0	; () banked
 22463  0072A8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22464  0072AA  0100               	movlb	0	; () banked
 22465  0072AC  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 22466  0072AE  0100               	movlb	0	; () banked
 22467  0072B0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22468  0072B2  0100               	movlb	0	; () banked
 22469  0072B4  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 22470  0072B6  A0D8               	btfss	status,0,c
 22471  0072B8  D012               	goto	l14283
 22472                           
 22473                           ; BSR set to: 0
 22474  0072BA  0100               	movlb	0	; () banked
 22475  0072BC  5164               	movf	___lldiv@divisor& (0+255),w,b
 22476  0072BE  0100               	movlb	0	; () banked
 22477  0072C0  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 22478  0072C2  0100               	movlb	0	; () banked
 22479  0072C4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22480  0072C6  0100               	movlb	0	; () banked
 22481  0072C8  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 22482  0072CA  0100               	movlb	0	; () banked
 22483  0072CC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22484  0072CE  0100               	movlb	0	; () banked
 22485  0072D0  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 22486  0072D2  0100               	movlb	0	; () banked
 22487  0072D4  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22488  0072D6  0100               	movlb	0	; () banked
 22489  0072D8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 22490                           
 22491                           ; BSR set to: 0
 22492  0072DA  0100               	movlb	0	; () banked
 22493  0072DC  8168               	bsf	___lldiv@quotient& (0+255),0,b
 22494  0072DE                     l14283:
 22495                           
 22496                           ; BSR set to: 0
 22497  0072DE  0100               	movlb	0	; () banked
 22498  0072E0  90D8               	bcf	status,0,c
 22499  0072E2  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 22500  0072E4  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 22501  0072E6  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 22502  0072E8  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 22503                           
 22504                           ; BSR set to: 0
 22505  0072EA  0100               	movlb	0	; () banked
 22506  0072EC  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 22507  0072EE  D7CD               	goto	l14275
 22508  0072F0                     l2737:
 22509                           
 22510                           ; BSR set to: 0
 22511  0072F0  C068  F060         	movff	___lldiv@quotient,?___lldiv
 22512  0072F4  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 22513  0072F8  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 22514  0072FC  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 22515                           
 22516                           ; BSR set to: 0
 22517  007300  0012               	return		;funcret
 22518  007302                     __end_of___lldiv:
 22519                           	opt stack 0
 22520                           tosu	equ	0xFFF
 22521                           tosh	equ	0xFFE
 22522                           tosl	equ	0xFFD
 22523                           pclath	equ	0xFFA
 22524                           tblptru	equ	0xFF8
 22525                           tblptrh	equ	0xFF7
 22526                           tblptrl	equ	0xFF6
 22527                           tablat	equ	0xFF5
 22528                           prodh	equ	0xFF4
 22529                           prodl	equ	0xFF3
 22530                           intcon	equ	0xFF2
 22531                           indf0	equ	0xFEF
 22532                           postinc0	equ	0xFEE
 22533                           fsr0h	equ	0xFEA
 22534                           fsr0l	equ	0xFE9
 22535                           wreg	equ	0xFE8
 22536                           indf1	equ	0xFE7
 22537                           postinc1	equ	0xFE6
 22538                           postdec1	equ	0xFE5
 22539                           plusw1	equ	0xFE3
 22540                           fsr1h	equ	0xFE2
 22541                           fsr1l	equ	0xFE1
 22542                           indf2	equ	0xFDF
 22543                           postinc2	equ	0xFDE
 22544                           postdec2	equ	0xFDD
 22545                           plusw2	equ	0xFDB
 22546                           fsr2h	equ	0xFDA
 22547                           fsr2l	equ	0xFD9
 22548                           status	equ	0xFD8
 22549                           
 22550 ;; *************** function _ui_disp_menu_epr_ilp_scale_adj *****************
 22551 ;; Defined at:
 22552 ;;		line 694 in file "src/api/ui.c"
 22553 ;; Parameters:    Size  Location     Type
 22554 ;;		None
 22555 ;; Auto vars:     Size  Location     Type
 22556 ;;  buf             6   42[BANK0 ] unsigned char [6]
 22557 ;; Return value:  Size  Location     Type
 22558 ;;                  1    wreg      void 
 22559 ;; Registers used:
 22560 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22561 ;; Tracked objects:
 22562 ;;		On entry : 0/0
 22563 ;;		On exit  : 0/0
 22564 ;;		Unchanged: 0/0
 22565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22567 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22569 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22570 ;;Total ram usage:        6 bytes
 22571 ;; Hardware stack levels used:    1
 22572 ;; Hardware stack levels required when called:   10
 22573 ;; This function calls:
 22574 ;;		_lcd_disp_all
 22575 ;;		_lcd_disp_logo
 22576 ;;		_m_mem_cpy
 22577 ;;		_ui_disp_adj_xfloat_pt
 22578 ;; This function is called by:
 22579 ;;		_ui_disp_menu
 22580 ;; This function uses a non-reentrant model
 22581 ;;
 22582                           
 22583                           	psect	text120
 22584  006F44                     __ptext120:
 22585                           	opt stack 0
 22586  006F44                     _ui_disp_menu_epr_ilp_scale_adj:
 22587                           	opt stack 18
 22588                           
 22589                           ;ui.c: 696: uint8_t buf[6];
 22590                           ;ui.c: 697: lcd_disp_all(0x00);;
 22591                           
 22592                           ; BSR set to: 0
 22593                           ;incstack = 0
 22594  006F44  0E00               	movlw	0
 22595  006F46  EC4D  F04F         	call	_lcd_disp_all
 22596                           
 22597                           ;ui.c: 698: lcd_disp_logo(1);
 22598  006F4A  0E01               	movlw	1
 22599  006F4C  EC35  F04F         	call	_lcd_disp_logo
 22600                           
 22601                           ;ui.c: 699: switch(subMenu){
 22602  006F50  D03C               	goto	l16499
 22603  006F52                     l16489:
 22604  006F52  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22605  006F54  0100               	movlb	0	; () banked
 22606  006F56  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22607  006F58  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22608  006F5A  0100               	movlb	0	; () banked
 22609  006F5C  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22610  006F5E  0EDB               	movlw	low STR_27
 22611  006F60  0100               	movlb	0	; () banked
 22612  006F62  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22613  006F64  0EF3               	movlw	high STR_27
 22614  006F66  0100               	movlb	0	; () banked
 22615  006F68  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22616  006F6A  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22617  006F6E  D03B               	goto	l16501
 22618  006F70                     l16491:
 22619  006F70  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22620  006F72  0100               	movlb	0	; () banked
 22621  006F74  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22622  006F76  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22623  006F78  0100               	movlb	0	; () banked
 22624  006F7A  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22625  006F7C  0EAE               	movlw	low STR_28
 22626  006F7E  0100               	movlb	0	; () banked
 22627  006F80  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22628  006F82  0EF3               	movlw	high STR_28
 22629  006F84  0100               	movlb	0	; () banked
 22630  006F86  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22631  006F88  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22632  006F8C  D02C               	goto	l16501
 22633  006F8E                     l16493:
 22634  006F8E  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22635  006F90  0100               	movlb	0	; () banked
 22636  006F92  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22637  006F94  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22638  006F96  0100               	movlb	0	; () banked
 22639  006F98  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22640  006F9A  0EE0               	movlw	low STR_29
 22641  006F9C  0100               	movlb	0	; () banked
 22642  006F9E  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22643  006FA0  0EF3               	movlw	high STR_29
 22644  006FA2  0100               	movlb	0	; () banked
 22645  006FA4  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22646  006FA6  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22647  006FAA  D01D               	goto	l16501
 22648  006FAC                     l16495:
 22649  006FAC  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22650  006FAE  0100               	movlb	0	; () banked
 22651  006FB0  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22652  006FB2  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22653  006FB4  0100               	movlb	0	; () banked
 22654  006FB6  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22655  006FB8  0EB3               	movlw	low STR_30
 22656  006FBA  0100               	movlb	0	; () banked
 22657  006FBC  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22658  006FBE  0EF3               	movlw	high STR_30
 22659  006FC0  0100               	movlb	0	; () banked
 22660  006FC2  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22661  006FC4  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22662  006FC8  D00E               	goto	l16501
 22663  006FCA                     l16499:
 22664  006FCA  5032               	movf	_subMenu,w,c	;volatile
 22665                           
 22666                           ; Switch size 1, requested type "space"
 22667                           ; Number of cases is 4, Range of values is 0 to 3
 22668                           ; switch strategies available:
 22669                           ; Name         Instructions Cycles
 22670                           ; simple_byte           13     7 (average)
 22671                           ;	Chosen strategy is simple_byte
 22672  006FCC  0A00               	xorlw	0	; case 0
 22673  006FCE  B4D8               	btfsc	status,2,c
 22674  006FD0  D7C0               	goto	l16489
 22675  006FD2  0A01               	xorlw	1	; case 1
 22676  006FD4  B4D8               	btfsc	status,2,c
 22677  006FD6  D7CC               	goto	l16491
 22678  006FD8  0A03               	xorlw	3	; case 2
 22679  006FDA  B4D8               	btfsc	status,2,c
 22680  006FDC  D7D8               	goto	l16493
 22681  006FDE  0A01               	xorlw	1	; case 3
 22682  006FE0  A4D8               	btfss	status,2,c
 22683  006FE2  0012               	return	
 22684  006FE4  D7E3               	goto	l16495
 22685  006FE6                     l16501:
 22686                           
 22687                           ;ui.c: 706: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 22688  006FE6  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22689  006FE8  0100               	movlb	0	; () banked
 22690  006FEA  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22691  006FEC  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22692  006FEE  0100               	movlb	0	; () banked
 22693  006FF0  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22694  006FF2  0E35               	movlw	low _m_floatAdj
 22695  006FF4  0100               	movlb	0	; () banked
 22696  006FF6  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22697  006FF8  0E00               	movlw	high _m_floatAdj
 22698  006FFA  0100               	movlb	0	; () banked
 22699  006FFC  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22700  006FFE  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22701  007002  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22702  007006  0012               	return		;funcret
 22703  007008                     __end_of_ui_disp_menu_epr_ilp_scale_adj:
 22704                           	opt stack 0
 22705                           tosu	equ	0xFFF
 22706                           tosh	equ	0xFFE
 22707                           tosl	equ	0xFFD
 22708                           pclath	equ	0xFFA
 22709                           tblptru	equ	0xFF8
 22710                           tblptrh	equ	0xFF7
 22711                           tblptrl	equ	0xFF6
 22712                           tablat	equ	0xFF5
 22713                           prodh	equ	0xFF4
 22714                           prodl	equ	0xFF3
 22715                           intcon	equ	0xFF2
 22716                           indf0	equ	0xFEF
 22717                           postinc0	equ	0xFEE
 22718                           fsr0h	equ	0xFEA
 22719                           fsr0l	equ	0xFE9
 22720                           wreg	equ	0xFE8
 22721                           indf1	equ	0xFE7
 22722                           postinc1	equ	0xFE6
 22723                           postdec1	equ	0xFE5
 22724                           plusw1	equ	0xFE3
 22725                           fsr1h	equ	0xFE2
 22726                           fsr1l	equ	0xFE1
 22727                           indf2	equ	0xFDF
 22728                           postinc2	equ	0xFDE
 22729                           postdec2	equ	0xFDD
 22730                           plusw2	equ	0xFDB
 22731                           fsr2h	equ	0xFDA
 22732                           fsr2l	equ	0xFD9
 22733                           status	equ	0xFD8
 22734                           
 22735 ;; *************** function _ui_disp_menu_epr_calib_adj *****************
 22736 ;; Defined at:
 22737 ;;		line 679 in file "src/api/ui.c"
 22738 ;; Parameters:    Size  Location     Type
 22739 ;;		None
 22740 ;; Auto vars:     Size  Location     Type
 22741 ;;  buf             6   42[BANK0 ] unsigned char [6]
 22742 ;; Return value:  Size  Location     Type
 22743 ;;                  1    wreg      void 
 22744 ;; Registers used:
 22745 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22746 ;; Tracked objects:
 22747 ;;		On entry : 0/0
 22748 ;;		On exit  : 0/0
 22749 ;;		Unchanged: 0/0
 22750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22752 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22754 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22755 ;;Total ram usage:        6 bytes
 22756 ;; Hardware stack levels used:    1
 22757 ;; Hardware stack levels required when called:   10
 22758 ;; This function calls:
 22759 ;;		_lcd_disp_all
 22760 ;;		_lcd_disp_logo
 22761 ;;		_m_mem_cpy
 22762 ;;		_ui_disp_adj_xfloat_pt
 22763 ;; This function is called by:
 22764 ;;		_ui_disp_menu
 22765 ;; This function uses a non-reentrant model
 22766 ;;
 22767                           
 22768                           	psect	text121
 22769  007008                     __ptext121:
 22770                           	opt stack 0
 22771  007008                     _ui_disp_menu_epr_calib_adj:
 22772                           	opt stack 18
 22773                           
 22774                           ;ui.c: 681: uint8_t buf[6];
 22775                           ;ui.c: 682: lcd_disp_all(0x00);;
 22776                           
 22777                           ;incstack = 0
 22778  007008  0E00               	movlw	0
 22779  00700A  EC4D  F04F         	call	_lcd_disp_all
 22780                           
 22781                           ;ui.c: 683: lcd_disp_logo(1);
 22782  00700E  0E01               	movlw	1
 22783  007010  EC35  F04F         	call	_lcd_disp_logo
 22784                           
 22785                           ;ui.c: 684: switch(subMenu){
 22786  007014  D03C               	goto	l16483
 22787  007016                     l16473:
 22788  007016  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22789  007018  0100               	movlb	0	; () banked
 22790  00701A  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22791  00701C  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22792  00701E  0100               	movlb	0	; () banked
 22793  007020  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22794  007022  0E8B               	movlw	low STR_23
 22795  007024  0100               	movlb	0	; () banked
 22796  007026  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22797  007028  0EF3               	movlw	high STR_23
 22798  00702A  0100               	movlb	0	; () banked
 22799  00702C  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22800  00702E  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22801  007032  D03A               	goto	l16485
 22802  007034                     l16475:
 22803  007034  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22804  007036  0100               	movlb	0	; () banked
 22805  007038  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22806  00703A  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22807  00703C  0100               	movlb	0	; () banked
 22808  00703E  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22809  007040  0E9F               	movlw	low STR_24
 22810  007042  0100               	movlb	0	; () banked
 22811  007044  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22812  007046  0EF3               	movlw	high STR_24
 22813  007048  0100               	movlb	0	; () banked
 22814  00704A  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22815  00704C  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22816  007050  D02B               	goto	l16485
 22817  007052                     l16477:
 22818  007052  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22819  007054  0100               	movlb	0	; () banked
 22820  007056  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22821  007058  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22822  00705A  0100               	movlb	0	; () banked
 22823  00705C  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22824  00705E  0E90               	movlw	low STR_25
 22825  007060  0100               	movlb	0	; () banked
 22826  007062  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22827  007064  0EF3               	movlw	high STR_25
 22828  007066  0100               	movlb	0	; () banked
 22829  007068  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22830  00706A  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22831  00706E  D01C               	goto	l16485
 22832  007070                     l16479:
 22833  007070  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22834  007072  0100               	movlb	0	; () banked
 22835  007074  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22836  007076  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22837  007078  0100               	movlb	0	; () banked
 22838  00707A  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22839  00707C  0EA4               	movlw	low STR_26
 22840  00707E  0100               	movlb	0	; () banked
 22841  007080  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22842  007082  0EF3               	movlw	high STR_26
 22843  007084  0100               	movlb	0	; () banked
 22844  007086  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22845  007088  ECB8  F045         	call	_m_mem_cpy	;wreg free
 22846                           
 22847                           ;ui.c: 690: }
 22848                           
 22849                           ;ui.c: 689: default: break;
 22850  00708C  D00D               	goto	l16485
 22851  00708E                     l16483:
 22852  00708E  5032               	movf	_subMenu,w,c	;volatile
 22853                           
 22854                           ; Switch size 1, requested type "space"
 22855                           ; Number of cases is 4, Range of values is 0 to 3
 22856                           ; switch strategies available:
 22857                           ; Name         Instructions Cycles
 22858                           ; simple_byte           13     7 (average)
 22859                           ;	Chosen strategy is simple_byte
 22860  007090  0A00               	xorlw	0	; case 0
 22861  007092  B4D8               	btfsc	status,2,c
 22862  007094  D7C0               	goto	l16473
 22863  007096  0A01               	xorlw	1	; case 1
 22864  007098  B4D8               	btfsc	status,2,c
 22865  00709A  D7CC               	goto	l16475
 22866  00709C  0A03               	xorlw	3	; case 2
 22867  00709E  B4D8               	btfsc	status,2,c
 22868  0070A0  D7D8               	goto	l16477
 22869  0070A2  0A01               	xorlw	1	; case 3
 22870  0070A4  B4D8               	btfsc	status,2,c
 22871  0070A6  D7E4               	goto	l16479
 22872  0070A8                     l16485:
 22873                           
 22874                           ;ui.c: 691: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 22875  0070A8  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22876  0070AA  0100               	movlb	0	; () banked
 22877  0070AC  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22878  0070AE  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22879  0070B0  0100               	movlb	0	; () banked
 22880  0070B2  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22881  0070B4  0E35               	movlw	low _m_floatAdj
 22882  0070B6  0100               	movlb	0	; () banked
 22883  0070B8  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22884  0070BA  0E00               	movlw	high _m_floatAdj
 22885  0070BC  0100               	movlb	0	; () banked
 22886  0070BE  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22887  0070C0  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22888  0070C4  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22889  0070C8  0012               	return		;funcret
 22890  0070CA                     __end_of_ui_disp_menu_epr_calib_adj:
 22891                           	opt stack 0
 22892                           tosu	equ	0xFFF
 22893                           tosh	equ	0xFFE
 22894                           tosl	equ	0xFFD
 22895                           pclath	equ	0xFFA
 22896                           tblptru	equ	0xFF8
 22897                           tblptrh	equ	0xFF7
 22898                           tblptrl	equ	0xFF6
 22899                           tablat	equ	0xFF5
 22900                           prodh	equ	0xFF4
 22901                           prodl	equ	0xFF3
 22902                           intcon	equ	0xFF2
 22903                           indf0	equ	0xFEF
 22904                           postinc0	equ	0xFEE
 22905                           fsr0h	equ	0xFEA
 22906                           fsr0l	equ	0xFE9
 22907                           wreg	equ	0xFE8
 22908                           indf1	equ	0xFE7
 22909                           postinc1	equ	0xFE6
 22910                           postdec1	equ	0xFE5
 22911                           plusw1	equ	0xFE3
 22912                           fsr1h	equ	0xFE2
 22913                           fsr1l	equ	0xFE1
 22914                           indf2	equ	0xFDF
 22915                           postinc2	equ	0xFDE
 22916                           postdec2	equ	0xFDD
 22917                           plusw2	equ	0xFDB
 22918                           fsr2h	equ	0xFDA
 22919                           fsr2l	equ	0xFD9
 22920                           status	equ	0xFD8
 22921                           
 22922 ;; *************** function _ui_disp_menu_density_adj *****************
 22923 ;; Defined at:
 22924 ;;		line 474 in file "src/api/ui.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;		None
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;		None
 22929 ;; Return value:  Size  Location     Type
 22930 ;;                  1    wreg      void 
 22931 ;; Registers used:
 22932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22933 ;; Tracked objects:
 22934 ;;		On entry : 0/0
 22935 ;;		On exit  : 0/0
 22936 ;;		Unchanged: 0/0
 22937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22942 ;;Total ram usage:        0 bytes
 22943 ;; Hardware stack levels used:    1
 22944 ;; Hardware stack levels required when called:   10
 22945 ;; This function calls:
 22946 ;;		_lcd_disp_all
 22947 ;;		_lcd_disp_logo
 22948 ;;		_ui_disp_adj_xfloat_pt
 22949 ;; This function is called by:
 22950 ;;		_ui_disp_menu
 22951 ;; This function uses a non-reentrant model
 22952 ;;
 22953                           
 22954                           	psect	text122
 22955  009EF8                     __ptext122:
 22956                           	opt stack 0
 22957  009EF8                     _ui_disp_menu_density_adj:
 22958                           	opt stack 18
 22959                           
 22960                           ;ui.c: 476: lcd_disp_all(0x00);;
 22961                           
 22962                           ;incstack = 0
 22963  009EF8  0E00               	movlw	0
 22964  009EFA  EC4D  F04F         	call	_lcd_disp_all
 22965                           
 22966                           ;ui.c: 477: lcd_disp_logo(1);
 22967  009EFE  0E01               	movlw	1
 22968  009F00  EC35  F04F         	call	_lcd_disp_logo
 22969                           
 22970                           ;ui.c: 478: ui_disp_adj_xfloat_pt((uint8_t*)"   p",&m_floatAdj,adjLocation);
 22971  009F04  0EEA               	movlw	low STR_6
 22972  009F06  0100               	movlb	0	; () banked
 22973  009F08  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22974  009F0A  0EF3               	movlw	high STR_6
 22975  009F0C  0100               	movlb	0	; () banked
 22976  009F0E  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22977  009F10  0E35               	movlw	low _m_floatAdj
 22978  009F12  0100               	movlb	0	; () banked
 22979  009F14  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22980  009F16  0E00               	movlw	high _m_floatAdj
 22981  009F18  0100               	movlb	0	; () banked
 22982  009F1A  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22983  009F1C  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22984  009F20  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22985  009F24  0012               	return		;funcret
 22986  009F26                     __end_of_ui_disp_menu_density_adj:
 22987                           	opt stack 0
 22988                           tosu	equ	0xFFF
 22989                           tosh	equ	0xFFE
 22990                           tosl	equ	0xFFD
 22991                           pclath	equ	0xFFA
 22992                           tblptru	equ	0xFF8
 22993                           tblptrh	equ	0xFF7
 22994                           tblptrl	equ	0xFF6
 22995                           tablat	equ	0xFF5
 22996                           prodh	equ	0xFF4
 22997                           prodl	equ	0xFF3
 22998                           intcon	equ	0xFF2
 22999                           indf0	equ	0xFEF
 23000                           postinc0	equ	0xFEE
 23001                           fsr0h	equ	0xFEA
 23002                           fsr0l	equ	0xFE9
 23003                           wreg	equ	0xFE8
 23004                           indf1	equ	0xFE7
 23005                           postinc1	equ	0xFE6
 23006                           postdec1	equ	0xFE5
 23007                           plusw1	equ	0xFE3
 23008                           fsr1h	equ	0xFE2
 23009                           fsr1l	equ	0xFE1
 23010                           indf2	equ	0xFDF
 23011                           postinc2	equ	0xFDE
 23012                           postdec2	equ	0xFDD
 23013                           plusw2	equ	0xFDB
 23014                           fsr2h	equ	0xFDA
 23015                           fsr2l	equ	0xFD9
 23016                           status	equ	0xFD8
 23017                           
 23018 ;; *************** function _ui_disp_menu_calib_pr_adj *****************
 23019 ;; Defined at:
 23020 ;;		line 563 in file "src/api/ui.c"
 23021 ;; Parameters:    Size  Location     Type
 23022 ;;		None
 23023 ;; Auto vars:     Size  Location     Type
 23024 ;;  buf            10   42[BANK0 ] unsigned char [10]
 23025 ;;  t8              1   52[BANK0 ] unsigned char 
 23026 ;; Return value:  Size  Location     Type
 23027 ;;                  1    wreg      void 
 23028 ;; Registers used:
 23029 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23030 ;; Tracked objects:
 23031 ;;		On entry : 0/0
 23032 ;;		On exit  : 0/0
 23033 ;;		Unchanged: 0/0
 23034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23036 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23038 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23039 ;;Total ram usage:       11 bytes
 23040 ;; Hardware stack levels used:    1
 23041 ;; Hardware stack levels required when called:   10
 23042 ;; This function calls:
 23043 ;;		___awmod
 23044 ;;		___lbdiv
 23045 ;;		_lcd_disp_all
 23046 ;;		_lcd_disp_logo
 23047 ;;		_lcd_disp_refresh
 23048 ;;		_lcd_show_string
 23049 ;;		_m_mem_cpy
 23050 ;;		_ui_disp_adj_xfloat_pt
 23051 ;; This function is called by:
 23052 ;;		_ui_disp_menu
 23053 ;; This function uses a non-reentrant model
 23054 ;;
 23055                           
 23056                           	psect	text123
 23057  0067F8                     __ptext123:
 23058                           	opt stack 0
 23059  0067F8                     _ui_disp_menu_calib_pr_adj:
 23060                           	opt stack 18
 23061                           
 23062                           ;ui.c: 565: uint8_t t8;
 23063                           ;ui.c: 566: uint8_t buf[10];
 23064                           ;ui.c: 567: lcd_disp_all(0x00);;
 23065                           
 23066                           ;incstack = 0
 23067  0067F8  0E00               	movlw	0
 23068  0067FA  EC4D  F04F         	call	_lcd_disp_all
 23069                           
 23070                           ;ui.c: 568: lcd_disp_logo(1);
 23071  0067FE  0E01               	movlw	1
 23072  006800  EC35  F04F         	call	_lcd_disp_logo
 23073                           
 23074                           ;ui.c: 569: buf[0]=' ';
 23075  006804  0E20               	movlw	32
 23076  006806  0100               	movlb	0	; () banked
 23077  006808  6F8A               	movwf	ui_disp_menu_calib_pr_adj@buf& (0+255),b
 23078                           
 23079                           ; BSR set to: 0
 23080                           ;ui.c: 573: buf[1]='p';
 23081  00680A  0E70               	movlw	112
 23082  00680C  0100               	movlb	0	; () banked
 23083  00680E  6F8B               	movwf	(ui_disp_menu_calib_pr_adj@buf+1)& (0+255),b
 23084                           
 23085                           ; BSR set to: 0
 23086                           ;ui.c: 574: t8=calibCol;
 23087  006810  C030  F094         	movff	_calibCol,ui_disp_menu_calib_pr_adj@t8	;volatile
 23088                           
 23089                           ; BSR set to: 0
 23090                           ;ui.c: 575: buf[3]='0'+t8%10;
 23091  006814  C094  F060         	movff	ui_disp_menu_calib_pr_adj@t8,___awmod@dividend
 23092  006818  0100               	movlb	0	; () banked
 23093  00681A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23094  00681C  0E00               	movlw	0
 23095  00681E  0100               	movlb	0	; () banked
 23096  006820  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23097  006822  0E0A               	movlw	10
 23098  006824  6F62               	movwf	___awmod@divisor& (0+255),b
 23099  006826  ECE8  F03C         	call	___awmod	;wreg free
 23100  00682A  0100               	movlb	0	; () banked
 23101  00682C  5160               	movf	?___awmod& (0+255),w,b
 23102  00682E  0F30               	addlw	48
 23103  006830  0100               	movlb	0	; () banked
 23104  006832  6F8D               	movwf	(ui_disp_menu_calib_pr_adj@buf+3)& (0+255),b
 23105                           
 23106                           ; BSR set to: 0
 23107                           ;ui.c: 576: t8/=10;
 23108  006834  0E0A               	movlw	10
 23109  006836  6E20               	movwf	___lbdiv@divisor,c
 23110  006838  0100               	movlb	0	; () banked
 23111  00683A  5194               	movf	ui_disp_menu_calib_pr_adj@t8& (0+255),w,b
 23112  00683C  ECBC  F04B         	call	___lbdiv
 23113  006840  0100               	movlb	0	; () banked
 23114  006842  6F94               	movwf	ui_disp_menu_calib_pr_adj@t8& (0+255),b
 23115                           
 23116                           ; BSR set to: 0
 23117                           ;ui.c: 577: buf[2]='0'+t8%10;
 23118  006844  C094  F060         	movff	ui_disp_menu_calib_pr_adj@t8,___awmod@dividend
 23119  006848  0100               	movlb	0	; () banked
 23120  00684A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23121  00684C  0E00               	movlw	0
 23122  00684E  0100               	movlb	0	; () banked
 23123  006850  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23124  006852  0E0A               	movlw	10
 23125  006854  6F62               	movwf	___awmod@divisor& (0+255),b
 23126  006856  ECE8  F03C         	call	___awmod	;wreg free
 23127  00685A  0100               	movlb	0	; () banked
 23128  00685C  5160               	movf	?___awmod& (0+255),w,b
 23129  00685E  0F30               	addlw	48
 23130  006860  0100               	movlb	0	; () banked
 23131  006862  6F8C               	movwf	(ui_disp_menu_calib_pr_adj@buf+2)& (0+255),b
 23132                           
 23133                           ; BSR set to: 0
 23134                           ;ui.c: 578: buf[4]='\0';
 23135  006864  0E00               	movlw	0
 23136  006866  0100               	movlb	0	; () banked
 23137  006868  6F8E               	movwf	(ui_disp_menu_calib_pr_adj@buf+4)& (0+255),b
 23138                           
 23139                           ; BSR set to: 0
 23140                           ;ui.c: 579: if(calibCol){
 23141  00686A  5030               	movf	_calibCol,w,c	;volatile
 23142  00686C  B4D8               	btfsc	status,2,c
 23143  00686E  D011               	goto	l16381
 23144                           
 23145                           ; BSR set to: 0
 23146                           ;ui.c: 580: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 23147  006870  0E8A               	movlw	low ui_disp_menu_calib_pr_adj@buf
 23148  006872  0100               	movlb	0	; () banked
 23149  006874  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 23150  006876  0E00               	movlw	high ui_disp_menu_calib_pr_adj@buf
 23151  006878  0100               	movlb	0	; () banked
 23152  00687A  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 23153  00687C  0E35               	movlw	low _m_floatAdj
 23154  00687E  0100               	movlb	0	; () banked
 23155  006880  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 23156  006882  0E00               	movlw	high _m_floatAdj
 23157  006884  0100               	movlb	0	; () banked
 23158  006886  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 23159  006888  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 23160  00688C  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 23161                           
 23162                           ;ui.c: 581: }else{
 23163  006890  0012               	return	
 23164  006892                     l16381:
 23165                           
 23166                           ;ui.c: 582: m_mem_cpy(buf+4,"    ");
 23167  006892  0E8E               	movlw	low (ui_disp_menu_calib_pr_adj@buf+4)
 23168  006894  0100               	movlb	0	; () banked
 23169  006896  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23170  006898  0E00               	movlw	high (ui_disp_menu_calib_pr_adj@buf+4)
 23171  00689A  0100               	movlb	0	; () banked
 23172  00689C  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23173  00689E  0E74               	movlw	low (STR_2+4)
 23174  0068A0  0100               	movlb	0	; () banked
 23175  0068A2  6F62               	movwf	m_mem_cpy@s& (0+255),b
 23176  0068A4  0EF3               	movlw	high (STR_2+4)
 23177  0068A6  0100               	movlb	0	; () banked
 23178  0068A8  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 23179  0068AA  ECB8  F045         	call	_m_mem_cpy	;wreg free
 23180                           
 23181                           ;ui.c: 583: t8=*((uint8_t*)(&adjValue));
 23182  0068AE  C039  F094         	movff	_adjValue,ui_disp_menu_calib_pr_adj@t8
 23183                           
 23184                           ;ui.c: 584: buf[7]='0'+ t8;
 23185  0068B2  0100               	movlb	0	; () banked
 23186  0068B4  5194               	movf	ui_disp_menu_calib_pr_adj@t8& (0+255),w,b
 23187  0068B6  0F30               	addlw	48
 23188  0068B8  0100               	movlb	0	; () banked
 23189  0068BA  6F91               	movwf	(ui_disp_menu_calib_pr_adj@buf+7)& (0+255),b
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;ui.c: 585: buf[8]='\0';
 23193  0068BC  0E00               	movlw	0
 23194  0068BE  0100               	movlb	0	; () banked
 23195  0068C0  6F92               	movwf	(ui_disp_menu_calib_pr_adj@buf+8)& (0+255),b
 23196                           
 23197                           ; BSR set to: 0
 23198                           ;ui.c: 586: lcd_show_string(buf);
 23199  0068C2  0E8A               	movlw	low ui_disp_menu_calib_pr_adj@buf
 23200  0068C4  0100               	movlb	0	; () banked
 23201  0068C6  6F73               	movwf	lcd_show_string@str& (0+255),b
 23202  0068C8  0E00               	movlw	high ui_disp_menu_calib_pr_adj@buf
 23203  0068CA  0100               	movlb	0	; () banked
 23204  0068CC  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 23205  0068CE  EC4B  F045         	call	_lcd_show_string	;wreg free
 23206                           
 23207                           ;ui.c: 587: lcd_disp_refresh();
 23208  0068D2  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 23209  0068D6  0012               	return	
 23210  0068D8                     __end_of_ui_disp_menu_calib_pr_adj:
 23211                           	opt stack 0
 23212                           tosu	equ	0xFFF
 23213                           tosh	equ	0xFFE
 23214                           tosl	equ	0xFFD
 23215                           pclath	equ	0xFFA
 23216                           tblptru	equ	0xFF8
 23217                           tblptrh	equ	0xFF7
 23218                           tblptrl	equ	0xFF6
 23219                           tablat	equ	0xFF5
 23220                           prodh	equ	0xFF4
 23221                           prodl	equ	0xFF3
 23222                           intcon	equ	0xFF2
 23223                           indf0	equ	0xFEF
 23224                           postinc0	equ	0xFEE
 23225                           fsr0h	equ	0xFEA
 23226                           fsr0l	equ	0xFE9
 23227                           wreg	equ	0xFE8
 23228                           indf1	equ	0xFE7
 23229                           postinc1	equ	0xFE6
 23230                           postdec1	equ	0xFE5
 23231                           plusw1	equ	0xFE3
 23232                           fsr1h	equ	0xFE2
 23233                           fsr1l	equ	0xFE1
 23234                           indf2	equ	0xFDF
 23235                           postinc2	equ	0xFDE
 23236                           postdec2	equ	0xFDD
 23237                           plusw2	equ	0xFDB
 23238                           fsr2h	equ	0xFDA
 23239                           fsr2l	equ	0xFD9
 23240                           status	equ	0xFD8
 23241                           
 23242 ;; *************** function _ui_disp_menu_calib_diff_adj *****************
 23243 ;; Defined at:
 23244 ;;		line 535 in file "src/api/ui.c"
 23245 ;; Parameters:    Size  Location     Type
 23246 ;;		None
 23247 ;; Auto vars:     Size  Location     Type
 23248 ;;  buf            10   42[BANK0 ] unsigned char [10]
 23249 ;;  t8              1   52[BANK0 ] unsigned char 
 23250 ;; Return value:  Size  Location     Type
 23251 ;;                  1    wreg      void 
 23252 ;; Registers used:
 23253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23254 ;; Tracked objects:
 23255 ;;		On entry : 0/0
 23256 ;;		On exit  : 0/0
 23257 ;;		Unchanged: 0/0
 23258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23260 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23262 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23263 ;;Total ram usage:       11 bytes
 23264 ;; Hardware stack levels used:    1
 23265 ;; Hardware stack levels required when called:   10
 23266 ;; This function calls:
 23267 ;;		___awmod
 23268 ;;		___lbdiv
 23269 ;;		_lcd_disp_all
 23270 ;;		_lcd_disp_logo
 23271 ;;		_lcd_disp_refresh
 23272 ;;		_lcd_show_string
 23273 ;;		_m_mem_cpy
 23274 ;;		_ui_disp_adj_xfloat_pt
 23275 ;; This function is called by:
 23276 ;;		_ui_disp_menu
 23277 ;; This function uses a non-reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text124
 23281  006522                     __ptext124:
 23282                           	opt stack 0
 23283  006522                     _ui_disp_menu_calib_diff_adj:
 23284                           	opt stack 18
 23285                           
 23286                           ;ui.c: 537: uint8_t t8;
 23287                           ;ui.c: 538: uint8_t buf[10];
 23288                           ;ui.c: 539: lcd_disp_all(0x00);;
 23289                           
 23290                           ;incstack = 0
 23291  006522  0E00               	movlw	0
 23292  006524  EC4D  F04F         	call	_lcd_disp_all
 23293                           
 23294                           ;ui.c: 540: lcd_disp_logo(1);
 23295  006528  0E01               	movlw	1
 23296  00652A  EC35  F04F         	call	_lcd_disp_logo
 23297                           
 23298                           ;ui.c: 541: buf[0]='d';
 23299  00652E  0E64               	movlw	100
 23300  006530  0100               	movlb	0	; () banked
 23301  006532  6F8A               	movwf	ui_disp_menu_calib_diff_adj@buf& (0+255),b
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;ui.c: 542: if(calibRow==0)buf[1]='l';
 23305  006534  5031               	movf	_calibRow,w,c	;volatile
 23306  006536  A4D8               	btfss	status,2,c
 23307  006538  D002               	goto	l16327
 23308                           
 23309                           ; BSR set to: 0
 23310  00653A  0E6C               	movlw	108
 23311  00653C  D00A               	goto	L22
 23312  00653E                     l16327:
 23313                           
 23314                           ; BSR set to: 0
 23315                           ;ui.c: 543: else if(calibRow==1)buf[1]='c';
 23316  00653E  0431               	decf	_calibRow,w,c	;volatile
 23317  006540  A4D8               	btfss	status,2,c
 23318  006542  D002               	goto	l16331
 23319                           
 23320                           ; BSR set to: 0
 23321  006544  0E63               	movlw	99
 23322  006546  D005               	goto	L22
 23323  006548                     l16331:
 23324                           
 23325                           ; BSR set to: 0
 23326                           ;ui.c: 544: else if(calibRow==2)buf[1]='h';
 23327  006548  0E02               	movlw	2
 23328  00654A  1831               	xorwf	_calibRow,w,c	;volatile
 23329  00654C  A4D8               	btfss	status,2,c
 23330  00654E  D003               	goto	l16335
 23331                           
 23332                           ; BSR set to: 0
 23333  006550  0E68               	movlw	104
 23334  006552                     L22:
 23335  006552  0100               	movlb	0	; () banked
 23336  006554  6F8B               	movwf	(ui_disp_menu_calib_diff_adj@buf+1)& (0+255),b
 23337  006556                     l16335:
 23338                           
 23339                           ; BSR set to: 0
 23340                           ;ui.c: 546: t8=calibCol;
 23341  006556  C030  F094         	movff	_calibCol,ui_disp_menu_calib_diff_adj@t8	;volatile
 23342                           
 23343                           ; BSR set to: 0
 23344                           ;ui.c: 547: buf[3]='0'+t8%10;
 23345  00655A  C094  F060         	movff	ui_disp_menu_calib_diff_adj@t8,___awmod@dividend
 23346  00655E  0100               	movlb	0	; () banked
 23347  006560  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23348  006562  0E00               	movlw	0
 23349  006564  0100               	movlb	0	; () banked
 23350  006566  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23351  006568  0E0A               	movlw	10
 23352  00656A  6F62               	movwf	___awmod@divisor& (0+255),b
 23353  00656C  ECE8  F03C         	call	___awmod	;wreg free
 23354  006570  0100               	movlb	0	; () banked
 23355  006572  5160               	movf	?___awmod& (0+255),w,b
 23356  006574  0F30               	addlw	48
 23357  006576  0100               	movlb	0	; () banked
 23358  006578  6F8D               	movwf	(ui_disp_menu_calib_diff_adj@buf+3)& (0+255),b
 23359                           
 23360                           ; BSR set to: 0
 23361                           ;ui.c: 548: t8/=10;
 23362  00657A  0E0A               	movlw	10
 23363  00657C  6E20               	movwf	___lbdiv@divisor,c
 23364  00657E  0100               	movlb	0	; () banked
 23365  006580  5194               	movf	ui_disp_menu_calib_diff_adj@t8& (0+255),w,b
 23366  006582  ECBC  F04B         	call	___lbdiv
 23367  006586  0100               	movlb	0	; () banked
 23368  006588  6F94               	movwf	ui_disp_menu_calib_diff_adj@t8& (0+255),b
 23369                           
 23370                           ; BSR set to: 0
 23371                           ;ui.c: 549: buf[2]='0'+t8%10;
 23372  00658A  C094  F060         	movff	ui_disp_menu_calib_diff_adj@t8,___awmod@dividend
 23373  00658E  0100               	movlb	0	; () banked
 23374  006590  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23375  006592  0E00               	movlw	0
 23376  006594  0100               	movlb	0	; () banked
 23377  006596  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23378  006598  0E0A               	movlw	10
 23379  00659A  6F62               	movwf	___awmod@divisor& (0+255),b
 23380  00659C  ECE8  F03C         	call	___awmod	;wreg free
 23381  0065A0  0100               	movlb	0	; () banked
 23382  0065A2  5160               	movf	?___awmod& (0+255),w,b
 23383  0065A4  0F30               	addlw	48
 23384  0065A6  0100               	movlb	0	; () banked
 23385  0065A8  6F8C               	movwf	(ui_disp_menu_calib_diff_adj@buf+2)& (0+255),b
 23386                           
 23387                           ; BSR set to: 0
 23388                           ;ui.c: 550: buf[4]='\0';
 23389  0065AA  0E00               	movlw	0
 23390  0065AC  0100               	movlb	0	; () banked
 23391  0065AE  6F8E               	movwf	(ui_disp_menu_calib_diff_adj@buf+4)& (0+255),b
 23392                           
 23393                           ; BSR set to: 0
 23394                           ;ui.c: 551: if(calibCol){
 23395  0065B0  5030               	movf	_calibCol,w,c	;volatile
 23396  0065B2  B4D8               	btfsc	status,2,c
 23397  0065B4  D011               	goto	l16349
 23398                           
 23399                           ; BSR set to: 0
 23400                           ;ui.c: 552: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 23401  0065B6  0E8A               	movlw	low ui_disp_menu_calib_diff_adj@buf
 23402  0065B8  0100               	movlb	0	; () banked
 23403  0065BA  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 23404  0065BC  0E00               	movlw	high ui_disp_menu_calib_diff_adj@buf
 23405  0065BE  0100               	movlb	0	; () banked
 23406  0065C0  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 23407  0065C2  0E35               	movlw	low _m_floatAdj
 23408  0065C4  0100               	movlb	0	; () banked
 23409  0065C6  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 23410  0065C8  0E00               	movlw	high _m_floatAdj
 23411  0065CA  0100               	movlb	0	; () banked
 23412  0065CC  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 23413  0065CE  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 23414  0065D2  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 23415                           
 23416                           ;ui.c: 553: }else{
 23417  0065D6  0012               	return	
 23418  0065D8                     l16349:
 23419                           
 23420                           ;ui.c: 554: m_mem_cpy(buf+4,(uint8_t*)"    ");
 23421  0065D8  0E8E               	movlw	low (ui_disp_menu_calib_diff_adj@buf+4)
 23422  0065DA  0100               	movlb	0	; () banked
 23423  0065DC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23424  0065DE  0E00               	movlw	high (ui_disp_menu_calib_diff_adj@buf+4)
 23425  0065E0  0100               	movlb	0	; () banked
 23426  0065E2  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23427  0065E4  0E74               	movlw	low (STR_2+4)
 23428  0065E6  0100               	movlb	0	; () banked
 23429  0065E8  6F62               	movwf	m_mem_cpy@s& (0+255),b
 23430  0065EA  0EF3               	movlw	high (STR_2+4)
 23431  0065EC  0100               	movlb	0	; () banked
 23432  0065EE  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 23433  0065F0  ECB8  F045         	call	_m_mem_cpy	;wreg free
 23434                           
 23435                           ;ui.c: 555: t8=*((uint8_t*)(&adjValue));
 23436  0065F4  C039  F094         	movff	_adjValue,ui_disp_menu_calib_diff_adj@t8
 23437                           
 23438                           ;ui.c: 556: buf[7]='0'+ t8;;
 23439  0065F8  0100               	movlb	0	; () banked
 23440  0065FA  5194               	movf	ui_disp_menu_calib_diff_adj@t8& (0+255),w,b
 23441  0065FC  0F30               	addlw	48
 23442  0065FE  0100               	movlb	0	; () banked
 23443  006600  6F91               	movwf	(ui_disp_menu_calib_diff_adj@buf+7)& (0+255),b
 23444                           
 23445                           ; BSR set to: 0
 23446                           ;ui.c: 557: buf[8]='\0';
 23447  006602  0E00               	movlw	0
 23448  006604  0100               	movlb	0	; () banked
 23449  006606  6F92               	movwf	(ui_disp_menu_calib_diff_adj@buf+8)& (0+255),b
 23450                           
 23451                           ; BSR set to: 0
 23452                           ;ui.c: 558: lcd_show_string(buf);
 23453  006608  0E8A               	movlw	low ui_disp_menu_calib_diff_adj@buf
 23454  00660A  0100               	movlb	0	; () banked
 23455  00660C  6F73               	movwf	lcd_show_string@str& (0+255),b
 23456  00660E  0E00               	movlw	high ui_disp_menu_calib_diff_adj@buf
 23457  006610  0100               	movlb	0	; () banked
 23458  006612  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 23459  006614  EC4B  F045         	call	_lcd_show_string	;wreg free
 23460                           
 23461                           ;ui.c: 559: lcd_disp_refresh();
 23462  006618  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 23463  00661C  0012               	return	
 23464  00661E                     __end_of_ui_disp_menu_calib_diff_adj:
 23465                           	opt stack 0
 23466                           tosu	equ	0xFFF
 23467                           tosh	equ	0xFFE
 23468                           tosl	equ	0xFFD
 23469                           pclath	equ	0xFFA
 23470                           tblptru	equ	0xFF8
 23471                           tblptrh	equ	0xFF7
 23472                           tblptrl	equ	0xFF6
 23473                           tablat	equ	0xFF5
 23474                           prodh	equ	0xFF4
 23475                           prodl	equ	0xFF3
 23476                           intcon	equ	0xFF2
 23477                           indf0	equ	0xFEF
 23478                           postinc0	equ	0xFEE
 23479                           fsr0h	equ	0xFEA
 23480                           fsr0l	equ	0xFE9
 23481                           wreg	equ	0xFE8
 23482                           indf1	equ	0xFE7
 23483                           postinc1	equ	0xFE6
 23484                           postdec1	equ	0xFE5
 23485                           plusw1	equ	0xFE3
 23486                           fsr1h	equ	0xFE2
 23487                           fsr1l	equ	0xFE1
 23488                           indf2	equ	0xFDF
 23489                           postinc2	equ	0xFDE
 23490                           postdec2	equ	0xFDD
 23491                           plusw2	equ	0xFDB
 23492                           fsr2h	equ	0xFDA
 23493                           fsr2l	equ	0xFD9
 23494                           status	equ	0xFD8
 23495                           
 23496 ;; *************** function ___lbdiv *****************
 23497 ;; Defined at:
 23498 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbdiv.c"
 23499 ;; Parameters:    Size  Location     Type
 23500 ;;  dividend        1    wreg     unsigned char 
 23501 ;;  divisor         1   31[COMRAM] unsigned char 
 23502 ;; Auto vars:     Size  Location     Type
 23503 ;;  dividend        1    0[BANK0 ] unsigned char 
 23504 ;;  quotient        1    2[BANK0 ] unsigned char 
 23505 ;;  counter         1    1[BANK0 ] unsigned char 
 23506 ;; Return value:  Size  Location     Type
 23507 ;;                  1    wreg      unsigned char 
 23508 ;; Registers used:
 23509 ;;		wreg, status,2, status,0
 23510 ;; Tracked objects:
 23511 ;;		On entry : 0/0
 23512 ;;		On exit  : 0/0
 23513 ;;		Unchanged: 0/0
 23514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23515 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23516 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23518 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23519 ;;Total ram usage:        4 bytes
 23520 ;; Hardware stack levels used:    1
 23521 ;; Hardware stack levels required when called:    4
 23522 ;; This function calls:
 23523 ;;		Nothing
 23524 ;; This function is called by:
 23525 ;;		_ui_disp_menu_calib_diff_adj
 23526 ;;		_ui_disp_menu_calib_pr_adj
 23527 ;;		_lcd_disp_battary
 23528 ;;		_lcd_disp_rf
 23529 ;;		_lcd_disp_light
 23530 ;; This function uses a non-reentrant model
 23531 ;;
 23532                           
 23533                           	psect	text125
 23534  009778                     __ptext125:
 23535                           	opt stack 0
 23536  009778                     ___lbdiv:
 23537                           	opt stack 23
 23538                           
 23539                           ;incstack = 0
 23540                           ;___lbdiv@dividend stored from wreg
 23541  009778  0100               	movlb	0	; () banked
 23542  00977A  6F60               	movwf	___lbdiv@dividend& (0+255),b
 23543  00977C  0E00               	movlw	0
 23544  00977E  0100               	movlb	0	; () banked
 23545  009780  6F62               	movwf	___lbdiv@quotient& (0+255),b
 23546                           
 23547                           ; BSR set to: 0
 23548  009782  5020               	movf	___lbdiv@divisor,w,c
 23549  009784  B4D8               	btfsc	status,2,c
 23550  009786  D01C               	goto	l15645
 23551                           
 23552                           ; BSR set to: 0
 23553  009788  0E01               	movlw	1
 23554  00978A  0100               	movlb	0	; () banked
 23555  00978C  6F61               	movwf	___lbdiv@counter& (0+255),b
 23556  00978E  D004               	goto	l15633
 23557  009790                     l15629:
 23558                           
 23559                           ; BSR set to: 0
 23560  009790  90D8               	bcf	status,0,c
 23561  009792  3620               	rlcf	___lbdiv@divisor,f,c
 23562                           
 23563                           ; BSR set to: 0
 23564  009794  0100               	movlb	0	; () banked
 23565  009796  2B61               	incf	___lbdiv@counter& (0+255),f,b
 23566  009798                     l15633:
 23567                           
 23568                           ; BSR set to: 0
 23569  009798  AE20               	btfss	___lbdiv@divisor,7,c
 23570  00979A  D7FA               	goto	l15629
 23571  00979C                     l15635:
 23572                           
 23573                           ; BSR set to: 0
 23574  00979C  0100               	movlb	0	; () banked
 23575  00979E  90D8               	bcf	status,0,c
 23576  0097A0  3762               	rlcf	___lbdiv@quotient& (0+255),f,b
 23577  0097A2  5020               	movf	___lbdiv@divisor,w,c
 23578  0097A4  0100               	movlb	0	; () banked
 23579  0097A6  5D60               	subwf	___lbdiv@dividend& (0+255),w,b
 23580  0097A8  A0D8               	btfss	status,0,c
 23581  0097AA  D005               	goto	l15641
 23582                           
 23583                           ; BSR set to: 0
 23584  0097AC  5020               	movf	___lbdiv@divisor,w,c
 23585  0097AE  0100               	movlb	0	; () banked
 23586  0097B0  5F60               	subwf	___lbdiv@dividend& (0+255),f,b
 23587                           
 23588                           ; BSR set to: 0
 23589  0097B2  0100               	movlb	0	; () banked
 23590  0097B4  8162               	bsf	___lbdiv@quotient& (0+255),0,b
 23591  0097B6                     l15641:
 23592                           
 23593                           ; BSR set to: 0
 23594  0097B6  90D8               	bcf	status,0,c
 23595  0097B8  3220               	rrcf	___lbdiv@divisor,f,c
 23596                           
 23597                           ; BSR set to: 0
 23598  0097BA  0100               	movlb	0	; () banked
 23599  0097BC  2F61               	decfsz	___lbdiv@counter& (0+255),f,b
 23600  0097BE  D7EE               	goto	l15635
 23601  0097C0                     l15645:
 23602                           
 23603                           ; BSR set to: 0
 23604  0097C0  0100               	movlb	0	; () banked
 23605  0097C2  5162               	movf	___lbdiv@quotient& (0+255),w,b
 23606  0097C4  0012               	return	
 23607  0097C6                     __end_of___lbdiv:
 23608                           	opt stack 0
 23609                           tosu	equ	0xFFF
 23610                           tosh	equ	0xFFE
 23611                           tosl	equ	0xFFD
 23612                           pclath	equ	0xFFA
 23613                           tblptru	equ	0xFF8
 23614                           tblptrh	equ	0xFF7
 23615                           tblptrl	equ	0xFF6
 23616                           tablat	equ	0xFF5
 23617                           prodh	equ	0xFF4
 23618                           prodl	equ	0xFF3
 23619                           intcon	equ	0xFF2
 23620                           indf0	equ	0xFEF
 23621                           postinc0	equ	0xFEE
 23622                           fsr0h	equ	0xFEA
 23623                           fsr0l	equ	0xFE9
 23624                           wreg	equ	0xFE8
 23625                           indf1	equ	0xFE7
 23626                           postinc1	equ	0xFE6
 23627                           postdec1	equ	0xFE5
 23628                           plusw1	equ	0xFE3
 23629                           fsr1h	equ	0xFE2
 23630                           fsr1l	equ	0xFE1
 23631                           indf2	equ	0xFDF
 23632                           postinc2	equ	0xFDE
 23633                           postdec2	equ	0xFDD
 23634                           plusw2	equ	0xFDB
 23635                           fsr2h	equ	0xFDA
 23636                           fsr2l	equ	0xFD9
 23637                           status	equ	0xFD8
 23638                           
 23639 ;; *************** function _ui_disp_menu_bzero_adj *****************
 23640 ;; Defined at:
 23641 ;;		line 528 in file "src/api/ui.c"
 23642 ;; Parameters:    Size  Location     Type
 23643 ;;		None
 23644 ;; Auto vars:     Size  Location     Type
 23645 ;;		None
 23646 ;; Return value:  Size  Location     Type
 23647 ;;                  1    wreg      void 
 23648 ;; Registers used:
 23649 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23650 ;; Tracked objects:
 23651 ;;		On entry : 0/0
 23652 ;;		On exit  : 0/0
 23653 ;;		Unchanged: 0/0
 23654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23659 ;;Total ram usage:        0 bytes
 23660 ;; Hardware stack levels used:    1
 23661 ;; Hardware stack levels required when called:   10
 23662 ;; This function calls:
 23663 ;;		_lcd_disp_all
 23664 ;;		_lcd_disp_logo
 23665 ;;		_ui_disp_adj_xfloat_pt
 23666 ;; This function is called by:
 23667 ;;		_ui_disp_menu
 23668 ;; This function uses a non-reentrant model
 23669 ;;
 23670                           
 23671                           	psect	text126
 23672  009F26                     __ptext126:
 23673                           	opt stack 0
 23674  009F26                     _ui_disp_menu_bzero_adj:
 23675                           	opt stack 18
 23676                           
 23677                           ;ui.c: 530: lcd_disp_all(0x00);;
 23678                           
 23679                           ; BSR set to: 0
 23680                           ;incstack = 0
 23681  009F26  0E00               	movlw	0
 23682  009F28  EC4D  F04F         	call	_lcd_disp_all
 23683                           
 23684                           ;ui.c: 531: lcd_disp_logo(1);
 23685  009F2C  0E01               	movlw	1
 23686  009F2E  EC35  F04F         	call	_lcd_disp_logo
 23687                           
 23688                           ;ui.c: 532: ui_disp_adj_xfloat_pt((uint8_t*)"  hb",&m_floatAdj,adjLocation);
 23689  009F32  0EB8               	movlw	low STR_12
 23690  009F34  0100               	movlb	0	; () banked
 23691  009F36  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 23692  009F38  0EF3               	movlw	high STR_12
 23693  009F3A  0100               	movlb	0	; () banked
 23694  009F3C  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 23695  009F3E  0E35               	movlw	low _m_floatAdj
 23696  009F40  0100               	movlb	0	; () banked
 23697  009F42  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 23698  009F44  0E00               	movlw	high _m_floatAdj
 23699  009F46  0100               	movlb	0	; () banked
 23700  009F48  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 23701  009F4A  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 23702  009F4E  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 23703  009F52  0012               	return		;funcret
 23704  009F54                     __end_of_ui_disp_menu_bzero_adj:
 23705                           	opt stack 0
 23706                           tosu	equ	0xFFF
 23707                           tosh	equ	0xFFE
 23708                           tosl	equ	0xFFD
 23709                           pclath	equ	0xFFA
 23710                           tblptru	equ	0xFF8
 23711                           tblptrh	equ	0xFF7
 23712                           tblptrl	equ	0xFF6
 23713                           tablat	equ	0xFF5
 23714                           prodh	equ	0xFF4
 23715                           prodl	equ	0xFF3
 23716                           intcon	equ	0xFF2
 23717                           indf0	equ	0xFEF
 23718                           postinc0	equ	0xFEE
 23719                           fsr0h	equ	0xFEA
 23720                           fsr0l	equ	0xFE9
 23721                           wreg	equ	0xFE8
 23722                           indf1	equ	0xFE7
 23723                           postinc1	equ	0xFE6
 23724                           postdec1	equ	0xFE5
 23725                           plusw1	equ	0xFE3
 23726                           fsr1h	equ	0xFE2
 23727                           fsr1l	equ	0xFE1
 23728                           indf2	equ	0xFDF
 23729                           postinc2	equ	0xFDE
 23730                           postdec2	equ	0xFDD
 23731                           plusw2	equ	0xFDB
 23732                           fsr2h	equ	0xFDA
 23733                           fsr2l	equ	0xFD9
 23734                           status	equ	0xFD8
 23735                           
 23736 ;; *************** function _ui_disp_adj_xfloat_pt *****************
 23737 ;; Defined at:
 23738 ;;		line 204 in file "src/api/ui.c"
 23739 ;; Parameters:    Size  Location     Type
 23740 ;;  str             2   22[BANK0 ] PTR unsigned char 
 23741 ;;		 -> ui_disp_menu_epr_ilp_scale_adj@buf(6), ui_disp_menu_epr_calib_adj@buf(6), ui_disp_menu_warn_v_adj@buf(6), ui_dis
      +p_menu_calib_pr_adj@buf(10), 
 23742 ;;		 -> ui_disp_menu_calib_diff_adj@buf(10), STR_12(5), STR_11(5), STR_10(5), 
 23743 ;;		 -> STR_9(5), STR_6(5), 
 23744 ;;  xpf             2   24[BANK0 ] PTR struct .
 23745 ;;		 -> m_floatAdj(4), 
 23746 ;;  loc             1   26[BANK0 ] unsigned char 
 23747 ;; Auto vars:     Size  Location     Type
 23748 ;;  buf            10   29[BANK0 ] unsigned char [10]
 23749 ;;  x               2   39[BANK0 ] unsigned int 
 23750 ;;  t8              1   41[BANK0 ] unsigned char 
 23751 ;; Return value:  Size  Location     Type
 23752 ;;                  1    wreg      void 
 23753 ;; Registers used:
 23754 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23755 ;; Tracked objects:
 23756 ;;		On entry : 0/0
 23757 ;;		On exit  : 0/0
 23758 ;;		Unchanged: 0/0
 23759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23760 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23761 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23763 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23764 ;;Total ram usage:       20 bytes
 23765 ;; Hardware stack levels used:    1
 23766 ;; Hardware stack levels required when called:    9
 23767 ;; This function calls:
 23768 ;;		___x_arrange_str
 23769 ;;		_lcd_disp_refresh
 23770 ;;		_lcd_show_dp
 23771 ;;		_lcd_show_string
 23772 ;;		_m_int16_2_str_4
 23773 ;;		_m_mem_cpy
 23774 ;; This function is called by:
 23775 ;;		_ui_disp_menu_density_adj
 23776 ;;		_ui_disp_menu_h_adj
 23777 ;;		_ui_disp_menu_d_adj
 23778 ;;		_ui_disp_menu_bzero_adj
 23779 ;;		_ui_disp_menu_calib_diff_adj
 23780 ;;		_ui_disp_menu_calib_pr_adj
 23781 ;;		_ui_disp_menu_warn_v_adj
 23782 ;;		_ui_disp_menu_epr_calib_adj
 23783 ;;		_ui_disp_menu_epr_ilp_scale_adj
 23784 ;; This function uses a non-reentrant model
 23785 ;;
 23786                           
 23787                           	psect	text127
 23788  0035D0                     __ptext127:
 23789                           	opt stack 0
 23790  0035D0                     _ui_disp_adj_xfloat_pt:
 23791                           	opt stack 18
 23792                           
 23793                           ;ui.c: 207: uint8_t buf[10];
 23794                           ;ui.c: 209: uint16_t x;
 23795                           ;ui.c: 210: uint8_t t8;
 23796                           ;ui.c: 218: x=xpf->stru.significand;
 23797                           
 23798                           ;incstack = 0
 23799  0035D0  C078  FFD9         	movff	ui_disp_adj_xfloat_pt@xpf,fsr2l
 23800  0035D4  C079  FFDA         	movff	ui_disp_adj_xfloat_pt@xpf+1,fsr2h
 23801  0035D8  CFDE F087          	movff	postinc2,ui_disp_adj_xfloat_pt@x
 23802  0035DC  CFDD F088          	movff	postdec2,ui_disp_adj_xfloat_pt@x+1
 23803                           
 23804                           ;ui.c: 219: m_mem_cpy(buf,str);
 23805  0035E0  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 23806  0035E2  0100               	movlb	0	; () banked
 23807  0035E4  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23808  0035E6  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 23809  0035E8  0100               	movlb	0	; () banked
 23810  0035EA  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23811  0035EC  C076  F062         	movff	ui_disp_adj_xfloat_pt@str,m_mem_cpy@s
 23812  0035F0  C077  F063         	movff	ui_disp_adj_xfloat_pt@str+1,m_mem_cpy@s+1
 23813  0035F4  ECB8  F045         	call	_m_mem_cpy	;wreg free
 23814                           
 23815                           ;ui.c: 220: if(xpf->stru.sign==0){
 23816  0035F8  0100               	movlb	0	; () banked
 23817  0035FA  EE20 F003          	lfsr	2,3
 23818  0035FE  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 23819  003600  26D9               	addwf	fsr2l,f,c
 23820  003602  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 23821  003604  22DA               	addwfc	fsr2h,f,c
 23822  003606  50DF               	movf	indf2,w,c
 23823  003608  A4D8               	btfss	status,2,c
 23824  00360A  D072               	goto	l14771
 23825                           
 23826                           ; BSR set to: 0
 23827                           ;ui.c: 221: if(x>9999)x=9999;
 23828  00360C  0E10               	movlw	16
 23829  00360E  0100               	movlb	0	; () banked
 23830  003610  5D87               	subwf	ui_disp_adj_xfloat_pt@x& (0+255),w,b
 23831  003612  0E27               	movlw	39
 23832  003614  0100               	movlb	0	; () banked
 23833  003616  5988               	subwfb	(ui_disp_adj_xfloat_pt@x+1)& (0+255),w,b
 23834  003618  A0D8               	btfss	status,0,c
 23835  00361A  D005               	goto	l14739
 23836                           
 23837                           ; BSR set to: 0
 23838  00361C  0E27               	movlw	39
 23839  00361E  0100               	movlb	0	; () banked
 23840  003620  6F88               	movwf	(ui_disp_adj_xfloat_pt@x+1)& (0+255),b
 23841  003622  0E0F               	movlw	15
 23842  003624  6F87               	movwf	ui_disp_adj_xfloat_pt@x& (0+255),b
 23843  003626                     l14739:
 23844                           
 23845                           ; BSR set to: 0
 23846                           ;ui.c: 222: m_int16_2_str_4(buf+4,x);
 23847  003626  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 23848  003628  0100               	movlb	0	; () banked
 23849  00362A  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 23850  00362C  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 23851  00362E  0100               	movlb	0	; () banked
 23852  003630  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 23853  003632  C087  F06A         	movff	ui_disp_adj_xfloat_pt@x,m_int16_2_str_4@x
 23854  003636  C088  F06B         	movff	ui_disp_adj_xfloat_pt@x+1,m_int16_2_str_4@x+1
 23855  00363A  ECE4  F027         	call	_m_int16_2_str_4	;wreg free
 23856                           
 23857                           ;ui.c: 223: __x_arrange_str(buf,8);
 23858  00363E  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 23859  003640  0100               	movlb	0	; () banked
 23860  003642  6F60               	movwf	___x_arrange_str@str& (0+255),b
 23861  003644  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 23862  003646  0100               	movlb	0	; () banked
 23863  003648  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 23864  00364A  0E08               	movlw	8
 23865  00364C  0100               	movlb	0	; () banked
 23866  00364E  6F62               	movwf	___x_arrange_str@len& (0+255),b
 23867  003650  ECE0  F048         	call	___x_arrange_str	;wreg free
 23868                           
 23869                           ;ui.c: 224: t8=xpf->stru.exponent;
 23870  003654  0100               	movlb	0	; () banked
 23871  003656  EE20 F002          	lfsr	2,2
 23872  00365A  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 23873  00365C  26D9               	addwf	fsr2l,f,c
 23874  00365E  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 23875  003660  22DA               	addwfc	fsr2h,f,c
 23876  003662  50DF               	movf	indf2,w,c
 23877  003664  0100               	movlb	0	; () banked
 23878  003666  6F89               	movwf	ui_disp_adj_xfloat_pt@t8& (0+255),b
 23879                           
 23880                           ; BSR set to: 0
 23881                           ;ui.c: 225: lcd_show_dp(4+t8,1);
 23882  003668  0E01               	movlw	1
 23883  00366A  0100               	movlb	0	; () banked
 23884  00366C  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23885  00366E  0100               	movlb	0	; () banked
 23886  003670  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23887  003672  0F04               	addlw	4
 23888  003674  EC82  F045         	call	_lcd_show_dp
 23889                           
 23890                           ;ui.c: 226: if(loc<4){
 23891  003678  0E04               	movlw	4
 23892  00367A  0100               	movlb	0	; () banked
 23893  00367C  617A               	cpfslt	ui_disp_adj_xfloat_pt@loc& (0+255),b
 23894  00367E  D007               	goto	l14757
 23895                           
 23896                           ; BSR set to: 0
 23897                           ;ui.c: 227: loc=3-loc;
 23898  003680  0100               	movlb	0	; () banked
 23899  003682  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23900  003684  0800               	sublw	0
 23901  003686  0F03               	addlw	3
 23902  003688  0100               	movlb	0	; () banked
 23903  00368A  6F7A               	movwf	ui_disp_adj_xfloat_pt@loc& (0+255),b
 23904  00368C  D078               	goto	l14793
 23905  00368E                     l14757:
 23906                           
 23907                           ; BSR set to: 0
 23908  00368E  0E04               	movlw	4
 23909  003690  0100               	movlb	0	; () banked
 23910  003692  197A               	xorwf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23911  003694  A4D8               	btfss	status,2,c
 23912  003696  D00F               	goto	l810
 23913                           
 23914                           ; BSR set to: 0
 23915                           ;ui.c: 230: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))lcd_show_dp(4+t8,0);
 23916  003698  010F               	movlb	15	; () banked
 23917  00369A  B75F               	btfsc	95,3,b	;volatile
 23918  00369C  D0BB               	goto	l14813
 23919                           
 23920                           ; BSR set to: 15
 23921  00369E  5034               	movf	_lcdTwinkle,w,c
 23922  0036A0  A4D8               	btfss	status,2,c
 23923  0036A2  D0B8               	goto	l14813
 23924                           
 23925                           ; BSR set to: 15
 23926  0036A4  0E00               	movlw	0
 23927  0036A6  0100               	movlb	0	; () banked
 23928  0036A8  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23929  0036AA  0100               	movlb	0	; () banked
 23930  0036AC  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23931  0036AE  0F04               	addlw	4
 23932  0036B0  EC82  F045         	call	_lcd_show_dp
 23933                           
 23934                           ;ui.c: 231: }else{
 23935  0036B4  D0AF               	goto	l14813
 23936  0036B6                     l810:
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;ui.c: 232: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0)){
 23940  0036B6  010F               	movlb	15	; () banked
 23941  0036B8  B75F               	btfsc	95,3,b	;volatile
 23942  0036BA  D0AC               	goto	l14813
 23943                           
 23944                           ; BSR set to: 15
 23945  0036BC  5034               	movf	_lcdTwinkle,w,c
 23946  0036BE  A4D8               	btfss	status,2,c
 23947  0036C0  D0A9               	goto	l14813
 23948                           
 23949                           ; BSR set to: 15
 23950                           ;ui.c: 233: m_mem_cpy(buf+4,(uint8_t*)("    "));
 23951  0036C2  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 23952  0036C4  0100               	movlb	0	; () banked
 23953  0036C6  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23954  0036C8  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 23955  0036CA  0100               	movlb	0	; () banked
 23956  0036CC  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23957  0036CE  0E74               	movlw	low (STR_2+4)
 23958  0036D0  0100               	movlb	0	; () banked
 23959  0036D2  6F62               	movwf	m_mem_cpy@s& (0+255),b
 23960  0036D4  0EF3               	movlw	high (STR_2+4)
 23961  0036D6  0100               	movlb	0	; () banked
 23962  0036D8  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 23963  0036DA  ECB8  F045         	call	_m_mem_cpy	;wreg free
 23964                           
 23965                           ;ui.c: 234: lcd_show_dp(4+t8,0);
 23966  0036DE  0E00               	movlw	0
 23967  0036E0  0100               	movlb	0	; () banked
 23968  0036E2  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23969  0036E4  0100               	movlb	0	; () banked
 23970  0036E6  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23971  0036E8  0F04               	addlw	4
 23972  0036EA  EC82  F045         	call	_lcd_show_dp
 23973                           
 23974                           ;ui.c: 235: }
 23975                           ;ui.c: 236: }
 23976                           ;ui.c: 237: }else{
 23977  0036EE  D092               	goto	l14813
 23978  0036F0                     l14771:
 23979                           
 23980                           ;ui.c: 238: if(loc==0)return;
 23981  0036F0  0100               	movlb	0	; () banked
 23982  0036F2  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23983  0036F4  0100               	movlb	0	; () banked
 23984  0036F6  B4D8               	btfsc	status,2,c
 23985  0036F8  0012               	return	
 23986                           
 23987                           ; BSR set to: 0
 23988                           ;ui.c: 239: if(x>9999)x=9999;
 23989                           
 23990                           ; BSR set to: 0
 23991                           
 23992                           ; BSR set to: 0
 23993  0036FA  0E10               	movlw	16
 23994  0036FC  0100               	movlb	0	; () banked
 23995  0036FE  5D87               	subwf	ui_disp_adj_xfloat_pt@x& (0+255),w,b
 23996  003700  0E27               	movlw	39
 23997  003702  0100               	movlb	0	; () banked
 23998  003704  5988               	subwfb	(ui_disp_adj_xfloat_pt@x+1)& (0+255),w,b
 23999  003706  A0D8               	btfss	status,0,c
 24000  003708  D005               	goto	l14779
 24001                           
 24002                           ; BSR set to: 0
 24003  00370A  0E27               	movlw	39
 24004  00370C  0100               	movlb	0	; () banked
 24005  00370E  6F88               	movwf	(ui_disp_adj_xfloat_pt@x+1)& (0+255),b
 24006  003710  0E0F               	movlw	15
 24007  003712  6F87               	movwf	ui_disp_adj_xfloat_pt@x& (0+255),b
 24008  003714                     l14779:
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;ui.c: 241: m_int16_2_str_4(buf+5,x);
 24012  003714  0E82               	movlw	low (ui_disp_adj_xfloat_pt@buf+5)
 24013  003716  0100               	movlb	0	; () banked
 24014  003718  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 24015  00371A  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+5)
 24016  00371C  0100               	movlb	0	; () banked
 24017  00371E  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 24018  003720  C087  F06A         	movff	ui_disp_adj_xfloat_pt@x,m_int16_2_str_4@x
 24019  003724  C088  F06B         	movff	ui_disp_adj_xfloat_pt@x+1,m_int16_2_str_4@x+1
 24020  003728  ECE4  F027         	call	_m_int16_2_str_4	;wreg free
 24021                           
 24022                           ;ui.c: 242: buf[4]='-';
 24023  00372C  0E2D               	movlw	45
 24024  00372E  0100               	movlb	0	; () banked
 24025  003730  6F81               	movwf	(ui_disp_adj_xfloat_pt@buf+4)& (0+255),b
 24026                           
 24027                           ; BSR set to: 0
 24028                           ;ui.c: 243: __x_arrange_str(buf,8);
 24029  003732  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 24030  003734  0100               	movlb	0	; () banked
 24031  003736  6F60               	movwf	___x_arrange_str@str& (0+255),b
 24032  003738  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 24033  00373A  0100               	movlb	0	; () banked
 24034  00373C  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 24035  00373E  0E08               	movlw	8
 24036  003740  0100               	movlb	0	; () banked
 24037  003742  6F62               	movwf	___x_arrange_str@len& (0+255),b
 24038  003744  ECE0  F048         	call	___x_arrange_str	;wreg free
 24039                           
 24040                           ;ui.c: 244: t8=xpf->stru.exponent;
 24041  003748  0100               	movlb	0	; () banked
 24042  00374A  EE20 F002          	lfsr	2,2
 24043  00374E  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 24044  003750  26D9               	addwf	fsr2l,f,c
 24045  003752  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 24046  003754  22DA               	addwfc	fsr2h,f,c
 24047  003756  50DF               	movf	indf2,w,c
 24048  003758  0100               	movlb	0	; () banked
 24049  00375A  6F89               	movwf	ui_disp_adj_xfloat_pt@t8& (0+255),b
 24050                           
 24051                           ; BSR set to: 0
 24052                           ;ui.c: 245: lcd_show_dp(4+1+t8,1);
 24053  00375C  0E01               	movlw	1
 24054  00375E  0100               	movlb	0	; () banked
 24055  003760  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24056  003762  0100               	movlb	0	; () banked
 24057  003764  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 24058  003766  0F05               	addlw	5
 24059  003768  EC82  F045         	call	_lcd_show_dp
 24060                           
 24061                           ;ui.c: 246: if(loc<4){
 24062  00376C  0E04               	movlw	4
 24063  00376E  0100               	movlb	0	; () banked
 24064  003770  617A               	cpfslt	ui_disp_adj_xfloat_pt@loc& (0+255),b
 24065  003772  D020               	goto	l14799
 24066                           
 24067                           ; BSR set to: 0
 24068                           ;ui.c: 247: loc=3-loc+1;
 24069  003774  0100               	movlb	0	; () banked
 24070  003776  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 24071  003778  0800               	sublw	0
 24072  00377A  0F04               	addlw	4
 24073  00377C  D785               	goto	L23
 24074  00377E                     l14793:
 24075                           
 24076                           ; BSR set to: 0
 24077                           ;ui.c: 248: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))buf[4+loc]=' ';
 24078  00377E  010F               	movlb	15	; () banked
 24079  003780  B75F               	btfsc	95,3,b	;volatile
 24080  003782  D048               	goto	l14813
 24081                           
 24082                           ; BSR set to: 15
 24083  003784  5034               	movf	_lcdTwinkle,w,c
 24084  003786  A4D8               	btfss	status,2,c
 24085  003788  D045               	goto	l14813
 24086                           
 24087                           ; BSR set to: 15
 24088  00378A  0100               	movlb	0	; () banked
 24089  00378C  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 24090  00378E  0100               	movlb	0	; () banked
 24091  003790  6F7B               	movwf	??_ui_disp_adj_xfloat_pt& (0+255),b
 24092  003792  6B7C               	clrf	(??_ui_disp_adj_xfloat_pt+1)& (0+255),b
 24093  003794  0E04               	movlw	4
 24094  003796  0100               	movlb	0	; () banked
 24095  003798  277B               	addwf	??_ui_disp_adj_xfloat_pt& (0+255),f,b
 24096  00379A  0E00               	movlw	0
 24097  00379C  237C               	addwfc	(??_ui_disp_adj_xfloat_pt+1)& (0+255),f,b
 24098  00379E  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 24099  0037A0  0100               	movlb	0	; () banked
 24100  0037A2  257B               	addwf	??_ui_disp_adj_xfloat_pt& (0+255),w,b
 24101  0037A4  6ED9               	movwf	fsr2l,c
 24102  0037A6  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 24103  0037A8  0100               	movlb	0	; () banked
 24104  0037AA  217C               	addwfc	(??_ui_disp_adj_xfloat_pt+1)& (0+255),w,b
 24105  0037AC  6EDA               	movwf	fsr2h,c
 24106  0037AE  0E20               	movlw	32
 24107  0037B0  6EDF               	movwf	indf2,c
 24108                           
 24109                           ; BSR set to: 0
 24110                           ;ui.c: 249: }else if(loc==4){
 24111  0037B2  D030               	goto	l14813
 24112  0037B4                     l14799:
 24113                           
 24114                           ; BSR set to: 0
 24115  0037B4  0E04               	movlw	4
 24116  0037B6  0100               	movlb	0	; () banked
 24117  0037B8  197A               	xorwf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 24118  0037BA  A4D8               	btfss	status,2,c
 24119  0037BC  D00F               	goto	l821
 24120                           
 24121                           ; BSR set to: 0
 24122                           ;ui.c: 250: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))lcd_show_dp(4+1+t8,0);
 24123  0037BE  010F               	movlb	15	; () banked
 24124  0037C0  B75F               	btfsc	95,3,b	;volatile
 24125  0037C2  D028               	goto	l14813
 24126                           
 24127                           ; BSR set to: 15
 24128  0037C4  5034               	movf	_lcdTwinkle,w,c
 24129  0037C6  A4D8               	btfss	status,2,c
 24130  0037C8  D025               	goto	l14813
 24131                           
 24132                           ; BSR set to: 15
 24133  0037CA  0E00               	movlw	0
 24134  0037CC  0100               	movlb	0	; () banked
 24135  0037CE  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24136  0037D0  0100               	movlb	0	; () banked
 24137  0037D2  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 24138  0037D4  0F05               	addlw	5
 24139  0037D6  EC82  F045         	call	_lcd_show_dp
 24140                           
 24141                           ;ui.c: 251: }else{
 24142  0037DA  D01C               	goto	l14813
 24143  0037DC                     l821:
 24144                           
 24145                           ; BSR set to: 0
 24146                           ;ui.c: 252: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0)){
 24147  0037DC  010F               	movlb	15	; () banked
 24148  0037DE  B75F               	btfsc	95,3,b	;volatile
 24149  0037E0  D019               	goto	l14813
 24150                           
 24151                           ; BSR set to: 15
 24152  0037E2  5034               	movf	_lcdTwinkle,w,c
 24153  0037E4  A4D8               	btfss	status,2,c
 24154  0037E6  D016               	goto	l14813
 24155                           
 24156                           ; BSR set to: 15
 24157                           ;ui.c: 253: m_mem_cpy(buf+4,(uint8_t*)("    "));
 24158  0037E8  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 24159  0037EA  0100               	movlb	0	; () banked
 24160  0037EC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 24161  0037EE  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 24162  0037F0  0100               	movlb	0	; () banked
 24163  0037F2  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 24164  0037F4  0E74               	movlw	low (STR_2+4)
 24165  0037F6  0100               	movlb	0	; () banked
 24166  0037F8  6F62               	movwf	m_mem_cpy@s& (0+255),b
 24167  0037FA  0EF3               	movlw	high (STR_2+4)
 24168  0037FC  0100               	movlb	0	; () banked
 24169  0037FE  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 24170  003800  ECB8  F045         	call	_m_mem_cpy	;wreg free
 24171                           
 24172                           ;ui.c: 254: lcd_show_dp(4+1+t8,0);
 24173  003804  0E00               	movlw	0
 24174  003806  0100               	movlb	0	; () banked
 24175  003808  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24176  00380A  0100               	movlb	0	; () banked
 24177  00380C  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 24178  00380E  0F05               	addlw	5
 24179  003810  EC82  F045         	call	_lcd_show_dp
 24180  003814                     l14813:
 24181                           
 24182                           ;ui.c: 255: }
 24183                           ;ui.c: 256: }
 24184                           ;ui.c: 257: }
 24185                           ;ui.c: 258: lcd_show_string(buf);
 24186  003814  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 24187  003816  0100               	movlb	0	; () banked
 24188  003818  6F73               	movwf	lcd_show_string@str& (0+255),b
 24189  00381A  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 24190  00381C  0100               	movlb	0	; () banked
 24191  00381E  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 24192  003820  EC4B  F045         	call	_lcd_show_string	;wreg free
 24193                           
 24194                           ;ui.c: 259: lcd_disp_refresh();
 24195  003824  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 24196  003828  0012               	return		;funcret
 24197  00382A                     __end_of_ui_disp_adj_xfloat_pt:
 24198                           	opt stack 0
 24199                           tosu	equ	0xFFF
 24200                           tosh	equ	0xFFE
 24201                           tosl	equ	0xFFD
 24202                           pclath	equ	0xFFA
 24203                           tblptru	equ	0xFF8
 24204                           tblptrh	equ	0xFF7
 24205                           tblptrl	equ	0xFF6
 24206                           tablat	equ	0xFF5
 24207                           prodh	equ	0xFF4
 24208                           prodl	equ	0xFF3
 24209                           intcon	equ	0xFF2
 24210                           indf0	equ	0xFEF
 24211                           postinc0	equ	0xFEE
 24212                           fsr0h	equ	0xFEA
 24213                           fsr0l	equ	0xFE9
 24214                           wreg	equ	0xFE8
 24215                           indf1	equ	0xFE7
 24216                           postinc1	equ	0xFE6
 24217                           postdec1	equ	0xFE5
 24218                           plusw1	equ	0xFE3
 24219                           fsr1h	equ	0xFE2
 24220                           fsr1l	equ	0xFE1
 24221                           indf2	equ	0xFDF
 24222                           postinc2	equ	0xFDE
 24223                           postdec2	equ	0xFDD
 24224                           plusw2	equ	0xFDB
 24225                           fsr2h	equ	0xFDA
 24226                           fsr2l	equ	0xFD9
 24227                           status	equ	0xFD8
 24228                           
 24229 ;; *************** function _ui_disp_menu_bar_full_adj *****************
 24230 ;; Defined at:
 24231 ;;		line 709 in file "src/api/ui.c"
 24232 ;; Parameters:    Size  Location     Type
 24233 ;;		None
 24234 ;; Auto vars:     Size  Location     Type
 24235 ;;		None
 24236 ;; Return value:  Size  Location     Type
 24237 ;;                  1    wreg      void 
 24238 ;; Registers used:
 24239 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24240 ;; Tracked objects:
 24241 ;;		On entry : 0/0
 24242 ;;		On exit  : 0/0
 24243 ;;		Unchanged: 0/0
 24244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24249 ;;Total ram usage:        0 bytes
 24250 ;; Hardware stack levels used:    1
 24251 ;; Hardware stack levels required when called:   11
 24252 ;; This function calls:
 24253 ;;		_lcd_disp_all
 24254 ;;		_lcd_disp_logo
 24255 ;;		_ui_disp_adj_xfixed_pt_dp
 24256 ;; This function is called by:
 24257 ;;		_ui_disp_menu
 24258 ;; This function uses a non-reentrant model
 24259 ;;
 24260                           
 24261                           	psect	text128
 24262  009D1A                     __ptext128:
 24263                           	opt stack 0
 24264  009D1A                     _ui_disp_menu_bar_full_adj:
 24265                           	opt stack 17
 24266                           
 24267                           ;ui.c: 711: lcd_disp_all(0x00);;
 24268                           
 24269                           ;incstack = 0
 24270  009D1A  0E00               	movlw	0
 24271  009D1C  EC4D  F04F         	call	_lcd_disp_all
 24272                           
 24273                           ;ui.c: 712: lcd_disp_logo(1);
 24274  009D20  0E01               	movlw	1
 24275  009D22  EC35  F04F         	call	_lcd_disp_logo
 24276                           
 24277                           ;ui.c: 713: ui_disp_adj_xfixed_pt_dp((uint8_t*)" scl",(int16_t)adjValue,adjLocation,0);
 24278  009D26  0EE5               	movlw	low STR_31
 24279  009D28  0100               	movlb	0	; () banked
 24280  009D2A  6F76               	movwf	ui_disp_adj_xfixed_pt_dp@str& (0+255),b
 24281  009D2C  0EF3               	movlw	high STR_31
 24282  009D2E  0100               	movlb	0	; () banked
 24283  009D30  6F77               	movwf	(ui_disp_adj_xfixed_pt_dp@str+1)& (0+255),b
 24284  009D32  C039  F078         	movff	_adjValue,ui_disp_adj_xfixed_pt_dp@x	;volatile
 24285  009D36  C03A  F079         	movff	_adjValue+1,ui_disp_adj_xfixed_pt_dp@x+1	;volatile
 24286  009D3A  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt_dp@loc	;volatile
 24287  009D3E  0E00               	movlw	0
 24288  009D40  0100               	movlb	0	; () banked
 24289  009D42  6F7B               	movwf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),b
 24290  009D44  ECDB  F034         	call	_ui_disp_adj_xfixed_pt_dp	;wreg free
 24291  009D48  0012               	return		;funcret
 24292  009D4A                     __end_of_ui_disp_menu_bar_full_adj:
 24293                           	opt stack 0
 24294                           tosu	equ	0xFFF
 24295                           tosh	equ	0xFFE
 24296                           tosl	equ	0xFFD
 24297                           pclath	equ	0xFFA
 24298                           tblptru	equ	0xFF8
 24299                           tblptrh	equ	0xFF7
 24300                           tblptrl	equ	0xFF6
 24301                           tablat	equ	0xFF5
 24302                           prodh	equ	0xFF4
 24303                           prodl	equ	0xFF3
 24304                           intcon	equ	0xFF2
 24305                           indf0	equ	0xFEF
 24306                           postinc0	equ	0xFEE
 24307                           fsr0h	equ	0xFEA
 24308                           fsr0l	equ	0xFE9
 24309                           wreg	equ	0xFE8
 24310                           indf1	equ	0xFE7
 24311                           postinc1	equ	0xFE6
 24312                           postdec1	equ	0xFE5
 24313                           plusw1	equ	0xFE3
 24314                           fsr1h	equ	0xFE2
 24315                           fsr1l	equ	0xFE1
 24316                           indf2	equ	0xFDF
 24317                           postinc2	equ	0xFDE
 24318                           postdec2	equ	0xFDD
 24319                           plusw2	equ	0xFDB
 24320                           fsr2h	equ	0xFDA
 24321                           fsr2l	equ	0xFD9
 24322                           status	equ	0xFD8
 24323                           
 24324 ;; *************** function _ui_disp_adj_xfixed_pt_dp *****************
 24325 ;; Defined at:
 24326 ;;		line 308 in file "src/api/ui.c"
 24327 ;; Parameters:    Size  Location     Type
 24328 ;;  str             2   22[BANK0 ] PTR unsigned char 
 24329 ;;		 -> STR_31(5), ui_disp_menu_poly_c_adj@buf(6), 
 24330 ;;  x               2   24[BANK0 ] unsigned int 
 24331 ;;  loc             1   26[BANK0 ] unsigned char 
 24332 ;;  dploc           1   27[BANK0 ] unsigned char 
 24333 ;; Auto vars:     Size  Location     Type
 24334 ;;  buf            10   30[BANK0 ] unsigned char [10]
 24335 ;; Return value:  Size  Location     Type
 24336 ;;                  1    wreg      void 
 24337 ;; Registers used:
 24338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24339 ;; Tracked objects:
 24340 ;;		On entry : 0/0
 24341 ;;		On exit  : 0/0
 24342 ;;		Unchanged: 0/0
 24343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24344 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24345 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24346 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24347 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24348 ;;Total ram usage:       18 bytes
 24349 ;; Hardware stack levels used:    1
 24350 ;; Hardware stack levels required when called:   10
 24351 ;; This function calls:
 24352 ;;		___x_arrange_str
 24353 ;;		_lcd_disp_refresh
 24354 ;;		_lcd_show_dp
 24355 ;;		_lcd_show_string
 24356 ;;		_m_int16_2_str_4
 24357 ;;		_m_mem_cpy
 24358 ;;		_ui_disp_clear_num_dp
 24359 ;; This function is called by:
 24360 ;;		_ui_disp_menu_poly_c_adj
 24361 ;;		_ui_disp_menu_bar_full_adj
 24362 ;; This function uses a non-reentrant model
 24363 ;;
 24364                           
 24365                           	psect	text129
 24366  0069B6                     __ptext129:
 24367                           	opt stack 0
 24368  0069B6                     _ui_disp_adj_xfixed_pt_dp:
 24369                           	opt stack 17
 24370                           
 24371                           ;ui.c: 310: uint8_t buf[10];
 24372                           ;ui.c: 311: ui_disp_clear_num_dp();
 24373                           
 24374                           ;incstack = 0
 24375  0069B6  EC98  F049         	call	_ui_disp_clear_num_dp	;wreg free
 24376                           
 24377                           ;ui.c: 312: if(x>9999)x=9999;
 24378  0069BA  0E10               	movlw	16
 24379  0069BC  0100               	movlb	0	; () banked
 24380  0069BE  5D78               	subwf	ui_disp_adj_xfixed_pt_dp@x& (0+255),w,b
 24381  0069C0  0E27               	movlw	39
 24382  0069C2  0100               	movlb	0	; () banked
 24383  0069C4  5979               	subwfb	(ui_disp_adj_xfixed_pt_dp@x+1)& (0+255),w,b
 24384  0069C6  A0D8               	btfss	status,0,c
 24385  0069C8  D005               	goto	l15383
 24386                           
 24387                           ; BSR set to: 0
 24388  0069CA  0E27               	movlw	39
 24389  0069CC  0100               	movlb	0	; () banked
 24390  0069CE  6F79               	movwf	(ui_disp_adj_xfixed_pt_dp@x+1)& (0+255),b
 24391  0069D0  0E0F               	movlw	15
 24392  0069D2  6F78               	movwf	ui_disp_adj_xfixed_pt_dp@x& (0+255),b
 24393  0069D4                     l15383:
 24394                           
 24395                           ; BSR set to: 0
 24396                           ;ui.c: 313: m_mem_cpy(buf,str);
 24397  0069D4  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24398  0069D6  0100               	movlb	0	; () banked
 24399  0069D8  6F60               	movwf	m_mem_cpy@d& (0+255),b
 24400  0069DA  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24401  0069DC  0100               	movlb	0	; () banked
 24402  0069DE  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 24403  0069E0  C076  F062         	movff	ui_disp_adj_xfixed_pt_dp@str,m_mem_cpy@s
 24404  0069E4  C077  F063         	movff	ui_disp_adj_xfixed_pt_dp@str+1,m_mem_cpy@s+1
 24405  0069E8  ECB8  F045         	call	_m_mem_cpy	;wreg free
 24406                           
 24407                           ;ui.c: 314: m_int16_2_str_4(buf+4,x);
 24408  0069EC  0E82               	movlw	low (ui_disp_adj_xfixed_pt_dp@buf+4)
 24409  0069EE  0100               	movlb	0	; () banked
 24410  0069F0  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 24411  0069F2  0E00               	movlw	high (ui_disp_adj_xfixed_pt_dp@buf+4)
 24412  0069F4  0100               	movlb	0	; () banked
 24413  0069F6  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 24414  0069F8  C078  F06A         	movff	ui_disp_adj_xfixed_pt_dp@x,m_int16_2_str_4@x
 24415  0069FC  C079  F06B         	movff	ui_disp_adj_xfixed_pt_dp@x+1,m_int16_2_str_4@x+1
 24416  006A00  ECE4  F027         	call	_m_int16_2_str_4	;wreg free
 24417                           
 24418                           ;ui.c: 315: __x_arrange_str(buf,8);
 24419  006A04  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24420  006A06  0100               	movlb	0	; () banked
 24421  006A08  6F60               	movwf	___x_arrange_str@str& (0+255),b
 24422  006A0A  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24423  006A0C  0100               	movlb	0	; () banked
 24424  006A0E  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 24425  006A10  0E08               	movlw	8
 24426  006A12  0100               	movlb	0	; () banked
 24427  006A14  6F62               	movwf	___x_arrange_str@len& (0+255),b
 24428  006A16  ECE0  F048         	call	___x_arrange_str	;wreg free
 24429                           
 24430                           ;ui.c: 316: if(loc>3)loc=3;
 24431  006A1A  0E03               	movlw	3
 24432  006A1C  0100               	movlb	0	; () banked
 24433  006A1E  657A               	cpfsgt	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 24434  006A20  D003               	goto	l15393
 24435                           
 24436                           ; BSR set to: 0
 24437  006A22  0E03               	movlw	3
 24438  006A24  0100               	movlb	0	; () banked
 24439  006A26  6F7A               	movwf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 24440  006A28                     l15393:
 24441                           
 24442                           ; BSR set to: 0
 24443                           ;ui.c: 317: loc=3-loc;
 24444  006A28  0100               	movlb	0	; () banked
 24445  006A2A  517A               	movf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),w,b
 24446  006A2C  0800               	sublw	0
 24447  006A2E  0F03               	addlw	3
 24448  006A30  0100               	movlb	0	; () banked
 24449  006A32  6F7A               	movwf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 24450                           
 24451                           ; BSR set to: 0
 24452                           ;ui.c: 318: if(!(lcdTwinkle>0)){
 24453  006A34  5034               	movf	_lcdTwinkle,w,c
 24454  006A36  A4D8               	btfss	status,2,c
 24455  006A38  D017               	goto	l15401
 24456                           
 24457                           ; BSR set to: 0
 24458                           ;ui.c: 319: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
 24459  006A3A  010F               	movlb	15	; () banked
 24460  006A3C  B75F               	btfsc	95,3,b	;volatile
 24461  006A3E  D014               	goto	l15401
 24462                           
 24463                           ; BSR set to: 15
 24464  006A40  0100               	movlb	0	; () banked
 24465  006A42  517A               	movf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),w,b
 24466  006A44  0100               	movlb	0	; () banked
 24467  006A46  6F7C               	movwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),b
 24468  006A48  6B7D               	clrf	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),b
 24469  006A4A  0E04               	movlw	4
 24470  006A4C  0100               	movlb	0	; () banked
 24471  006A4E  277C               	addwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),f,b
 24472  006A50  0E00               	movlw	0
 24473  006A52  237D               	addwfc	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),f,b
 24474  006A54  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24475  006A56  0100               	movlb	0	; () banked
 24476  006A58  257C               	addwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),w,b
 24477  006A5A  6ED9               	movwf	fsr2l,c
 24478  006A5C  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24479  006A5E  0100               	movlb	0	; () banked
 24480  006A60  217D               	addwfc	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),w,b
 24481  006A62  6EDA               	movwf	fsr2h,c
 24482  006A64  0E20               	movlw	32
 24483  006A66  6EDF               	movwf	indf2,c
 24484  006A68                     l15401:
 24485                           
 24486                           ;ui.c: 320: }
 24487                           ;ui.c: 321: lcd_show_dp(4+dploc,1);
 24488  006A68  0E01               	movlw	1
 24489  006A6A  0100               	movlb	0	; () banked
 24490  006A6C  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24491  006A6E  0100               	movlb	0	; () banked
 24492  006A70  517B               	movf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),w,b
 24493  006A72  0F04               	addlw	4
 24494  006A74  EC82  F045         	call	_lcd_show_dp
 24495                           
 24496                           ;ui.c: 322: lcd_show_string(buf);
 24497  006A78  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24498  006A7A  0100               	movlb	0	; () banked
 24499  006A7C  6F73               	movwf	lcd_show_string@str& (0+255),b
 24500  006A7E  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24501  006A80  0100               	movlb	0	; () banked
 24502  006A82  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 24503  006A84  EC4B  F045         	call	_lcd_show_string	;wreg free
 24504                           
 24505                           ;ui.c: 323: lcd_disp_refresh();
 24506  006A88  EC80  F048         	call	_lcd_disp_refresh	;wreg free
 24507  006A8C  0012               	return		;funcret
 24508  006A8E                     __end_of_ui_disp_adj_xfixed_pt_dp:
 24509                           	opt stack 0
 24510                           tosu	equ	0xFFF
 24511                           tosh	equ	0xFFE
 24512                           tosl	equ	0xFFD
 24513                           pclath	equ	0xFFA
 24514                           tblptru	equ	0xFF8
 24515                           tblptrh	equ	0xFF7
 24516                           tblptrl	equ	0xFF6
 24517                           tablat	equ	0xFF5
 24518                           prodh	equ	0xFF4
 24519                           prodl	equ	0xFF3
 24520                           intcon	equ	0xFF2
 24521                           indf0	equ	0xFEF
 24522                           postinc0	equ	0xFEE
 24523                           fsr0h	equ	0xFEA
 24524                           fsr0l	equ	0xFE9
 24525                           wreg	equ	0xFE8
 24526                           indf1	equ	0xFE7
 24527                           postinc1	equ	0xFE6
 24528                           postdec1	equ	0xFE5
 24529                           plusw1	equ	0xFE3
 24530                           fsr1h	equ	0xFE2
 24531                           fsr1l	equ	0xFE1
 24532                           indf2	equ	0xFDF
 24533                           postinc2	equ	0xFDE
 24534                           postdec2	equ	0xFDD
 24535                           plusw2	equ	0xFDB
 24536                           fsr2h	equ	0xFDA
 24537                           fsr2l	equ	0xFD9
 24538                           status	equ	0xFD8
 24539                           
 24540 ;; *************** function _ui_disp_clear_num_dp *****************
 24541 ;; Defined at:
 24542 ;;		line 193 in file "src/api/ui.c"
 24543 ;; Parameters:    Size  Location     Type
 24544 ;;		None
 24545 ;; Auto vars:     Size  Location     Type
 24546 ;;		None
 24547 ;; Return value:  Size  Location     Type
 24548 ;;                  1    wreg      void 
 24549 ;; Registers used:
 24550 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24551 ;; Tracked objects:
 24552 ;;		On entry : 0/0
 24553 ;;		On exit  : 0/0
 24554 ;;		Unchanged: 0/0
 24555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24560 ;;Total ram usage:        0 bytes
 24561 ;; Hardware stack levels used:    1
 24562 ;; Hardware stack levels required when called:    9
 24563 ;; This function calls:
 24564 ;;		_lcd_show_dp
 24565 ;;		_lcd_show_string
 24566 ;; This function is called by:
 24567 ;;		_ui_disp_adj_xfixed_pt
 24568 ;;		_ui_disp_adj_xfixed_pt_dp
 24569 ;;		_ui_disp_menu_home_00
 24570 ;;		_ui_disp_menu_home_01
 24571 ;;		_ui_disp_menu_home_02
 24572 ;; This function uses a non-reentrant model
 24573 ;;
 24574                           
 24575                           	psect	text130
 24576  009330                     __ptext130:
 24577                           	opt stack 0
 24578  009330                     _ui_disp_clear_num_dp:
 24579                           	opt stack 17
 24580                           
 24581                           ;ui.c: 195: lcd_show_string((uint8_t*)"        ");
 24582                           
 24583                           ;incstack = 0
 24584  009330  0E70               	movlw	low STR_2
 24585  009332  0100               	movlb	0	; () banked
 24586  009334  6F73               	movwf	lcd_show_string@str& (0+255),b
 24587  009336  0EF3               	movlw	high STR_2
 24588  009338  0100               	movlb	0	; () banked
 24589  00933A  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 24590  00933C  EC4B  F045         	call	_lcd_show_string	;wreg free
 24591                           
 24592                           ;ui.c: 196: lcd_show_dp(0,0);
 24593  009340  0E00               	movlw	0
 24594  009342  0100               	movlb	0	; () banked
 24595  009344  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24596  009346  0E00               	movlw	0
 24597  009348  EC82  F045         	call	_lcd_show_dp
 24598                           
 24599                           ;ui.c: 197: lcd_show_dp(1,0);
 24600  00934C  0E00               	movlw	0
 24601  00934E  0100               	movlb	0	; () banked
 24602  009350  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24603  009352  0E01               	movlw	1
 24604  009354  EC82  F045         	call	_lcd_show_dp
 24605                           
 24606                           ;ui.c: 198: lcd_show_dp(2,0);
 24607  009358  0E00               	movlw	0
 24608  00935A  0100               	movlb	0	; () banked
 24609  00935C  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24610  00935E  0E02               	movlw	2
 24611  009360  EC82  F045         	call	_lcd_show_dp
 24612                           
 24613                           ;ui.c: 199: lcd_show_dp(4,0);
 24614  009364  0E00               	movlw	0
 24615  009366  0100               	movlb	0	; () banked
 24616  009368  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24617  00936A  0E04               	movlw	4
 24618  00936C  EC82  F045         	call	_lcd_show_dp
 24619                           
 24620                           ;ui.c: 200: lcd_show_dp(5,0);
 24621  009370  0E00               	movlw	0
 24622  009372  0100               	movlb	0	; () banked
 24623  009374  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24624  009376  0E05               	movlw	5
 24625  009378  EC82  F045         	call	_lcd_show_dp
 24626                           
 24627                           ;ui.c: 201: lcd_show_dp(6,0);
 24628  00937C  0E00               	movlw	0
 24629  00937E  0100               	movlb	0	; () banked
 24630  009380  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24631  009382  0E06               	movlw	6
 24632  009384  EC82  F045         	call	_lcd_show_dp
 24633  009388  0012               	return		;funcret
 24634  00938A                     __end_of_ui_disp_clear_num_dp:
 24635                           	opt stack 0
 24636                           tosu	equ	0xFFF
 24637                           tosh	equ	0xFFE
 24638                           tosl	equ	0xFFD
 24639                           pclath	equ	0xFFA
 24640                           tblptru	equ	0xFF8
 24641                           tblptrh	equ	0xFF7
 24642                           tblptrl	equ	0xFF6
 24643                           tablat	equ	0xFF5
 24644                           prodh	equ	0xFF4
 24645                           prodl	equ	0xFF3
 24646                           intcon	equ	0xFF2
 24647                           indf0	equ	0xFEF
 24648                           postinc0	equ	0xFEE
 24649                           fsr0h	equ	0xFEA
 24650                           fsr0l	equ	0xFE9
 24651                           wreg	equ	0xFE8
 24652                           indf1	equ	0xFE7
 24653                           postinc1	equ	0xFE6
 24654                           postdec1	equ	0xFE5
 24655                           plusw1	equ	0xFE3
 24656                           fsr1h	equ	0xFE2
 24657                           fsr1l	equ	0xFE1
 24658                           indf2	equ	0xFDF
 24659                           postinc2	equ	0xFDE
 24660                           postdec2	equ	0xFDD
 24661                           plusw2	equ	0xFDB
 24662                           fsr2h	equ	0xFDA
 24663                           fsr2l	equ	0xFD9
 24664                           status	equ	0xFD8
 24665                           
 24666 ;; *************** function _lcd_show_string *****************
 24667 ;; Defined at:
 24668 ;;		line 559 in file "src/driver/lcd.c"
 24669 ;; Parameters:    Size  Location     Type
 24670 ;;  str             2   19[BANK0 ] PTR unsigned char 
 24671 ;;		 -> ui_disp_menu_work_mode_adj@buf(10), ui_disp_menu_calib_pr_adj@buf(10), ui_disp_menu_calib_diff_adj@buf(10), ui_d
      +isp_adj_xfixed_pt_dp@buf(10), 
 24672 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
 24673 ;; Auto vars:     Size  Location     Type
 24674 ;;  t8              1   21[BANK0 ] unsigned char 
 24675 ;; Return value:  Size  Location     Type
 24676 ;;                  1    wreg      void 
 24677 ;; Registers used:
 24678 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24679 ;; Tracked objects:
 24680 ;;		On entry : 0/0
 24681 ;;		On exit  : 0/0
 24682 ;;		Unchanged: 0/0
 24683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24687 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24688 ;;Total ram usage:        3 bytes
 24689 ;; Hardware stack levels used:    1
 24690 ;; Hardware stack levels required when called:    8
 24691 ;; This function calls:
 24692 ;;		_lcd_show_chr
 24693 ;; This function is called by:
 24694 ;;		_ui_disp_clear_num_dp
 24695 ;;		_ui_disp_adj_xfloat_pt
 24696 ;;		_ui_disp_adj_xfixed_pt
 24697 ;;		_ui_disp_adj_xfixed_pt_dp
 24698 ;;		_ui_disp_menu_calib_diff_adj
 24699 ;;		_ui_disp_menu_calib_pr_adj
 24700 ;;		_ui_disp_menu_work_mode_adj
 24701 ;;		_ui_disp_rtc_mm_ss
 24702 ;; This function uses a non-reentrant model
 24703 ;;
 24704                           
 24705                           	psect	text131
 24706  008A96                     __ptext131:
 24707                           	opt stack 0
 24708  008A96                     _lcd_show_string:
 24709                           	opt stack 19
 24710                           
 24711                           ;lcd.c: 561: uint8_t t8=0;
 24712                           
 24713                           ;incstack = 0
 24714  008A96  0E00               	movlw	0
 24715  008A98  0100               	movlb	0	; () banked
 24716  008A9A  6F75               	movwf	lcd_show_string@t8& (0+255),b
 24717                           
 24718                           ;lcd.c: 562: while(*str!='\0' && t8<8){
 24719  008A9C  D01B               	goto	l14039
 24720  008A9E                     l14033:
 24721                           
 24722                           ; BSR set to: 0
 24723                           ;lcd.c: 563: lcd_show_chr(t8,*str);
 24724  008A9E  C073  FFF6         	movff	lcd_show_string@str,tblptrl
 24725  008AA2  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
 24726  008AA6  6AF8               	clrf	tblptru,c
 24727  008AA8  0E0F               	movlw	(high __ramtop+-1)
 24728  008AAA  64F7               	cpfsgt	tblptrh,c
 24729  008AAC  D003               	bra	u12727
 24730  008AAE  0008               	tblrd		*
 24731  008AB0  50F5               	movf	tablat,w,c
 24732  008AB2  D005               	bra	u12720
 24733  008AB4                     u12727:
 24734  008AB4  CFF6 FFE9          	movff	tblptrl,fsr0l
 24735  008AB8  CFF7 FFEA          	movff	tblptrh,fsr0h
 24736  008ABC  50EF               	movf	indf0,w,c
 24737  008ABE                     u12720:
 24738  008ABE  0100               	movlb	0	; () banked
 24739  008AC0  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 24740  008AC2  0100               	movlb	0	; () banked
 24741  008AC4  5175               	movf	lcd_show_string@t8& (0+255),w,b
 24742  008AC6  EC72  F03E         	call	_lcd_show_chr
 24743                           
 24744                           ;lcd.c: 564: str++;
 24745  008ACA  0100               	movlb	0	; () banked
 24746  008ACC  4B73               	infsnz	lcd_show_string@str& (0+255),f,b
 24747  008ACE  2B74               	incf	(lcd_show_string@str+1)& (0+255),f,b
 24748                           
 24749                           ; BSR set to: 0
 24750                           ;lcd.c: 565: t8++;
 24751  008AD0  0100               	movlb	0	; () banked
 24752  008AD2  2B75               	incf	lcd_show_string@t8& (0+255),f,b
 24753  008AD4                     l14039:
 24754                           
 24755                           ; BSR set to: 0
 24756  008AD4  C073  FFF6         	movff	lcd_show_string@str,tblptrl
 24757  008AD8  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
 24758  008ADC  6AF8               	clrf	tblptru,c
 24759  008ADE  0E0F               	movlw	(high __ramtop+-1)
 24760  008AE0  64F7               	cpfsgt	tblptrh,c
 24761  008AE2  D003               	bra	u12737
 24762  008AE4  0008               	tblrd		*
 24763  008AE6  50F5               	movf	tablat,w,c
 24764  008AE8  D005               	bra	u12730
 24765  008AEA                     u12737:
 24766  008AEA  CFF6 FFE9          	movff	tblptrl,fsr0l
 24767  008AEE  CFF7 FFEA          	movff	tblptrh,fsr0h
 24768  008AF2  50EF               	movf	indf0,w,c
 24769  008AF4                     u12730:
 24770  008AF4  0900               	iorlw	0
 24771  008AF6  B4D8               	btfsc	status,2,c
 24772  008AF8  0012               	return	
 24773  008AFA  0E07               	movlw	7
 24774  008AFC  0100               	movlb	0	; () banked
 24775  008AFE  6575               	cpfsgt	lcd_show_string@t8& (0+255),b
 24776  008B00  D7CE               	goto	l14033
 24777  008B02  0012               	return	
 24778  008B04                     __end_of_lcd_show_string:
 24779                           	opt stack 0
 24780                           tosu	equ	0xFFF
 24781                           tosh	equ	0xFFE
 24782                           tosl	equ	0xFFD
 24783                           pclath	equ	0xFFA
 24784                           tblptru	equ	0xFF8
 24785                           tblptrh	equ	0xFF7
 24786                           tblptrl	equ	0xFF6
 24787                           tablat	equ	0xFF5
 24788                           prodh	equ	0xFF4
 24789                           prodl	equ	0xFF3
 24790                           intcon	equ	0xFF2
 24791                           indf0	equ	0xFEF
 24792                           postinc0	equ	0xFEE
 24793                           fsr0h	equ	0xFEA
 24794                           fsr0l	equ	0xFE9
 24795                           wreg	equ	0xFE8
 24796                           indf1	equ	0xFE7
 24797                           postinc1	equ	0xFE6
 24798                           postdec1	equ	0xFE5
 24799                           plusw1	equ	0xFE3
 24800                           fsr1h	equ	0xFE2
 24801                           fsr1l	equ	0xFE1
 24802                           indf2	equ	0xFDF
 24803                           postinc2	equ	0xFDE
 24804                           postdec2	equ	0xFDD
 24805                           plusw2	equ	0xFDB
 24806                           fsr2h	equ	0xFDA
 24807                           fsr2l	equ	0xFD9
 24808                           status	equ	0xFD8
 24809                           
 24810 ;; *************** function _lcd_show_chr *****************
 24811 ;; Defined at:
 24812 ;;		line 514 in file "src/driver/lcd.c"
 24813 ;; Parameters:    Size  Location     Type
 24814 ;;  loc             1    wreg     unsigned char 
 24815 ;;  chr             1   16[BANK0 ] unsigned char 
 24816 ;; Auto vars:     Size  Location     Type
 24817 ;;  loc             1   17[BANK0 ] unsigned char 
 24818 ;;  code            1   18[BANK0 ] unsigned char 
 24819 ;; Return value:  Size  Location     Type
 24820 ;;                  1    wreg      void 
 24821 ;; Registers used:
 24822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24823 ;; Tracked objects:
 24824 ;;		On entry : 0/0
 24825 ;;		On exit  : 0/0
 24826 ;;		Unchanged: 0/0
 24827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24828 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24829 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24831 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24832 ;;Total ram usage:        3 bytes
 24833 ;; Hardware stack levels used:    1
 24834 ;; Hardware stack levels required when called:    7
 24835 ;; This function calls:
 24836 ;;		_lcd_disp_chr_loc_0
 24837 ;;		_lcd_disp_chr_loc_1
 24838 ;;		_lcd_disp_chr_loc_2
 24839 ;;		_lcd_disp_chr_loc_3
 24840 ;;		_lcd_disp_chr_loc_4
 24841 ;;		_lcd_disp_chr_loc_5
 24842 ;;		_lcd_disp_chr_loc_6
 24843 ;;		_lcd_disp_chr_loc_7
 24844 ;;		_lcd_disp_get_code
 24845 ;; This function is called by:
 24846 ;;		_lcd_show_string_l0
 24847 ;;		_lcd_show_string_l1
 24848 ;;		_lcd_show_string
 24849 ;;		_lcd_show_chr_lc
 24850 ;; This function uses a non-reentrant model
 24851 ;;
 24852                           
 24853                           	psect	text132
 24854  007CE4                     __ptext132:
 24855                           	opt stack 0
 24856  007CE4                     _lcd_show_chr:
 24857                           	opt stack 21
 24858                           
 24859                           ;incstack = 0
 24860                           ;lcd_show_chr@loc stored from wreg
 24861  007CE4  0100               	movlb	0	; () banked
 24862  007CE6  6F71               	movwf	lcd_show_chr@loc& (0+255),b
 24863                           
 24864                           ;lcd.c: 516: uint8_t code=lcd_disp_get_code(chr);
 24865  007CE8  0100               	movlb	0	; () banked
 24866  007CEA  5170               	movf	lcd_show_chr@chr& (0+255),w,b
 24867  007CEC  ECB1  F048         	call	_lcd_disp_get_code
 24868  007CF0  0100               	movlb	0	; () banked
 24869  007CF2  6F72               	movwf	lcd_show_chr@code& (0+255),b
 24870                           
 24871                           ;lcd.c: 517: switch(loc){
 24872  007CF4  D028               	goto	l13335
 24873  007CF6                     l13317:
 24874                           
 24875                           ; BSR set to: 0
 24876  007CF6  0100               	movlb	0	; () banked
 24877  007CF8  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24878  007CFA  ECB6  F040         	call	_lcd_disp_chr_loc_0
 24879  007CFE  0012               	return	
 24880  007D00                     l13319:
 24881  007D00  0100               	movlb	0	; () banked
 24882  007D02  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24883  007D04  EC6E  F040         	call	_lcd_disp_chr_loc_1
 24884  007D08  0012               	return	
 24885  007D0A                     l13321:
 24886  007D0A  0100               	movlb	0	; () banked
 24887  007D0C  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24888  007D0E  EC26  F040         	call	_lcd_disp_chr_loc_2
 24889  007D12  0012               	return	
 24890  007D14                     l13323:
 24891  007D14  0100               	movlb	0	; () banked
 24892  007D16  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24893  007D18  ECDE  F03F         	call	_lcd_disp_chr_loc_3
 24894  007D1C  0012               	return	
 24895  007D1E                     l13325:
 24896  007D1E  0100               	movlb	0	; () banked
 24897  007D20  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24898  007D22  EC96  F03F         	call	_lcd_disp_chr_loc_4
 24899  007D26  0012               	return	
 24900  007D28                     l13327:
 24901  007D28  0100               	movlb	0	; () banked
 24902  007D2A  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24903  007D2C  EC4E  F03F         	call	_lcd_disp_chr_loc_5
 24904  007D30  0012               	return	
 24905  007D32                     l13329:
 24906  007D32  0100               	movlb	0	; () banked
 24907  007D34  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24908  007D36  EC06  F03F         	call	_lcd_disp_chr_loc_6
 24909  007D3A  0012               	return	
 24910  007D3C                     l13331:
 24911  007D3C  0100               	movlb	0	; () banked
 24912  007D3E  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24913  007D40  ECBE  F03E         	call	_lcd_disp_chr_loc_7
 24914                           
 24915                           ;lcd.c: 527: }
 24916                           
 24917                           ;lcd.c: 526: default:break;
 24918  007D44  0012               	return	
 24919  007D46                     l13335:
 24920  007D46  0100               	movlb	0	; () banked
 24921  007D48  5171               	movf	lcd_show_chr@loc& (0+255),w,b
 24922                           
 24923                           ; Switch size 1, requested type "space"
 24924                           ; Number of cases is 8, Range of values is 0 to 7
 24925                           ; switch strategies available:
 24926                           ; Name         Instructions Cycles
 24927                           ; simple_byte           25    13 (average)
 24928                           ;	Chosen strategy is simple_byte
 24929  007D4A  0A00               	xorlw	0	; case 0
 24930  007D4C  B4D8               	btfsc	status,2,c
 24931  007D4E  D7D3               	goto	l13317
 24932  007D50  0A01               	xorlw	1	; case 1
 24933  007D52  B4D8               	btfsc	status,2,c
 24934  007D54  D7D5               	goto	l13319
 24935  007D56  0A03               	xorlw	3	; case 2
 24936  007D58  B4D8               	btfsc	status,2,c
 24937  007D5A  D7D7               	goto	l13321
 24938  007D5C  0A01               	xorlw	1	; case 3
 24939  007D5E  B4D8               	btfsc	status,2,c
 24940  007D60  D7D9               	goto	l13323
 24941  007D62  0A07               	xorlw	7	; case 4
 24942  007D64  B4D8               	btfsc	status,2,c
 24943  007D66  D7DB               	goto	l13325
 24944  007D68  0A01               	xorlw	1	; case 5
 24945  007D6A  B4D8               	btfsc	status,2,c
 24946  007D6C  D7DD               	goto	l13327
 24947  007D6E  0A03               	xorlw	3	; case 6
 24948  007D70  B4D8               	btfsc	status,2,c
 24949  007D72  D7DF               	goto	l13329
 24950  007D74  0A01               	xorlw	1	; case 7
 24951  007D76  A4D8               	btfss	status,2,c
 24952  007D78  0012               	return	
 24953  007D7A  D7E0               	goto	l13331
 24954  007D7C                     __end_of_lcd_show_chr:
 24955                           	opt stack 0
 24956                           tosu	equ	0xFFF
 24957                           tosh	equ	0xFFE
 24958                           tosl	equ	0xFFD
 24959                           pclath	equ	0xFFA
 24960                           tblptru	equ	0xFF8
 24961                           tblptrh	equ	0xFF7
 24962                           tblptrl	equ	0xFF6
 24963                           tablat	equ	0xFF5
 24964                           prodh	equ	0xFF4
 24965                           prodl	equ	0xFF3
 24966                           intcon	equ	0xFF2
 24967                           indf0	equ	0xFEF
 24968                           postinc0	equ	0xFEE
 24969                           fsr0h	equ	0xFEA
 24970                           fsr0l	equ	0xFE9
 24971                           wreg	equ	0xFE8
 24972                           indf1	equ	0xFE7
 24973                           postinc1	equ	0xFE6
 24974                           postdec1	equ	0xFE5
 24975                           plusw1	equ	0xFE3
 24976                           fsr1h	equ	0xFE2
 24977                           fsr1l	equ	0xFE1
 24978                           indf2	equ	0xFDF
 24979                           postinc2	equ	0xFDE
 24980                           postdec2	equ	0xFDD
 24981                           plusw2	equ	0xFDB
 24982                           fsr2h	equ	0xFDA
 24983                           fsr2l	equ	0xFD9
 24984                           status	equ	0xFD8
 24985                           
 24986 ;; *************** function _lcd_disp_get_code *****************
 24987 ;; Defined at:
 24988 ;;		line 476 in file "src/driver/lcd.c"
 24989 ;; Parameters:    Size  Location     Type
 24990 ;;  chr             1    wreg     unsigned char 
 24991 ;; Auto vars:     Size  Location     Type
 24992 ;;  chr             1    0[BANK0 ] unsigned char 
 24993 ;;  i               1    2[BANK0 ] unsigned char 
 24994 ;;  ret             1    1[BANK0 ] unsigned char 
 24995 ;; Return value:  Size  Location     Type
 24996 ;;                  1    wreg      unsigned char 
 24997 ;; Registers used:
 24998 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24999 ;; Tracked objects:
 25000 ;;		On entry : 0/0
 25001 ;;		On exit  : 0/0
 25002 ;;		Unchanged: 0/0
 25003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25005 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25007 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25008 ;;Total ram usage:        3 bytes
 25009 ;; Hardware stack levels used:    1
 25010 ;; Hardware stack levels required when called:    4
 25011 ;; This function calls:
 25012 ;;		Nothing
 25013 ;; This function is called by:
 25014 ;;		_lcd_show_chr
 25015 ;; This function uses a non-reentrant model
 25016 ;;
 25017                           
 25018                           	psect	text133
 25019  009162                     __ptext133:
 25020                           	opt stack 0
 25021  009162                     _lcd_disp_get_code:
 25022                           	opt stack 23
 25023                           
 25024                           ;incstack = 0
 25025                           ;lcd_disp_get_code@chr stored from wreg
 25026  009162  0100               	movlb	0	; () banked
 25027  009164  6F60               	movwf	lcd_disp_get_code@chr& (0+255),b
 25028                           
 25029                           ;lcd.c: 478: uint8_t i;
 25030                           ;lcd.c: 479: uint8_t ret;
 25031                           ;lcd.c: 480: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
 25032  009166  0E00               	movlw	0
 25033  009168  0100               	movlb	0	; () banked
 25034  00916A  6F62               	movwf	lcd_disp_get_code@i& (0+255),b
 25035  00916C                     l13173:
 25036                           
 25037                           ; BSR set to: 0
 25038  00916C  0E2A               	movlw	42
 25039  00916E  0100               	movlb	0	; () banked
 25040  009170  6562               	cpfsgt	lcd_disp_get_code@i& (0+255),b
 25041  009172  D001               	goto	l13177
 25042  009174  D012               	goto	l13185
 25043  009176                     l13177:
 25044                           
 25045                           ; BSR set to: 0
 25046                           ;lcd.c: 481: if(chr==LCDDigitalIndexTable[i])break;
 25047  009176  0100               	movlb	0	; () banked
 25048  009178  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 25049  00917A  0D01               	mullw	1
 25050  00917C  0EB1               	movlw	low _LCDDigitalIndexTable
 25051  00917E  24F3               	addwf	prodl,w,c
 25052  009180  6EF6               	movwf	tblptrl,c
 25053  009182  0EEE               	movlw	high _LCDDigitalIndexTable
 25054  009184  20F4               	addwfc	prodh,w,c
 25055  009186  6EF7               	movwf	tblptrh,c
 25056  009188                     	if	0	;There are less than 3 active tblptr bytes
 25057  009188                     	endif
 25058  009188  0008               	tblrd		*
 25059  00918A  50F5               	movf	tablat,w,c
 25060  00918C  0100               	movlb	0	; () banked
 25061  00918E  1960               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
 25062  009190  B4D8               	btfsc	status,2,c
 25063  009192  D003               	goto	l13185
 25064                           
 25065                           ; BSR set to: 0
 25066                           
 25067                           ; BSR set to: 0
 25068                           
 25069                           ; BSR set to: 0
 25070  009194  0100               	movlb	0	; () banked
 25071  009196  2B62               	incf	lcd_disp_get_code@i& (0+255),f,b
 25072  009198  D7E9               	goto	l13173
 25073  00919A                     l13185:
 25074                           
 25075                           ; BSR set to: 0
 25076                           ;lcd.c: 482: }
 25077                           ;lcd.c: 483: if(i<sizeof(LCDDigitalIndexTable)){
 25078  00919A  0E2B               	movlw	43
 25079  00919C  0100               	movlb	0	; () banked
 25080  00919E  6162               	cpfslt	lcd_disp_get_code@i& (0+255),b
 25081  0091A0  D00C               	goto	l13189
 25082                           
 25083                           ; BSR set to: 0
 25084                           ;lcd.c: 484: ret= LCDDigitalTable[i];
 25085  0091A2  0100               	movlb	0	; () banked
 25086  0091A4  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 25087  0091A6  0D01               	mullw	1
 25088  0091A8  0EDC               	movlw	low _LCDDigitalTable
 25089  0091AA  24F3               	addwf	prodl,w,c
 25090  0091AC  6EF6               	movwf	tblptrl,c
 25091  0091AE  0EEE               	movlw	high _LCDDigitalTable
 25092  0091B0  20F4               	addwfc	prodh,w,c
 25093  0091B2  6EF7               	movwf	tblptrh,c
 25094  0091B4                     	if	0	;There are less than 3 active tblptr bytes
 25095  0091B4                     	endif
 25096  0091B4  0008               	tblrd		*
 25097  0091B6  CFF5 F061          	movff	tablat,lcd_disp_get_code@ret
 25098  0091BA                     l13189:
 25099                           
 25100                           ; BSR set to: 0
 25101                           ;lcd.c: 485: }
 25102                           ;lcd.c: 486: return ret;
 25103  0091BA  0100               	movlb	0	; () banked
 25104  0091BC  5161               	movf	lcd_disp_get_code@ret& (0+255),w,b
 25105  0091BE  0012               	return	
 25106  0091C0                     __end_of_lcd_disp_get_code:
 25107                           	opt stack 0
 25108                           tosu	equ	0xFFF
 25109                           tosh	equ	0xFFE
 25110                           tosl	equ	0xFFD
 25111                           pclath	equ	0xFFA
 25112                           tblptru	equ	0xFF8
 25113                           tblptrh	equ	0xFF7
 25114                           tblptrl	equ	0xFF6
 25115                           tablat	equ	0xFF5
 25116                           prodh	equ	0xFF4
 25117                           prodl	equ	0xFF3
 25118                           intcon	equ	0xFF2
 25119                           indf0	equ	0xFEF
 25120                           postinc0	equ	0xFEE
 25121                           fsr0h	equ	0xFEA
 25122                           fsr0l	equ	0xFE9
 25123                           wreg	equ	0xFE8
 25124                           indf1	equ	0xFE7
 25125                           postinc1	equ	0xFE6
 25126                           postdec1	equ	0xFE5
 25127                           plusw1	equ	0xFE3
 25128                           fsr1h	equ	0xFE2
 25129                           fsr1l	equ	0xFE1
 25130                           indf2	equ	0xFDF
 25131                           postinc2	equ	0xFDE
 25132                           postdec2	equ	0xFDD
 25133                           plusw2	equ	0xFDB
 25134                           fsr2h	equ	0xFDA
 25135                           fsr2l	equ	0xFD9
 25136                           status	equ	0xFD8
 25137                           
 25138 ;; *************** function _lcd_disp_chr_loc_7 *****************
 25139 ;; Defined at:
 25140 ;;		line 354 in file "src/driver/lcd.c"
 25141 ;; Parameters:    Size  Location     Type
 25142 ;;  code            1    wreg     unsigned char 
 25143 ;; Auto vars:     Size  Location     Type
 25144 ;;  code            1   31[COMRAM] unsigned char 
 25145 ;; Return value:  Size  Location     Type
 25146 ;;                  1    wreg      void 
 25147 ;; Registers used:
 25148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25149 ;; Tracked objects:
 25150 ;;		On entry : 0/0
 25151 ;;		On exit  : 0/0
 25152 ;;		Unchanged: 0/0
 25153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25158 ;;Total ram usage:        1 bytes
 25159 ;; Hardware stack levels used:    1
 25160 ;; Hardware stack levels required when called:    6
 25161 ;; This function calls:
 25162 ;;		_lcd_set_com_seg
 25163 ;; This function is called by:
 25164 ;;		_lcd_show_chr
 25165 ;; This function uses a non-reentrant model
 25166 ;;
 25167                           
 25168                           	psect	text134
 25169  007D7C                     __ptext134:
 25170                           	opt stack 0
 25171  007D7C                     _lcd_disp_chr_loc_7:
 25172                           	opt stack 21
 25173                           
 25174                           ; BSR set to: 0
 25175                           ;incstack = 0
 25176                           ;lcd_disp_chr_loc_7@code stored from wreg
 25177  007D7C  6E20               	movwf	lcd_disp_chr_loc_7@code,c
 25178                           
 25179                           ;lcd.c: 356: lcd_set_com_seg(0,19,code&0x08);
 25180  007D7E  0E13               	movlw	19
 25181  007D80  0100               	movlb	0	; () banked
 25182  007D82  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25183  007D84  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25184  007D86  0B08               	andlw	8
 25185  007D88  0100               	movlb	0	; () banked
 25186  007D8A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25187  007D8C  0E00               	movlw	0
 25188  007D8E  ECDA  F036         	call	_lcd_set_com_seg
 25189                           
 25190                           ;lcd.c: 357: lcd_set_com_seg(1,19,code&0x10);
 25191  007D92  0E13               	movlw	19
 25192  007D94  0100               	movlb	0	; () banked
 25193  007D96  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25194  007D98  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25195  007D9A  0B10               	andlw	16
 25196  007D9C  0100               	movlb	0	; () banked
 25197  007D9E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25198  007DA0  0E01               	movlw	1
 25199  007DA2  ECDA  F036         	call	_lcd_set_com_seg
 25200                           
 25201                           ;lcd.c: 358: lcd_set_com_seg(2,19,code&0x20);
 25202  007DA6  0E13               	movlw	19
 25203  007DA8  0100               	movlb	0	; () banked
 25204  007DAA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25205  007DAC  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25206  007DAE  0B20               	andlw	32
 25207  007DB0  0100               	movlb	0	; () banked
 25208  007DB2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25209  007DB4  0E02               	movlw	2
 25210  007DB6  ECDA  F036         	call	_lcd_set_com_seg
 25211                           
 25212                           ;lcd.c: 359: lcd_set_com_seg(3,19,code&0x01);
 25213  007DBA  0E13               	movlw	19
 25214  007DBC  0100               	movlb	0	; () banked
 25215  007DBE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25216  007DC0  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25217  007DC2  0B01               	andlw	1
 25218  007DC4  0100               	movlb	0	; () banked
 25219  007DC6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25220  007DC8  0E03               	movlw	3
 25221  007DCA  ECDA  F036         	call	_lcd_set_com_seg
 25222                           
 25223                           ;lcd.c: 361: lcd_set_com_seg(1,40,code&0x04);
 25224  007DCE  0E28               	movlw	40
 25225  007DD0  0100               	movlb	0	; () banked
 25226  007DD2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25227  007DD4  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25228  007DD6  0B04               	andlw	4
 25229  007DD8  0100               	movlb	0	; () banked
 25230  007DDA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25231  007DDC  0E01               	movlw	1
 25232  007DDE  ECDA  F036         	call	_lcd_set_com_seg
 25233                           
 25234                           ;lcd.c: 362: lcd_set_com_seg(2,40,code&0x40);
 25235  007DE2  0E28               	movlw	40
 25236  007DE4  0100               	movlb	0	; () banked
 25237  007DE6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25238  007DE8  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25239  007DEA  0B40               	andlw	64
 25240  007DEC  0100               	movlb	0	; () banked
 25241  007DEE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25242  007DF0  0E02               	movlw	2
 25243  007DF2  ECDA  F036         	call	_lcd_set_com_seg
 25244                           
 25245                           ;lcd.c: 363: lcd_set_com_seg(3,40,code&0x02);
 25246  007DF6  0E28               	movlw	40
 25247  007DF8  0100               	movlb	0	; () banked
 25248  007DFA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25249  007DFC  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25250  007DFE  0B02               	andlw	2
 25251  007E00  0100               	movlb	0	; () banked
 25252  007E02  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25253  007E04  0E03               	movlw	3
 25254  007E06  ECDA  F036         	call	_lcd_set_com_seg
 25255  007E0A  0012               	return		;funcret
 25256  007E0C                     __end_of_lcd_disp_chr_loc_7:
 25257                           	opt stack 0
 25258                           tosu	equ	0xFFF
 25259                           tosh	equ	0xFFE
 25260                           tosl	equ	0xFFD
 25261                           pclath	equ	0xFFA
 25262                           tblptru	equ	0xFF8
 25263                           tblptrh	equ	0xFF7
 25264                           tblptrl	equ	0xFF6
 25265                           tablat	equ	0xFF5
 25266                           prodh	equ	0xFF4
 25267                           prodl	equ	0xFF3
 25268                           intcon	equ	0xFF2
 25269                           indf0	equ	0xFEF
 25270                           postinc0	equ	0xFEE
 25271                           fsr0h	equ	0xFEA
 25272                           fsr0l	equ	0xFE9
 25273                           wreg	equ	0xFE8
 25274                           indf1	equ	0xFE7
 25275                           postinc1	equ	0xFE6
 25276                           postdec1	equ	0xFE5
 25277                           plusw1	equ	0xFE3
 25278                           fsr1h	equ	0xFE2
 25279                           fsr1l	equ	0xFE1
 25280                           indf2	equ	0xFDF
 25281                           postinc2	equ	0xFDE
 25282                           postdec2	equ	0xFDD
 25283                           plusw2	equ	0xFDB
 25284                           fsr2h	equ	0xFDA
 25285                           fsr2l	equ	0xFD9
 25286                           status	equ	0xFD8
 25287                           
 25288 ;; *************** function _lcd_disp_chr_loc_6 *****************
 25289 ;; Defined at:
 25290 ;;		line 335 in file "src/driver/lcd.c"
 25291 ;; Parameters:    Size  Location     Type
 25292 ;;  code            1    wreg     unsigned char 
 25293 ;; Auto vars:     Size  Location     Type
 25294 ;;  code            1   31[COMRAM] unsigned char 
 25295 ;; Return value:  Size  Location     Type
 25296 ;;                  1    wreg      void 
 25297 ;; Registers used:
 25298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25299 ;; Tracked objects:
 25300 ;;		On entry : 0/0
 25301 ;;		On exit  : 0/0
 25302 ;;		Unchanged: 0/0
 25303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25308 ;;Total ram usage:        1 bytes
 25309 ;; Hardware stack levels used:    1
 25310 ;; Hardware stack levels required when called:    6
 25311 ;; This function calls:
 25312 ;;		_lcd_set_com_seg
 25313 ;; This function is called by:
 25314 ;;		_lcd_show_chr
 25315 ;; This function uses a non-reentrant model
 25316 ;;
 25317                           
 25318                           	psect	text135
 25319  007E0C                     __ptext135:
 25320                           	opt stack 0
 25321  007E0C                     _lcd_disp_chr_loc_6:
 25322                           	opt stack 21
 25323                           
 25324                           ;incstack = 0
 25325                           ;lcd_disp_chr_loc_6@code stored from wreg
 25326  007E0C  6E20               	movwf	lcd_disp_chr_loc_6@code,c
 25327                           
 25328                           ;lcd.c: 337: lcd_set_com_seg(0,14,code&0x08);
 25329  007E0E  0E0E               	movlw	14
 25330  007E10  0100               	movlb	0	; () banked
 25331  007E12  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25332  007E14  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25333  007E16  0B08               	andlw	8
 25334  007E18  0100               	movlb	0	; () banked
 25335  007E1A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25336  007E1C  0E00               	movlw	0
 25337  007E1E  ECDA  F036         	call	_lcd_set_com_seg
 25338                           
 25339                           ;lcd.c: 338: lcd_set_com_seg(1,14,code&0x10);
 25340  007E22  0E0E               	movlw	14
 25341  007E24  0100               	movlb	0	; () banked
 25342  007E26  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25343  007E28  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25344  007E2A  0B10               	andlw	16
 25345  007E2C  0100               	movlb	0	; () banked
 25346  007E2E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25347  007E30  0E01               	movlw	1
 25348  007E32  ECDA  F036         	call	_lcd_set_com_seg
 25349                           
 25350                           ;lcd.c: 339: lcd_set_com_seg(2,14,code&0x20);
 25351  007E36  0E0E               	movlw	14
 25352  007E38  0100               	movlb	0	; () banked
 25353  007E3A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25354  007E3C  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25355  007E3E  0B20               	andlw	32
 25356  007E40  0100               	movlb	0	; () banked
 25357  007E42  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25358  007E44  0E02               	movlw	2
 25359  007E46  ECDA  F036         	call	_lcd_set_com_seg
 25360                           
 25361                           ;lcd.c: 340: lcd_set_com_seg(3,14,code&0x01);
 25362  007E4A  0E0E               	movlw	14
 25363  007E4C  0100               	movlb	0	; () banked
 25364  007E4E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25365  007E50  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25366  007E52  0B01               	andlw	1
 25367  007E54  0100               	movlb	0	; () banked
 25368  007E56  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25369  007E58  0E03               	movlw	3
 25370  007E5A  ECDA  F036         	call	_lcd_set_com_seg
 25371                           
 25372                           ;lcd.c: 342: lcd_set_com_seg(1,15,code&0x04);
 25373  007E5E  0E0F               	movlw	15
 25374  007E60  0100               	movlb	0	; () banked
 25375  007E62  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25376  007E64  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25377  007E66  0B04               	andlw	4
 25378  007E68  0100               	movlb	0	; () banked
 25379  007E6A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25380  007E6C  0E01               	movlw	1
 25381  007E6E  ECDA  F036         	call	_lcd_set_com_seg
 25382                           
 25383                           ;lcd.c: 343: lcd_set_com_seg(2,15,code&0x40);
 25384  007E72  0E0F               	movlw	15
 25385  007E74  0100               	movlb	0	; () banked
 25386  007E76  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25387  007E78  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25388  007E7A  0B40               	andlw	64
 25389  007E7C  0100               	movlb	0	; () banked
 25390  007E7E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25391  007E80  0E02               	movlw	2
 25392  007E82  ECDA  F036         	call	_lcd_set_com_seg
 25393                           
 25394                           ;lcd.c: 344: lcd_set_com_seg(3,15,code&0x02);
 25395  007E86  0E0F               	movlw	15
 25396  007E88  0100               	movlb	0	; () banked
 25397  007E8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25398  007E8C  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25399  007E8E  0B02               	andlw	2
 25400  007E90  0100               	movlb	0	; () banked
 25401  007E92  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25402  007E94  0E03               	movlw	3
 25403  007E96  ECDA  F036         	call	_lcd_set_com_seg
 25404  007E9A  0012               	return		;funcret
 25405  007E9C                     __end_of_lcd_disp_chr_loc_6:
 25406                           	opt stack 0
 25407                           tosu	equ	0xFFF
 25408                           tosh	equ	0xFFE
 25409                           tosl	equ	0xFFD
 25410                           pclath	equ	0xFFA
 25411                           tblptru	equ	0xFF8
 25412                           tblptrh	equ	0xFF7
 25413                           tblptrl	equ	0xFF6
 25414                           tablat	equ	0xFF5
 25415                           prodh	equ	0xFF4
 25416                           prodl	equ	0xFF3
 25417                           intcon	equ	0xFF2
 25418                           indf0	equ	0xFEF
 25419                           postinc0	equ	0xFEE
 25420                           fsr0h	equ	0xFEA
 25421                           fsr0l	equ	0xFE9
 25422                           wreg	equ	0xFE8
 25423                           indf1	equ	0xFE7
 25424                           postinc1	equ	0xFE6
 25425                           postdec1	equ	0xFE5
 25426                           plusw1	equ	0xFE3
 25427                           fsr1h	equ	0xFE2
 25428                           fsr1l	equ	0xFE1
 25429                           indf2	equ	0xFDF
 25430                           postinc2	equ	0xFDE
 25431                           postdec2	equ	0xFDD
 25432                           plusw2	equ	0xFDB
 25433                           fsr2h	equ	0xFDA
 25434                           fsr2l	equ	0xFD9
 25435                           status	equ	0xFD8
 25436                           
 25437 ;; *************** function _lcd_disp_chr_loc_5 *****************
 25438 ;; Defined at:
 25439 ;;		line 316 in file "src/driver/lcd.c"
 25440 ;; Parameters:    Size  Location     Type
 25441 ;;  code            1    wreg     unsigned char 
 25442 ;; Auto vars:     Size  Location     Type
 25443 ;;  code            1   31[COMRAM] unsigned char 
 25444 ;; Return value:  Size  Location     Type
 25445 ;;                  1    wreg      void 
 25446 ;; Registers used:
 25447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25448 ;; Tracked objects:
 25449 ;;		On entry : 0/0
 25450 ;;		On exit  : 0/0
 25451 ;;		Unchanged: 0/0
 25452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25457 ;;Total ram usage:        1 bytes
 25458 ;; Hardware stack levels used:    1
 25459 ;; Hardware stack levels required when called:    6
 25460 ;; This function calls:
 25461 ;;		_lcd_set_com_seg
 25462 ;; This function is called by:
 25463 ;;		_lcd_show_chr
 25464 ;; This function uses a non-reentrant model
 25465 ;;
 25466                           
 25467                           	psect	text136
 25468  007E9C                     __ptext136:
 25469                           	opt stack 0
 25470  007E9C                     _lcd_disp_chr_loc_5:
 25471                           	opt stack 21
 25472                           
 25473                           ;incstack = 0
 25474                           ;lcd_disp_chr_loc_5@code stored from wreg
 25475  007E9C  6E20               	movwf	lcd_disp_chr_loc_5@code,c
 25476                           
 25477                           ;lcd.c: 318: lcd_set_com_seg(0,38,code&0x08);
 25478  007E9E  0E26               	movlw	38
 25479  007EA0  0100               	movlb	0	; () banked
 25480  007EA2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25481  007EA4  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25482  007EA6  0B08               	andlw	8
 25483  007EA8  0100               	movlb	0	; () banked
 25484  007EAA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25485  007EAC  0E00               	movlw	0
 25486  007EAE  ECDA  F036         	call	_lcd_set_com_seg
 25487                           
 25488                           ;lcd.c: 319: lcd_set_com_seg(1,38,code&0x10);
 25489  007EB2  0E26               	movlw	38
 25490  007EB4  0100               	movlb	0	; () banked
 25491  007EB6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25492  007EB8  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25493  007EBA  0B10               	andlw	16
 25494  007EBC  0100               	movlb	0	; () banked
 25495  007EBE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25496  007EC0  0E01               	movlw	1
 25497  007EC2  ECDA  F036         	call	_lcd_set_com_seg
 25498                           
 25499                           ;lcd.c: 320: lcd_set_com_seg(2,38,code&0x20);
 25500  007EC6  0E26               	movlw	38
 25501  007EC8  0100               	movlb	0	; () banked
 25502  007ECA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25503  007ECC  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25504  007ECE  0B20               	andlw	32
 25505  007ED0  0100               	movlb	0	; () banked
 25506  007ED2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25507  007ED4  0E02               	movlw	2
 25508  007ED6  ECDA  F036         	call	_lcd_set_com_seg
 25509                           
 25510                           ;lcd.c: 321: lcd_set_com_seg(3,38,code&0x01);
 25511  007EDA  0E26               	movlw	38
 25512  007EDC  0100               	movlb	0	; () banked
 25513  007EDE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25514  007EE0  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25515  007EE2  0B01               	andlw	1
 25516  007EE4  0100               	movlb	0	; () banked
 25517  007EE6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25518  007EE8  0E03               	movlw	3
 25519  007EEA  ECDA  F036         	call	_lcd_set_com_seg
 25520                           
 25521                           ;lcd.c: 323: lcd_set_com_seg(1,39,code&0x04);
 25522  007EEE  0E27               	movlw	39
 25523  007EF0  0100               	movlb	0	; () banked
 25524  007EF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25525  007EF4  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25526  007EF6  0B04               	andlw	4
 25527  007EF8  0100               	movlb	0	; () banked
 25528  007EFA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25529  007EFC  0E01               	movlw	1
 25530  007EFE  ECDA  F036         	call	_lcd_set_com_seg
 25531                           
 25532                           ;lcd.c: 324: lcd_set_com_seg(2,39,code&0x40);
 25533  007F02  0E27               	movlw	39
 25534  007F04  0100               	movlb	0	; () banked
 25535  007F06  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25536  007F08  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25537  007F0A  0B40               	andlw	64
 25538  007F0C  0100               	movlb	0	; () banked
 25539  007F0E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25540  007F10  0E02               	movlw	2
 25541  007F12  ECDA  F036         	call	_lcd_set_com_seg
 25542                           
 25543                           ;lcd.c: 325: lcd_set_com_seg(3,39,code&0x02);
 25544  007F16  0E27               	movlw	39
 25545  007F18  0100               	movlb	0	; () banked
 25546  007F1A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25547  007F1C  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25548  007F1E  0B02               	andlw	2
 25549  007F20  0100               	movlb	0	; () banked
 25550  007F22  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25551  007F24  0E03               	movlw	3
 25552  007F26  ECDA  F036         	call	_lcd_set_com_seg
 25553  007F2A  0012               	return		;funcret
 25554  007F2C                     __end_of_lcd_disp_chr_loc_5:
 25555                           	opt stack 0
 25556                           tosu	equ	0xFFF
 25557                           tosh	equ	0xFFE
 25558                           tosl	equ	0xFFD
 25559                           pclath	equ	0xFFA
 25560                           tblptru	equ	0xFF8
 25561                           tblptrh	equ	0xFF7
 25562                           tblptrl	equ	0xFF6
 25563                           tablat	equ	0xFF5
 25564                           prodh	equ	0xFF4
 25565                           prodl	equ	0xFF3
 25566                           intcon	equ	0xFF2
 25567                           indf0	equ	0xFEF
 25568                           postinc0	equ	0xFEE
 25569                           fsr0h	equ	0xFEA
 25570                           fsr0l	equ	0xFE9
 25571                           wreg	equ	0xFE8
 25572                           indf1	equ	0xFE7
 25573                           postinc1	equ	0xFE6
 25574                           postdec1	equ	0xFE5
 25575                           plusw1	equ	0xFE3
 25576                           fsr1h	equ	0xFE2
 25577                           fsr1l	equ	0xFE1
 25578                           indf2	equ	0xFDF
 25579                           postinc2	equ	0xFDE
 25580                           postdec2	equ	0xFDD
 25581                           plusw2	equ	0xFDB
 25582                           fsr2h	equ	0xFDA
 25583                           fsr2l	equ	0xFD9
 25584                           status	equ	0xFD8
 25585                           
 25586 ;; *************** function _lcd_disp_chr_loc_4 *****************
 25587 ;; Defined at:
 25588 ;;		line 297 in file "src/driver/lcd.c"
 25589 ;; Parameters:    Size  Location     Type
 25590 ;;  code            1    wreg     unsigned char 
 25591 ;; Auto vars:     Size  Location     Type
 25592 ;;  code            1   31[COMRAM] unsigned char 
 25593 ;; Return value:  Size  Location     Type
 25594 ;;                  1    wreg      void 
 25595 ;; Registers used:
 25596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25597 ;; Tracked objects:
 25598 ;;		On entry : 0/0
 25599 ;;		On exit  : 0/0
 25600 ;;		Unchanged: 0/0
 25601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25606 ;;Total ram usage:        1 bytes
 25607 ;; Hardware stack levels used:    1
 25608 ;; Hardware stack levels required when called:    6
 25609 ;; This function calls:
 25610 ;;		_lcd_set_com_seg
 25611 ;; This function is called by:
 25612 ;;		_lcd_show_chr
 25613 ;; This function uses a non-reentrant model
 25614 ;;
 25615                           
 25616                           	psect	text137
 25617  007F2C                     __ptext137:
 25618                           	opt stack 0
 25619  007F2C                     _lcd_disp_chr_loc_4:
 25620                           	opt stack 21
 25621                           
 25622                           ;incstack = 0
 25623                           ;lcd_disp_chr_loc_4@code stored from wreg
 25624  007F2C  6E20               	movwf	lcd_disp_chr_loc_4@code,c
 25625                           
 25626                           ;lcd.c: 299: lcd_set_com_seg(0,36,code&0x08);
 25627  007F2E  0E24               	movlw	36
 25628  007F30  0100               	movlb	0	; () banked
 25629  007F32  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25630  007F34  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25631  007F36  0B08               	andlw	8
 25632  007F38  0100               	movlb	0	; () banked
 25633  007F3A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25634  007F3C  0E00               	movlw	0
 25635  007F3E  ECDA  F036         	call	_lcd_set_com_seg
 25636                           
 25637                           ;lcd.c: 300: lcd_set_com_seg(1,36,code&0x10);
 25638  007F42  0E24               	movlw	36
 25639  007F44  0100               	movlb	0	; () banked
 25640  007F46  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25641  007F48  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25642  007F4A  0B10               	andlw	16
 25643  007F4C  0100               	movlb	0	; () banked
 25644  007F4E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25645  007F50  0E01               	movlw	1
 25646  007F52  ECDA  F036         	call	_lcd_set_com_seg
 25647                           
 25648                           ;lcd.c: 301: lcd_set_com_seg(2,36,code&0x20);
 25649  007F56  0E24               	movlw	36
 25650  007F58  0100               	movlb	0	; () banked
 25651  007F5A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25652  007F5C  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25653  007F5E  0B20               	andlw	32
 25654  007F60  0100               	movlb	0	; () banked
 25655  007F62  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25656  007F64  0E02               	movlw	2
 25657  007F66  ECDA  F036         	call	_lcd_set_com_seg
 25658                           
 25659                           ;lcd.c: 302: lcd_set_com_seg(3,36,code&0x01);
 25660  007F6A  0E24               	movlw	36
 25661  007F6C  0100               	movlb	0	; () banked
 25662  007F6E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25663  007F70  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25664  007F72  0B01               	andlw	1
 25665  007F74  0100               	movlb	0	; () banked
 25666  007F76  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25667  007F78  0E03               	movlw	3
 25668  007F7A  ECDA  F036         	call	_lcd_set_com_seg
 25669                           
 25670                           ;lcd.c: 304: lcd_set_com_seg(1,37,code&0x04);
 25671  007F7E  0E25               	movlw	37
 25672  007F80  0100               	movlb	0	; () banked
 25673  007F82  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25674  007F84  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25675  007F86  0B04               	andlw	4
 25676  007F88  0100               	movlb	0	; () banked
 25677  007F8A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25678  007F8C  0E01               	movlw	1
 25679  007F8E  ECDA  F036         	call	_lcd_set_com_seg
 25680                           
 25681                           ;lcd.c: 305: lcd_set_com_seg(2,37,code&0x40);
 25682  007F92  0E25               	movlw	37
 25683  007F94  0100               	movlb	0	; () banked
 25684  007F96  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25685  007F98  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25686  007F9A  0B40               	andlw	64
 25687  007F9C  0100               	movlb	0	; () banked
 25688  007F9E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25689  007FA0  0E02               	movlw	2
 25690  007FA2  ECDA  F036         	call	_lcd_set_com_seg
 25691                           
 25692                           ;lcd.c: 306: lcd_set_com_seg(3,37,code&0x02);
 25693  007FA6  0E25               	movlw	37
 25694  007FA8  0100               	movlb	0	; () banked
 25695  007FAA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25696  007FAC  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25697  007FAE  0B02               	andlw	2
 25698  007FB0  0100               	movlb	0	; () banked
 25699  007FB2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25700  007FB4  0E03               	movlw	3
 25701  007FB6  ECDA  F036         	call	_lcd_set_com_seg
 25702  007FBA  0012               	return		;funcret
 25703  007FBC                     __end_of_lcd_disp_chr_loc_4:
 25704                           	opt stack 0
 25705                           tosu	equ	0xFFF
 25706                           tosh	equ	0xFFE
 25707                           tosl	equ	0xFFD
 25708                           pclath	equ	0xFFA
 25709                           tblptru	equ	0xFF8
 25710                           tblptrh	equ	0xFF7
 25711                           tblptrl	equ	0xFF6
 25712                           tablat	equ	0xFF5
 25713                           prodh	equ	0xFF4
 25714                           prodl	equ	0xFF3
 25715                           intcon	equ	0xFF2
 25716                           indf0	equ	0xFEF
 25717                           postinc0	equ	0xFEE
 25718                           fsr0h	equ	0xFEA
 25719                           fsr0l	equ	0xFE9
 25720                           wreg	equ	0xFE8
 25721                           indf1	equ	0xFE7
 25722                           postinc1	equ	0xFE6
 25723                           postdec1	equ	0xFE5
 25724                           plusw1	equ	0xFE3
 25725                           fsr1h	equ	0xFE2
 25726                           fsr1l	equ	0xFE1
 25727                           indf2	equ	0xFDF
 25728                           postinc2	equ	0xFDE
 25729                           postdec2	equ	0xFDD
 25730                           plusw2	equ	0xFDB
 25731                           fsr2h	equ	0xFDA
 25732                           fsr2l	equ	0xFD9
 25733                           status	equ	0xFD8
 25734                           
 25735 ;; *************** function _lcd_disp_chr_loc_3 *****************
 25736 ;; Defined at:
 25737 ;;		line 285 in file "src/driver/lcd.c"
 25738 ;; Parameters:    Size  Location     Type
 25739 ;;  code            1    wreg     unsigned char 
 25740 ;; Auto vars:     Size  Location     Type
 25741 ;;  code            1   31[COMRAM] unsigned char 
 25742 ;; Return value:  Size  Location     Type
 25743 ;;                  1    wreg      void 
 25744 ;; Registers used:
 25745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25746 ;; Tracked objects:
 25747 ;;		On entry : 0/0
 25748 ;;		On exit  : 0/0
 25749 ;;		Unchanged: 0/0
 25750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25755 ;;Total ram usage:        1 bytes
 25756 ;; Hardware stack levels used:    1
 25757 ;; Hardware stack levels required when called:    6
 25758 ;; This function calls:
 25759 ;;		_lcd_set_com_seg
 25760 ;; This function is called by:
 25761 ;;		_lcd_show_chr
 25762 ;; This function uses a non-reentrant model
 25763 ;;
 25764                           
 25765                           	psect	text138
 25766  007FBC                     __ptext138:
 25767                           	opt stack 0
 25768  007FBC                     _lcd_disp_chr_loc_3:
 25769                           	opt stack 21
 25770                           
 25771                           ;incstack = 0
 25772                           ;lcd_disp_chr_loc_3@code stored from wreg
 25773  007FBC  6E20               	movwf	lcd_disp_chr_loc_3@code,c
 25774                           
 25775                           ;lcd.c: 287: lcd_set_com_seg(0,43,code&0x01);
 25776  007FBE  0E2B               	movlw	43
 25777  007FC0  0100               	movlb	0	; () banked
 25778  007FC2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25779  007FC4  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25780  007FC6  0B01               	andlw	1
 25781  007FC8  0100               	movlb	0	; () banked
 25782  007FCA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25783  007FCC  0E00               	movlw	0
 25784  007FCE  ECDA  F036         	call	_lcd_set_com_seg
 25785                           
 25786                           ;lcd.c: 288: lcd_set_com_seg(1,43,code&0x20);
 25787  007FD2  0E2B               	movlw	43
 25788  007FD4  0100               	movlb	0	; () banked
 25789  007FD6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25790  007FD8  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25791  007FDA  0B20               	andlw	32
 25792  007FDC  0100               	movlb	0	; () banked
 25793  007FDE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25794  007FE0  0E01               	movlw	1
 25795  007FE2  ECDA  F036         	call	_lcd_set_com_seg
 25796                           
 25797                           ;lcd.c: 289: lcd_set_com_seg(2,43,code&0x10);
 25798  007FE6  0E2B               	movlw	43
 25799  007FE8  0100               	movlb	0	; () banked
 25800  007FEA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25801  007FEC  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25802  007FEE  0B10               	andlw	16
 25803  007FF0  0100               	movlb	0	; () banked
 25804  007FF2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25805  007FF4  0E02               	movlw	2
 25806  007FF6  ECDA  F036         	call	_lcd_set_com_seg
 25807                           
 25808                           ;lcd.c: 290: lcd_set_com_seg(3,43,code&0x08);
 25809  007FFA  0E2B               	movlw	43
 25810  007FFC  0100               	movlb	0	; () banked
 25811  007FFE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25812  008000  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25813  008002  0B08               	andlw	8
 25814  008004  0100               	movlb	0	; () banked
 25815  008006  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25816  008008  0E03               	movlw	3
 25817  00800A  ECDA  F036         	call	_lcd_set_com_seg
 25818                           
 25819                           ;lcd.c: 292: lcd_set_com_seg(0,42,code&0x02);
 25820  00800E  0E2A               	movlw	42
 25821  008010  0100               	movlb	0	; () banked
 25822  008012  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25823  008014  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25824  008016  0B02               	andlw	2
 25825  008018  0100               	movlb	0	; () banked
 25826  00801A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25827  00801C  0E00               	movlw	0
 25828  00801E  ECDA  F036         	call	_lcd_set_com_seg
 25829                           
 25830                           ;lcd.c: 293: lcd_set_com_seg(1,42,code&0x40);
 25831  008022  0E2A               	movlw	42
 25832  008024  0100               	movlb	0	; () banked
 25833  008026  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25834  008028  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25835  00802A  0B40               	andlw	64
 25836  00802C  0100               	movlb	0	; () banked
 25837  00802E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25838  008030  0E01               	movlw	1
 25839  008032  ECDA  F036         	call	_lcd_set_com_seg
 25840                           
 25841                           ;lcd.c: 294: lcd_set_com_seg(2,42,code&0x04);
 25842  008036  0E2A               	movlw	42
 25843  008038  0100               	movlb	0	; () banked
 25844  00803A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25845  00803C  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25846  00803E  0B04               	andlw	4
 25847  008040  0100               	movlb	0	; () banked
 25848  008042  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25849  008044  0E02               	movlw	2
 25850  008046  ECDA  F036         	call	_lcd_set_com_seg
 25851  00804A  0012               	return		;funcret
 25852  00804C                     __end_of_lcd_disp_chr_loc_3:
 25853                           	opt stack 0
 25854                           tosu	equ	0xFFF
 25855                           tosh	equ	0xFFE
 25856                           tosl	equ	0xFFD
 25857                           pclath	equ	0xFFA
 25858                           tblptru	equ	0xFF8
 25859                           tblptrh	equ	0xFF7
 25860                           tblptrl	equ	0xFF6
 25861                           tablat	equ	0xFF5
 25862                           prodh	equ	0xFF4
 25863                           prodl	equ	0xFF3
 25864                           intcon	equ	0xFF2
 25865                           indf0	equ	0xFEF
 25866                           postinc0	equ	0xFEE
 25867                           fsr0h	equ	0xFEA
 25868                           fsr0l	equ	0xFE9
 25869                           wreg	equ	0xFE8
 25870                           indf1	equ	0xFE7
 25871                           postinc1	equ	0xFE6
 25872                           postdec1	equ	0xFE5
 25873                           plusw1	equ	0xFE3
 25874                           fsr1h	equ	0xFE2
 25875                           fsr1l	equ	0xFE1
 25876                           indf2	equ	0xFDF
 25877                           postinc2	equ	0xFDE
 25878                           postdec2	equ	0xFDD
 25879                           plusw2	equ	0xFDB
 25880                           fsr2h	equ	0xFDA
 25881                           fsr2l	equ	0xFD9
 25882                           status	equ	0xFD8
 25883                           
 25884 ;; *************** function _lcd_disp_chr_loc_2 *****************
 25885 ;; Defined at:
 25886 ;;		line 266 in file "src/driver/lcd.c"
 25887 ;; Parameters:    Size  Location     Type
 25888 ;;  code            1    wreg     unsigned char 
 25889 ;; Auto vars:     Size  Location     Type
 25890 ;;  code            1   31[COMRAM] unsigned char 
 25891 ;; Return value:  Size  Location     Type
 25892 ;;                  1    wreg      void 
 25893 ;; Registers used:
 25894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25895 ;; Tracked objects:
 25896 ;;		On entry : 0/0
 25897 ;;		On exit  : 0/0
 25898 ;;		Unchanged: 0/0
 25899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25904 ;;Total ram usage:        1 bytes
 25905 ;; Hardware stack levels used:    1
 25906 ;; Hardware stack levels required when called:    6
 25907 ;; This function calls:
 25908 ;;		_lcd_set_com_seg
 25909 ;; This function is called by:
 25910 ;;		_lcd_show_chr
 25911 ;; This function uses a non-reentrant model
 25912 ;;
 25913                           
 25914                           	psect	text139
 25915  00804C                     __ptext139:
 25916                           	opt stack 0
 25917  00804C                     _lcd_disp_chr_loc_2:
 25918                           	opt stack 21
 25919                           
 25920                           ;incstack = 0
 25921                           ;lcd_disp_chr_loc_2@code stored from wreg
 25922  00804C  6E20               	movwf	lcd_disp_chr_loc_2@code,c
 25923                           
 25924                           ;lcd.c: 268: lcd_set_com_seg(0,21,code&0x01);
 25925  00804E  0E15               	movlw	21
 25926  008050  0100               	movlb	0	; () banked
 25927  008052  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25928  008054  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25929  008056  0B01               	andlw	1
 25930  008058  0100               	movlb	0	; () banked
 25931  00805A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25932  00805C  0E00               	movlw	0
 25933  00805E  ECDA  F036         	call	_lcd_set_com_seg
 25934                           
 25935                           ;lcd.c: 269: lcd_set_com_seg(1,21,code&0x20);
 25936  008062  0E15               	movlw	21
 25937  008064  0100               	movlb	0	; () banked
 25938  008066  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25939  008068  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25940  00806A  0B20               	andlw	32
 25941  00806C  0100               	movlb	0	; () banked
 25942  00806E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25943  008070  0E01               	movlw	1
 25944  008072  ECDA  F036         	call	_lcd_set_com_seg
 25945                           
 25946                           ;lcd.c: 270: lcd_set_com_seg(2,21,code&0x10);
 25947  008076  0E15               	movlw	21
 25948  008078  0100               	movlb	0	; () banked
 25949  00807A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25950  00807C  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25951  00807E  0B10               	andlw	16
 25952  008080  0100               	movlb	0	; () banked
 25953  008082  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25954  008084  0E02               	movlw	2
 25955  008086  ECDA  F036         	call	_lcd_set_com_seg
 25956                           
 25957                           ;lcd.c: 271: lcd_set_com_seg(3,21,code&0x08);
 25958  00808A  0E15               	movlw	21
 25959  00808C  0100               	movlb	0	; () banked
 25960  00808E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25961  008090  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25962  008092  0B08               	andlw	8
 25963  008094  0100               	movlb	0	; () banked
 25964  008096  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25965  008098  0E03               	movlw	3
 25966  00809A  ECDA  F036         	call	_lcd_set_com_seg
 25967                           
 25968                           ;lcd.c: 273: lcd_set_com_seg(0,20,code&0x02);
 25969  00809E  0E14               	movlw	20
 25970  0080A0  0100               	movlb	0	; () banked
 25971  0080A2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25972  0080A4  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25973  0080A6  0B02               	andlw	2
 25974  0080A8  0100               	movlb	0	; () banked
 25975  0080AA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25976  0080AC  0E00               	movlw	0
 25977  0080AE  ECDA  F036         	call	_lcd_set_com_seg
 25978                           
 25979                           ;lcd.c: 274: lcd_set_com_seg(1,20,code&0x40);
 25980  0080B2  0E14               	movlw	20
 25981  0080B4  0100               	movlb	0	; () banked
 25982  0080B6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25983  0080B8  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25984  0080BA  0B40               	andlw	64
 25985  0080BC  0100               	movlb	0	; () banked
 25986  0080BE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25987  0080C0  0E01               	movlw	1
 25988  0080C2  ECDA  F036         	call	_lcd_set_com_seg
 25989                           
 25990                           ;lcd.c: 275: lcd_set_com_seg(2,20,code&0x04);
 25991  0080C6  0E14               	movlw	20
 25992  0080C8  0100               	movlb	0	; () banked
 25993  0080CA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25994  0080CC  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25995  0080CE  0B04               	andlw	4
 25996  0080D0  0100               	movlb	0	; () banked
 25997  0080D2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25998  0080D4  0E02               	movlw	2
 25999  0080D6  ECDA  F036         	call	_lcd_set_com_seg
 26000  0080DA  0012               	return		;funcret
 26001  0080DC                     __end_of_lcd_disp_chr_loc_2:
 26002                           	opt stack 0
 26003                           tosu	equ	0xFFF
 26004                           tosh	equ	0xFFE
 26005                           tosl	equ	0xFFD
 26006                           pclath	equ	0xFFA
 26007                           tblptru	equ	0xFF8
 26008                           tblptrh	equ	0xFF7
 26009                           tblptrl	equ	0xFF6
 26010                           tablat	equ	0xFF5
 26011                           prodh	equ	0xFF4
 26012                           prodl	equ	0xFF3
 26013                           intcon	equ	0xFF2
 26014                           indf0	equ	0xFEF
 26015                           postinc0	equ	0xFEE
 26016                           fsr0h	equ	0xFEA
 26017                           fsr0l	equ	0xFE9
 26018                           wreg	equ	0xFE8
 26019                           indf1	equ	0xFE7
 26020                           postinc1	equ	0xFE6
 26021                           postdec1	equ	0xFE5
 26022                           plusw1	equ	0xFE3
 26023                           fsr1h	equ	0xFE2
 26024                           fsr1l	equ	0xFE1
 26025                           indf2	equ	0xFDF
 26026                           postinc2	equ	0xFDE
 26027                           postdec2	equ	0xFDD
 26028                           plusw2	equ	0xFDB
 26029                           fsr2h	equ	0xFDA
 26030                           fsr2l	equ	0xFD9
 26031                           status	equ	0xFD8
 26032                           
 26033 ;; *************** function _lcd_disp_chr_loc_1 *****************
 26034 ;; Defined at:
 26035 ;;		line 247 in file "src/driver/lcd.c"
 26036 ;; Parameters:    Size  Location     Type
 26037 ;;  code            1    wreg     unsigned char 
 26038 ;; Auto vars:     Size  Location     Type
 26039 ;;  code            1   31[COMRAM] unsigned char 
 26040 ;; Return value:  Size  Location     Type
 26041 ;;                  1    wreg      void 
 26042 ;; Registers used:
 26043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26044 ;; Tracked objects:
 26045 ;;		On entry : 0/0
 26046 ;;		On exit  : 0/0
 26047 ;;		Unchanged: 0/0
 26048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26053 ;;Total ram usage:        1 bytes
 26054 ;; Hardware stack levels used:    1
 26055 ;; Hardware stack levels required when called:    6
 26056 ;; This function calls:
 26057 ;;		_lcd_set_com_seg
 26058 ;; This function is called by:
 26059 ;;		_lcd_show_chr
 26060 ;; This function uses a non-reentrant model
 26061 ;;
 26062                           
 26063                           	psect	text140
 26064  0080DC                     __ptext140:
 26065                           	opt stack 0
 26066  0080DC                     _lcd_disp_chr_loc_1:
 26067                           	opt stack 21
 26068                           
 26069                           ;incstack = 0
 26070                           ;lcd_disp_chr_loc_1@code stored from wreg
 26071  0080DC  6E20               	movwf	lcd_disp_chr_loc_1@code,c
 26072                           
 26073                           ;lcd.c: 249: lcd_set_com_seg(0,23,code&0x01);
 26074  0080DE  0E17               	movlw	23
 26075  0080E0  0100               	movlb	0	; () banked
 26076  0080E2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26077  0080E4  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26078  0080E6  0B01               	andlw	1
 26079  0080E8  0100               	movlb	0	; () banked
 26080  0080EA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26081  0080EC  0E00               	movlw	0
 26082  0080EE  ECDA  F036         	call	_lcd_set_com_seg
 26083                           
 26084                           ;lcd.c: 250: lcd_set_com_seg(1,23,code&0x20);
 26085  0080F2  0E17               	movlw	23
 26086  0080F4  0100               	movlb	0	; () banked
 26087  0080F6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26088  0080F8  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26089  0080FA  0B20               	andlw	32
 26090  0080FC  0100               	movlb	0	; () banked
 26091  0080FE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26092  008100  0E01               	movlw	1
 26093  008102  ECDA  F036         	call	_lcd_set_com_seg
 26094                           
 26095                           ;lcd.c: 251: lcd_set_com_seg(2,23,code&0x10);
 26096  008106  0E17               	movlw	23
 26097  008108  0100               	movlb	0	; () banked
 26098  00810A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26099  00810C  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26100  00810E  0B10               	andlw	16
 26101  008110  0100               	movlb	0	; () banked
 26102  008112  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26103  008114  0E02               	movlw	2
 26104  008116  ECDA  F036         	call	_lcd_set_com_seg
 26105                           
 26106                           ;lcd.c: 252: lcd_set_com_seg(3,23,code&0x08);
 26107  00811A  0E17               	movlw	23
 26108  00811C  0100               	movlb	0	; () banked
 26109  00811E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26110  008120  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26111  008122  0B08               	andlw	8
 26112  008124  0100               	movlb	0	; () banked
 26113  008126  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26114  008128  0E03               	movlw	3
 26115  00812A  ECDA  F036         	call	_lcd_set_com_seg
 26116                           
 26117                           ;lcd.c: 254: lcd_set_com_seg(0,22,code&0x02);
 26118  00812E  0E16               	movlw	22
 26119  008130  0100               	movlb	0	; () banked
 26120  008132  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26121  008134  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26122  008136  0B02               	andlw	2
 26123  008138  0100               	movlb	0	; () banked
 26124  00813A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26125  00813C  0E00               	movlw	0
 26126  00813E  ECDA  F036         	call	_lcd_set_com_seg
 26127                           
 26128                           ;lcd.c: 255: lcd_set_com_seg(1,22,code&0x40);
 26129  008142  0E16               	movlw	22
 26130  008144  0100               	movlb	0	; () banked
 26131  008146  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26132  008148  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26133  00814A  0B40               	andlw	64
 26134  00814C  0100               	movlb	0	; () banked
 26135  00814E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26136  008150  0E01               	movlw	1
 26137  008152  ECDA  F036         	call	_lcd_set_com_seg
 26138                           
 26139                           ;lcd.c: 256: lcd_set_com_seg(2,22,code&0x04);
 26140  008156  0E16               	movlw	22
 26141  008158  0100               	movlb	0	; () banked
 26142  00815A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26143  00815C  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26144  00815E  0B04               	andlw	4
 26145  008160  0100               	movlb	0	; () banked
 26146  008162  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26147  008164  0E02               	movlw	2
 26148  008166  ECDA  F036         	call	_lcd_set_com_seg
 26149  00816A  0012               	return		;funcret
 26150  00816C                     __end_of_lcd_disp_chr_loc_1:
 26151                           	opt stack 0
 26152                           tosu	equ	0xFFF
 26153                           tosh	equ	0xFFE
 26154                           tosl	equ	0xFFD
 26155                           pclath	equ	0xFFA
 26156                           tblptru	equ	0xFF8
 26157                           tblptrh	equ	0xFF7
 26158                           tblptrl	equ	0xFF6
 26159                           tablat	equ	0xFF5
 26160                           prodh	equ	0xFF4
 26161                           prodl	equ	0xFF3
 26162                           intcon	equ	0xFF2
 26163                           indf0	equ	0xFEF
 26164                           postinc0	equ	0xFEE
 26165                           fsr0h	equ	0xFEA
 26166                           fsr0l	equ	0xFE9
 26167                           wreg	equ	0xFE8
 26168                           indf1	equ	0xFE7
 26169                           postinc1	equ	0xFE6
 26170                           postdec1	equ	0xFE5
 26171                           plusw1	equ	0xFE3
 26172                           fsr1h	equ	0xFE2
 26173                           fsr1l	equ	0xFE1
 26174                           indf2	equ	0xFDF
 26175                           postinc2	equ	0xFDE
 26176                           postdec2	equ	0xFDD
 26177                           plusw2	equ	0xFDB
 26178                           fsr2h	equ	0xFDA
 26179                           fsr2l	equ	0xFD9
 26180                           status	equ	0xFD8
 26181                           
 26182 ;; *************** function _lcd_disp_chr_loc_0 *****************
 26183 ;; Defined at:
 26184 ;;		line 227 in file "src/driver/lcd.c"
 26185 ;; Parameters:    Size  Location     Type
 26186 ;;  code            1    wreg     unsigned char 
 26187 ;; Auto vars:     Size  Location     Type
 26188 ;;  code            1   31[COMRAM] unsigned char 
 26189 ;; Return value:  Size  Location     Type
 26190 ;;                  1    wreg      void 
 26191 ;; Registers used:
 26192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26193 ;; Tracked objects:
 26194 ;;		On entry : 0/0
 26195 ;;		On exit  : 0/0
 26196 ;;		Unchanged: 0/0
 26197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26202 ;;Total ram usage:        1 bytes
 26203 ;; Hardware stack levels used:    1
 26204 ;; Hardware stack levels required when called:    6
 26205 ;; This function calls:
 26206 ;;		_lcd_set_com_seg
 26207 ;; This function is called by:
 26208 ;;		_lcd_show_chr
 26209 ;; This function uses a non-reentrant model
 26210 ;;
 26211                           
 26212                           	psect	text141
 26213  00816C                     __ptext141:
 26214                           	opt stack 0
 26215  00816C                     _lcd_disp_chr_loc_0:
 26216                           	opt stack 21
 26217                           
 26218                           ;incstack = 0
 26219                           ;lcd_disp_chr_loc_0@code stored from wreg
 26220  00816C  6E20               	movwf	lcd_disp_chr_loc_0@code,c
 26221                           
 26222                           ;lcd.c: 229: lcd_set_com_seg(0,25,code&0x01);
 26223  00816E  0E19               	movlw	25
 26224  008170  0100               	movlb	0	; () banked
 26225  008172  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26226  008174  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26227  008176  0B01               	andlw	1
 26228  008178  0100               	movlb	0	; () banked
 26229  00817A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26230  00817C  0E00               	movlw	0
 26231  00817E  ECDA  F036         	call	_lcd_set_com_seg
 26232                           
 26233                           ;lcd.c: 230: lcd_set_com_seg(1,25,code&0x20);
 26234  008182  0E19               	movlw	25
 26235  008184  0100               	movlb	0	; () banked
 26236  008186  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26237  008188  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26238  00818A  0B20               	andlw	32
 26239  00818C  0100               	movlb	0	; () banked
 26240  00818E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26241  008190  0E01               	movlw	1
 26242  008192  ECDA  F036         	call	_lcd_set_com_seg
 26243                           
 26244                           ;lcd.c: 231: lcd_set_com_seg(2,25,code&0x10);
 26245  008196  0E19               	movlw	25
 26246  008198  0100               	movlb	0	; () banked
 26247  00819A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26248  00819C  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26249  00819E  0B10               	andlw	16
 26250  0081A0  0100               	movlb	0	; () banked
 26251  0081A2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26252  0081A4  0E02               	movlw	2
 26253  0081A6  ECDA  F036         	call	_lcd_set_com_seg
 26254                           
 26255                           ;lcd.c: 232: lcd_set_com_seg(3,25,code&0x08);
 26256  0081AA  0E19               	movlw	25
 26257  0081AC  0100               	movlb	0	; () banked
 26258  0081AE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26259  0081B0  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26260  0081B2  0B08               	andlw	8
 26261  0081B4  0100               	movlb	0	; () banked
 26262  0081B6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26263  0081B8  0E03               	movlw	3
 26264  0081BA  ECDA  F036         	call	_lcd_set_com_seg
 26265                           
 26266                           ;lcd.c: 234: lcd_set_com_seg(0,24,code&0x02);
 26267  0081BE  0E18               	movlw	24
 26268  0081C0  0100               	movlb	0	; () banked
 26269  0081C2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26270  0081C4  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26271  0081C6  0B02               	andlw	2
 26272  0081C8  0100               	movlb	0	; () banked
 26273  0081CA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26274  0081CC  0E00               	movlw	0
 26275  0081CE  ECDA  F036         	call	_lcd_set_com_seg
 26276                           
 26277                           ;lcd.c: 235: lcd_set_com_seg(1,24,code&0x40);
 26278  0081D2  0E18               	movlw	24
 26279  0081D4  0100               	movlb	0	; () banked
 26280  0081D6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26281  0081D8  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26282  0081DA  0B40               	andlw	64
 26283  0081DC  0100               	movlb	0	; () banked
 26284  0081DE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26285  0081E0  0E01               	movlw	1
 26286  0081E2  ECDA  F036         	call	_lcd_set_com_seg
 26287                           
 26288                           ;lcd.c: 236: lcd_set_com_seg(2,24,code&0x04);
 26289  0081E6  0E18               	movlw	24
 26290  0081E8  0100               	movlb	0	; () banked
 26291  0081EA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26292  0081EC  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26293  0081EE  0B04               	andlw	4
 26294  0081F0  0100               	movlb	0	; () banked
 26295  0081F2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26296  0081F4  0E02               	movlw	2
 26297  0081F6  ECDA  F036         	call	_lcd_set_com_seg
 26298  0081FA  0012               	return		;funcret
 26299  0081FC                     __end_of_lcd_disp_chr_loc_0:
 26300                           	opt stack 0
 26301                           tosu	equ	0xFFF
 26302                           tosh	equ	0xFFE
 26303                           tosl	equ	0xFFD
 26304                           pclath	equ	0xFFA
 26305                           tblptru	equ	0xFF8
 26306                           tblptrh	equ	0xFF7
 26307                           tblptrl	equ	0xFF6
 26308                           tablat	equ	0xFF5
 26309                           prodh	equ	0xFF4
 26310                           prodl	equ	0xFF3
 26311                           intcon	equ	0xFF2
 26312                           indf0	equ	0xFEF
 26313                           postinc0	equ	0xFEE
 26314                           fsr0h	equ	0xFEA
 26315                           fsr0l	equ	0xFE9
 26316                           wreg	equ	0xFE8
 26317                           indf1	equ	0xFE7
 26318                           postinc1	equ	0xFE6
 26319                           postdec1	equ	0xFE5
 26320                           plusw1	equ	0xFE3
 26321                           fsr1h	equ	0xFE2
 26322                           fsr1l	equ	0xFE1
 26323                           indf2	equ	0xFDF
 26324                           postinc2	equ	0xFDE
 26325                           postdec2	equ	0xFDD
 26326                           plusw2	equ	0xFDB
 26327                           fsr2h	equ	0xFDA
 26328                           fsr2l	equ	0xFD9
 26329                           status	equ	0xFD8
 26330                           
 26331 ;; *************** function _lcd_show_dp *****************
 26332 ;; Defined at:
 26333 ;;		line 499 in file "src/driver/lcd.c"
 26334 ;; Parameters:    Size  Location     Type
 26335 ;;  loc             1    wreg     unsigned char 
 26336 ;;  show            1   16[BANK0 ] unsigned char 
 26337 ;; Auto vars:     Size  Location     Type
 26338 ;;  loc             1   17[BANK0 ] unsigned char 
 26339 ;; Return value:  Size  Location     Type
 26340 ;;                  1    wreg      void 
 26341 ;; Registers used:
 26342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26343 ;; Tracked objects:
 26344 ;;		On entry : 0/0
 26345 ;;		On exit  : 0/0
 26346 ;;		Unchanged: 0/0
 26347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26348 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26351 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26352 ;;Total ram usage:        2 bytes
 26353 ;; Hardware stack levels used:    1
 26354 ;; Hardware stack levels required when called:    7
 26355 ;; This function calls:
 26356 ;;		_lcd_disp_dp_loc_0
 26357 ;;		_lcd_disp_dp_loc_1
 26358 ;;		_lcd_disp_dp_loc_2
 26359 ;;		_lcd_disp_dp_loc_4
 26360 ;;		_lcd_disp_dp_loc_5
 26361 ;;		_lcd_disp_dp_loc_6
 26362 ;; This function is called by:
 26363 ;;		_ui_disp_clear_num_dp
 26364 ;;		_ui_disp_adj_xfloat_pt
 26365 ;;		_ui_disp_adj_xfixed_pt_dp
 26366 ;;		_ui_disp_xfloat_pt
 26367 ;;		_ui_disp_rtc_mm_ss
 26368 ;; This function uses a non-reentrant model
 26369 ;;
 26370                           
 26371                           	psect	text142
 26372  008B04                     __ptext142:
 26373                           	opt stack 0
 26374  008B04                     _lcd_show_dp:
 26375                           	opt stack 19
 26376                           
 26377                           ;incstack = 0
 26378                           ;lcd_show_dp@loc stored from wreg
 26379  008B04  0100               	movlb	0	; () banked
 26380  008B06  6F71               	movwf	lcd_show_dp@loc& (0+255),b
 26381                           
 26382                           ;lcd.c: 501: switch(loc){
 26383  008B08  D01E               	goto	l14029
 26384  008B0A                     l14015:
 26385  008B0A  0100               	movlb	0	; () banked
 26386  008B0C  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26387  008B0E  EC1D  F04F         	call	_lcd_disp_dp_loc_0
 26388  008B12  0012               	return	
 26389  008B14                     l14017:
 26390  008B14  0100               	movlb	0	; () banked
 26391  008B16  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26392  008B18  EC05  F04F         	call	_lcd_disp_dp_loc_1
 26393  008B1C  0012               	return	
 26394  008B1E                     l14019:
 26395  008B1E  0100               	movlb	0	; () banked
 26396  008B20  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26397  008B22  ECED  F04E         	call	_lcd_disp_dp_loc_2
 26398  008B26  0012               	return	
 26399  008B28                     l14021:
 26400  008B28  0100               	movlb	0	; () banked
 26401  008B2A  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26402  008B2C  ECD5  F04E         	call	_lcd_disp_dp_loc_4
 26403  008B30  0012               	return	
 26404  008B32                     l14023:
 26405  008B32  0100               	movlb	0	; () banked
 26406  008B34  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26407  008B36  ECBD  F04E         	call	_lcd_disp_dp_loc_5
 26408  008B3A  0012               	return	
 26409  008B3C                     l14025:
 26410  008B3C  0100               	movlb	0	; () banked
 26411  008B3E  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26412  008B40  ECA5  F04E         	call	_lcd_disp_dp_loc_6
 26413                           
 26414                           ;lcd.c: 511: }
 26415                           
 26416                           ;lcd.c: 510: default:break;
 26417  008B44  0012               	return	
 26418  008B46                     l14029:
 26419  008B46  0100               	movlb	0	; () banked
 26420  008B48  5171               	movf	lcd_show_dp@loc& (0+255),w,b
 26421                           
 26422                           ; Switch size 1, requested type "space"
 26423                           ; Number of cases is 6, Range of values is 0 to 6
 26424                           ; switch strategies available:
 26425                           ; Name         Instructions Cycles
 26426                           ; simple_byte           19    10 (average)
 26427                           ;	Chosen strategy is simple_byte
 26428  008B4A  0A00               	xorlw	0	; case 0
 26429  008B4C  B4D8               	btfsc	status,2,c
 26430  008B4E  D7DD               	goto	l14015
 26431  008B50  0A01               	xorlw	1	; case 1
 26432  008B52  B4D8               	btfsc	status,2,c
 26433  008B54  D7DF               	goto	l14017
 26434  008B56  0A03               	xorlw	3	; case 2
 26435  008B58  B4D8               	btfsc	status,2,c
 26436  008B5A  D7E1               	goto	l14019
 26437  008B5C  0A06               	xorlw	6	; case 4
 26438  008B5E  B4D8               	btfsc	status,2,c
 26439  008B60  D7E3               	goto	l14021
 26440  008B62  0A01               	xorlw	1	; case 5
 26441  008B64  B4D8               	btfsc	status,2,c
 26442  008B66  D7E5               	goto	l14023
 26443  008B68  0A03               	xorlw	3	; case 6
 26444  008B6A  A4D8               	btfss	status,2,c
 26445  008B6C  0012               	return	
 26446  008B6E  D7E6               	goto	l14025
 26447  008B70                     __end_of_lcd_show_dp:
 26448                           	opt stack 0
 26449                           tosu	equ	0xFFF
 26450                           tosh	equ	0xFFE
 26451                           tosl	equ	0xFFD
 26452                           pclath	equ	0xFFA
 26453                           tblptru	equ	0xFF8
 26454                           tblptrh	equ	0xFF7
 26455                           tblptrl	equ	0xFF6
 26456                           tablat	equ	0xFF5
 26457                           prodh	equ	0xFF4
 26458                           prodl	equ	0xFF3
 26459                           intcon	equ	0xFF2
 26460                           indf0	equ	0xFEF
 26461                           postinc0	equ	0xFEE
 26462                           fsr0h	equ	0xFEA
 26463                           fsr0l	equ	0xFE9
 26464                           wreg	equ	0xFE8
 26465                           indf1	equ	0xFE7
 26466                           postinc1	equ	0xFE6
 26467                           postdec1	equ	0xFE5
 26468                           plusw1	equ	0xFE3
 26469                           fsr1h	equ	0xFE2
 26470                           fsr1l	equ	0xFE1
 26471                           indf2	equ	0xFDF
 26472                           postinc2	equ	0xFDE
 26473                           postdec2	equ	0xFDD
 26474                           plusw2	equ	0xFDB
 26475                           fsr2h	equ	0xFDA
 26476                           fsr2l	equ	0xFD9
 26477                           status	equ	0xFD8
 26478                           
 26479 ;; *************** function _lcd_disp_dp_loc_6 *****************
 26480 ;; Defined at:
 26481 ;;		line 346 in file "src/driver/lcd.c"
 26482 ;; Parameters:    Size  Location     Type
 26483 ;;  dp              1    wreg     unsigned char 
 26484 ;; Auto vars:     Size  Location     Type
 26485 ;;  dp              1   31[COMRAM] unsigned char 
 26486 ;; Return value:  Size  Location     Type
 26487 ;;                  1    wreg      void 
 26488 ;; Registers used:
 26489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26490 ;; Tracked objects:
 26491 ;;		On entry : 0/0
 26492 ;;		On exit  : 0/0
 26493 ;;		Unchanged: 0/0
 26494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26499 ;;Total ram usage:        1 bytes
 26500 ;; Hardware stack levels used:    1
 26501 ;; Hardware stack levels required when called:    6
 26502 ;; This function calls:
 26503 ;;		_lcd_set_com_seg
 26504 ;; This function is called by:
 26505 ;;		_lcd_show_dp
 26506 ;;		_lcd_clear_all_dp
 26507 ;; This function uses a non-reentrant model
 26508 ;;
 26509                           
 26510                           	psect	text143
 26511  009D4A                     __ptext143:
 26512                           	opt stack 0
 26513  009D4A                     _lcd_disp_dp_loc_6:
 26514                           	opt stack 19
 26515                           
 26516                           ;incstack = 0
 26517                           ;lcd_disp_dp_loc_6@dp stored from wreg
 26518  009D4A  6E20               	movwf	lcd_disp_dp_loc_6@dp,c
 26519                           
 26520                           ;lcd.c: 348: if(dp)
 26521  009D4C  5020               	movf	lcd_disp_dp_loc_6@dp,w,c
 26522  009D4E  B4D8               	btfsc	status,2,c
 26523  009D50  D00A               	goto	l13313
 26524                           
 26525                           ;lcd.c: 349: lcd_set_com_seg(0,15,0x80);
 26526  009D52  0E0F               	movlw	15
 26527  009D54  0100               	movlb	0	; () banked
 26528  009D56  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26529  009D58  0E80               	movlw	128
 26530  009D5A  0100               	movlb	0	; () banked
 26531  009D5C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26532  009D5E  0E00               	movlw	0
 26533  009D60  ECDA  F036         	call	_lcd_set_com_seg
 26534  009D64  0012               	return	
 26535  009D66                     l13313:
 26536                           
 26537                           ;lcd.c: 350: else
 26538                           ;lcd.c: 351: lcd_set_com_seg(0,15,0);
 26539  009D66  0E0F               	movlw	15
 26540  009D68  0100               	movlb	0	; () banked
 26541  009D6A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26542  009D6C  0E00               	movlw	0
 26543  009D6E  0100               	movlb	0	; () banked
 26544  009D70  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26545  009D72  0E00               	movlw	0
 26546  009D74  ECDA  F036         	call	_lcd_set_com_seg
 26547  009D78  0012               	return	
 26548  009D7A                     __end_of_lcd_disp_dp_loc_6:
 26549                           	opt stack 0
 26550                           tosu	equ	0xFFF
 26551                           tosh	equ	0xFFE
 26552                           tosl	equ	0xFFD
 26553                           pclath	equ	0xFFA
 26554                           tblptru	equ	0xFF8
 26555                           tblptrh	equ	0xFF7
 26556                           tblptrl	equ	0xFF6
 26557                           tablat	equ	0xFF5
 26558                           prodh	equ	0xFF4
 26559                           prodl	equ	0xFF3
 26560                           intcon	equ	0xFF2
 26561                           indf0	equ	0xFEF
 26562                           postinc0	equ	0xFEE
 26563                           fsr0h	equ	0xFEA
 26564                           fsr0l	equ	0xFE9
 26565                           wreg	equ	0xFE8
 26566                           indf1	equ	0xFE7
 26567                           postinc1	equ	0xFE6
 26568                           postdec1	equ	0xFE5
 26569                           plusw1	equ	0xFE3
 26570                           fsr1h	equ	0xFE2
 26571                           fsr1l	equ	0xFE1
 26572                           indf2	equ	0xFDF
 26573                           postinc2	equ	0xFDE
 26574                           postdec2	equ	0xFDD
 26575                           plusw2	equ	0xFDB
 26576                           fsr2h	equ	0xFDA
 26577                           fsr2l	equ	0xFD9
 26578                           status	equ	0xFD8
 26579                           
 26580 ;; *************** function _lcd_disp_dp_loc_5 *****************
 26581 ;; Defined at:
 26582 ;;		line 327 in file "src/driver/lcd.c"
 26583 ;; Parameters:    Size  Location     Type
 26584 ;;  dp              1    wreg     unsigned char 
 26585 ;; Auto vars:     Size  Location     Type
 26586 ;;  dp              1   31[COMRAM] unsigned char 
 26587 ;; Return value:  Size  Location     Type
 26588 ;;                  1    wreg      void 
 26589 ;; Registers used:
 26590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26591 ;; Tracked objects:
 26592 ;;		On entry : 0/0
 26593 ;;		On exit  : 0/0
 26594 ;;		Unchanged: 0/0
 26595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26600 ;;Total ram usage:        1 bytes
 26601 ;; Hardware stack levels used:    1
 26602 ;; Hardware stack levels required when called:    6
 26603 ;; This function calls:
 26604 ;;		_lcd_set_com_seg
 26605 ;; This function is called by:
 26606 ;;		_lcd_show_dp
 26607 ;;		_lcd_clear_all_dp
 26608 ;; This function uses a non-reentrant model
 26609 ;;
 26610                           
 26611                           	psect	text144
 26612  009D7A                     __ptext144:
 26613                           	opt stack 0
 26614  009D7A                     _lcd_disp_dp_loc_5:
 26615                           	opt stack 19
 26616                           
 26617                           ;incstack = 0
 26618                           ;lcd_disp_dp_loc_5@dp stored from wreg
 26619  009D7A  6E20               	movwf	lcd_disp_dp_loc_5@dp,c
 26620                           
 26621                           ;lcd.c: 329: if(dp)
 26622  009D7C  5020               	movf	lcd_disp_dp_loc_5@dp,w,c
 26623  009D7E  B4D8               	btfsc	status,2,c
 26624  009D80  D00A               	goto	l13307
 26625                           
 26626                           ;lcd.c: 330: lcd_set_com_seg(0,39,0x80);
 26627  009D82  0E27               	movlw	39
 26628  009D84  0100               	movlb	0	; () banked
 26629  009D86  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26630  009D88  0E80               	movlw	128
 26631  009D8A  0100               	movlb	0	; () banked
 26632  009D8C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26633  009D8E  0E00               	movlw	0
 26634  009D90  ECDA  F036         	call	_lcd_set_com_seg
 26635  009D94  0012               	return	
 26636  009D96                     l13307:
 26637                           
 26638                           ;lcd.c: 331: else
 26639                           ;lcd.c: 332: lcd_set_com_seg(0,39,0);
 26640  009D96  0E27               	movlw	39
 26641  009D98  0100               	movlb	0	; () banked
 26642  009D9A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26643  009D9C  0E00               	movlw	0
 26644  009D9E  0100               	movlb	0	; () banked
 26645  009DA0  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26646  009DA2  0E00               	movlw	0
 26647  009DA4  ECDA  F036         	call	_lcd_set_com_seg
 26648  009DA8  0012               	return	
 26649  009DAA                     __end_of_lcd_disp_dp_loc_5:
 26650                           	opt stack 0
 26651                           tosu	equ	0xFFF
 26652                           tosh	equ	0xFFE
 26653                           tosl	equ	0xFFD
 26654                           pclath	equ	0xFFA
 26655                           tblptru	equ	0xFF8
 26656                           tblptrh	equ	0xFF7
 26657                           tblptrl	equ	0xFF6
 26658                           tablat	equ	0xFF5
 26659                           prodh	equ	0xFF4
 26660                           prodl	equ	0xFF3
 26661                           intcon	equ	0xFF2
 26662                           indf0	equ	0xFEF
 26663                           postinc0	equ	0xFEE
 26664                           fsr0h	equ	0xFEA
 26665                           fsr0l	equ	0xFE9
 26666                           wreg	equ	0xFE8
 26667                           indf1	equ	0xFE7
 26668                           postinc1	equ	0xFE6
 26669                           postdec1	equ	0xFE5
 26670                           plusw1	equ	0xFE3
 26671                           fsr1h	equ	0xFE2
 26672                           fsr1l	equ	0xFE1
 26673                           indf2	equ	0xFDF
 26674                           postinc2	equ	0xFDE
 26675                           postdec2	equ	0xFDD
 26676                           plusw2	equ	0xFDB
 26677                           fsr2h	equ	0xFDA
 26678                           fsr2l	equ	0xFD9
 26679                           status	equ	0xFD8
 26680                           
 26681 ;; *************** function _lcd_disp_dp_loc_4 *****************
 26682 ;; Defined at:
 26683 ;;		line 308 in file "src/driver/lcd.c"
 26684 ;; Parameters:    Size  Location     Type
 26685 ;;  dp              1    wreg     unsigned char 
 26686 ;; Auto vars:     Size  Location     Type
 26687 ;;  dp              1   31[COMRAM] unsigned char 
 26688 ;; Return value:  Size  Location     Type
 26689 ;;                  1    wreg      void 
 26690 ;; Registers used:
 26691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26692 ;; Tracked objects:
 26693 ;;		On entry : 0/0
 26694 ;;		On exit  : 0/0
 26695 ;;		Unchanged: 0/0
 26696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26701 ;;Total ram usage:        1 bytes
 26702 ;; Hardware stack levels used:    1
 26703 ;; Hardware stack levels required when called:    6
 26704 ;; This function calls:
 26705 ;;		_lcd_set_com_seg
 26706 ;; This function is called by:
 26707 ;;		_lcd_show_dp
 26708 ;;		_lcd_clear_all_dp
 26709 ;; This function uses a non-reentrant model
 26710 ;;
 26711                           
 26712                           	psect	text145
 26713  009DAA                     __ptext145:
 26714                           	opt stack 0
 26715  009DAA                     _lcd_disp_dp_loc_4:
 26716                           	opt stack 19
 26717                           
 26718                           ;incstack = 0
 26719                           ;lcd_disp_dp_loc_4@dp stored from wreg
 26720  009DAA  6E20               	movwf	lcd_disp_dp_loc_4@dp,c
 26721                           
 26722                           ;lcd.c: 310: if(dp)
 26723  009DAC  5020               	movf	lcd_disp_dp_loc_4@dp,w,c
 26724  009DAE  B4D8               	btfsc	status,2,c
 26725  009DB0  D00A               	goto	l13301
 26726                           
 26727                           ;lcd.c: 311: lcd_set_com_seg(0,37,0x80);
 26728  009DB2  0E25               	movlw	37
 26729  009DB4  0100               	movlb	0	; () banked
 26730  009DB6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26731  009DB8  0E80               	movlw	128
 26732  009DBA  0100               	movlb	0	; () banked
 26733  009DBC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26734  009DBE  0E00               	movlw	0
 26735  009DC0  ECDA  F036         	call	_lcd_set_com_seg
 26736  009DC4  0012               	return	
 26737  009DC6                     l13301:
 26738                           
 26739                           ;lcd.c: 312: else
 26740                           ;lcd.c: 313: lcd_set_com_seg(0,37,0);
 26741  009DC6  0E25               	movlw	37
 26742  009DC8  0100               	movlb	0	; () banked
 26743  009DCA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26744  009DCC  0E00               	movlw	0
 26745  009DCE  0100               	movlb	0	; () banked
 26746  009DD0  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26747  009DD2  0E00               	movlw	0
 26748  009DD4  ECDA  F036         	call	_lcd_set_com_seg
 26749  009DD8  0012               	return	
 26750  009DDA                     __end_of_lcd_disp_dp_loc_4:
 26751                           	opt stack 0
 26752                           tosu	equ	0xFFF
 26753                           tosh	equ	0xFFE
 26754                           tosl	equ	0xFFD
 26755                           pclath	equ	0xFFA
 26756                           tblptru	equ	0xFF8
 26757                           tblptrh	equ	0xFF7
 26758                           tblptrl	equ	0xFF6
 26759                           tablat	equ	0xFF5
 26760                           prodh	equ	0xFF4
 26761                           prodl	equ	0xFF3
 26762                           intcon	equ	0xFF2
 26763                           indf0	equ	0xFEF
 26764                           postinc0	equ	0xFEE
 26765                           fsr0h	equ	0xFEA
 26766                           fsr0l	equ	0xFE9
 26767                           wreg	equ	0xFE8
 26768                           indf1	equ	0xFE7
 26769                           postinc1	equ	0xFE6
 26770                           postdec1	equ	0xFE5
 26771                           plusw1	equ	0xFE3
 26772                           fsr1h	equ	0xFE2
 26773                           fsr1l	equ	0xFE1
 26774                           indf2	equ	0xFDF
 26775                           postinc2	equ	0xFDE
 26776                           postdec2	equ	0xFDD
 26777                           plusw2	equ	0xFDB
 26778                           fsr2h	equ	0xFDA
 26779                           fsr2l	equ	0xFD9
 26780                           status	equ	0xFD8
 26781                           
 26782 ;; *************** function _lcd_disp_dp_loc_2 *****************
 26783 ;; Defined at:
 26784 ;;		line 277 in file "src/driver/lcd.c"
 26785 ;; Parameters:    Size  Location     Type
 26786 ;;  dp              1    wreg     unsigned char 
 26787 ;; Auto vars:     Size  Location     Type
 26788 ;;  dp              1   31[COMRAM] unsigned char 
 26789 ;; Return value:  Size  Location     Type
 26790 ;;                  1    wreg      void 
 26791 ;; Registers used:
 26792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26793 ;; Tracked objects:
 26794 ;;		On entry : 0/0
 26795 ;;		On exit  : 0/0
 26796 ;;		Unchanged: 0/0
 26797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26802 ;;Total ram usage:        1 bytes
 26803 ;; Hardware stack levels used:    1
 26804 ;; Hardware stack levels required when called:    6
 26805 ;; This function calls:
 26806 ;;		_lcd_set_com_seg
 26807 ;; This function is called by:
 26808 ;;		_lcd_show_dp
 26809 ;;		_lcd_clear_all_dp
 26810 ;; This function uses a non-reentrant model
 26811 ;;
 26812                           
 26813                           	psect	text146
 26814  009DDA                     __ptext146:
 26815                           	opt stack 0
 26816  009DDA                     _lcd_disp_dp_loc_2:
 26817                           	opt stack 19
 26818                           
 26819                           ;incstack = 0
 26820                           ;lcd_disp_dp_loc_2@dp stored from wreg
 26821  009DDA  6E20               	movwf	lcd_disp_dp_loc_2@dp,c
 26822                           
 26823                           ;lcd.c: 279: if(dp)
 26824  009DDC  5020               	movf	lcd_disp_dp_loc_2@dp,w,c
 26825  009DDE  B4D8               	btfsc	status,2,c
 26826  009DE0  D00A               	goto	l13295
 26827                           
 26828                           ;lcd.c: 280: lcd_set_com_seg(3,20,0x80);
 26829  009DE2  0E14               	movlw	20
 26830  009DE4  0100               	movlb	0	; () banked
 26831  009DE6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26832  009DE8  0E80               	movlw	128
 26833  009DEA  0100               	movlb	0	; () banked
 26834  009DEC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26835  009DEE  0E03               	movlw	3
 26836  009DF0  ECDA  F036         	call	_lcd_set_com_seg
 26837  009DF4  0012               	return	
 26838  009DF6                     l13295:
 26839                           
 26840                           ;lcd.c: 281: else
 26841                           ;lcd.c: 282: lcd_set_com_seg(3,20,0);
 26842  009DF6  0E14               	movlw	20
 26843  009DF8  0100               	movlb	0	; () banked
 26844  009DFA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26845  009DFC  0E00               	movlw	0
 26846  009DFE  0100               	movlb	0	; () banked
 26847  009E00  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26848  009E02  0E03               	movlw	3
 26849  009E04  ECDA  F036         	call	_lcd_set_com_seg
 26850  009E08  0012               	return	
 26851  009E0A                     __end_of_lcd_disp_dp_loc_2:
 26852                           	opt stack 0
 26853                           tosu	equ	0xFFF
 26854                           tosh	equ	0xFFE
 26855                           tosl	equ	0xFFD
 26856                           pclath	equ	0xFFA
 26857                           tblptru	equ	0xFF8
 26858                           tblptrh	equ	0xFF7
 26859                           tblptrl	equ	0xFF6
 26860                           tablat	equ	0xFF5
 26861                           prodh	equ	0xFF4
 26862                           prodl	equ	0xFF3
 26863                           intcon	equ	0xFF2
 26864                           indf0	equ	0xFEF
 26865                           postinc0	equ	0xFEE
 26866                           fsr0h	equ	0xFEA
 26867                           fsr0l	equ	0xFE9
 26868                           wreg	equ	0xFE8
 26869                           indf1	equ	0xFE7
 26870                           postinc1	equ	0xFE6
 26871                           postdec1	equ	0xFE5
 26872                           plusw1	equ	0xFE3
 26873                           fsr1h	equ	0xFE2
 26874                           fsr1l	equ	0xFE1
 26875                           indf2	equ	0xFDF
 26876                           postinc2	equ	0xFDE
 26877                           postdec2	equ	0xFDD
 26878                           plusw2	equ	0xFDB
 26879                           fsr2h	equ	0xFDA
 26880                           fsr2l	equ	0xFD9
 26881                           status	equ	0xFD8
 26882                           
 26883 ;; *************** function _lcd_disp_dp_loc_1 *****************
 26884 ;; Defined at:
 26885 ;;		line 258 in file "src/driver/lcd.c"
 26886 ;; Parameters:    Size  Location     Type
 26887 ;;  dp              1    wreg     unsigned char 
 26888 ;; Auto vars:     Size  Location     Type
 26889 ;;  dp              1   31[COMRAM] unsigned char 
 26890 ;; Return value:  Size  Location     Type
 26891 ;;                  1    wreg      void 
 26892 ;; Registers used:
 26893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26894 ;; Tracked objects:
 26895 ;;		On entry : 0/0
 26896 ;;		On exit  : 0/0
 26897 ;;		Unchanged: 0/0
 26898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26903 ;;Total ram usage:        1 bytes
 26904 ;; Hardware stack levels used:    1
 26905 ;; Hardware stack levels required when called:    6
 26906 ;; This function calls:
 26907 ;;		_lcd_set_com_seg
 26908 ;; This function is called by:
 26909 ;;		_lcd_show_dp
 26910 ;;		_lcd_clear_all_dp
 26911 ;; This function uses a non-reentrant model
 26912 ;;
 26913                           
 26914                           	psect	text147
 26915  009E0A                     __ptext147:
 26916                           	opt stack 0
 26917  009E0A                     _lcd_disp_dp_loc_1:
 26918                           	opt stack 19
 26919                           
 26920                           ;incstack = 0
 26921                           ;lcd_disp_dp_loc_1@dp stored from wreg
 26922  009E0A  6E20               	movwf	lcd_disp_dp_loc_1@dp,c
 26923                           
 26924                           ;lcd.c: 260: if(dp)
 26925  009E0C  5020               	movf	lcd_disp_dp_loc_1@dp,w,c
 26926  009E0E  B4D8               	btfsc	status,2,c
 26927  009E10  D00A               	goto	l13289
 26928                           
 26929                           ;lcd.c: 261: lcd_set_com_seg(3,22,0x80);
 26930  009E12  0E16               	movlw	22
 26931  009E14  0100               	movlb	0	; () banked
 26932  009E16  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26933  009E18  0E80               	movlw	128
 26934  009E1A  0100               	movlb	0	; () banked
 26935  009E1C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26936  009E1E  0E03               	movlw	3
 26937  009E20  ECDA  F036         	call	_lcd_set_com_seg
 26938  009E24  0012               	return	
 26939  009E26                     l13289:
 26940                           
 26941                           ;lcd.c: 262: else
 26942                           ;lcd.c: 263: lcd_set_com_seg(3,22,0);
 26943  009E26  0E16               	movlw	22
 26944  009E28  0100               	movlb	0	; () banked
 26945  009E2A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26946  009E2C  0E00               	movlw	0
 26947  009E2E  0100               	movlb	0	; () banked
 26948  009E30  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26949  009E32  0E03               	movlw	3
 26950  009E34  ECDA  F036         	call	_lcd_set_com_seg
 26951  009E38  0012               	return	
 26952  009E3A                     __end_of_lcd_disp_dp_loc_1:
 26953                           	opt stack 0
 26954                           tosu	equ	0xFFF
 26955                           tosh	equ	0xFFE
 26956                           tosl	equ	0xFFD
 26957                           pclath	equ	0xFFA
 26958                           tblptru	equ	0xFF8
 26959                           tblptrh	equ	0xFF7
 26960                           tblptrl	equ	0xFF6
 26961                           tablat	equ	0xFF5
 26962                           prodh	equ	0xFF4
 26963                           prodl	equ	0xFF3
 26964                           intcon	equ	0xFF2
 26965                           indf0	equ	0xFEF
 26966                           postinc0	equ	0xFEE
 26967                           fsr0h	equ	0xFEA
 26968                           fsr0l	equ	0xFE9
 26969                           wreg	equ	0xFE8
 26970                           indf1	equ	0xFE7
 26971                           postinc1	equ	0xFE6
 26972                           postdec1	equ	0xFE5
 26973                           plusw1	equ	0xFE3
 26974                           fsr1h	equ	0xFE2
 26975                           fsr1l	equ	0xFE1
 26976                           indf2	equ	0xFDF
 26977                           postinc2	equ	0xFDE
 26978                           postdec2	equ	0xFDD
 26979                           plusw2	equ	0xFDB
 26980                           fsr2h	equ	0xFDA
 26981                           fsr2l	equ	0xFD9
 26982                           status	equ	0xFD8
 26983                           
 26984 ;; *************** function _lcd_disp_dp_loc_0 *****************
 26985 ;; Defined at:
 26986 ;;		line 239 in file "src/driver/lcd.c"
 26987 ;; Parameters:    Size  Location     Type
 26988 ;;  dp              1    wreg     unsigned char 
 26989 ;; Auto vars:     Size  Location     Type
 26990 ;;  dp              1   31[COMRAM] unsigned char 
 26991 ;; Return value:  Size  Location     Type
 26992 ;;                  1    wreg      void 
 26993 ;; Registers used:
 26994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26995 ;; Tracked objects:
 26996 ;;		On entry : 0/0
 26997 ;;		On exit  : 0/0
 26998 ;;		Unchanged: 0/0
 26999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27004 ;;Total ram usage:        1 bytes
 27005 ;; Hardware stack levels used:    1
 27006 ;; Hardware stack levels required when called:    6
 27007 ;; This function calls:
 27008 ;;		_lcd_set_com_seg
 27009 ;; This function is called by:
 27010 ;;		_lcd_show_dp
 27011 ;;		_lcd_clear_all_dp
 27012 ;; This function uses a non-reentrant model
 27013 ;;
 27014                           
 27015                           	psect	text148
 27016  009E3A                     __ptext148:
 27017                           	opt stack 0
 27018  009E3A                     _lcd_disp_dp_loc_0:
 27019                           	opt stack 19
 27020                           
 27021                           ;incstack = 0
 27022                           ;lcd_disp_dp_loc_0@dp stored from wreg
 27023  009E3A  6E20               	movwf	lcd_disp_dp_loc_0@dp,c
 27024                           
 27025                           ;lcd.c: 241: if(dp)
 27026  009E3C  5020               	movf	lcd_disp_dp_loc_0@dp,w,c
 27027  009E3E  B4D8               	btfsc	status,2,c
 27028  009E40  D00A               	goto	l13283
 27029                           
 27030                           ;lcd.c: 242: lcd_set_com_seg(3,24,0x80);
 27031  009E42  0E18               	movlw	24
 27032  009E44  0100               	movlb	0	; () banked
 27033  009E46  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 27034  009E48  0E80               	movlw	128
 27035  009E4A  0100               	movlb	0	; () banked
 27036  009E4C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 27037  009E4E  0E03               	movlw	3
 27038  009E50  ECDA  F036         	call	_lcd_set_com_seg
 27039  009E54  0012               	return	
 27040  009E56                     l13283:
 27041                           
 27042                           ;lcd.c: 243: else
 27043                           ;lcd.c: 244: lcd_set_com_seg(3,24,0);
 27044  009E56  0E18               	movlw	24
 27045  009E58  0100               	movlb	0	; () banked
 27046  009E5A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 27047  009E5C  0E00               	movlw	0
 27048  009E5E  0100               	movlb	0	; () banked
 27049  009E60  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 27050  009E62  0E03               	movlw	3
 27051  009E64  ECDA  F036         	call	_lcd_set_com_seg
 27052  009E68  0012               	return	
 27053  009E6A                     __end_of_lcd_disp_dp_loc_0:
 27054                           	opt stack 0
 27055                           tosu	equ	0xFFF
 27056                           tosh	equ	0xFFE
 27057                           tosl	equ	0xFFD
 27058                           pclath	equ	0xFFA
 27059                           tblptru	equ	0xFF8
 27060                           tblptrh	equ	0xFF7
 27061                           tblptrl	equ	0xFF6
 27062                           tablat	equ	0xFF5
 27063                           prodh	equ	0xFF4
 27064                           prodl	equ	0xFF3
 27065                           intcon	equ	0xFF2
 27066                           indf0	equ	0xFEF
 27067                           postinc0	equ	0xFEE
 27068                           fsr0h	equ	0xFEA
 27069                           fsr0l	equ	0xFE9
 27070                           wreg	equ	0xFE8
 27071                           indf1	equ	0xFE7
 27072                           postinc1	equ	0xFE6
 27073                           postdec1	equ	0xFE5
 27074                           plusw1	equ	0xFE3
 27075                           fsr1h	equ	0xFE2
 27076                           fsr1l	equ	0xFE1
 27077                           indf2	equ	0xFDF
 27078                           postinc2	equ	0xFDE
 27079                           postdec2	equ	0xFDD
 27080                           plusw2	equ	0xFDB
 27081                           fsr2h	equ	0xFDA
 27082                           fsr2l	equ	0xFD9
 27083                           status	equ	0xFD8
 27084                           
 27085 ;; *************** function _m_mem_cpy *****************
 27086 ;; Defined at:
 27087 ;;		line 51 in file "src/depend/m_string.c"
 27088 ;; Parameters:    Size  Location     Type
 27089 ;;  d               2    0[BANK0 ] PTR unsigned char 
 27090 ;;		 -> ui_disp_menu_work_mode_adj@buf(10), ui_disp_menu_epr_ilp_scale_adj@buf(6), ui_disp_menu_epr_calib_adj@buf(6), ui
      +_disp_menu_warn_v_adj@buf(6), 
 27091 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_poly_c_adj@buf(6), ui_disp_menu_calib_pr_adj@buf(10), ui_disp_menu_
      +calib_diff_adj@buf(10), 
 27092 ;;		 -> ui_disp_menu_pos_adj@buf(6), ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat
      +_pt@buf(10), 
 27093 ;;  s               2    2[BANK0 ] PTR unsigned char 
 27094 ;;		 -> STR_33(9), STR_32(9), STR_31(5), STR_30(5), 
 27095 ;;		 -> STR_29(5), STR_28(5), STR_27(5), ui_disp_menu_epr_ilp_scale_adj@buf(6), 
 27096 ;;		 -> STR_26(5), STR_25(5), STR_24(5), STR_23(5), 
 27097 ;;		 -> ui_disp_menu_epr_calib_adj@buf(6), STR_22(5), ui_disp_menu_warn_v_adj@buf(6), STR_21(5), 
 27098 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(5), 
 27099 ;;		 -> STR_16(5), STR_15(5), ui_disp_menu_poly_c_adj@buf(6), STR_14(5), 
 27100 ;;		 -> ui_disp_menu_calib_pr_adj@buf(10), STR_13(5), ui_disp_menu_calib_diff_adj@buf(10), STR_12(5), 
 27101 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(5), 
 27102 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
 27103 ;;		 -> STR_3(5), 
 27104 ;; Auto vars:     Size  Location     Type
 27105 ;;		None
 27106 ;; Return value:  Size  Location     Type
 27107 ;;                  1    wreg      void 
 27108 ;; Registers used:
 27109 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27110 ;; Tracked objects:
 27111 ;;		On entry : 0/0
 27112 ;;		On exit  : 0/0
 27113 ;;		Unchanged: 0/0
 27114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27118 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27119 ;;Total ram usage:        4 bytes
 27120 ;; Hardware stack levels used:    1
 27121 ;; Hardware stack levels required when called:    4
 27122 ;; This function calls:
 27123 ;;		Nothing
 27124 ;; This function is called by:
 27125 ;;		_ui_disp_adj_xfloat_pt
 27126 ;;		_ui_disp_adj_xfixed_pt
 27127 ;;		_ui_disp_adj_xfixed_pt_dp
 27128 ;;		_ui_disp_menu_pos_adj
 27129 ;;		_ui_disp_menu_calib_diff_adj
 27130 ;;		_ui_disp_menu_calib_pr_adj
 27131 ;;		_ui_disp_menu_poly_c_adj
 27132 ;;		_ui_disp_menu_warn_t_adj
 27133 ;;		_ui_disp_menu_warn_v_adj
 27134 ;;		_ui_disp_menu_epr_calib_adj
 27135 ;;		_ui_disp_menu_epr_ilp_scale_adj
 27136 ;;		_ui_disp_menu_work_mode_adj
 27137 ;; This function uses a non-reentrant model
 27138 ;;
 27139                           
 27140                           	psect	text149
 27141  008B70                     __ptext149:
 27142                           	opt stack 0
 27143  008B70                     _m_mem_cpy:
 27144                           	opt stack 23
 27145                           
 27146                           ;m_string.c: 53: while(*s!='\0')
 27147                           
 27148                           ;incstack = 0
 27149  008B70  D01B               	goto	l14051
 27150  008B72                     l14045:
 27151                           
 27152                           ;m_string.c: 54: {
 27153                           ;m_string.c: 55: *d++=*s++;
 27154  008B72  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 27155  008B76  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 27156  008B7A  6AF8               	clrf	tblptru,c
 27157  008B7C  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 27158  008B80  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 27159  008B84  0E0F               	movlw	(high __ramtop+-1)
 27160  008B86  64F7               	cpfsgt	tblptrh,c
 27161  008B88  D003               	bra	u12767
 27162  008B8A  0008               	tblrd		*
 27163  008B8C  50F5               	movf	tablat,w,c
 27164  008B8E  D005               	bra	u12760
 27165  008B90                     u12767:
 27166  008B90  CFF6 FFE9          	movff	tblptrl,fsr0l
 27167  008B94  CFF7 FFEA          	movff	tblptrh,fsr0h
 27168  008B98  50EF               	movf	indf0,w,c
 27169  008B9A                     u12760:
 27170  008B9A  6EDF               	movwf	indf2,c
 27171  008B9C  0100               	movlb	0	; () banked
 27172  008B9E  4B62               	infsnz	m_mem_cpy@s& (0+255),f,b
 27173  008BA0  2B63               	incf	(m_mem_cpy@s+1)& (0+255),f,b
 27174                           
 27175                           ; BSR set to: 0
 27176  008BA2  0100               	movlb	0	; () banked
 27177  008BA4  4B60               	infsnz	m_mem_cpy@d& (0+255),f,b
 27178  008BA6  2B61               	incf	(m_mem_cpy@d+1)& (0+255),f,b
 27179  008BA8                     l14051:
 27180  008BA8  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 27181  008BAC  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 27182  008BB0  6AF8               	clrf	tblptru,c
 27183  008BB2  0E0F               	movlw	(high __ramtop+-1)
 27184  008BB4  64F7               	cpfsgt	tblptrh,c
 27185  008BB6  D003               	bra	u12777
 27186  008BB8  0008               	tblrd		*
 27187  008BBA  50F5               	movf	tablat,w,c
 27188  008BBC  D005               	bra	u12770
 27189  008BBE                     u12777:
 27190  008BBE  CFF6 FFE9          	movff	tblptrl,fsr0l
 27191  008BC2  CFF7 FFEA          	movff	tblptrh,fsr0h
 27192  008BC6  50EF               	movf	indf0,w,c
 27193  008BC8                     u12770:
 27194  008BC8  0900               	iorlw	0
 27195  008BCA  A4D8               	btfss	status,2,c
 27196  008BCC  D7D2               	goto	l14045
 27197                           
 27198                           ;m_string.c: 56: }
 27199                           ;m_string.c: 57: *d='\0';
 27200  008BCE  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 27201  008BD2  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 27202  008BD6  0E00               	movlw	0
 27203  008BD8  6EDF               	movwf	indf2,c
 27204  008BDA  0012               	return		;funcret
 27205  008BDC                     __end_of_m_mem_cpy:
 27206                           	opt stack 0
 27207                           tosu	equ	0xFFF
 27208                           tosh	equ	0xFFE
 27209                           tosl	equ	0xFFD
 27210                           pclath	equ	0xFFA
 27211                           tblptru	equ	0xFF8
 27212                           tblptrh	equ	0xFF7
 27213                           tblptrl	equ	0xFF6
 27214                           tablat	equ	0xFF5
 27215                           prodh	equ	0xFF4
 27216                           prodl	equ	0xFF3
 27217                           intcon	equ	0xFF2
 27218                           indf0	equ	0xFEF
 27219                           postinc0	equ	0xFEE
 27220                           fsr0h	equ	0xFEA
 27221                           fsr0l	equ	0xFE9
 27222                           wreg	equ	0xFE8
 27223                           indf1	equ	0xFE7
 27224                           postinc1	equ	0xFE6
 27225                           postdec1	equ	0xFE5
 27226                           plusw1	equ	0xFE3
 27227                           fsr1h	equ	0xFE2
 27228                           fsr1l	equ	0xFE1
 27229                           indf2	equ	0xFDF
 27230                           postinc2	equ	0xFDE
 27231                           postdec2	equ	0xFDD
 27232                           plusw2	equ	0xFDB
 27233                           fsr2h	equ	0xFDA
 27234                           fsr2l	equ	0xFD9
 27235                           status	equ	0xFD8
 27236                           
 27237 ;; *************** function _m_int16_2_str_4 *****************
 27238 ;; Defined at:
 27239 ;;		line 260 in file "src/depend/m_string.c"
 27240 ;; Parameters:    Size  Location     Type
 27241 ;;  buf             2    8[BANK0 ] PTR unsigned char 
 27242 ;;		 -> ui_disp_xfloat_pt@buf(10), ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_p
      +t@buf(10), 
 27243 ;;  x               2   10[BANK0 ] int 
 27244 ;; Auto vars:     Size  Location     Type
 27245 ;;		None
 27246 ;; Return value:  Size  Location     Type
 27247 ;;                  1    wreg      void 
 27248 ;; Registers used:
 27249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27250 ;; Tracked objects:
 27251 ;;		On entry : 0/0
 27252 ;;		On exit  : 0/0
 27253 ;;		Unchanged: 0/0
 27254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27259 ;;Total ram usage:        4 bytes
 27260 ;; Hardware stack levels used:    1
 27261 ;; Hardware stack levels required when called:    5
 27262 ;; This function calls:
 27263 ;;		___awdiv
 27264 ;;		___awmod
 27265 ;; This function is called by:
 27266 ;;		_ui_disp_adj_xfloat_pt
 27267 ;;		_ui_disp_adj_xfixed_pt
 27268 ;;		_ui_disp_adj_xfixed_pt_dp
 27269 ;;		_ui_disp_xfloat_pt
 27270 ;; This function uses a non-reentrant model
 27271 ;;
 27272                           
 27273                           	psect	text150
 27274  004FC8                     __ptext150:
 27275                           	opt stack 0
 27276  004FC8                     _m_int16_2_str_4:
 27277                           	opt stack 21
 27278                           
 27279                           ;m_string.c: 262: if(x>9999)x=9999;
 27280                           
 27281                           ;incstack = 0
 27282  004FC8  0100               	movlb	0	; () banked
 27283  004FCA  BF6B               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
 27284  004FCC  D00D               	goto	l14059
 27285  004FCE  0E10               	movlw	16
 27286  004FD0  0100               	movlb	0	; () banked
 27287  004FD2  5D6A               	subwf	m_int16_2_str_4@x& (0+255),w,b
 27288  004FD4  0E27               	movlw	39
 27289  004FD6  0100               	movlb	0	; () banked
 27290  004FD8  596B               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
 27291  004FDA  A0D8               	btfss	status,0,c
 27292  004FDC  D005               	goto	l14059
 27293                           
 27294                           ; BSR set to: 0
 27295  004FDE  0E27               	movlw	39
 27296  004FE0  0100               	movlb	0	; () banked
 27297  004FE2  6F6B               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
 27298  004FE4  0E0F               	movlw	15
 27299  004FE6  6F6A               	movwf	m_int16_2_str_4@x& (0+255),b
 27300  004FE8                     l14059:
 27301                           
 27302                           ; BSR set to: 0
 27303                           ;m_string.c: 263: buf[3]=HexTable[x%10];
 27304  004FE8  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27305  004FEC  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27306  004FF0  0E00               	movlw	0
 27307  004FF2  0100               	movlb	0	; () banked
 27308  004FF4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27309  004FF6  0E0A               	movlw	10
 27310  004FF8  6F62               	movwf	___awmod@divisor& (0+255),b
 27311  004FFA  ECE8  F03C         	call	___awmod	;wreg free
 27312  004FFE  0E06               	movlw	low _HexTable
 27313  005000  0100               	movlb	0	; () banked
 27314  005002  2560               	addwf	?___awmod& (0+255),w,b
 27315  005004  6EF6               	movwf	tblptrl,c
 27316  005006  0EEF               	movlw	high _HexTable
 27317  005008  0100               	movlb	0	; () banked
 27318  00500A  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27319  00500C  6EF7               	movwf	tblptrh,c
 27320  00500E                     	if	0	;There are less than 3 active tblptr bytes
 27321  00500E                     	endif
 27322  00500E  0100               	movlb	0	; () banked
 27323  005010  EE20 F003          	lfsr	2,3
 27324  005014  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 27325  005016  26D9               	addwf	fsr2l,f,c
 27326  005018  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 27327  00501A  22DA               	addwfc	fsr2h,f,c
 27328  00501C  0008               	tblrd		*
 27329  00501E  CFF5 FFDF          	movff	tablat,indf2
 27330                           
 27331                           ; BSR set to: 0
 27332                           ;m_string.c: 264: x/=10;
 27333  005022  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 27334  005026  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 27335  00502A  0E00               	movlw	0
 27336  00502C  0100               	movlb	0	; () banked
 27337  00502E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 27338  005030  0E0A               	movlw	10
 27339  005032  6F62               	movwf	___awdiv@divisor& (0+255),b
 27340  005034  ECC4  F038         	call	___awdiv	;wreg free
 27341  005038  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 27342  00503C  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 27343                           
 27344                           ;m_string.c: 265: buf[2]=HexTable[x%10];
 27345  005040  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27346  005044  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27347  005048  0E00               	movlw	0
 27348  00504A  0100               	movlb	0	; () banked
 27349  00504C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27350  00504E  0E0A               	movlw	10
 27351  005050  6F62               	movwf	___awmod@divisor& (0+255),b
 27352  005052  ECE8  F03C         	call	___awmod	;wreg free
 27353  005056  0E06               	movlw	low _HexTable
 27354  005058  0100               	movlb	0	; () banked
 27355  00505A  2560               	addwf	?___awmod& (0+255),w,b
 27356  00505C  6EF6               	movwf	tblptrl,c
 27357  00505E  0EEF               	movlw	high _HexTable
 27358  005060  0100               	movlb	0	; () banked
 27359  005062  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27360  005064  6EF7               	movwf	tblptrh,c
 27361  005066                     	if	0	;There are less than 3 active tblptr bytes
 27362  005066                     	endif
 27363  005066  0100               	movlb	0	; () banked
 27364  005068  EE20 F002          	lfsr	2,2
 27365  00506C  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 27366  00506E  26D9               	addwf	fsr2l,f,c
 27367  005070  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 27368  005072  22DA               	addwfc	fsr2h,f,c
 27369  005074  0008               	tblrd		*
 27370  005076  CFF5 FFDF          	movff	tablat,indf2
 27371                           
 27372                           ; BSR set to: 0
 27373                           ;m_string.c: 266: x/=10;
 27374  00507A  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 27375  00507E  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 27376  005082  0E00               	movlw	0
 27377  005084  0100               	movlb	0	; () banked
 27378  005086  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 27379  005088  0E0A               	movlw	10
 27380  00508A  6F62               	movwf	___awdiv@divisor& (0+255),b
 27381  00508C  ECC4  F038         	call	___awdiv	;wreg free
 27382  005090  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 27383  005094  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 27384                           
 27385                           ;m_string.c: 267: buf[1]=HexTable[x%10];
 27386  005098  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27387  00509C  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27388  0050A0  0E00               	movlw	0
 27389  0050A2  0100               	movlb	0	; () banked
 27390  0050A4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27391  0050A6  0E0A               	movlw	10
 27392  0050A8  6F62               	movwf	___awmod@divisor& (0+255),b
 27393  0050AA  ECE8  F03C         	call	___awmod	;wreg free
 27394  0050AE  0E06               	movlw	low _HexTable
 27395  0050B0  0100               	movlb	0	; () banked
 27396  0050B2  2560               	addwf	?___awmod& (0+255),w,b
 27397  0050B4  6EF6               	movwf	tblptrl,c
 27398  0050B6  0EEF               	movlw	high _HexTable
 27399  0050B8  0100               	movlb	0	; () banked
 27400  0050BA  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27401  0050BC  6EF7               	movwf	tblptrh,c
 27402  0050BE                     	if	0	;There are less than 3 active tblptr bytes
 27403  0050BE                     	endif
 27404  0050BE  0100               	movlb	0	; () banked
 27405  0050C0  EE20 F001          	lfsr	2,1
 27406  0050C4  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 27407  0050C6  26D9               	addwf	fsr2l,f,c
 27408  0050C8  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 27409  0050CA  22DA               	addwfc	fsr2h,f,c
 27410  0050CC  0008               	tblrd		*
 27411  0050CE  CFF5 FFDF          	movff	tablat,indf2
 27412                           
 27413                           ; BSR set to: 0
 27414                           ;m_string.c: 268: x/=10;
 27415  0050D2  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 27416  0050D6  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 27417  0050DA  0E00               	movlw	0
 27418  0050DC  0100               	movlb	0	; () banked
 27419  0050DE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 27420  0050E0  0E0A               	movlw	10
 27421  0050E2  6F62               	movwf	___awdiv@divisor& (0+255),b
 27422  0050E4  ECC4  F038         	call	___awdiv	;wreg free
 27423  0050E8  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 27424  0050EC  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 27425                           
 27426                           ;m_string.c: 269: buf[0]=HexTable[x%10];
 27427  0050F0  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27428  0050F4  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27429  0050F8  0E00               	movlw	0
 27430  0050FA  0100               	movlb	0	; () banked
 27431  0050FC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27432  0050FE  0E0A               	movlw	10
 27433  005100  6F62               	movwf	___awmod@divisor& (0+255),b
 27434  005102  ECE8  F03C         	call	___awmod	;wreg free
 27435  005106  0E06               	movlw	low _HexTable
 27436  005108  0100               	movlb	0	; () banked
 27437  00510A  2560               	addwf	?___awmod& (0+255),w,b
 27438  00510C  6EF6               	movwf	tblptrl,c
 27439  00510E  0EEF               	movlw	high _HexTable
 27440  005110  0100               	movlb	0	; () banked
 27441  005112  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27442  005114  6EF7               	movwf	tblptrh,c
 27443  005116                     	if	0	;There are less than 3 active tblptr bytes
 27444  005116                     	endif
 27445  005116  C068  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
 27446  00511A  C069  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
 27447  00511E  0008               	tblrd		*
 27448  005120  CFF5 FFDF          	movff	tablat,indf2
 27449                           
 27450                           ; BSR set to: 0
 27451  005124  0012               	return		;funcret
 27452  005126                     __end_of_m_int16_2_str_4:
 27453                           	opt stack 0
 27454                           tosu	equ	0xFFF
 27455                           tosh	equ	0xFFE
 27456                           tosl	equ	0xFFD
 27457                           pclath	equ	0xFFA
 27458                           tblptru	equ	0xFF8
 27459                           tblptrh	equ	0xFF7
 27460                           tblptrl	equ	0xFF6
 27461                           tablat	equ	0xFF5
 27462                           prodh	equ	0xFF4
 27463                           prodl	equ	0xFF3
 27464                           intcon	equ	0xFF2
 27465                           indf0	equ	0xFEF
 27466                           postinc0	equ	0xFEE
 27467                           fsr0h	equ	0xFEA
 27468                           fsr0l	equ	0xFE9
 27469                           wreg	equ	0xFE8
 27470                           indf1	equ	0xFE7
 27471                           postinc1	equ	0xFE6
 27472                           postdec1	equ	0xFE5
 27473                           plusw1	equ	0xFE3
 27474                           fsr1h	equ	0xFE2
 27475                           fsr1l	equ	0xFE1
 27476                           indf2	equ	0xFDF
 27477                           postinc2	equ	0xFDE
 27478                           postdec2	equ	0xFDD
 27479                           plusw2	equ	0xFDB
 27480                           fsr2h	equ	0xFDA
 27481                           fsr2l	equ	0xFD9
 27482                           status	equ	0xFD8
 27483                           
 27484 ;; *************** function ___awmod *****************
 27485 ;; Defined at:
 27486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 27487 ;; Parameters:    Size  Location     Type
 27488 ;;  dividend        2    0[BANK0 ] int 
 27489 ;;  divisor         2    2[BANK0 ] int 
 27490 ;; Auto vars:     Size  Location     Type
 27491 ;;  sign            1    5[BANK0 ] unsigned char 
 27492 ;;  counter         1    4[BANK0 ] unsigned char 
 27493 ;; Return value:  Size  Location     Type
 27494 ;;                  2    0[BANK0 ] int 
 27495 ;; Registers used:
 27496 ;;		wreg, status,2, status,0
 27497 ;; Tracked objects:
 27498 ;;		On entry : 0/0
 27499 ;;		On exit  : 0/0
 27500 ;;		Unchanged: 0/0
 27501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27505 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27506 ;;Total ram usage:        6 bytes
 27507 ;; Hardware stack levels used:    1
 27508 ;; Hardware stack levels required when called:    4
 27509 ;; This function calls:
 27510 ;;		Nothing
 27511 ;; This function is called by:
 27512 ;;		_ui_disp_menu_calib_diff_adj
 27513 ;;		_ui_disp_menu_calib_pr_adj
 27514 ;;		_m_int16_2_str_4
 27515 ;; This function uses a non-reentrant model
 27516 ;;
 27517                           
 27518                           	psect	text151
 27519  0079D0                     __ptext151:
 27520                           	opt stack 0
 27521  0079D0                     ___awmod:
 27522                           	opt stack 21
 27523                           
 27524                           ; BSR set to: 0
 27525                           ;incstack = 0
 27526  0079D0  0E00               	movlw	0
 27527  0079D2  0100               	movlb	0	; () banked
 27528  0079D4  6F65               	movwf	___awmod@sign& (0+255),b
 27529                           
 27530                           ; BSR set to: 0
 27531  0079D6  0100               	movlb	0	; () banked
 27532  0079D8  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 27533  0079DA  D008               	goto	l13815
 27534                           
 27535                           ; BSR set to: 0
 27536  0079DC  0100               	movlb	0	; () banked
 27537  0079DE  6D60               	negf	___awmod@dividend& (0+255),b
 27538  0079E0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 27539  0079E2  B0D8               	btfsc	status,0,c
 27540  0079E4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 27541                           
 27542                           ; BSR set to: 0
 27543  0079E6  0E01               	movlw	1
 27544  0079E8  0100               	movlb	0	; () banked
 27545  0079EA  6F65               	movwf	___awmod@sign& (0+255),b
 27546  0079EC                     l13815:
 27547                           
 27548                           ; BSR set to: 0
 27549  0079EC  0100               	movlb	0	; () banked
 27550  0079EE  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 27551  0079F0  D005               	goto	l13819
 27552                           
 27553                           ; BSR set to: 0
 27554  0079F2  0100               	movlb	0	; () banked
 27555  0079F4  6D62               	negf	___awmod@divisor& (0+255),b
 27556  0079F6  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 27557  0079F8  B0D8               	btfsc	status,0,c
 27558  0079FA  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 27559  0079FC                     l13819:
 27560                           
 27561                           ; BSR set to: 0
 27562  0079FC  0100               	movlb	0	; () banked
 27563  0079FE  5162               	movf	___awmod@divisor& (0+255),w,b
 27564  007A00  0100               	movlb	0	; () banked
 27565  007A02  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 27566  007A04  B4D8               	btfsc	status,2,c
 27567  007A06  D026               	goto	l13835
 27568                           
 27569                           ; BSR set to: 0
 27570  007A08  0E01               	movlw	1
 27571  007A0A  0100               	movlb	0	; () banked
 27572  007A0C  6F64               	movwf	___awmod@counter& (0+255),b
 27573  007A0E  D006               	goto	l13825
 27574  007A10                     l13823:
 27575                           
 27576                           ; BSR set to: 0
 27577  007A10  0100               	movlb	0	; () banked
 27578  007A12  90D8               	bcf	status,0,c
 27579  007A14  3762               	rlcf	___awmod@divisor& (0+255),f,b
 27580  007A16  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 27581  007A18  0100               	movlb	0	; () banked
 27582  007A1A  2B64               	incf	___awmod@counter& (0+255),f,b
 27583  007A1C                     l13825:
 27584                           
 27585                           ; BSR set to: 0
 27586  007A1C  0100               	movlb	0	; () banked
 27587  007A1E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 27588  007A20  D7F7               	goto	l13823
 27589  007A22                     l13827:
 27590                           
 27591                           ; BSR set to: 0
 27592  007A22  0100               	movlb	0	; () banked
 27593  007A24  5162               	movf	___awmod@divisor& (0+255),w,b
 27594  007A26  0100               	movlb	0	; () banked
 27595  007A28  5D60               	subwf	___awmod@dividend& (0+255),w,b
 27596  007A2A  0100               	movlb	0	; () banked
 27597  007A2C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 27598  007A2E  0100               	movlb	0	; () banked
 27599  007A30  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 27600  007A32  A0D8               	btfss	status,0,c
 27601  007A34  D008               	goto	l13831
 27602                           
 27603                           ; BSR set to: 0
 27604  007A36  0100               	movlb	0	; () banked
 27605  007A38  5162               	movf	___awmod@divisor& (0+255),w,b
 27606  007A3A  0100               	movlb	0	; () banked
 27607  007A3C  5F60               	subwf	___awmod@dividend& (0+255),f,b
 27608  007A3E  0100               	movlb	0	; () banked
 27609  007A40  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 27610  007A42  0100               	movlb	0	; () banked
 27611  007A44  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 27612  007A46                     l13831:
 27613                           
 27614                           ; BSR set to: 0
 27615  007A46  0100               	movlb	0	; () banked
 27616  007A48  90D8               	bcf	status,0,c
 27617  007A4A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 27618  007A4C  3362               	rrcf	___awmod@divisor& (0+255),f,b
 27619                           
 27620                           ; BSR set to: 0
 27621  007A4E  0100               	movlb	0	; () banked
 27622  007A50  2F64               	decfsz	___awmod@counter& (0+255),f,b
 27623  007A52  D7E7               	goto	l13827
 27624  007A54                     l13835:
 27625                           
 27626                           ; BSR set to: 0
 27627  007A54  0100               	movlb	0	; () banked
 27628  007A56  5165               	movf	___awmod@sign& (0+255),w,b
 27629  007A58  0100               	movlb	0	; () banked
 27630  007A5A  B4D8               	btfsc	status,2,c
 27631  007A5C  D005               	goto	l13839
 27632                           
 27633                           ; BSR set to: 0
 27634  007A5E  0100               	movlb	0	; () banked
 27635  007A60  6D60               	negf	___awmod@dividend& (0+255),b
 27636  007A62  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 27637  007A64  B0D8               	btfsc	status,0,c
 27638  007A66  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 27639  007A68                     l13839:
 27640                           
 27641                           ; BSR set to: 0
 27642  007A68  C060  F060         	movff	___awmod@dividend,?___awmod
 27643  007A6C  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 27644  007A70  0012               	return	
 27645  007A72                     __end_of___awmod:
 27646                           	opt stack 0
 27647                           tosu	equ	0xFFF
 27648                           tosh	equ	0xFFE
 27649                           tosl	equ	0xFFD
 27650                           pclath	equ	0xFFA
 27651                           tblptru	equ	0xFF8
 27652                           tblptrh	equ	0xFF7
 27653                           tblptrl	equ	0xFF6
 27654                           tablat	equ	0xFF5
 27655                           prodh	equ	0xFF4
 27656                           prodl	equ	0xFF3
 27657                           intcon	equ	0xFF2
 27658                           indf0	equ	0xFEF
 27659                           postinc0	equ	0xFEE
 27660                           fsr0h	equ	0xFEA
 27661                           fsr0l	equ	0xFE9
 27662                           wreg	equ	0xFE8
 27663                           indf1	equ	0xFE7
 27664                           postinc1	equ	0xFE6
 27665                           postdec1	equ	0xFE5
 27666                           plusw1	equ	0xFE3
 27667                           fsr1h	equ	0xFE2
 27668                           fsr1l	equ	0xFE1
 27669                           indf2	equ	0xFDF
 27670                           postinc2	equ	0xFDE
 27671                           postdec2	equ	0xFDD
 27672                           plusw2	equ	0xFDB
 27673                           fsr2h	equ	0xFDA
 27674                           fsr2l	equ	0xFD9
 27675                           status	equ	0xFD8
 27676                           
 27677 ;; *************** function _lcd_disp_refresh *****************
 27678 ;; Defined at:
 27679 ;;		line 572 in file "src/driver/lcd.c"
 27680 ;; Parameters:    Size  Location     Type
 27681 ;;		None
 27682 ;; Auto vars:     Size  Location     Type
 27683 ;;		None
 27684 ;; Return value:  Size  Location     Type
 27685 ;;                  1    wreg      void 
 27686 ;; Registers used:
 27687 ;;		None
 27688 ;; Tracked objects:
 27689 ;;		On entry : 0/0
 27690 ;;		On exit  : 0/0
 27691 ;;		Unchanged: 0/0
 27692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27697 ;;Total ram usage:        0 bytes
 27698 ;; Hardware stack levels used:    1
 27699 ;; Hardware stack levels required when called:    4
 27700 ;; This function calls:
 27701 ;;		Nothing
 27702 ;; This function is called by:
 27703 ;;		_ui_disp_start_cs600
 27704 ;;		_ui_disp_adj_xfloat_pt
 27705 ;;		_ui_disp_adj_xfixed_pt
 27706 ;;		_ui_disp_adj_xfixed_pt_dp
 27707 ;;		_ui_disp_menu_home
 27708 ;;		_ui_disp_menu_pos_adj
 27709 ;;		_ui_disp_menu_calib_diff_adj
 27710 ;;		_ui_disp_menu_calib_pr_adj
 27711 ;;		_ui_disp_menu_warn_t_adj
 27712 ;;		_ui_disp_menu_work_mode_adj
 27713 ;;		_ui_disp_all_on
 27714 ;;		_ui_disp_all_off
 27715 ;;		_ui_disp_rtc_mm_ss
 27716 ;;		_ui_disp_menu_home_00
 27717 ;;		_ui_disp_menu_home_01
 27718 ;;		_ui_disp_menu_home_02
 27719 ;; This function uses a non-reentrant model
 27720 ;;
 27721                           
 27722                           	psect	text152
 27723  009100                     __ptext152:
 27724                           	opt stack 0
 27725  009100                     _lcd_disp_refresh:
 27726                           	opt stack 25
 27727                           
 27728                           ;lcd.c: 575: LCDDATA0=pLCD[0];
 27729                           
 27730                           ; BSR set to: 0
 27731                           ;incstack = 0
 27732  009100  C100  FFBB         	movff	_pLCD,4027	;volatile
 27733                           
 27734                           ;lcd.c: 576: LCDDATA1=pLCD[1];
 27735  009104  C101  FFBC         	movff	_pLCD+1,4028	;volatile
 27736                           
 27737                           ;lcd.c: 577: LCDDATA2=pLCD[2];
 27738  009108  C102  FFBD         	movff	_pLCD+2,4029	;volatile
 27739                           
 27740                           ;lcd.c: 578: LCDDATA3=pLCD[3];
 27741  00910C  C103  FFBE         	movff	_pLCD+3,4030	;volatile
 27742                           
 27743                           ;lcd.c: 579: LCDDATA4=pLCD[4];
 27744  009110  C104  FFBF         	movff	_pLCD+4,4031	;volatile
 27745                           
 27746                           ;lcd.c: 580: LCDDATA5=pLCD[5];
 27747  009114  C105  FF6B         	movff	_pLCD+5,3947	;volatile
 27748                           
 27749                           ;lcd.c: 581: LCDDATA6=pLCD[6];
 27750  009118  C106  FF6C         	movff	_pLCD+6,3948	;volatile
 27751                           
 27752                           ;lcd.c: 582: LCDDATA7=pLCD[7];
 27753  00911C  C107  FF6D         	movff	_pLCD+7,3949	;volatile
 27754                           
 27755                           ;lcd.c: 583: LCDDATA8=pLCD[8];
 27756  009120  C108  FF6E         	movff	_pLCD+8,3950	;volatile
 27757                           
 27758                           ;lcd.c: 584: LCDDATA9=pLCD[9];
 27759  009124  C109  FF6F         	movff	_pLCD+9,3951	;volatile
 27760                           
 27761                           ;lcd.c: 586: LCDDATA10=pLCD[10];
 27762  009128  C10A  FF70         	movff	_pLCD+10,3952	;volatile
 27763                           
 27764                           ;lcd.c: 587: LCDDATA11=pLCD[11];
 27765  00912C  C10B  FF71         	movff	_pLCD+11,3953	;volatile
 27766                           
 27767                           ;lcd.c: 588: LCDDATA12=pLCD[12];
 27768  009130  C10C  FF72         	movff	_pLCD+12,3954	;volatile
 27769                           
 27770                           ;lcd.c: 589: LCDDATA13=pLCD[13];
 27771  009134  C10D  FF73         	movff	_pLCD+13,3955	;volatile
 27772                           
 27773                           ;lcd.c: 590: LCDDATA14=pLCD[14];
 27774  009138  C10E  FF74         	movff	_pLCD+14,3956	;volatile
 27775                           
 27776                           ;lcd.c: 591: LCDDATA15=pLCD[15];
 27777  00913C  C10F  FF75         	movff	_pLCD+15,3957	;volatile
 27778                           
 27779                           ;lcd.c: 592: LCDDATA16=pLCD[16];
 27780  009140  C110  FF76         	movff	_pLCD+16,3958	;volatile
 27781                           
 27782                           ;lcd.c: 593: LCDDATA17=pLCD[17];
 27783  009144  C111  FF77         	movff	_pLCD+17,3959	;volatile
 27784                           
 27785                           ;lcd.c: 594: LCDDATA18=pLCD[18];
 27786  009148  C112  FF78         	movff	_pLCD+18,3960	;volatile
 27787                           
 27788                           ;lcd.c: 595: LCDDATA19=pLCD[19];
 27789  00914C  C113  FF79         	movff	_pLCD+19,3961	;volatile
 27790                           
 27791                           ;lcd.c: 597: LCDDATA20=pLCD[20];
 27792  009150  C114  FF7A         	movff	_pLCD+20,3962	;volatile
 27793                           
 27794                           ;lcd.c: 598: LCDDATA21=pLCD[21];
 27795  009154  C115  FF7B         	movff	_pLCD+21,3963	;volatile
 27796                           
 27797                           ;lcd.c: 599: LCDDATA22=pLCD[22];
 27798  009158  C116  FF7C         	movff	_pLCD+22,3964	;volatile
 27799                           
 27800                           ;lcd.c: 600: LCDDATA23=pLCD[23];
 27801  00915C  C117  FF7D         	movff	_pLCD+23,3965	;volatile
 27802  009160  0012               	return		;funcret
 27803  009162                     __end_of_lcd_disp_refresh:
 27804                           	opt stack 0
 27805                           tosu	equ	0xFFF
 27806                           tosh	equ	0xFFE
 27807                           tosl	equ	0xFFD
 27808                           pclath	equ	0xFFA
 27809                           tblptru	equ	0xFF8
 27810                           tblptrh	equ	0xFF7
 27811                           tblptrl	equ	0xFF6
 27812                           tablat	equ	0xFF5
 27813                           prodh	equ	0xFF4
 27814                           prodl	equ	0xFF3
 27815                           intcon	equ	0xFF2
 27816                           indf0	equ	0xFEF
 27817                           postinc0	equ	0xFEE
 27818                           fsr0h	equ	0xFEA
 27819                           fsr0l	equ	0xFE9
 27820                           wreg	equ	0xFE8
 27821                           indf1	equ	0xFE7
 27822                           postinc1	equ	0xFE6
 27823                           postdec1	equ	0xFE5
 27824                           plusw1	equ	0xFE3
 27825                           fsr1h	equ	0xFE2
 27826                           fsr1l	equ	0xFE1
 27827                           indf2	equ	0xFDF
 27828                           postinc2	equ	0xFDE
 27829                           postdec2	equ	0xFDD
 27830                           plusw2	equ	0xFDB
 27831                           fsr2h	equ	0xFDA
 27832                           fsr2l	equ	0xFD9
 27833                           status	equ	0xFD8
 27834                           
 27835 ;; *************** function ___x_arrange_str *****************
 27836 ;; Defined at:
 27837 ;;		line 11 in file "src/api/ui.c"
 27838 ;; Parameters:    Size  Location     Type
 27839 ;;  str             2    0[BANK0 ] PTR unsigned char 
 27840 ;;		 -> ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 27841 ;;  len             1    2[BANK0 ] unsigned char 
 27842 ;; Auto vars:     Size  Location     Type
 27843 ;;  i               1   31[COMRAM] unsigned char 
 27844 ;; Return value:  Size  Location     Type
 27845 ;;                  1    wreg      void 
 27846 ;; Registers used:
 27847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27848 ;; Tracked objects:
 27849 ;;		On entry : 0/0
 27850 ;;		On exit  : 0/0
 27851 ;;		Unchanged: 0/0
 27852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27853 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27856 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27857 ;;Total ram usage:        4 bytes
 27858 ;; Hardware stack levels used:    1
 27859 ;; Hardware stack levels required when called:    4
 27860 ;; This function calls:
 27861 ;;		Nothing
 27862 ;; This function is called by:
 27863 ;;		_ui_disp_adj_xfloat_pt
 27864 ;;		_ui_disp_adj_xfixed_pt
 27865 ;;		_ui_disp_adj_xfixed_pt_dp
 27866 ;; This function uses a non-reentrant model
 27867 ;;
 27868                           
 27869                           	psect	text153
 27870  0091C0                     __ptext153:
 27871                           	opt stack 0
 27872  0091C0                     ___x_arrange_str:
 27873                           	opt stack 22
 27874                           
 27875                           ;ui.c: 13: uint8_t i;
 27876                           ;ui.c: 14: for(i=0;i<len;i++){
 27877                           
 27878                           ;incstack = 0
 27879  0091C0  0E00               	movlw	0
 27880  0091C2  6E20               	movwf	___x_arrange_str@i,c
 27881  0091C4  D01A               	goto	l14007
 27882  0091C6                     l14001:
 27883                           
 27884                           ;ui.c: 15: if(str[i]=='\0')str[i]=' ';
 27885  0091C6  5020               	movf	___x_arrange_str@i,w,c
 27886  0091C8  0D01               	mullw	1
 27887  0091CA  50F3               	movf	prodl,w,c
 27888  0091CC  0100               	movlb	0	; () banked
 27889  0091CE  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 27890  0091D0  6ED9               	movwf	fsr2l,c
 27891  0091D2  50F4               	movf	prodh,w,c
 27892  0091D4  0100               	movlb	0	; () banked
 27893  0091D6  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 27894  0091D8  6EDA               	movwf	fsr2h,c
 27895  0091DA  50DF               	movf	indf2,w,c
 27896  0091DC  A4D8               	btfss	status,2,c
 27897  0091DE  D00C               	goto	l14005
 27898                           
 27899                           ; BSR set to: 0
 27900  0091E0  5020               	movf	___x_arrange_str@i,w,c
 27901  0091E2  0D01               	mullw	1
 27902  0091E4  50F3               	movf	prodl,w,c
 27903  0091E6  0100               	movlb	0	; () banked
 27904  0091E8  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 27905  0091EA  6ED9               	movwf	fsr2l,c
 27906  0091EC  50F4               	movf	prodh,w,c
 27907  0091EE  0100               	movlb	0	; () banked
 27908  0091F0  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 27909  0091F2  6EDA               	movwf	fsr2h,c
 27910  0091F4  0E20               	movlw	32
 27911  0091F6  6EDF               	movwf	indf2,c
 27912  0091F8                     l14005:
 27913                           
 27914                           ; BSR set to: 0
 27915  0091F8  2A20               	incf	___x_arrange_str@i,f,c
 27916  0091FA                     l14007:
 27917  0091FA  0100               	movlb	0	; () banked
 27918  0091FC  5162               	movf	___x_arrange_str@len& (0+255),w,b
 27919  0091FE  5C20               	subwf	___x_arrange_str@i,w,c
 27920  009200  A0D8               	btfss	status,0,c
 27921  009202  D7E1               	goto	l14001
 27922                           
 27923                           ; BSR set to: 0
 27924                           ;ui.c: 16: }
 27925                           ;ui.c: 17: str[i]='\0';
 27926                           
 27927                           ; BSR set to: 0
 27928  009204  5020               	movf	___x_arrange_str@i,w,c
 27929  009206  0D01               	mullw	1
 27930  009208  50F3               	movf	prodl,w,c
 27931  00920A  0100               	movlb	0	; () banked
 27932  00920C  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 27933  00920E  6ED9               	movwf	fsr2l,c
 27934  009210  50F4               	movf	prodh,w,c
 27935  009212  0100               	movlb	0	; () banked
 27936  009214  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 27937  009216  6EDA               	movwf	fsr2h,c
 27938  009218  0E00               	movlw	0
 27939  00921A  6EDF               	movwf	indf2,c
 27940                           
 27941                           ; BSR set to: 0
 27942  00921C  0012               	return		;funcret
 27943  00921E                     __end_of___x_arrange_str:
 27944                           	opt stack 0
 27945                           tosu	equ	0xFFF
 27946                           tosh	equ	0xFFE
 27947                           tosl	equ	0xFFD
 27948                           pclath	equ	0xFFA
 27949                           tblptru	equ	0xFF8
 27950                           tblptrh	equ	0xFF7
 27951                           tblptrl	equ	0xFF6
 27952                           tablat	equ	0xFF5
 27953                           prodh	equ	0xFF4
 27954                           prodl	equ	0xFF3
 27955                           intcon	equ	0xFF2
 27956                           indf0	equ	0xFEF
 27957                           postinc0	equ	0xFEE
 27958                           fsr0h	equ	0xFEA
 27959                           fsr0l	equ	0xFE9
 27960                           wreg	equ	0xFE8
 27961                           indf1	equ	0xFE7
 27962                           postinc1	equ	0xFE6
 27963                           postdec1	equ	0xFE5
 27964                           plusw1	equ	0xFE3
 27965                           fsr1h	equ	0xFE2
 27966                           fsr1l	equ	0xFE1
 27967                           indf2	equ	0xFDF
 27968                           postinc2	equ	0xFDE
 27969                           postdec2	equ	0xFDD
 27970                           plusw2	equ	0xFDB
 27971                           fsr2h	equ	0xFDA
 27972                           fsr2l	equ	0xFD9
 27973                           status	equ	0xFD8
 27974                           
 27975 ;; *************** function _lcd_disp_logo *****************
 27976 ;; Defined at:
 27977 ;;		line 379 in file "src/driver/lcd.c"
 27978 ;; Parameters:    Size  Location     Type
 27979 ;;  show            1    wreg     unsigned char 
 27980 ;; Auto vars:     Size  Location     Type
 27981 ;;  show            1   31[COMRAM] unsigned char 
 27982 ;; Return value:  Size  Location     Type
 27983 ;;                  1    wreg      void 
 27984 ;; Registers used:
 27985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27986 ;; Tracked objects:
 27987 ;;		On entry : 0/0
 27988 ;;		On exit  : 0/0
 27989 ;;		Unchanged: 0/0
 27990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27995 ;;Total ram usage:        1 bytes
 27996 ;; Hardware stack levels used:    1
 27997 ;; Hardware stack levels required when called:    6
 27998 ;; This function calls:
 27999 ;;		_lcd_set_com_seg
 28000 ;; This function is called by:
 28001 ;;		_ui_disp_start_cs600
 28002 ;;		_ui_disp_menu_psw_adj
 28003 ;;		_ui_disp_menu_home
 28004 ;;		_ui_disp_menu_density_adj
 28005 ;;		_ui_disp_menu_pos_adj
 28006 ;;		_ui_disp_menu_h_adj
 28007 ;;		_ui_disp_menu_d_adj
 28008 ;;		_ui_disp_menu_bzero_adj
 28009 ;;		_ui_disp_menu_calib_diff_adj
 28010 ;;		_ui_disp_menu_calib_pr_adj
 28011 ;;		_ui_disp_menu_poly_c_adj
 28012 ;;		_ui_disp_menu_warn_t_adj
 28013 ;;		_ui_disp_menu_warn_v_adj
 28014 ;;		_ui_disp_menu_epr_calib_adj
 28015 ;;		_ui_disp_menu_epr_ilp_scale_adj
 28016 ;;		_ui_disp_menu_bar_full_adj
 28017 ;;		_ui_disp_menu_work_mode_adj
 28018 ;; This function uses a non-reentrant model
 28019 ;;
 28020                           
 28021                           	psect	text154
 28022  009E6A                     __ptext154:
 28023                           	opt stack 0
 28024  009E6A                     _lcd_disp_logo:
 28025                           	opt stack 23
 28026                           
 28027                           ; BSR set to: 0
 28028                           ;incstack = 0
 28029                           ;lcd_disp_logo@show stored from wreg
 28030  009E6A  6E20               	movwf	lcd_disp_logo@show,c
 28031                           
 28032                           ;lcd.c: 381: if(show)
 28033  009E6C  5020               	movf	lcd_disp_logo@show,w,c
 28034  009E6E  B4D8               	btfsc	status,2,c
 28035  009E70  D00A               	goto	l14701
 28036                           
 28037                           ;lcd.c: 382: lcd_set_com_seg(2,13,1);
 28038  009E72  0E0D               	movlw	13
 28039  009E74  0100               	movlb	0	; () banked
 28040  009E76  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 28041  009E78  0E01               	movlw	1
 28042  009E7A  0100               	movlb	0	; () banked
 28043  009E7C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 28044  009E7E  0E02               	movlw	2
 28045  009E80  ECDA  F036         	call	_lcd_set_com_seg
 28046  009E84  0012               	return	
 28047  009E86                     l14701:
 28048                           
 28049                           ;lcd.c: 383: else
 28050                           ;lcd.c: 384: lcd_set_com_seg(2,13,0);
 28051  009E86  0E0D               	movlw	13
 28052  009E88  0100               	movlb	0	; () banked
 28053  009E8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 28054  009E8C  0E00               	movlw	0
 28055  009E8E  0100               	movlb	0	; () banked
 28056  009E90  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 28057  009E92  0E02               	movlw	2
 28058  009E94  ECDA  F036         	call	_lcd_set_com_seg
 28059  009E98  0012               	return	
 28060  009E9A                     __end_of_lcd_disp_logo:
 28061                           	opt stack 0
 28062                           tosu	equ	0xFFF
 28063                           tosh	equ	0xFFE
 28064                           tosl	equ	0xFFD
 28065                           pclath	equ	0xFFA
 28066                           tblptru	equ	0xFF8
 28067                           tblptrh	equ	0xFF7
 28068                           tblptrl	equ	0xFF6
 28069                           tablat	equ	0xFF5
 28070                           prodh	equ	0xFF4
 28071                           prodl	equ	0xFF3
 28072                           intcon	equ	0xFF2
 28073                           indf0	equ	0xFEF
 28074                           postinc0	equ	0xFEE
 28075                           fsr0h	equ	0xFEA
 28076                           fsr0l	equ	0xFE9
 28077                           wreg	equ	0xFE8
 28078                           indf1	equ	0xFE7
 28079                           postinc1	equ	0xFE6
 28080                           postdec1	equ	0xFE5
 28081                           plusw1	equ	0xFE3
 28082                           fsr1h	equ	0xFE2
 28083                           fsr1l	equ	0xFE1
 28084                           indf2	equ	0xFDF
 28085                           postinc2	equ	0xFDE
 28086                           postdec2	equ	0xFDD
 28087                           plusw2	equ	0xFDB
 28088                           fsr2h	equ	0xFDA
 28089                           fsr2l	equ	0xFD9
 28090                           status	equ	0xFD8
 28091                           
 28092 ;; *************** function _lcd_set_com_seg *****************
 28093 ;; Defined at:
 28094 ;;		line 33 in file "src/driver/lcd.c"
 28095 ;; Parameters:    Size  Location     Type
 28096 ;;  com             1    wreg     unsigned char 
 28097 ;;  seg             1    8[BANK0 ] unsigned char 
 28098 ;;  show            1    9[BANK0 ] unsigned char 
 28099 ;; Auto vars:     Size  Location     Type
 28100 ;;  com             1   13[BANK0 ] unsigned char 
 28101 ;;  bits            1   15[BANK0 ] unsigned char 
 28102 ;;  offset          1   14[BANK0 ] unsigned char 
 28103 ;; Return value:  Size  Location     Type
 28104 ;;                  1    wreg      void 
 28105 ;; Registers used:
 28106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28107 ;; Tracked objects:
 28108 ;;		On entry : 0/0
 28109 ;;		On exit  : 0/0
 28110 ;;		Unchanged: 0/0
 28111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28113 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28114 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28116 ;;Total ram usage:        8 bytes
 28117 ;; Hardware stack levels used:    1
 28118 ;; Hardware stack levels required when called:    5
 28119 ;; This function calls:
 28120 ;;		___awdiv
 28121 ;; This function is called by:
 28122 ;;		_lcd_disp_level_bar
 28123 ;;		_lcd_disp_chr_loc_0
 28124 ;;		_lcd_disp_dp_loc_0
 28125 ;;		_lcd_disp_chr_loc_1
 28126 ;;		_lcd_disp_dp_loc_1
 28127 ;;		_lcd_disp_chr_loc_2
 28128 ;;		_lcd_disp_dp_loc_2
 28129 ;;		_lcd_disp_chr_loc_3
 28130 ;;		_lcd_disp_chr_loc_4
 28131 ;;		_lcd_disp_dp_loc_4
 28132 ;;		_lcd_disp_chr_loc_5
 28133 ;;		_lcd_disp_dp_loc_5
 28134 ;;		_lcd_disp_chr_loc_6
 28135 ;;		_lcd_disp_dp_loc_6
 28136 ;;		_lcd_disp_chr_loc_7
 28137 ;;		_lcd_disp_logo
 28138 ;;		_lcd_disp_unit_t
 28139 ;;		_lcd_disp_unit_1st_m
 28140 ;;		_lcd_disp_unit_1st_m3
 28141 ;;		_lcd_disp_unit_temperature
 28142 ;;		_lcd_disp_unit_2nd_m
 28143 ;;		_lcd_disp_unit_2nd_m3
 28144 ;;		_lcd_disp_unit_mpa
 28145 ;;		_lcd_disp_battary_bar
 28146 ;;		_lcd_disp_rf_bar
 28147 ;;		_lcd_disp_light_bar
 28148 ;; This function uses a non-reentrant model
 28149 ;;
 28150                           
 28151                           	psect	text155
 28152  006DB4                     __ptext155:
 28153                           	opt stack 0
 28154  006DB4                     _lcd_set_com_seg:
 28155                           	opt stack 21
 28156                           
 28157                           ;incstack = 0
 28158                           ;lcd_set_com_seg@com stored from wreg
 28159  006DB4  0100               	movlb	0	; () banked
 28160  006DB6  6F6D               	movwf	lcd_set_com_seg@com& (0+255),b
 28161                           
 28162                           ;lcd.c: 35: uint8_t offset;
 28163                           ;lcd.c: 36: uint8_t bits;
 28164                           ;lcd.c: 37: if(com>3)return;
 28165  006DB8  0E03               	movlw	3
 28166  006DBA  0100               	movlb	0	; () banked
 28167  006DBC  656D               	cpfsgt	lcd_set_com_seg@com& (0+255),b
 28168  006DBE  D001               	goto	l13131
 28169  006DC0  0012               	return	
 28170  006DC2                     l13131:
 28171                           
 28172                           ; BSR set to: 0
 28173                           ;lcd.c: 38: if(seg>47)return;
 28174  006DC2  0E2F               	movlw	47
 28175  006DC4  0100               	movlb	0	; () banked
 28176  006DC6  6568               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
 28177  006DC8  D001               	goto	l13135
 28178  006DCA  0012               	return	
 28179  006DCC                     l13135:
 28180                           
 28181                           ; BSR set to: 0
 28182                           ;lcd.c: 39: offset=com*6 + seg/8;
 28183  006DCC  C068  F060         	movff	lcd_set_com_seg@seg,___awdiv@dividend
 28184  006DD0  0100               	movlb	0	; () banked
 28185  006DD2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 28186  006DD4  0E00               	movlw	0
 28187  006DD6  0100               	movlb	0	; () banked
 28188  006DD8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 28189  006DDA  0E08               	movlw	8
 28190  006DDC  6F62               	movwf	___awdiv@divisor& (0+255),b
 28191  006DDE  ECC4  F038         	call	___awdiv	;wreg free
 28192  006DE2  0100               	movlb	0	; () banked
 28193  006DE4  516D               	movf	lcd_set_com_seg@com& (0+255),w,b
 28194  006DE6  0D06               	mullw	6
 28195  006DE8  50F3               	movf	prodl,w,c
 28196  006DEA  0100               	movlb	0	; () banked
 28197  006DEC  2560               	addwf	?___awdiv& (0+255),w,b
 28198  006DEE  0100               	movlb	0	; () banked
 28199  006DF0  6F6E               	movwf	lcd_set_com_seg@offset& (0+255),b
 28200                           
 28201                           ; BSR set to: 0
 28202                           ;lcd.c: 40: bits=seg%8;
 28203  006DF2  0100               	movlb	0	; () banked
 28204  006DF4  5168               	movf	lcd_set_com_seg@seg& (0+255),w,b
 28205  006DF6  0B07               	andlw	7
 28206  006DF8  0100               	movlb	0	; () banked
 28207  006DFA  6F6F               	movwf	lcd_set_com_seg@bits& (0+255),b
 28208                           
 28209                           ; BSR set to: 0
 28210                           ;lcd.c: 41: if(show){
 28211  006DFC  0100               	movlb	0	; () banked
 28212  006DFE  5169               	movf	lcd_set_com_seg@show& (0+255),w,b
 28213  006E00  0100               	movlb	0	; () banked
 28214  006E02  B4D8               	btfsc	status,2,c
 28215  006E04  D01B               	goto	l13143
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;lcd.c: 42: pLCD[offset] |= (1<<bits);
 28219  006E06  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 28220  006E0A  0E01               	movlw	1
 28221  006E0C  0100               	movlb	0	; () banked
 28222  006E0E  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 28223  006E10  0100               	movlb	0	; () banked
 28224  006E12  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 28225  006E14  D003               	goto	u11414
 28226  006E16                     u11415:
 28227  006E16  0100               	movlb	0	; () banked
 28228  006E18  90D8               	bcf	status,0,c
 28229  006E1A  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 28230  006E1C                     u11414:
 28231  006E1C  0100               	movlb	0	; () banked
 28232  006E1E  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 28233  006E20  D7FA               	goto	u11415
 28234  006E22  0100               	movlb	0	; () banked
 28235  006E24  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 28236  006E26  0D01               	mullw	1
 28237  006E28  0E00               	movlw	low _pLCD
 28238  006E2A  24F3               	addwf	prodl,w,c
 28239  006E2C  6ED9               	movwf	fsr2l,c
 28240  006E2E  0E01               	movlw	high _pLCD
 28241  006E30  20F4               	addwfc	prodh,w,c
 28242  006E32  6EDA               	movwf	fsr2h,c
 28243  006E34  0100               	movlb	0	; () banked
 28244  006E36  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 28245  006E38  12DF               	iorwf	indf2,f,c
 28246                           
 28247                           ;lcd.c: 43: }else{
 28248  006E3A  0012               	return	
 28249  006E3C                     l13143:
 28250                           
 28251                           ; BSR set to: 0
 28252                           ;lcd.c: 44: pLCD[offset] &= ~(1<<bits);
 28253  006E3C  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 28254  006E40  0E01               	movlw	1
 28255  006E42  0100               	movlb	0	; () banked
 28256  006E44  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 28257  006E46  0100               	movlb	0	; () banked
 28258  006E48  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 28259  006E4A  D003               	goto	u11424
 28260  006E4C                     u11425:
 28261  006E4C  0100               	movlb	0	; () banked
 28262  006E4E  90D8               	bcf	status,0,c
 28263  006E50  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 28264  006E52                     u11424:
 28265  006E52  0100               	movlb	0	; () banked
 28266  006E54  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 28267  006E56  D7FA               	goto	u11425
 28268  006E58  0100               	movlb	0	; () banked
 28269  006E5A  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 28270  006E5C  0AFF               	xorlw	255
 28271  006E5E  0100               	movlb	0	; () banked
 28272  006E60  6F6C               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
 28273  006E62  0100               	movlb	0	; () banked
 28274  006E64  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 28275  006E66  0D01               	mullw	1
 28276  006E68  0E00               	movlw	low _pLCD
 28277  006E6A  24F3               	addwf	prodl,w,c
 28278  006E6C  6ED9               	movwf	fsr2l,c
 28279  006E6E  0E01               	movlw	high _pLCD
 28280  006E70  20F4               	addwfc	prodh,w,c
 28281  006E72  6EDA               	movwf	fsr2h,c
 28282  006E74  0100               	movlb	0	; () banked
 28283  006E76  516C               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
 28284  006E78  16DF               	andwf	indf2,f,c
 28285  006E7A  0012               	return	
 28286  006E7C                     __end_of_lcd_set_com_seg:
 28287                           	opt stack 0
 28288                           tosu	equ	0xFFF
 28289                           tosh	equ	0xFFE
 28290                           tosl	equ	0xFFD
 28291                           pclath	equ	0xFFA
 28292                           tblptru	equ	0xFF8
 28293                           tblptrh	equ	0xFF7
 28294                           tblptrl	equ	0xFF6
 28295                           tablat	equ	0xFF5
 28296                           prodh	equ	0xFF4
 28297                           prodl	equ	0xFF3
 28298                           intcon	equ	0xFF2
 28299                           indf0	equ	0xFEF
 28300                           postinc0	equ	0xFEE
 28301                           fsr0h	equ	0xFEA
 28302                           fsr0l	equ	0xFE9
 28303                           wreg	equ	0xFE8
 28304                           indf1	equ	0xFE7
 28305                           postinc1	equ	0xFE6
 28306                           postdec1	equ	0xFE5
 28307                           plusw1	equ	0xFE3
 28308                           fsr1h	equ	0xFE2
 28309                           fsr1l	equ	0xFE1
 28310                           indf2	equ	0xFDF
 28311                           postinc2	equ	0xFDE
 28312                           postdec2	equ	0xFDD
 28313                           plusw2	equ	0xFDB
 28314                           fsr2h	equ	0xFDA
 28315                           fsr2l	equ	0xFD9
 28316                           status	equ	0xFD8
 28317                           
 28318 ;; *************** function ___awdiv *****************
 28319 ;; Defined at:
 28320 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 28321 ;; Parameters:    Size  Location     Type
 28322 ;;  dividend        2    0[BANK0 ] int 
 28323 ;;  divisor         2    2[BANK0 ] int 
 28324 ;; Auto vars:     Size  Location     Type
 28325 ;;  quotient        2    6[BANK0 ] int 
 28326 ;;  sign            1    5[BANK0 ] unsigned char 
 28327 ;;  counter         1    4[BANK0 ] unsigned char 
 28328 ;; Return value:  Size  Location     Type
 28329 ;;                  2    0[BANK0 ] int 
 28330 ;; Registers used:
 28331 ;;		wreg, status,2, status,0
 28332 ;; Tracked objects:
 28333 ;;		On entry : 0/0
 28334 ;;		On exit  : 0/0
 28335 ;;		Unchanged: 0/0
 28336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28337 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28338 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28340 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28341 ;;Total ram usage:        8 bytes
 28342 ;; Hardware stack levels used:    1
 28343 ;; Hardware stack levels required when called:    4
 28344 ;; This function calls:
 28345 ;;		Nothing
 28346 ;; This function is called by:
 28347 ;;		_m_int16_2_str_4
 28348 ;;		_lcd_set_com_seg
 28349 ;; This function uses a non-reentrant model
 28350 ;;
 28351                           
 28352                           	psect	text156
 28353  007188                     __ptext156:
 28354                           	opt stack 0
 28355  007188                     ___awdiv:
 28356                           	opt stack 21
 28357                           
 28358                           ; BSR set to: 0
 28359                           ;incstack = 0
 28360  007188  0E00               	movlw	0
 28361  00718A  0100               	movlb	0	; () banked
 28362  00718C  6F65               	movwf	___awdiv@sign& (0+255),b
 28363                           
 28364                           ; BSR set to: 0
 28365  00718E  0100               	movlb	0	; () banked
 28366  007190  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28367  007192  D008               	goto	l13085
 28368                           
 28369                           ; BSR set to: 0
 28370  007194  0100               	movlb	0	; () banked
 28371  007196  6D62               	negf	___awdiv@divisor& (0+255),b
 28372  007198  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28373  00719A  B0D8               	btfsc	status,0,c
 28374  00719C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28375                           
 28376                           ; BSR set to: 0
 28377  00719E  0E01               	movlw	1
 28378  0071A0  0100               	movlb	0	; () banked
 28379  0071A2  6F65               	movwf	___awdiv@sign& (0+255),b
 28380  0071A4                     l13085:
 28381                           
 28382                           ; BSR set to: 0
 28383  0071A4  0100               	movlb	0	; () banked
 28384  0071A6  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28385  0071A8  D008               	goto	l13091
 28386                           
 28387                           ; BSR set to: 0
 28388  0071AA  0100               	movlb	0	; () banked
 28389  0071AC  6D60               	negf	___awdiv@dividend& (0+255),b
 28390  0071AE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28391  0071B0  B0D8               	btfsc	status,0,c
 28392  0071B2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28393                           
 28394                           ; BSR set to: 0
 28395  0071B4  0E01               	movlw	1
 28396  0071B6  0100               	movlb	0	; () banked
 28397  0071B8  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 28398  0071BA                     l13091:
 28399                           
 28400                           ; BSR set to: 0
 28401  0071BA  0E00               	movlw	0
 28402  0071BC  0100               	movlb	0	; () banked
 28403  0071BE  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 28404  0071C0  0E00               	movlw	0
 28405  0071C2  6F66               	movwf	___awdiv@quotient& (0+255),b
 28406                           
 28407                           ; BSR set to: 0
 28408  0071C4  0100               	movlb	0	; () banked
 28409  0071C6  5162               	movf	___awdiv@divisor& (0+255),w,b
 28410  0071C8  0100               	movlb	0	; () banked
 28411  0071CA  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28412  0071CC  B4D8               	btfsc	status,2,c
 28413  0071CE  D02C               	goto	l13113
 28414                           
 28415                           ; BSR set to: 0
 28416  0071D0  0E01               	movlw	1
 28417  0071D2  0100               	movlb	0	; () banked
 28418  0071D4  6F64               	movwf	___awdiv@counter& (0+255),b
 28419  0071D6  D006               	goto	l13099
 28420  0071D8                     l13097:
 28421                           
 28422                           ; BSR set to: 0
 28423  0071D8  0100               	movlb	0	; () banked
 28424  0071DA  90D8               	bcf	status,0,c
 28425  0071DC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 28426  0071DE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28427  0071E0  0100               	movlb	0	; () banked
 28428  0071E2  2B64               	incf	___awdiv@counter& (0+255),f,b
 28429  0071E4                     l13099:
 28430                           
 28431                           ; BSR set to: 0
 28432  0071E4  0100               	movlb	0	; () banked
 28433  0071E6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28434  0071E8  D7F7               	goto	l13097
 28435  0071EA                     l13101:
 28436                           
 28437                           ; BSR set to: 0
 28438  0071EA  0100               	movlb	0	; () banked
 28439  0071EC  90D8               	bcf	status,0,c
 28440  0071EE  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 28441  0071F0  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28442                           
 28443                           ; BSR set to: 0
 28444  0071F2  0100               	movlb	0	; () banked
 28445  0071F4  5162               	movf	___awdiv@divisor& (0+255),w,b
 28446  0071F6  0100               	movlb	0	; () banked
 28447  0071F8  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 28448  0071FA  0100               	movlb	0	; () banked
 28449  0071FC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28450  0071FE  0100               	movlb	0	; () banked
 28451  007200  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28452  007202  A0D8               	btfss	status,0,c
 28453  007204  D00A               	goto	l13109
 28454                           
 28455                           ; BSR set to: 0
 28456  007206  0100               	movlb	0	; () banked
 28457  007208  5162               	movf	___awdiv@divisor& (0+255),w,b
 28458  00720A  0100               	movlb	0	; () banked
 28459  00720C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 28460  00720E  0100               	movlb	0	; () banked
 28461  007210  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28462  007212  0100               	movlb	0	; () banked
 28463  007214  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28464                           
 28465                           ; BSR set to: 0
 28466  007216  0100               	movlb	0	; () banked
 28467  007218  8166               	bsf	___awdiv@quotient& (0+255),0,b
 28468  00721A                     l13109:
 28469                           
 28470                           ; BSR set to: 0
 28471  00721A  0100               	movlb	0	; () banked
 28472  00721C  90D8               	bcf	status,0,c
 28473  00721E  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28474  007220  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 28475                           
 28476                           ; BSR set to: 0
 28477  007222  0100               	movlb	0	; () banked
 28478  007224  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 28479  007226  D7E1               	goto	l13101
 28480  007228                     l13113:
 28481                           
 28482                           ; BSR set to: 0
 28483  007228  0100               	movlb	0	; () banked
 28484  00722A  5165               	movf	___awdiv@sign& (0+255),w,b
 28485  00722C  0100               	movlb	0	; () banked
 28486  00722E  B4D8               	btfsc	status,2,c
 28487  007230  D005               	goto	l13117
 28488                           
 28489                           ; BSR set to: 0
 28490  007232  0100               	movlb	0	; () banked
 28491  007234  6D66               	negf	___awdiv@quotient& (0+255),b
 28492  007236  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28493  007238  B0D8               	btfsc	status,0,c
 28494  00723A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28495  00723C                     l13117:
 28496                           
 28497                           ; BSR set to: 0
 28498  00723C  C066  F060         	movff	___awdiv@quotient,?___awdiv
 28499  007240  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 28500  007244  0012               	return	
 28501  007246                     __end_of___awdiv:
 28502                           	opt stack 0
 28503                           tosu	equ	0xFFF
 28504                           tosh	equ	0xFFE
 28505                           tosl	equ	0xFFD
 28506                           pclath	equ	0xFFA
 28507                           tblptru	equ	0xFF8
 28508                           tblptrh	equ	0xFF7
 28509                           tblptrl	equ	0xFF6
 28510                           tablat	equ	0xFF5
 28511                           prodh	equ	0xFF4
 28512                           prodl	equ	0xFF3
 28513                           intcon	equ	0xFF2
 28514                           indf0	equ	0xFEF
 28515                           postinc0	equ	0xFEE
 28516                           fsr0h	equ	0xFEA
 28517                           fsr0l	equ	0xFE9
 28518                           wreg	equ	0xFE8
 28519                           indf1	equ	0xFE7
 28520                           postinc1	equ	0xFE6
 28521                           postdec1	equ	0xFE5
 28522                           plusw1	equ	0xFE3
 28523                           fsr1h	equ	0xFE2
 28524                           fsr1l	equ	0xFE1
 28525                           indf2	equ	0xFDF
 28526                           postinc2	equ	0xFDE
 28527                           postdec2	equ	0xFDD
 28528                           plusw2	equ	0xFDB
 28529                           fsr2h	equ	0xFDA
 28530                           fsr2l	equ	0xFD9
 28531                           status	equ	0xFD8
 28532                           
 28533 ;; *************** function _lcd_disp_all *****************
 28534 ;; Defined at:
 28535 ;;		line 603 in file "src/driver/lcd.c"
 28536 ;; Parameters:    Size  Location     Type
 28537 ;;  x               1    wreg     unsigned char 
 28538 ;; Auto vars:     Size  Location     Type
 28539 ;;  x               1    0[BANK0 ] unsigned char 
 28540 ;;  i               1    1[BANK0 ] unsigned char 
 28541 ;; Return value:  Size  Location     Type
 28542 ;;                  1    wreg      void 
 28543 ;; Registers used:
 28544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28545 ;; Tracked objects:
 28546 ;;		On entry : 0/0
 28547 ;;		On exit  : 0/0
 28548 ;;		Unchanged: 0/0
 28549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28553 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28554 ;;Total ram usage:        2 bytes
 28555 ;; Hardware stack levels used:    1
 28556 ;; Hardware stack levels required when called:    4
 28557 ;; This function calls:
 28558 ;;		Nothing
 28559 ;; This function is called by:
 28560 ;;		_ui_disp_start_cs600
 28561 ;;		_ui_disp_menu_psw_adj
 28562 ;;		_ui_disp_menu_home
 28563 ;;		_ui_disp_menu_density_adj
 28564 ;;		_ui_disp_menu_pos_adj
 28565 ;;		_ui_disp_menu_h_adj
 28566 ;;		_ui_disp_menu_d_adj
 28567 ;;		_ui_disp_menu_bzero_adj
 28568 ;;		_ui_disp_menu_calib_diff_adj
 28569 ;;		_ui_disp_menu_calib_pr_adj
 28570 ;;		_ui_disp_menu_poly_c_adj
 28571 ;;		_ui_disp_menu_warn_t_adj
 28572 ;;		_ui_disp_menu_warn_v_adj
 28573 ;;		_ui_disp_menu_epr_calib_adj
 28574 ;;		_ui_disp_menu_epr_ilp_scale_adj
 28575 ;;		_ui_disp_menu_bar_full_adj
 28576 ;;		_ui_disp_menu_work_mode_adj
 28577 ;;		_lcd_config
 28578 ;;		_ui_disp_all_on
 28579 ;;		_ui_disp_all_off
 28580 ;; This function uses a non-reentrant model
 28581 ;;
 28582                           
 28583                           	psect	text157
 28584  009E9A                     __ptext157:
 28585                           	opt stack 0
 28586  009E9A                     _lcd_disp_all:
 28587                           	opt stack 25
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;incstack = 0
 28591                           ;lcd_disp_all@x stored from wreg
 28592  009E9A  0100               	movlb	0	; () banked
 28593  009E9C  6F60               	movwf	lcd_disp_all@x& (0+255),b
 28594                           
 28595                           ;lcd.c: 605: uint8_t i;
 28596                           ;lcd.c: 606: for(i=0;i<24;i++)
 28597  009E9E  0E00               	movlw	0
 28598  009EA0  0100               	movlb	0	; () banked
 28599  009EA2  6F61               	movwf	lcd_disp_all@i& (0+255),b
 28600  009EA4                     l14675:
 28601                           
 28602                           ; BSR set to: 0
 28603  009EA4  0E17               	movlw	23
 28604  009EA6  0100               	movlb	0	; () banked
 28605  009EA8  6561               	cpfsgt	lcd_disp_all@i& (0+255),b
 28606  009EAA  D001               	goto	l14679
 28607  009EAC  0012               	return	
 28608  009EAE                     l14679:
 28609                           
 28610                           ; BSR set to: 0
 28611                           ;lcd.c: 607: {
 28612                           ;lcd.c: 608: pLCD[i]=x;
 28613  009EAE  0100               	movlb	0	; () banked
 28614  009EB0  5161               	movf	lcd_disp_all@i& (0+255),w,b
 28615  009EB2  0D01               	mullw	1
 28616  009EB4  0E00               	movlw	low _pLCD
 28617  009EB6  24F3               	addwf	prodl,w,c
 28618  009EB8  6ED9               	movwf	fsr2l,c
 28619  009EBA  0E01               	movlw	high _pLCD
 28620  009EBC  20F4               	addwfc	prodh,w,c
 28621  009EBE  6EDA               	movwf	fsr2h,c
 28622  009EC0  C060  FFDF         	movff	lcd_disp_all@x,indf2
 28623                           
 28624                           ; BSR set to: 0
 28625  009EC4  0100               	movlb	0	; () banked
 28626  009EC6  2B61               	incf	lcd_disp_all@i& (0+255),f,b
 28627  009EC8  D7ED               	goto	l14675
 28628  009ECA                     __end_of_lcd_disp_all:
 28629                           	opt stack 0
 28630                           tosu	equ	0xFFF
 28631                           tosh	equ	0xFFE
 28632                           tosl	equ	0xFFD
 28633                           pclath	equ	0xFFA
 28634                           tblptru	equ	0xFF8
 28635                           tblptrh	equ	0xFF7
 28636                           tblptrl	equ	0xFF6
 28637                           tablat	equ	0xFF5
 28638                           prodh	equ	0xFF4
 28639                           prodl	equ	0xFF3
 28640                           intcon	equ	0xFF2
 28641                           indf0	equ	0xFEF
 28642                           postinc0	equ	0xFEE
 28643                           fsr0h	equ	0xFEA
 28644                           fsr0l	equ	0xFE9
 28645                           wreg	equ	0xFE8
 28646                           indf1	equ	0xFE7
 28647                           postinc1	equ	0xFE6
 28648                           postdec1	equ	0xFE5
 28649                           plusw1	equ	0xFE3
 28650                           fsr1h	equ	0xFE2
 28651                           fsr1l	equ	0xFE1
 28652                           indf2	equ	0xFDF
 28653                           postinc2	equ	0xFDE
 28654                           postdec2	equ	0xFDD
 28655                           plusw2	equ	0xFDB
 28656                           fsr2h	equ	0xFDA
 28657                           fsr2l	equ	0xFD9
 28658                           status	equ	0xFD8
 28659                           
 28660 ;; *************** function _sample_function_enable_fi_in_rtc *****************
 28661 ;; Defined at:
 28662 ;;		line 162 in file "src/api/sample.c"
 28663 ;; Parameters:    Size  Location     Type
 28664 ;;		None
 28665 ;; Auto vars:     Size  Location     Type
 28666 ;;  ret             1  134[BANK0 ] unsigned char 
 28667 ;; Return value:  Size  Location     Type
 28668 ;;                  1    wreg      void 
 28669 ;; Registers used:
 28670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28671 ;; Tracked objects:
 28672 ;;		On entry : 0/0
 28673 ;;		On exit  : 0/0
 28674 ;;		Unchanged: 0/0
 28675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28680 ;;Total ram usage:        1 bytes
 28681 ;; Hardware stack levels used:    1
 28682 ;; Hardware stack levels required when called:    9
 28683 ;; This function calls:
 28684 ;;		_sample_all_power_off
 28685 ;;		_sample_all_power_on
 28686 ;;		_sample_call_cal_diff_pr
 28687 ;;		_sample_call_cal_in_soc
 28688 ;;		_sample_call_cal_pr
 28689 ;;		_sample_variable_init
 28690 ;; This function is called by:
 28691 ;;		_event_process_rtc
 28692 ;; This function uses a non-reentrant model
 28693 ;;
 28694                           
 28695                           	psect	text158
 28696  006A8E                     __ptext158:
 28697                           	opt stack 0
 28698  006A8E                     _sample_function_enable_fi_in_rtc:
 28699                           	opt stack 20
 28700                           
 28701                           ;sample.c: 164: uint8_t ret=0;
 28702                           
 28703                           ; BSR set to: 0
 28704                           ;incstack = 0
 28705  006A8E  0E00               	movlw	0
 28706  006A90  0100               	movlb	0	; () banked
 28707  006A92  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;sample.c: 166: if(dwm==WORK_MODE){
 28711  006A94  0100               	movlb	0	; () banked
 28712  006A96  05FD               	decf	_dwm& (0+255),w,b	;volatile
 28713  006A98  A4D8               	btfss	status,2,c
 28714  006A9A  D057               	goto	l17183
 28715                           
 28716                           ; BSR set to: 0
 28717                           ;sample.c: 167: if(sensorSimpleEn){
 28718  006A9C  0100               	movlb	0	; () banked
 28719  006A9E  51F2               	movf	_sensorSimpleEn& (0+255),w,b	;volatile
 28720  006AA0  B4D8               	btfsc	status,2,c
 28721  006AA2  D015               	goto	l17151
 28722                           
 28723                           ; BSR set to: 0
 28724                           ;sample.c: 168: if(diffPrChipSampleFinish && PrChipSampleFinish && inSocAdcSampleFinish)
      +                          {
 28725  006AA4  0100               	movlb	0	; () banked
 28726  006AA6  51F9               	movf	_diffPrChipSampleFinish& (0+255),w,b
 28727  006AA8  B4D8               	btfsc	status,2,c
 28728  006AAA  0012               	return	
 28729                           
 28730                           ; BSR set to: 0
 28731  006AAC  0100               	movlb	0	; () banked
 28732  006AAE  51F6               	movf	_PrChipSampleFinish& (0+255),w,b
 28733  006AB0  B4D8               	btfsc	status,2,c
 28734  006AB2  0012               	return	
 28735                           
 28736                           ; BSR set to: 0
 28737  006AB4  0100               	movlb	0	; () banked
 28738  006AB6  51F3               	movf	_inSocAdcSampleFinish& (0+255),w,b
 28739  006AB8  B4D8               	btfsc	status,2,c
 28740  006ABA  0012               	return	
 28741                           
 28742                           ; BSR set to: 0
 28743                           ;sample.c: 170: sensorSimpleEn=0;
 28744  006ABC  0E00               	movlw	0
 28745  006ABE  0100               	movlb	0	; () banked
 28746  006AC0  6FF2               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 28747                           
 28748                           ; BSR set to: 0
 28749                           ;sample.c: 171: sample_all_power_off();
 28750  006AC2  ECCD  F051         	call	_sample_all_power_off	;wreg free
 28751                           
 28752                           ;sample.c: 172: sensorSimpleTsLong=0;
 28753  006AC6  0E00               	movlw	0
 28754  006AC8  0100               	movlb	0	; () banked
 28755  006ACA  6FF1               	movwf	_sensorSimpleTsLong& (0+255),b	;volatile
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;sample.c: 173: }
 28759                           ;sample.c: 174: }else{
 28760  006ACC  0012               	return	
 28761  006ACE                     l17151:
 28762                           
 28763                           ; BSR set to: 0
 28764                           ;sample.c: 175: if(diffPrChipSampleFinish || PrChipSampleFinish || inSocAdcSampleFinish)
      +                          {
 28765  006ACE  0100               	movlb	0	; () banked
 28766  006AD0  51F9               	movf	_diffPrChipSampleFinish& (0+255),w,b
 28767  006AD2  A4D8               	btfss	status,2,c
 28768  006AD4  D008               	goto	l17157
 28769                           
 28770                           ; BSR set to: 0
 28771  006AD6  0100               	movlb	0	; () banked
 28772  006AD8  51F6               	movf	_PrChipSampleFinish& (0+255),w,b
 28773  006ADA  A4D8               	btfss	status,2,c
 28774  006ADC  D004               	goto	l17157
 28775                           
 28776                           ; BSR set to: 0
 28777  006ADE  0100               	movlb	0	; () banked
 28778  006AE0  51F3               	movf	_inSocAdcSampleFinish& (0+255),w,b
 28779  006AE2  B4D8               	btfsc	status,2,c
 28780  006AE4  D023               	goto	l17173
 28781  006AE6                     l17157:
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;sample.c: 177: if(diffPrChipSampleFinish)ret=sample_call_cal_diff_pr();
 28785  006AE6  0100               	movlb	0	; () banked
 28786  006AE8  51F9               	movf	_diffPrChipSampleFinish& (0+255),w,b
 28787  006AEA  B4D8               	btfsc	status,2,c
 28788  006AEC  D004               	goto	l17161
 28789                           
 28790                           ; BSR set to: 0
 28791  006AEE  ECE3  F050         	call	_sample_call_cal_diff_pr	;wreg free
 28792  006AF2  0100               	movlb	0	; () banked
 28793  006AF4  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28794  006AF6                     l17161:
 28795                           
 28796                           ; BSR set to: 0
 28797                           ;sample.c: 178: if(!ret && PrChipSampleFinish)ret=sample_call_cal_pr();
 28798  006AF6  0100               	movlb	0	; () banked
 28799  006AF8  51E6               	movf	sample_function_enable_fi_in_rtc@ret& (0+255),w,b
 28800  006AFA  0100               	movlb	0	; () banked
 28801  006AFC  A4D8               	btfss	status,2,c
 28802  006AFE  D008               	goto	l17167
 28803                           
 28804                           ; BSR set to: 0
 28805  006B00  0100               	movlb	0	; () banked
 28806  006B02  51F6               	movf	_PrChipSampleFinish& (0+255),w,b
 28807  006B04  B4D8               	btfsc	status,2,c
 28808  006B06  D004               	goto	l17167
 28809                           
 28810                           ; BSR set to: 0
 28811  006B08  ECD4  F050         	call	_sample_call_cal_pr	;wreg free
 28812  006B0C  0100               	movlb	0	; () banked
 28813  006B0E  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28814  006B10                     l17167:
 28815                           
 28816                           ; BSR set to: 0
 28817                           ;sample.c: 179: if(!ret && inSocAdcSampleFinish)ret=sample_call_cal_in_soc();
 28818  006B10  0100               	movlb	0	; () banked
 28819  006B12  51E6               	movf	sample_function_enable_fi_in_rtc@ret& (0+255),w,b
 28820  006B14  0100               	movlb	0	; () banked
 28821  006B16  A4D8               	btfss	status,2,c
 28822  006B18  0012               	return	
 28823                           
 28824                           ; BSR set to: 0
 28825  006B1A  0100               	movlb	0	; () banked
 28826  006B1C  51F3               	movf	_inSocAdcSampleFinish& (0+255),w,b
 28827  006B1E  B4D8               	btfsc	status,2,c
 28828  006B20  0012               	return	
 28829                           
 28830                           ; BSR set to: 0
 28831  006B22  EC92  F050         	call	_sample_call_cal_in_soc	;wreg free
 28832  006B26  0100               	movlb	0	; () banked
 28833  006B28  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28834                           
 28835                           ; BSR set to: 0
 28836                           ;sample.c: 180: }else if(sensorSimpleTsLong>=100*2){
 28837  006B2A  0012               	return	
 28838  006B2C                     l17173:
 28839                           
 28840                           ; BSR set to: 0
 28841  006B2C  0EC7               	movlw	199
 28842  006B2E  0100               	movlb	0	; () banked
 28843  006B30  65F1               	cpfsgt	_sensorSimpleTsLong& (0+255),b	;volatile
 28844  006B32  D008               	goto	l17181
 28845                           
 28846                           ; BSR set to: 0
 28847                           ;sample.c: 182: sensorSimpleEn=1;
 28848  006B34  0E01               	movlw	1
 28849  006B36  0100               	movlb	0	; () banked
 28850  006B38  6FF2               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 28851                           
 28852                           ; BSR set to: 0
 28853                           ;sample.c: 183: sample_all_power_on();
 28854  006B3A  ECA3  F051         	call	_sample_all_power_on	;wreg free
 28855                           
 28856                           ;sample.c: 184: sample_variable_init();
 28857  006B3E  EC76  F04A         	call	_sample_variable_init	;wreg free
 28858                           
 28859                           ;sample.c: 185: }else{
 28860  006B42  0012               	return	
 28861  006B44                     l17181:
 28862                           
 28863                           ;sample.c: 187: sensorSimpleTsLong++;
 28864  006B44  0100               	movlb	0	; () banked
 28865  006B46  2BF1               	incf	_sensorSimpleTsLong& (0+255),f,b	;volatile
 28866                           
 28867                           ; BSR set to: 0
 28868                           ;sample.c: 188: }
 28869                           ;sample.c: 189: }
 28870                           ;sample.c: 190: }else{
 28871                           
 28872                           ; BSR set to: 0
 28873                           
 28874                           ; BSR set to: 0
 28875  006B48  0012               	return	
 28876  006B4A                     l17183:
 28877                           
 28878                           ; BSR set to: 0
 28879                           ;sample.c: 191: sensorSimpleEn=1;
 28880  006B4A  0E01               	movlw	1
 28881  006B4C  0100               	movlb	0	; () banked
 28882  006B4E  6FF2               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 28883                           
 28884                           ; BSR set to: 0
 28885                           ;sample.c: 192: sample_all_power_on();
 28886  006B50  ECA3  F051         	call	_sample_all_power_on	;wreg free
 28887                           
 28888                           ;sample.c: 193: sensorSimpleTsLong=0;
 28889  006B54  0E00               	movlw	0
 28890  006B56  0100               	movlb	0	; () banked
 28891  006B58  6FF1               	movwf	_sensorSimpleTsLong& (0+255),b	;volatile
 28892  006B5A  0012               	return	
 28893  006B5C                     __end_of_sample_function_enable_fi_in_rtc:
 28894                           	opt stack 0
 28895                           tosu	equ	0xFFF
 28896                           tosh	equ	0xFFE
 28897                           tosl	equ	0xFFD
 28898                           pclath	equ	0xFFA
 28899                           tblptru	equ	0xFF8
 28900                           tblptrh	equ	0xFF7
 28901                           tblptrl	equ	0xFF6
 28902                           tablat	equ	0xFF5
 28903                           prodh	equ	0xFF4
 28904                           prodl	equ	0xFF3
 28905                           intcon	equ	0xFF2
 28906                           indf0	equ	0xFEF
 28907                           postinc0	equ	0xFEE
 28908                           fsr0h	equ	0xFEA
 28909                           fsr0l	equ	0xFE9
 28910                           wreg	equ	0xFE8
 28911                           indf1	equ	0xFE7
 28912                           postinc1	equ	0xFE6
 28913                           postdec1	equ	0xFE5
 28914                           plusw1	equ	0xFE3
 28915                           fsr1h	equ	0xFE2
 28916                           fsr1l	equ	0xFE1
 28917                           indf2	equ	0xFDF
 28918                           postinc2	equ	0xFDE
 28919                           postdec2	equ	0xFDD
 28920                           plusw2	equ	0xFDB
 28921                           fsr2h	equ	0xFDA
 28922                           fsr2l	equ	0xFD9
 28923                           status	equ	0xFD8
 28924                           
 28925 ;; *************** function _sample_variable_init *****************
 28926 ;; Defined at:
 28927 ;;		line 104 in file "src/api/sample.c"
 28928 ;; Parameters:    Size  Location     Type
 28929 ;;		None
 28930 ;; Auto vars:     Size  Location     Type
 28931 ;;		None
 28932 ;; Return value:  Size  Location     Type
 28933 ;;                  1    wreg      void 
 28934 ;; Registers used:
 28935 ;;		wreg, status,2
 28936 ;; Tracked objects:
 28937 ;;		On entry : 0/0
 28938 ;;		On exit  : 0/0
 28939 ;;		Unchanged: 0/0
 28940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28945 ;;Total ram usage:        0 bytes
 28946 ;; Hardware stack levels used:    1
 28947 ;; Hardware stack levels required when called:    4
 28948 ;; This function calls:
 28949 ;;		Nothing
 28950 ;; This function is called by:
 28951 ;;		_sample_function_enable_fi_in_rtc
 28952 ;; This function uses a non-reentrant model
 28953 ;;
 28954                           
 28955                           	psect	text159
 28956  0094EC                     __ptext159:
 28957                           	opt stack 0
 28958  0094EC                     _sample_variable_init:
 28959                           	opt stack 24
 28960                           
 28961                           ;sample.c: 106: diffPrChipSampleTimer=0;
 28962                           
 28963                           ;incstack = 0
 28964  0094EC  0E00               	movlw	0
 28965  0094EE  0101               	movlb	1	; () banked
 28966  0094F0  6F61               	movwf	(_diffPrChipSampleTimer+1)& (0+255),b	;volatile
 28967  0094F2  0E00               	movlw	0
 28968  0094F4  6F60               	movwf	_diffPrChipSampleTimer& (0+255),b	;volatile
 28969                           
 28970                           ;sample.c: 107: diffPrChipSampleCount=0;
 28971  0094F6  0E00               	movlw	0
 28972  0094F8  0100               	movlb	0	; () banked
 28973  0094FA  6FFB               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 28974                           
 28975                           ;sample.c: 108: diffPrChipSampCh=0;
 28976  0094FC  0E00               	movlw	0
 28977  0094FE  0100               	movlb	0	; () banked
 28978  009500  6FFA               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 28979                           
 28980                           ;sample.c: 110: PrChipSampleTimer=0;
 28981  009502  0E00               	movlw	0
 28982  009504  0101               	movlb	1	; () banked
 28983  009506  6F5F               	movwf	(_PrChipSampleTimer+1)& (0+255),b	;volatile
 28984  009508  0E00               	movlw	0
 28985  00950A  6F5E               	movwf	_PrChipSampleTimer& (0+255),b	;volatile
 28986                           
 28987                           ;sample.c: 111: prChipSampleCh=0;
 28988  00950C  0E00               	movlw	0
 28989  00950E  0100               	movlb	0	; () banked
 28990  009510  6FF8               	movwf	_prChipSampleCh& (0+255),b	;volatile
 28991                           
 28992                           ;sample.c: 112: prChipSampleCount=0;
 28993  009512  0E00               	movlw	0
 28994  009514  0100               	movlb	0	; () banked
 28995  009516  6FF7               	movwf	_prChipSampleCount& (0+255),b	;volatile
 28996                           
 28997                           ;sample.c: 114: inSocAdcSampleTimer=0;
 28998  009518  0E00               	movlw	0
 28999  00951A  0101               	movlb	1	; () banked
 29000  00951C  6F5D               	movwf	(_inSocAdcSampleTimer+1)& (0+255),b	;volatile
 29001  00951E  0E00               	movlw	0
 29002  009520  6F5C               	movwf	_inSocAdcSampleTimer& (0+255),b	;volatile
 29003                           
 29004                           ;sample.c: 115: inSocAdcSampleCount=0;
 29005  009522  0E00               	movlw	0
 29006  009524  0100               	movlb	0	; () banked
 29007  009526  6FF5               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 29008                           
 29009                           ;sample.c: 116: inSocAdcSampleCh=0;
 29010  009528  0E00               	movlw	0
 29011  00952A  0100               	movlb	0	; () banked
 29012  00952C  6FF4               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 29013                           
 29014                           ;sample.c: 118: diffPrChipSampleFinish=0;
 29015  00952E  0E00               	movlw	0
 29016  009530  0100               	movlb	0	; () banked
 29017  009532  6FF9               	movwf	_diffPrChipSampleFinish& (0+255),b
 29018                           
 29019                           ;sample.c: 119: PrChipSampleFinish=0;
 29020  009534  0E00               	movlw	0
 29021  009536  0100               	movlb	0	; () banked
 29022  009538  6FF6               	movwf	_PrChipSampleFinish& (0+255),b
 29023                           
 29024                           ;sample.c: 120: inSocAdcSampleFinish=0;
 29025  00953A  0E00               	movlw	0
 29026  00953C  0100               	movlb	0	; () banked
 29027  00953E  6FF3               	movwf	_inSocAdcSampleFinish& (0+255),b
 29028                           
 29029                           ; BSR set to: 0
 29030  009540  0012               	return		;funcret
 29031  009542                     __end_of_sample_variable_init:
 29032                           	opt stack 0
 29033                           tosu	equ	0xFFF
 29034                           tosh	equ	0xFFE
 29035                           tosl	equ	0xFFD
 29036                           pclath	equ	0xFFA
 29037                           tblptru	equ	0xFF8
 29038                           tblptrh	equ	0xFF7
 29039                           tblptrl	equ	0xFF6
 29040                           tablat	equ	0xFF5
 29041                           prodh	equ	0xFF4
 29042                           prodl	equ	0xFF3
 29043                           intcon	equ	0xFF2
 29044                           indf0	equ	0xFEF
 29045                           postinc0	equ	0xFEE
 29046                           fsr0h	equ	0xFEA
 29047                           fsr0l	equ	0xFE9
 29048                           wreg	equ	0xFE8
 29049                           indf1	equ	0xFE7
 29050                           postinc1	equ	0xFE6
 29051                           postdec1	equ	0xFE5
 29052                           plusw1	equ	0xFE3
 29053                           fsr1h	equ	0xFE2
 29054                           fsr1l	equ	0xFE1
 29055                           indf2	equ	0xFDF
 29056                           postinc2	equ	0xFDE
 29057                           postdec2	equ	0xFDD
 29058                           plusw2	equ	0xFDB
 29059                           fsr2h	equ	0xFDA
 29060                           fsr2l	equ	0xFD9
 29061                           status	equ	0xFD8
 29062                           
 29063 ;; *************** function _sample_call_cal_pr *****************
 29064 ;; Defined at:
 29065 ;;		line 131 in file "src/api/sample.c"
 29066 ;; Parameters:    Size  Location     Type
 29067 ;;		None
 29068 ;; Auto vars:     Size  Location     Type
 29069 ;;		None
 29070 ;; Return value:  Size  Location     Type
 29071 ;;                  1    wreg      unsigned char 
 29072 ;; Registers used:
 29073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29074 ;; Tracked objects:
 29075 ;;		On entry : 0/0
 29076 ;;		On exit  : 0/0
 29077 ;;		Unchanged: 0/0
 29078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29083 ;;Total ram usage:        0 bytes
 29084 ;; Hardware stack levels used:    1
 29085 ;; Hardware stack levels required when called:    7
 29086 ;; This function calls:
 29087 ;;		_cal_press
 29088 ;;		_cal_pt100_temperature_ex
 29089 ;; This function is called by:
 29090 ;;		_sample_call_in_ticker
 29091 ;;		_sample_function_enable_fi_in_rtc
 29092 ;; This function uses a non-reentrant model
 29093 ;;
 29094                           
 29095                           	psect	text160
 29096  00A1A8                     __ptext160:
 29097                           	opt stack 0
 29098  00A1A8                     _sample_call_cal_pr:
 29099                           	opt stack 21
 29100                           
 29101                           ;sample.c: 133: if(!PrChipSampleFinish)return 0;
 29102                           
 29103                           ; BSR set to: 0
 29104                           ;incstack = 0
 29105  00A1A8  0100               	movlb	0	; () banked
 29106  00A1AA  51F6               	movf	_PrChipSampleFinish& (0+255),w,b
 29107  00A1AC  A4D8               	btfss	status,2,c
 29108  00A1AE  D002               	goto	l16555
 29109                           
 29110                           ; BSR set to: 0
 29111  00A1B0  0E00               	movlw	0
 29112                           
 29113                           ; BSR set to: 0
 29114  00A1B2  0012               	return	
 29115  00A1B4                     l16555:
 29116                           
 29117                           ; BSR set to: 0
 29118                           ;sample.c: 134: cal_press();
 29119  00A1B4  EC8E  F042         	call	_cal_press	;wreg free
 29120                           
 29121                           ;sample.c: 135: cal_pt100_temperature_ex();
 29122  00A1B8  EC8F  F051         	call	_cal_pt100_temperature_ex	;wreg free
 29123                           
 29124                           ;sample.c: 136: PrChipSampleFinish=0;
 29125  00A1BC  0E00               	movlw	0
 29126  00A1BE  0100               	movlb	0	; () banked
 29127  00A1C0  6FF6               	movwf	_PrChipSampleFinish& (0+255),b
 29128                           
 29129                           ; BSR set to: 0
 29130                           ;sample.c: 137: return 1;
 29131  00A1C2  0E01               	movlw	1
 29132  00A1C4  0012               	return	
 29133  00A1C6                     __end_of_sample_call_cal_pr:
 29134                           	opt stack 0
 29135                           tosu	equ	0xFFF
 29136                           tosh	equ	0xFFE
 29137                           tosl	equ	0xFFD
 29138                           pclath	equ	0xFFA
 29139                           tblptru	equ	0xFF8
 29140                           tblptrh	equ	0xFF7
 29141                           tblptrl	equ	0xFF6
 29142                           tablat	equ	0xFF5
 29143                           prodh	equ	0xFF4
 29144                           prodl	equ	0xFF3
 29145                           intcon	equ	0xFF2
 29146                           indf0	equ	0xFEF
 29147                           postinc0	equ	0xFEE
 29148                           fsr0h	equ	0xFEA
 29149                           fsr0l	equ	0xFE9
 29150                           wreg	equ	0xFE8
 29151                           indf1	equ	0xFE7
 29152                           postinc1	equ	0xFE6
 29153                           postdec1	equ	0xFE5
 29154                           plusw1	equ	0xFE3
 29155                           fsr1h	equ	0xFE2
 29156                           fsr1l	equ	0xFE1
 29157                           indf2	equ	0xFDF
 29158                           postinc2	equ	0xFDE
 29159                           postdec2	equ	0xFDD
 29160                           plusw2	equ	0xFDB
 29161                           fsr2h	equ	0xFDA
 29162                           fsr2l	equ	0xFD9
 29163                           status	equ	0xFD8
 29164                           
 29165 ;; *************** function _cal_pt100_temperature_ex *****************
 29166 ;; Defined at:
 29167 ;;		line 617 in file "src/api/data.c"
 29168 ;; Parameters:    Size  Location     Type
 29169 ;;		None
 29170 ;; Auto vars:     Size  Location     Type
 29171 ;;		None
 29172 ;; Return value:  Size  Location     Type
 29173 ;;                  1    wreg      void 
 29174 ;; Registers used:
 29175 ;;		wreg, status,2
 29176 ;; Tracked objects:
 29177 ;;		On entry : 0/0
 29178 ;;		On exit  : 0/0
 29179 ;;		Unchanged: 0/0
 29180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29185 ;;Total ram usage:        0 bytes
 29186 ;; Hardware stack levels used:    1
 29187 ;; Hardware stack levels required when called:    4
 29188 ;; This function calls:
 29189 ;;		Nothing
 29190 ;; This function is called by:
 29191 ;;		_sample_call_cal_pr
 29192 ;; This function uses a non-reentrant model
 29193 ;;
 29194                           
 29195                           	psect	text161
 29196  00A31E                     __ptext161:
 29197                           	opt stack 0
 29198  00A31E                     _cal_pt100_temperature_ex:
 29199                           	opt stack 23
 29200                           
 29201                           ;data.c: 638: rtTemperatureEx= 0;
 29202                           
 29203                           ; BSR set to: 0
 29204                           ;incstack = 0
 29205  00A31E  0E00               	movlw	0
 29206  00A320  0101               	movlb	1	; () banked
 29207  00A322  6F46               	movwf	_rtTemperatureEx& (0+255),b	;volatile
 29208  00A324  0E00               	movlw	0
 29209  00A326  6F47               	movwf	(_rtTemperatureEx+1)& (0+255),b	;volatile
 29210  00A328  0E00               	movlw	0
 29211  00A32A  6F48               	movwf	(_rtTemperatureEx+2)& (0+255),b	;volatile
 29212  00A32C  0E00               	movlw	0
 29213  00A32E  6F49               	movwf	(_rtTemperatureEx+3)& (0+255),b	;volatile
 29214                           
 29215                           ; BSR set to: 1
 29216  00A330  0012               	return		;funcret
 29217  00A332                     __end_of_cal_pt100_temperature_ex:
 29218                           	opt stack 0
 29219                           tosu	equ	0xFFF
 29220                           tosh	equ	0xFFE
 29221                           tosl	equ	0xFFD
 29222                           pclath	equ	0xFFA
 29223                           tblptru	equ	0xFF8
 29224                           tblptrh	equ	0xFF7
 29225                           tblptrl	equ	0xFF6
 29226                           tablat	equ	0xFF5
 29227                           prodh	equ	0xFF4
 29228                           prodl	equ	0xFF3
 29229                           intcon	equ	0xFF2
 29230                           indf0	equ	0xFEF
 29231                           postinc0	equ	0xFEE
 29232                           fsr0h	equ	0xFEA
 29233                           fsr0l	equ	0xFE9
 29234                           wreg	equ	0xFE8
 29235                           indf1	equ	0xFE7
 29236                           postinc1	equ	0xFE6
 29237                           postdec1	equ	0xFE5
 29238                           plusw1	equ	0xFE3
 29239                           fsr1h	equ	0xFE2
 29240                           fsr1l	equ	0xFE1
 29241                           indf2	equ	0xFDF
 29242                           postinc2	equ	0xFDE
 29243                           postdec2	equ	0xFDD
 29244                           plusw2	equ	0xFDB
 29245                           fsr2h	equ	0xFDA
 29246                           fsr2l	equ	0xFD9
 29247                           status	equ	0xFD8
 29248                           
 29249 ;; *************** function _cal_press *****************
 29250 ;; Defined at:
 29251 ;;		line 571 in file "src/api/data.c"
 29252 ;; Parameters:    Size  Location     Type
 29253 ;;		None
 29254 ;; Auto vars:     Size  Location     Type
 29255 ;;  xin             8   61[BANK0 ] struct .
 29256 ;;  tabrow          2   59[BANK0 ] PTR struct .
 29257 ;;		 -> prCalibTabDef.prCalibRow(156), prCalibTabDef(162), 
 29258 ;;  ret             1   58[BANK0 ] unsigned char 
 29259 ;; Return value:  Size  Location     Type
 29260 ;;                  1    wreg      unsigned char 
 29261 ;; Registers used:
 29262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29263 ;; Tracked objects:
 29264 ;;		On entry : 0/0
 29265 ;;		On exit  : 0/0
 29266 ;;		Unchanged: 0/0
 29267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29269 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29271 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29272 ;;Total ram usage:       11 bytes
 29273 ;; Hardware stack levels used:    1
 29274 ;; Hardware stack levels required when called:    6
 29275 ;; This function calls:
 29276 ;;		_m_interp1_cal_p_v
 29277 ;; This function is called by:
 29278 ;;		_sample_call_cal_pr
 29279 ;; This function uses a non-reentrant model
 29280 ;;
 29281                           
 29282                           	psect	text162
 29283  00851C                     __ptext162:
 29284                           	opt stack 0
 29285  00851C                     _cal_press:
 29286                           	opt stack 21
 29287                           
 29288                           ;data.c: 573: uint8_t ret;
 29289                           ;data.c: 574: st_prData xin={0};
 29290                           
 29291                           ; BSR set to: 1
 29292                           ;incstack = 0
 29293  00851C  EE21  F023         	lfsr	2,cal_press@F7856
 29294  008520  EE10  F09D         	lfsr	1,cal_press@xin
 29295  008524  0E07               	movlw	7
 29296  008526                     u13991:
 29297  008526  CFDB FFE3          	movff	plusw2,plusw1
 29298  00852A  06E8               	decf	wreg,f,c
 29299  00852C  E2FC               	bc	u13991
 29300                           
 29301                           ;data.c: 575: xin.pValue=0;
 29302  00852E  0E00               	movlw	0
 29303  008530  0100               	movlb	0	; () banked
 29304  008532  6F9D               	movwf	cal_press@xin& (0+255),b
 29305  008534  0E00               	movlw	0
 29306  008536  6F9E               	movwf	(cal_press@xin+1)& (0+255),b
 29307  008538  0E00               	movlw	0
 29308  00853A  6F9F               	movwf	(cal_press@xin+2)& (0+255),b
 29309  00853C  0E00               	movlw	0
 29310  00853E  6FA0               	movwf	(cal_press@xin+3)& (0+255),b
 29311                           
 29312                           ; BSR set to: 0
 29313                           ;data.c: 576: xin.pAdcValue=adc_pressure;
 29314  008540  C16C  F0A1         	movff	_adc_pressure,cal_press@xin+4	;volatile
 29315  008544  C16D  F0A2         	movff	_adc_pressure+1,cal_press@xin+5	;volatile
 29316                           
 29317                           ; BSR set to: 0
 29318                           ;data.c: 577: xin.tAdcValue=0;
 29319  008548  0E00               	movlw	0
 29320  00854A  0100               	movlb	0	; () banked
 29321  00854C  6FA4               	movwf	(cal_press@xin+7)& (0+255),b
 29322  00854E  0E00               	movlw	0
 29323  008550  6FA3               	movwf	(cal_press@xin+6)& (0+255),b
 29324                           
 29325                           ; BSR set to: 0
 29326                           ;data.c: 578: st_prCalibRowDef* tabrow;
 29327                           ;data.c: 579: tabrow= &prCalibTabDef.prCalibRow[0];
 29328  008552  0E04               	movlw	low (_prCalibTabDef+4)
 29329  008554  0100               	movlb	0	; () banked
 29330  008556  6F9B               	movwf	cal_press@tabrow& (0+255),b
 29331  008558  0E04               	movlw	high (_prCalibTabDef+4)
 29332  00855A  0100               	movlb	0	; () banked
 29333  00855C  6F9C               	movwf	(cal_press@tabrow+1)& (0+255),b
 29334                           
 29335                           ; BSR set to: 0
 29336                           ;data.c: 580: ret=m_interp1_cal_p_v(tabrow,&xin,(0));
 29337  00855E  C09B  F07A         	movff	cal_press@tabrow,m_interp1_cal_p_v@tabrow
 29338  008562  C09C  F07B         	movff	cal_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 29339  008566  0E9D               	movlw	low cal_press@xin
 29340  008568  0100               	movlb	0	; () banked
 29341  00856A  6F7C               	movwf	m_interp1_cal_p_v@xin& (0+255),b
 29342  00856C  0E00               	movlw	high cal_press@xin
 29343  00856E  0100               	movlb	0	; () banked
 29344  008570  6F7D               	movwf	(m_interp1_cal_p_v@xin+1)& (0+255),b
 29345  008572  0E00               	movlw	0
 29346  008574  0100               	movlb	0	; () banked
 29347  008576  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 29348  008578  0E00               	movlw	0
 29349  00857A  0100               	movlb	0	; () banked
 29350  00857C  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 29351  00857E  ECC2  F003         	call	_m_interp1_cal_p_v	;wreg free
 29352  008582  0100               	movlb	0	; () banked
 29353  008584  6F9A               	movwf	cal_press@ret& (0+255),b
 29354                           
 29355                           ; BSR set to: 0
 29356                           ;data.c: 581: rtPressure=xin.pValue;
 29357  008586  C09D  F0E7         	movff	cal_press@xin,_rtPressure	;volatile
 29358  00858A  C09E  F0E8         	movff	cal_press@xin+1,_rtPressure+1	;volatile
 29359  00858E  C09F  F0E9         	movff	cal_press@xin+2,_rtPressure+2	;volatile
 29360  008592  C0A0  F0EA         	movff	cal_press@xin+3,_rtPressure+3	;volatile
 29361  008596  0012               	return	
 29362  008598                     __end_of_cal_press:
 29363                           	opt stack 0
 29364                           tosu	equ	0xFFF
 29365                           tosh	equ	0xFFE
 29366                           tosl	equ	0xFFD
 29367                           pclath	equ	0xFFA
 29368                           tblptru	equ	0xFF8
 29369                           tblptrh	equ	0xFF7
 29370                           tblptrl	equ	0xFF6
 29371                           tablat	equ	0xFF5
 29372                           prodh	equ	0xFF4
 29373                           prodl	equ	0xFF3
 29374                           intcon	equ	0xFF2
 29375                           indf0	equ	0xFEF
 29376                           postinc0	equ	0xFEE
 29377                           fsr0h	equ	0xFEA
 29378                           fsr0l	equ	0xFE9
 29379                           wreg	equ	0xFE8
 29380                           indf1	equ	0xFE7
 29381                           postinc1	equ	0xFE6
 29382                           postdec1	equ	0xFE5
 29383                           plusw1	equ	0xFE3
 29384                           fsr1h	equ	0xFE2
 29385                           fsr1l	equ	0xFE1
 29386                           indf2	equ	0xFDF
 29387                           postinc2	equ	0xFDE
 29388                           postdec2	equ	0xFDD
 29389                           plusw2	equ	0xFDB
 29390                           fsr2h	equ	0xFDA
 29391                           fsr2l	equ	0xFD9
 29392                           status	equ	0xFD8
 29393                           
 29394 ;; *************** function _sample_call_cal_in_soc *****************
 29395 ;; Defined at:
 29396 ;;		line 139 in file "src/api/sample.c"
 29397 ;; Parameters:    Size  Location     Type
 29398 ;;		None
 29399 ;; Auto vars:     Size  Location     Type
 29400 ;;		None
 29401 ;; Return value:  Size  Location     Type
 29402 ;;                  1    wreg      unsigned char 
 29403 ;; Registers used:
 29404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29405 ;; Tracked objects:
 29406 ;;		On entry : 0/0
 29407 ;;		On exit  : 0/0
 29408 ;;		Unchanged: 0/0
 29409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29414 ;;Total ram usage:        0 bytes
 29415 ;; Hardware stack levels used:    1
 29416 ;; Hardware stack levels required when called:    5
 29417 ;; This function calls:
 29418 ;;		_cal_additional_pressute
 29419 ;; This function is called by:
 29420 ;;		_sample_call_in_ticker
 29421 ;;		_sample_function_enable_fi_in_rtc
 29422 ;; This function uses a non-reentrant model
 29423 ;;
 29424                           
 29425                           	psect	text163
 29426  00A124                     __ptext163:
 29427                           	opt stack 0
 29428  00A124                     _sample_call_cal_in_soc:
 29429                           	opt stack 23
 29430                           
 29431                           ;sample.c: 141: if(!inSocAdcSampleFinish)return 0;
 29432                           
 29433                           ; BSR set to: 0
 29434                           ;incstack = 0
 29435  00A124  0100               	movlb	0	; () banked
 29436  00A126  51F3               	movf	_inSocAdcSampleFinish& (0+255),w,b
 29437  00A128  A4D8               	btfss	status,2,c
 29438  00A12A  D002               	goto	l16571
 29439                           
 29440                           ; BSR set to: 0
 29441  00A12C  0E00               	movlw	0
 29442                           
 29443                           ; BSR set to: 0
 29444  00A12E  0012               	return	
 29445  00A130                     l16571:
 29446                           
 29447                           ; BSR set to: 0
 29448                           ;sample.c: 142: cal_additional_pressute(0);
 29449  00A130  0E00               	movlw	0
 29450  00A132  EC00  F051         	call	_cal_additional_pressute
 29451                           
 29452                           ;sample.c: 143: cal_additional_pressute(1);
 29453  00A136  0E01               	movlw	1
 29454  00A138  EC00  F051         	call	_cal_additional_pressute
 29455                           
 29456                           ;sample.c: 144: inSocAdcSampleFinish=0;
 29457  00A13C  0E00               	movlw	0
 29458  00A13E  0100               	movlb	0	; () banked
 29459  00A140  6FF3               	movwf	_inSocAdcSampleFinish& (0+255),b
 29460                           
 29461                           ; BSR set to: 0
 29462                           ;sample.c: 145: return 1;
 29463  00A142  0E01               	movlw	1
 29464  00A144  0012               	return	
 29465  00A146                     __end_of_sample_call_cal_in_soc:
 29466                           	opt stack 0
 29467                           tosu	equ	0xFFF
 29468                           tosh	equ	0xFFE
 29469                           tosl	equ	0xFFD
 29470                           pclath	equ	0xFFA
 29471                           tblptru	equ	0xFF8
 29472                           tblptrh	equ	0xFF7
 29473                           tblptrl	equ	0xFF6
 29474                           tablat	equ	0xFF5
 29475                           prodh	equ	0xFF4
 29476                           prodl	equ	0xFF3
 29477                           intcon	equ	0xFF2
 29478                           indf0	equ	0xFEF
 29479                           postinc0	equ	0xFEE
 29480                           fsr0h	equ	0xFEA
 29481                           fsr0l	equ	0xFE9
 29482                           wreg	equ	0xFE8
 29483                           indf1	equ	0xFE7
 29484                           postinc1	equ	0xFE6
 29485                           postdec1	equ	0xFE5
 29486                           plusw1	equ	0xFE3
 29487                           fsr1h	equ	0xFE2
 29488                           fsr1l	equ	0xFE1
 29489                           indf2	equ	0xFDF
 29490                           postinc2	equ	0xFDE
 29491                           postdec2	equ	0xFDD
 29492                           plusw2	equ	0xFDB
 29493                           fsr2h	equ	0xFDA
 29494                           fsr2l	equ	0xFD9
 29495                           status	equ	0xFD8
 29496                           
 29497 ;; *************** function _cal_additional_pressute *****************
 29498 ;; Defined at:
 29499 ;;		line 641 in file "src/api/data.c"
 29500 ;; Parameters:    Size  Location     Type
 29501 ;;  index           1    wreg     unsigned char 
 29502 ;; Auto vars:     Size  Location     Type
 29503 ;;  index           1   31[COMRAM] unsigned char 
 29504 ;; Return value:  Size  Location     Type
 29505 ;;                  1    wreg      void 
 29506 ;; Registers used:
 29507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29508 ;; Tracked objects:
 29509 ;;		On entry : 0/0
 29510 ;;		On exit  : 0/0
 29511 ;;		Unchanged: 0/0
 29512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29517 ;;Total ram usage:        1 bytes
 29518 ;; Hardware stack levels used:    1
 29519 ;; Hardware stack levels required when called:    4
 29520 ;; This function calls:
 29521 ;;		Nothing
 29522 ;; This function is called by:
 29523 ;;		_sample_call_cal_in_soc
 29524 ;; This function uses a non-reentrant model
 29525 ;;
 29526                           
 29527                           	psect	text164
 29528  00A200                     __ptext164:
 29529                           	opt stack 0
 29530  00A200                     _cal_additional_pressute:
 29531                           	opt stack 23
 29532                           
 29533                           ; BSR set to: 0
 29534                           ;incstack = 0
 29535                           ;cal_additional_pressute@index stored from wreg
 29536  00A200  6E20               	movwf	cal_additional_pressute@index,c
 29537                           
 29538                           ;data.c: 656: rtExPressure[index]=0;
 29539  00A202  5020               	movf	cal_additional_pressute@index,w,c
 29540  00A204  0D04               	mullw	4
 29541  00A206  0E2B               	movlw	low _rtExPressure
 29542  00A208  24F3               	addwf	prodl,w,c
 29543  00A20A  6ED9               	movwf	fsr2l,c
 29544  00A20C  0E01               	movlw	high _rtExPressure
 29545  00A20E  20F4               	addwfc	prodh,w,c
 29546  00A210  6EDA               	movwf	fsr2h,c
 29547  00A212  6ADE               	clrf	postinc2,c
 29548  00A214  6ADE               	clrf	postinc2,c
 29549  00A216  6ADE               	clrf	postinc2,c
 29550  00A218  6ADD               	clrf	postdec2,c
 29551  00A21A  0012               	return		;funcret
 29552  00A21C                     __end_of_cal_additional_pressute:
 29553                           	opt stack 0
 29554                           tosu	equ	0xFFF
 29555                           tosh	equ	0xFFE
 29556                           tosl	equ	0xFFD
 29557                           pclath	equ	0xFFA
 29558                           tblptru	equ	0xFF8
 29559                           tblptrh	equ	0xFF7
 29560                           tblptrl	equ	0xFF6
 29561                           tablat	equ	0xFF5
 29562                           prodh	equ	0xFF4
 29563                           prodl	equ	0xFF3
 29564                           intcon	equ	0xFF2
 29565                           indf0	equ	0xFEF
 29566                           postinc0	equ	0xFEE
 29567                           fsr0h	equ	0xFEA
 29568                           fsr0l	equ	0xFE9
 29569                           wreg	equ	0xFE8
 29570                           indf1	equ	0xFE7
 29571                           postinc1	equ	0xFE6
 29572                           postdec1	equ	0xFE5
 29573                           plusw1	equ	0xFE3
 29574                           fsr1h	equ	0xFE2
 29575                           fsr1l	equ	0xFE1
 29576                           indf2	equ	0xFDF
 29577                           postinc2	equ	0xFDE
 29578                           postdec2	equ	0xFDD
 29579                           plusw2	equ	0xFDB
 29580                           fsr2h	equ	0xFDA
 29581                           fsr2l	equ	0xFD9
 29582                           status	equ	0xFD8
 29583                           
 29584 ;; *************** function _sample_call_cal_diff_pr *****************
 29585 ;; Defined at:
 29586 ;;		line 123 in file "src/api/sample.c"
 29587 ;; Parameters:    Size  Location     Type
 29588 ;;		None
 29589 ;; Auto vars:     Size  Location     Type
 29590 ;;		None
 29591 ;; Return value:  Size  Location     Type
 29592 ;;                  1    wreg      unsigned char 
 29593 ;; Registers used:
 29594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29595 ;; Tracked objects:
 29596 ;;		On entry : 0/0
 29597 ;;		On exit  : 0/0
 29598 ;;		Unchanged: 0/0
 29599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29604 ;;Total ram usage:        0 bytes
 29605 ;; Hardware stack levels used:    1
 29606 ;; Hardware stack levels required when called:    8
 29607 ;; This function calls:
 29608 ;;		_cal_diff_press
 29609 ;;		_cal_pt100_temperature_in
 29610 ;; This function is called by:
 29611 ;;		_sample_call_in_ticker
 29612 ;;		_sample_function_enable_fi_in_rtc
 29613 ;; This function uses a non-reentrant model
 29614 ;;
 29615                           
 29616                           	psect	text165
 29617  00A1C6                     __ptext165:
 29618                           	opt stack 0
 29619  00A1C6                     _sample_call_cal_diff_pr:
 29620                           	opt stack 20
 29621                           
 29622                           ;sample.c: 125: if(!diffPrChipSampleFinish)return 0;
 29623                           
 29624                           ;incstack = 0
 29625  00A1C6  0100               	movlb	0	; () banked
 29626  00A1C8  51F9               	movf	_diffPrChipSampleFinish& (0+255),w,b
 29627  00A1CA  A4D8               	btfss	status,2,c
 29628  00A1CC  D002               	goto	l16539
 29629                           
 29630                           ; BSR set to: 0
 29631  00A1CE  0E00               	movlw	0
 29632                           
 29633                           ; BSR set to: 0
 29634  00A1D0  0012               	return	
 29635  00A1D2                     l16539:
 29636                           
 29637                           ; BSR set to: 0
 29638                           ;sample.c: 126: cal_diff_press();
 29639  00A1D2  ECD1  F02C         	call	_cal_diff_press	;wreg free
 29640                           
 29641                           ;sample.c: 127: cal_pt100_temperature_in();
 29642  00A1D6  EC99  F051         	call	_cal_pt100_temperature_in	;wreg free
 29643                           
 29644                           ;sample.c: 128: diffPrChipSampleFinish=0;
 29645  00A1DA  0E00               	movlw	0
 29646  00A1DC  0100               	movlb	0	; () banked
 29647  00A1DE  6FF9               	movwf	_diffPrChipSampleFinish& (0+255),b
 29648                           
 29649                           ; BSR set to: 0
 29650                           ;sample.c: 129: return 1;
 29651  00A1E0  0E01               	movlw	1
 29652  00A1E2  0012               	return	
 29653  00A1E4                     __end_of_sample_call_cal_diff_pr:
 29654                           	opt stack 0
 29655                           tosu	equ	0xFFF
 29656                           tosh	equ	0xFFE
 29657                           tosl	equ	0xFFD
 29658                           pclath	equ	0xFFA
 29659                           tblptru	equ	0xFF8
 29660                           tblptrh	equ	0xFF7
 29661                           tblptrl	equ	0xFF6
 29662                           tablat	equ	0xFF5
 29663                           prodh	equ	0xFF4
 29664                           prodl	equ	0xFF3
 29665                           intcon	equ	0xFF2
 29666                           indf0	equ	0xFEF
 29667                           postinc0	equ	0xFEE
 29668                           fsr0h	equ	0xFEA
 29669                           fsr0l	equ	0xFE9
 29670                           wreg	equ	0xFE8
 29671                           indf1	equ	0xFE7
 29672                           postinc1	equ	0xFE6
 29673                           postdec1	equ	0xFE5
 29674                           plusw1	equ	0xFE3
 29675                           fsr1h	equ	0xFE2
 29676                           fsr1l	equ	0xFE1
 29677                           indf2	equ	0xFDF
 29678                           postinc2	equ	0xFDE
 29679                           postdec2	equ	0xFDD
 29680                           plusw2	equ	0xFDB
 29681                           fsr2h	equ	0xFDA
 29682                           fsr2l	equ	0xFD9
 29683                           status	equ	0xFD8
 29684                           
 29685 ;; *************** function _cal_pt100_temperature_in *****************
 29686 ;; Defined at:
 29687 ;;		line 593 in file "src/api/data.c"
 29688 ;; Parameters:    Size  Location     Type
 29689 ;;		None
 29690 ;; Auto vars:     Size  Location     Type
 29691 ;;		None
 29692 ;; Return value:  Size  Location     Type
 29693 ;;                  1    wreg      void 
 29694 ;; Registers used:
 29695 ;;		wreg, status,2
 29696 ;; Tracked objects:
 29697 ;;		On entry : 0/0
 29698 ;;		On exit  : 0/0
 29699 ;;		Unchanged: 0/0
 29700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29705 ;;Total ram usage:        0 bytes
 29706 ;; Hardware stack levels used:    1
 29707 ;; Hardware stack levels required when called:    4
 29708 ;; This function calls:
 29709 ;;		Nothing
 29710 ;; This function is called by:
 29711 ;;		_sample_call_cal_diff_pr
 29712 ;; This function uses a non-reentrant model
 29713 ;;
 29714                           
 29715                           	psect	text166
 29716  00A332                     __ptext166:
 29717                           	opt stack 0
 29718  00A332                     _cal_pt100_temperature_in:
 29719                           	opt stack 23
 29720                           
 29721                           ;data.c: 614: rtTemperatureIn= 0;
 29722                           
 29723                           ; BSR set to: 0
 29724                           ;incstack = 0
 29725  00A332  0E00               	movlw	0
 29726  00A334  0101               	movlb	1	; () banked
 29727  00A336  6F4A               	movwf	_rtTemperatureIn& (0+255),b	;volatile
 29728  00A338  0E00               	movlw	0
 29729  00A33A  6F4B               	movwf	(_rtTemperatureIn+1)& (0+255),b	;volatile
 29730  00A33C  0E00               	movlw	0
 29731  00A33E  6F4C               	movwf	(_rtTemperatureIn+2)& (0+255),b	;volatile
 29732  00A340  0E00               	movlw	0
 29733  00A342  6F4D               	movwf	(_rtTemperatureIn+3)& (0+255),b	;volatile
 29734                           
 29735                           ; BSR set to: 1
 29736  00A344  0012               	return		;funcret
 29737  00A346                     __end_of_cal_pt100_temperature_in:
 29738                           	opt stack 0
 29739                           tosu	equ	0xFFF
 29740                           tosh	equ	0xFFE
 29741                           tosl	equ	0xFFD
 29742                           pclath	equ	0xFFA
 29743                           tblptru	equ	0xFF8
 29744                           tblptrh	equ	0xFF7
 29745                           tblptrl	equ	0xFF6
 29746                           tablat	equ	0xFF5
 29747                           prodh	equ	0xFF4
 29748                           prodl	equ	0xFF3
 29749                           intcon	equ	0xFF2
 29750                           indf0	equ	0xFEF
 29751                           postinc0	equ	0xFEE
 29752                           fsr0h	equ	0xFEA
 29753                           fsr0l	equ	0xFE9
 29754                           wreg	equ	0xFE8
 29755                           indf1	equ	0xFE7
 29756                           postinc1	equ	0xFE6
 29757                           postdec1	equ	0xFE5
 29758                           plusw1	equ	0xFE3
 29759                           fsr1h	equ	0xFE2
 29760                           fsr1l	equ	0xFE1
 29761                           indf2	equ	0xFDF
 29762                           postinc2	equ	0xFDE
 29763                           postdec2	equ	0xFDD
 29764                           plusw2	equ	0xFDB
 29765                           fsr2h	equ	0xFDA
 29766                           fsr2l	equ	0xFD9
 29767                           status	equ	0xFD8
 29768                           
 29769 ;; *************** function _cal_diff_press *****************
 29770 ;; Defined at:
 29771 ;;		line 535 in file "src/api/data.c"
 29772 ;; Parameters:    Size  Location     Type
 29773 ;;		None
 29774 ;; Auto vars:     Size  Location     Type
 29775 ;;  xin             2   22[BANK3 ] PTR struct .
 29776 ;;		 -> x_prDiffData(8), 
 29777 ;;  tabrow          2   20[BANK3 ] PTR struct .
 29778 ;;		 -> diff_prCalibTabDef.prCalibRow(156), diff_prCalibTabDef(162), 
 29779 ;;  i               1   24[BANK3 ] unsigned char 
 29780 ;; Return value:  Size  Location     Type
 29781 ;;                  1    wreg      unsigned char 
 29782 ;; Registers used:
 29783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29784 ;; Tracked objects:
 29785 ;;		On entry : 0/0
 29786 ;;		On exit  : 0/0
 29787 ;;		Unchanged: 0/0
 29788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29790 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29792 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29793 ;;Total ram usage:        5 bytes
 29794 ;; Hardware stack levels used:    1
 29795 ;; Hardware stack levels required when called:    7
 29796 ;; This function calls:
 29797 ;;		_cal_diff_hight_level
 29798 ;;		_cal_diff_hight_to_vol_h
 29799 ;;		_cal_diff_hight_to_vol_v
 29800 ;;		_cal_diff_p_to_h
 29801 ;;		_m_interp1_cal_p_t
 29802 ;;		_m_interp1_cal_p_v
 29803 ;;		_m_mem_set
 29804 ;; This function is called by:
 29805 ;;		_sample_call_cal_diff_pr
 29806 ;; This function uses a non-reentrant model
 29807 ;;
 29808                           
 29809                           	psect	text167
 29810  0059A2                     __ptext167:
 29811                           	opt stack 0
 29812  0059A2                     _cal_diff_press:
 29813                           	opt stack 20
 29814                           
 29815                           ;data.c: 537: st_prData* xin= &x_prDiffData;
 29816                           
 29817                           ; BSR set to: 1
 29818                           ;incstack = 0
 29819  0059A2  0EE6               	movlw	low _x_prDiffData
 29820  0059A4  0103               	movlb	3	; () banked
 29821  0059A6  6FE0               	movwf	cal_diff_press@xin& (0+255),b
 29822  0059A8  0E01               	movlw	high _x_prDiffData
 29823  0059AA  0103               	movlb	3	; () banked
 29824  0059AC  6FE1               	movwf	(cal_diff_press@xin+1)& (0+255),b
 29825                           
 29826                           ; BSR set to: 3
 29827                           ;data.c: 539: m_mem_set((uint8_t*)tmpx,0,sizeof(tmpx));
 29828  0059AE  0EB2               	movlw	low _tmpx
 29829  0059B0  0100               	movlb	0	; () banked
 29830  0059B2  6F60               	movwf	m_mem_set@buf& (0+255),b
 29831  0059B4  0E03               	movlw	high _tmpx
 29832  0059B6  0100               	movlb	0	; () banked
 29833  0059B8  6F61               	movwf	(m_mem_set@buf+1)& (0+255),b
 29834  0059BA  0E00               	movlw	0
 29835  0059BC  0100               	movlb	0	; () banked
 29836  0059BE  6F62               	movwf	m_mem_set@x& (0+255),b
 29837  0059C0  0E18               	movlw	24
 29838  0059C2  0100               	movlb	0	; () banked
 29839  0059C4  6F63               	movwf	m_mem_set@len& (0+255),b
 29840  0059C6  ECA3  F050         	call	_m_mem_set	;wreg free
 29841                           
 29842                           ;data.c: 540: uint8_t i=0;
 29843  0059CA  0E00               	movlw	0
 29844  0059CC  0103               	movlb	3	; () banked
 29845  0059CE  6FE2               	movwf	cal_diff_press@i& (0+255),b
 29846                           
 29847                           ; BSR set to: 3
 29848                           ;data.c: 541: st_prCalibRowDef* tabrow;
 29849                           ;data.c: 542: for(i=0;i<diff_prCalibTabDef.rowCount;i++){
 29850  0059D0  0E00               	movlw	0
 29851  0059D2  0103               	movlb	3	; () banked
 29852  0059D4  6FE2               	movwf	cal_diff_press@i& (0+255),b
 29853  0059D6  D022               	goto	l15021
 29854  0059D8                     l15015:
 29855                           
 29856                           ; BSR set to: 3
 29857                           ;data.c: 543: tabrow = &(diff_prCalibTabDef.prCalibRow[i]);
 29858  0059D8  0103               	movlb	3	; () banked
 29859  0059DA  51E2               	movf	cal_diff_press@i& (0+255),w,b
 29860  0059DC  0D34               	mullw	52
 29861  0059DE  0E14               	movlw	low (_diff_prCalibTabDef+4)
 29862  0059E0  24F3               	addwf	prodl,w,c
 29863  0059E2  0103               	movlb	3	; () banked
 29864  0059E4  6FDE               	movwf	cal_diff_press@tabrow& (0+255),b
 29865  0059E6  0E03               	movlw	high (_diff_prCalibTabDef+4)
 29866  0059E8  20F4               	addwfc	prodh,w,c
 29867  0059EA  0103               	movlb	3	; () banked
 29868  0059EC  6FDF               	movwf	(cal_diff_press@tabrow+1)& (0+255),b
 29869                           
 29870                           ; BSR set to: 3
 29871                           ;data.c: 544: m_interp1_cal_p_v(tabrow,xin,&tmpx[i]);
 29872  0059EE  C3DE  F07A         	movff	cal_diff_press@tabrow,m_interp1_cal_p_v@tabrow
 29873  0059F2  C3DF  F07B         	movff	cal_diff_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 29874  0059F6  C3E0  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_v@xin
 29875  0059FA  C3E1  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_v@xin+1
 29876  0059FE  0103               	movlb	3	; () banked
 29877  005A00  51E2               	movf	cal_diff_press@i& (0+255),w,b
 29878  005A02  0D08               	mullw	8
 29879  005A04  0EB2               	movlw	low _tmpx
 29880  005A06  24F3               	addwf	prodl,w,c
 29881  005A08  0100               	movlb	0	; () banked
 29882  005A0A  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 29883  005A0C  0E03               	movlw	high _tmpx
 29884  005A0E  20F4               	addwfc	prodh,w,c
 29885  005A10  0100               	movlb	0	; () banked
 29886  005A12  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 29887  005A14  ECC2  F003         	call	_m_interp1_cal_p_v	;wreg free
 29888  005A18  0103               	movlb	3	; () banked
 29889  005A1A  2BE2               	incf	cal_diff_press@i& (0+255),f,b
 29890  005A1C                     l15021:
 29891                           
 29892                           ; BSR set to: 3
 29893  005A1C  0103               	movlb	3	; () banked
 29894  005A1E  5110               	movf	_diff_prCalibTabDef& (0+255),w,b
 29895  005A20  0103               	movlb	3	; () banked
 29896  005A22  5DE2               	subwf	cal_diff_press@i& (0+255),w,b
 29897  005A24  A0D8               	btfss	status,0,c
 29898  005A26  D7D8               	goto	l15015
 29899                           
 29900                           ; BSR set to: 3
 29901                           ;data.c: 545: }
 29902                           ;data.c: 546: m_interp1_cal_p_t(&tmpx[0],xin,i);
 29903                           
 29904                           ; BSR set to: 3
 29905  005A28  0EB2               	movlw	low _tmpx
 29906  005A2A  0100               	movlb	0	; () banked
 29907  005A2C  6F7A               	movwf	m_interp1_cal_p_t@tmpx& (0+255),b
 29908  005A2E  0E03               	movlw	high _tmpx
 29909  005A30  0100               	movlb	0	; () banked
 29910  005A32  6F7B               	movwf	(m_interp1_cal_p_t@tmpx+1)& (0+255),b
 29911  005A34  C3E0  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_t@xin
 29912  005A38  C3E1  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_t@xin+1
 29913  005A3C  C3E2  F07E         	movff	cal_diff_press@i,m_interp1_cal_p_t@tmpxLen
 29914  005A40  EC5B  F00D         	call	_m_interp1_cal_p_t	;wreg free
 29915                           
 29916                           ;data.c: 548: rtDiffPressure=xin->pValue;
 29917  005A44  C3E0  FFD9         	movff	cal_diff_press@xin,fsr2l
 29918  005A48  C3E1  FFDA         	movff	cal_diff_press@xin+1,fsr2h
 29919  005A4C  CFDE F152          	movff	postinc2,_rtDiffPressure	;volatile
 29920  005A50  CFDE F153          	movff	postinc2,_rtDiffPressure+1	;volatile
 29921  005A54  CFDE F154          	movff	postinc2,_rtDiffPressure+2	;volatile
 29922  005A58  CFDE F155          	movff	postinc2,_rtDiffPressure+3	;volatile
 29923                           
 29924                           ;data.c: 550: cal_diff_p_to_h(xin);
 29925  005A5C  C3E0  F0C2         	movff	cal_diff_press@xin,cal_diff_p_to_h@xin
 29926  005A60  C3E1  F0C3         	movff	cal_diff_press@xin+1,cal_diff_p_to_h@xin+1
 29927  005A64  EC84  F02F         	call	_cal_diff_p_to_h	;wreg free
 29928                           
 29929                           ;data.c: 551: rtLevel=cal_diff_hight_level();
 29930  005A68  EC4F  F018         	call	_cal_diff_hight_level	;wreg free
 29931  005A6C  0100               	movlb	0	; () banked
 29932  005A6E  6FFE               	movwf	_rtLevel& (0+255),b	;volatile
 29933                           
 29934                           ; BSR set to: 0
 29935                           ;data.c: 552: if(stSysData.pos==HOTIZONTAL){
 29936  005A70  0102               	movlb	2	; () banked
 29937  005A72  5104               	movf	(_stSysData+4)& (0+255),w,b
 29938  005A74  A4D8               	btfss	status,2,c
 29939  005A76  D013               	goto	l15035
 29940                           
 29941                           ; BSR set to: 2
 29942                           ;data.c: 553: rtVolume=cal_diff_hight_to_vol_h(rtHight);
 29943  005A78  C0EB  F1FB         	movff	_rtHight,cal_diff_hight_to_vol_h@h	;volatile
 29944  005A7C  C0EC  F1FC         	movff	_rtHight+1,cal_diff_hight_to_vol_h@h+1	;volatile
 29945  005A80  C0ED  F1FD         	movff	_rtHight+2,cal_diff_hight_to_vol_h@h+2	;volatile
 29946  005A84  C0EE  F1FE         	movff	_rtHight+3,cal_diff_hight_to_vol_h@h+3	;volatile
 29947  005A88  ECAC  F019         	call	_cal_diff_hight_to_vol_h	;wreg free
 29948  005A8C  C1FB  F021         	movff	?_cal_diff_hight_to_vol_h,_rtVolume	;volatile
 29949  005A90  C1FC  F022         	movff	?_cal_diff_hight_to_vol_h+1,_rtVolume+1	;volatile
 29950  005A94  C1FD  F023         	movff	?_cal_diff_hight_to_vol_h+2,_rtVolume+2	;volatile
 29951  005A98  C1FE  F024         	movff	?_cal_diff_hight_to_vol_h+3,_rtVolume+3	;volatile
 29952                           
 29953                           ;data.c: 554: }else{
 29954  005A9C  0012               	return	
 29955  005A9E                     l15035:
 29956                           
 29957                           ;data.c: 555: rtVolume=cal_diff_hight_to_vol_v(rtHight);
 29958  005A9E  C0EB  F1FB         	movff	_rtHight,cal_diff_hight_to_vol_v@h	;volatile
 29959  005AA2  C0EC  F1FC         	movff	_rtHight+1,cal_diff_hight_to_vol_v@h+1	;volatile
 29960  005AA6  C0ED  F1FD         	movff	_rtHight+2,cal_diff_hight_to_vol_v@h+2	;volatile
 29961  005AAA  C0EE  F1FE         	movff	_rtHight+3,cal_diff_hight_to_vol_v@h+3	;volatile
 29962  005AAE  EC6E  F000         	call	_cal_diff_hight_to_vol_v	;wreg free
 29963  005AB2  C1FB  F021         	movff	?_cal_diff_hight_to_vol_v,_rtVolume	;volatile
 29964  005AB6  C1FC  F022         	movff	?_cal_diff_hight_to_vol_v+1,_rtVolume+1	;volatile
 29965  005ABA  C1FD  F023         	movff	?_cal_diff_hight_to_vol_v+2,_rtVolume+2	;volatile
 29966  005ABE  C1FE  F024         	movff	?_cal_diff_hight_to_vol_v+3,_rtVolume+3	;volatile
 29967  005AC2  0012               	return	
 29968  005AC4                     __end_of_cal_diff_press:
 29969                           	opt stack 0
 29970                           tosu	equ	0xFFF
 29971                           tosh	equ	0xFFE
 29972                           tosl	equ	0xFFD
 29973                           pclath	equ	0xFFA
 29974                           tblptru	equ	0xFF8
 29975                           tblptrh	equ	0xFF7
 29976                           tblptrl	equ	0xFF6
 29977                           tablat	equ	0xFF5
 29978                           prodh	equ	0xFF4
 29979                           prodl	equ	0xFF3
 29980                           intcon	equ	0xFF2
 29981                           indf0	equ	0xFEF
 29982                           postinc0	equ	0xFEE
 29983                           fsr0h	equ	0xFEA
 29984                           fsr0l	equ	0xFE9
 29985                           wreg	equ	0xFE8
 29986                           indf1	equ	0xFE7
 29987                           postinc1	equ	0xFE6
 29988                           postdec1	equ	0xFE5
 29989                           plusw1	equ	0xFE3
 29990                           fsr1h	equ	0xFE2
 29991                           fsr1l	equ	0xFE1
 29992                           indf2	equ	0xFDF
 29993                           postinc2	equ	0xFDE
 29994                           postdec2	equ	0xFDD
 29995                           plusw2	equ	0xFDB
 29996                           fsr2h	equ	0xFDA
 29997                           fsr2l	equ	0xFD9
 29998                           status	equ	0xFD8
 29999                           
 30000 ;; *************** function _m_mem_set *****************
 30001 ;; Defined at:
 30002 ;;		line 32 in file "src/depend/m_string.c"
 30003 ;; Parameters:    Size  Location     Type
 30004 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 30005 ;;		 -> tmpx(24), 
 30006 ;;  x               1    2[BANK0 ] unsigned char 
 30007 ;;  len             1    3[BANK0 ] unsigned char 
 30008 ;; Auto vars:     Size  Location     Type
 30009 ;;		None
 30010 ;; Return value:  Size  Location     Type
 30011 ;;                  1    wreg      void 
 30012 ;; Registers used:
 30013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30014 ;; Tracked objects:
 30015 ;;		On entry : 0/0
 30016 ;;		On exit  : 0/0
 30017 ;;		Unchanged: 0/0
 30018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30019 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30022 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30023 ;;Total ram usage:        4 bytes
 30024 ;; Hardware stack levels used:    1
 30025 ;; Hardware stack levels required when called:    4
 30026 ;; This function calls:
 30027 ;;		Nothing
 30028 ;; This function is called by:
 30029 ;;		_cal_diff_press
 30030 ;; This function uses a non-reentrant model
 30031 ;;
 30032                           
 30033                           	psect	text168
 30034  00A146                     __ptext168:
 30035                           	opt stack 0
 30036  00A146                     _m_mem_set:
 30037                           	opt stack 22
 30038                           
 30039                           ;m_string.c: 34: while(len--)
 30040                           
 30041                           ;incstack = 0
 30042  00A146  D009               	goto	l14615
 30043  00A148                     l14611:
 30044                           
 30045                           ;m_string.c: 35: {
 30046                           ;m_string.c: 36: *buf++=x;
 30047  00A148  C060  FFD9         	movff	m_mem_set@buf,fsr2l
 30048  00A14C  C061  FFDA         	movff	m_mem_set@buf+1,fsr2h
 30049  00A150  C062  FFDF         	movff	m_mem_set@x,indf2
 30050  00A154  0100               	movlb	0	; () banked
 30051  00A156  4B60               	infsnz	m_mem_set@buf& (0+255),f,b
 30052  00A158  2B61               	incf	(m_mem_set@buf+1)& (0+255),f,b
 30053  00A15A                     l14615:
 30054  00A15A  0100               	movlb	0	; () banked
 30055  00A15C  0763               	decf	m_mem_set@len& (0+255),f,b
 30056  00A15E  0100               	movlb	0	; () banked
 30057  00A160  2963               	incf	m_mem_set@len& (0+255),w,b
 30058  00A162  B4D8               	btfsc	status,2,c
 30059  00A164  0012               	return	
 30060  00A166  D7F0               	goto	l14611
 30061  00A168                     __end_of_m_mem_set:
 30062                           	opt stack 0
 30063                           tosu	equ	0xFFF
 30064                           tosh	equ	0xFFE
 30065                           tosl	equ	0xFFD
 30066                           pclath	equ	0xFFA
 30067                           tblptru	equ	0xFF8
 30068                           tblptrh	equ	0xFF7
 30069                           tblptrl	equ	0xFF6
 30070                           tablat	equ	0xFF5
 30071                           prodh	equ	0xFF4
 30072                           prodl	equ	0xFF3
 30073                           intcon	equ	0xFF2
 30074                           indf0	equ	0xFEF
 30075                           postinc0	equ	0xFEE
 30076                           fsr0h	equ	0xFEA
 30077                           fsr0l	equ	0xFE9
 30078                           wreg	equ	0xFE8
 30079                           indf1	equ	0xFE7
 30080                           postinc1	equ	0xFE6
 30081                           postdec1	equ	0xFE5
 30082                           plusw1	equ	0xFE3
 30083                           fsr1h	equ	0xFE2
 30084                           fsr1l	equ	0xFE1
 30085                           indf2	equ	0xFDF
 30086                           postinc2	equ	0xFDE
 30087                           postdec2	equ	0xFDD
 30088                           plusw2	equ	0xFDB
 30089                           fsr2h	equ	0xFDA
 30090                           fsr2l	equ	0xFD9
 30091                           status	equ	0xFD8
 30092                           
 30093 ;; *************** function _m_interp1_cal_p_v *****************
 30094 ;; Defined at:
 30095 ;;		line 339 in file "src/api/data.c"
 30096 ;; Parameters:    Size  Location     Type
 30097 ;;  tabrow          2   26[BANK0 ] PTR struct .
 30098 ;;		 -> prCalibTabDef.prCalibRow(156), diff_prCalibTabDef.prCalibRow(156), prCalibTabDef(162), diff_prCalibTabDef(162), 
 30099 ;;  xin             2   28[BANK0 ] PTR struct .
 30100 ;;		 -> cal_press@xin(8), x_prDiffData(8), 
 30101 ;;  xout            2   30[BANK0 ] PTR struct .
 30102 ;;		 -> tmpx(24), NULL(0), 
 30103 ;; Auto vars:     Size  Location     Type
 30104 ;;  pr              4   53[BANK0 ] long 
 30105 ;;  x               4   47[BANK0 ] long 
 30106 ;;  y               4   43[BANK0 ] long 
 30107 ;;  t16             2   51[BANK0 ] int 
 30108 ;;  i               1   57[BANK0 ] unsigned char 
 30109 ;; Return value:  Size  Location     Type
 30110 ;;                  1    wreg      unsigned char 
 30111 ;; Registers used:
 30112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30113 ;; Tracked objects:
 30114 ;;		On entry : 0/0
 30115 ;;		On exit  : 0/0
 30116 ;;		Unchanged: 0/0
 30117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30118 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30119 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30120 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30121 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30122 ;;Total ram usage:       32 bytes
 30123 ;; Hardware stack levels used:    1
 30124 ;; Hardware stack levels required when called:    5
 30125 ;; This function calls:
 30126 ;;		___aldiv
 30127 ;;		___lmul
 30128 ;; This function is called by:
 30129 ;;		_cal_diff_press
 30130 ;;		_cal_press
 30131 ;; This function uses a non-reentrant model
 30132 ;;
 30133                           
 30134                           	psect	text169
 30135  000784                     __ptext169:
 30136                           	opt stack 0
 30137  000784                     _m_interp1_cal_p_v:
 30138                           	opt stack 21
 30139                           
 30140                           ;data.c: 341: uint8_t i;
 30141                           ;data.c: 342: int32_t x,y,pr;
 30142                           ;data.c: 343: int16_t t16;
 30143                           ;data.c: 344: t16=xin->pAdcValue;
 30144                           
 30145                           ; BSR set to: 0
 30146                           ;incstack = 0
 30147  000784  0100               	movlb	0	; () banked
 30148  000786  EE20 F004          	lfsr	2,4
 30149  00078A  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 30150  00078C  26D9               	addwf	fsr2l,f,c
 30151  00078E  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 30152  000790  22DA               	addwfc	fsr2h,f,c
 30153  000792  CFDE F093          	movff	postinc2,m_interp1_cal_p_v@t16
 30154  000796  CFDD F094          	movff	postdec2,m_interp1_cal_p_v@t16+1
 30155                           
 30156                           ; BSR set to: 0
 30157                           ;data.c: 345: for(i=0;i< (tabrow->pCount) - 2 ;i++){
 30158  00079A  0E00               	movlw	0
 30159  00079C  0100               	movlb	0	; () banked
 30160  00079E  6F99               	movwf	m_interp1_cal_p_v@i& (0+255),b
 30161  0007A0  D0BE               	goto	l14439
 30162  0007A2                     l14427:
 30163                           
 30164                           ; BSR set to: 0
 30165                           ;data.c: 347: if(tabrow->prCalibPoint[i].pAdcValue < tabrow->prCalibPoint[i+1].pAdcValue
      +                          ){
 30166  0007A2  0100               	movlb	0	; () banked
 30167  0007A4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30168  0007A6  0100               	movlb	0	; () banked
 30169  0007A8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30170  0007AA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30171  0007AC  0100               	movlb	0	; () banked
 30172  0007AE  90D8               	bcf	status,0,c
 30173  0007B0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30174  0007B2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30175  0007B4  0100               	movlb	0	; () banked
 30176  0007B6  90D8               	bcf	status,0,c
 30177  0007B8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30178  0007BA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30179  0007BC  0100               	movlb	0	; () banked
 30180  0007BE  90D8               	bcf	status,0,c
 30181  0007C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30182  0007C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30183  0007C4  0E0C               	movlw	12
 30184  0007C6  0100               	movlb	0	; () banked
 30185  0007C8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30186  0007CA  0E00               	movlw	0
 30187  0007CC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30188  0007CE  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30189  0007D2  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30190  0007D6  0100               	movlb	0	; () banked
 30191  0007D8  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30192  0007DA  0100               	movlb	0	; () banked
 30193  0007DC  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30194  0007DE  0100               	movlb	0	; () banked
 30195  0007E0  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30196  0007E2  0100               	movlb	0	; () banked
 30197  0007E4  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30198  0007E6  0E04               	movlw	4
 30199  0007E8  0100               	movlb	0	; () banked
 30200  0007EA  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30201  0007EC  6ED9               	movwf	fsr2l,c
 30202  0007EE  0E00               	movlw	0
 30203  0007F0  0100               	movlb	0	; () banked
 30204  0007F2  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30205  0007F4  6EDA               	movwf	fsr2h,c
 30206  0007F6  0100               	movlb	0	; () banked
 30207  0007F8  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30208  0007FA  0D08               	mullw	8
 30209  0007FC  0E04               	movlw	4
 30210  0007FE  26F3               	addwf	prodl,f,c
 30211  000800  0E00               	movlw	0
 30212  000802  22F4               	addwfc	prodh,f,c
 30213  000804  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 30214  000808  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 30215  00080C  50F3               	movf	prodl,w,c
 30216  00080E  0100               	movlb	0	; () banked
 30217  000810  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30218  000812  50F4               	movf	prodh,w,c
 30219  000814  0100               	movlb	0	; () banked
 30220  000816  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30221  000818  0E04               	movlw	4
 30222  00081A  0100               	movlb	0	; () banked
 30223  00081C  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30224  00081E  6EE1               	movwf	fsr1l,c
 30225  000820  0E00               	movlw	0
 30226  000822  0100               	movlb	0	; () banked
 30227  000824  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 30228  000826  6EE2               	movwf	fsr1h,c
 30229  000828  50DE               	movf	postinc2,w,c
 30230  00082A  5CE6               	subwf	postinc1,w,c
 30231  00082C  50E6               	movf	postinc1,w,c
 30232  00082E  0A80               	xorlw	128
 30233  000830  0100               	movlb	0	; () banked
 30234  000832  6F8A               	movwf	(??_m_interp1_cal_p_v+10)& (0+255),b
 30235  000834  50DE               	movf	postinc2,w,c
 30236  000836  0A80               	xorlw	128
 30237  000838  0100               	movlb	0	; () banked
 30238  00083A  598A               	subwfb	(??_m_interp1_cal_p_v+10)& (0+255),w,b
 30239  00083C  B0D8               	btfsc	status,0,c
 30240  00083E  D039               	goto	l14433
 30241                           
 30242                           ; BSR set to: 0
 30243                           ;data.c: 348: if(t16 <= tabrow->prCalibPoint[i+1].pAdcValue)break;
 30244  000840  0100               	movlb	0	; () banked
 30245  000842  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30246  000844  0100               	movlb	0	; () banked
 30247  000846  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30248  000848  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30249  00084A  0100               	movlb	0	; () banked
 30250  00084C  90D8               	bcf	status,0,c
 30251  00084E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30252  000850  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30253  000852  0100               	movlb	0	; () banked
 30254  000854  90D8               	bcf	status,0,c
 30255  000856  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30256  000858  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30257  00085A  0100               	movlb	0	; () banked
 30258  00085C  90D8               	bcf	status,0,c
 30259  00085E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30260  000860  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30261  000862  0E0C               	movlw	12
 30262  000864  0100               	movlb	0	; () banked
 30263  000866  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30264  000868  0E00               	movlw	0
 30265  00086A  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30266  00086C  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30267  000870  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30268  000874  0100               	movlb	0	; () banked
 30269  000876  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30270  000878  0100               	movlb	0	; () banked
 30271  00087A  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30272  00087C  0100               	movlb	0	; () banked
 30273  00087E  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30274  000880  0100               	movlb	0	; () banked
 30275  000882  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30276  000884  0E04               	movlw	4
 30277  000886  0100               	movlb	0	; () banked
 30278  000888  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30279  00088A  6ED9               	movwf	fsr2l,c
 30280  00088C  0E00               	movlw	0
 30281  00088E  0100               	movlb	0	; () banked
 30282  000890  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30283  000892  6EDA               	movwf	fsr2h,c
 30284  000894  0100               	movlb	0	; () banked
 30285  000896  5193               	movf	m_interp1_cal_p_v@t16& (0+255),w,b
 30286  000898  5CDE               	subwf	postinc2,w,c
 30287  00089A  50DE               	movf	postinc2,w,c
 30288  00089C  0A80               	xorlw	128
 30289  00089E  0100               	movlb	0	; () banked
 30290  0008A0  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 30291  0008A2  0100               	movlb	0	; () banked
 30292  0008A4  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 30293  0008A6  0A80               	xorlw	128
 30294  0008A8  0100               	movlb	0	; () banked
 30295  0008AA  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30296  0008AC  B0D8               	btfsc	status,0,c
 30297  0008AE  D062               	goto	l14441
 30298  0008B0  D034               	goto	l14437
 30299  0008B2                     l14433:
 30300                           
 30301                           ; BSR set to: 0
 30302                           ;data.c: 350: if(t16 >= tabrow->prCalibPoint[i+1].pAdcValue)break;
 30303  0008B2  0100               	movlb	0	; () banked
 30304  0008B4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30305  0008B6  0100               	movlb	0	; () banked
 30306  0008B8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30307  0008BA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30308  0008BC  0100               	movlb	0	; () banked
 30309  0008BE  90D8               	bcf	status,0,c
 30310  0008C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30311  0008C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30312  0008C4  0100               	movlb	0	; () banked
 30313  0008C6  90D8               	bcf	status,0,c
 30314  0008C8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30315  0008CA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30316  0008CC  0100               	movlb	0	; () banked
 30317  0008CE  90D8               	bcf	status,0,c
 30318  0008D0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30319  0008D2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30320  0008D4  0E0C               	movlw	12
 30321  0008D6  0100               	movlb	0	; () banked
 30322  0008D8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30323  0008DA  0E00               	movlw	0
 30324  0008DC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30325  0008DE  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30326  0008E2  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30327  0008E6  0100               	movlb	0	; () banked
 30328  0008E8  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30329  0008EA  0100               	movlb	0	; () banked
 30330  0008EC  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30331  0008EE  0100               	movlb	0	; () banked
 30332  0008F0  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30333  0008F2  0100               	movlb	0	; () banked
 30334  0008F4  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30335  0008F6  0E04               	movlw	4
 30336  0008F8  0100               	movlb	0	; () banked
 30337  0008FA  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30338  0008FC  6ED9               	movwf	fsr2l,c
 30339  0008FE  0E00               	movlw	0
 30340  000900  0100               	movlb	0	; () banked
 30341  000902  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30342  000904  6EDA               	movwf	fsr2h,c
 30343  000906  50DE               	movf	postinc2,w,c
 30344  000908  0100               	movlb	0	; () banked
 30345  00090A  5D93               	subwf	m_interp1_cal_p_v@t16& (0+255),w,b
 30346  00090C  0100               	movlb	0	; () banked
 30347  00090E  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 30348  000910  0A80               	xorlw	128
 30349  000912  0100               	movlb	0	; () banked
 30350  000914  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 30351  000916  50DE               	movf	postinc2,w,c
 30352  000918  D7C6               	goto	L24
 30353  00091A                     l14437:
 30354                           
 30355                           ; BSR set to: 0
 30356  00091A  0100               	movlb	0	; () banked
 30357  00091C  2B99               	incf	m_interp1_cal_p_v@i& (0+255),f,b
 30358  00091E                     l14439:
 30359                           
 30360                           ; BSR set to: 0
 30361  00091E  0EFE               	movlw	254
 30362  000920  0100               	movlb	0	; () banked
 30363  000922  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30364  000924  0EFF               	movlw	255
 30365  000926  0100               	movlb	0	; () banked
 30366  000928  6F81               	movwf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30367  00092A  C07A  FFD9         	movff	m_interp1_cal_p_v@tabrow,fsr2l
 30368  00092E  C07B  FFDA         	movff	m_interp1_cal_p_v@tabrow+1,fsr2h
 30369  000932  50DF               	movf	indf2,w,c
 30370  000934  0100               	movlb	0	; () banked
 30371  000936  6F82               	movwf	(??_m_interp1_cal_p_v+2)& (0+255),b
 30372  000938  6B83               	clrf	(??_m_interp1_cal_p_v+3)& (0+255),b
 30373  00093A  0100               	movlb	0	; () banked
 30374  00093C  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30375  00093E  0100               	movlb	0	; () banked
 30376  000940  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30377  000942  0100               	movlb	0	; () banked
 30378  000944  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30379  000946  0100               	movlb	0	; () banked
 30380  000948  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30381  00094A  0100               	movlb	0	; () banked
 30382  00094C  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30383  00094E  0100               	movlb	0	; () banked
 30384  000950  6F84               	movwf	(??_m_interp1_cal_p_v+4)& (0+255),b
 30385  000952  6B85               	clrf	(??_m_interp1_cal_p_v+5)& (0+255),b
 30386  000954  0100               	movlb	0	; () banked
 30387  000956  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30388  000958  0100               	movlb	0	; () banked
 30389  00095A  5D84               	subwf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 30390  00095C  0100               	movlb	0	; () banked
 30391  00095E  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 30392  000960  0A80               	xorlw	128
 30393  000962  0100               	movlb	0	; () banked
 30394  000964  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 30395  000966  0100               	movlb	0	; () banked
 30396  000968  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30397  00096A  0A80               	xorlw	128
 30398  00096C  0100               	movlb	0	; () banked
 30399  00096E  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30400  000970  A0D8               	btfss	status,0,c
 30401  000972  D717               	goto	l14427
 30402  000974                     l14441:
 30403                           
 30404                           ; BSR set to: 0
 30405                           ;data.c: 351: }
 30406                           ;data.c: 352: }
 30407                           ;data.c: 353: pr=tabrow->prCalibPoint[i].pValue;
 30408  000974  0100               	movlb	0	; () banked
 30409  000976  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30410  000978  0D08               	mullw	8
 30411  00097A  0E04               	movlw	4
 30412  00097C  26F3               	addwf	prodl,f,c
 30413  00097E  0E00               	movlw	0
 30414  000980  22F4               	addwfc	prodh,f,c
 30415  000982  50F3               	movf	prodl,w,c
 30416  000984  0100               	movlb	0	; () banked
 30417  000986  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30418  000988  6ED9               	movwf	fsr2l,c
 30419  00098A  50F4               	movf	prodh,w,c
 30420  00098C  0100               	movlb	0	; () banked
 30421  00098E  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30422  000990  6EDA               	movwf	fsr2h,c
 30423  000992  CFDE F095          	movff	postinc2,m_interp1_cal_p_v@pr
 30424  000996  CFDE F096          	movff	postinc2,m_interp1_cal_p_v@pr+1
 30425  00099A  CFDE F097          	movff	postinc2,m_interp1_cal_p_v@pr+2
 30426  00099E  CFDE F098          	movff	postinc2,m_interp1_cal_p_v@pr+3
 30427                           
 30428                           ;data.c: 355: y = tabrow->prCalibPoint[i+1].pValue - tabrow->prCalibPoint[i].pValue ;
 30429  0009A2  0100               	movlb	0	; () banked
 30430  0009A4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30431  0009A6  0100               	movlb	0	; () banked
 30432  0009A8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30433  0009AA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30434  0009AC  0100               	movlb	0	; () banked
 30435  0009AE  90D8               	bcf	status,0,c
 30436  0009B0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30437  0009B2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30438  0009B4  0100               	movlb	0	; () banked
 30439  0009B6  90D8               	bcf	status,0,c
 30440  0009B8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30441  0009BA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30442  0009BC  0100               	movlb	0	; () banked
 30443  0009BE  90D8               	bcf	status,0,c
 30444  0009C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30445  0009C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30446  0009C4  0E0C               	movlw	12
 30447  0009C6  0100               	movlb	0	; () banked
 30448  0009C8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30449  0009CA  0E00               	movlw	0
 30450  0009CC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30451  0009CE  0100               	movlb	0	; () banked
 30452  0009D0  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30453  0009D2  0100               	movlb	0	; () banked
 30454  0009D4  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30455  0009D6  6ED9               	movwf	fsr2l,c
 30456  0009D8  0100               	movlb	0	; () banked
 30457  0009DA  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30458  0009DC  0100               	movlb	0	; () banked
 30459  0009DE  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30460  0009E0  6EDA               	movwf	fsr2h,c
 30461  0009E2  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 30462  0009E6  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_v+3
 30463  0009EA  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 30464  0009EE  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_v+5
 30465  0009F2  0100               	movlb	0	; () banked
 30466  0009F4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30467  0009F6  0D08               	mullw	8
 30468  0009F8  0E04               	movlw	4
 30469  0009FA  26F3               	addwf	prodl,f,c
 30470  0009FC  0E00               	movlw	0
 30471  0009FE  22F4               	addwfc	prodh,f,c
 30472  000A00  50F3               	movf	prodl,w,c
 30473  000A02  0100               	movlb	0	; () banked
 30474  000A04  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30475  000A06  6ED9               	movwf	fsr2l,c
 30476  000A08  50F4               	movf	prodh,w,c
 30477  000A0A  0100               	movlb	0	; () banked
 30478  000A0C  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30479  000A0E  6EDA               	movwf	fsr2h,c
 30480  000A10  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_v+6
 30481  000A14  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_v+7
 30482  000A18  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 30483  000A1C  CFDE F089          	movff	postinc2,??_m_interp1_cal_p_v+9
 30484  000A20  0100               	movlb	0	; () banked
 30485  000A22  1F86               	comf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30486  000A24  1F87               	comf	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30487  000A26  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30488  000A28  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30489  000A2A  2B86               	incf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30490  000A2C  0E00               	movlw	0
 30491  000A2E  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30492  000A30  2388               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30493  000A32  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30494  000A34  0100               	movlb	0	; () banked
 30495  000A36  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30496  000A38  0100               	movlb	0	; () banked
 30497  000A3A  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30498  000A3C  0100               	movlb	0	; () banked
 30499  000A3E  6F8B               	movwf	m_interp1_cal_p_v@y& (0+255),b
 30500  000A40  0100               	movlb	0	; () banked
 30501  000A42  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30502  000A44  0100               	movlb	0	; () banked
 30503  000A46  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 30504  000A48  0100               	movlb	0	; () banked
 30505  000A4A  6F8C               	movwf	(m_interp1_cal_p_v@y+1)& (0+255),b
 30506  000A4C  0100               	movlb	0	; () banked
 30507  000A4E  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 30508  000A50  0100               	movlb	0	; () banked
 30509  000A52  2188               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),w,b
 30510  000A54  0100               	movlb	0	; () banked
 30511  000A56  6F8D               	movwf	(m_interp1_cal_p_v@y+2)& (0+255),b
 30512  000A58  0100               	movlb	0	; () banked
 30513  000A5A  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 30514  000A5C  0100               	movlb	0	; () banked
 30515  000A5E  2189               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),w,b
 30516  000A60  0100               	movlb	0	; () banked
 30517  000A62  6F8E               	movwf	(m_interp1_cal_p_v@y+3)& (0+255),b
 30518                           
 30519                           ;data.c: 356: x = (int32_t)(tabrow->prCalibPoint[i+1].pAdcValue - tabrow->prCalibPoint[i
      +                          ].pAdcValue);
 30520  000A64  0100               	movlb	0	; () banked
 30521  000A66  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30522  000A68  0100               	movlb	0	; () banked
 30523  000A6A  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30524  000A6C  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30525  000A6E  0100               	movlb	0	; () banked
 30526  000A70  90D8               	bcf	status,0,c
 30527  000A72  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30528  000A74  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30529  000A76  0100               	movlb	0	; () banked
 30530  000A78  90D8               	bcf	status,0,c
 30531  000A7A  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30532  000A7C  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30533  000A7E  0100               	movlb	0	; () banked
 30534  000A80  90D8               	bcf	status,0,c
 30535  000A82  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30536  000A84  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30537  000A86  0E0C               	movlw	12
 30538  000A88  0100               	movlb	0	; () banked
 30539  000A8A  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30540  000A8C  0E00               	movlw	0
 30541  000A8E  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30542  000A90  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30543  000A94  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30544  000A98  0100               	movlb	0	; () banked
 30545  000A9A  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30546  000A9C  0100               	movlb	0	; () banked
 30547  000A9E  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30548  000AA0  0100               	movlb	0	; () banked
 30549  000AA2  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30550  000AA4  0100               	movlb	0	; () banked
 30551  000AA6  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30552  000AA8  0E04               	movlw	4
 30553  000AAA  0100               	movlb	0	; () banked
 30554  000AAC  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30555  000AAE  6ED9               	movwf	fsr2l,c
 30556  000AB0  0E00               	movlw	0
 30557  000AB2  0100               	movlb	0	; () banked
 30558  000AB4  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30559  000AB6  6EDA               	movwf	fsr2h,c
 30560  000AB8  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 30561  000ABC  CFDD F085          	movff	postdec2,??_m_interp1_cal_p_v+5
 30562  000AC0  0100               	movlb	0	; () banked
 30563  000AC2  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30564  000AC4  0D08               	mullw	8
 30565  000AC6  0E04               	movlw	4
 30566  000AC8  26F3               	addwf	prodl,f,c
 30567  000ACA  0E00               	movlw	0
 30568  000ACC  22F4               	addwfc	prodh,f,c
 30569  000ACE  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 30570  000AD2  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 30571  000AD6  50F3               	movf	prodl,w,c
 30572  000AD8  0100               	movlb	0	; () banked
 30573  000ADA  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30574  000ADC  50F4               	movf	prodh,w,c
 30575  000ADE  0100               	movlb	0	; () banked
 30576  000AE0  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30577  000AE2  0E04               	movlw	4
 30578  000AE4  0100               	movlb	0	; () banked
 30579  000AE6  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30580  000AE8  6ED9               	movwf	fsr2l,c
 30581  000AEA  0E00               	movlw	0
 30582  000AEC  0100               	movlb	0	; () banked
 30583  000AEE  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 30584  000AF0  6EDA               	movwf	fsr2h,c
 30585  000AF2  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 30586  000AF6  CFDD F089          	movff	postdec2,??_m_interp1_cal_p_v+9
 30587  000AFA  0100               	movlb	0	; () banked
 30588  000AFC  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30589  000AFE  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30590  000B00  4B88               	infsnz	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30591  000B02  2B89               	incf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30592  000B04  0100               	movlb	0	; () banked
 30593  000B06  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 30594  000B08  0100               	movlb	0	; () banked
 30595  000B0A  2788               	addwf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30596  000B0C  0100               	movlb	0	; () banked
 30597  000B0E  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 30598  000B10  0100               	movlb	0	; () banked
 30599  000B12  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30600  000B14  C088  F08F         	movff	??_m_interp1_cal_p_v+8,m_interp1_cal_p_v@x
 30601  000B18  C089  F090         	movff	??_m_interp1_cal_p_v+9,m_interp1_cal_p_v@x+1
 30602  000B1C  0100               	movlb	0	; () banked
 30603  000B1E  0E00               	movlw	0
 30604  000B20  BF90               	btfsc	(m_interp1_cal_p_v@x+1)& (0+255),7,b
 30605  000B22  0EFF               	movlw	-1
 30606  000B24  6F91               	movwf	(m_interp1_cal_p_v@x+2)& (0+255),b
 30607  000B26  6F92               	movwf	(m_interp1_cal_p_v@x+3)& (0+255),b
 30608                           
 30609                           ; BSR set to: 0
 30610                           ;data.c: 357: if(x != 0){
 30611  000B28  0100               	movlb	0	; () banked
 30612  000B2A  518F               	movf	m_interp1_cal_p_v@x& (0+255),w,b
 30613  000B2C  0100               	movlb	0	; () banked
 30614  000B2E  1190               	iorwf	(m_interp1_cal_p_v@x+1)& (0+255),w,b
 30615  000B30  0100               	movlb	0	; () banked
 30616  000B32  1191               	iorwf	(m_interp1_cal_p_v@x+2)& (0+255),w,b
 30617  000B34  0100               	movlb	0	; () banked
 30618  000B36  1192               	iorwf	(m_interp1_cal_p_v@x+3)& (0+255),w,b
 30619  000B38  B4D8               	btfsc	status,2,c
 30620  000B3A  D068               	goto	l14447
 30621                           
 30622                           ; BSR set to: 0
 30623                           ;data.c: 359: pr = pr + y*((int32_t)(t16 - tabrow->prCalibPoint[i].pAdcValue))/x;
 30624  000B3C  0100               	movlb	0	; () banked
 30625  000B3E  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30626  000B40  0D08               	mullw	8
 30627  000B42  0E04               	movlw	4
 30628  000B44  26F3               	addwf	prodl,f,c
 30629  000B46  0E00               	movlw	0
 30630  000B48  22F4               	addwfc	prodh,f,c
 30631  000B4A  C07A  F080         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v
 30632  000B4E  C07B  F081         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+1
 30633  000B52  50F3               	movf	prodl,w,c
 30634  000B54  0100               	movlb	0	; () banked
 30635  000B56  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30636  000B58  50F4               	movf	prodh,w,c
 30637  000B5A  0100               	movlb	0	; () banked
 30638  000B5C  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30639  000B5E  0E04               	movlw	4
 30640  000B60  0100               	movlb	0	; () banked
 30641  000B62  2580               	addwf	??_m_interp1_cal_p_v& (0+255),w,b
 30642  000B64  6ED9               	movwf	fsr2l,c
 30643  000B66  0E00               	movlw	0
 30644  000B68  0100               	movlb	0	; () banked
 30645  000B6A  2181               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30646  000B6C  6EDA               	movwf	fsr2h,c
 30647  000B6E  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 30648  000B72  CFDD F083          	movff	postdec2,??_m_interp1_cal_p_v+3
 30649  000B76  0100               	movlb	0	; () banked
 30650  000B78  1F82               	comf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30651  000B7A  1F83               	comf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30652  000B7C  4B82               	infsnz	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30653  000B7E  2B83               	incf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30654  000B80  0100               	movlb	0	; () banked
 30655  000B82  5193               	movf	m_interp1_cal_p_v@t16& (0+255),w,b
 30656  000B84  0100               	movlb	0	; () banked
 30657  000B86  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30658  000B88  0100               	movlb	0	; () banked
 30659  000B8A  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 30660  000B8C  0100               	movlb	0	; () banked
 30661  000B8E  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30662  000B90  C082  F060         	movff	??_m_interp1_cal_p_v+2,___lmul@multiplier
 30663  000B94  C083  F061         	movff	??_m_interp1_cal_p_v+3,___lmul@multiplier+1
 30664  000B98  0100               	movlb	0	; () banked
 30665  000B9A  0E00               	movlw	0
 30666  000B9C  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 30667  000B9E  0EFF               	movlw	-1
 30668  000BA0  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 30669  000BA2  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 30670  000BA4  C08B  F064         	movff	m_interp1_cal_p_v@y,___lmul@multiplicand
 30671  000BA8  C08C  F065         	movff	m_interp1_cal_p_v@y+1,___lmul@multiplicand+1
 30672  000BAC  C08D  F066         	movff	m_interp1_cal_p_v@y+2,___lmul@multiplicand+2
 30673  000BB0  C08E  F067         	movff	m_interp1_cal_p_v@y+3,___lmul@multiplicand+3
 30674  000BB4  ECBD  F043         	call	___lmul	;wreg free
 30675  000BB8  C060  F06C         	movff	?___lmul,___aldiv@dividend
 30676  000BBC  C061  F06D         	movff	?___lmul+1,___aldiv@dividend+1
 30677  000BC0  C062  F06E         	movff	?___lmul+2,___aldiv@dividend+2
 30678  000BC4  C063  F06F         	movff	?___lmul+3,___aldiv@dividend+3
 30679  000BC8  C08F  F070         	movff	m_interp1_cal_p_v@x,___aldiv@divisor
 30680  000BCC  C090  F071         	movff	m_interp1_cal_p_v@x+1,___aldiv@divisor+1
 30681  000BD0  C091  F072         	movff	m_interp1_cal_p_v@x+2,___aldiv@divisor+2
 30682  000BD4  C092  F073         	movff	m_interp1_cal_p_v@x+3,___aldiv@divisor+3
 30683  000BD8  EC62  F02D         	call	___aldiv	;wreg free
 30684  000BDC  0100               	movlb	0	; () banked
 30685  000BDE  5195               	movf	m_interp1_cal_p_v@pr& (0+255),w,b
 30686  000BE0  0100               	movlb	0	; () banked
 30687  000BE2  256C               	addwf	?___aldiv& (0+255),w,b
 30688  000BE4  0100               	movlb	0	; () banked
 30689  000BE6  6F95               	movwf	m_interp1_cal_p_v@pr& (0+255),b
 30690  000BE8  0100               	movlb	0	; () banked
 30691  000BEA  5196               	movf	(m_interp1_cal_p_v@pr+1)& (0+255),w,b
 30692  000BEC  0100               	movlb	0	; () banked
 30693  000BEE  216D               	addwfc	(?___aldiv+1)& (0+255),w,b
 30694  000BF0  0100               	movlb	0	; () banked
 30695  000BF2  6F96               	movwf	(m_interp1_cal_p_v@pr+1)& (0+255),b
 30696  000BF4  0100               	movlb	0	; () banked
 30697  000BF6  5197               	movf	(m_interp1_cal_p_v@pr+2)& (0+255),w,b
 30698  000BF8  0100               	movlb	0	; () banked
 30699  000BFA  216E               	addwfc	(?___aldiv+2)& (0+255),w,b
 30700  000BFC  0100               	movlb	0	; () banked
 30701  000BFE  6F97               	movwf	(m_interp1_cal_p_v@pr+2)& (0+255),b
 30702  000C00  0100               	movlb	0	; () banked
 30703  000C02  5198               	movf	(m_interp1_cal_p_v@pr+3)& (0+255),w,b
 30704  000C04  0100               	movlb	0	; () banked
 30705  000C06  216F               	addwfc	(?___aldiv+3)& (0+255),w,b
 30706  000C08  0100               	movlb	0	; () banked
 30707  000C0A  6F98               	movwf	(m_interp1_cal_p_v@pr+3)& (0+255),b
 30708  000C0C                     l14447:
 30709                           
 30710                           ; BSR set to: 0
 30711                           ;data.c: 360: }
 30712                           ;data.c: 361: xin->pValue=pr;
 30713  000C0C  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 30714  000C10  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 30715  000C14  C095  FFDE         	movff	m_interp1_cal_p_v@pr,postinc2
 30716  000C18  C096  FFDE         	movff	m_interp1_cal_p_v@pr+1,postinc2
 30717  000C1C  C097  FFDE         	movff	m_interp1_cal_p_v@pr+2,postinc2
 30718  000C20  C098  FFDE         	movff	m_interp1_cal_p_v@pr+3,postinc2
 30719                           
 30720                           ; BSR set to: 0
 30721                           ;data.c: 362: if(xout){
 30722  000C24  0100               	movlb	0	; () banked
 30723  000C26  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 30724  000C28  0100               	movlb	0	; () banked
 30725  000C2A  117F               	iorwf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 30726  000C2C  B4D8               	btfsc	status,2,c
 30727  000C2E  D030               	goto	l14457
 30728                           
 30729                           ; BSR set to: 0
 30730                           ;data.c: 363: xout->pValue = pr;
 30731  000C30  C07E  FFD9         	movff	m_interp1_cal_p_v@xout,fsr2l
 30732  000C34  C07F  FFDA         	movff	m_interp1_cal_p_v@xout+1,fsr2h
 30733  000C38  C095  FFDE         	movff	m_interp1_cal_p_v@pr,postinc2
 30734  000C3C  C096  FFDE         	movff	m_interp1_cal_p_v@pr+1,postinc2
 30735  000C40  C097  FFDE         	movff	m_interp1_cal_p_v@pr+2,postinc2
 30736  000C44  C098  FFDE         	movff	m_interp1_cal_p_v@pr+3,postinc2
 30737                           
 30738                           ; BSR set to: 0
 30739                           ;data.c: 364: xout->pAdcValue = xin->pAdcValue;
 30740  000C48  0100               	movlb	0	; () banked
 30741  000C4A  EE20 F004          	lfsr	2,4
 30742  000C4E  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 30743  000C50  26D9               	addwf	fsr2l,f,c
 30744  000C52  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 30745  000C54  22DA               	addwfc	fsr2h,f,c
 30746  000C56  0100               	movlb	0	; () banked
 30747  000C58  EE10 F004          	lfsr	1,4
 30748  000C5C  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 30749  000C5E  26E1               	addwf	fsr1l,f,c
 30750  000C60  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 30751  000C62  22E2               	addwfc	fsr1h,f,c
 30752  000C64  CFDE FFE6          	movff	postinc2,postinc1
 30753  000C68  CFDD FFE5          	movff	postdec2,postdec1
 30754                           
 30755                           ; BSR set to: 0
 30756                           ;data.c: 365: xout->tAdcValue = tabrow->prCalibPoint[0].tAdcValue;
 30757  000C6C  0100               	movlb	0	; () banked
 30758  000C6E  EE20 F00A          	lfsr	2,10
 30759  000C72  517A               	movf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30760  000C74  26D9               	addwf	fsr2l,f,c
 30761  000C76  517B               	movf	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30762  000C78  22DA               	addwfc	fsr2h,f,c
 30763  000C7A  0100               	movlb	0	; () banked
 30764  000C7C  EE10 F006          	lfsr	1,6
 30765  000C80  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 30766  000C82  26E1               	addwf	fsr1l,f,c
 30767  000C84  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 30768  000C86  22E2               	addwfc	fsr1h,f,c
 30769  000C88  CFDE FFE6          	movff	postinc2,postinc1
 30770  000C8C  CFDD FFE5          	movff	postdec2,postdec1
 30771  000C90                     l14457:
 30772                           
 30773                           ; BSR set to: 0
 30774                           ;data.c: 366: }
 30775                           ;data.c: 367: return i;
 30776  000C90  0100               	movlb	0	; () banked
 30777  000C92  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30778  000C94  0012               	return	
 30779  000C96                     __end_of_m_interp1_cal_p_v:
 30780                           	opt stack 0
 30781                           tosu	equ	0xFFF
 30782                           tosh	equ	0xFFE
 30783                           tosl	equ	0xFFD
 30784                           pclath	equ	0xFFA
 30785                           tblptru	equ	0xFF8
 30786                           tblptrh	equ	0xFF7
 30787                           tblptrl	equ	0xFF6
 30788                           tablat	equ	0xFF5
 30789                           prodh	equ	0xFF4
 30790                           prodl	equ	0xFF3
 30791                           intcon	equ	0xFF2
 30792                           indf0	equ	0xFEF
 30793                           postinc0	equ	0xFEE
 30794                           fsr0h	equ	0xFEA
 30795                           fsr0l	equ	0xFE9
 30796                           wreg	equ	0xFE8
 30797                           indf1	equ	0xFE7
 30798                           postinc1	equ	0xFE6
 30799                           postdec1	equ	0xFE5
 30800                           plusw1	equ	0xFE3
 30801                           fsr1h	equ	0xFE2
 30802                           fsr1l	equ	0xFE1
 30803                           indf2	equ	0xFDF
 30804                           postinc2	equ	0xFDE
 30805                           postdec2	equ	0xFDD
 30806                           plusw2	equ	0xFDB
 30807                           fsr2h	equ	0xFDA
 30808                           fsr2l	equ	0xFD9
 30809                           status	equ	0xFD8
 30810                           
 30811 ;; *************** function _m_interp1_cal_p_t *****************
 30812 ;; Defined at:
 30813 ;;		line 393 in file "src/api/data.c"
 30814 ;; Parameters:    Size  Location     Type
 30815 ;;  tmpx            2   26[BANK0 ] PTR struct .
 30816 ;;		 -> tmpx(24), 
 30817 ;;  xin             2   28[BANK0 ] PTR struct .
 30818 ;;		 -> x_prDiffData(8), 
 30819 ;;  tmpxLen         1   30[BANK0 ] unsigned char 
 30820 ;; Auto vars:     Size  Location     Type
 30821 ;;  pr              4   50[BANK0 ] long 
 30822 ;;  x               4   46[BANK0 ] long 
 30823 ;;  y               4   42[BANK0 ] long 
 30824 ;;  t16             2   54[BANK0 ] int 
 30825 ;;  i               1   56[BANK0 ] unsigned char 
 30826 ;; Return value:  Size  Location     Type
 30827 ;;                  1    wreg      unsigned char 
 30828 ;; Registers used:
 30829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30830 ;; Tracked objects:
 30831 ;;		On entry : 0/0
 30832 ;;		On exit  : 0/0
 30833 ;;		Unchanged: 0/0
 30834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30835 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30836 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30837 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30838 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30839 ;;Total ram usage:       31 bytes
 30840 ;; Hardware stack levels used:    1
 30841 ;; Hardware stack levels required when called:    5
 30842 ;; This function calls:
 30843 ;;		___aldiv
 30844 ;;		___lmul
 30845 ;; This function is called by:
 30846 ;;		_cal_diff_press
 30847 ;; This function uses a non-reentrant model
 30848 ;;
 30849                           
 30850                           	psect	text170
 30851  001AB6                     __ptext170:
 30852                           	opt stack 0
 30853  001AB6                     _m_interp1_cal_p_t:
 30854                           	opt stack 21
 30855                           
 30856                           ;data.c: 395: uint8_t i;
 30857                           ;data.c: 396: int16_t t16;
 30858                           ;data.c: 397: int32_t x,y,pr;
 30859                           ;data.c: 398: t16=xin->tAdcValue;
 30860                           
 30861                           ; BSR set to: 0
 30862                           ;incstack = 0
 30863  001AB6  0100               	movlb	0	; () banked
 30864  001AB8  EE20 F006          	lfsr	2,6
 30865  001ABC  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 30866  001ABE  26D9               	addwf	fsr2l,f,c
 30867  001AC0  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 30868  001AC2  22DA               	addwfc	fsr2h,f,c
 30869  001AC4  CFDE F096          	movff	postinc2,m_interp1_cal_p_t@t16
 30870  001AC8  CFDD F097          	movff	postdec2,m_interp1_cal_p_t@t16+1
 30871                           
 30872                           ; BSR set to: 0
 30873                           ;data.c: 399: for(i=0;i<tmpxLen-2;i++){
 30874  001ACC  0E00               	movlw	0
 30875  001ACE  0100               	movlb	0	; () banked
 30876  001AD0  6F98               	movwf	m_interp1_cal_p_t@i& (0+255),b
 30877  001AD2  D0BA               	goto	l14477
 30878  001AD4                     l14465:
 30879                           
 30880                           ; BSR set to: 0
 30881                           ;data.c: 400: if(tmpx[i].tAdcValue < tmpx[i+1].tAdcValue){
 30882  001AD4  0100               	movlb	0	; () banked
 30883  001AD6  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30884  001AD8  0100               	movlb	0	; () banked
 30885  001ADA  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30886  001ADC  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30887  001ADE  0100               	movlb	0	; () banked
 30888  001AE0  90D8               	bcf	status,0,c
 30889  001AE2  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30890  001AE4  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30891  001AE6  0100               	movlb	0	; () banked
 30892  001AE8  90D8               	bcf	status,0,c
 30893  001AEA  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30894  001AEC  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30895  001AEE  0100               	movlb	0	; () banked
 30896  001AF0  90D8               	bcf	status,0,c
 30897  001AF2  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30898  001AF4  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30899  001AF6  0E08               	movlw	8
 30900  001AF8  0100               	movlb	0	; () banked
 30901  001AFA  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30902  001AFC  0E00               	movlw	0
 30903  001AFE  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30904  001B00  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 30905  001B04  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 30906  001B08  0100               	movlb	0	; () banked
 30907  001B0A  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 30908  001B0C  0100               	movlb	0	; () banked
 30909  001B0E  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30910  001B10  0100               	movlb	0	; () banked
 30911  001B12  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30912  001B14  0100               	movlb	0	; () banked
 30913  001B16  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30914  001B18  0E06               	movlw	6
 30915  001B1A  0100               	movlb	0	; () banked
 30916  001B1C  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30917  001B1E  6ED9               	movwf	fsr2l,c
 30918  001B20  0E00               	movlw	0
 30919  001B22  0100               	movlb	0	; () banked
 30920  001B24  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30921  001B26  6EDA               	movwf	fsr2h,c
 30922  001B28  0100               	movlb	0	; () banked
 30923  001B2A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30924  001B2C  0D08               	mullw	8
 30925  001B2E  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 30926  001B32  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 30927  001B36  50F3               	movf	prodl,w,c
 30928  001B38  0100               	movlb	0	; () banked
 30929  001B3A  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 30930  001B3C  50F4               	movf	prodh,w,c
 30931  001B3E  0100               	movlb	0	; () banked
 30932  001B40  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 30933  001B42  0E06               	movlw	6
 30934  001B44  0100               	movlb	0	; () banked
 30935  001B46  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 30936  001B48  6EE1               	movwf	fsr1l,c
 30937  001B4A  0E00               	movlw	0
 30938  001B4C  0100               	movlb	0	; () banked
 30939  001B4E  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 30940  001B50  6EE2               	movwf	fsr1h,c
 30941  001B52  50DE               	movf	postinc2,w,c
 30942  001B54  5CE6               	subwf	postinc1,w,c
 30943  001B56  50E6               	movf	postinc1,w,c
 30944  001B58  0A80               	xorlw	128
 30945  001B5A  0100               	movlb	0	; () banked
 30946  001B5C  6F89               	movwf	(??_m_interp1_cal_p_t+10)& (0+255),b
 30947  001B5E  50DE               	movf	postinc2,w,c
 30948  001B60  0A80               	xorlw	128
 30949  001B62  0100               	movlb	0	; () banked
 30950  001B64  5989               	subwfb	(??_m_interp1_cal_p_t+10)& (0+255),w,b
 30951  001B66  B0D8               	btfsc	status,0,c
 30952  001B68  D039               	goto	l14471
 30953                           
 30954                           ; BSR set to: 0
 30955                           ;data.c: 401: if(t16 <= tmpx[i+1].tAdcValue)break;
 30956  001B6A  0100               	movlb	0	; () banked
 30957  001B6C  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30958  001B6E  0100               	movlb	0	; () banked
 30959  001B70  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30960  001B72  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30961  001B74  0100               	movlb	0	; () banked
 30962  001B76  90D8               	bcf	status,0,c
 30963  001B78  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30964  001B7A  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30965  001B7C  0100               	movlb	0	; () banked
 30966  001B7E  90D8               	bcf	status,0,c
 30967  001B80  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30968  001B82  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30969  001B84  0100               	movlb	0	; () banked
 30970  001B86  90D8               	bcf	status,0,c
 30971  001B88  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30972  001B8A  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30973  001B8C  0E08               	movlw	8
 30974  001B8E  0100               	movlb	0	; () banked
 30975  001B90  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30976  001B92  0E00               	movlw	0
 30977  001B94  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30978  001B96  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 30979  001B9A  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 30980  001B9E  0100               	movlb	0	; () banked
 30981  001BA0  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 30982  001BA2  0100               	movlb	0	; () banked
 30983  001BA4  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30984  001BA6  0100               	movlb	0	; () banked
 30985  001BA8  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30986  001BAA  0100               	movlb	0	; () banked
 30987  001BAC  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30988  001BAE  0E06               	movlw	6
 30989  001BB0  0100               	movlb	0	; () banked
 30990  001BB2  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30991  001BB4  6ED9               	movwf	fsr2l,c
 30992  001BB6  0E00               	movlw	0
 30993  001BB8  0100               	movlb	0	; () banked
 30994  001BBA  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30995  001BBC  6EDA               	movwf	fsr2h,c
 30996  001BBE  0100               	movlb	0	; () banked
 30997  001BC0  5196               	movf	m_interp1_cal_p_t@t16& (0+255),w,b
 30998  001BC2  5CDE               	subwf	postinc2,w,c
 30999  001BC4  50DE               	movf	postinc2,w,c
 31000  001BC6  0A80               	xorlw	128
 31001  001BC8  0100               	movlb	0	; () banked
 31002  001BCA  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 31003  001BCC  0100               	movlb	0	; () banked
 31004  001BCE  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 31005  001BD0  0A80               	xorlw	128
 31006  001BD2  0100               	movlb	0	; () banked
 31007  001BD4  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31008  001BD6  B0D8               	btfsc	status,0,c
 31009  001BD8  D05F               	goto	l14479
 31010  001BDA  D034               	goto	l14475
 31011  001BDC                     l14471:
 31012                           
 31013                           ; BSR set to: 0
 31014                           ;data.c: 403: if(t16 >= tmpx[i+1].tAdcValue)break;
 31015  001BDC  0100               	movlb	0	; () banked
 31016  001BDE  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31017  001BE0  0100               	movlb	0	; () banked
 31018  001BE2  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31019  001BE4  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31020  001BE6  0100               	movlb	0	; () banked
 31021  001BE8  90D8               	bcf	status,0,c
 31022  001BEA  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31023  001BEC  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31024  001BEE  0100               	movlb	0	; () banked
 31025  001BF0  90D8               	bcf	status,0,c
 31026  001BF2  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31027  001BF4  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31028  001BF6  0100               	movlb	0	; () banked
 31029  001BF8  90D8               	bcf	status,0,c
 31030  001BFA  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31031  001BFC  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31032  001BFE  0E08               	movlw	8
 31033  001C00  0100               	movlb	0	; () banked
 31034  001C02  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31035  001C04  0E00               	movlw	0
 31036  001C06  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31037  001C08  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 31038  001C0C  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 31039  001C10  0100               	movlb	0	; () banked
 31040  001C12  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31041  001C14  0100               	movlb	0	; () banked
 31042  001C16  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31043  001C18  0100               	movlb	0	; () banked
 31044  001C1A  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31045  001C1C  0100               	movlb	0	; () banked
 31046  001C1E  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31047  001C20  0E06               	movlw	6
 31048  001C22  0100               	movlb	0	; () banked
 31049  001C24  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31050  001C26  6ED9               	movwf	fsr2l,c
 31051  001C28  0E00               	movlw	0
 31052  001C2A  0100               	movlb	0	; () banked
 31053  001C2C  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31054  001C2E  6EDA               	movwf	fsr2h,c
 31055  001C30  50DE               	movf	postinc2,w,c
 31056  001C32  0100               	movlb	0	; () banked
 31057  001C34  5D96               	subwf	m_interp1_cal_p_t@t16& (0+255),w,b
 31058  001C36  0100               	movlb	0	; () banked
 31059  001C38  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 31060  001C3A  0A80               	xorlw	128
 31061  001C3C  0100               	movlb	0	; () banked
 31062  001C3E  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 31063  001C40  50DE               	movf	postinc2,w,c
 31064  001C42  D7C6               	goto	L25
 31065  001C44                     l14475:
 31066                           
 31067                           ; BSR set to: 0
 31068  001C44  0100               	movlb	0	; () banked
 31069  001C46  2B98               	incf	m_interp1_cal_p_t@i& (0+255),f,b
 31070  001C48                     l14477:
 31071                           
 31072                           ; BSR set to: 0
 31073  001C48  0EFE               	movlw	254
 31074  001C4A  0100               	movlb	0	; () banked
 31075  001C4C  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31076  001C4E  0EFF               	movlw	255
 31077  001C50  0100               	movlb	0	; () banked
 31078  001C52  6F80               	movwf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31079  001C54  0100               	movlb	0	; () banked
 31080  001C56  517E               	movf	m_interp1_cal_p_t@tmpxLen& (0+255),w,b
 31081  001C58  0100               	movlb	0	; () banked
 31082  001C5A  6F81               	movwf	(??_m_interp1_cal_p_t+2)& (0+255),b
 31083  001C5C  6B82               	clrf	(??_m_interp1_cal_p_t+3)& (0+255),b
 31084  001C5E  0100               	movlb	0	; () banked
 31085  001C60  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31086  001C62  0100               	movlb	0	; () banked
 31087  001C64  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31088  001C66  0100               	movlb	0	; () banked
 31089  001C68  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31090  001C6A  0100               	movlb	0	; () banked
 31091  001C6C  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31092  001C6E  0100               	movlb	0	; () banked
 31093  001C70  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31094  001C72  0100               	movlb	0	; () banked
 31095  001C74  6F83               	movwf	(??_m_interp1_cal_p_t+4)& (0+255),b
 31096  001C76  6B84               	clrf	(??_m_interp1_cal_p_t+5)& (0+255),b
 31097  001C78  0100               	movlb	0	; () banked
 31098  001C7A  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31099  001C7C  0100               	movlb	0	; () banked
 31100  001C7E  5D83               	subwf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 31101  001C80  0100               	movlb	0	; () banked
 31102  001C82  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 31103  001C84  0A80               	xorlw	128
 31104  001C86  0100               	movlb	0	; () banked
 31105  001C88  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 31106  001C8A  0100               	movlb	0	; () banked
 31107  001C8C  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31108  001C8E  0A80               	xorlw	128
 31109  001C90  0100               	movlb	0	; () banked
 31110  001C92  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31111  001C94  A0D8               	btfss	status,0,c
 31112  001C96  D71E               	goto	l14465
 31113  001C98                     l14479:
 31114                           
 31115                           ; BSR set to: 0
 31116                           ;data.c: 404: }
 31117                           ;data.c: 405: }
 31118                           ;data.c: 406: pr=tmpx[i].pValue;
 31119  001C98  0100               	movlb	0	; () banked
 31120  001C9A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31121  001C9C  0D08               	mullw	8
 31122  001C9E  50F3               	movf	prodl,w,c
 31123  001CA0  0100               	movlb	0	; () banked
 31124  001CA2  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 31125  001CA4  6ED9               	movwf	fsr2l,c
 31126  001CA6  50F4               	movf	prodh,w,c
 31127  001CA8  0100               	movlb	0	; () banked
 31128  001CAA  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 31129  001CAC  6EDA               	movwf	fsr2h,c
 31130  001CAE  CFDE F092          	movff	postinc2,m_interp1_cal_p_t@pr
 31131  001CB2  CFDE F093          	movff	postinc2,m_interp1_cal_p_t@pr+1
 31132  001CB6  CFDE F094          	movff	postinc2,m_interp1_cal_p_t@pr+2
 31133  001CBA  CFDE F095          	movff	postinc2,m_interp1_cal_p_t@pr+3
 31134                           
 31135                           ;data.c: 407: y=(tmpx[i+1].pValue-tmpx[i].pValue);
 31136  001CBE  0100               	movlb	0	; () banked
 31137  001CC0  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31138  001CC2  0100               	movlb	0	; () banked
 31139  001CC4  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31140  001CC6  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31141  001CC8  0100               	movlb	0	; () banked
 31142  001CCA  90D8               	bcf	status,0,c
 31143  001CCC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31144  001CCE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31145  001CD0  0100               	movlb	0	; () banked
 31146  001CD2  90D8               	bcf	status,0,c
 31147  001CD4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31148  001CD6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31149  001CD8  0100               	movlb	0	; () banked
 31150  001CDA  90D8               	bcf	status,0,c
 31151  001CDC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31152  001CDE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31153  001CE0  0E08               	movlw	8
 31154  001CE2  0100               	movlb	0	; () banked
 31155  001CE4  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31156  001CE6  0E00               	movlw	0
 31157  001CE8  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31158  001CEA  0100               	movlb	0	; () banked
 31159  001CEC  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31160  001CEE  0100               	movlb	0	; () banked
 31161  001CF0  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 31162  001CF2  6ED9               	movwf	fsr2l,c
 31163  001CF4  0100               	movlb	0	; () banked
 31164  001CF6  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31165  001CF8  0100               	movlb	0	; () banked
 31166  001CFA  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 31167  001CFC  6EDA               	movwf	fsr2h,c
 31168  001CFE  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 31169  001D02  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_t+3
 31170  001D06  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 31171  001D0A  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_t+5
 31172  001D0E  0100               	movlb	0	; () banked
 31173  001D10  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31174  001D12  0D08               	mullw	8
 31175  001D14  50F3               	movf	prodl,w,c
 31176  001D16  0100               	movlb	0	; () banked
 31177  001D18  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 31178  001D1A  6ED9               	movwf	fsr2l,c
 31179  001D1C  50F4               	movf	prodh,w,c
 31180  001D1E  0100               	movlb	0	; () banked
 31181  001D20  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 31182  001D22  6EDA               	movwf	fsr2h,c
 31183  001D24  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_t+6
 31184  001D28  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_t+7
 31185  001D2C  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 31186  001D30  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_t+9
 31187  001D34  0100               	movlb	0	; () banked
 31188  001D36  1F85               	comf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 31189  001D38  1F86               	comf	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 31190  001D3A  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31191  001D3C  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31192  001D3E  2B85               	incf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 31193  001D40  0E00               	movlw	0
 31194  001D42  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 31195  001D44  2387               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31196  001D46  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31197  001D48  0100               	movlb	0	; () banked
 31198  001D4A  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31199  001D4C  0100               	movlb	0	; () banked
 31200  001D4E  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31201  001D50  0100               	movlb	0	; () banked
 31202  001D52  6F8A               	movwf	m_interp1_cal_p_t@y& (0+255),b
 31203  001D54  0100               	movlb	0	; () banked
 31204  001D56  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31205  001D58  0100               	movlb	0	; () banked
 31206  001D5A  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 31207  001D5C  0100               	movlb	0	; () banked
 31208  001D5E  6F8B               	movwf	(m_interp1_cal_p_t@y+1)& (0+255),b
 31209  001D60  0100               	movlb	0	; () banked
 31210  001D62  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 31211  001D64  0100               	movlb	0	; () banked
 31212  001D66  2187               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),w,b
 31213  001D68  0100               	movlb	0	; () banked
 31214  001D6A  6F8C               	movwf	(m_interp1_cal_p_t@y+2)& (0+255),b
 31215  001D6C  0100               	movlb	0	; () banked
 31216  001D6E  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 31217  001D70  0100               	movlb	0	; () banked
 31218  001D72  2188               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),w,b
 31219  001D74  0100               	movlb	0	; () banked
 31220  001D76  6F8D               	movwf	(m_interp1_cal_p_t@y+3)& (0+255),b
 31221                           
 31222                           ;data.c: 408: x=(int32_t)(tmpx[i+1].tAdcValue-tmpx[i].tAdcValue);
 31223  001D78  0100               	movlb	0	; () banked
 31224  001D7A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31225  001D7C  0100               	movlb	0	; () banked
 31226  001D7E  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31227  001D80  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31228  001D82  0100               	movlb	0	; () banked
 31229  001D84  90D8               	bcf	status,0,c
 31230  001D86  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31231  001D88  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31232  001D8A  0100               	movlb	0	; () banked
 31233  001D8C  90D8               	bcf	status,0,c
 31234  001D8E  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31235  001D90  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31236  001D92  0100               	movlb	0	; () banked
 31237  001D94  90D8               	bcf	status,0,c
 31238  001D96  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31239  001D98  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31240  001D9A  0E08               	movlw	8
 31241  001D9C  0100               	movlb	0	; () banked
 31242  001D9E  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31243  001DA0  0E00               	movlw	0
 31244  001DA2  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31245  001DA4  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 31246  001DA8  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 31247  001DAC  0100               	movlb	0	; () banked
 31248  001DAE  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31249  001DB0  0100               	movlb	0	; () banked
 31250  001DB2  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31251  001DB4  0100               	movlb	0	; () banked
 31252  001DB6  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31253  001DB8  0100               	movlb	0	; () banked
 31254  001DBA  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31255  001DBC  0E06               	movlw	6
 31256  001DBE  0100               	movlb	0	; () banked
 31257  001DC0  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31258  001DC2  6ED9               	movwf	fsr2l,c
 31259  001DC4  0E00               	movlw	0
 31260  001DC6  0100               	movlb	0	; () banked
 31261  001DC8  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31262  001DCA  6EDA               	movwf	fsr2h,c
 31263  001DCC  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 31264  001DD0  CFDD F084          	movff	postdec2,??_m_interp1_cal_p_t+5
 31265  001DD4  0100               	movlb	0	; () banked
 31266  001DD6  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31267  001DD8  0D08               	mullw	8
 31268  001DDA  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 31269  001DDE  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 31270  001DE2  50F3               	movf	prodl,w,c
 31271  001DE4  0100               	movlb	0	; () banked
 31272  001DE6  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 31273  001DE8  50F4               	movf	prodh,w,c
 31274  001DEA  0100               	movlb	0	; () banked
 31275  001DEC  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 31276  001DEE  0E06               	movlw	6
 31277  001DF0  0100               	movlb	0	; () banked
 31278  001DF2  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31279  001DF4  6ED9               	movwf	fsr2l,c
 31280  001DF6  0E00               	movlw	0
 31281  001DF8  0100               	movlb	0	; () banked
 31282  001DFA  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 31283  001DFC  6EDA               	movwf	fsr2h,c
 31284  001DFE  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 31285  001E02  CFDD F088          	movff	postdec2,??_m_interp1_cal_p_t+9
 31286  001E06  0100               	movlb	0	; () banked
 31287  001E08  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31288  001E0A  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31289  001E0C  4B87               	infsnz	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31290  001E0E  2B88               	incf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31291  001E10  0100               	movlb	0	; () banked
 31292  001E12  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 31293  001E14  0100               	movlb	0	; () banked
 31294  001E16  2787               	addwf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31295  001E18  0100               	movlb	0	; () banked
 31296  001E1A  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 31297  001E1C  0100               	movlb	0	; () banked
 31298  001E1E  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31299  001E20  C087  F08E         	movff	??_m_interp1_cal_p_t+8,m_interp1_cal_p_t@x
 31300  001E24  C088  F08F         	movff	??_m_interp1_cal_p_t+9,m_interp1_cal_p_t@x+1
 31301  001E28  0100               	movlb	0	; () banked
 31302  001E2A  0E00               	movlw	0
 31303  001E2C  BF8F               	btfsc	(m_interp1_cal_p_t@x+1)& (0+255),7,b
 31304  001E2E  0EFF               	movlw	-1
 31305  001E30  6F90               	movwf	(m_interp1_cal_p_t@x+2)& (0+255),b
 31306  001E32  6F91               	movwf	(m_interp1_cal_p_t@x+3)& (0+255),b
 31307                           
 31308                           ; BSR set to: 0
 31309                           ;data.c: 409: if(x!=0){
 31310  001E34  0100               	movlb	0	; () banked
 31311  001E36  518E               	movf	m_interp1_cal_p_t@x& (0+255),w,b
 31312  001E38  0100               	movlb	0	; () banked
 31313  001E3A  118F               	iorwf	(m_interp1_cal_p_t@x+1)& (0+255),w,b
 31314  001E3C  0100               	movlb	0	; () banked
 31315  001E3E  1190               	iorwf	(m_interp1_cal_p_t@x+2)& (0+255),w,b
 31316  001E40  0100               	movlb	0	; () banked
 31317  001E42  1191               	iorwf	(m_interp1_cal_p_t@x+3)& (0+255),w,b
 31318  001E44  B4D8               	btfsc	status,2,c
 31319  001E46  D064               	goto	l14485
 31320                           
 31321                           ; BSR set to: 0
 31322                           ;data.c: 411: pr = pr + y*((int32_t)(t16 - tmpx[i].tAdcValue))/x;
 31323  001E48  0100               	movlb	0	; () banked
 31324  001E4A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31325  001E4C  0D08               	mullw	8
 31326  001E4E  C07A  F07F         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t
 31327  001E52  C07B  F080         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+1
 31328  001E56  50F3               	movf	prodl,w,c
 31329  001E58  0100               	movlb	0	; () banked
 31330  001E5A  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31331  001E5C  50F4               	movf	prodh,w,c
 31332  001E5E  0100               	movlb	0	; () banked
 31333  001E60  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31334  001E62  0E06               	movlw	6
 31335  001E64  0100               	movlb	0	; () banked
 31336  001E66  257F               	addwf	??_m_interp1_cal_p_t& (0+255),w,b
 31337  001E68  6ED9               	movwf	fsr2l,c
 31338  001E6A  0E00               	movlw	0
 31339  001E6C  0100               	movlb	0	; () banked
 31340  001E6E  2180               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31341  001E70  6EDA               	movwf	fsr2h,c
 31342  001E72  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 31343  001E76  CFDD F082          	movff	postdec2,??_m_interp1_cal_p_t+3
 31344  001E7A  0100               	movlb	0	; () banked
 31345  001E7C  1F81               	comf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31346  001E7E  1F82               	comf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31347  001E80  4B81               	infsnz	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31348  001E82  2B82               	incf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31349  001E84  0100               	movlb	0	; () banked
 31350  001E86  5196               	movf	m_interp1_cal_p_t@t16& (0+255),w,b
 31351  001E88  0100               	movlb	0	; () banked
 31352  001E8A  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31353  001E8C  0100               	movlb	0	; () banked
 31354  001E8E  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 31355  001E90  0100               	movlb	0	; () banked
 31356  001E92  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31357  001E94  C081  F060         	movff	??_m_interp1_cal_p_t+2,___lmul@multiplier
 31358  001E98  C082  F061         	movff	??_m_interp1_cal_p_t+3,___lmul@multiplier+1
 31359  001E9C  0100               	movlb	0	; () banked
 31360  001E9E  0E00               	movlw	0
 31361  001EA0  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 31362  001EA2  0EFF               	movlw	-1
 31363  001EA4  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 31364  001EA6  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 31365  001EA8  C08A  F064         	movff	m_interp1_cal_p_t@y,___lmul@multiplicand
 31366  001EAC  C08B  F065         	movff	m_interp1_cal_p_t@y+1,___lmul@multiplicand+1
 31367  001EB0  C08C  F066         	movff	m_interp1_cal_p_t@y+2,___lmul@multiplicand+2
 31368  001EB4  C08D  F067         	movff	m_interp1_cal_p_t@y+3,___lmul@multiplicand+3
 31369  001EB8  ECBD  F043         	call	___lmul	;wreg free
 31370  001EBC  C060  F06C         	movff	?___lmul,___aldiv@dividend
 31371  001EC0  C061  F06D         	movff	?___lmul+1,___aldiv@dividend+1
 31372  001EC4  C062  F06E         	movff	?___lmul+2,___aldiv@dividend+2
 31373  001EC8  C063  F06F         	movff	?___lmul+3,___aldiv@dividend+3
 31374  001ECC  C08E  F070         	movff	m_interp1_cal_p_t@x,___aldiv@divisor
 31375  001ED0  C08F  F071         	movff	m_interp1_cal_p_t@x+1,___aldiv@divisor+1
 31376  001ED4  C090  F072         	movff	m_interp1_cal_p_t@x+2,___aldiv@divisor+2
 31377  001ED8  C091  F073         	movff	m_interp1_cal_p_t@x+3,___aldiv@divisor+3
 31378  001EDC  EC62  F02D         	call	___aldiv	;wreg free
 31379  001EE0  0100               	movlb	0	; () banked
 31380  001EE2  5192               	movf	m_interp1_cal_p_t@pr& (0+255),w,b
 31381  001EE4  0100               	movlb	0	; () banked
 31382  001EE6  256C               	addwf	?___aldiv& (0+255),w,b
 31383  001EE8  0100               	movlb	0	; () banked
 31384  001EEA  6F92               	movwf	m_interp1_cal_p_t@pr& (0+255),b
 31385  001EEC  0100               	movlb	0	; () banked
 31386  001EEE  5193               	movf	(m_interp1_cal_p_t@pr+1)& (0+255),w,b
 31387  001EF0  0100               	movlb	0	; () banked
 31388  001EF2  216D               	addwfc	(?___aldiv+1)& (0+255),w,b
 31389  001EF4  0100               	movlb	0	; () banked
 31390  001EF6  6F93               	movwf	(m_interp1_cal_p_t@pr+1)& (0+255),b
 31391  001EF8  0100               	movlb	0	; () banked
 31392  001EFA  5194               	movf	(m_interp1_cal_p_t@pr+2)& (0+255),w,b
 31393  001EFC  0100               	movlb	0	; () banked
 31394  001EFE  216E               	addwfc	(?___aldiv+2)& (0+255),w,b
 31395  001F00  0100               	movlb	0	; () banked
 31396  001F02  6F94               	movwf	(m_interp1_cal_p_t@pr+2)& (0+255),b
 31397  001F04  0100               	movlb	0	; () banked
 31398  001F06  5195               	movf	(m_interp1_cal_p_t@pr+3)& (0+255),w,b
 31399  001F08  0100               	movlb	0	; () banked
 31400  001F0A  216F               	addwfc	(?___aldiv+3)& (0+255),w,b
 31401  001F0C  0100               	movlb	0	; () banked
 31402  001F0E  6F95               	movwf	(m_interp1_cal_p_t@pr+3)& (0+255),b
 31403  001F10                     l14485:
 31404                           
 31405                           ; BSR set to: 0
 31406                           ;data.c: 412: }
 31407                           ;data.c: 413: xin->pValue=pr;
 31408  001F10  C07C  FFD9         	movff	m_interp1_cal_p_t@xin,fsr2l
 31409  001F14  C07D  FFDA         	movff	m_interp1_cal_p_t@xin+1,fsr2h
 31410  001F18  C092  FFDE         	movff	m_interp1_cal_p_t@pr,postinc2
 31411  001F1C  C093  FFDE         	movff	m_interp1_cal_p_t@pr+1,postinc2
 31412  001F20  C094  FFDE         	movff	m_interp1_cal_p_t@pr+2,postinc2
 31413  001F24  C095  FFDE         	movff	m_interp1_cal_p_t@pr+3,postinc2
 31414  001F28  0012               	return	
 31415  001F2A                     __end_of_m_interp1_cal_p_t:
 31416                           	opt stack 0
 31417                           tosu	equ	0xFFF
 31418                           tosh	equ	0xFFE
 31419                           tosl	equ	0xFFD
 31420                           pclath	equ	0xFFA
 31421                           tblptru	equ	0xFF8
 31422                           tblptrh	equ	0xFF7
 31423                           tblptrl	equ	0xFF6
 31424                           tablat	equ	0xFF5
 31425                           prodh	equ	0xFF4
 31426                           prodl	equ	0xFF3
 31427                           intcon	equ	0xFF2
 31428                           indf0	equ	0xFEF
 31429                           postinc0	equ	0xFEE
 31430                           fsr0h	equ	0xFEA
 31431                           fsr0l	equ	0xFE9
 31432                           wreg	equ	0xFE8
 31433                           indf1	equ	0xFE7
 31434                           postinc1	equ	0xFE6
 31435                           postdec1	equ	0xFE5
 31436                           plusw1	equ	0xFE3
 31437                           fsr1h	equ	0xFE2
 31438                           fsr1l	equ	0xFE1
 31439                           indf2	equ	0xFDF
 31440                           postinc2	equ	0xFDE
 31441                           postdec2	equ	0xFDD
 31442                           plusw2	equ	0xFDB
 31443                           fsr2h	equ	0xFDA
 31444                           fsr2l	equ	0xFD9
 31445                           status	equ	0xFD8
 31446                           
 31447 ;; *************** function ___lmul *****************
 31448 ;; Defined at:
 31449 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 31450 ;; Parameters:    Size  Location     Type
 31451 ;;  multiplier      4    0[BANK0 ] unsigned long 
 31452 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 31453 ;; Auto vars:     Size  Location     Type
 31454 ;;  product         4    8[BANK0 ] unsigned long 
 31455 ;; Return value:  Size  Location     Type
 31456 ;;                  4    0[BANK0 ] unsigned long 
 31457 ;; Registers used:
 31458 ;;		wreg, status,2, status,0
 31459 ;; Tracked objects:
 31460 ;;		On entry : 0/0
 31461 ;;		On exit  : 0/0
 31462 ;;		Unchanged: 0/0
 31463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31464 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31465 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31467 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31468 ;;Total ram usage:       12 bytes
 31469 ;; Hardware stack levels used:    1
 31470 ;; Hardware stack levels required when called:    4
 31471 ;; This function calls:
 31472 ;;		Nothing
 31473 ;; This function is called by:
 31474 ;;		_m_interp1_cal_p_v
 31475 ;;		_m_interp1_cal_p_t
 31476 ;;		___mflot32_2_int32
 31477 ;;		_cal_pt100_temperature
 31478 ;;		_m_math_pow
 31479 ;; This function uses a non-reentrant model
 31480 ;;
 31481                           
 31482                           	psect	text171
 31483  00877A                     __ptext171:
 31484                           	opt stack 0
 31485  00877A                     ___lmul:
 31486                           	opt stack 22
 31487                           
 31488                           ; BSR set to: 0
 31489                           ;incstack = 0
 31490  00877A  0E00               	movlw	0
 31491  00877C  0100               	movlb	0	; () banked
 31492  00877E  6F68               	movwf	___lmul@product& (0+255),b
 31493  008780  0E00               	movlw	0
 31494  008782  6F69               	movwf	(___lmul@product+1)& (0+255),b
 31495  008784  0E00               	movlw	0
 31496  008786  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 31497  008788  0E00               	movlw	0
 31498  00878A  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 31499  00878C                     l14169:
 31500                           
 31501                           ; BSR set to: 0
 31502  00878C  0100               	movlb	0	; () banked
 31503  00878E  A160               	btfss	___lmul@multiplier& (0+255),0,b
 31504  008790  D010               	goto	l14173
 31505                           
 31506                           ; BSR set to: 0
 31507  008792  0100               	movlb	0	; () banked
 31508  008794  5164               	movf	___lmul@multiplicand& (0+255),w,b
 31509  008796  0100               	movlb	0	; () banked
 31510  008798  2768               	addwf	___lmul@product& (0+255),f,b
 31511  00879A  0100               	movlb	0	; () banked
 31512  00879C  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 31513  00879E  0100               	movlb	0	; () banked
 31514  0087A0  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 31515  0087A2  0100               	movlb	0	; () banked
 31516  0087A4  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 31517  0087A6  0100               	movlb	0	; () banked
 31518  0087A8  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 31519  0087AA  0100               	movlb	0	; () banked
 31520  0087AC  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 31521  0087AE  0100               	movlb	0	; () banked
 31522  0087B0  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 31523  0087B2                     l14173:
 31524                           
 31525                           ; BSR set to: 0
 31526  0087B2  0100               	movlb	0	; () banked
 31527  0087B4  90D8               	bcf	status,0,c
 31528  0087B6  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 31529  0087B8  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 31530  0087BA  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 31531  0087BC  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 31532                           
 31533                           ; BSR set to: 0
 31534  0087BE  0100               	movlb	0	; () banked
 31535  0087C0  90D8               	bcf	status,0,c
 31536  0087C2  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 31537  0087C4  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 31538  0087C6  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 31539  0087C8  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 31540  0087CA  0100               	movlb	0	; () banked
 31541  0087CC  5160               	movf	___lmul@multiplier& (0+255),w,b
 31542  0087CE  0100               	movlb	0	; () banked
 31543  0087D0  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 31544  0087D2  0100               	movlb	0	; () banked
 31545  0087D4  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 31546  0087D6  0100               	movlb	0	; () banked
 31547  0087D8  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 31548  0087DA  A4D8               	btfss	status,2,c
 31549  0087DC  D7D7               	goto	l14169
 31550                           
 31551                           ; BSR set to: 0
 31552  0087DE  C068  F060         	movff	___lmul@product,?___lmul
 31553  0087E2  C069  F061         	movff	___lmul@product+1,?___lmul+1
 31554  0087E6  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 31555  0087EA  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 31556                           
 31557                           ; BSR set to: 0
 31558  0087EE  0012               	return		;funcret
 31559  0087F0                     __end_of___lmul:
 31560                           	opt stack 0
 31561                           tosu	equ	0xFFF
 31562                           tosh	equ	0xFFE
 31563                           tosl	equ	0xFFD
 31564                           pclath	equ	0xFFA
 31565                           tblptru	equ	0xFF8
 31566                           tblptrh	equ	0xFF7
 31567                           tblptrl	equ	0xFF6
 31568                           tablat	equ	0xFF5
 31569                           prodh	equ	0xFF4
 31570                           prodl	equ	0xFF3
 31571                           intcon	equ	0xFF2
 31572                           indf0	equ	0xFEF
 31573                           postinc0	equ	0xFEE
 31574                           fsr0h	equ	0xFEA
 31575                           fsr0l	equ	0xFE9
 31576                           wreg	equ	0xFE8
 31577                           indf1	equ	0xFE7
 31578                           postinc1	equ	0xFE6
 31579                           postdec1	equ	0xFE5
 31580                           plusw1	equ	0xFE3
 31581                           fsr1h	equ	0xFE2
 31582                           fsr1l	equ	0xFE1
 31583                           indf2	equ	0xFDF
 31584                           postinc2	equ	0xFDE
 31585                           postdec2	equ	0xFDD
 31586                           plusw2	equ	0xFDB
 31587                           fsr2h	equ	0xFDA
 31588                           fsr2l	equ	0xFD9
 31589                           status	equ	0xFD8
 31590                           
 31591 ;; *************** function ___aldiv *****************
 31592 ;; Defined at:
 31593 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
 31594 ;; Parameters:    Size  Location     Type
 31595 ;;  dividend        4   12[BANK0 ] long 
 31596 ;;  divisor         4   16[BANK0 ] long 
 31597 ;; Auto vars:     Size  Location     Type
 31598 ;;  quotient        4   22[BANK0 ] long 
 31599 ;;  sign            1   21[BANK0 ] unsigned char 
 31600 ;;  counter         1   20[BANK0 ] unsigned char 
 31601 ;; Return value:  Size  Location     Type
 31602 ;;                  4   12[BANK0 ] long 
 31603 ;; Registers used:
 31604 ;;		wreg, status,2, status,0
 31605 ;; Tracked objects:
 31606 ;;		On entry : 0/0
 31607 ;;		On exit  : 0/0
 31608 ;;		Unchanged: 0/0
 31609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31611 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31613 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31614 ;;Total ram usage:       14 bytes
 31615 ;; Hardware stack levels used:    1
 31616 ;; Hardware stack levels required when called:    4
 31617 ;; This function calls:
 31618 ;;		Nothing
 31619 ;; This function is called by:
 31620 ;;		_m_interp1_cal_p_v
 31621 ;;		_m_interp1_cal_p_t
 31622 ;;		___x_sample_fliter
 31623 ;;		___x_sample_fifo
 31624 ;;		_cal_pt100_temperature
 31625 ;;		_m_int_2_str
 31626 ;; This function uses a non-reentrant model
 31627 ;;
 31628                           
 31629                           	psect	text172
 31630  005AC4                     __ptext172:
 31631                           	opt stack 0
 31632  005AC4                     ___aldiv:
 31633                           	opt stack 22
 31634                           
 31635                           ; BSR set to: 0
 31636                           ;incstack = 0
 31637  005AC4  0E00               	movlw	0
 31638  005AC6  0100               	movlb	0	; () banked
 31639  005AC8  6F75               	movwf	___aldiv@sign& (0+255),b
 31640                           
 31641                           ; BSR set to: 0
 31642  005ACA  0100               	movlb	0	; () banked
 31643  005ACC  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31644  005ACE  D00C               	goto	l14185
 31645                           
 31646                           ; BSR set to: 0
 31647  005AD0  0100               	movlb	0	; () banked
 31648  005AD2  1F73               	comf	(___aldiv@divisor+3)& (0+255),f,b
 31649  005AD4  1F72               	comf	(___aldiv@divisor+2)& (0+255),f,b
 31650  005AD6  1F71               	comf	(___aldiv@divisor+1)& (0+255),f,b
 31651  005AD8  6D70               	negf	___aldiv@divisor& (0+255),b
 31652  005ADA  0E00               	movlw	0
 31653  005ADC  2371               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 31654  005ADE  2372               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 31655  005AE0  2373               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 31656                           
 31657                           ; BSR set to: 0
 31658  005AE2  0E01               	movlw	1
 31659  005AE4  0100               	movlb	0	; () banked
 31660  005AE6  6F75               	movwf	___aldiv@sign& (0+255),b
 31661  005AE8                     l14185:
 31662                           
 31663                           ; BSR set to: 0
 31664  005AE8  0100               	movlb	0	; () banked
 31665  005AEA  AF6F               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 31666  005AEC  D00C               	goto	l14191
 31667                           
 31668                           ; BSR set to: 0
 31669  005AEE  0100               	movlb	0	; () banked
 31670  005AF0  1F6F               	comf	(___aldiv@dividend+3)& (0+255),f,b
 31671  005AF2  1F6E               	comf	(___aldiv@dividend+2)& (0+255),f,b
 31672  005AF4  1F6D               	comf	(___aldiv@dividend+1)& (0+255),f,b
 31673  005AF6  6D6C               	negf	___aldiv@dividend& (0+255),b
 31674  005AF8  0E00               	movlw	0
 31675  005AFA  236D               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 31676  005AFC  236E               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 31677  005AFE  236F               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 31678                           
 31679                           ; BSR set to: 0
 31680  005B00  0E01               	movlw	1
 31681  005B02  0100               	movlb	0	; () banked
 31682  005B04  1B75               	xorwf	___aldiv@sign& (0+255),f,b
 31683  005B06                     l14191:
 31684                           
 31685                           ; BSR set to: 0
 31686  005B06  0E00               	movlw	0
 31687  005B08  0100               	movlb	0	; () banked
 31688  005B0A  6F76               	movwf	___aldiv@quotient& (0+255),b
 31689  005B0C  0E00               	movlw	0
 31690  005B0E  6F77               	movwf	(___aldiv@quotient+1)& (0+255),b
 31691  005B10  0E00               	movlw	0
 31692  005B12  6F78               	movwf	(___aldiv@quotient+2)& (0+255),b
 31693  005B14  0E00               	movlw	0
 31694  005B16  6F79               	movwf	(___aldiv@quotient+3)& (0+255),b
 31695                           
 31696                           ; BSR set to: 0
 31697  005B18  0100               	movlb	0	; () banked
 31698  005B1A  5170               	movf	___aldiv@divisor& (0+255),w,b
 31699  005B1C  0100               	movlb	0	; () banked
 31700  005B1E  1171               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 31701  005B20  0100               	movlb	0	; () banked
 31702  005B22  1172               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 31703  005B24  0100               	movlb	0	; () banked
 31704  005B26  1173               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 31705  005B28  B4D8               	btfsc	status,2,c
 31706  005B2A  D042               	goto	l14213
 31707                           
 31708                           ; BSR set to: 0
 31709  005B2C  0E01               	movlw	1
 31710  005B2E  0100               	movlb	0	; () banked
 31711  005B30  6F74               	movwf	___aldiv@counter& (0+255),b
 31712  005B32  D008               	goto	l14199
 31713  005B34                     l14197:
 31714                           
 31715                           ; BSR set to: 0
 31716  005B34  0100               	movlb	0	; () banked
 31717  005B36  90D8               	bcf	status,0,c
 31718  005B38  3770               	rlcf	___aldiv@divisor& (0+255),f,b
 31719  005B3A  3771               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 31720  005B3C  3772               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 31721  005B3E  3773               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 31722  005B40  0100               	movlb	0	; () banked
 31723  005B42  2B74               	incf	___aldiv@counter& (0+255),f,b
 31724  005B44                     l14199:
 31725                           
 31726                           ; BSR set to: 0
 31727  005B44  0100               	movlb	0	; () banked
 31728  005B46  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31729  005B48  D7F5               	goto	l14197
 31730  005B4A                     l14201:
 31731                           
 31732                           ; BSR set to: 0
 31733  005B4A  0100               	movlb	0	; () banked
 31734  005B4C  90D8               	bcf	status,0,c
 31735  005B4E  3776               	rlcf	___aldiv@quotient& (0+255),f,b
 31736  005B50  3777               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 31737  005B52  3778               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 31738  005B54  3779               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 31739                           
 31740                           ; BSR set to: 0
 31741  005B56  0100               	movlb	0	; () banked
 31742  005B58  5170               	movf	___aldiv@divisor& (0+255),w,b
 31743  005B5A  0100               	movlb	0	; () banked
 31744  005B5C  5D6C               	subwf	___aldiv@dividend& (0+255),w,b
 31745  005B5E  0100               	movlb	0	; () banked
 31746  005B60  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31747  005B62  0100               	movlb	0	; () banked
 31748  005B64  596D               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 31749  005B66  0100               	movlb	0	; () banked
 31750  005B68  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31751  005B6A  0100               	movlb	0	; () banked
 31752  005B6C  596E               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 31753  005B6E  0100               	movlb	0	; () banked
 31754  005B70  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31755  005B72  0100               	movlb	0	; () banked
 31756  005B74  596F               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 31757  005B76  A0D8               	btfss	status,0,c
 31758  005B78  D012               	goto	l14209
 31759                           
 31760                           ; BSR set to: 0
 31761  005B7A  0100               	movlb	0	; () banked
 31762  005B7C  5170               	movf	___aldiv@divisor& (0+255),w,b
 31763  005B7E  0100               	movlb	0	; () banked
 31764  005B80  5F6C               	subwf	___aldiv@dividend& (0+255),f,b
 31765  005B82  0100               	movlb	0	; () banked
 31766  005B84  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31767  005B86  0100               	movlb	0	; () banked
 31768  005B88  5B6D               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 31769  005B8A  0100               	movlb	0	; () banked
 31770  005B8C  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31771  005B8E  0100               	movlb	0	; () banked
 31772  005B90  5B6E               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 31773  005B92  0100               	movlb	0	; () banked
 31774  005B94  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31775  005B96  0100               	movlb	0	; () banked
 31776  005B98  5B6F               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 31777                           
 31778                           ; BSR set to: 0
 31779  005B9A  0100               	movlb	0	; () banked
 31780  005B9C  8176               	bsf	___aldiv@quotient& (0+255),0,b
 31781  005B9E                     l14209:
 31782                           
 31783                           ; BSR set to: 0
 31784  005B9E  0100               	movlb	0	; () banked
 31785  005BA0  90D8               	bcf	status,0,c
 31786  005BA2  3373               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 31787  005BA4  3372               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 31788  005BA6  3371               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 31789  005BA8  3370               	rrcf	___aldiv@divisor& (0+255),f,b
 31790                           
 31791                           ; BSR set to: 0
 31792  005BAA  0100               	movlb	0	; () banked
 31793  005BAC  2F74               	decfsz	___aldiv@counter& (0+255),f,b
 31794  005BAE  D7CD               	goto	l14201
 31795  005BB0                     l14213:
 31796                           
 31797                           ; BSR set to: 0
 31798  005BB0  0100               	movlb	0	; () banked
 31799  005BB2  5175               	movf	___aldiv@sign& (0+255),w,b
 31800  005BB4  0100               	movlb	0	; () banked
 31801  005BB6  B4D8               	btfsc	status,2,c
 31802  005BB8  D009               	goto	l14217
 31803                           
 31804                           ; BSR set to: 0
 31805  005BBA  0100               	movlb	0	; () banked
 31806  005BBC  1F79               	comf	(___aldiv@quotient+3)& (0+255),f,b
 31807  005BBE  1F78               	comf	(___aldiv@quotient+2)& (0+255),f,b
 31808  005BC0  1F77               	comf	(___aldiv@quotient+1)& (0+255),f,b
 31809  005BC2  6D76               	negf	___aldiv@quotient& (0+255),b
 31810  005BC4  0E00               	movlw	0
 31811  005BC6  2377               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 31812  005BC8  2378               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 31813  005BCA  2379               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 31814  005BCC                     l14217:
 31815                           
 31816                           ; BSR set to: 0
 31817  005BCC  C076  F06C         	movff	___aldiv@quotient,?___aldiv
 31818  005BD0  C077  F06D         	movff	___aldiv@quotient+1,?___aldiv+1
 31819  005BD4  C078  F06E         	movff	___aldiv@quotient+2,?___aldiv+2
 31820  005BD8  C079  F06F         	movff	___aldiv@quotient+3,?___aldiv+3
 31821  005BDC  0012               	return	
 31822  005BDE                     __end_of___aldiv:
 31823                           	opt stack 0
 31824                           tosu	equ	0xFFF
 31825                           tosh	equ	0xFFE
 31826                           tosl	equ	0xFFD
 31827                           pclath	equ	0xFFA
 31828                           tblptru	equ	0xFF8
 31829                           tblptrh	equ	0xFF7
 31830                           tblptrl	equ	0xFF6
 31831                           tablat	equ	0xFF5
 31832                           prodh	equ	0xFF4
 31833                           prodl	equ	0xFF3
 31834                           intcon	equ	0xFF2
 31835                           indf0	equ	0xFEF
 31836                           postinc0	equ	0xFEE
 31837                           fsr0h	equ	0xFEA
 31838                           fsr0l	equ	0xFE9
 31839                           wreg	equ	0xFE8
 31840                           indf1	equ	0xFE7
 31841                           postinc1	equ	0xFE6
 31842                           postdec1	equ	0xFE5
 31843                           plusw1	equ	0xFE3
 31844                           fsr1h	equ	0xFE2
 31845                           fsr1l	equ	0xFE1
 31846                           indf2	equ	0xFDF
 31847                           postinc2	equ	0xFDE
 31848                           postdec2	equ	0xFDD
 31849                           plusw2	equ	0xFDB
 31850                           fsr2h	equ	0xFDA
 31851                           fsr2l	equ	0xFD9
 31852                           status	equ	0xFD8
 31853                           
 31854 ;; *************** function _cal_diff_p_to_h *****************
 31855 ;; Defined at:
 31856 ;;		line 521 in file "src/api/data.c"
 31857 ;; Parameters:    Size  Location     Type
 31858 ;;  xin             2   98[BANK0 ] PTR struct .
 31859 ;;		 -> x_prDiffData(8), 
 31860 ;; Auto vars:     Size  Location     Type
 31861 ;;  f1              4  104[BANK0 ] float 
 31862 ;;  f2              4  100[BANK0 ] float 
 31863 ;; Return value:  Size  Location     Type
 31864 ;;                  4   98[BANK0 ] long 
 31865 ;; Registers used:
 31866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31867 ;; Tracked objects:
 31868 ;;		On entry : 0/0
 31869 ;;		On exit  : 0/0
 31870 ;;		Unchanged: 0/0
 31871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31873 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31875 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31876 ;;Total ram usage:       10 bytes
 31877 ;; Hardware stack levels used:    1
 31878 ;; Hardware stack levels required when called:    5
 31879 ;; This function calls:
 31880 ;;		___fldiv
 31881 ;;		___flmul
 31882 ;;		___fltol
 31883 ;;		___xxtofl
 31884 ;; This function is called by:
 31885 ;;		_cal_diff_press
 31886 ;; This function uses a non-reentrant model
 31887 ;;
 31888                           
 31889                           	psect	text173
 31890  005F08                     __ptext173:
 31891                           	opt stack 0
 31892  005F08                     _cal_diff_p_to_h:
 31893                           	opt stack 21
 31894                           
 31895                           ;data.c: 523: float f1,f2;
 31896                           ;data.c: 525: f1=(float)(xin->pValue);
 31897                           
 31898                           ; BSR set to: 0
 31899                           ;incstack = 0
 31900  005F08  C0C2  FFD9         	movff	cal_diff_p_to_h@xin,fsr2l
 31901  005F0C  C0C3  FFDA         	movff	cal_diff_p_to_h@xin+1,fsr2h
 31902  005F10  CFDE F060          	movff	postinc2,___xxtofl@val
 31903  005F14  CFDE F061          	movff	postinc2,___xxtofl@val+1
 31904  005F18  CFDE F062          	movff	postinc2,___xxtofl@val+2
 31905  005F1C  CFDE F063          	movff	postinc2,___xxtofl@val+3
 31906  005F20  0E01               	movlw	1
 31907  005F22  EC11  F020         	call	___xxtofl
 31908  005F26  C060  F0C8         	movff	?___xxtofl,cal_diff_p_to_h@f1
 31909  005F2A  C061  F0C9         	movff	?___xxtofl+1,cal_diff_p_to_h@f1+1
 31910  005F2E  C062  F0CA         	movff	?___xxtofl+2,cal_diff_p_to_h@f1+2
 31911  005F32  C063  F0CB         	movff	?___xxtofl+3,cal_diff_p_to_h@f1+3
 31912                           
 31913                           ;data.c: 526: f2=(float)(stSysData.density);
 31914  005F36  C206  F060         	movff	_stSysData+6,___xxtofl@val
 31915  005F3A  C207  F061         	movff	_stSysData+7,___xxtofl@val+1
 31916  005F3E  0100               	movlb	0	; () banked
 31917  005F40  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 31918  005F42  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 31919  005F44  0E00               	movlw	0
 31920  005F46  EC11  F020         	call	___xxtofl
 31921  005F4A  C060  F0C4         	movff	?___xxtofl,cal_diff_p_to_h@f2
 31922  005F4E  C061  F0C5         	movff	?___xxtofl+1,cal_diff_p_to_h@f2+1
 31923  005F52  C062  F0C6         	movff	?___xxtofl+2,cal_diff_p_to_h@f2+2
 31924  005F56  C063  F0C7         	movff	?___xxtofl+3,cal_diff_p_to_h@f2+3
 31925                           
 31926                           ;data.c: 527: f1=f1/(f2*9.8f);
 31927  005F5A  C0C8  F087         	movff	cal_diff_p_to_h@f1,___fldiv@b
 31928  005F5E  C0C9  F088         	movff	cal_diff_p_to_h@f1+1,___fldiv@b+1
 31929  005F62  C0CA  F089         	movff	cal_diff_p_to_h@f1+2,___fldiv@b+2
 31930  005F66  C0CB  F08A         	movff	cal_diff_p_to_h@f1+3,___fldiv@b+3
 31931  005F6A  0ECD               	movlw	205
 31932  005F6C  0100               	movlb	0	; () banked
 31933  005F6E  6F72               	movwf	___flmul@a& (0+255),b
 31934  005F70  0ECC               	movlw	204
 31935  005F72  6F73               	movwf	(___flmul@a+1)& (0+255),b
 31936  005F74  0E1C               	movlw	28
 31937  005F76  6F74               	movwf	(___flmul@a+2)& (0+255),b
 31938  005F78  0E41               	movlw	65
 31939  005F7A  6F75               	movwf	(___flmul@a+3)& (0+255),b
 31940  005F7C  C0C4  F06E         	movff	cal_diff_p_to_h@f2,___flmul@b
 31941  005F80  C0C5  F06F         	movff	cal_diff_p_to_h@f2+1,___flmul@b+1
 31942  005F84  C0C6  F070         	movff	cal_diff_p_to_h@f2+2,___flmul@b+2
 31943  005F88  C0C7  F071         	movff	cal_diff_p_to_h@f2+3,___flmul@b+3
 31944  005F8C  EC08  F00B         	call	___flmul	;wreg free
 31945  005F90  C06E  F08B         	movff	?___flmul,___fldiv@a
 31946  005F94  C06F  F08C         	movff	?___flmul+1,___fldiv@a+1
 31947  005F98  C070  F08D         	movff	?___flmul+2,___fldiv@a+2
 31948  005F9C  C071  F08E         	movff	?___flmul+3,___fldiv@a+3
 31949  005FA0  ECA9  F011         	call	___fldiv	;wreg free
 31950  005FA4  C087  F0C8         	movff	?___fldiv,cal_diff_p_to_h@f1
 31951  005FA8  C088  F0C9         	movff	?___fldiv+1,cal_diff_p_to_h@f1+1
 31952  005FAC  C089  F0CA         	movff	?___fldiv+2,cal_diff_p_to_h@f1+2
 31953  005FB0  C08A  F0CB         	movff	?___fldiv+3,cal_diff_p_to_h@f1+3
 31954                           
 31955                           ;data.c: 528: f1*=1000;
 31956  005FB4  C0C8  F06E         	movff	cal_diff_p_to_h@f1,___flmul@b
 31957  005FB8  C0C9  F06F         	movff	cal_diff_p_to_h@f1+1,___flmul@b+1
 31958  005FBC  C0CA  F070         	movff	cal_diff_p_to_h@f1+2,___flmul@b+2
 31959  005FC0  C0CB  F071         	movff	cal_diff_p_to_h@f1+3,___flmul@b+3
 31960  005FC4  0E00               	movlw	0
 31961  005FC6  0100               	movlb	0	; () banked
 31962  005FC8  6F72               	movwf	___flmul@a& (0+255),b
 31963  005FCA  0E00               	movlw	0
 31964  005FCC  6F73               	movwf	(___flmul@a+1)& (0+255),b
 31965  005FCE  0E7A               	movlw	122
 31966  005FD0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 31967  005FD2  0E44               	movlw	68
 31968  005FD4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 31969  005FD6  EC08  F00B         	call	___flmul	;wreg free
 31970  005FDA  C06E  F0C8         	movff	?___flmul,cal_diff_p_to_h@f1
 31971  005FDE  C06F  F0C9         	movff	?___flmul+1,cal_diff_p_to_h@f1+1
 31972  005FE2  C070  F0CA         	movff	?___flmul+2,cal_diff_p_to_h@f1+2
 31973  005FE6  C071  F0CB         	movff	?___flmul+3,cal_diff_p_to_h@f1+3
 31974                           
 31975                           ;data.c: 529: rtHight=(int32_t)f1;
 31976  005FEA  C0C8  F0B8         	movff	cal_diff_p_to_h@f1,___fltol@f1
 31977  005FEE  C0C9  F0B9         	movff	cal_diff_p_to_h@f1+1,___fltol@f1+1
 31978  005FF2  C0CA  F0BA         	movff	cal_diff_p_to_h@f1+2,___fltol@f1+2
 31979  005FF6  C0CB  F0BB         	movff	cal_diff_p_to_h@f1+3,___fltol@f1+3
 31980  005FFA  EC7A  F02E         	call	___fltol	;wreg free
 31981  005FFE  C0B8  F0EB         	movff	?___fltol,_rtHight	;volatile
 31982  006002  C0B9  F0EC         	movff	?___fltol+1,_rtHight+1	;volatile
 31983  006006  C0BA  F0ED         	movff	?___fltol+2,_rtHight+2	;volatile
 31984  00600A  C0BB  F0EE         	movff	?___fltol+3,_rtHight+3	;volatile
 31985  00600E  0012               	return	
 31986  006010                     __end_of_cal_diff_p_to_h:
 31987                           	opt stack 0
 31988                           tosu	equ	0xFFF
 31989                           tosh	equ	0xFFE
 31990                           tosl	equ	0xFFD
 31991                           pclath	equ	0xFFA
 31992                           tblptru	equ	0xFF8
 31993                           tblptrh	equ	0xFF7
 31994                           tblptrl	equ	0xFF6
 31995                           tablat	equ	0xFF5
 31996                           prodh	equ	0xFF4
 31997                           prodl	equ	0xFF3
 31998                           intcon	equ	0xFF2
 31999                           indf0	equ	0xFEF
 32000                           postinc0	equ	0xFEE
 32001                           fsr0h	equ	0xFEA
 32002                           fsr0l	equ	0xFE9
 32003                           wreg	equ	0xFE8
 32004                           indf1	equ	0xFE7
 32005                           postinc1	equ	0xFE6
 32006                           postdec1	equ	0xFE5
 32007                           plusw1	equ	0xFE3
 32008                           fsr1h	equ	0xFE2
 32009                           fsr1l	equ	0xFE1
 32010                           indf2	equ	0xFDF
 32011                           postinc2	equ	0xFDE
 32012                           postdec2	equ	0xFDD
 32013                           plusw2	equ	0xFDB
 32014                           fsr2h	equ	0xFDA
 32015                           fsr2l	equ	0xFD9
 32016                           status	equ	0xFD8
 32017                           
 32018 ;; *************** function _cal_diff_hight_to_vol_v *****************
 32019 ;; Defined at:
 32020 ;;		line 490 in file "src/api/data.c"
 32021 ;; Parameters:    Size  Location     Type
 32022 ;;  h               4    0[BANK1 ] long 
 32023 ;; Auto vars:     Size  Location     Type
 32024 ;;  f1              4   16[BANK3 ] float 
 32025 ;;  D               4   12[BANK3 ] float 
 32026 ;;  v2              4    8[BANK3 ] float 
 32027 ;;  v1              4    4[BANK3 ] float 
 32028 ;; Return value:  Size  Location     Type
 32029 ;;                  4    0[BANK1 ] long 
 32030 ;; Registers used:
 32031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32032 ;; Tracked objects:
 32033 ;;		On entry : 0/0
 32034 ;;		On exit  : 0/0
 32035 ;;		Unchanged: 0/0
 32036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32037 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32038 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32040 ;;      Totals:         0       0       4       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32041 ;;Total ram usage:       24 bytes
 32042 ;; Hardware stack levels used:    1
 32043 ;; Hardware stack levels required when called:    6
 32044 ;; This function calls:
 32045 ;;		___fladd
 32046 ;;		___fldiv
 32047 ;;		___flge
 32048 ;;		___flmul
 32049 ;;		___flneg
 32050 ;;		___fltol
 32051 ;;		___xxtofl
 32052 ;;		_m_interp1_float_fast
 32053 ;; This function is called by:
 32054 ;;		_cal_diff_press
 32055 ;; This function uses a non-reentrant model
 32056 ;;
 32057                           
 32058                           	psect	text174
 32059  0000DC                     __ptext174:
 32060                           	opt stack 0
 32061  0000DC                     _cal_diff_hight_to_vol_v:
 32062                           	opt stack 20
 32063                           
 32064                           ;data.c: 492: float v1,v2;
 32065                           ;data.c: 493: float f1,D;
 32066                           ;data.c: 494: v1=(float)(stSysData.V1);
 32067                           
 32068                           ;incstack = 0
 32069  0000DC  C210  F060         	movff	_stSysData+16,___xxtofl@val
 32070  0000E0  C211  F061         	movff	_stSysData+17,___xxtofl@val+1
 32071  0000E4  C212  F062         	movff	_stSysData+18,___xxtofl@val+2
 32072  0000E8  C213  F063         	movff	_stSysData+19,___xxtofl@val+3
 32073  0000EC  0E01               	movlw	1
 32074  0000EE  EC11  F020         	call	___xxtofl
 32075  0000F2  C060  F3CE         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v1
 32076  0000F6  C061  F3CF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v1+1
 32077  0000FA  C062  F3D0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v1+2
 32078  0000FE  C063  F3D1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v1+3
 32079                           
 32080                           ;data.c: 495: v2=(float)(stSysData.V2);
 32081  000102  C214  F060         	movff	_stSysData+20,___xxtofl@val
 32082  000106  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 32083  00010A  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 32084  00010E  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 32085  000112  0E01               	movlw	1
 32086  000114  EC11  F020         	call	___xxtofl
 32087  000118  C060  F3D2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 32088  00011C  C061  F3D3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 32089  000120  C062  F3D4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 32090  000124  C063  F3D5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 32091                           
 32092                           ;data.c: 497: f1=(float)h;
 32093  000128  C1FB  F060         	movff	cal_diff_hight_to_vol_v@h,___xxtofl@val
 32094  00012C  C1FC  F061         	movff	cal_diff_hight_to_vol_v@h+1,___xxtofl@val+1
 32095  000130  C1FD  F062         	movff	cal_diff_hight_to_vol_v@h+2,___xxtofl@val+2
 32096  000134  C1FE  F063         	movff	cal_diff_hight_to_vol_v@h+3,___xxtofl@val+3
 32097  000138  0E01               	movlw	1
 32098  00013A  EC11  F020         	call	___xxtofl
 32099  00013E  C060  F3DA         	movff	?___xxtofl,cal_diff_hight_to_vol_v@f1
 32100  000142  C061  F3DB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@f1+1
 32101  000146  C062  F3DC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@f1+2
 32102  00014A  C063  F3DD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@f1+3
 32103                           
 32104                           ;data.c: 498: D=(float)(stSysData.d);
 32105  00014E  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 32106  000152  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 32107  000156  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 32108  00015A  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 32109  00015E  0E00               	movlw	0
 32110  000160  EC11  F020         	call	___xxtofl
 32111  000164  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_v@D
 32112  000168  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@D+1
 32113  00016C  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@D+2
 32114  000170  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@D+3
 32115                           
 32116                           ;data.c: 499: if(f1<D/4){
 32117  000174  C3DA  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 32118  000178  C3DB  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 32119  00017C  C3DC  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 32120  000180  C3DD  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 32121  000184  0E00               	movlw	0
 32122  000186  0100               	movlb	0	; () banked
 32123  000188  6F8B               	movwf	___fldiv@a& (0+255),b
 32124  00018A  0E00               	movlw	0
 32125  00018C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32126  00018E  0E80               	movlw	128
 32127  000190  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32128  000192  0E40               	movlw	64
 32129  000194  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32130  000196  C3D6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32131  00019A  C3D7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32132  00019E  C3D8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32133  0001A2  C3D9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32134  0001A6  ECA9  F011         	call	___fldiv	;wreg free
 32135  0001AA  C087  F0BC         	movff	?___fldiv,___flge@ff2
 32136  0001AE  C088  F0BD         	movff	?___fldiv+1,___flge@ff2+1
 32137  0001B2  C089  F0BE         	movff	?___fldiv+2,___flge@ff2+2
 32138  0001B6  C08A  F0BF         	movff	?___fldiv+3,___flge@ff2+3
 32139  0001BA  EC94  F023         	call	___flge	;wreg free
 32140  0001BE  0100               	movlb	0	; () banked
 32141  0001C0  B0D8               	btfsc	status,0,c
 32142  0001C2  D070               	goto	l14571
 32143                           
 32144                           ; BSR set to: 0
 32145                           ;data.c: 500: f1=2*f1/D;
 32146  0001C4  0E00               	movlw	0
 32147  0001C6  0100               	movlb	0	; () banked
 32148  0001C8  6F72               	movwf	___flmul@a& (0+255),b
 32149  0001CA  0E00               	movlw	0
 32150  0001CC  6F73               	movwf	(___flmul@a+1)& (0+255),b
 32151  0001CE  0E00               	movlw	0
 32152  0001D0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 32153  0001D2  0E40               	movlw	64
 32154  0001D4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 32155  0001D6  C3DA  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 32156  0001DA  C3DB  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 32157  0001DE  C3DC  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 32158  0001E2  C3DD  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 32159  0001E6  EC08  F00B         	call	___flmul	;wreg free
 32160  0001EA  C06E  F087         	movff	?___flmul,___fldiv@b
 32161  0001EE  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 32162  0001F2  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 32163  0001F6  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 32164  0001FA  C3D6  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 32165  0001FE  C3D7  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 32166  000202  C3D8  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 32167  000206  C3D9  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 32168  00020A  ECA9  F011         	call	___fldiv	;wreg free
 32169  00020E  C087  F3DA         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 32170  000212  C088  F3DB         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 32171  000216  C089  F3DC         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 32172  00021A  C08A  F3DD         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 32173                           
 32174                           ;data.c: 501: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 32175  00021E  0E17               	movlw	low _hKel
 32176  000220  0100               	movlb	0	; () banked
 32177  000222  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 32178  000224  0EEF               	movlw	high _hKel
 32179  000226  0100               	movlb	0	; () banked
 32180  000228  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 32181  00022A  C3DA  F0C6         	movff	cal_diff_hight_to_vol_v@f1,m_interp1_float_fast@in
 32182  00022E  C3DB  F0C7         	movff	cal_diff_hight_to_vol_v@f1+1,m_interp1_float_fast@in+1
 32183  000232  C3DC  F0C8         	movff	cal_diff_hight_to_vol_v@f1+2,m_interp1_float_fast@in+2
 32184  000236  C3DD  F0C9         	movff	cal_diff_hight_to_vol_v@f1+3,m_interp1_float_fast@in+3
 32185  00023A  0E00               	movlw	0
 32186  00023C  0100               	movlb	0	; () banked
 32187  00023E  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 32188  000240  0E65               	movlw	101
 32189  000242  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 32190  000244  EC95  F00F         	call	_m_interp1_float_fast	;wreg free
 32191  000248  C0C4  F3DA         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_v@f1
 32192  00024C  C0C5  F3DB         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_v@f1+1
 32193  000250  C0C6  F3DC         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_v@f1+2
 32194  000254  C0C7  F3DD         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_v@f1+3
 32195                           
 32196                           ;data.c: 502: v2=(float)(stSysData.V2);
 32197  000258  C214  F060         	movff	_stSysData+20,___xxtofl@val
 32198  00025C  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 32199  000260  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 32200  000264  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 32201  000268  0E01               	movlw	1
 32202  00026A  EC11  F020         	call	___xxtofl
 32203  00026E  C060  F3D2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 32204  000272  C061  F3D3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 32205  000276  C062  F3D4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 32206  00027A  C063  F3D5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 32207                           
 32208                           ;data.c: 503: return (int32_t)v2;
 32209  00027E  C3D2  F0B8         	movff	cal_diff_hight_to_vol_v@v2,___fltol@f1
 32210  000282  C3D3  F0B9         	movff	cal_diff_hight_to_vol_v@v2+1,___fltol@f1+1
 32211  000286  C3D4  F0BA         	movff	cal_diff_hight_to_vol_v@v2+2,___fltol@f1+2
 32212  00028A  C3D5  F0BB         	movff	cal_diff_hight_to_vol_v@v2+3,___fltol@f1+3
 32213  00028E  EC7A  F02E         	call	___fltol	;wreg free
 32214  000292  C0B8  F1FB         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 32215  000296  C0B9  F1FC         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 32216  00029A  C0BA  F1FD         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 32217  00029E  C0BB  F1FE         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 32218                           
 32219                           ;data.c: 504: }else if(f1<D/4+stSysData.h){
 32220  0002A2  0012               	return	
 32221  0002A4                     l14571:
 32222  0002A4  C3DA  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 32223  0002A8  C3DB  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 32224  0002AC  C3DC  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 32225  0002B0  C3DD  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 32226  0002B4  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32227  0002B8  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32228  0002BC  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32229  0002C0  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32230  0002C4  0E01               	movlw	1
 32231  0002C6  EC11  F020         	call	___xxtofl
 32232  0002CA  C060  F0A8         	movff	?___xxtofl,___fladd@a
 32233  0002CE  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 32234  0002D2  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 32235  0002D6  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 32236  0002DA  0E00               	movlw	0
 32237  0002DC  0100               	movlb	0	; () banked
 32238  0002DE  6F8B               	movwf	___fldiv@a& (0+255),b
 32239  0002E0  0E00               	movlw	0
 32240  0002E2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32241  0002E4  0E80               	movlw	128
 32242  0002E6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32243  0002E8  0E40               	movlw	64
 32244  0002EA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32245  0002EC  C3D6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32246  0002F0  C3D7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32247  0002F4  C3D8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32248  0002F8  C3D9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32249  0002FC  ECA9  F011         	call	___fldiv	;wreg free
 32250  000300  C087  F0A4         	movff	?___fldiv,___fladd@b
 32251  000304  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 32252  000308  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 32253  00030C  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 32254  000310  ECB4  F008         	call	___fladd	;wreg free
 32255  000314  C0A4  F0BC         	movff	?___fladd,___flge@ff2
 32256  000318  C0A5  F0BD         	movff	?___fladd+1,___flge@ff2+1
 32257  00031C  C0A6  F0BE         	movff	?___fladd+2,___flge@ff2+2
 32258  000320  C0A7  F0BF         	movff	?___fladd+3,___flge@ff2+3
 32259  000324  EC94  F023         	call	___flge	;wreg free
 32260  000328  0100               	movlb	0	; () banked
 32261  00032A  B0D8               	btfsc	status,0,c
 32262  00032C  D0AE               	goto	l14585
 32263                           
 32264                           ; BSR set to: 0
 32265                           ;data.c: 505: f1=f1-D/4;
 32266  00032E  0E00               	movlw	0
 32267  000330  0100               	movlb	0	; () banked
 32268  000332  6F8B               	movwf	___fldiv@a& (0+255),b
 32269  000334  0E00               	movlw	0
 32270  000336  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32271  000338  0E80               	movlw	128
 32272  00033A  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32273  00033C  0E40               	movlw	64
 32274  00033E  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32275  000340  C3D6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32276  000344  C3D7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32277  000348  C3D8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32278  00034C  C3D9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32279  000350  ECA9  F011         	call	___fldiv	;wreg free
 32280  000354  C087  F0A0         	movff	?___fldiv,___flneg@f1
 32281  000358  C088  F0A1         	movff	?___fldiv+1,___flneg@f1+1
 32282  00035C  C089  F0A2         	movff	?___fldiv+2,___flneg@f1+2
 32283  000360  C08A  F0A3         	movff	?___fldiv+3,___flneg@f1+3
 32284  000364  EC9B  F04D         	call	___flneg	;wreg free
 32285  000368  C0A0  F0A4         	movff	?___flneg,___fladd@b
 32286  00036C  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 32287  000370  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 32288  000374  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 32289  000378  C3DA  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 32290  00037C  C3DB  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 32291  000380  C3DC  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 32292  000384  C3DD  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 32293  000388  ECB4  F008         	call	___fladd	;wreg free
 32294  00038C  C0A4  F3DA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32295  000390  C0A5  F3DB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32296  000394  C0A6  F3DC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32297  000398  C0A7  F3DD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32298                           
 32299                           ;data.c: 506: v2=v2*(f1/stSysData.h);
 32300  00039C  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32301  0003A0  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32302  0003A4  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32303  0003A8  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32304  0003AC  0E01               	movlw	1
 32305  0003AE  EC11  F020         	call	___xxtofl
 32306  0003B2  C060  F08B         	movff	?___xxtofl,___fldiv@a
 32307  0003B6  C061  F08C         	movff	?___xxtofl+1,___fldiv@a+1
 32308  0003BA  C062  F08D         	movff	?___xxtofl+2,___fldiv@a+2
 32309  0003BE  C063  F08E         	movff	?___xxtofl+3,___fldiv@a+3
 32310  0003C2  C3DA  F087         	movff	cal_diff_hight_to_vol_v@f1,___fldiv@b
 32311  0003C6  C3DB  F088         	movff	cal_diff_hight_to_vol_v@f1+1,___fldiv@b+1
 32312  0003CA  C3DC  F089         	movff	cal_diff_hight_to_vol_v@f1+2,___fldiv@b+2
 32313  0003CE  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@f1+3,___fldiv@b+3
 32314  0003D2  ECA9  F011         	call	___fldiv	;wreg free
 32315  0003D6  C087  F06E         	movff	?___fldiv,___flmul@b
 32316  0003DA  C088  F06F         	movff	?___fldiv+1,___flmul@b+1
 32317  0003DE  C089  F070         	movff	?___fldiv+2,___flmul@b+2
 32318  0003E2  C08A  F071         	movff	?___fldiv+3,___flmul@b+3
 32319  0003E6  C3D2  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 32320  0003EA  C3D3  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 32321  0003EE  C3D4  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 32322  0003F2  C3D5  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 32323  0003F6  EC08  F00B         	call	___flmul	;wreg free
 32324  0003FA  C06E  F3D2         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 32325  0003FE  C06F  F3D3         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 32326  000402  C070  F3D4         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 32327  000406  C071  F3D5         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 32328                           
 32329                           ;data.c: 507: v1=v1/2;
 32330  00040A  C3CE  F087         	movff	cal_diff_hight_to_vol_v@v1,___fldiv@b
 32331  00040E  C3CF  F088         	movff	cal_diff_hight_to_vol_v@v1+1,___fldiv@b+1
 32332  000412  C3D0  F089         	movff	cal_diff_hight_to_vol_v@v1+2,___fldiv@b+2
 32333  000416  C3D1  F08A         	movff	cal_diff_hight_to_vol_v@v1+3,___fldiv@b+3
 32334  00041A  0E00               	movlw	0
 32335  00041C  0100               	movlb	0	; () banked
 32336  00041E  6F8B               	movwf	___fldiv@a& (0+255),b
 32337  000420  0E00               	movlw	0
 32338  000422  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32339  000424  0E00               	movlw	0
 32340  000426  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32341  000428  0E40               	movlw	64
 32342  00042A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32343  00042C  ECA9  F011         	call	___fldiv	;wreg free
 32344  000430  C087  F3CE         	movff	?___fldiv,cal_diff_hight_to_vol_v@v1
 32345  000434  C088  F3CF         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@v1+1
 32346  000438  C089  F3D0         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@v1+2
 32347  00043C  C08A  F3D1         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@v1+3
 32348                           
 32349                           ;data.c: 508: return (int32_t)(v1+v2);
 32350  000440  C3D2  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 32351  000444  C3D3  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 32352  000448  C3D4  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 32353  00044C  C3D5  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 32354  000450  C3CE  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 32355  000454  C3CF  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 32356  000458  C3D0  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 32357  00045C  C3D1  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 32358  000460  ECB4  F008         	call	___fladd	;wreg free
 32359  000464  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 32360  000468  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 32361  00046C  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 32362  000470  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 32363  000474  EC7A  F02E         	call	___fltol	;wreg free
 32364  000478  C0B8  F1FB         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 32365  00047C  C0B9  F1FC         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 32366  000480  C0BA  F1FD         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 32367  000484  C0BB  F1FE         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 32368                           
 32369                           ;data.c: 509: }else{
 32370  000488  0012               	return	
 32371  00048A                     l14585:
 32372                           
 32373                           ;data.c: 510: if(f1>(float)(stSysData.h)+D/2)f1=(float)(stSysData.h)+D/2;
 32374  00048A  0E00               	movlw	0
 32375  00048C  0100               	movlb	0	; () banked
 32376  00048E  6F8B               	movwf	___fldiv@a& (0+255),b
 32377  000490  0E00               	movlw	0
 32378  000492  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32379  000494  0E00               	movlw	0
 32380  000496  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32381  000498  0E40               	movlw	64
 32382  00049A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32383  00049C  C3D6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32384  0004A0  C3D7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32385  0004A4  C3D8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32386  0004A8  C3D9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32387  0004AC  ECA9  F011         	call	___fldiv	;wreg free
 32388  0004B0  C087  F0A8         	movff	?___fldiv,___fladd@a
 32389  0004B4  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 32390  0004B8  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 32391  0004BC  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 32392  0004C0  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32393  0004C4  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32394  0004C8  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32395  0004CC  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32396  0004D0  0E01               	movlw	1
 32397  0004D2  EC11  F020         	call	___xxtofl
 32398  0004D6  C060  F0A4         	movff	?___xxtofl,___fladd@b
 32399  0004DA  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 32400  0004DE  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 32401  0004E2  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 32402  0004E6  ECB4  F008         	call	___fladd	;wreg free
 32403  0004EA  C0A4  F0B8         	movff	?___fladd,___flge@ff1
 32404  0004EE  C0A5  F0B9         	movff	?___fladd+1,___flge@ff1+1
 32405  0004F2  C0A6  F0BA         	movff	?___fladd+2,___flge@ff1+2
 32406  0004F6  C0A7  F0BB         	movff	?___fladd+3,___flge@ff1+3
 32407  0004FA  C3DA  F0BC         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff2
 32408  0004FE  C3DB  F0BD         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff2+1
 32409  000502  C3DC  F0BE         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff2+2
 32410  000506  C3DD  F0BF         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff2+3
 32411  00050A  EC94  F023         	call	___flge	;wreg free
 32412  00050E  0100               	movlb	0	; () banked
 32413  000510  B0D8               	btfsc	status,0,c
 32414  000512  D038               	goto	l176
 32415                           
 32416                           ; BSR set to: 0
 32417  000514  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32418  000518  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32419  00051C  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32420  000520  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32421  000524  0E01               	movlw	1
 32422  000526  EC11  F020         	call	___xxtofl
 32423  00052A  C060  F0A4         	movff	?___xxtofl,___fladd@b
 32424  00052E  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 32425  000532  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 32426  000536  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 32427  00053A  0E00               	movlw	0
 32428  00053C  0100               	movlb	0	; () banked
 32429  00053E  6F8B               	movwf	___fldiv@a& (0+255),b
 32430  000540  0E00               	movlw	0
 32431  000542  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32432  000544  0E00               	movlw	0
 32433  000546  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32434  000548  0E40               	movlw	64
 32435  00054A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32436  00054C  C3D6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32437  000550  C3D7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32438  000554  C3D8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32439  000558  C3D9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32440  00055C  ECA9  F011         	call	___fldiv	;wreg free
 32441  000560  C087  F0A8         	movff	?___fldiv,___fladd@a
 32442  000564  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 32443  000568  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 32444  00056C  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 32445  000570  ECB4  F008         	call	___fladd	;wreg free
 32446  000574  C0A4  F3DA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32447  000578  C0A5  F3DB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32448  00057C  C0A6  F3DC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32449  000580  C0A7  F3DD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32450  000584                     l176:
 32451                           
 32452                           ;data.c: 512: f1=f1-(D/4)-(float)(stSysData.h);
 32453  000584  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32454  000588  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32455  00058C  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32456  000590  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32457  000594  0E01               	movlw	1
 32458  000596  EC11  F020         	call	___xxtofl
 32459  00059A  C060  F0A8         	movff	?___xxtofl,___fladd@a
 32460  00059E  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 32461  0005A2  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 32462  0005A6  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 32463  0005AA  0E00               	movlw	0
 32464  0005AC  0100               	movlb	0	; () banked
 32465  0005AE  6F8B               	movwf	___fldiv@a& (0+255),b
 32466  0005B0  0E00               	movlw	0
 32467  0005B2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32468  0005B4  0E80               	movlw	128
 32469  0005B6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32470  0005B8  0E40               	movlw	64
 32471  0005BA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32472  0005BC  C3D6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32473  0005C0  C3D7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32474  0005C4  C3D8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32475  0005C8  C3D9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32476  0005CC  ECA9  F011         	call	___fldiv	;wreg free
 32477  0005D0  C087  F0A4         	movff	?___fldiv,___fladd@b
 32478  0005D4  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 32479  0005D8  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 32480  0005DC  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 32481  0005E0  ECB4  F008         	call	___fladd	;wreg free
 32482  0005E4  C0A4  F0A0         	movff	?___fladd,___flneg@f1
 32483  0005E8  C0A5  F0A1         	movff	?___fladd+1,___flneg@f1+1
 32484  0005EC  C0A6  F0A2         	movff	?___fladd+2,___flneg@f1+2
 32485  0005F0  C0A7  F0A3         	movff	?___fladd+3,___flneg@f1+3
 32486  0005F4  EC9B  F04D         	call	___flneg	;wreg free
 32487  0005F8  C0A0  F3CA         	movff	?___flneg,_cal_diff_hight_to_vol_v$5886
 32488  0005FC  C0A1  F3CB         	movff	?___flneg+1,_cal_diff_hight_to_vol_v$5886+1
 32489  000600  C0A2  F3CC         	movff	?___flneg+2,_cal_diff_hight_to_vol_v$5886+2
 32490  000604  C0A3  F3CD         	movff	?___flneg+3,_cal_diff_hight_to_vol_v$5886+3
 32491                           
 32492                           ;data.c: 512: f1=f1-(D/4)-(float)(stSysData.h);
 32493  000608  C3CA  F0A4         	movff	_cal_diff_hight_to_vol_v$5886,___fladd@b
 32494  00060C  C3CB  F0A5         	movff	_cal_diff_hight_to_vol_v$5886+1,___fladd@b+1
 32495  000610  C3CC  F0A6         	movff	_cal_diff_hight_to_vol_v$5886+2,___fladd@b+2
 32496  000614  C3CD  F0A7         	movff	_cal_diff_hight_to_vol_v$5886+3,___fladd@b+3
 32497  000618  C3DA  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 32498  00061C  C3DB  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 32499  000620  C3DC  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 32500  000624  C3DD  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 32501  000628  ECB4  F008         	call	___fladd	;wreg free
 32502  00062C  C0A4  F3DA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32503  000630  C0A5  F3DB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32504  000634  C0A6  F3DC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32505  000638  C0A7  F3DD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32506                           
 32507                           ;data.c: 513: f1=2*f1/D;
 32508  00063C  0E00               	movlw	0
 32509  00063E  0100               	movlb	0	; () banked
 32510  000640  6F72               	movwf	___flmul@a& (0+255),b
 32511  000642  0E00               	movlw	0
 32512  000644  6F73               	movwf	(___flmul@a+1)& (0+255),b
 32513  000646  0E00               	movlw	0
 32514  000648  6F74               	movwf	(___flmul@a+2)& (0+255),b
 32515  00064A  0E40               	movlw	64
 32516  00064C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 32517  00064E  C3DA  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 32518  000652  C3DB  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 32519  000656  C3DC  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 32520  00065A  C3DD  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 32521  00065E  EC08  F00B         	call	___flmul	;wreg free
 32522  000662  C06E  F087         	movff	?___flmul,___fldiv@b
 32523  000666  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 32524  00066A  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 32525  00066E  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 32526  000672  C3D6  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 32527  000676  C3D7  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 32528  00067A  C3D8  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 32529  00067E  C3D9  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 32530  000682  ECA9  F011         	call	___fldiv	;wreg free
 32531  000686  C087  F3DA         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 32532  00068A  C088  F3DB         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 32533  00068E  C089  F3DC         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 32534  000692  C08A  F3DD         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 32535                           
 32536                           ;data.c: 514: f1=0.5-f1;
 32537  000696  C3DA  F0A0         	movff	cal_diff_hight_to_vol_v@f1,___flneg@f1
 32538  00069A  C3DB  F0A1         	movff	cal_diff_hight_to_vol_v@f1+1,___flneg@f1+1
 32539  00069E  C3DC  F0A2         	movff	cal_diff_hight_to_vol_v@f1+2,___flneg@f1+2
 32540  0006A2  C3DD  F0A3         	movff	cal_diff_hight_to_vol_v@f1+3,___flneg@f1+3
 32541  0006A6  EC9B  F04D         	call	___flneg	;wreg free
 32542  0006AA  C0A0  F0A4         	movff	?___flneg,___fladd@b
 32543  0006AE  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 32544  0006B2  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 32545  0006B6  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 32546  0006BA  0E00               	movlw	0
 32547  0006BC  0100               	movlb	0	; () banked
 32548  0006BE  6FA8               	movwf	___fladd@a& (0+255),b
 32549  0006C0  0E00               	movlw	0
 32550  0006C2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 32551  0006C4  0E00               	movlw	0
 32552  0006C6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 32553  0006C8  0E3F               	movlw	63
 32554  0006CA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 32555  0006CC  ECB4  F008         	call	___fladd	;wreg free
 32556  0006D0  C0A4  F3DA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32557  0006D4  C0A5  F3DB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32558  0006D8  C0A6  F3DC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32559  0006DC  C0A7  F3DD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32560                           
 32561                           ;data.c: 515: v2=v2*(0.5+f1);
 32562  0006E0  0E00               	movlw	0
 32563  0006E2  0100               	movlb	0	; () banked
 32564  0006E4  6FA8               	movwf	___fladd@a& (0+255),b
 32565  0006E6  0E00               	movlw	0
 32566  0006E8  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 32567  0006EA  0E00               	movlw	0
 32568  0006EC  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 32569  0006EE  0E3F               	movlw	63
 32570  0006F0  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 32571  0006F2  C3DA  F0A4         	movff	cal_diff_hight_to_vol_v@f1,___fladd@b
 32572  0006F6  C3DB  F0A5         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@b+1
 32573  0006FA  C3DC  F0A6         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@b+2
 32574  0006FE  C3DD  F0A7         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@b+3
 32575  000702  ECB4  F008         	call	___fladd	;wreg free
 32576  000706  C0A4  F06E         	movff	?___fladd,___flmul@b
 32577  00070A  C0A5  F06F         	movff	?___fladd+1,___flmul@b+1
 32578  00070E  C0A6  F070         	movff	?___fladd+2,___flmul@b+2
 32579  000712  C0A7  F071         	movff	?___fladd+3,___flmul@b+3
 32580  000716  C3D2  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 32581  00071A  C3D3  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 32582  00071E  C3D4  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 32583  000722  C3D5  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 32584  000726  EC08  F00B         	call	___flmul	;wreg free
 32585  00072A  C06E  F3D2         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 32586  00072E  C06F  F3D3         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 32587  000732  C070  F3D4         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 32588  000736  C071  F3D5         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 32589                           
 32590                           ;data.c: 516: return (int32_t)(v1+v2);
 32591  00073A  C3D2  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 32592  00073E  C3D3  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 32593  000742  C3D4  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 32594  000746  C3D5  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 32595  00074A  C3CE  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 32596  00074E  C3CF  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 32597  000752  C3D0  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 32598  000756  C3D1  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 32599  00075A  ECB4  F008         	call	___fladd	;wreg free
 32600  00075E  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 32601  000762  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 32602  000766  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 32603  00076A  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 32604  00076E  EC7A  F02E         	call	___fltol	;wreg free
 32605  000772  C0B8  F1FB         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 32606  000776  C0B9  F1FC         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 32607  00077A  C0BA  F1FD         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 32608  00077E  C0BB  F1FE         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 32609  000782  0012               	return	
 32610  000784                     __end_of_cal_diff_hight_to_vol_v:
 32611                           	opt stack 0
 32612                           tosu	equ	0xFFF
 32613                           tosh	equ	0xFFE
 32614                           tosl	equ	0xFFD
 32615                           pclath	equ	0xFFA
 32616                           tblptru	equ	0xFF8
 32617                           tblptrh	equ	0xFF7
 32618                           tblptrl	equ	0xFF6
 32619                           tablat	equ	0xFF5
 32620                           prodh	equ	0xFF4
 32621                           prodl	equ	0xFF3
 32622                           intcon	equ	0xFF2
 32623                           indf0	equ	0xFEF
 32624                           postinc0	equ	0xFEE
 32625                           fsr0h	equ	0xFEA
 32626                           fsr0l	equ	0xFE9
 32627                           wreg	equ	0xFE8
 32628                           indf1	equ	0xFE7
 32629                           postinc1	equ	0xFE6
 32630                           postdec1	equ	0xFE5
 32631                           plusw1	equ	0xFE3
 32632                           fsr1h	equ	0xFE2
 32633                           fsr1l	equ	0xFE1
 32634                           indf2	equ	0xFDF
 32635                           postinc2	equ	0xFDE
 32636                           postdec2	equ	0xFDD
 32637                           plusw2	equ	0xFDB
 32638                           fsr2h	equ	0xFDA
 32639                           fsr2l	equ	0xFD9
 32640                           status	equ	0xFD8
 32641                           
 32642 ;; *************** function _cal_diff_hight_to_vol_h *****************
 32643 ;; Defined at:
 32644 ;;		line 446 in file "src/api/data.c"
 32645 ;; Parameters:    Size  Location     Type
 32646 ;;  h               4    0[BANK1 ] long 
 32647 ;; Auto vars:     Size  Location     Type
 32648 ;;  f1              4   12[BANK3 ] float 
 32649 ;;  v1              4    8[BANK3 ] float 
 32650 ;;  f2              4    4[BANK3 ] float 
 32651 ;;  v2              4    0[BANK3 ] float 
 32652 ;; Return value:  Size  Location     Type
 32653 ;;                  4    0[BANK1 ] long 
 32654 ;; Registers used:
 32655 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32656 ;; Tracked objects:
 32657 ;;		On entry : 0/0
 32658 ;;		On exit  : 0/0
 32659 ;;		Unchanged: 0/0
 32660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32661 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32662 ;;      Locals:         0       0       0       0      16       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32664 ;;      Totals:         0       0       4       0      16       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32665 ;;Total ram usage:       20 bytes
 32666 ;; Hardware stack levels used:    1
 32667 ;; Hardware stack levels required when called:    6
 32668 ;; This function calls:
 32669 ;;		___fladd
 32670 ;;		___fldiv
 32671 ;;		___flge
 32672 ;;		___flmul
 32673 ;;		___fltol
 32674 ;;		___xxtofl
 32675 ;;		_m_interp1_float_fast
 32676 ;; This function is called by:
 32677 ;;		_cal_diff_press
 32678 ;; This function uses a non-reentrant model
 32679 ;;
 32680                           
 32681                           	psect	text175
 32682  003358                     __ptext175:
 32683                           	opt stack 0
 32684  003358                     _cal_diff_hight_to_vol_h:
 32685                           	opt stack 20
 32686                           
 32687                           ;data.c: 448: float v1,v2;
 32688                           ;data.c: 449: float f1,f2;
 32689                           ;data.c: 450: f1=(float)h;
 32690                           
 32691                           ;incstack = 0
 32692  003358  C1FB  F060         	movff	cal_diff_hight_to_vol_h@h,___xxtofl@val
 32693  00335C  C1FC  F061         	movff	cal_diff_hight_to_vol_h@h+1,___xxtofl@val+1
 32694  003360  C1FD  F062         	movff	cal_diff_hight_to_vol_h@h+2,___xxtofl@val+2
 32695  003364  C1FE  F063         	movff	cal_diff_hight_to_vol_h@h+3,___xxtofl@val+3
 32696  003368  0E01               	movlw	1
 32697  00336A  EC11  F020         	call	___xxtofl
 32698  00336E  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f1
 32699  003372  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f1+1
 32700  003376  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f1+2
 32701  00337A  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f1+3
 32702                           
 32703                           ;data.c: 451: if(f1<0.0)f1=0.0;
 32704  00337E  0103               	movlb	3	; () banked
 32705  003380  AFD9               	btfss	(cal_diff_hight_to_vol_h@f1+3)& (0+255),7,b
 32706  003382  D009               	goto	l14495
 32707                           
 32708                           ; BSR set to: 3
 32709  003384  0E00               	movlw	0
 32710  003386  0103               	movlb	3	; () banked
 32711  003388  6FD6               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 32712  00338A  0E00               	movlw	0
 32713  00338C  6FD7               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 32714  00338E  0E00               	movlw	0
 32715  003390  6FD8               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 32716  003392  0E00               	movlw	0
 32717  003394  6FD9               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 32718  003396                     l14495:
 32719                           
 32720                           ; BSR set to: 3
 32721                           ;data.c: 452: f2=(float)(stSysData.d);
 32722  003396  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 32723  00339A  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 32724  00339E  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 32725  0033A2  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 32726  0033A6  0E00               	movlw	0
 32727  0033A8  EC11  F020         	call	___xxtofl
 32728  0033AC  C060  F3CE         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f2
 32729  0033B0  C061  F3CF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f2+1
 32730  0033B4  C062  F3D0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f2+2
 32731  0033B8  C063  F3D1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f2+3
 32732                           
 32733                           ;data.c: 453: f1=f1/f2;
 32734  0033BC  C3D6  F087         	movff	cal_diff_hight_to_vol_h@f1,___fldiv@b
 32735  0033C0  C3D7  F088         	movff	cal_diff_hight_to_vol_h@f1+1,___fldiv@b+1
 32736  0033C4  C3D8  F089         	movff	cal_diff_hight_to_vol_h@f1+2,___fldiv@b+2
 32737  0033C8  C3D9  F08A         	movff	cal_diff_hight_to_vol_h@f1+3,___fldiv@b+3
 32738  0033CC  C3CE  F08B         	movff	cal_diff_hight_to_vol_h@f2,___fldiv@a
 32739  0033D0  C3CF  F08C         	movff	cal_diff_hight_to_vol_h@f2+1,___fldiv@a+1
 32740  0033D4  C3D0  F08D         	movff	cal_diff_hight_to_vol_h@f2+2,___fldiv@a+2
 32741  0033D8  C3D1  F08E         	movff	cal_diff_hight_to_vol_h@f2+3,___fldiv@a+3
 32742  0033DC  ECA9  F011         	call	___fldiv	;wreg free
 32743  0033E0  C087  F3D6         	movff	?___fldiv,cal_diff_hight_to_vol_h@f1
 32744  0033E4  C088  F3D7         	movff	?___fldiv+1,cal_diff_hight_to_vol_h@f1+1
 32745  0033E8  C089  F3D8         	movff	?___fldiv+2,cal_diff_hight_to_vol_h@f1+2
 32746  0033EC  C08A  F3D9         	movff	?___fldiv+3,cal_diff_hight_to_vol_h@f1+3
 32747                           
 32748                           ;data.c: 454: if(f1>1.0)f1=1.0;
 32749  0033F0  0E00               	movlw	0
 32750  0033F2  0100               	movlb	0	; () banked
 32751  0033F4  6FB8               	movwf	___flge@ff1& (0+255),b
 32752  0033F6  0E00               	movlw	0
 32753  0033F8  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 32754  0033FA  0E80               	movlw	128
 32755  0033FC  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 32756  0033FE  0E3F               	movlw	63
 32757  003400  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 32758  003402  C3D6  F0BC         	movff	cal_diff_hight_to_vol_h@f1,___flge@ff2
 32759  003406  C3D7  F0BD         	movff	cal_diff_hight_to_vol_h@f1+1,___flge@ff2+1
 32760  00340A  C3D8  F0BE         	movff	cal_diff_hight_to_vol_h@f1+2,___flge@ff2+2
 32761  00340E  C3D9  F0BF         	movff	cal_diff_hight_to_vol_h@f1+3,___flge@ff2+3
 32762  003412  EC94  F023         	call	___flge	;wreg free
 32763  003416  0100               	movlb	0	; () banked
 32764  003418  B0D8               	btfsc	status,0,c
 32765  00341A  D009               	goto	l14503
 32766                           
 32767                           ; BSR set to: 0
 32768  00341C  0E00               	movlw	0
 32769  00341E  0103               	movlb	3	; () banked
 32770  003420  6FD6               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 32771  003422  0E00               	movlw	0
 32772  003424  6FD7               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 32773  003426  0E80               	movlw	128
 32774  003428  6FD8               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 32775  00342A  0E3F               	movlw	63
 32776  00342C  6FD9               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 32777  00342E                     l14503:
 32778                           
 32779                           ;data.c: 456: f2=f1;
 32780  00342E  C3D6  F3CE         	movff	cal_diff_hight_to_vol_h@f1,cal_diff_hight_to_vol_h@f2
 32781  003432  C3D7  F3CF         	movff	cal_diff_hight_to_vol_h@f1+1,cal_diff_hight_to_vol_h@f2+1
 32782  003436  C3D8  F3D0         	movff	cal_diff_hight_to_vol_h@f1+2,cal_diff_hight_to_vol_h@f2+2
 32783  00343A  C3D9  F3D1         	movff	cal_diff_hight_to_vol_h@f1+3,cal_diff_hight_to_vol_h@f2+3
 32784                           
 32785                           ;data.c: 457: f1=m_interp1_float_fast((float*)hKcy,f1,sizeof(hKcy)/sizeof(hKcy[0]));
 32786  00343E  0EAB               	movlw	low _hKcy
 32787  003440  0100               	movlb	0	; () banked
 32788  003442  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 32789  003444  0EF0               	movlw	high _hKcy
 32790  003446  0100               	movlb	0	; () banked
 32791  003448  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 32792  00344A  C3D6  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 32793  00344E  C3D7  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 32794  003452  C3D8  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 32795  003456  C3D9  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 32796  00345A  0E00               	movlw	0
 32797  00345C  0100               	movlb	0	; () banked
 32798  00345E  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 32799  003460  0E65               	movlw	101
 32800  003462  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 32801  003464  EC95  F00F         	call	_m_interp1_float_fast	;wreg free
 32802  003468  C0C4  F3D6         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 32803  00346C  C0C5  F3D7         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 32804  003470  C0C6  F3D8         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 32805  003474  C0C7  F3D9         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 32806                           
 32807                           ;data.c: 458: v1=(float)(stSysData.V1);
 32808  003478  C210  F060         	movff	_stSysData+16,___xxtofl@val
 32809  00347C  C211  F061         	movff	_stSysData+17,___xxtofl@val+1
 32810  003480  C212  F062         	movff	_stSysData+18,___xxtofl@val+2
 32811  003484  C213  F063         	movff	_stSysData+19,___xxtofl@val+3
 32812  003488  0E01               	movlw	1
 32813  00348A  EC11  F020         	call	___xxtofl
 32814  00348E  C060  F3D2         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v1
 32815  003492  C061  F3D3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v1+1
 32816  003496  C062  F3D4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v1+2
 32817  00349A  C063  F3D5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v1+3
 32818                           
 32819                           ;data.c: 459: v1=v1*f1;
 32820  00349E  C3D2  F06E         	movff	cal_diff_hight_to_vol_h@v1,___flmul@b
 32821  0034A2  C3D3  F06F         	movff	cal_diff_hight_to_vol_h@v1+1,___flmul@b+1
 32822  0034A6  C3D4  F070         	movff	cal_diff_hight_to_vol_h@v1+2,___flmul@b+2
 32823  0034AA  C3D5  F071         	movff	cal_diff_hight_to_vol_h@v1+3,___flmul@b+3
 32824  0034AE  C3D6  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 32825  0034B2  C3D7  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 32826  0034B6  C3D8  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 32827  0034BA  C3D9  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 32828  0034BE  EC08  F00B         	call	___flmul	;wreg free
 32829  0034C2  C06E  F3D2         	movff	?___flmul,cal_diff_hight_to_vol_h@v1
 32830  0034C6  C06F  F3D3         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v1+1
 32831  0034CA  C070  F3D4         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v1+2
 32832  0034CE  C071  F3D5         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v1+3
 32833                           
 32834                           ;data.c: 461: f1=f2;
 32835  0034D2  C3CE  F3D6         	movff	cal_diff_hight_to_vol_h@f2,cal_diff_hight_to_vol_h@f1
 32836  0034D6  C3CF  F3D7         	movff	cal_diff_hight_to_vol_h@f2+1,cal_diff_hight_to_vol_h@f1+1
 32837  0034DA  C3D0  F3D8         	movff	cal_diff_hight_to_vol_h@f2+2,cal_diff_hight_to_vol_h@f1+2
 32838  0034DE  C3D1  F3D9         	movff	cal_diff_hight_to_vol_h@f2+3,cal_diff_hight_to_vol_h@f1+3
 32839                           
 32840                           ;data.c: 462: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 32841  0034E2  0E17               	movlw	low _hKel
 32842  0034E4  0100               	movlb	0	; () banked
 32843  0034E6  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 32844  0034E8  0EEF               	movlw	high _hKel
 32845  0034EA  0100               	movlb	0	; () banked
 32846  0034EC  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 32847  0034EE  C3D6  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 32848  0034F2  C3D7  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 32849  0034F6  C3D8  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 32850  0034FA  C3D9  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 32851  0034FE  0E00               	movlw	0
 32852  003500  0100               	movlb	0	; () banked
 32853  003502  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 32854  003504  0E65               	movlw	101
 32855  003506  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 32856  003508  EC95  F00F         	call	_m_interp1_float_fast	;wreg free
 32857  00350C  C0C4  F3D6         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 32858  003510  C0C5  F3D7         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 32859  003514  C0C6  F3D8         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 32860  003518  C0C7  F3D9         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 32861                           
 32862                           ;data.c: 463: v2=(float)(stSysData.V2);
 32863  00351C  C214  F060         	movff	_stSysData+20,___xxtofl@val
 32864  003520  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 32865  003524  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 32866  003528  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 32867  00352C  0E01               	movlw	1
 32868  00352E  EC11  F020         	call	___xxtofl
 32869  003532  C060  F3CA         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v2
 32870  003536  C061  F3CB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v2+1
 32871  00353A  C062  F3CC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v2+2
 32872  00353E  C063  F3CD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v2+3
 32873                           
 32874                           ;data.c: 464: v2=v2*f1;
 32875  003542  C3CA  F06E         	movff	cal_diff_hight_to_vol_h@v2,___flmul@b
 32876  003546  C3CB  F06F         	movff	cal_diff_hight_to_vol_h@v2+1,___flmul@b+1
 32877  00354A  C3CC  F070         	movff	cal_diff_hight_to_vol_h@v2+2,___flmul@b+2
 32878  00354E  C3CD  F071         	movff	cal_diff_hight_to_vol_h@v2+3,___flmul@b+3
 32879  003552  C3D6  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 32880  003556  C3D7  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 32881  00355A  C3D8  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 32882  00355E  C3D9  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 32883  003562  EC08  F00B         	call	___flmul	;wreg free
 32884  003566  C06E  F3CA         	movff	?___flmul,cal_diff_hight_to_vol_h@v2
 32885  00356A  C06F  F3CB         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v2+1
 32886  00356E  C070  F3CC         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v2+2
 32887  003572  C071  F3CD         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v2+3
 32888                           
 32889                           ;data.c: 466: v1=v1+v2;
 32890  003576  C3D2  F0A4         	movff	cal_diff_hight_to_vol_h@v1,___fladd@b
 32891  00357A  C3D3  F0A5         	movff	cal_diff_hight_to_vol_h@v1+1,___fladd@b+1
 32892  00357E  C3D4  F0A6         	movff	cal_diff_hight_to_vol_h@v1+2,___fladd@b+2
 32893  003582  C3D5  F0A7         	movff	cal_diff_hight_to_vol_h@v1+3,___fladd@b+3
 32894  003586  C3CA  F0A8         	movff	cal_diff_hight_to_vol_h@v2,___fladd@a
 32895  00358A  C3CB  F0A9         	movff	cal_diff_hight_to_vol_h@v2+1,___fladd@a+1
 32896  00358E  C3CC  F0AA         	movff	cal_diff_hight_to_vol_h@v2+2,___fladd@a+2
 32897  003592  C3CD  F0AB         	movff	cal_diff_hight_to_vol_h@v2+3,___fladd@a+3
 32898  003596  ECB4  F008         	call	___fladd	;wreg free
 32899  00359A  C0A4  F3D2         	movff	?___fladd,cal_diff_hight_to_vol_h@v1
 32900  00359E  C0A5  F3D3         	movff	?___fladd+1,cal_diff_hight_to_vol_h@v1+1
 32901  0035A2  C0A6  F3D4         	movff	?___fladd+2,cal_diff_hight_to_vol_h@v1+2
 32902  0035A6  C0A7  F3D5         	movff	?___fladd+3,cal_diff_hight_to_vol_h@v1+3
 32903                           
 32904                           ;data.c: 467: return (int32_t)v1;
 32905  0035AA  C3D2  F0B8         	movff	cal_diff_hight_to_vol_h@v1,___fltol@f1
 32906  0035AE  C3D3  F0B9         	movff	cal_diff_hight_to_vol_h@v1+1,___fltol@f1+1
 32907  0035B2  C3D4  F0BA         	movff	cal_diff_hight_to_vol_h@v1+2,___fltol@f1+2
 32908  0035B6  C3D5  F0BB         	movff	cal_diff_hight_to_vol_h@v1+3,___fltol@f1+3
 32909  0035BA  EC7A  F02E         	call	___fltol	;wreg free
 32910  0035BE  C0B8  F1FB         	movff	?___fltol,?_cal_diff_hight_to_vol_h
 32911  0035C2  C0B9  F1FC         	movff	?___fltol+1,?_cal_diff_hight_to_vol_h+1
 32912  0035C6  C0BA  F1FD         	movff	?___fltol+2,?_cal_diff_hight_to_vol_h+2
 32913  0035CA  C0BB  F1FE         	movff	?___fltol+3,?_cal_diff_hight_to_vol_h+3
 32914  0035CE  0012               	return	
 32915  0035D0                     __end_of_cal_diff_hight_to_vol_h:
 32916                           	opt stack 0
 32917                           tosu	equ	0xFFF
 32918                           tosh	equ	0xFFE
 32919                           tosl	equ	0xFFD
 32920                           pclath	equ	0xFFA
 32921                           tblptru	equ	0xFF8
 32922                           tblptrh	equ	0xFF7
 32923                           tblptrl	equ	0xFF6
 32924                           tablat	equ	0xFF5
 32925                           prodh	equ	0xFF4
 32926                           prodl	equ	0xFF3
 32927                           intcon	equ	0xFF2
 32928                           indf0	equ	0xFEF
 32929                           postinc0	equ	0xFEE
 32930                           fsr0h	equ	0xFEA
 32931                           fsr0l	equ	0xFE9
 32932                           wreg	equ	0xFE8
 32933                           indf1	equ	0xFE7
 32934                           postinc1	equ	0xFE6
 32935                           postdec1	equ	0xFE5
 32936                           plusw1	equ	0xFE3
 32937                           fsr1h	equ	0xFE2
 32938                           fsr1l	equ	0xFE1
 32939                           indf2	equ	0xFDF
 32940                           postinc2	equ	0xFDE
 32941                           postdec2	equ	0xFDD
 32942                           plusw2	equ	0xFDB
 32943                           fsr2h	equ	0xFDA
 32944                           fsr2l	equ	0xFD9
 32945                           status	equ	0xFD8
 32946                           
 32947 ;; *************** function _m_interp1_float_fast *****************
 32948 ;; Defined at:
 32949 ;;		line 417 in file "src/api/data.c"
 32950 ;; Parameters:    Size  Location     Type
 32951 ;;  tab             2  100[BANK0 ] PTR float 
 32952 ;;		 -> hKel(404), hKcy(404), 
 32953 ;;  in              4  102[BANK0 ] float 
 32954 ;;  len             2  106[BANK0 ] int 
 32955 ;; Auto vars:     Size  Location     Type
 32956 ;;  f               4  128[BANK0 ] float 
 32957 ;;  y               4  120[BANK0 ] float 
 32958 ;;  x               4  116[BANK0 ] float 
 32959 ;;  i               2  132[BANK0 ] unsigned int 
 32960 ;; Return value:  Size  Location     Type
 32961 ;;                  4  100[BANK0 ] float 
 32962 ;; Registers used:
 32963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32964 ;; Tracked objects:
 32965 ;;		On entry : 0/0
 32966 ;;		On exit  : 0/0
 32967 ;;		Unchanged: 0/0
 32968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32969 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32970 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32971 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32972 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32973 ;;Total ram usage:       34 bytes
 32974 ;; Hardware stack levels used:    1
 32975 ;; Hardware stack levels required when called:    5
 32976 ;; This function calls:
 32977 ;;		___fladd
 32978 ;;		___fldiv
 32979 ;;		___flge
 32980 ;;		___flmul
 32981 ;;		___flneg
 32982 ;;		___xxtofl
 32983 ;; This function is called by:
 32984 ;;		_cal_diff_hight_to_vol_h
 32985 ;;		_cal_diff_hight_to_vol_v
 32986 ;; This function uses a non-reentrant model
 32987 ;;
 32988                           
 32989                           	psect	text176
 32990  001F2A                     __ptext176:
 32991                           	opt stack 0
 32992  001F2A                     _m_interp1_float_fast:
 32993                           	opt stack 20
 32994                           
 32995                           ;data.c: 419: uint16_t i;
 32996                           ;data.c: 420: float f,x,y;
 32997                           ;data.c: 421: for(i=0;i<len-1;i++){
 32998                           
 32999                           ;incstack = 0
 33000  001F2A  0E00               	movlw	0
 33001  001F2C  0100               	movlb	0	; () banked
 33002  001F2E  6FE5               	movwf	(m_interp1_float_fast@i+1)& (0+255),b
 33003  001F30  0E00               	movlw	0
 33004  001F32  6FE4               	movwf	m_interp1_float_fast@i& (0+255),b
 33005  001F34  D0D0               	goto	l13957
 33006  001F36                     l13945:
 33007                           
 33008                           ; BSR set to: 0
 33009                           ;data.c: 422: if(tab[i]<tab[i+1]){
 33010  001F36  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33011  001F3A  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33012  001F3E  0100               	movlb	0	; () banked
 33013  001F40  90D8               	bcf	status,0,c
 33014  001F42  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33015  001F44  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33016  001F46  0100               	movlb	0	; () banked
 33017  001F48  90D8               	bcf	status,0,c
 33018  001F4A  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33019  001F4C  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33020  001F4E  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33021  001F52  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33022  001F56  0100               	movlb	0	; () banked
 33023  001F58  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33024  001F5A  0100               	movlb	0	; () banked
 33025  001F5C  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33026  001F5E  0100               	movlb	0	; () banked
 33027  001F60  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33028  001F62  0100               	movlb	0	; () banked
 33029  001F64  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33030  001F66  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33031  001F6A  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33032  001F6E                     	if	0	;tblptru may be non-zero
 33033  001F6E                     	endif
 33034  001F6E                     	if	0	;tblptru may be non-zero
 33035  001F6E                     	endif
 33036  001F6E  0009               	tblrd		*+
 33037  001F70  CFF5 F0B8          	movff	tablat,___flge@ff1
 33038  001F74  0009               	tblrd		*+
 33039  001F76  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 33040  001F7A  0009               	tblrd		*+
 33041  001F7C  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 33042  001F80  000A               	tblrd		*-
 33043  001F82  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 33044  001F86  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 33045  001F8A  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 33046  001F8E  0100               	movlb	0	; () banked
 33047  001F90  90D8               	bcf	status,0,c
 33048  001F92  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33049  001F94  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33050  001F96  0100               	movlb	0	; () banked
 33051  001F98  90D8               	bcf	status,0,c
 33052  001F9A  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33053  001F9C  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33054  001F9E  0E04               	movlw	4
 33055  001FA0  0100               	movlb	0	; () banked
 33056  001FA2  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33057  001FA4  0E00               	movlw	0
 33058  001FA6  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 33059  001FA8  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 33060  001FAC  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 33061  001FB0  0100               	movlb	0	; () banked
 33062  001FB2  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 33063  001FB4  0100               	movlb	0	; () banked
 33064  001FB6  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 33065  001FB8  0100               	movlb	0	; () banked
 33066  001FBA  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 33067  001FBC  0100               	movlb	0	; () banked
 33068  001FBE  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 33069  001FC0  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 33070  001FC4  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 33071  001FC8                     	if	0	;tblptru may be non-zero
 33072  001FC8                     	endif
 33073  001FC8                     	if	0	;tblptru may be non-zero
 33074  001FC8                     	endif
 33075  001FC8  0009               	tblrd		*+
 33076  001FCA  CFF5 F0BC          	movff	tablat,___flge@ff2
 33077  001FCE  0009               	tblrd		*+
 33078  001FD0  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 33079  001FD4  0009               	tblrd		*+
 33080  001FD6  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 33081  001FDA  000A               	tblrd		*-
 33082  001FDC  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 33083  001FE0  EC94  F023         	call	___flge	;wreg free
 33084  001FE4  0100               	movlb	0	; () banked
 33085  001FE6  B0D8               	btfsc	status,0,c
 33086  001FE8  D03B               	goto	l13951
 33087                           
 33088                           ; BSR set to: 0
 33089                           ;data.c: 423: if(in<=tab[i+1])break;
 33090  001FEA  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33091  001FEE  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33092  001FF2  0100               	movlb	0	; () banked
 33093  001FF4  90D8               	bcf	status,0,c
 33094  001FF6  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33095  001FF8  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33096  001FFA  0100               	movlb	0	; () banked
 33097  001FFC  90D8               	bcf	status,0,c
 33098  001FFE  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33099  002000  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33100  002002  0E04               	movlw	4
 33101  002004  0100               	movlb	0	; () banked
 33102  002006  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 33103  002008  0E00               	movlw	0
 33104  00200A  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 33105  00200C  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33106  002010  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33107  002014  0100               	movlb	0	; () banked
 33108  002016  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33109  002018  0100               	movlb	0	; () banked
 33110  00201A  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33111  00201C  0100               	movlb	0	; () banked
 33112  00201E  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33113  002020  0100               	movlb	0	; () banked
 33114  002022  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33115  002024  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33116  002028  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33117  00202C                     	if	0	;tblptru may be non-zero
 33118  00202C                     	endif
 33119  00202C                     	if	0	;tblptru may be non-zero
 33120  00202C                     	endif
 33121  00202C  0009               	tblrd		*+
 33122  00202E  CFF5 F0B8          	movff	tablat,___flge@ff1
 33123  002032  0009               	tblrd		*+
 33124  002034  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 33125  002038  0009               	tblrd		*+
 33126  00203A  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 33127  00203E  000A               	tblrd		*-
 33128  002040  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 33129  002044  C0C6  F0BC         	movff	m_interp1_float_fast@in,___flge@ff2
 33130  002048  C0C7  F0BD         	movff	m_interp1_float_fast@in+1,___flge@ff2+1
 33131  00204C  C0C8  F0BE         	movff	m_interp1_float_fast@in+2,___flge@ff2+2
 33132  002050  C0C9  F0BF         	movff	m_interp1_float_fast@in+3,___flge@ff2+3
 33133  002054  EC94  F023         	call	___flge	;wreg free
 33134  002058  0100               	movlb	0	; () banked
 33135  00205A  B0D8               	btfsc	status,0,c
 33136  00205C  D058               	goto	l13959
 33137  00205E  D038               	goto	l13955
 33138  002060                     l13951:
 33139                           
 33140                           ; BSR set to: 0
 33141                           ;data.c: 425: if(in>=tab[i+1])break;
 33142  002060  C0C6  F0B8         	movff	m_interp1_float_fast@in,___flge@ff1
 33143  002064  C0C7  F0B9         	movff	m_interp1_float_fast@in+1,___flge@ff1+1
 33144  002068  C0C8  F0BA         	movff	m_interp1_float_fast@in+2,___flge@ff1+2
 33145  00206C  C0C9  F0BB         	movff	m_interp1_float_fast@in+3,___flge@ff1+3
 33146  002070  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33147  002074  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33148  002078  0100               	movlb	0	; () banked
 33149  00207A  90D8               	bcf	status,0,c
 33150  00207C  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33151  00207E  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33152  002080  0100               	movlb	0	; () banked
 33153  002082  90D8               	bcf	status,0,c
 33154  002084  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33155  002086  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33156  002088  0E04               	movlw	4
 33157  00208A  0100               	movlb	0	; () banked
 33158  00208C  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 33159  00208E  0E00               	movlw	0
 33160  002090  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 33161  002092  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33162  002096  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33163  00209A  0100               	movlb	0	; () banked
 33164  00209C  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33165  00209E  0100               	movlb	0	; () banked
 33166  0020A0  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33167  0020A2  0100               	movlb	0	; () banked
 33168  0020A4  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33169  0020A6  0100               	movlb	0	; () banked
 33170  0020A8  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33171  0020AA  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33172  0020AE  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33173  0020B2                     	if	0	;tblptru may be non-zero
 33174  0020B2                     	endif
 33175  0020B2                     	if	0	;tblptru may be non-zero
 33176  0020B2                     	endif
 33177  0020B2  0009               	tblrd		*+
 33178  0020B4  CFF5 F0BC          	movff	tablat,___flge@ff2
 33179  0020B8  0009               	tblrd		*+
 33180  0020BA  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 33181  0020BE  0009               	tblrd		*+
 33182  0020C0  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 33183  0020C4  000A               	tblrd		*-
 33184  0020C6  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 33185  0020CA  EC94  F023         	call	___flge	;wreg free
 33186  0020CE  D7C4               	goto	L26
 33187  0020D0                     l13955:
 33188                           
 33189                           ; BSR set to: 0
 33190  0020D0  0100               	movlb	0	; () banked
 33191  0020D2  4BE4               	infsnz	m_interp1_float_fast@i& (0+255),f,b
 33192  0020D4  2BE5               	incf	(m_interp1_float_fast@i+1)& (0+255),f,b
 33193  0020D6                     l13957:
 33194                           
 33195                           ; BSR set to: 0
 33196  0020D6  0EFF               	movlw	255
 33197  0020D8  0100               	movlb	0	; () banked
 33198  0020DA  6FCC               	movwf	??_m_interp1_float_fast& (0+255),b
 33199  0020DC  0EFF               	movlw	255
 33200  0020DE  0100               	movlb	0	; () banked
 33201  0020E0  6FCD               	movwf	(??_m_interp1_float_fast+1)& (0+255),b
 33202  0020E2  C0CA  F0CE         	movff	m_interp1_float_fast@len,??_m_interp1_float_fast+2
 33203  0020E6  C0CB  F0CF         	movff	m_interp1_float_fast@len+1,??_m_interp1_float_fast+3
 33204  0020EA  0100               	movlb	0	; () banked
 33205  0020EC  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33206  0020EE  0100               	movlb	0	; () banked
 33207  0020F0  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33208  0020F2  0100               	movlb	0	; () banked
 33209  0020F4  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33210  0020F6  0100               	movlb	0	; () banked
 33211  0020F8  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33212  0020FA  0100               	movlb	0	; () banked
 33213  0020FC  51CE               	movf	(??_m_interp1_float_fast+2)& (0+255),w,b
 33214  0020FE  0100               	movlb	0	; () banked
 33215  002100  5DE4               	subwf	m_interp1_float_fast@i& (0+255),w,b
 33216  002102  0100               	movlb	0	; () banked
 33217  002104  51CF               	movf	(??_m_interp1_float_fast+3)& (0+255),w,b
 33218  002106  0100               	movlb	0	; () banked
 33219  002108  59E5               	subwfb	(m_interp1_float_fast@i+1)& (0+255),w,b
 33220  00210A  A0D8               	btfss	status,0,c
 33221  00210C  D714               	goto	l13945
 33222  00210E                     l13959:
 33223                           
 33224                           ; BSR set to: 0
 33225                           ;data.c: 426: }
 33226                           ;data.c: 427: }
 33227                           ;data.c: 428: f=tab[i];
 33228  00210E  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33229  002112  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33230  002116  0100               	movlb	0	; () banked
 33231  002118  90D8               	bcf	status,0,c
 33232  00211A  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33233  00211C  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33234  00211E  0100               	movlb	0	; () banked
 33235  002120  90D8               	bcf	status,0,c
 33236  002122  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33237  002124  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33238  002126  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33239  00212A  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33240  00212E  0100               	movlb	0	; () banked
 33241  002130  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33242  002132  0100               	movlb	0	; () banked
 33243  002134  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33244  002136  0100               	movlb	0	; () banked
 33245  002138  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33246  00213A  0100               	movlb	0	; () banked
 33247  00213C  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33248  00213E  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33249  002142  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33250  002146                     	if	0	;tblptru may be non-zero
 33251  002146                     	endif
 33252  002146                     	if	0	;tblptru may be non-zero
 33253  002146                     	endif
 33254  002146  0009               	tblrd		*+
 33255  002148  CFF5 F0E0          	movff	tablat,m_interp1_float_fast@f
 33256  00214C  0009               	tblrd		*+
 33257  00214E  CFF5 F0E1          	movff	tablat,m_interp1_float_fast@f+1
 33258  002152  0009               	tblrd		*+
 33259  002154  CFF5 F0E2          	movff	tablat,m_interp1_float_fast@f+2
 33260  002158  000A               	tblrd		*-
 33261  00215A  CFF5 F0E3          	movff	tablat,m_interp1_float_fast@f+3
 33262                           
 33263                           ; BSR set to: 0
 33264                           ;data.c: 429: x=0.01f;
 33265  00215E  0E0A               	movlw	10
 33266  002160  0100               	movlb	0	; () banked
 33267  002162  6FD4               	movwf	m_interp1_float_fast@x& (0+255),b
 33268  002164  0ED7               	movlw	215
 33269  002166  6FD5               	movwf	(m_interp1_float_fast@x+1)& (0+255),b
 33270  002168  0E23               	movlw	35
 33271  00216A  6FD6               	movwf	(m_interp1_float_fast@x+2)& (0+255),b
 33272  00216C  0E3C               	movlw	60
 33273  00216E  6FD7               	movwf	(m_interp1_float_fast@x+3)& (0+255),b
 33274                           
 33275                           ; BSR set to: 0
 33276                           ;data.c: 430: y=tab[i+1]-tab[i];
 33277  002170  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33278  002174  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33279  002178  0100               	movlb	0	; () banked
 33280  00217A  90D8               	bcf	status,0,c
 33281  00217C  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33282  00217E  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33283  002180  0100               	movlb	0	; () banked
 33284  002182  90D8               	bcf	status,0,c
 33285  002184  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33286  002186  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33287  002188  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33288  00218C  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33289  002190  0100               	movlb	0	; () banked
 33290  002192  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33291  002194  0100               	movlb	0	; () banked
 33292  002196  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33293  002198  0100               	movlb	0	; () banked
 33294  00219A  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33295  00219C  0100               	movlb	0	; () banked
 33296  00219E  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33297  0021A0  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33298  0021A4  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33299  0021A8                     	if	0	;tblptru may be non-zero
 33300  0021A8                     	endif
 33301  0021A8                     	if	0	;tblptru may be non-zero
 33302  0021A8                     	endif
 33303  0021A8  0009               	tblrd		*+
 33304  0021AA  CFF5 F0A0          	movff	tablat,___flneg@f1
 33305  0021AE  0009               	tblrd		*+
 33306  0021B0  CFF5 F0A1          	movff	tablat,___flneg@f1+1
 33307  0021B4  0009               	tblrd		*+
 33308  0021B6  CFF5 F0A2          	movff	tablat,___flneg@f1+2
 33309  0021BA  000A               	tblrd		*-
 33310  0021BC  CFF5 F0A3          	movff	tablat,___flneg@f1+3
 33311  0021C0  EC9B  F04D         	call	___flneg	;wreg free
 33312  0021C4  C0A0  F0A4         	movff	?___flneg,___fladd@b
 33313  0021C8  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 33314  0021CC  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 33315  0021D0  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 33316  0021D4  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 33317  0021D8  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 33318  0021DC  0100               	movlb	0	; () banked
 33319  0021DE  90D8               	bcf	status,0,c
 33320  0021E0  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33321  0021E2  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33322  0021E4  0100               	movlb	0	; () banked
 33323  0021E6  90D8               	bcf	status,0,c
 33324  0021E8  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33325  0021EA  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33326  0021EC  0E04               	movlw	4
 33327  0021EE  0100               	movlb	0	; () banked
 33328  0021F0  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33329  0021F2  0E00               	movlw	0
 33330  0021F4  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 33331  0021F6  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 33332  0021FA  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 33333  0021FE  0100               	movlb	0	; () banked
 33334  002200  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 33335  002202  0100               	movlb	0	; () banked
 33336  002204  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 33337  002206  0100               	movlb	0	; () banked
 33338  002208  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 33339  00220A  0100               	movlb	0	; () banked
 33340  00220C  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 33341  00220E  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 33342  002212  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 33343  002216                     	if	0	;tblptru may be non-zero
 33344  002216                     	endif
 33345  002216                     	if	0	;tblptru may be non-zero
 33346  002216                     	endif
 33347  002216  0009               	tblrd		*+
 33348  002218  CFF5 F0A8          	movff	tablat,___fladd@a
 33349  00221C  0009               	tblrd		*+
 33350  00221E  CFF5 F0A9          	movff	tablat,___fladd@a+1
 33351  002222  0009               	tblrd		*+
 33352  002224  CFF5 F0AA          	movff	tablat,___fladd@a+2
 33353  002228  000A               	tblrd		*-
 33354  00222A  CFF5 F0AB          	movff	tablat,___fladd@a+3
 33355  00222E  ECB4  F008         	call	___fladd	;wreg free
 33356  002232  C0A4  F0D8         	movff	?___fladd,m_interp1_float_fast@y
 33357  002236  C0A5  F0D9         	movff	?___fladd+1,m_interp1_float_fast@y+1
 33358  00223A  C0A6  F0DA         	movff	?___fladd+2,m_interp1_float_fast@y+2
 33359  00223E  C0A7  F0DB         	movff	?___fladd+3,m_interp1_float_fast@y+3
 33360                           
 33361                           ;data.c: 431: f=f+(in-0.01*i)*(y/x);
 33362  002242  C0C6  F0A8         	movff	m_interp1_float_fast@in,___fladd@a
 33363  002246  C0C7  F0A9         	movff	m_interp1_float_fast@in+1,___fladd@a+1
 33364  00224A  C0C8  F0AA         	movff	m_interp1_float_fast@in+2,___fladd@a+2
 33365  00224E  C0C9  F0AB         	movff	m_interp1_float_fast@in+3,___fladd@a+3
 33366  002252  0E0A               	movlw	10
 33367  002254  0100               	movlb	0	; () banked
 33368  002256  6F72               	movwf	___flmul@a& (0+255),b
 33369  002258  0ED7               	movlw	215
 33370  00225A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 33371  00225C  0E23               	movlw	35
 33372  00225E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 33373  002260  0E3C               	movlw	60
 33374  002262  6F75               	movwf	(___flmul@a+3)& (0+255),b
 33375  002264  C0E4  F060         	movff	m_interp1_float_fast@i,___xxtofl@val
 33376  002268  C0E5  F061         	movff	m_interp1_float_fast@i+1,___xxtofl@val+1
 33377  00226C  0100               	movlb	0	; () banked
 33378  00226E  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 33379  002270  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 33380  002272  0E00               	movlw	0
 33381  002274  EC11  F020         	call	___xxtofl
 33382  002278  C060  F06E         	movff	?___xxtofl,___flmul@b
 33383  00227C  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 33384  002280  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 33385  002284  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 33386  002288  EC08  F00B         	call	___flmul	;wreg free
 33387  00228C  C06E  F0A0         	movff	?___flmul,___flneg@f1
 33388  002290  C06F  F0A1         	movff	?___flmul+1,___flneg@f1+1
 33389  002294  C070  F0A2         	movff	?___flmul+2,___flneg@f1+2
 33390  002298  C071  F0A3         	movff	?___flmul+3,___flneg@f1+3
 33391  00229C  EC9B  F04D         	call	___flneg	;wreg free
 33392  0022A0  C0A0  F0A4         	movff	?___flneg,___fladd@b
 33393  0022A4  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 33394  0022A8  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 33395  0022AC  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 33396  0022B0  ECB4  F008         	call	___fladd	;wreg free
 33397  0022B4  C0A4  F0DC         	movff	?___fladd,_m_interp1_float_fast$5883
 33398  0022B8  C0A5  F0DD         	movff	?___fladd+1,_m_interp1_float_fast$5883+1
 33399  0022BC  C0A6  F0DE         	movff	?___fladd+2,_m_interp1_float_fast$5883+2
 33400  0022C0  C0A7  F0DF         	movff	?___fladd+3,_m_interp1_float_fast$5883+3
 33401                           
 33402                           ;data.c: 431: f=f+(in-0.01*i)*(y/x);
 33403  0022C4  C0D4  F08B         	movff	m_interp1_float_fast@x,___fldiv@a
 33404  0022C8  C0D5  F08C         	movff	m_interp1_float_fast@x+1,___fldiv@a+1
 33405  0022CC  C0D6  F08D         	movff	m_interp1_float_fast@x+2,___fldiv@a+2
 33406  0022D0  C0D7  F08E         	movff	m_interp1_float_fast@x+3,___fldiv@a+3
 33407  0022D4  C0D8  F087         	movff	m_interp1_float_fast@y,___fldiv@b
 33408  0022D8  C0D9  F088         	movff	m_interp1_float_fast@y+1,___fldiv@b+1
 33409  0022DC  C0DA  F089         	movff	m_interp1_float_fast@y+2,___fldiv@b+2
 33410  0022E0  C0DB  F08A         	movff	m_interp1_float_fast@y+3,___fldiv@b+3
 33411  0022E4  ECA9  F011         	call	___fldiv	;wreg free
 33412  0022E8  C087  F072         	movff	?___fldiv,___flmul@a
 33413  0022EC  C088  F073         	movff	?___fldiv+1,___flmul@a+1
 33414  0022F0  C089  F074         	movff	?___fldiv+2,___flmul@a+2
 33415  0022F4  C08A  F075         	movff	?___fldiv+3,___flmul@a+3
 33416  0022F8  C0DC  F06E         	movff	_m_interp1_float_fast$5883,___flmul@b
 33417  0022FC  C0DD  F06F         	movff	_m_interp1_float_fast$5883+1,___flmul@b+1
 33418  002300  C0DE  F070         	movff	_m_interp1_float_fast$5883+2,___flmul@b+2
 33419  002304  C0DF  F071         	movff	_m_interp1_float_fast$5883+3,___flmul@b+3
 33420  002308  EC08  F00B         	call	___flmul	;wreg free
 33421  00230C  C06E  F0A4         	movff	?___flmul,___fladd@b
 33422  002310  C06F  F0A5         	movff	?___flmul+1,___fladd@b+1
 33423  002314  C070  F0A6         	movff	?___flmul+2,___fladd@b+2
 33424  002318  C071  F0A7         	movff	?___flmul+3,___fladd@b+3
 33425  00231C  C0E0  F0A8         	movff	m_interp1_float_fast@f,___fladd@a
 33426  002320  C0E1  F0A9         	movff	m_interp1_float_fast@f+1,___fladd@a+1
 33427  002324  C0E2  F0AA         	movff	m_interp1_float_fast@f+2,___fladd@a+2
 33428  002328  C0E3  F0AB         	movff	m_interp1_float_fast@f+3,___fladd@a+3
 33429  00232C  ECB4  F008         	call	___fladd	;wreg free
 33430  002330  C0A4  F0E0         	movff	?___fladd,m_interp1_float_fast@f
 33431  002334  C0A5  F0E1         	movff	?___fladd+1,m_interp1_float_fast@f+1
 33432  002338  C0A6  F0E2         	movff	?___fladd+2,m_interp1_float_fast@f+2
 33433  00233C  C0A7  F0E3         	movff	?___fladd+3,m_interp1_float_fast@f+3
 33434                           
 33435                           ;data.c: 432: return f;
 33436  002340  C0E0  F0C4         	movff	m_interp1_float_fast@f,?_m_interp1_float_fast
 33437  002344  C0E1  F0C5         	movff	m_interp1_float_fast@f+1,?_m_interp1_float_fast+1
 33438  002348  C0E2  F0C6         	movff	m_interp1_float_fast@f+2,?_m_interp1_float_fast+2
 33439  00234C  C0E3  F0C7         	movff	m_interp1_float_fast@f+3,?_m_interp1_float_fast+3
 33440  002350  0012               	return	
 33441  002352                     __end_of_m_interp1_float_fast:
 33442                           	opt stack 0
 33443                           tosu	equ	0xFFF
 33444                           tosh	equ	0xFFE
 33445                           tosl	equ	0xFFD
 33446                           pclath	equ	0xFFA
 33447                           tblptru	equ	0xFF8
 33448                           tblptrh	equ	0xFF7
 33449                           tblptrl	equ	0xFF6
 33450                           tablat	equ	0xFF5
 33451                           prodh	equ	0xFF4
 33452                           prodl	equ	0xFF3
 33453                           intcon	equ	0xFF2
 33454                           indf0	equ	0xFEF
 33455                           postinc0	equ	0xFEE
 33456                           fsr0h	equ	0xFEA
 33457                           fsr0l	equ	0xFE9
 33458                           wreg	equ	0xFE8
 33459                           indf1	equ	0xFE7
 33460                           postinc1	equ	0xFE6
 33461                           postdec1	equ	0xFE5
 33462                           plusw1	equ	0xFE3
 33463                           fsr1h	equ	0xFE2
 33464                           fsr1l	equ	0xFE1
 33465                           indf2	equ	0xFDF
 33466                           postinc2	equ	0xFDE
 33467                           postdec2	equ	0xFDD
 33468                           plusw2	equ	0xFDB
 33469                           fsr2h	equ	0xFDA
 33470                           fsr2l	equ	0xFD9
 33471                           status	equ	0xFD8
 33472                           
 33473 ;; *************** function ___flneg *****************
 33474 ;; Defined at:
 33475 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flneg.c"
 33476 ;; Parameters:    Size  Location     Type
 33477 ;;  f1              4   64[BANK0 ] float 
 33478 ;; Auto vars:     Size  Location     Type
 33479 ;;		None
 33480 ;; Return value:  Size  Location     Type
 33481 ;;                  4   64[BANK0 ] float 
 33482 ;; Registers used:
 33483 ;;		wreg, status,2, status,0
 33484 ;; Tracked objects:
 33485 ;;		On entry : 0/0
 33486 ;;		On exit  : 0/0
 33487 ;;		Unchanged: 0/0
 33488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33492 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33493 ;;Total ram usage:        4 bytes
 33494 ;; Hardware stack levels used:    1
 33495 ;; Hardware stack levels required when called:    4
 33496 ;; This function calls:
 33497 ;;		Nothing
 33498 ;; This function is called by:
 33499 ;;		_m_interp1_float_fast
 33500 ;;		_cal_diff_hight_to_vol_v
 33501 ;; This function uses a non-reentrant model
 33502 ;;
 33503                           
 33504                           	psect	text177
 33505  009B36                     __ptext177:
 33506                           	opt stack 0
 33507  009B36                     ___flneg:
 33508                           	opt stack 20
 33509                           
 33510                           ;incstack = 0
 33511  009B36  0100               	movlb	0	; () banked
 33512  009B38  51A0               	movf	___flneg@f1& (0+255),w,b
 33513  009B3A  0100               	movlb	0	; () banked
 33514  009B3C  11A1               	iorwf	(___flneg@f1+1)& (0+255),w,b
 33515  009B3E  0100               	movlb	0	; () banked
 33516  009B40  11A2               	iorwf	(___flneg@f1+2)& (0+255),w,b
 33517  009B42  0100               	movlb	0	; () banked
 33518  009B44  11A3               	iorwf	(___flneg@f1+3)& (0+255),w,b
 33519  009B46  B4D8               	btfsc	status,2,c
 33520  009B48  D009               	goto	l13869
 33521                           
 33522                           ; BSR set to: 0
 33523  009B4A  0E00               	movlw	0
 33524  009B4C  0100               	movlb	0	; () banked
 33525  009B4E  1BA0               	xorwf	___flneg@f1& (0+255),f,b
 33526  009B50  0E00               	movlw	0
 33527  009B52  1BA1               	xorwf	(___flneg@f1+1)& (0+255),f,b
 33528  009B54  0E00               	movlw	0
 33529  009B56  1BA2               	xorwf	(___flneg@f1+2)& (0+255),f,b
 33530  009B58  0E80               	movlw	128
 33531  009B5A  1BA3               	xorwf	(___flneg@f1+3)& (0+255),f,b
 33532  009B5C                     l13869:
 33533                           
 33534                           ; BSR set to: 0
 33535  009B5C  C0A0  F0A0         	movff	___flneg@f1,?___flneg
 33536  009B60  C0A1  F0A1         	movff	___flneg@f1+1,?___flneg+1
 33537  009B64  C0A2  F0A2         	movff	___flneg@f1+2,?___flneg+2
 33538  009B68  C0A3  F0A3         	movff	___flneg@f1+3,?___flneg+3
 33539  009B6C  0012               	return	
 33540  009B6E                     __end_of___flneg:
 33541                           	opt stack 0
 33542                           tosu	equ	0xFFF
 33543                           tosh	equ	0xFFE
 33544                           tosl	equ	0xFFD
 33545                           pclath	equ	0xFFA
 33546                           tblptru	equ	0xFF8
 33547                           tblptrh	equ	0xFF7
 33548                           tblptrl	equ	0xFF6
 33549                           tablat	equ	0xFF5
 33550                           prodh	equ	0xFF4
 33551                           prodl	equ	0xFF3
 33552                           intcon	equ	0xFF2
 33553                           indf0	equ	0xFEF
 33554                           postinc0	equ	0xFEE
 33555                           fsr0h	equ	0xFEA
 33556                           fsr0l	equ	0xFE9
 33557                           wreg	equ	0xFE8
 33558                           indf1	equ	0xFE7
 33559                           postinc1	equ	0xFE6
 33560                           postdec1	equ	0xFE5
 33561                           plusw1	equ	0xFE3
 33562                           fsr1h	equ	0xFE2
 33563                           fsr1l	equ	0xFE1
 33564                           indf2	equ	0xFDF
 33565                           postinc2	equ	0xFDE
 33566                           postdec2	equ	0xFDD
 33567                           plusw2	equ	0xFDB
 33568                           fsr2h	equ	0xFDA
 33569                           fsr2l	equ	0xFD9
 33570                           status	equ	0xFD8
 33571                           
 33572 ;; *************** function _cal_diff_hight_level *****************
 33573 ;; Defined at:
 33574 ;;		line 470 in file "src/api/data.c"
 33575 ;; Parameters:    Size  Location     Type
 33576 ;;		None
 33577 ;; Auto vars:     Size  Location     Type
 33578 ;;  f1              4  112[BANK0 ] float 
 33579 ;;  f2              4  108[BANK0 ] float 
 33580 ;; Return value:  Size  Location     Type
 33581 ;;                  1    wreg      unsigned char 
 33582 ;; Registers used:
 33583 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 33584 ;; Tracked objects:
 33585 ;;		On entry : 0/0
 33586 ;;		On exit  : 0/0
 33587 ;;		Unchanged: 0/0
 33588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33590 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33592 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33593 ;;Total ram usage:       16 bytes
 33594 ;; Hardware stack levels used:    1
 33595 ;; Hardware stack levels required when called:    5
 33596 ;; This function calls:
 33597 ;;		___fladd
 33598 ;;		___fldiv
 33599 ;;		___flge
 33600 ;;		___flmul
 33601 ;;		___fltol
 33602 ;;		___xxtofl
 33603 ;; This function is called by:
 33604 ;;		_cal_diff_press
 33605 ;; This function uses a non-reentrant model
 33606 ;;
 33607                           
 33608                           	psect	text178
 33609  00309E                     __ptext178:
 33610                           	opt stack 0
 33611  00309E                     _cal_diff_hight_level:
 33612                           	opt stack 21
 33613                           
 33614                           ;data.c: 472: float f1,f2;
 33615                           ;data.c: 473: if(stSysData.pos==HOTIZONTAL){
 33616                           
 33617                           ; BSR set to: 0
 33618                           ;incstack = 0
 33619  00309E  0102               	movlb	2	; () banked
 33620  0030A0  5104               	movf	(_stSysData+4)& (0+255),w,b
 33621  0030A2  A4D8               	btfss	status,2,c
 33622  0030A4  D014               	goto	l14529
 33623                           
 33624                           ; BSR set to: 2
 33625                           ;data.c: 474: f1=(float)stSysData.d;
 33626  0030A6  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 33627  0030AA  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 33628  0030AE  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 33629  0030B2  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 33630  0030B6  0E00               	movlw	0
 33631  0030B8  EC11  F020         	call	___xxtofl
 33632  0030BC  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 33633  0030C0  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 33634  0030C4  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 33635  0030C8  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 33636                           
 33637                           ;data.c: 475: }else{
 33638  0030CC  D077               	goto	l14531
 33639  0030CE                     l14529:
 33640                           
 33641                           ;data.c: 476: f1=(float)stSysData.h;
 33642  0030CE  C208  F060         	movff	_stSysData+8,___xxtofl@val
 33643  0030D2  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 33644  0030D6  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 33645  0030DA  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 33646  0030DE  0E01               	movlw	1
 33647  0030E0  EC11  F020         	call	___xxtofl
 33648  0030E4  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 33649  0030E8  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 33650  0030EC  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 33651  0030F0  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 33652                           
 33653                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 33654  0030F4  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 33655  0030F8  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 33656  0030FC  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 33657  003100  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 33658  003104  0E00               	movlw	0
 33659  003106  EC11  F020         	call	___xxtofl
 33660  00310A  C060  F0A8         	movff	?___xxtofl,___fladd@a
 33661  00310E  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 33662  003112  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 33663  003116  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 33664  00311A  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 33665  00311E  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 33666  003122  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 33667  003126  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 33668  00312A  0E00               	movlw	0
 33669  00312C  EC11  F020         	call	___xxtofl
 33670  003130  C060  F0A4         	movff	?___xxtofl,___fladd@b
 33671  003134  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 33672  003138  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 33673  00313C  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 33674  003140  ECB4  F008         	call	___fladd	;wreg free
 33675  003144  C0A4  F0C4         	movff	?___fladd,_cal_diff_hight_level$5884
 33676  003148  C0A5  F0C5         	movff	?___fladd+1,_cal_diff_hight_level$5884+1
 33677  00314C  C0A6  F0C6         	movff	?___fladd+2,_cal_diff_hight_level$5884+2
 33678  003150  C0A7  F0C7         	movff	?___fladd+3,_cal_diff_hight_level$5884+3
 33679                           
 33680                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 33681  003154  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 33682  003158  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 33683  00315C  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 33684  003160  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 33685  003164  C0C4  F0A4         	movff	_cal_diff_hight_level$5884,___fladd@b
 33686  003168  C0C5  F0A5         	movff	_cal_diff_hight_level$5884+1,___fladd@b+1
 33687  00316C  C0C6  F0A6         	movff	_cal_diff_hight_level$5884+2,___fladd@b+2
 33688  003170  C0C7  F0A7         	movff	_cal_diff_hight_level$5884+3,___fladd@b+3
 33689  003174  ECB4  F008         	call	___fladd	;wreg free
 33690  003178  C0A4  F0C8         	movff	?___fladd,_cal_diff_hight_level$5885
 33691  00317C  C0A5  F0C9         	movff	?___fladd+1,_cal_diff_hight_level$5885+1
 33692  003180  C0A6  F0CA         	movff	?___fladd+2,_cal_diff_hight_level$5885+2
 33693  003184  C0A7  F0CB         	movff	?___fladd+3,_cal_diff_hight_level$5885+3
 33694                           
 33695                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 33696  003188  C0C8  F0A4         	movff	_cal_diff_hight_level$5885,___fladd@b
 33697  00318C  C0C9  F0A5         	movff	_cal_diff_hight_level$5885+1,___fladd@b+1
 33698  003190  C0CA  F0A6         	movff	_cal_diff_hight_level$5885+2,___fladd@b+2
 33699  003194  C0CB  F0A7         	movff	_cal_diff_hight_level$5885+3,___fladd@b+3
 33700  003198  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 33701  00319C  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 33702  0031A0  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 33703  0031A4  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 33704  0031A8  ECB4  F008         	call	___fladd	;wreg free
 33705  0031AC  C0A4  F0D0         	movff	?___fladd,cal_diff_hight_level@f1
 33706  0031B0  C0A5  F0D1         	movff	?___fladd+1,cal_diff_hight_level@f1+1
 33707  0031B4  C0A6  F0D2         	movff	?___fladd+2,cal_diff_hight_level@f1+2
 33708  0031B8  C0A7  F0D3         	movff	?___fladd+3,cal_diff_hight_level@f1+3
 33709  0031BC                     l14531:
 33710                           
 33711                           ;data.c: 478: }
 33712                           ;data.c: 479: f1=f1*(stSysData.maxValueForlevelBar)/100;
 33713  0031BC  C0D0  F072         	movff	cal_diff_hight_level@f1,___flmul@a
 33714  0031C0  C0D1  F073         	movff	cal_diff_hight_level@f1+1,___flmul@a+1
 33715  0031C4  C0D2  F074         	movff	cal_diff_hight_level@f1+2,___flmul@a+2
 33716  0031C8  C0D3  F075         	movff	cal_diff_hight_level@f1+3,___flmul@a+3
 33717  0031CC  0102               	movlb	2	; () banked
 33718  0031CE  5105               	movf	(_stSysData+5)& (0+255),w,b
 33719  0031D0  0100               	movlb	0	; () banked
 33720  0031D2  6F60               	movwf	___xxtofl@val& (0+255),b
 33721  0031D4  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 33722  0031D6  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 33723  0031D8  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 33724  0031DA  0E00               	movlw	0
 33725  0031DC  EC11  F020         	call	___xxtofl
 33726  0031E0  C060  F06E         	movff	?___xxtofl,___flmul@b
 33727  0031E4  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 33728  0031E8  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 33729  0031EC  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 33730  0031F0  EC08  F00B         	call	___flmul	;wreg free
 33731  0031F4  C06E  F087         	movff	?___flmul,___fldiv@b
 33732  0031F8  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 33733  0031FC  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 33734  003200  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 33735  003204  0E00               	movlw	0
 33736  003206  0100               	movlb	0	; () banked
 33737  003208  6F8B               	movwf	___fldiv@a& (0+255),b
 33738  00320A  0E00               	movlw	0
 33739  00320C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 33740  00320E  0EC8               	movlw	200
 33741  003210  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 33742  003212  0E42               	movlw	66
 33743  003214  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 33744  003216  ECA9  F011         	call	___fldiv	;wreg free
 33745  00321A  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 33746  00321E  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 33747  003222  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 33748  003226  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 33749                           
 33750                           ;data.c: 480: if(f1==0)f1=1;
 33751  00322A  0100               	movlb	0	; () banked
 33752  00322C  51D0               	movf	cal_diff_hight_level@f1& (0+255),w,b
 33753  00322E  0100               	movlb	0	; () banked
 33754  003230  11D1               	iorwf	(cal_diff_hight_level@f1+1)& (0+255),w,b
 33755  003232  0100               	movlb	0	; () banked
 33756  003234  11D2               	iorwf	(cal_diff_hight_level@f1+2)& (0+255),w,b
 33757  003236  0100               	movlb	0	; () banked
 33758  003238  11D3               	iorwf	(cal_diff_hight_level@f1+3)& (0+255),w,b
 33759  00323A  A4D8               	btfss	status,2,c
 33760  00323C  D009               	goto	l14537
 33761                           
 33762                           ; BSR set to: 0
 33763  00323E  0E00               	movlw	0
 33764  003240  0100               	movlb	0	; () banked
 33765  003242  6FD0               	movwf	cal_diff_hight_level@f1& (0+255),b
 33766  003244  0E00               	movlw	0
 33767  003246  6FD1               	movwf	(cal_diff_hight_level@f1+1)& (0+255),b
 33768  003248  0E80               	movlw	128
 33769  00324A  6FD2               	movwf	(cal_diff_hight_level@f1+2)& (0+255),b
 33770  00324C  0E3F               	movlw	63
 33771  00324E  6FD3               	movwf	(cal_diff_hight_level@f1+3)& (0+255),b
 33772  003250                     l14537:
 33773                           
 33774                           ; BSR set to: 0
 33775                           ;data.c: 481: f2=(float)rtHight;
 33776  003250  C0EB  F060         	movff	_rtHight,___xxtofl@val	;volatile
 33777  003254  C0EC  F061         	movff	_rtHight+1,___xxtofl@val+1	;volatile
 33778  003258  C0ED  F062         	movff	_rtHight+2,___xxtofl@val+2	;volatile
 33779  00325C  C0EE  F063         	movff	_rtHight+3,___xxtofl@val+3	;volatile
 33780  003260  0E01               	movlw	1
 33781  003262  EC11  F020         	call	___xxtofl
 33782  003266  C060  F0CC         	movff	?___xxtofl,cal_diff_hight_level@f2
 33783  00326A  C061  F0CD         	movff	?___xxtofl+1,cal_diff_hight_level@f2+1
 33784  00326E  C062  F0CE         	movff	?___xxtofl+2,cal_diff_hight_level@f2+2
 33785  003272  C063  F0CF         	movff	?___xxtofl+3,cal_diff_hight_level@f2+3
 33786                           
 33787                           ;data.c: 482: if(f2<0.0)f2=0.0;
 33788  003276  0100               	movlb	0	; () banked
 33789  003278  AFCF               	btfss	(cal_diff_hight_level@f2+3)& (0+255),7,b
 33790  00327A  D009               	goto	l14543
 33791                           
 33792                           ; BSR set to: 0
 33793  00327C  0E00               	movlw	0
 33794  00327E  0100               	movlb	0	; () banked
 33795  003280  6FCC               	movwf	cal_diff_hight_level@f2& (0+255),b
 33796  003282  0E00               	movlw	0
 33797  003284  6FCD               	movwf	(cal_diff_hight_level@f2+1)& (0+255),b
 33798  003286  0E00               	movlw	0
 33799  003288  6FCE               	movwf	(cal_diff_hight_level@f2+2)& (0+255),b
 33800  00328A  0E00               	movlw	0
 33801  00328C  6FCF               	movwf	(cal_diff_hight_level@f2+3)& (0+255),b
 33802  00328E                     l14543:
 33803                           
 33804                           ; BSR set to: 0
 33805                           ;data.c: 483: f1=f2/f1;
 33806  00328E  C0CC  F087         	movff	cal_diff_hight_level@f2,___fldiv@b
 33807  003292  C0CD  F088         	movff	cal_diff_hight_level@f2+1,___fldiv@b+1
 33808  003296  C0CE  F089         	movff	cal_diff_hight_level@f2+2,___fldiv@b+2
 33809  00329A  C0CF  F08A         	movff	cal_diff_hight_level@f2+3,___fldiv@b+3
 33810  00329E  C0D0  F08B         	movff	cal_diff_hight_level@f1,___fldiv@a
 33811  0032A2  C0D1  F08C         	movff	cal_diff_hight_level@f1+1,___fldiv@a+1
 33812  0032A6  C0D2  F08D         	movff	cal_diff_hight_level@f1+2,___fldiv@a+2
 33813  0032AA  C0D3  F08E         	movff	cal_diff_hight_level@f1+3,___fldiv@a+3
 33814  0032AE  ECA9  F011         	call	___fldiv	;wreg free
 33815  0032B2  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 33816  0032B6  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 33817  0032BA  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 33818  0032BE  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 33819                           
 33820                           ;data.c: 484: f1*=100;
 33821  0032C2  C0D0  F06E         	movff	cal_diff_hight_level@f1,___flmul@b
 33822  0032C6  C0D1  F06F         	movff	cal_diff_hight_level@f1+1,___flmul@b+1
 33823  0032CA  C0D2  F070         	movff	cal_diff_hight_level@f1+2,___flmul@b+2
 33824  0032CE  C0D3  F071         	movff	cal_diff_hight_level@f1+3,___flmul@b+3
 33825  0032D2  0E00               	movlw	0
 33826  0032D4  0100               	movlb	0	; () banked
 33827  0032D6  6F72               	movwf	___flmul@a& (0+255),b
 33828  0032D8  0E00               	movlw	0
 33829  0032DA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 33830  0032DC  0EC8               	movlw	200
 33831  0032DE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 33832  0032E0  0E42               	movlw	66
 33833  0032E2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 33834  0032E4  EC08  F00B         	call	___flmul	;wreg free
 33835  0032E8  C06E  F0D0         	movff	?___flmul,cal_diff_hight_level@f1
 33836  0032EC  C06F  F0D1         	movff	?___flmul+1,cal_diff_hight_level@f1+1
 33837  0032F0  C070  F0D2         	movff	?___flmul+2,cal_diff_hight_level@f1+2
 33838  0032F4  C071  F0D3         	movff	?___flmul+3,cal_diff_hight_level@f1+3
 33839                           
 33840                           ;data.c: 485: if(f1>100)f1=100;
 33841  0032F8  0E00               	movlw	0
 33842  0032FA  0100               	movlb	0	; () banked
 33843  0032FC  6FB8               	movwf	___flge@ff1& (0+255),b
 33844  0032FE  0E00               	movlw	0
 33845  003300  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 33846  003302  0EC8               	movlw	200
 33847  003304  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 33848  003306  0E42               	movlw	66
 33849  003308  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 33850  00330A  C0D0  F0BC         	movff	cal_diff_hight_level@f1,___flge@ff2
 33851  00330E  C0D1  F0BD         	movff	cal_diff_hight_level@f1+1,___flge@ff2+1
 33852  003312  C0D2  F0BE         	movff	cal_diff_hight_level@f1+2,___flge@ff2+2
 33853  003316  C0D3  F0BF         	movff	cal_diff_hight_level@f1+3,___flge@ff2+3
 33854  00331A  EC94  F023         	call	___flge	;wreg free
 33855  00331E  0100               	movlb	0	; () banked
 33856  003320  B0D8               	btfsc	status,0,c
 33857  003322  D009               	goto	l14551
 33858                           
 33859                           ; BSR set to: 0
 33860  003324  0E00               	movlw	0
 33861  003326  0100               	movlb	0	; () banked
 33862  003328  6FD0               	movwf	cal_diff_hight_level@f1& (0+255),b
 33863  00332A  0E00               	movlw	0
 33864  00332C  6FD1               	movwf	(cal_diff_hight_level@f1+1)& (0+255),b
 33865  00332E  0EC8               	movlw	200
 33866  003330  6FD2               	movwf	(cal_diff_hight_level@f1+2)& (0+255),b
 33867  003332  0E42               	movlw	66
 33868  003334  6FD3               	movwf	(cal_diff_hight_level@f1+3)& (0+255),b
 33869  003336                     l14551:
 33870                           
 33871                           ; BSR set to: 0
 33872                           ;data.c: 486: rtLevel=(uint8_t)f1;
 33873  003336  C0D0  F0B8         	movff	cal_diff_hight_level@f1,___fltol@f1
 33874  00333A  C0D1  F0B9         	movff	cal_diff_hight_level@f1+1,___fltol@f1+1
 33875  00333E  C0D2  F0BA         	movff	cal_diff_hight_level@f1+2,___fltol@f1+2
 33876  003342  C0D3  F0BB         	movff	cal_diff_hight_level@f1+3,___fltol@f1+3
 33877  003346  EC7A  F02E         	call	___fltol	;wreg free
 33878  00334A  0100               	movlb	0	; () banked
 33879  00334C  51B8               	movf	?___fltol& (0+255),w,b
 33880  00334E  0100               	movlb	0	; () banked
 33881  003350  6FFE               	movwf	_rtLevel& (0+255),b	;volatile
 33882                           
 33883                           ; BSR set to: 0
 33884                           ;data.c: 487: return rtLevel;
 33885  003352  0100               	movlb	0	; () banked
 33886  003354  51FE               	movf	_rtLevel& (0+255),w,b	;volatile
 33887  003356  0012               	return	
 33888  003358                     __end_of_cal_diff_hight_level:
 33889                           	opt stack 0
 33890                           tosu	equ	0xFFF
 33891                           tosh	equ	0xFFE
 33892                           tosl	equ	0xFFD
 33893                           pclath	equ	0xFFA
 33894                           tblptru	equ	0xFF8
 33895                           tblptrh	equ	0xFF7
 33896                           tblptrl	equ	0xFF6
 33897                           tablat	equ	0xFF5
 33898                           prodh	equ	0xFF4
 33899                           prodl	equ	0xFF3
 33900                           intcon	equ	0xFF2
 33901                           indf0	equ	0xFEF
 33902                           postinc0	equ	0xFEE
 33903                           fsr0h	equ	0xFEA
 33904                           fsr0l	equ	0xFE9
 33905                           wreg	equ	0xFE8
 33906                           indf1	equ	0xFE7
 33907                           postinc1	equ	0xFE6
 33908                           postdec1	equ	0xFE5
 33909                           plusw1	equ	0xFE3
 33910                           fsr1h	equ	0xFE2
 33911                           fsr1l	equ	0xFE1
 33912                           indf2	equ	0xFDF
 33913                           postinc2	equ	0xFDE
 33914                           postdec2	equ	0xFDD
 33915                           plusw2	equ	0xFDB
 33916                           fsr2h	equ	0xFDA
 33917                           fsr2l	equ	0xFD9
 33918                           status	equ	0xFD8
 33919                           
 33920 ;; *************** function ___flge *****************
 33921 ;; Defined at:
 33922 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flge.c"
 33923 ;; Parameters:    Size  Location     Type
 33924 ;;  ff1             4   88[BANK0 ] unsigned char 
 33925 ;;  ff2             4   92[BANK0 ] unsigned char 
 33926 ;; Auto vars:     Size  Location     Type
 33927 ;;		None
 33928 ;; Return value:  Size  Location     Type
 33929 ;;		None               void
 33930 ;; Registers used:
 33931 ;;		wreg, status,2, status,0
 33932 ;; Tracked objects:
 33933 ;;		On entry : 0/0
 33934 ;;		On exit  : 0/0
 33935 ;;		Unchanged: 0/0
 33936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33937 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33940 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33941 ;;Total ram usage:       12 bytes
 33942 ;; Hardware stack levels used:    1
 33943 ;; Hardware stack levels required when called:    4
 33944 ;; This function calls:
 33945 ;;		Nothing
 33946 ;; This function is called by:
 33947 ;;		_m_interp1_float_fast
 33948 ;;		_cal_diff_hight_to_vol_h
 33949 ;;		_cal_diff_hight_level
 33950 ;;		_cal_diff_hight_to_vol_v
 33951 ;; This function uses a non-reentrant model
 33952 ;;
 33953                           
 33954                           	psect	text179
 33955  004728                     __ptext179:
 33956                           	opt stack 0
 33957  004728                     ___flge:
 33958                           	opt stack 20
 33959                           
 33960                           ; BSR set to: 0
 33961                           ;incstack = 0
 33962  004728  0E00               	movlw	0
 33963  00472A  0100               	movlb	0	; () banked
 33964  00472C  15B8               	andwf	___flge@ff1& (0+255),w,b
 33965  00472E  0100               	movlb	0	; () banked
 33966  004730  6FC0               	movwf	??___flge& (0+255),b
 33967  004732  0E00               	movlw	0
 33968  004734  0100               	movlb	0	; () banked
 33969  004736  15B9               	andwf	(___flge@ff1+1)& (0+255),w,b
 33970  004738  0100               	movlb	0	; () banked
 33971  00473A  6FC1               	movwf	(??___flge+1)& (0+255),b
 33972  00473C  0E80               	movlw	128
 33973  00473E  0100               	movlb	0	; () banked
 33974  004740  15BA               	andwf	(___flge@ff1+2)& (0+255),w,b
 33975  004742  0100               	movlb	0	; () banked
 33976  004744  6FC2               	movwf	(??___flge+2)& (0+255),b
 33977  004746  0E7F               	movlw	127
 33978  004748  0100               	movlb	0	; () banked
 33979  00474A  15BB               	andwf	(___flge@ff1+3)& (0+255),w,b
 33980  00474C  0100               	movlb	0	; () banked
 33981  00474E  6FC3               	movwf	(??___flge+3)& (0+255),b
 33982  004750  0100               	movlb	0	; () banked
 33983  004752  51C0               	movf	??___flge& (0+255),w,b
 33984  004754  0100               	movlb	0	; () banked
 33985  004756  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 33986  004758  0100               	movlb	0	; () banked
 33987  00475A  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 33988  00475C  0100               	movlb	0	; () banked
 33989  00475E  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 33990  004760  A4D8               	btfss	status,2,c
 33991  004762  D009               	goto	l13847
 33992                           
 33993                           ; BSR set to: 0
 33994  004764  0E00               	movlw	0
 33995  004766  0100               	movlb	0	; () banked
 33996  004768  6FB8               	movwf	___flge@ff1& (0+255),b
 33997  00476A  0E00               	movlw	0
 33998  00476C  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 33999  00476E  0E00               	movlw	0
 34000  004770  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 34001  004772  0E00               	movlw	0
 34002  004774  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 34003  004776                     l13847:
 34004                           
 34005                           ; BSR set to: 0
 34006  004776  0E00               	movlw	0
 34007  004778  0100               	movlb	0	; () banked
 34008  00477A  15BC               	andwf	___flge@ff2& (0+255),w,b
 34009  00477C  0100               	movlb	0	; () banked
 34010  00477E  6FC0               	movwf	??___flge& (0+255),b
 34011  004780  0E00               	movlw	0
 34012  004782  0100               	movlb	0	; () banked
 34013  004784  15BD               	andwf	(___flge@ff2+1)& (0+255),w,b
 34014  004786  0100               	movlb	0	; () banked
 34015  004788  6FC1               	movwf	(??___flge+1)& (0+255),b
 34016  00478A  0E80               	movlw	128
 34017  00478C  0100               	movlb	0	; () banked
 34018  00478E  15BE               	andwf	(___flge@ff2+2)& (0+255),w,b
 34019  004790  0100               	movlb	0	; () banked
 34020  004792  6FC2               	movwf	(??___flge+2)& (0+255),b
 34021  004794  0E7F               	movlw	127
 34022  004796  0100               	movlb	0	; () banked
 34023  004798  15BF               	andwf	(___flge@ff2+3)& (0+255),w,b
 34024  00479A  0100               	movlb	0	; () banked
 34025  00479C  6FC3               	movwf	(??___flge+3)& (0+255),b
 34026  00479E  0100               	movlb	0	; () banked
 34027  0047A0  51C0               	movf	??___flge& (0+255),w,b
 34028  0047A2  0100               	movlb	0	; () banked
 34029  0047A4  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 34030  0047A6  0100               	movlb	0	; () banked
 34031  0047A8  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 34032  0047AA  0100               	movlb	0	; () banked
 34033  0047AC  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 34034  0047AE  A4D8               	btfss	status,2,c
 34035  0047B0  D009               	goto	l13851
 34036                           
 34037                           ; BSR set to: 0
 34038  0047B2  0E00               	movlw	0
 34039  0047B4  0100               	movlb	0	; () banked
 34040  0047B6  6FBC               	movwf	___flge@ff2& (0+255),b
 34041  0047B8  0E00               	movlw	0
 34042  0047BA  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 34043  0047BC  0E00               	movlw	0
 34044  0047BE  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 34045  0047C0  0E00               	movlw	0
 34046  0047C2  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 34047  0047C4                     l13851:
 34048                           
 34049                           ; BSR set to: 0
 34050  0047C4  0100               	movlb	0	; () banked
 34051  0047C6  AFBB               	btfss	(___flge@ff1+3)& (0+255),7,b
 34052  0047C8  D026               	goto	l13855
 34053                           
 34054                           ; BSR set to: 0
 34055  0047CA  C0B8  F0C0         	movff	___flge@ff1,??___flge
 34056  0047CE  C0B9  F0C1         	movff	___flge@ff1+1,??___flge+1
 34057  0047D2  C0BA  F0C2         	movff	___flge@ff1+2,??___flge+2
 34058  0047D6  C0BB  F0C3         	movff	___flge@ff1+3,??___flge+3
 34059  0047DA  0100               	movlb	0	; () banked
 34060  0047DC  1FC0               	comf	??___flge& (0+255),f,b
 34061  0047DE  1FC1               	comf	(??___flge+1)& (0+255),f,b
 34062  0047E0  1FC2               	comf	(??___flge+2)& (0+255),f,b
 34063  0047E2  1FC3               	comf	(??___flge+3)& (0+255),f,b
 34064  0047E4  2BC0               	incf	??___flge& (0+255),f,b
 34065  0047E6  0E00               	movlw	0
 34066  0047E8  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 34067  0047EA  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 34068  0047EC  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 34069  0047EE  0E00               	movlw	0
 34070  0047F0  0100               	movlb	0	; () banked
 34071  0047F2  25C0               	addwf	??___flge& (0+255),w,b
 34072  0047F4  0100               	movlb	0	; () banked
 34073  0047F6  6FB8               	movwf	___flge@ff1& (0+255),b
 34074  0047F8  0E00               	movlw	0
 34075  0047FA  0100               	movlb	0	; () banked
 34076  0047FC  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 34077  0047FE  0100               	movlb	0	; () banked
 34078  004800  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 34079  004802  0E00               	movlw	0
 34080  004804  0100               	movlb	0	; () banked
 34081  004806  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 34082  004808  0100               	movlb	0	; () banked
 34083  00480A  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 34084  00480C  0E80               	movlw	128
 34085  00480E  0100               	movlb	0	; () banked
 34086  004810  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 34087  004812  0100               	movlb	0	; () banked
 34088  004814  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 34089  004816                     l13855:
 34090                           
 34091                           ; BSR set to: 0
 34092  004816  0100               	movlb	0	; () banked
 34093  004818  AFBF               	btfss	(___flge@ff2+3)& (0+255),7,b
 34094  00481A  D026               	goto	l2590
 34095                           
 34096                           ; BSR set to: 0
 34097  00481C  C0BC  F0C0         	movff	___flge@ff2,??___flge
 34098  004820  C0BD  F0C1         	movff	___flge@ff2+1,??___flge+1
 34099  004824  C0BE  F0C2         	movff	___flge@ff2+2,??___flge+2
 34100  004828  C0BF  F0C3         	movff	___flge@ff2+3,??___flge+3
 34101  00482C  0100               	movlb	0	; () banked
 34102  00482E  1FC0               	comf	??___flge& (0+255),f,b
 34103  004830  1FC1               	comf	(??___flge+1)& (0+255),f,b
 34104  004832  1FC2               	comf	(??___flge+2)& (0+255),f,b
 34105  004834  1FC3               	comf	(??___flge+3)& (0+255),f,b
 34106  004836  2BC0               	incf	??___flge& (0+255),f,b
 34107  004838  0E00               	movlw	0
 34108  00483A  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 34109  00483C  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 34110  00483E  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 34111  004840  0E00               	movlw	0
 34112  004842  0100               	movlb	0	; () banked
 34113  004844  25C0               	addwf	??___flge& (0+255),w,b
 34114  004846  0100               	movlb	0	; () banked
 34115  004848  6FBC               	movwf	___flge@ff2& (0+255),b
 34116  00484A  0E00               	movlw	0
 34117  00484C  0100               	movlb	0	; () banked
 34118  00484E  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 34119  004850  0100               	movlb	0	; () banked
 34120  004852  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 34121  004854  0E00               	movlw	0
 34122  004856  0100               	movlb	0	; () banked
 34123  004858  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 34124  00485A  0100               	movlb	0	; () banked
 34125  00485C  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 34126  00485E  0E80               	movlw	128
 34127  004860  0100               	movlb	0	; () banked
 34128  004862  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 34129  004864  0100               	movlb	0	; () banked
 34130  004866  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 34131  004868                     l2590:
 34132                           
 34133                           ; BSR set to: 0
 34134  004868  0E00               	movlw	0
 34135  00486A  0100               	movlb	0	; () banked
 34136  00486C  1BB8               	xorwf	___flge@ff1& (0+255),f,b
 34137  00486E  0E00               	movlw	0
 34138  004870  1BB9               	xorwf	(___flge@ff1+1)& (0+255),f,b
 34139  004872  0E00               	movlw	0
 34140  004874  1BBA               	xorwf	(___flge@ff1+2)& (0+255),f,b
 34141  004876  0E80               	movlw	128
 34142  004878  1BBB               	xorwf	(___flge@ff1+3)& (0+255),f,b
 34143  00487A  0E00               	movlw	0
 34144  00487C  0100               	movlb	0	; () banked
 34145  00487E  1BBC               	xorwf	___flge@ff2& (0+255),f,b
 34146  004880  0E00               	movlw	0
 34147  004882  1BBD               	xorwf	(___flge@ff2+1)& (0+255),f,b
 34148  004884  0E00               	movlw	0
 34149  004886  1BBE               	xorwf	(___flge@ff2+2)& (0+255),f,b
 34150  004888  0E80               	movlw	128
 34151  00488A  1BBF               	xorwf	(___flge@ff2+3)& (0+255),f,b
 34152  00488C  0100               	movlb	0	; () banked
 34153  00488E  51BC               	movf	___flge@ff2& (0+255),w,b
 34154  004890  0100               	movlb	0	; () banked
 34155  004892  5DB8               	subwf	___flge@ff1& (0+255),w,b
 34156  004894  0100               	movlb	0	; () banked
 34157  004896  51BD               	movf	(___flge@ff2+1)& (0+255),w,b
 34158  004898  0100               	movlb	0	; () banked
 34159  00489A  59B9               	subwfb	(___flge@ff1+1)& (0+255),w,b
 34160  00489C  0100               	movlb	0	; () banked
 34161  00489E  51BE               	movf	(___flge@ff2+2)& (0+255),w,b
 34162  0048A0  0100               	movlb	0	; () banked
 34163  0048A2  59BA               	subwfb	(___flge@ff1+2)& (0+255),w,b
 34164  0048A4  0100               	movlb	0	; () banked
 34165  0048A6  51BF               	movf	(___flge@ff2+3)& (0+255),w,b
 34166  0048A8  0100               	movlb	0	; () banked
 34167  0048AA  59BB               	subwfb	(___flge@ff1+3)& (0+255),w,b
 34168  0048AC  B0D8               	btfsc	status,0,c
 34169  0048AE  D002               	goto	l13861
 34170                           
 34171                           ; BSR set to: 0
 34172  0048B0  90D8               	bcf	status,0,c
 34173  0048B2  0012               	return	
 34174  0048B4                     l13861:
 34175                           
 34176                           ; BSR set to: 0
 34177  0048B4  80D8               	bsf	status,0,c
 34178                           
 34179                           ; BSR set to: 0
 34180  0048B6  0012               	return	
 34181  0048B8                     __end_of___flge:
 34182                           	opt stack 0
 34183                           tosu	equ	0xFFF
 34184                           tosh	equ	0xFFE
 34185                           tosl	equ	0xFFD
 34186                           pclath	equ	0xFFA
 34187                           tblptru	equ	0xFF8
 34188                           tblptrh	equ	0xFF7
 34189                           tblptrl	equ	0xFF6
 34190                           tablat	equ	0xFF5
 34191                           prodh	equ	0xFF4
 34192                           prodl	equ	0xFF3
 34193                           intcon	equ	0xFF2
 34194                           indf0	equ	0xFEF
 34195                           postinc0	equ	0xFEE
 34196                           fsr0h	equ	0xFEA
 34197                           fsr0l	equ	0xFE9
 34198                           wreg	equ	0xFE8
 34199                           indf1	equ	0xFE7
 34200                           postinc1	equ	0xFE6
 34201                           postdec1	equ	0xFE5
 34202                           plusw1	equ	0xFE3
 34203                           fsr1h	equ	0xFE2
 34204                           fsr1l	equ	0xFE1
 34205                           indf2	equ	0xFDF
 34206                           postinc2	equ	0xFDE
 34207                           postdec2	equ	0xFDD
 34208                           plusw2	equ	0xFDB
 34209                           fsr2h	equ	0xFDA
 34210                           fsr2l	equ	0xFD9
 34211                           status	equ	0xFD8
 34212                           
 34213 ;; *************** function ___fladd *****************
 34214 ;; Defined at:
 34215 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcadd.c"
 34216 ;; Parameters:    Size  Location     Type
 34217 ;;  b               4   68[BANK0 ] unsigned char 
 34218 ;;  a               4   72[BANK0 ] unsigned char 
 34219 ;; Auto vars:     Size  Location     Type
 34220 ;;  grs             1   87[BANK0 ] unsigned char 
 34221 ;;  bexp            1   86[BANK0 ] unsigned char 
 34222 ;;  aexp            1   85[BANK0 ] unsigned char 
 34223 ;;  signs           1   84[BANK0 ] unsigned char 
 34224 ;; Return value:  Size  Location     Type
 34225 ;;                  4   68[BANK0 ] unsigned char 
 34226 ;; Registers used:
 34227 ;;		wreg, status,2, status,0
 34228 ;; Tracked objects:
 34229 ;;		On entry : 0/0
 34230 ;;		On exit  : 0/0
 34231 ;;		Unchanged: 0/0
 34232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34233 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34234 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34235 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34236 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34237 ;;Total ram usage:       20 bytes
 34238 ;; Hardware stack levels used:    1
 34239 ;; Hardware stack levels required when called:    4
 34240 ;; This function calls:
 34241 ;;		Nothing
 34242 ;; This function is called by:
 34243 ;;		_m_interp1_float_fast
 34244 ;;		_cal_diff_hight_to_vol_h
 34245 ;;		_cal_diff_hight_level
 34246 ;;		_cal_diff_hight_to_vol_v
 34247 ;; This function uses a non-reentrant model
 34248 ;;
 34249                           
 34250                           	psect	text180
 34251  001168                     __ptext180:
 34252                           	opt stack 0
 34253  001168                     ___fladd:
 34254                           	opt stack 20
 34255                           
 34256                           ; BSR set to: 0
 34257                           ;incstack = 0
 34258  001168  0100               	movlb	0	; () banked
 34259  00116A  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 34260  00116C  0B80               	andlw	128
 34261  00116E  0100               	movlb	0	; () banked
 34262  001170  6FB4               	movwf	___fladd@signs& (0+255),b
 34263  001172  0100               	movlb	0	; () banked
 34264  001174  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 34265  001176  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 34266  001178  0100               	movlb	0	; () banked
 34267  00117A  6FB6               	movwf	___fladd@bexp& (0+255),b
 34268                           
 34269                           ; BSR set to: 0
 34270  00117C  0100               	movlb	0	; () banked
 34271  00117E  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 34272  001180  D002               	goto	l13345
 34273                           
 34274                           ; BSR set to: 0
 34275  001182  0100               	movlb	0	; () banked
 34276  001184  81B6               	bsf	___fladd@bexp& (0+255),0,b
 34277  001186                     l13345:
 34278                           
 34279                           ; BSR set to: 0
 34280  001186  0100               	movlb	0	; () banked
 34281  001188  51B6               	movf	___fladd@bexp& (0+255),w,b
 34282  00118A  0100               	movlb	0	; () banked
 34283  00118C  B4D8               	btfsc	status,2,c
 34284  00118E  D012               	goto	l13355
 34285                           
 34286                           ; BSR set to: 0
 34287  001190  0100               	movlb	0	; () banked
 34288  001192  29B6               	incf	___fladd@bexp& (0+255),w,b
 34289  001194  A4D8               	btfss	status,2,c
 34290  001196  D009               	goto	l13351
 34291                           
 34292                           ; BSR set to: 0
 34293  001198  0E00               	movlw	0
 34294  00119A  0100               	movlb	0	; () banked
 34295  00119C  6FA4               	movwf	___fladd@b& (0+255),b
 34296  00119E  0E00               	movlw	0
 34297  0011A0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34298  0011A2  0E00               	movlw	0
 34299  0011A4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34300  0011A6  0E00               	movlw	0
 34301  0011A8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34302  0011AA                     l13351:
 34303                           
 34304                           ; BSR set to: 0
 34305  0011AA  0100               	movlb	0	; () banked
 34306  0011AC  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 34307                           
 34308                           ; BSR set to: 0
 34309  0011AE  0E00               	movlw	0
 34310  0011B0  0100               	movlb	0	; () banked
 34311  0011B2  D008               	goto	L27
 34312  0011B4                     l13355:
 34313                           
 34314                           ; BSR set to: 0
 34315  0011B4  0E00               	movlw	0
 34316  0011B6  0100               	movlb	0	; () banked
 34317  0011B8  6FA4               	movwf	___fladd@b& (0+255),b
 34318  0011BA  0E00               	movlw	0
 34319  0011BC  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34320  0011BE  0E00               	movlw	0
 34321  0011C0  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34322  0011C2  0E00               	movlw	0
 34323  0011C4                     L27:
 34324  0011C4  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34325                           
 34326                           ; BSR set to: 0
 34327                           
 34328                           ; BSR set to: 0
 34329  0011C6  0100               	movlb	0	; () banked
 34330  0011C8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34331  0011CA  0B80               	andlw	128
 34332  0011CC  0100               	movlb	0	; () banked
 34333  0011CE  6FB5               	movwf	___fladd@aexp& (0+255),b
 34334                           
 34335                           ; BSR set to: 0
 34336  0011D0  0100               	movlb	0	; () banked
 34337  0011D2  51B4               	movf	___fladd@signs& (0+255),w,b
 34338  0011D4  0100               	movlb	0	; () banked
 34339  0011D6  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 34340  0011D8  B4D8               	btfsc	status,2,c
 34341  0011DA  D002               	goto	l13363
 34342                           
 34343                           ; BSR set to: 0
 34344  0011DC  0100               	movlb	0	; () banked
 34345  0011DE  8DB4               	bsf	___fladd@signs& (0+255),6,b
 34346  0011E0                     l13363:
 34347                           
 34348                           ; BSR set to: 0
 34349  0011E0  0100               	movlb	0	; () banked
 34350  0011E2  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34351  0011E4  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 34352  0011E6  0100               	movlb	0	; () banked
 34353  0011E8  6FB5               	movwf	___fladd@aexp& (0+255),b
 34354                           
 34355                           ; BSR set to: 0
 34356  0011EA  0100               	movlb	0	; () banked
 34357  0011EC  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 34358  0011EE  D002               	goto	l13369
 34359                           
 34360                           ; BSR set to: 0
 34361  0011F0  0100               	movlb	0	; () banked
 34362  0011F2  81B5               	bsf	___fladd@aexp& (0+255),0,b
 34363  0011F4                     l13369:
 34364                           
 34365                           ; BSR set to: 0
 34366  0011F4  0100               	movlb	0	; () banked
 34367  0011F6  51B5               	movf	___fladd@aexp& (0+255),w,b
 34368  0011F8  0100               	movlb	0	; () banked
 34369  0011FA  B4D8               	btfsc	status,2,c
 34370  0011FC  D012               	goto	l13379
 34371                           
 34372                           ; BSR set to: 0
 34373  0011FE  0100               	movlb	0	; () banked
 34374  001200  29B5               	incf	___fladd@aexp& (0+255),w,b
 34375  001202  A4D8               	btfss	status,2,c
 34376  001204  D009               	goto	l13375
 34377                           
 34378                           ; BSR set to: 0
 34379  001206  0E00               	movlw	0
 34380  001208  0100               	movlb	0	; () banked
 34381  00120A  6FA8               	movwf	___fladd@a& (0+255),b
 34382  00120C  0E00               	movlw	0
 34383  00120E  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 34384  001210  0E00               	movlw	0
 34385  001212  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 34386  001214  0E00               	movlw	0
 34387  001216  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 34388  001218                     l13375:
 34389                           
 34390                           ; BSR set to: 0
 34391  001218  0100               	movlb	0	; () banked
 34392  00121A  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 34393                           
 34394                           ; BSR set to: 0
 34395  00121C  0E00               	movlw	0
 34396  00121E  0100               	movlb	0	; () banked
 34397  001220  D008               	goto	L28
 34398  001222                     l13379:
 34399                           
 34400                           ; BSR set to: 0
 34401  001222  0E00               	movlw	0
 34402  001224  0100               	movlb	0	; () banked
 34403  001226  6FA8               	movwf	___fladd@a& (0+255),b
 34404  001228  0E00               	movlw	0
 34405  00122A  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 34406  00122C  0E00               	movlw	0
 34407  00122E  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 34408  001230  0E00               	movlw	0
 34409  001232                     L28:
 34410  001232  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 34411                           
 34412                           ; BSR set to: 0
 34413                           
 34414                           ; BSR set to: 0
 34415  001234  0100               	movlb	0	; () banked
 34416  001236  51B6               	movf	___fladd@bexp& (0+255),w,b
 34417  001238  0100               	movlb	0	; () banked
 34418  00123A  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 34419  00123C  B0D8               	btfsc	status,0,c
 34420  00123E  D024               	goto	l13417
 34421                           
 34422                           ; BSR set to: 0
 34423  001240  0100               	movlb	0	; () banked
 34424  001242  ADB4               	btfss	___fladd@signs& (0+255),6,b
 34425  001244  D003               	goto	l13387
 34426                           
 34427                           ; BSR set to: 0
 34428  001246  0E80               	movlw	128
 34429  001248  0100               	movlb	0	; () banked
 34430  00124A  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 34431  00124C                     l13387:
 34432                           
 34433                           ; BSR set to: 0
 34434  00124C  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 34435                           
 34436                           ; BSR set to: 0
 34437  001250  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 34438                           
 34439                           ; BSR set to: 0
 34440  001254  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 34441                           
 34442                           ; BSR set to: 0
 34443  001258  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 34444                           
 34445                           ; BSR set to: 0
 34446  00125C  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 34447                           
 34448                           ; BSR set to: 0
 34449  001260  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 34450                           
 34451                           ; BSR set to: 0
 34452  001264  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 34453                           
 34454                           ; BSR set to: 0
 34455  001268  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 34456                           
 34457                           ; BSR set to: 0
 34458  00126C  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 34459                           
 34460                           ; BSR set to: 0
 34461  001270  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 34462                           
 34463                           ; BSR set to: 0
 34464  001274  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 34465                           
 34466                           ; BSR set to: 0
 34467  001278  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 34468                           
 34469                           ; BSR set to: 0
 34470  00127C  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 34471                           
 34472                           ; BSR set to: 0
 34473  001280  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 34474                           
 34475                           ; BSR set to: 0
 34476  001284  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 34477  001288                     l13417:
 34478                           
 34479                           ; BSR set to: 0
 34480  001288  0E00               	movlw	0
 34481  00128A  0100               	movlb	0	; () banked
 34482  00128C  6FB7               	movwf	___fladd@grs& (0+255),b
 34483                           
 34484                           ; BSR set to: 0
 34485  00128E  0100               	movlb	0	; () banked
 34486  001290  51B6               	movf	___fladd@bexp& (0+255),w,b
 34487  001292  0100               	movlb	0	; () banked
 34488  001294  6FAC               	movwf	??___fladd& (0+255),b
 34489  001296  6BAD               	clrf	(??___fladd+1)& (0+255),b
 34490  001298  0100               	movlb	0	; () banked
 34491  00129A  1FAC               	comf	??___fladd& (0+255),f,b
 34492  00129C  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 34493  00129E  4BAC               	infsnz	??___fladd& (0+255),f,b
 34494  0012A0  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 34495  0012A2  0100               	movlb	0	; () banked
 34496  0012A4  51B5               	movf	___fladd@aexp& (0+255),w,b
 34497  0012A6  0100               	movlb	0	; () banked
 34498  0012A8  6FAE               	movwf	(??___fladd+2)& (0+255),b
 34499  0012AA  6BAF               	clrf	(??___fladd+3)& (0+255),b
 34500  0012AC  0100               	movlb	0	; () banked
 34501  0012AE  51AC               	movf	??___fladd& (0+255),w,b
 34502  0012B0  0100               	movlb	0	; () banked
 34503  0012B2  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 34504  0012B4  0100               	movlb	0	; () banked
 34505  0012B6  51AD               	movf	(??___fladd+1)& (0+255),w,b
 34506  0012B8  0100               	movlb	0	; () banked
 34507  0012BA  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 34508  0012BC  0100               	movlb	0	; () banked
 34509  0012BE  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 34510  0012C0  D03D               	goto	l2828
 34511  0012C2  0100               	movlb	0	; () banked
 34512  0012C4  51AF               	movf	(??___fladd+3)& (0+255),w,b
 34513  0012C6  E105               	bnz	u11690
 34514  0012C8  0E1A               	movlw	26
 34515  0012CA  0100               	movlb	0	; () banked
 34516  0012CC  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 34517  0012CE  A0D8               	btfss	status,0,c
 34518  0012D0  D035               	goto	l2828
 34519  0012D2                     u11690:
 34520                           
 34521                           ; BSR set to: 0
 34522  0012D2  0100               	movlb	0	; () banked
 34523  0012D4  51A4               	movf	___fladd@b& (0+255),w,b
 34524  0012D6  0100               	movlb	0	; () banked
 34525  0012D8  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 34526  0012DA  0100               	movlb	0	; () banked
 34527  0012DC  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 34528  0012DE  0100               	movlb	0	; () banked
 34529  0012E0  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 34530  0012E2  B4D8               	btfsc	status,2,c
 34531  0012E4  D002               	goto	u11700
 34532  0012E6  0E01               	movlw	1
 34533  0012E8  D001               	goto	u11710
 34534  0012EA                     u11700:
 34535  0012EA  0E00               	movlw	0
 34536  0012EC                     u11710:
 34537  0012EC  0100               	movlb	0	; () banked
 34538  0012EE  6FB7               	movwf	___fladd@grs& (0+255),b
 34539                           
 34540                           ; BSR set to: 0
 34541  0012F0  0E00               	movlw	0
 34542  0012F2  0100               	movlb	0	; () banked
 34543  0012F4  6FA4               	movwf	___fladd@b& (0+255),b
 34544  0012F6  0E00               	movlw	0
 34545  0012F8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34546  0012FA  0E00               	movlw	0
 34547  0012FC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34548  0012FE  0E00               	movlw	0
 34549  001300  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34550                           
 34551                           ; BSR set to: 0
 34552  001302  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 34553  001306  D020               	goto	l2827
 34554  001308                     l2829:
 34555                           
 34556                           ; BSR set to: 0
 34557  001308  0100               	movlb	0	; () banked
 34558  00130A  A1B7               	btfss	___fladd@grs& (0+255),0,b
 34559  00130C  D007               	goto	l13429
 34560                           
 34561                           ; BSR set to: 0
 34562  00130E  0100               	movlb	0	; () banked
 34563  001310  90D8               	bcf	status,0,c
 34564  001312  31B7               	rrcf	___fladd@grs& (0+255),w,b
 34565  001314  0901               	iorlw	1
 34566  001316  0100               	movlb	0	; () banked
 34567  001318  6FB7               	movwf	___fladd@grs& (0+255),b
 34568  00131A  D003               	goto	l13431
 34569  00131C                     l13429:
 34570                           
 34571                           ; BSR set to: 0
 34572  00131C  0100               	movlb	0	; () banked
 34573  00131E  90D8               	bcf	status,0,c
 34574  001320  33B7               	rrcf	___fladd@grs& (0+255),f,b
 34575  001322                     l13431:
 34576                           
 34577                           ; BSR set to: 0
 34578  001322  0100               	movlb	0	; () banked
 34579  001324  A1A4               	btfss	___fladd@b& (0+255),0,b
 34580  001326  D002               	goto	l13435
 34581                           
 34582                           ; BSR set to: 0
 34583  001328  0100               	movlb	0	; () banked
 34584  00132A  8FB7               	bsf	___fladd@grs& (0+255),7,b
 34585  00132C                     l13435:
 34586                           
 34587                           ; BSR set to: 0
 34588  00132C  0100               	movlb	0	; () banked
 34589  00132E  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 34590  001330  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 34591  001332  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 34592  001334  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 34593  001336  33A4               	rrcf	___fladd@b& (0+255),f,b
 34594                           
 34595                           ; BSR set to: 0
 34596  001338  0100               	movlb	0	; () banked
 34597  00133A  2BB6               	incf	___fladd@bexp& (0+255),f,b
 34598  00133C                     l2828:
 34599                           
 34600                           ; BSR set to: 0
 34601  00133C  0100               	movlb	0	; () banked
 34602  00133E  51B5               	movf	___fladd@aexp& (0+255),w,b
 34603  001340  0100               	movlb	0	; () banked
 34604  001342  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 34605  001344  A0D8               	btfss	status,0,c
 34606  001346  D7E0               	goto	l2829
 34607  001348                     l2827:
 34608                           
 34609                           ; BSR set to: 0
 34610  001348  0100               	movlb	0	; () banked
 34611  00134A  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 34612  00134C  D03F               	goto	l13463
 34613                           
 34614                           ; BSR set to: 0
 34615  00134E  0100               	movlb	0	; () banked
 34616  001350  51B6               	movf	___fladd@bexp& (0+255),w,b
 34617  001352  0100               	movlb	0	; () banked
 34618  001354  A4D8               	btfss	status,2,c
 34619  001356  D00A               	goto	l13445
 34620                           
 34621                           ; BSR set to: 0
 34622  001358  0E00               	movlw	0
 34623  00135A  0100               	movlb	0	; () banked
 34624  00135C  6FA4               	movwf	?___fladd& (0+255),b
 34625  00135E  0E00               	movlw	0
 34626  001360  6FA5               	movwf	(?___fladd+1)& (0+255),b
 34627  001362  0E00               	movlw	0
 34628  001364  6FA6               	movwf	(?___fladd+2)& (0+255),b
 34629  001366  0E00               	movlw	0
 34630  001368  6FA7               	movwf	(?___fladd+3)& (0+255),b
 34631                           
 34632                           ; BSR set to: 0
 34633  00136A  0012               	return	
 34634  00136C                     l13445:
 34635                           
 34636                           ; BSR set to: 0
 34637  00136C  0100               	movlb	0	; () banked
 34638  00136E  51A8               	movf	___fladd@a& (0+255),w,b
 34639  001370  0100               	movlb	0	; () banked
 34640  001372  27A4               	addwf	___fladd@b& (0+255),f,b
 34641  001374  0100               	movlb	0	; () banked
 34642  001376  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34643  001378  0100               	movlb	0	; () banked
 34644  00137A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 34645  00137C  0100               	movlb	0	; () banked
 34646  00137E  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34647  001380  0100               	movlb	0	; () banked
 34648  001382  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 34649  001384  0100               	movlb	0	; () banked
 34650  001386  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34651  001388  0100               	movlb	0	; () banked
 34652  00138A  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 34653                           
 34654                           ; BSR set to: 0
 34655  00138C  0100               	movlb	0	; () banked
 34656  00138E  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 34657  001390  D0CC               	goto	l13499
 34658                           
 34659                           ; BSR set to: 0
 34660  001392  0100               	movlb	0	; () banked
 34661  001394  A1B7               	btfss	___fladd@grs& (0+255),0,b
 34662  001396  D009               	goto	l13453
 34663                           
 34664                           ; BSR set to: 0
 34665  001398  0100               	movlb	0	; () banked
 34666  00139A  90D8               	bcf	status,0,c
 34667  00139C  33B7               	rrcf	___fladd@grs& (0+255),f,b
 34668  00139E  0100               	movlb	0	; () banked
 34669  0013A0  51B7               	movf	___fladd@grs& (0+255),w,b
 34670  0013A2  0901               	iorlw	1
 34671  0013A4  0100               	movlb	0	; () banked
 34672  0013A6  6FB7               	movwf	___fladd@grs& (0+255),b
 34673  0013A8  D003               	goto	l13455
 34674  0013AA                     l13453:
 34675                           
 34676                           ; BSR set to: 0
 34677  0013AA  0100               	movlb	0	; () banked
 34678  0013AC  90D8               	bcf	status,0,c
 34679  0013AE  33B7               	rrcf	___fladd@grs& (0+255),f,b
 34680  0013B0                     l13455:
 34681                           
 34682                           ; BSR set to: 0
 34683  0013B0  0100               	movlb	0	; () banked
 34684  0013B2  A1A4               	btfss	___fladd@b& (0+255),0,b
 34685  0013B4  D002               	goto	l13459
 34686                           
 34687                           ; BSR set to: 0
 34688  0013B6  0100               	movlb	0	; () banked
 34689  0013B8  8FB7               	bsf	___fladd@grs& (0+255),7,b
 34690  0013BA                     l13459:
 34691                           
 34692                           ; BSR set to: 0
 34693  0013BA  0100               	movlb	0	; () banked
 34694  0013BC  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 34695  0013BE  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 34696  0013C0  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 34697  0013C2  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 34698  0013C4  33A4               	rrcf	___fladd@b& (0+255),f,b
 34699                           
 34700                           ; BSR set to: 0
 34701  0013C6  0100               	movlb	0	; () banked
 34702  0013C8  2BB6               	incf	___fladd@bexp& (0+255),f,b
 34703                           
 34704                           ; BSR set to: 0
 34705  0013CA  D0AF               	goto	l13499
 34706  0013CC                     l13463:
 34707                           
 34708                           ; BSR set to: 0
 34709  0013CC  0100               	movlb	0	; () banked
 34710  0013CE  51A8               	movf	___fladd@a& (0+255),w,b
 34711  0013D0  0100               	movlb	0	; () banked
 34712  0013D2  5DA4               	subwf	___fladd@b& (0+255),w,b
 34713  0013D4  0100               	movlb	0	; () banked
 34714  0013D6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34715  0013D8  0100               	movlb	0	; () banked
 34716  0013DA  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 34717  0013DC  0100               	movlb	0	; () banked
 34718  0013DE  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34719  0013E0  0100               	movlb	0	; () banked
 34720  0013E2  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 34721  0013E4  0100               	movlb	0	; () banked
 34722  0013E6  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 34723  0013E8  0A80               	xorlw	128
 34724  0013EA  0100               	movlb	0	; () banked
 34725  0013EC  6FAC               	movwf	??___fladd& (0+255),b
 34726  0013EE  0100               	movlb	0	; () banked
 34727  0013F0  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34728  0013F2  0A80               	xorlw	128
 34729  0013F4  0100               	movlb	0	; () banked
 34730  0013F6  59AC               	subwfb	??___fladd& (0+255),w,b
 34731  0013F8  B0D8               	btfsc	status,0,c
 34732  0013FA  D050               	goto	l13473
 34733                           
 34734                           ; BSR set to: 0
 34735  0013FC  C0A4  F0AC         	movff	___fladd@b,??___fladd
 34736  001400  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 34737  001404  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 34738  001408  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 34739  00140C  0100               	movlb	0	; () banked
 34740  00140E  1FAC               	comf	??___fladd& (0+255),f,b
 34741  001410  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 34742  001412  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 34743  001414  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 34744  001416  2BAC               	incf	??___fladd& (0+255),f,b
 34745  001418  0E00               	movlw	0
 34746  00141A  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 34747  00141C  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 34748  00141E  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 34749  001420  0100               	movlb	0	; () banked
 34750  001422  51A8               	movf	___fladd@a& (0+255),w,b
 34751  001424  0100               	movlb	0	; () banked
 34752  001426  25AC               	addwf	??___fladd& (0+255),w,b
 34753  001428  0100               	movlb	0	; () banked
 34754  00142A  6FB0               	movwf	(??___fladd+4)& (0+255),b
 34755  00142C  0100               	movlb	0	; () banked
 34756  00142E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34757  001430  0100               	movlb	0	; () banked
 34758  001432  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 34759  001434  0100               	movlb	0	; () banked
 34760  001436  6FB1               	movwf	(??___fladd+5)& (0+255),b
 34761  001438  0100               	movlb	0	; () banked
 34762  00143A  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34763  00143C  0100               	movlb	0	; () banked
 34764  00143E  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 34765  001440  0100               	movlb	0	; () banked
 34766  001442  6FB2               	movwf	(??___fladd+6)& (0+255),b
 34767  001444  0100               	movlb	0	; () banked
 34768  001446  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34769  001448  0100               	movlb	0	; () banked
 34770  00144A  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 34771  00144C  0100               	movlb	0	; () banked
 34772  00144E  6FB3               	movwf	(??___fladd+7)& (0+255),b
 34773  001450  0EFF               	movlw	255
 34774  001452  0100               	movlb	0	; () banked
 34775  001454  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 34776  001456  0100               	movlb	0	; () banked
 34777  001458  6FA4               	movwf	___fladd@b& (0+255),b
 34778  00145A  0EFF               	movlw	255
 34779  00145C  0100               	movlb	0	; () banked
 34780  00145E  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 34781  001460  0100               	movlb	0	; () banked
 34782  001462  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34783  001464  0EFF               	movlw	255
 34784  001466  0100               	movlb	0	; () banked
 34785  001468  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 34786  00146A  0100               	movlb	0	; () banked
 34787  00146C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34788  00146E  0EFF               	movlw	255
 34789  001470  0100               	movlb	0	; () banked
 34790  001472  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 34791  001474  0100               	movlb	0	; () banked
 34792  001476  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34793  001478  0E80               	movlw	128
 34794  00147A  0100               	movlb	0	; () banked
 34795  00147C  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 34796                           
 34797                           ; BSR set to: 0
 34798  00147E  0100               	movlb	0	; () banked
 34799  001480  6DB7               	negf	___fladd@grs& (0+255),b
 34800                           
 34801                           ; BSR set to: 0
 34802  001482  0100               	movlb	0	; () banked
 34803  001484  51B7               	movf	___fladd@grs& (0+255),w,b
 34804  001486  0100               	movlb	0	; () banked
 34805  001488  A4D8               	btfss	status,2,c
 34806  00148A  D018               	goto	l2844
 34807                           
 34808                           ; BSR set to: 0
 34809  00148C  0E01               	movlw	1
 34810  00148E  0100               	movlb	0	; () banked
 34811  001490  27A4               	addwf	___fladd@b& (0+255),f,b
 34812  001492  0E00               	movlw	0
 34813  001494  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 34814  001496  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 34815  001498  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 34816                           
 34817                           ; BSR set to: 0
 34818  00149A  D010               	goto	l2844
 34819  00149C                     l13473:
 34820                           
 34821                           ; BSR set to: 0
 34822  00149C  0100               	movlb	0	; () banked
 34823  00149E  51A8               	movf	___fladd@a& (0+255),w,b
 34824  0014A0  0100               	movlb	0	; () banked
 34825  0014A2  5FA4               	subwf	___fladd@b& (0+255),f,b
 34826  0014A4  0100               	movlb	0	; () banked
 34827  0014A6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34828  0014A8  0100               	movlb	0	; () banked
 34829  0014AA  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 34830  0014AC  0100               	movlb	0	; () banked
 34831  0014AE  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34832  0014B0  0100               	movlb	0	; () banked
 34833  0014B2  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 34834  0014B4  0100               	movlb	0	; () banked
 34835  0014B6  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34836  0014B8  0100               	movlb	0	; () banked
 34837  0014BA  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 34838  0014BC                     l2844:
 34839                           
 34840                           ; BSR set to: 0
 34841  0014BC  0100               	movlb	0	; () banked
 34842  0014BE  51A4               	movf	___fladd@b& (0+255),w,b
 34843  0014C0  0100               	movlb	0	; () banked
 34844  0014C2  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 34845  0014C4  0100               	movlb	0	; () banked
 34846  0014C6  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 34847  0014C8  0100               	movlb	0	; () banked
 34848  0014CA  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 34849  0014CC  A4D8               	btfss	status,2,c
 34850  0014CE  D02A               	goto	l13497
 34851                           
 34852                           ; BSR set to: 0
 34853  0014D0  0100               	movlb	0	; () banked
 34854  0014D2  51B7               	movf	___fladd@grs& (0+255),w,b
 34855  0014D4  0100               	movlb	0	; () banked
 34856  0014D6  A4D8               	btfss	status,2,c
 34857  0014D8  D025               	goto	l13497
 34858                           
 34859                           ; BSR set to: 0
 34860  0014DA  0E00               	movlw	0
 34861  0014DC  0100               	movlb	0	; () banked
 34862  0014DE  6FA4               	movwf	?___fladd& (0+255),b
 34863  0014E0  0E00               	movlw	0
 34864  0014E2  6FA5               	movwf	(?___fladd+1)& (0+255),b
 34865  0014E4  0E00               	movlw	0
 34866  0014E6  6FA6               	movwf	(?___fladd+2)& (0+255),b
 34867  0014E8  0E00               	movlw	0
 34868  0014EA  6FA7               	movwf	(?___fladd+3)& (0+255),b
 34869                           
 34870                           ; BSR set to: 0
 34871  0014EC  0012               	return	
 34872  0014EE                     l13481:
 34873                           
 34874                           ; BSR set to: 0
 34875  0014EE  0100               	movlb	0	; () banked
 34876  0014F0  90D8               	bcf	status,0,c
 34877  0014F2  37A4               	rlcf	___fladd@b& (0+255),f,b
 34878  0014F4  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 34879  0014F6  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 34880  0014F8  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 34881                           
 34882                           ; BSR set to: 0
 34883  0014FA  0100               	movlb	0	; () banked
 34884  0014FC  AFB7               	btfss	___fladd@grs& (0+255),7,b
 34885  0014FE  D002               	goto	l13487
 34886                           
 34887                           ; BSR set to: 0
 34888  001500  0100               	movlb	0	; () banked
 34889  001502  81A4               	bsf	___fladd@b& (0+255),0,b
 34890  001504                     l13487:
 34891                           
 34892                           ; BSR set to: 0
 34893  001504  0100               	movlb	0	; () banked
 34894  001506  A1B7               	btfss	___fladd@grs& (0+255),0,b
 34895  001508  D003               	goto	l13491
 34896                           
 34897                           ; BSR set to: 0
 34898  00150A  80D8               	bsf	status,0,c
 34899  00150C  0100               	movlb	0	; () banked
 34900  00150E  D002               	goto	L29
 34901  001510                     l13491:
 34902                           
 34903                           ; BSR set to: 0
 34904  001510  0100               	movlb	0	; () banked
 34905  001512  90D8               	bcf	status,0,c
 34906  001514                     L29:
 34907  001514  37B7               	rlcf	___fladd@grs& (0+255),f,b
 34908                           
 34909                           ; BSR set to: 0
 34910                           
 34911                           ; BSR set to: 0
 34912  001516  0100               	movlb	0	; () banked
 34913  001518  51B6               	movf	___fladd@bexp& (0+255),w,b
 34914  00151A  0100               	movlb	0	; () banked
 34915  00151C  B4D8               	btfsc	status,2,c
 34916  00151E  D002               	goto	l13497
 34917                           
 34918                           ; BSR set to: 0
 34919  001520  0100               	movlb	0	; () banked
 34920  001522  07B6               	decf	___fladd@bexp& (0+255),f,b
 34921  001524                     l13497:
 34922                           
 34923                           ; BSR set to: 0
 34924  001524  0100               	movlb	0	; () banked
 34925  001526  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 34926  001528  D7E2               	goto	l13481
 34927  00152A                     l13499:
 34928                           
 34929                           ; BSR set to: 0
 34930  00152A  0E00               	movlw	0
 34931  00152C  0100               	movlb	0	; () banked
 34932  00152E  6FB5               	movwf	___fladd@aexp& (0+255),b
 34933                           
 34934                           ; BSR set to: 0
 34935  001530  0100               	movlb	0	; () banked
 34936  001532  AFB7               	btfss	___fladd@grs& (0+255),7,b
 34937  001534  D00D               	goto	l2853
 34938                           
 34939                           ; BSR set to: 0
 34940  001536  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 34941  00153A  0E7F               	movlw	127
 34942  00153C  0100               	movlb	0	; () banked
 34943  00153E  17AC               	andwf	??___fladd& (0+255),f,b
 34944  001540  A4D8               	btfss	status,2,c
 34945  001542  D003               	goto	l13507
 34946                           
 34947                           ; BSR set to: 0
 34948                           
 34949                           ; BSR set to: 0
 34950  001544  0100               	movlb	0	; () banked
 34951  001546  A1A4               	btfss	___fladd@b& (0+255),0,b
 34952  001548  D003               	goto	l2853
 34953  00154A                     l13507:
 34954                           
 34955                           ; BSR set to: 0
 34956  00154A  0E01               	movlw	1
 34957  00154C  0100               	movlb	0	; () banked
 34958  00154E  6FB5               	movwf	___fladd@aexp& (0+255),b
 34959  001550                     l2853:
 34960                           
 34961                           ; BSR set to: 0
 34962  001550  0100               	movlb	0	; () banked
 34963  001552  51B5               	movf	___fladd@aexp& (0+255),w,b
 34964  001554  0100               	movlb	0	; () banked
 34965  001556  B4D8               	btfsc	status,2,c
 34966  001558  D026               	goto	l13517
 34967                           
 34968                           ; BSR set to: 0
 34969  00155A  0E01               	movlw	1
 34970  00155C  0100               	movlb	0	; () banked
 34971  00155E  27A4               	addwf	___fladd@b& (0+255),f,b
 34972  001560  0E00               	movlw	0
 34973  001562  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 34974  001564  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 34975  001566  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 34976                           
 34977                           ; BSR set to: 0
 34978  001568  0100               	movlb	0	; () banked
 34979  00156A  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 34980  00156C  D01C               	goto	l13517
 34981                           
 34982                           ; BSR set to: 0
 34983  00156E  C0A4  F0AC         	movff	___fladd@b,??___fladd
 34984  001572  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 34985  001576  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 34986  00157A  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 34987  00157E  0100               	movlb	0	; () banked
 34988  001580  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 34989  001582  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 34990  001584  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 34991  001586  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 34992  001588  33AC               	rrcf	??___fladd& (0+255),f,b
 34993  00158A  C0AC  F0A4         	movff	??___fladd,___fladd@b
 34994  00158E  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 34995  001592  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 34996  001596  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 34997  00159A  0100               	movlb	0	; () banked
 34998  00159C  29B6               	incf	___fladd@bexp& (0+255),w,b
 34999  00159E  B4D8               	btfsc	status,2,c
 35000  0015A0  D002               	goto	l13517
 35001                           
 35002                           ; BSR set to: 0
 35003  0015A2  0100               	movlb	0	; () banked
 35004  0015A4  2BB6               	incf	___fladd@bexp& (0+255),f,b
 35005  0015A6                     l13517:
 35006                           
 35007                           ; BSR set to: 0
 35008  0015A6  0100               	movlb	0	; () banked
 35009  0015A8  29B6               	incf	___fladd@bexp& (0+255),w,b
 35010  0015AA  B4D8               	btfsc	status,2,c
 35011  0015AC  D005               	goto	l13521
 35012                           
 35013                           ; BSR set to: 0
 35014  0015AE  0100               	movlb	0	; () banked
 35015  0015B0  51B6               	movf	___fladd@bexp& (0+255),w,b
 35016  0015B2  0100               	movlb	0	; () banked
 35017  0015B4  A4D8               	btfss	status,2,c
 35018  0015B6  D011               	goto	l13525
 35019  0015B8                     l13521:
 35020                           
 35021                           ; BSR set to: 0
 35022  0015B8  0E00               	movlw	0
 35023  0015BA  0100               	movlb	0	; () banked
 35024  0015BC  6FA4               	movwf	___fladd@b& (0+255),b
 35025  0015BE  0E00               	movlw	0
 35026  0015C0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 35027  0015C2  0E00               	movlw	0
 35028  0015C4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 35029  0015C6  0E00               	movlw	0
 35030  0015C8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 35031  0015CA  0100               	movlb	0	; () banked
 35032  0015CC  51B6               	movf	___fladd@bexp& (0+255),w,b
 35033  0015CE  0100               	movlb	0	; () banked
 35034  0015D0  A4D8               	btfss	status,2,c
 35035  0015D2  D003               	goto	l13525
 35036                           
 35037                           ; BSR set to: 0
 35038  0015D4  0E00               	movlw	0
 35039  0015D6  0100               	movlb	0	; () banked
 35040  0015D8  6FB4               	movwf	___fladd@signs& (0+255),b
 35041  0015DA                     l13525:
 35042                           
 35043                           ; BSR set to: 0
 35044  0015DA  0100               	movlb	0	; () banked
 35045  0015DC  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 35046  0015DE  D003               	goto	l13529
 35047                           
 35048                           ; BSR set to: 0
 35049  0015E0  0100               	movlb	0	; () banked
 35050  0015E2  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 35051  0015E4  D002               	goto	l13531
 35052  0015E6                     l13529:
 35053                           
 35054                           ; BSR set to: 0
 35055  0015E6  0100               	movlb	0	; () banked
 35056  0015E8  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 35057  0015EA                     l13531:
 35058                           
 35059                           ; BSR set to: 0
 35060  0015EA  0100               	movlb	0	; () banked
 35061  0015EC  90D8               	bcf	status,0,c
 35062  0015EE  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 35063  0015F0  0100               	movlb	0	; () banked
 35064  0015F2  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 35065                           
 35066                           ; BSR set to: 0
 35067  0015F4  0100               	movlb	0	; () banked
 35068  0015F6  AFB4               	btfss	___fladd@signs& (0+255),7,b
 35069  0015F8  D002               	goto	l13537
 35070                           
 35071                           ; BSR set to: 0
 35072  0015FA  0100               	movlb	0	; () banked
 35073  0015FC  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 35074  0015FE                     l13537:
 35075                           
 35076                           ; BSR set to: 0
 35077  0015FE  C0A4  F0A4         	movff	___fladd@b,?___fladd
 35078  001602  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 35079  001606  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 35080  00160A  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 35081  00160E  0012               	return	
 35082  001610                     __end_of___fladd:
 35083                           	opt stack 0
 35084                           tosu	equ	0xFFF
 35085                           tosh	equ	0xFFE
 35086                           tosl	equ	0xFFD
 35087                           pclath	equ	0xFFA
 35088                           tblptru	equ	0xFF8
 35089                           tblptrh	equ	0xFF7
 35090                           tblptrl	equ	0xFF6
 35091                           tablat	equ	0xFF5
 35092                           prodh	equ	0xFF4
 35093                           prodl	equ	0xFF3
 35094                           intcon	equ	0xFF2
 35095                           indf0	equ	0xFEF
 35096                           postinc0	equ	0xFEE
 35097                           fsr0h	equ	0xFEA
 35098                           fsr0l	equ	0xFE9
 35099                           wreg	equ	0xFE8
 35100                           indf1	equ	0xFE7
 35101                           postinc1	equ	0xFE6
 35102                           postdec1	equ	0xFE5
 35103                           plusw1	equ	0xFE3
 35104                           fsr1h	equ	0xFE2
 35105                           fsr1l	equ	0xFE1
 35106                           indf2	equ	0xFDF
 35107                           postinc2	equ	0xFDE
 35108                           postdec2	equ	0xFDD
 35109                           plusw2	equ	0xFDB
 35110                           fsr2h	equ	0xFDA
 35111                           fsr2l	equ	0xFD9
 35112                           status	equ	0xFD8
 35113                           
 35114 ;; *************** function _sample_all_power_on *****************
 35115 ;; Defined at:
 35116 ;;		line 88 in file "src/api/sample.c"
 35117 ;; Parameters:    Size  Location     Type
 35118 ;;		None
 35119 ;; Auto vars:     Size  Location     Type
 35120 ;;		None
 35121 ;; Return value:  Size  Location     Type
 35122 ;;                  1    wreg      void 
 35123 ;; Registers used:
 35124 ;;		wreg, status,2, status,0
 35125 ;; Tracked objects:
 35126 ;;		On entry : 0/0
 35127 ;;		On exit  : 0/0
 35128 ;;		Unchanged: 0/0
 35129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35134 ;;Total ram usage:        0 bytes
 35135 ;; Hardware stack levels used:    1
 35136 ;; Hardware stack levels required when called:    4
 35137 ;; This function calls:
 35138 ;;		Nothing
 35139 ;; This function is called by:
 35140 ;;		_sample_function_enable_fi_in_rtc
 35141 ;; This function uses a non-reentrant model
 35142 ;;
 35143                           
 35144                           	psect	text181
 35145  00A346                     __ptext181:
 35146                           	opt stack 0
 35147  00A346                     _sample_all_power_on:
 35148                           	opt stack 24
 35149                           
 35150                           ;sample.c: 90: if(!sensorPowerOn){
 35151                           
 35152                           ; BSR set to: 0
 35153                           ;incstack = 0
 35154  00A346  502F               	movf	_sensorPowerOn,w,c	;volatile
 35155  00A348  A4D8               	btfss	status,2,c
 35156  00A34A  0012               	return	
 35157                           
 35158                           ;sample.c: 91: do{ do{TRISH &= ~(1<<3);}while(0);; do{LATH |= (1<<3);}while(0);; }while(
      +                          0);;
 35159  00A34C  9699               	bcf	3993,3,c	;volatile
 35160  00A34E  8690               	bsf	3984,3,c	;volatile
 35161                           
 35162                           ;sample.c: 92: do{ do{TRISB &= ~(1<<5);}while(0);; do{LATB |= (1<<5);}while(0);; }while(
      +                          0);;
 35163  00A350  9A93               	bcf	3987,5,c	;volatile
 35164  00A352  8A8A               	bsf	3978,5,c	;volatile
 35165                           
 35166                           ;sample.c: 93: sensorPowerOn=1;
 35167  00A354  0E01               	movlw	1
 35168  00A356  6E2F               	movwf	_sensorPowerOn,c	;volatile
 35169  00A358  0012               	return	
 35170  00A35A                     __end_of_sample_all_power_on:
 35171                           	opt stack 0
 35172                           tosu	equ	0xFFF
 35173                           tosh	equ	0xFFE
 35174                           tosl	equ	0xFFD
 35175                           pclath	equ	0xFFA
 35176                           tblptru	equ	0xFF8
 35177                           tblptrh	equ	0xFF7
 35178                           tblptrl	equ	0xFF6
 35179                           tablat	equ	0xFF5
 35180                           prodh	equ	0xFF4
 35181                           prodl	equ	0xFF3
 35182                           intcon	equ	0xFF2
 35183                           indf0	equ	0xFEF
 35184                           postinc0	equ	0xFEE
 35185                           fsr0h	equ	0xFEA
 35186                           fsr0l	equ	0xFE9
 35187                           wreg	equ	0xFE8
 35188                           indf1	equ	0xFE7
 35189                           postinc1	equ	0xFE6
 35190                           postdec1	equ	0xFE5
 35191                           plusw1	equ	0xFE3
 35192                           fsr1h	equ	0xFE2
 35193                           fsr1l	equ	0xFE1
 35194                           indf2	equ	0xFDF
 35195                           postinc2	equ	0xFDE
 35196                           postdec2	equ	0xFDD
 35197                           plusw2	equ	0xFDB
 35198                           fsr2h	equ	0xFDA
 35199                           fsr2l	equ	0xFD9
 35200                           status	equ	0xFD8
 35201                           
 35202 ;; *************** function _sample_all_power_off *****************
 35203 ;; Defined at:
 35204 ;;		line 97 in file "src/api/sample.c"
 35205 ;; Parameters:    Size  Location     Type
 35206 ;;		None
 35207 ;; Auto vars:     Size  Location     Type
 35208 ;;		None
 35209 ;; Return value:  Size  Location     Type
 35210 ;;                  1    wreg      void 
 35211 ;; Registers used:
 35212 ;;		wreg, status,2, status,0
 35213 ;; Tracked objects:
 35214 ;;		On entry : 0/0
 35215 ;;		On exit  : 0/0
 35216 ;;		Unchanged: 0/0
 35217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35222 ;;Total ram usage:        0 bytes
 35223 ;; Hardware stack levels used:    1
 35224 ;; Hardware stack levels required when called:    4
 35225 ;; This function calls:
 35226 ;;		Nothing
 35227 ;; This function is called by:
 35228 ;;		_sample_function_enable_fi_in_rtc
 35229 ;; This function uses a non-reentrant model
 35230 ;;
 35231                           
 35232                           	psect	text182
 35233  00A39A                     __ptext182:
 35234                           	opt stack 0
 35235  00A39A                     _sample_all_power_off:
 35236                           	opt stack 24
 35237                           
 35238                           ;incstack = 0
 35239                           ;sample.c: 99: do{ do{TRISH &= ~(1<<3);}while(0);; do{LATH &= ~(1<<3);}while(0);; }while
      +                          (0);;
 35240  00A39A  9699               	bcf	3993,3,c	;volatile
 35241  00A39C  9690               	bcf	3984,3,c	;volatile
 35242                           
 35243                           ;sample.c: 100: do{ do{TRISB &= ~(1<<5);}while(0);; do{LATB &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 35244  00A39E  9A93               	bcf	3987,5,c	;volatile
 35245  00A3A0  9A8A               	bcf	3978,5,c	;volatile
 35246                           
 35247                           ;sample.c: 101: sensorPowerOn=0;
 35248  00A3A2  0E00               	movlw	0
 35249  00A3A4  6E2F               	movwf	_sensorPowerOn,c	;volatile
 35250  00A3A6  0012               	return		;funcret
 35251  00A3A8                     __end_of_sample_all_power_off:
 35252                           	opt stack 0
 35253                           tosu	equ	0xFFF
 35254                           tosh	equ	0xFFE
 35255                           tosl	equ	0xFFD
 35256                           pclath	equ	0xFFA
 35257                           tblptru	equ	0xFF8
 35258                           tblptrh	equ	0xFF7
 35259                           tblptrl	equ	0xFF6
 35260                           tablat	equ	0xFF5
 35261                           prodh	equ	0xFF4
 35262                           prodl	equ	0xFF3
 35263                           intcon	equ	0xFF2
 35264                           indf0	equ	0xFEF
 35265                           postinc0	equ	0xFEE
 35266                           fsr0h	equ	0xFEA
 35267                           fsr0l	equ	0xFE9
 35268                           wreg	equ	0xFE8
 35269                           indf1	equ	0xFE7
 35270                           postinc1	equ	0xFE6
 35271                           postdec1	equ	0xFE5
 35272                           plusw1	equ	0xFE3
 35273                           fsr1h	equ	0xFE2
 35274                           fsr1l	equ	0xFE1
 35275                           indf2	equ	0xFDF
 35276                           postinc2	equ	0xFDE
 35277                           postdec2	equ	0xFDD
 35278                           plusw2	equ	0xFDB
 35279                           fsr2h	equ	0xFDA
 35280                           fsr2l	equ	0xFD9
 35281                           status	equ	0xFD8
 35282                           
 35283 ;; *************** function _data_init_all *****************
 35284 ;; Defined at:
 35285 ;;		line 438 in file "src/api/data.c"
 35286 ;; Parameters:    Size  Location     Type
 35287 ;;		None
 35288 ;; Auto vars:     Size  Location     Type
 35289 ;;		None
 35290 ;; Return value:  Size  Location     Type
 35291 ;;                  1    wreg      void 
 35292 ;; Registers used:
 35293 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35294 ;; Tracked objects:
 35295 ;;		On entry : 0/0
 35296 ;;		On exit  : 0/0
 35297 ;;		Unchanged: 0/0
 35298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35303 ;;Total ram usage:        0 bytes
 35304 ;; Hardware stack levels used:    1
 35305 ;; Hardware stack levels required when called:   10
 35306 ;; This function calls:
 35307 ;;		_calib_data_init_diff_pr
 35308 ;;		_calib_data_init_pr
 35309 ;;		_data_sys_init
 35310 ;; This function is called by:
 35311 ;;		_main
 35312 ;; This function uses a non-reentrant model
 35313 ;;
 35314                           
 35315                           	psect	text183
 35316  00A3A8                     __ptext183:
 35317                           	opt stack 0
 35318  00A3A8                     _data_init_all:
 35319                           	opt stack 20
 35320                           
 35321                           ;data.c: 440: data_sys_init();
 35322                           
 35323                           ;incstack = 0
 35324  00A3A8  EC5C  F024         	call	_data_sys_init	;wreg free
 35325                           
 35326                           ;data.c: 441: calib_data_init_diff_pr();
 35327  00A3AC  EC3C  F02C         	call	_calib_data_init_diff_pr	;wreg free
 35328                           
 35329                           ;data.c: 442: calib_data_init_pr();
 35330  00A3B0  ECA7  F02B         	call	_calib_data_init_pr	;wreg free
 35331  00A3B4  0012               	return		;funcret
 35332  00A3B6                     __end_of_data_init_all:
 35333                           	opt stack 0
 35334                           tosu	equ	0xFFF
 35335                           tosh	equ	0xFFE
 35336                           tosl	equ	0xFFD
 35337                           pclath	equ	0xFFA
 35338                           tblptru	equ	0xFF8
 35339                           tblptrh	equ	0xFF7
 35340                           tblptrl	equ	0xFF6
 35341                           tablat	equ	0xFF5
 35342                           prodh	equ	0xFF4
 35343                           prodl	equ	0xFF3
 35344                           intcon	equ	0xFF2
 35345                           indf0	equ	0xFEF
 35346                           postinc0	equ	0xFEE
 35347                           fsr0h	equ	0xFEA
 35348                           fsr0l	equ	0xFE9
 35349                           wreg	equ	0xFE8
 35350                           indf1	equ	0xFE7
 35351                           postinc1	equ	0xFE6
 35352                           postdec1	equ	0xFE5
 35353                           plusw1	equ	0xFE3
 35354                           fsr1h	equ	0xFE2
 35355                           fsr1l	equ	0xFE1
 35356                           indf2	equ	0xFDF
 35357                           postinc2	equ	0xFDE
 35358                           postdec2	equ	0xFDD
 35359                           plusw2	equ	0xFDB
 35360                           fsr2h	equ	0xFDA
 35361                           fsr2l	equ	0xFD9
 35362                           status	equ	0xFD8
 35363                           
 35364 ;; *************** function _data_sys_init *****************
 35365 ;; Defined at:
 35366 ;;		line 163 in file "src/api/data.c"
 35367 ;; Parameters:    Size  Location     Type
 35368 ;;		None
 35369 ;; Auto vars:     Size  Location     Type
 35370 ;;  buf             2  131[BANK0 ] PTR unsigned char 
 35371 ;;		 -> stSysData(240), 
 35372 ;;  stp             2  129[BANK0 ] PTR struct .
 35373 ;;		 -> stSysData(240), 
 35374 ;;  t16             2  126[BANK0 ] unsigned int 
 35375 ;;  ret             1  128[BANK0 ] unsigned char 
 35376 ;; Return value:  Size  Location     Type
 35377 ;;                  1    wreg      unsigned char 
 35378 ;; Registers used:
 35379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35380 ;; Tracked objects:
 35381 ;;		On entry : 0/0
 35382 ;;		On exit  : 0/0
 35383 ;;		Unchanged: 0/0
 35384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35386 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35388 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35389 ;;Total ram usage:        7 bytes
 35390 ;; Hardware stack levels used:    1
 35391 ;; Hardware stack levels required when called:    7
 35392 ;; This function calls:
 35393 ;;		_crc_append
 35394 ;;		_crc_verify
 35395 ;;		_data_sys_cal_v1
 35396 ;;		_data_sys_cal_v2
 35397 ;;		_m_flash_read
 35398 ;;		_m_flash_write
 35399 ;;		_m_mem_cpy_len
 35400 ;; This function is called by:
 35401 ;;		_data_init_all
 35402 ;; This function uses a non-reentrant model
 35403 ;;
 35404                           
 35405                           	psect	text184
 35406  0048B8                     __ptext184:
 35407                           	opt stack 0
 35408  0048B8                     _data_sys_init:
 35409                           	opt stack 22
 35410                           
 35411                           ;data.c: 165: uint8_t ret;
 35412                           ;data.c: 166: uint16_t t16;
 35413                           ;data.c: 167: t16=sizeof(st_sysDataDef);
 35414                           
 35415                           ;incstack = 0
 35416  0048B8  0E00               	movlw	0
 35417  0048BA  0100               	movlb	0	; () banked
 35418  0048BC  6FDF               	movwf	(data_sys_init@t16+1)& (0+255),b
 35419  0048BE  0EF0               	movlw	240
 35420  0048C0  6FDE               	movwf	data_sys_init@t16& (0+255),b
 35421                           
 35422                           ; BSR set to: 0
 35423                           ;data.c: 168: uint8_t* buf=(uint8_t*)(&stSysData);
 35424  0048C2  0E00               	movlw	low _stSysData
 35425  0048C4  0100               	movlb	0	; () banked
 35426  0048C6  6FE3               	movwf	data_sys_init@buf& (0+255),b
 35427  0048C8  0E02               	movlw	high _stSysData
 35428  0048CA  0100               	movlb	0	; () banked
 35429  0048CC  6FE4               	movwf	(data_sys_init@buf+1)& (0+255),b
 35430                           
 35431                           ; BSR set to: 0
 35432                           ;data.c: 169: st_sysDataDef* stp=(st_sysDataDef*)buf;
 35433  0048CE  C0E3  F0E1         	movff	data_sys_init@buf,data_sys_init@stp
 35434  0048D2  C0E4  F0E2         	movff	data_sys_init@buf+1,data_sys_init@stp+1
 35435                           
 35436                           ; BSR set to: 0
 35437                           ;data.c: 171: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 35438  0048D6  0E00               	movlw	0
 35439  0048D8  0100               	movlb	0	; () banked
 35440  0048DA  6F60               	movwf	m_flash_read@addr& (0+255),b
 35441  0048DC  0EF4               	movlw	244
 35442  0048DE  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 35443  0048E0  0E00               	movlw	0
 35444  0048E2  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 35445  0048E4  0E00               	movlw	0
 35446  0048E6  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 35447  0048E8  C0E3  F064         	movff	data_sys_init@buf,m_flash_read@buf
 35448  0048EC  C0E4  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 35449  0048F0  0E00               	movlw	0
 35450  0048F2  0100               	movlb	0	; () banked
 35451  0048F4  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 35452  0048F6  0EF0               	movlw	240
 35453  0048F8  6F66               	movwf	m_flash_read@len& (0+255),b
 35454  0048FA  EC4F  F042         	call	_m_flash_read	;wreg free
 35455                           
 35456                           ;data.c: 172: ret=crc_verify(buf,sizeof(st_sysDataDef));
 35457  0048FE  C0E3  F06C         	movff	data_sys_init@buf,crc_verify@message
 35458  004902  C0E4  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 35459  004906  0E00               	movlw	0
 35460  004908  0100               	movlb	0	; () banked
 35461  00490A  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 35462  00490C  0EF0               	movlw	240
 35463  00490E  6F6E               	movwf	crc_verify@n& (0+255),b
 35464  004910  EC45  F041         	call	_crc_verify	;wreg free
 35465  004914  0100               	movlb	0	; () banked
 35466  004916  6FE0               	movwf	data_sys_init@ret& (0+255),b
 35467                           
 35468                           ; BSR set to: 0
 35469                           ;data.c: 173: if(!ret){
 35470  004918  0100               	movlb	0	; () banked
 35471  00491A  51E0               	movf	data_sys_init@ret& (0+255),w,b
 35472  00491C  0100               	movlb	0	; () banked
 35473  00491E  A4D8               	btfss	status,2,c
 35474  004920  0012               	return	
 35475                           
 35476                           ; BSR set to: 0
 35477                           ;data.c: 174: m_mem_cpy_len(buf,(uint8_t*)(&defultSystemData),sizeof(st_sysDataDef));
 35478  004922  C0E3  F060         	movff	data_sys_init@buf,m_mem_cpy_len@d
 35479  004926  C0E4  F061         	movff	data_sys_init@buf+1,m_mem_cpy_len@d+1
 35480  00492A  0E3F               	movlw	low _defultSystemData
 35481  00492C  0100               	movlb	0	; () banked
 35482  00492E  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 35483  004930  0EF2               	movlw	high _defultSystemData
 35484  004932  0100               	movlb	0	; () banked
 35485  004934  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 35486  004936  0E00               	movlw	0
 35487  004938  0100               	movlb	0	; () banked
 35488  00493A  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 35489  00493C  0EF0               	movlw	240
 35490  00493E  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 35491  004940  ECE3  F04B         	call	_m_mem_cpy_len	;wreg free
 35492                           
 35493                           ;data.c: 175: stp->V1=data_sys_cal_v1(stp);
 35494  004944  C0E1  F0C2         	movff	data_sys_init@stp,data_sys_cal_v1@stp
 35495  004948  C0E2  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v1@stp+1
 35496  00494C  EC37  F01D         	call	_data_sys_cal_v1	;wreg free
 35497  004950  0100               	movlb	0	; () banked
 35498  004952  EE20 F010          	lfsr	2,16
 35499  004956  51E1               	movf	data_sys_init@stp& (0+255),w,b
 35500  004958  26D9               	addwf	fsr2l,f,c
 35501  00495A  51E2               	movf	(data_sys_init@stp+1)& (0+255),w,b
 35502  00495C  22DA               	addwfc	fsr2h,f,c
 35503  00495E  0100               	movlb	0	; () banked
 35504  004960  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 35505  004964  0100               	movlb	0	; () banked
 35506  004966  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 35507  00496A  0100               	movlb	0	; () banked
 35508  00496C  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 35509  004970  0100               	movlb	0	; () banked
 35510  004972  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 35511                           
 35512                           ; BSR set to: 0
 35513                           ;data.c: 176: stp->V2=data_sys_cal_v2(stp);
 35514  004976  C0E1  F0C2         	movff	data_sys_init@stp,data_sys_cal_v2@stp
 35515  00497A  C0E2  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v2@stp+1
 35516  00497E  EC32  F027         	call	_data_sys_cal_v2	;wreg free
 35517  004982  0100               	movlb	0	; () banked
 35518  004984  EE20 F014          	lfsr	2,20
 35519  004988  51E1               	movf	data_sys_init@stp& (0+255),w,b
 35520  00498A  26D9               	addwf	fsr2l,f,c
 35521  00498C  51E2               	movf	(data_sys_init@stp+1)& (0+255),w,b
 35522  00498E  22DA               	addwfc	fsr2h,f,c
 35523  004990  0100               	movlb	0	; () banked
 35524  004992  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 35525  004996  0100               	movlb	0	; () banked
 35526  004998  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 35527  00499C  0100               	movlb	0	; () banked
 35528  00499E  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 35529  0049A2  0100               	movlb	0	; () banked
 35530  0049A4  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 35531                           
 35532                           ; BSR set to: 0
 35533                           ;data.c: 177: crc_append(buf,sizeof(st_sysDataDef)-2);
 35534  0049A8  C0E3  F06C         	movff	data_sys_init@buf,crc_append@message
 35535  0049AC  C0E4  F06D         	movff	data_sys_init@buf+1,crc_append@message+1
 35536  0049B0  0E00               	movlw	0
 35537  0049B2  0100               	movlb	0	; () banked
 35538  0049B4  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 35539  0049B6  0EEE               	movlw	238
 35540  0049B8  6F6E               	movwf	crc_append@n& (0+255),b
 35541  0049BA  EC89  F047         	call	_crc_append	;wreg free
 35542                           
 35543                           ;data.c: 178: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 35544  0049BE  0E00               	movlw	0
 35545  0049C0  0100               	movlb	0	; () banked
 35546  0049C2  6F6E               	movwf	m_flash_write@addr& (0+255),b
 35547  0049C4  0EF4               	movlw	244
 35548  0049C6  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 35549  0049C8  0E00               	movlw	0
 35550  0049CA  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 35551  0049CC  0E00               	movlw	0
 35552  0049CE  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 35553  0049D0  C0E3  F072         	movff	data_sys_init@buf,m_flash_write@buf
 35554  0049D4  C0E4  F073         	movff	data_sys_init@buf+1,m_flash_write@buf+1
 35555  0049D8  0E00               	movlw	0
 35556  0049DA  0100               	movlb	0	; () banked
 35557  0049DC  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 35558  0049DE  0EF0               	movlw	240
 35559  0049E0  6F74               	movwf	m_flash_write@len& (0+255),b
 35560  0049E2  ECDC  F029         	call	_m_flash_write	;wreg free
 35561                           
 35562                           ;data.c: 179: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 35563  0049E6  0E00               	movlw	0
 35564  0049E8  0100               	movlb	0	; () banked
 35565  0049EA  6F60               	movwf	m_flash_read@addr& (0+255),b
 35566  0049EC  0EF4               	movlw	244
 35567  0049EE  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 35568  0049F0  0E00               	movlw	0
 35569  0049F2  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 35570  0049F4  0E00               	movlw	0
 35571  0049F6  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 35572  0049F8  C0E3  F064         	movff	data_sys_init@buf,m_flash_read@buf
 35573  0049FC  C0E4  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 35574  004A00  0E00               	movlw	0
 35575  004A02  0100               	movlb	0	; () banked
 35576  004A04  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 35577  004A06  0EF0               	movlw	240
 35578  004A08  6F66               	movwf	m_flash_read@len& (0+255),b
 35579  004A0A  EC4F  F042         	call	_m_flash_read	;wreg free
 35580                           
 35581                           ;data.c: 180: ret=crc_verify(buf,sizeof(st_sysDataDef));
 35582  004A0E  C0E3  F06C         	movff	data_sys_init@buf,crc_verify@message
 35583  004A12  C0E4  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 35584  004A16  0E00               	movlw	0
 35585  004A18  0100               	movlb	0	; () banked
 35586  004A1A  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 35587  004A1C  0EF0               	movlw	240
 35588  004A1E  6F6E               	movwf	crc_verify@n& (0+255),b
 35589  004A20  EC45  F041         	call	_crc_verify	;wreg free
 35590  004A24  0100               	movlb	0	; () banked
 35591  004A26  6FE0               	movwf	data_sys_init@ret& (0+255),b
 35592                           
 35593                           ; BSR set to: 0
 35594  004A28  0012               	return	
 35595  004A2A                     __end_of_data_sys_init:
 35596                           	opt stack 0
 35597                           tosu	equ	0xFFF
 35598                           tosh	equ	0xFFE
 35599                           tosl	equ	0xFFD
 35600                           pclath	equ	0xFFA
 35601                           tblptru	equ	0xFF8
 35602                           tblptrh	equ	0xFF7
 35603                           tblptrl	equ	0xFF6
 35604                           tablat	equ	0xFF5
 35605                           prodh	equ	0xFF4
 35606                           prodl	equ	0xFF3
 35607                           intcon	equ	0xFF2
 35608                           indf0	equ	0xFEF
 35609                           postinc0	equ	0xFEE
 35610                           fsr0h	equ	0xFEA
 35611                           fsr0l	equ	0xFE9
 35612                           wreg	equ	0xFE8
 35613                           indf1	equ	0xFE7
 35614                           postinc1	equ	0xFE6
 35615                           postdec1	equ	0xFE5
 35616                           plusw1	equ	0xFE3
 35617                           fsr1h	equ	0xFE2
 35618                           fsr1l	equ	0xFE1
 35619                           indf2	equ	0xFDF
 35620                           postinc2	equ	0xFDE
 35621                           postdec2	equ	0xFDD
 35622                           plusw2	equ	0xFDB
 35623                           fsr2h	equ	0xFDA
 35624                           fsr2l	equ	0xFD9
 35625                           status	equ	0xFD8
 35626                           
 35627 ;; *************** function _m_flash_write *****************
 35628 ;; Defined at:
 35629 ;;		line 63 in file "src/driver/m_flash.c"
 35630 ;; Parameters:    Size  Location     Type
 35631 ;;  addr            4   14[BANK0 ] unsigned long 
 35632 ;;  buf             2   18[BANK0 ] PTR unsigned char 
 35633 ;;		 -> m_flash_test@tmp(16), stSysData(240), 
 35634 ;;  len             2   20[BANK0 ] unsigned int 
 35635 ;; Auto vars:     Size  Location     Type
 35636 ;;  pageAddr        4   26[BANK0 ] unsigned long 
 35637 ;;  t16             2   33[BANK0 ] unsigned int 
 35638 ;;  tmpBuf          2   31[BANK0 ] PTR unsigned char 
 35639 ;;		 -> globleBuffer(256), 
 35640 ;;  j               1   30[BANK0 ] unsigned char 
 35641 ;;  i               1   25[BANK0 ] unsigned char 
 35642 ;;  writeTimes      1   24[BANK0 ] unsigned char 
 35643 ;; Return value:  Size  Location     Type
 35644 ;;                  2   14[BANK0 ] unsigned int 
 35645 ;; Registers used:
 35646 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35647 ;; Tracked objects:
 35648 ;;		On entry : 0/0
 35649 ;;		On exit  : 0/0
 35650 ;;		Unchanged: 0/0
 35651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35652 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35653 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35655 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35656 ;;Total ram usage:       21 bytes
 35657 ;; Hardware stack levels used:    1
 35658 ;; Hardware stack levels required when called:    6
 35659 ;; This function calls:
 35660 ;;		_m_flash_erase
 35661 ;;		_m_flash_read
 35662 ;;		_m_flash_unlock
 35663 ;;		_m_mem_cpy_len
 35664 ;; This function is called by:
 35665 ;;		_data_sys_init
 35666 ;;		___sys_data_save_write_flash
 35667 ;;		_data_sys_save
 35668 ;;		_m_flash_test
 35669 ;; This function uses a non-reentrant model
 35670 ;;
 35671                           
 35672                           	psect	text185
 35673  0053B8                     __ptext185:
 35674                           	opt stack 0
 35675  0053B8                     _m_flash_write:
 35676                           	opt stack 20
 35677                           
 35678                           ;m_flash.c: 65: uint8_t i,j,writeTimes;
 35679                           ;m_flash.c: 66: uint32_t pageAddr;
 35680                           ;m_flash.c: 67: uint16_t t16;
 35681                           ;m_flash.c: 68: uint8_t* tmpBuf=globleBuffer;
 35682                           
 35683                           ; BSR set to: 0
 35684                           ;incstack = 0
 35685  0053B8  0E00               	movlw	low _globleBuffer
 35686  0053BA  0100               	movlb	0	; () banked
 35687  0053BC  6F7F               	movwf	m_flash_write@tmpBuf& (0+255),b
 35688  0053BE  0E05               	movlw	high _globleBuffer
 35689  0053C0  0100               	movlb	0	; () banked
 35690  0053C2  6F80               	movwf	(m_flash_write@tmpBuf+1)& (0+255),b
 35691                           
 35692                           ;m_flash.c: 70: t16=addr & ((1024)-1);
 35693  0053C4  0EFF               	movlw	255
 35694  0053C6  0100               	movlb	0	; () banked
 35695  0053C8  156E               	andwf	m_flash_write@addr& (0+255),w,b
 35696  0053CA  0100               	movlb	0	; () banked
 35697  0053CC  6F81               	movwf	m_flash_write@t16& (0+255),b
 35698  0053CE  0E03               	movlw	3
 35699  0053D0  0100               	movlb	0	; () banked
 35700  0053D2  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 35701  0053D4  0100               	movlb	0	; () banked
 35702  0053D6  6F82               	movwf	(m_flash_write@t16+1)& (0+255),b
 35703                           
 35704                           ;m_flash.c: 71: if(t16+len>(64)*4)return 0;
 35705  0053D8  0100               	movlb	0	; () banked
 35706  0053DA  5174               	movf	m_flash_write@len& (0+255),w,b
 35707  0053DC  0100               	movlb	0	; () banked
 35708  0053DE  2581               	addwf	m_flash_write@t16& (0+255),w,b
 35709  0053E0  0100               	movlb	0	; () banked
 35710  0053E2  6F76               	movwf	??_m_flash_write& (0+255),b
 35711  0053E4  0100               	movlb	0	; () banked
 35712  0053E6  5175               	movf	(m_flash_write@len+1)& (0+255),w,b
 35713  0053E8  0100               	movlb	0	; () banked
 35714  0053EA  2182               	addwfc	(m_flash_write@t16+1)& (0+255),w,b
 35715  0053EC  0100               	movlb	0	; () banked
 35716  0053EE  6F77               	movwf	(??_m_flash_write+1)& (0+255),b
 35717  0053F0  0100               	movlb	0	; () banked
 35718  0053F2  0576               	decf	??_m_flash_write& (0+255),w,b
 35719  0053F4  0E01               	movlw	1
 35720  0053F6  0100               	movlb	0	; () banked
 35721  0053F8  5977               	subwfb	(??_m_flash_write+1)& (0+255),w,b
 35722  0053FA  B0D8               	btfsc	status,0,c
 35723  0053FC  0012               	return	
 35724                           
 35725                           ; BSR set to: 0
 35726                           ;m_flash.c: 73: pageAddr=addr & ~((1024)-1);
 35727                           
 35728                           ; BSR set to: 0
 35729                           
 35730                           ; BSR set to: 0
 35731                           ;	Return value of _m_flash_write is never used
 35732  0053FE  0E00               	movlw	0
 35733  005400  0100               	movlb	0	; () banked
 35734  005402  156E               	andwf	m_flash_write@addr& (0+255),w,b
 35735  005404  0100               	movlb	0	; () banked
 35736  005406  6F7A               	movwf	m_flash_write@pageAddr& (0+255),b
 35737  005408  0EFC               	movlw	252
 35738  00540A  0100               	movlb	0	; () banked
 35739  00540C  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 35740  00540E  0100               	movlb	0	; () banked
 35741  005410  6F7B               	movwf	(m_flash_write@pageAddr+1)& (0+255),b
 35742  005412  0EFF               	movlw	255
 35743  005414  0100               	movlb	0	; () banked
 35744  005416  1570               	andwf	(m_flash_write@addr+2)& (0+255),w,b
 35745  005418  0100               	movlb	0	; () banked
 35746  00541A  6F7C               	movwf	(m_flash_write@pageAddr+2)& (0+255),b
 35747  00541C  0EFF               	movlw	255
 35748  00541E  0100               	movlb	0	; () banked
 35749  005420  1571               	andwf	(m_flash_write@addr+3)& (0+255),w,b
 35750  005422  0100               	movlb	0	; () banked
 35751  005424  6F7D               	movwf	(m_flash_write@pageAddr+3)& (0+255),b
 35752                           
 35753                           ; BSR set to: 0
 35754                           ;m_flash.c: 74: m_flash_read(pageAddr,tmpBuf,(64)*4);
 35755  005426  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_read@addr
 35756  00542A  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_read@addr+1
 35757  00542E  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_read@addr+2
 35758  005432  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_read@addr+3
 35759  005436  C07F  F064         	movff	m_flash_write@tmpBuf,m_flash_read@buf
 35760  00543A  C080  F065         	movff	m_flash_write@tmpBuf+1,m_flash_read@buf+1
 35761  00543E  0E01               	movlw	1
 35762  005440  0100               	movlb	0	; () banked
 35763  005442  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 35764  005444  0E00               	movlw	0
 35765  005446  6F66               	movwf	m_flash_read@len& (0+255),b
 35766  005448  EC4F  F042         	call	_m_flash_read	;wreg free
 35767                           
 35768                           ;m_flash.c: 75: m_mem_cpy_len(tmpBuf+t16,buf,len);
 35769  00544C  0100               	movlb	0	; () banked
 35770  00544E  5181               	movf	m_flash_write@t16& (0+255),w,b
 35771  005450  0100               	movlb	0	; () banked
 35772  005452  257F               	addwf	m_flash_write@tmpBuf& (0+255),w,b
 35773  005454  0100               	movlb	0	; () banked
 35774  005456  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 35775  005458  0100               	movlb	0	; () banked
 35776  00545A  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 35777  00545C  0100               	movlb	0	; () banked
 35778  00545E  2180               	addwfc	(m_flash_write@tmpBuf+1)& (0+255),w,b
 35779  005460  0100               	movlb	0	; () banked
 35780  005462  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 35781  005464  C072  F062         	movff	m_flash_write@buf,m_mem_cpy_len@s
 35782  005468  C073  F063         	movff	m_flash_write@buf+1,m_mem_cpy_len@s+1
 35783  00546C  C074  F064         	movff	m_flash_write@len,m_mem_cpy_len@len
 35784  005470  C075  F065         	movff	m_flash_write@len+1,m_mem_cpy_len@len+1
 35785  005474  ECE3  F04B         	call	_m_mem_cpy_len	;wreg free
 35786                           
 35787                           ;m_flash.c: 77: m_flash_erase(pageAddr);
 35788  005478  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_erase@addr
 35789  00547C  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_erase@addr+1
 35790  005480  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_erase@addr+2
 35791  005484  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_erase@addr+3
 35792  005488  ECC5  F049         	call	_m_flash_erase	;wreg free
 35793                           
 35794                           ;m_flash.c: 79: writeTimes=(64)*4/(64);
 35795  00548C  0E04               	movlw	4
 35796  00548E  0100               	movlb	0	; () banked
 35797  005490  6F78               	movwf	m_flash_write@writeTimes& (0+255),b
 35798                           
 35799                           ; BSR set to: 0
 35800                           ;m_flash.c: 80: t16=(uint16_t)(tmpBuf);
 35801  005492  C07F  F081         	movff	m_flash_write@tmpBuf,m_flash_write@t16
 35802  005496  C080  F082         	movff	m_flash_write@tmpBuf+1,m_flash_write@t16+1
 35803                           
 35804                           ; BSR set to: 0
 35805                           ;m_flash.c: 82: FSR0L=(uint8_t)(t16&0x00ff);
 35806  00549A  C081  FFE9         	movff	m_flash_write@t16,fsr0l	;volatile
 35807                           
 35808                           ; BSR set to: 0
 35809                           ;m_flash.c: 83: t16>>=8;
 35810  00549E  0100               	movlb	0	; () banked
 35811  0054A0  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 35812  0054A2  6F81               	movwf	m_flash_write@t16& (0+255),b
 35813  0054A4  6B82               	clrf	(m_flash_write@t16+1)& (0+255),b
 35814                           
 35815                           ; BSR set to: 0
 35816                           ;m_flash.c: 84: FSR0H=(uint8_t)(t16&0x00ff);
 35817  0054A6  C081  FFEA         	movff	m_flash_write@t16,fsr0h	;volatile
 35818                           
 35819                           ; BSR set to: 0
 35820                           ;m_flash.c: 86: for(i=0;i<writeTimes;i++){
 35821  0054AA  0E00               	movlw	0
 35822  0054AC  0100               	movlb	0	; () banked
 35823  0054AE  6F79               	movwf	m_flash_write@i& (0+255),b
 35824  0054B0  D017               	goto	l14421
 35825  0054B2                     l14405:
 35826                           
 35827                           ; BSR set to: 0
 35828                           ;m_flash.c: 87: for(j=0;j<(64);j++){
 35829  0054B2  0E00               	movlw	0
 35830  0054B4  0100               	movlb	0	; () banked
 35831  0054B6  6F7E               	movwf	m_flash_write@j& (0+255),b
 35832  0054B8                     l14407:
 35833                           
 35834                           ; BSR set to: 0
 35835  0054B8  0E3F               	movlw	63
 35836  0054BA  0100               	movlb	0	; () banked
 35837  0054BC  657E               	cpfsgt	m_flash_write@j& (0+255),b
 35838  0054BE  D001               	goto	l2202
 35839  0054C0  D007               	goto	l2203
 35840  0054C2                     l2202:
 35841                           
 35842                           ; BSR set to: 0
 35843  0054C2  CFEE FFE8          	movff	postinc0,wreg	;# 
 35844  0054C6  6EF5               	movwf	tablat,c	;# 
 35845  0054C8  000D               	tblwt		*+	;# 
 35846  0054CA  0100               	movlb	0	; () banked
 35847  0054CC  2B7E               	incf	m_flash_write@j& (0+255),f,b
 35848  0054CE  D7F4               	goto	l14407
 35849  0054D0                     l2203:
 35850                           
 35851                           ; BSR set to: 0
 35852  0054D0  000A               	tblrd		*-	;# 
 35853                           
 35854                           ;m_flash.c: 93: EECON1bits.WREN=1;
 35855  0054D2  84A6               	bsf	4006,2,c	;volatile
 35856                           
 35857                           ;m_flash.c: 94: m_flash_unlock();
 35858  0054D4  EC2A  F051         	call	_m_flash_unlock	;wreg free
 35859                           
 35860                           ;m_flash.c: 95: EECON1bits.WREN=0;
 35861  0054D8  94A6               	bcf	4006,2,c	;volatile
 35862  0054DA  000D               	tblwt		*+	;# 
 35863  0054DC  0100               	movlb	0	; () banked
 35864  0054DE  2B79               	incf	m_flash_write@i& (0+255),f,b
 35865  0054E0                     l14421:
 35866                           
 35867                           ; BSR set to: 0
 35868  0054E0  0100               	movlb	0	; () banked
 35869  0054E2  5178               	movf	m_flash_write@writeTimes& (0+255),w,b
 35870  0054E4  0100               	movlb	0	; () banked
 35871  0054E6  5D79               	subwf	m_flash_write@i& (0+255),w,b
 35872  0054E8  B0D8               	btfsc	status,0,c
 35873  0054EA  0012               	return	
 35874  0054EC  D7E2               	goto	l14405
 35875  0054EE                     __end_of_m_flash_write:
 35876                           	opt stack 0
 35877                           tosu	equ	0xFFF
 35878                           tosh	equ	0xFFE
 35879                           tosl	equ	0xFFD
 35880                           pclath	equ	0xFFA
 35881                           tblptru	equ	0xFF8
 35882                           tblptrh	equ	0xFF7
 35883                           tblptrl	equ	0xFF6
 35884                           tablat	equ	0xFF5
 35885                           prodh	equ	0xFF4
 35886                           prodl	equ	0xFF3
 35887                           intcon	equ	0xFF2
 35888                           indf0	equ	0xFEF
 35889                           postinc0	equ	0xFEE
 35890                           fsr0h	equ	0xFEA
 35891                           fsr0l	equ	0xFE9
 35892                           wreg	equ	0xFE8
 35893                           indf1	equ	0xFE7
 35894                           postinc1	equ	0xFE6
 35895                           postdec1	equ	0xFE5
 35896                           plusw1	equ	0xFE3
 35897                           fsr1h	equ	0xFE2
 35898                           fsr1l	equ	0xFE1
 35899                           indf2	equ	0xFDF
 35900                           postinc2	equ	0xFDE
 35901                           postdec2	equ	0xFDD
 35902                           plusw2	equ	0xFDB
 35903                           fsr2h	equ	0xFDA
 35904                           fsr2l	equ	0xFD9
 35905                           status	equ	0xFD8
 35906                           
 35907 ;; *************** function _m_flash_read *****************
 35908 ;; Defined at:
 35909 ;;		line 46 in file "src/driver/m_flash.c"
 35910 ;; Parameters:    Size  Location     Type
 35911 ;;  addr            4    0[BANK0 ] unsigned long 
 35912 ;;  buf             2    4[BANK0 ] PTR unsigned char 
 35913 ;;		 -> m_flash_test@tmp(16), globleBuffer(256), stSysData(240), 
 35914 ;;  len             2    6[BANK0 ] unsigned int 
 35915 ;; Auto vars:     Size  Location     Type
 35916 ;;  t32             4   10[BANK0 ] unsigned long 
 35917 ;;  i               2    8[BANK0 ] unsigned int 
 35918 ;; Return value:  Size  Location     Type
 35919 ;;                  2    0[BANK0 ] unsigned int 
 35920 ;; Registers used:
 35921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35922 ;; Tracked objects:
 35923 ;;		On entry : 0/0
 35924 ;;		On exit  : 0/0
 35925 ;;		Unchanged: 0/0
 35926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35927 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35928 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35930 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35931 ;;Total ram usage:       14 bytes
 35932 ;; Hardware stack levels used:    1
 35933 ;; Hardware stack levels required when called:    4
 35934 ;; This function calls:
 35935 ;;		Nothing
 35936 ;; This function is called by:
 35937 ;;		_data_sys_init
 35938 ;;		___sys_data_save_write_flash
 35939 ;;		_m_flash_write
 35940 ;;		_data_sys_save
 35941 ;;		_m_flash_test
 35942 ;; This function uses a non-reentrant model
 35943 ;;
 35944                           
 35945                           	psect	text186
 35946  00849E                     __ptext186:
 35947                           	opt stack 0
 35948  00849E                     _m_flash_read:
 35949                           	opt stack 21
 35950                           
 35951                           ;m_flash.c: 48: uint16_t i;
 35952                           ;m_flash.c: 49: uint32_t t32=addr;
 35953                           
 35954                           ; BSR set to: 0
 35955                           ;incstack = 0
 35956  00849E  C060  F06A         	movff	m_flash_read@addr,m_flash_read@t32
 35957  0084A2  C061  F06B         	movff	m_flash_read@addr+1,m_flash_read@t32+1
 35958  0084A6  C062  F06C         	movff	m_flash_read@addr+2,m_flash_read@t32+2
 35959  0084AA  C063  F06D         	movff	m_flash_read@addr+3,m_flash_read@t32+3
 35960                           
 35961                           ;m_flash.c: 51: TBLPTRL=(uint8_t)(t32 & 0xfful);
 35962  0084AE  C06A  FFF6         	movff	m_flash_read@t32,tblptrl	;volatile
 35963                           
 35964                           ;m_flash.c: 52: t32>>=8;
 35965  0084B2  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 35966  0084B6  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 35967  0084BA  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 35968  0084BE  0100               	movlb	0	; () banked
 35969  0084C0  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 35970                           
 35971                           ; BSR set to: 0
 35972                           ;m_flash.c: 53: TBLPTRH=(uint8_t)(t32 & 0xfful);
 35973  0084C2  C06A  FFF7         	movff	m_flash_read@t32,tblptrh	;volatile
 35974                           
 35975                           ;m_flash.c: 54: t32>>=8;
 35976  0084C6  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 35977  0084CA  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 35978  0084CE  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 35979  0084D2  0100               	movlb	0	; () banked
 35980  0084D4  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 35981                           
 35982                           ; BSR set to: 0
 35983                           ;m_flash.c: 55: TBLPTRU=(uint8_t)(t32 & 0xfful);
 35984  0084D6  C06A  FFF8         	movff	m_flash_read@t32,tblptru	;volatile
 35985                           
 35986                           ; BSR set to: 0
 35987                           ;m_flash.c: 57: for(i=0;i<len;i++){
 35988  0084DA  0E00               	movlw	0
 35989  0084DC  0100               	movlb	0	; () banked
 35990  0084DE  6F69               	movwf	(m_flash_read@i+1)& (0+255),b
 35991  0084E0  0E00               	movlw	0
 35992  0084E2  6F68               	movwf	m_flash_read@i& (0+255),b
 35993  0084E4  D010               	goto	l13929
 35994  0084E6                     l2193:
 35995                           
 35996                           ; BSR set to: 0
 35997  0084E6  0009               	tblrd		*+	;# 
 35998                           
 35999                           ;m_flash.c: 59: buf[i]=TABLAT;
 36000  0084E8  0100               	movlb	0	; () banked
 36001  0084EA  5168               	movf	m_flash_read@i& (0+255),w,b
 36002  0084EC  0100               	movlb	0	; () banked
 36003  0084EE  2564               	addwf	m_flash_read@buf& (0+255),w,b
 36004  0084F0  6ED9               	movwf	fsr2l,c
 36005  0084F2  0100               	movlb	0	; () banked
 36006  0084F4  5169               	movf	(m_flash_read@i+1)& (0+255),w,b
 36007  0084F6  0100               	movlb	0	; () banked
 36008  0084F8  2165               	addwfc	(m_flash_read@buf+1)& (0+255),w,b
 36009  0084FA  6EDA               	movwf	fsr2h,c
 36010  0084FC  CFF5 FFDF          	movff	tablat,indf2	;volatile
 36011                           
 36012                           ; BSR set to: 0
 36013  008500  0100               	movlb	0	; () banked
 36014  008502  4B68               	infsnz	m_flash_read@i& (0+255),f,b
 36015  008504  2B69               	incf	(m_flash_read@i+1)& (0+255),f,b
 36016  008506                     l13929:
 36017                           
 36018                           ; BSR set to: 0
 36019  008506  0100               	movlb	0	; () banked
 36020  008508  5166               	movf	m_flash_read@len& (0+255),w,b
 36021  00850A  0100               	movlb	0	; () banked
 36022  00850C  5D68               	subwf	m_flash_read@i& (0+255),w,b
 36023  00850E  0100               	movlb	0	; () banked
 36024  008510  5167               	movf	(m_flash_read@len+1)& (0+255),w,b
 36025  008512  0100               	movlb	0	; () banked
 36026  008514  5969               	subwfb	(m_flash_read@i+1)& (0+255),w,b
 36027  008516  B0D8               	btfsc	status,0,c
 36028  008518  0012               	return	
 36029  00851A  D7E5               	goto	l2193
 36030  00851C                     __end_of_m_flash_read:
 36031                           	opt stack 0
 36032                           tosu	equ	0xFFF
 36033                           tosh	equ	0xFFE
 36034                           tosl	equ	0xFFD
 36035                           pclath	equ	0xFFA
 36036                           tblptru	equ	0xFF8
 36037                           tblptrh	equ	0xFF7
 36038                           tblptrl	equ	0xFF6
 36039                           tablat	equ	0xFF5
 36040                           prodh	equ	0xFF4
 36041                           prodl	equ	0xFF3
 36042                           intcon	equ	0xFF2
 36043                           indf0	equ	0xFEF
 36044                           postinc0	equ	0xFEE
 36045                           fsr0h	equ	0xFEA
 36046                           fsr0l	equ	0xFE9
 36047                           wreg	equ	0xFE8
 36048                           indf1	equ	0xFE7
 36049                           postinc1	equ	0xFE6
 36050                           postdec1	equ	0xFE5
 36051                           plusw1	equ	0xFE3
 36052                           fsr1h	equ	0xFE2
 36053                           fsr1l	equ	0xFE1
 36054                           indf2	equ	0xFDF
 36055                           postinc2	equ	0xFDE
 36056                           postdec2	equ	0xFDD
 36057                           plusw2	equ	0xFDB
 36058                           fsr2h	equ	0xFDA
 36059                           fsr2l	equ	0xFD9
 36060                           status	equ	0xFD8
 36061                           
 36062 ;; *************** function _m_flash_erase *****************
 36063 ;; Defined at:
 36064 ;;		line 30 in file "src/driver/m_flash.c"
 36065 ;; Parameters:    Size  Location     Type
 36066 ;;  addr            4    0[BANK0 ] unsigned long 
 36067 ;; Auto vars:     Size  Location     Type
 36068 ;;  t32             4    4[BANK0 ] unsigned long 
 36069 ;; Return value:  Size  Location     Type
 36070 ;;                  1    wreg      void 
 36071 ;; Registers used:
 36072 ;;		wreg, status,2, status,0, cstack
 36073 ;; Tracked objects:
 36074 ;;		On entry : 0/0
 36075 ;;		On exit  : 0/0
 36076 ;;		Unchanged: 0/0
 36077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36079 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36081 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36082 ;;Total ram usage:        8 bytes
 36083 ;; Hardware stack levels used:    1
 36084 ;; Hardware stack levels required when called:    5
 36085 ;; This function calls:
 36086 ;;		_m_flash_unlock
 36087 ;; This function is called by:
 36088 ;;		_m_flash_write
 36089 ;; This function uses a non-reentrant model
 36090 ;;
 36091                           
 36092                           	psect	text187
 36093  00938A                     __ptext187:
 36094                           	opt stack 0
 36095  00938A                     _m_flash_erase:
 36096                           	opt stack 20
 36097                           
 36098                           ;m_flash.c: 32: uint32_t t32=addr;
 36099                           
 36100                           ; BSR set to: 0
 36101                           ;incstack = 0
 36102  00938A  C060  F064         	movff	m_flash_erase@addr,m_flash_erase@t32
 36103  00938E  C061  F065         	movff	m_flash_erase@addr+1,m_flash_erase@t32+1
 36104  009392  C062  F066         	movff	m_flash_erase@addr+2,m_flash_erase@t32+2
 36105  009396  C063  F067         	movff	m_flash_erase@addr+3,m_flash_erase@t32+3
 36106                           
 36107                           ;m_flash.c: 33: t32 &= (~0x3fful);
 36108  00939A  0E00               	movlw	0
 36109  00939C  0100               	movlb	0	; () banked
 36110  00939E  1764               	andwf	m_flash_erase@t32& (0+255),f,b
 36111  0093A0  0EFC               	movlw	252
 36112  0093A2  1765               	andwf	(m_flash_erase@t32+1)& (0+255),f,b
 36113  0093A4  0EFF               	movlw	255
 36114  0093A6  1766               	andwf	(m_flash_erase@t32+2)& (0+255),f,b
 36115  0093A8  0EFF               	movlw	255
 36116  0093AA  1767               	andwf	(m_flash_erase@t32+3)& (0+255),f,b
 36117                           
 36118                           ; BSR set to: 0
 36119                           ;m_flash.c: 36: TBLPTRL=(uint8_t)(t32 & 0xfful);
 36120  0093AC  C064  FFF6         	movff	m_flash_erase@t32,tblptrl	;volatile
 36121                           
 36122                           ; BSR set to: 0
 36123                           ;m_flash.c: 37: t32>>=8;
 36124  0093B0  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 36125  0093B4  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 36126  0093B8  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 36127  0093BC  0100               	movlb	0	; () banked
 36128  0093BE  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 36129                           
 36130                           ; BSR set to: 0
 36131                           ;m_flash.c: 38: TBLPTRH=(uint8_t)(t32 & 0xfful);
 36132  0093C0  C064  FFF7         	movff	m_flash_erase@t32,tblptrh	;volatile
 36133                           
 36134                           ; BSR set to: 0
 36135                           ;m_flash.c: 39: t32>>=8;
 36136  0093C4  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 36137  0093C8  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 36138  0093CC  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 36139  0093D0  0100               	movlb	0	; () banked
 36140  0093D2  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 36141                           
 36142                           ; BSR set to: 0
 36143                           ;m_flash.c: 40: TBLPTRU=(uint8_t)(t32 & 0xfful);
 36144  0093D4  C064  FFF8         	movff	m_flash_erase@t32,tblptru	;volatile
 36145                           
 36146                           ; BSR set to: 0
 36147                           ;m_flash.c: 41: EECON1bits.WREN=1;
 36148  0093D8  84A6               	bsf	4006,2,c	;volatile
 36149                           
 36150                           ; BSR set to: 0
 36151                           ;m_flash.c: 42: EECON1bits.FREE=1;
 36152  0093DA  88A6               	bsf	4006,4,c	;volatile
 36153                           
 36154                           ; BSR set to: 0
 36155                           ;m_flash.c: 43: m_flash_unlock();
 36156  0093DC  EC2A  F051         	call	_m_flash_unlock	;wreg free
 36157                           
 36158                           ;m_flash.c: 44: EECON1bits.WREN=0;
 36159  0093E0  94A6               	bcf	4006,2,c	;volatile
 36160  0093E2  0012               	return		;funcret
 36161  0093E4                     __end_of_m_flash_erase:
 36162                           	opt stack 0
 36163                           tosu	equ	0xFFF
 36164                           tosh	equ	0xFFE
 36165                           tosl	equ	0xFFD
 36166                           pclath	equ	0xFFA
 36167                           tblptru	equ	0xFF8
 36168                           tblptrh	equ	0xFF7
 36169                           tblptrl	equ	0xFF6
 36170                           tablat	equ	0xFF5
 36171                           prodh	equ	0xFF4
 36172                           prodl	equ	0xFF3
 36173                           intcon	equ	0xFF2
 36174                           indf0	equ	0xFEF
 36175                           postinc0	equ	0xFEE
 36176                           fsr0h	equ	0xFEA
 36177                           fsr0l	equ	0xFE9
 36178                           wreg	equ	0xFE8
 36179                           indf1	equ	0xFE7
 36180                           postinc1	equ	0xFE6
 36181                           postdec1	equ	0xFE5
 36182                           plusw1	equ	0xFE3
 36183                           fsr1h	equ	0xFE2
 36184                           fsr1l	equ	0xFE1
 36185                           indf2	equ	0xFDF
 36186                           postinc2	equ	0xFDE
 36187                           postdec2	equ	0xFDD
 36188                           plusw2	equ	0xFDB
 36189                           fsr2h	equ	0xFDA
 36190                           fsr2l	equ	0xFD9
 36191                           status	equ	0xFD8
 36192                           
 36193 ;; *************** function _m_flash_unlock *****************
 36194 ;; Defined at:
 36195 ;;		line 9 in file "src/driver/m_flash.c"
 36196 ;; Parameters:    Size  Location     Type
 36197 ;;		None
 36198 ;; Auto vars:     Size  Location     Type
 36199 ;;  oldGIE          1   31[COMRAM] volatile unsigned char 
 36200 ;; Return value:  Size  Location     Type
 36201 ;;                  1    wreg      void 
 36202 ;; Registers used:
 36203 ;;		None
 36204 ;; Tracked objects:
 36205 ;;		On entry : 0/0
 36206 ;;		On exit  : 0/0
 36207 ;;		Unchanged: 0/0
 36208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36213 ;;Total ram usage:        1 bytes
 36214 ;; Hardware stack levels used:    1
 36215 ;; Hardware stack levels required when called:    4
 36216 ;; This function calls:
 36217 ;;		Nothing
 36218 ;; This function is called by:
 36219 ;;		_m_flash_erase
 36220 ;;		_m_flash_write
 36221 ;; This function uses a non-reentrant model
 36222 ;;
 36223                           
 36224                           	psect	text188
 36225  00A254                     __ptext188:
 36226                           	opt stack 0
 36227  00A254                     _m_flash_unlock:
 36228                           	opt stack 21
 36229                           
 36230                           ;m_flash.c: 11: volatile unsigned char oldGIE;
 36231                           ;m_flash.c: 14: oldGIE=INTCON;
 36232                           
 36233                           ;incstack = 0
 36234  00A254  CFF2 F020          	movff	intcon,m_flash_unlock@oldGIE	;volatile
 36235                           
 36236                           ;m_flash.c: 15: INTCONbits.GIE = 0;
 36237  00A258  9EF2               	bcf	intcon,7,c	;volatile
 36238                           
 36239                           ;m_flash.c: 16: __nop();
 36240  00A25A  F000               	nop	
 36241  00A25C  0E55               	movlw	85	;# 
 36242  00A25E  6EA7               	movwf	4007,c	;# 
 36243  00A260  0EAA               	movlw	170	;# 
 36244  00A262  6EA7               	movwf	4007,c	;# 
 36245                           
 36246                           ;m_flash.c: 22: EECON1bits.WR=1;
 36247  00A264  82A6               	bsf	4006,1,c	;volatile
 36248                           
 36249                           ;m_flash.c: 23: __nop();
 36250  00A266  F000               	nop	
 36251                           
 36252                           ;m_flash.c: 27: INTCON=oldGIE;
 36253  00A268  C020  FFF2         	movff	m_flash_unlock@oldGIE,intcon	;volatile
 36254                           
 36255                           ;m_flash.c: 28: return;
 36256  00A26C  0012               	return		;funcret
 36257  00A26E                     __end_of_m_flash_unlock:
 36258                           	opt stack 0
 36259                           tosu	equ	0xFFF
 36260                           tosh	equ	0xFFE
 36261                           tosl	equ	0xFFD
 36262                           pclath	equ	0xFFA
 36263                           tblptru	equ	0xFF8
 36264                           tblptrh	equ	0xFF7
 36265                           tblptrl	equ	0xFF6
 36266                           tablat	equ	0xFF5
 36267                           prodh	equ	0xFF4
 36268                           prodl	equ	0xFF3
 36269                           intcon	equ	0xFF2
 36270                           indf0	equ	0xFEF
 36271                           postinc0	equ	0xFEE
 36272                           fsr0h	equ	0xFEA
 36273                           fsr0l	equ	0xFE9
 36274                           wreg	equ	0xFE8
 36275                           indf1	equ	0xFE7
 36276                           postinc1	equ	0xFE6
 36277                           postdec1	equ	0xFE5
 36278                           plusw1	equ	0xFE3
 36279                           fsr1h	equ	0xFE2
 36280                           fsr1l	equ	0xFE1
 36281                           indf2	equ	0xFDF
 36282                           postinc2	equ	0xFDE
 36283                           postdec2	equ	0xFDD
 36284                           plusw2	equ	0xFDB
 36285                           fsr2h	equ	0xFDA
 36286                           fsr2l	equ	0xFD9
 36287                           status	equ	0xFD8
 36288                           
 36289 ;; *************** function _data_sys_cal_v2 *****************
 36290 ;; Defined at:
 36291 ;;		line 153 in file "src/api/data.c"
 36292 ;; Parameters:    Size  Location     Type
 36293 ;;  stp             2   98[BANK0 ] PTR struct .
 36294 ;;		 -> stSysData(240), 
 36295 ;; Auto vars:     Size  Location     Type
 36296 ;;  d               4  114[BANK0 ] float 
 36297 ;;  f               4  110[BANK0 ] float 
 36298 ;; Return value:  Size  Location     Type
 36299 ;;                  4   98[BANK0 ] unsigned long 
 36300 ;; Registers used:
 36301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36302 ;; Tracked objects:
 36303 ;;		On entry : 0/0
 36304 ;;		On exit  : 0/0
 36305 ;;		Unchanged: 0/0
 36306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36307 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36308 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36310 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36311 ;;Total ram usage:       20 bytes
 36312 ;; Hardware stack levels used:    1
 36313 ;; Hardware stack levels required when called:    5
 36314 ;; This function calls:
 36315 ;;		___fldiv
 36316 ;;		___flmul
 36317 ;;		___fltol
 36318 ;;		___xxtofl
 36319 ;; This function is called by:
 36320 ;;		_data_sys_init
 36321 ;;		___sys_data_save_write_flash
 36322 ;; This function uses a non-reentrant model
 36323 ;;
 36324                           
 36325                           	psect	text189
 36326  004E64                     __ptext189:
 36327                           	opt stack 0
 36328  004E64                     _data_sys_cal_v2:
 36329                           	opt stack 21
 36330                           
 36331                           ;data.c: 155: float d,f;
 36332                           ;data.c: 156: d=(float)(stp->d);
 36333                           
 36334                           ;incstack = 0
 36335  004E64  0100               	movlb	0	; () banked
 36336  004E66  EE20 F00C          	lfsr	2,12
 36337  004E6A  51C2               	movf	data_sys_cal_v2@stp& (0+255),w,b
 36338  004E6C  26D9               	addwf	fsr2l,f,c
 36339  004E6E  51C3               	movf	(data_sys_cal_v2@stp+1)& (0+255),w,b
 36340  004E70  22DA               	addwfc	fsr2h,f,c
 36341  004E72  CFDE F060          	movff	postinc2,___xxtofl@val
 36342  004E76  CFDE F061          	movff	postinc2,___xxtofl@val+1
 36343  004E7A  CFDE F062          	movff	postinc2,___xxtofl@val+2
 36344  004E7E  CFDE F063          	movff	postinc2,___xxtofl@val+3
 36345  004E82  0E00               	movlw	0
 36346  004E84  EC11  F020         	call	___xxtofl
 36347  004E88  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v2@d
 36348  004E8C  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v2@d+1
 36349  004E90  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v2@d+2
 36350  004E94  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v2@d+3
 36351                           
 36352                           ;data.c: 157: d=d/1000;
 36353  004E98  C0D2  F087         	movff	data_sys_cal_v2@d,___fldiv@b
 36354  004E9C  C0D3  F088         	movff	data_sys_cal_v2@d+1,___fldiv@b+1
 36355  004EA0  C0D4  F089         	movff	data_sys_cal_v2@d+2,___fldiv@b+2
 36356  004EA4  C0D5  F08A         	movff	data_sys_cal_v2@d+3,___fldiv@b+3
 36357  004EA8  0E00               	movlw	0
 36358  004EAA  0100               	movlb	0	; () banked
 36359  004EAC  6F8B               	movwf	___fldiv@a& (0+255),b
 36360  004EAE  0E00               	movlw	0
 36361  004EB0  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36362  004EB2  0E7A               	movlw	122
 36363  004EB4  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36364  004EB6  0E44               	movlw	68
 36365  004EB8  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36366  004EBA  ECA9  F011         	call	___fldiv	;wreg free
 36367  004EBE  C087  F0D2         	movff	?___fldiv,data_sys_cal_v2@d
 36368  004EC2  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v2@d+1
 36369  004EC6  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v2@d+2
 36370  004ECA  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v2@d+3
 36371                           
 36372                           ;data.c: 158: f=0.2618f*d*d*d;
 36373  004ECE  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 36374  004ED2  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 36375  004ED6  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 36376  004EDA  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 36377  004EDE  C0D2  F06E         	movff	data_sys_cal_v2@d,___flmul@b
 36378  004EE2  C0D3  F06F         	movff	data_sys_cal_v2@d+1,___flmul@b+1
 36379  004EE6  C0D4  F070         	movff	data_sys_cal_v2@d+2,___flmul@b+2
 36380  004EEA  C0D5  F071         	movff	data_sys_cal_v2@d+3,___flmul@b+3
 36381  004EEE  EC08  F00B         	call	___flmul	;wreg free
 36382  004EF2  C06E  F0C6         	movff	?___flmul,_data_sys_cal_v2$5881
 36383  004EF6  C06F  F0C7         	movff	?___flmul+1,_data_sys_cal_v2$5881+1
 36384  004EFA  C070  F0C8         	movff	?___flmul+2,_data_sys_cal_v2$5881+2
 36385  004EFE  C071  F0C9         	movff	?___flmul+3,_data_sys_cal_v2$5881+3
 36386                           
 36387                           ;data.c: 158: f=0.2618f*d*d*d;
 36388  004F02  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 36389  004F06  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 36390  004F0A  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 36391  004F0E  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 36392  004F12  C0C6  F06E         	movff	_data_sys_cal_v2$5881,___flmul@b
 36393  004F16  C0C7  F06F         	movff	_data_sys_cal_v2$5881+1,___flmul@b+1
 36394  004F1A  C0C8  F070         	movff	_data_sys_cal_v2$5881+2,___flmul@b+2
 36395  004F1E  C0C9  F071         	movff	_data_sys_cal_v2$5881+3,___flmul@b+3
 36396  004F22  EC08  F00B         	call	___flmul	;wreg free
 36397  004F26  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v2$5882
 36398  004F2A  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v2$5882+1
 36399  004F2E  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v2$5882+2
 36400  004F32  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v2$5882+3
 36401                           
 36402                           ;data.c: 158: f=0.2618f*d*d*d;
 36403  004F36  C0CA  F06E         	movff	_data_sys_cal_v2$5882,___flmul@b
 36404  004F3A  C0CB  F06F         	movff	_data_sys_cal_v2$5882+1,___flmul@b+1
 36405  004F3E  C0CC  F070         	movff	_data_sys_cal_v2$5882+2,___flmul@b+2
 36406  004F42  C0CD  F071         	movff	_data_sys_cal_v2$5882+3,___flmul@b+3
 36407  004F46  0EA6               	movlw	166
 36408  004F48  0100               	movlb	0	; () banked
 36409  004F4A  6F72               	movwf	___flmul@a& (0+255),b
 36410  004F4C  0E0A               	movlw	10
 36411  004F4E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36412  004F50  0E86               	movlw	134
 36413  004F52  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36414  004F54  0E3E               	movlw	62
 36415  004F56  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36416  004F58  EC08  F00B         	call	___flmul	;wreg free
 36417  004F5C  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 36418  004F60  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 36419  004F64  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 36420  004F68  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 36421                           
 36422                           ;data.c: 159: f*=1000;
 36423  004F6C  C0CE  F06E         	movff	data_sys_cal_v2@f,___flmul@b
 36424  004F70  C0CF  F06F         	movff	data_sys_cal_v2@f+1,___flmul@b+1
 36425  004F74  C0D0  F070         	movff	data_sys_cal_v2@f+2,___flmul@b+2
 36426  004F78  C0D1  F071         	movff	data_sys_cal_v2@f+3,___flmul@b+3
 36427  004F7C  0E00               	movlw	0
 36428  004F7E  0100               	movlb	0	; () banked
 36429  004F80  6F72               	movwf	___flmul@a& (0+255),b
 36430  004F82  0E00               	movlw	0
 36431  004F84  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36432  004F86  0E7A               	movlw	122
 36433  004F88  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36434  004F8A  0E44               	movlw	68
 36435  004F8C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36436  004F8E  EC08  F00B         	call	___flmul	;wreg free
 36437  004F92  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 36438  004F96  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 36439  004F9A  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 36440  004F9E  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 36441                           
 36442                           ;data.c: 160: return (uint32_t)f;
 36443  004FA2  C0CE  F0B8         	movff	data_sys_cal_v2@f,___fltol@f1
 36444  004FA6  C0CF  F0B9         	movff	data_sys_cal_v2@f+1,___fltol@f1+1
 36445  004FAA  C0D0  F0BA         	movff	data_sys_cal_v2@f+2,___fltol@f1+2
 36446  004FAE  C0D1  F0BB         	movff	data_sys_cal_v2@f+3,___fltol@f1+3
 36447  004FB2  EC7A  F02E         	call	___fltol	;wreg free
 36448  004FB6  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v2
 36449  004FBA  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v2+1
 36450  004FBE  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v2+2
 36451  004FC2  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v2+3
 36452  004FC6  0012               	return	
 36453  004FC8                     __end_of_data_sys_cal_v2:
 36454                           	opt stack 0
 36455                           tosu	equ	0xFFF
 36456                           tosh	equ	0xFFE
 36457                           tosl	equ	0xFFD
 36458                           pclath	equ	0xFFA
 36459                           tblptru	equ	0xFF8
 36460                           tblptrh	equ	0xFF7
 36461                           tblptrl	equ	0xFF6
 36462                           tablat	equ	0xFF5
 36463                           prodh	equ	0xFF4
 36464                           prodl	equ	0xFF3
 36465                           intcon	equ	0xFF2
 36466                           indf0	equ	0xFEF
 36467                           postinc0	equ	0xFEE
 36468                           fsr0h	equ	0xFEA
 36469                           fsr0l	equ	0xFE9
 36470                           wreg	equ	0xFE8
 36471                           indf1	equ	0xFE7
 36472                           postinc1	equ	0xFE6
 36473                           postdec1	equ	0xFE5
 36474                           plusw1	equ	0xFE3
 36475                           fsr1h	equ	0xFE2
 36476                           fsr1l	equ	0xFE1
 36477                           indf2	equ	0xFDF
 36478                           postinc2	equ	0xFDE
 36479                           postdec2	equ	0xFDD
 36480                           plusw2	equ	0xFDB
 36481                           fsr2h	equ	0xFDA
 36482                           fsr2l	equ	0xFD9
 36483                           status	equ	0xFD8
 36484                           
 36485 ;; *************** function _data_sys_cal_v1 *****************
 36486 ;; Defined at:
 36487 ;;		line 141 in file "src/api/data.c"
 36488 ;; Parameters:    Size  Location     Type
 36489 ;;  stp             2   98[BANK0 ] PTR struct .
 36490 ;;		 -> stSysData(240), 
 36491 ;; Auto vars:     Size  Location     Type
 36492 ;;  r               4  122[BANK0 ] float 
 36493 ;;  f               4  118[BANK0 ] float 
 36494 ;;  h               4  114[BANK0 ] float 
 36495 ;; Return value:  Size  Location     Type
 36496 ;;                  4   98[BANK0 ] unsigned long 
 36497 ;; Registers used:
 36498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36499 ;; Tracked objects:
 36500 ;;		On entry : 0/0
 36501 ;;		On exit  : 0/0
 36502 ;;		Unchanged: 0/0
 36503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36504 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36505 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36507 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36508 ;;Total ram usage:       28 bytes
 36509 ;; Hardware stack levels used:    1
 36510 ;; Hardware stack levels required when called:    5
 36511 ;; This function calls:
 36512 ;;		___fldiv
 36513 ;;		___flmul
 36514 ;;		___fltol
 36515 ;;		___xxtofl
 36516 ;; This function is called by:
 36517 ;;		_data_sys_init
 36518 ;;		___sys_data_save_write_flash
 36519 ;; This function uses a non-reentrant model
 36520 ;;
 36521                           
 36522                           	psect	text190
 36523  003A6E                     __ptext190:
 36524                           	opt stack 0
 36525  003A6E                     _data_sys_cal_v1:
 36526                           	opt stack 21
 36527                           
 36528                           ;data.c: 143: float r,h,f;
 36529                           ;data.c: 144: r=(float)(stp->d);
 36530                           
 36531                           ;incstack = 0
 36532  003A6E  0100               	movlb	0	; () banked
 36533  003A70  EE20 F00C          	lfsr	2,12
 36534  003A74  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 36535  003A76  26D9               	addwf	fsr2l,f,c
 36536  003A78  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 36537  003A7A  22DA               	addwfc	fsr2h,f,c
 36538  003A7C  CFDE F060          	movff	postinc2,___xxtofl@val
 36539  003A80  CFDE F061          	movff	postinc2,___xxtofl@val+1
 36540  003A84  CFDE F062          	movff	postinc2,___xxtofl@val+2
 36541  003A88  CFDE F063          	movff	postinc2,___xxtofl@val+3
 36542  003A8C  0E00               	movlw	0
 36543  003A8E  EC11  F020         	call	___xxtofl
 36544  003A92  C060  F0DA         	movff	?___xxtofl,data_sys_cal_v1@r
 36545  003A96  C061  F0DB         	movff	?___xxtofl+1,data_sys_cal_v1@r+1
 36546  003A9A  C062  F0DC         	movff	?___xxtofl+2,data_sys_cal_v1@r+2
 36547  003A9E  C063  F0DD         	movff	?___xxtofl+3,data_sys_cal_v1@r+3
 36548                           
 36549                           ;data.c: 145: h=(float)(stp->h);
 36550  003AA2  0100               	movlb	0	; () banked
 36551  003AA4  EE20 F008          	lfsr	2,8
 36552  003AA8  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 36553  003AAA  26D9               	addwf	fsr2l,f,c
 36554  003AAC  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 36555  003AAE  22DA               	addwfc	fsr2h,f,c
 36556  003AB0  CFDE F060          	movff	postinc2,___xxtofl@val
 36557  003AB4  CFDE F061          	movff	postinc2,___xxtofl@val+1
 36558  003AB8  CFDE F062          	movff	postinc2,___xxtofl@val+2
 36559  003ABC  CFDE F063          	movff	postinc2,___xxtofl@val+3
 36560  003AC0  0E01               	movlw	1
 36561  003AC2  EC11  F020         	call	___xxtofl
 36562  003AC6  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v1@h
 36563  003ACA  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v1@h+1
 36564  003ACE  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v1@h+2
 36565  003AD2  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v1@h+3
 36566                           
 36567                           ;data.c: 146: r=r/1000/2;
 36568  003AD6  0E00               	movlw	0
 36569  003AD8  0100               	movlb	0	; () banked
 36570  003ADA  6F8B               	movwf	___fldiv@a& (0+255),b
 36571  003ADC  0E00               	movlw	0
 36572  003ADE  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36573  003AE0  0E7A               	movlw	122
 36574  003AE2  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36575  003AE4  0E44               	movlw	68
 36576  003AE6  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36577  003AE8  C0DA  F087         	movff	data_sys_cal_v1@r,___fldiv@b
 36578  003AEC  C0DB  F088         	movff	data_sys_cal_v1@r+1,___fldiv@b+1
 36579  003AF0  C0DC  F089         	movff	data_sys_cal_v1@r+2,___fldiv@b+2
 36580  003AF4  C0DD  F08A         	movff	data_sys_cal_v1@r+3,___fldiv@b+3
 36581  003AF8  ECA9  F011         	call	___fldiv	;wreg free
 36582  003AFC  C087  F0C6         	movff	?___fldiv,_data_sys_cal_v1$5878
 36583  003B00  C088  F0C7         	movff	?___fldiv+1,_data_sys_cal_v1$5878+1
 36584  003B04  C089  F0C8         	movff	?___fldiv+2,_data_sys_cal_v1$5878+2
 36585  003B08  C08A  F0C9         	movff	?___fldiv+3,_data_sys_cal_v1$5878+3
 36586                           
 36587                           ;data.c: 146: r=r/1000/2;
 36588  003B0C  C0C6  F087         	movff	_data_sys_cal_v1$5878,___fldiv@b
 36589  003B10  C0C7  F088         	movff	_data_sys_cal_v1$5878+1,___fldiv@b+1
 36590  003B14  C0C8  F089         	movff	_data_sys_cal_v1$5878+2,___fldiv@b+2
 36591  003B18  C0C9  F08A         	movff	_data_sys_cal_v1$5878+3,___fldiv@b+3
 36592  003B1C  0E00               	movlw	0
 36593  003B1E  0100               	movlb	0	; () banked
 36594  003B20  6F8B               	movwf	___fldiv@a& (0+255),b
 36595  003B22  0E00               	movlw	0
 36596  003B24  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36597  003B26  0E00               	movlw	0
 36598  003B28  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36599  003B2A  0E40               	movlw	64
 36600  003B2C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36601  003B2E  ECA9  F011         	call	___fldiv	;wreg free
 36602  003B32  C087  F0DA         	movff	?___fldiv,data_sys_cal_v1@r
 36603  003B36  C088  F0DB         	movff	?___fldiv+1,data_sys_cal_v1@r+1
 36604  003B3A  C089  F0DC         	movff	?___fldiv+2,data_sys_cal_v1@r+2
 36605  003B3E  C08A  F0DD         	movff	?___fldiv+3,data_sys_cal_v1@r+3
 36606                           
 36607                           ;data.c: 147: h=h/1000;
 36608  003B42  C0D2  F087         	movff	data_sys_cal_v1@h,___fldiv@b
 36609  003B46  C0D3  F088         	movff	data_sys_cal_v1@h+1,___fldiv@b+1
 36610  003B4A  C0D4  F089         	movff	data_sys_cal_v1@h+2,___fldiv@b+2
 36611  003B4E  C0D5  F08A         	movff	data_sys_cal_v1@h+3,___fldiv@b+3
 36612  003B52  0E00               	movlw	0
 36613  003B54  0100               	movlb	0	; () banked
 36614  003B56  6F8B               	movwf	___fldiv@a& (0+255),b
 36615  003B58  0E00               	movlw	0
 36616  003B5A  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36617  003B5C  0E7A               	movlw	122
 36618  003B5E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36619  003B60  0E44               	movlw	68
 36620  003B62  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36621  003B64  ECA9  F011         	call	___fldiv	;wreg free
 36622  003B68  C087  F0D2         	movff	?___fldiv,data_sys_cal_v1@h
 36623  003B6C  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v1@h+1
 36624  003B70  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v1@h+2
 36625  003B74  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v1@h+3
 36626                           
 36627                           ;data.c: 148: f=h*(r*r)*3.1416f;
 36628  003B78  C0DA  F072         	movff	data_sys_cal_v1@r,___flmul@a
 36629  003B7C  C0DB  F073         	movff	data_sys_cal_v1@r+1,___flmul@a+1
 36630  003B80  C0DC  F074         	movff	data_sys_cal_v1@r+2,___flmul@a+2
 36631  003B84  C0DD  F075         	movff	data_sys_cal_v1@r+3,___flmul@a+3
 36632  003B88  C0DA  F06E         	movff	data_sys_cal_v1@r,___flmul@b
 36633  003B8C  C0DB  F06F         	movff	data_sys_cal_v1@r+1,___flmul@b+1
 36634  003B90  C0DC  F070         	movff	data_sys_cal_v1@r+2,___flmul@b+2
 36635  003B94  C0DD  F071         	movff	data_sys_cal_v1@r+3,___flmul@b+3
 36636  003B98  EC08  F00B         	call	___flmul	;wreg free
 36637  003B9C  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v1$5879
 36638  003BA0  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v1$5879+1
 36639  003BA4  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v1$5879+2
 36640  003BA8  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v1$5879+3
 36641                           
 36642                           ;data.c: 148: f=h*(r*r)*3.1416f;
 36643  003BAC  C0D2  F072         	movff	data_sys_cal_v1@h,___flmul@a
 36644  003BB0  C0D3  F073         	movff	data_sys_cal_v1@h+1,___flmul@a+1
 36645  003BB4  C0D4  F074         	movff	data_sys_cal_v1@h+2,___flmul@a+2
 36646  003BB8  C0D5  F075         	movff	data_sys_cal_v1@h+3,___flmul@a+3
 36647  003BBC  C0CA  F06E         	movff	_data_sys_cal_v1$5879,___flmul@b
 36648  003BC0  C0CB  F06F         	movff	_data_sys_cal_v1$5879+1,___flmul@b+1
 36649  003BC4  C0CC  F070         	movff	_data_sys_cal_v1$5879+2,___flmul@b+2
 36650  003BC8  C0CD  F071         	movff	_data_sys_cal_v1$5879+3,___flmul@b+3
 36651  003BCC  EC08  F00B         	call	___flmul	;wreg free
 36652  003BD0  C06E  F0CE         	movff	?___flmul,_data_sys_cal_v1$5880
 36653  003BD4  C06F  F0CF         	movff	?___flmul+1,_data_sys_cal_v1$5880+1
 36654  003BD8  C070  F0D0         	movff	?___flmul+2,_data_sys_cal_v1$5880+2
 36655  003BDC  C071  F0D1         	movff	?___flmul+3,_data_sys_cal_v1$5880+3
 36656                           
 36657                           ;data.c: 148: f=h*(r*r)*3.1416f;
 36658  003BE0  C0CE  F06E         	movff	_data_sys_cal_v1$5880,___flmul@b
 36659  003BE4  C0CF  F06F         	movff	_data_sys_cal_v1$5880+1,___flmul@b+1
 36660  003BE8  C0D0  F070         	movff	_data_sys_cal_v1$5880+2,___flmul@b+2
 36661  003BEC  C0D1  F071         	movff	_data_sys_cal_v1$5880+3,___flmul@b+3
 36662  003BF0  0EF9               	movlw	249
 36663  003BF2  0100               	movlb	0	; () banked
 36664  003BF4  6F72               	movwf	___flmul@a& (0+255),b
 36665  003BF6  0E0F               	movlw	15
 36666  003BF8  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36667  003BFA  0E49               	movlw	73
 36668  003BFC  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36669  003BFE  0E40               	movlw	64
 36670  003C00  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36671  003C02  EC08  F00B         	call	___flmul	;wreg free
 36672  003C06  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 36673  003C0A  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 36674  003C0E  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 36675  003C12  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 36676                           
 36677                           ;data.c: 149: f*=1000;
 36678  003C16  C0D6  F06E         	movff	data_sys_cal_v1@f,___flmul@b
 36679  003C1A  C0D7  F06F         	movff	data_sys_cal_v1@f+1,___flmul@b+1
 36680  003C1E  C0D8  F070         	movff	data_sys_cal_v1@f+2,___flmul@b+2
 36681  003C22  C0D9  F071         	movff	data_sys_cal_v1@f+3,___flmul@b+3
 36682  003C26  0E00               	movlw	0
 36683  003C28  0100               	movlb	0	; () banked
 36684  003C2A  6F72               	movwf	___flmul@a& (0+255),b
 36685  003C2C  0E00               	movlw	0
 36686  003C2E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36687  003C30  0E7A               	movlw	122
 36688  003C32  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36689  003C34  0E44               	movlw	68
 36690  003C36  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36691  003C38  EC08  F00B         	call	___flmul	;wreg free
 36692  003C3C  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 36693  003C40  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 36694  003C44  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 36695  003C48  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 36696                           
 36697                           ;data.c: 150: return (uint32_t)f;
 36698  003C4C  C0D6  F0B8         	movff	data_sys_cal_v1@f,___fltol@f1
 36699  003C50  C0D7  F0B9         	movff	data_sys_cal_v1@f+1,___fltol@f1+1
 36700  003C54  C0D8  F0BA         	movff	data_sys_cal_v1@f+2,___fltol@f1+2
 36701  003C58  C0D9  F0BB         	movff	data_sys_cal_v1@f+3,___fltol@f1+3
 36702  003C5C  EC7A  F02E         	call	___fltol	;wreg free
 36703  003C60  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v1
 36704  003C64  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v1+1
 36705  003C68  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v1+2
 36706  003C6C  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v1+3
 36707  003C70  0012               	return	
 36708  003C72                     __end_of_data_sys_cal_v1:
 36709                           	opt stack 0
 36710                           tosu	equ	0xFFF
 36711                           tosh	equ	0xFFE
 36712                           tosl	equ	0xFFD
 36713                           pclath	equ	0xFFA
 36714                           tblptru	equ	0xFF8
 36715                           tblptrh	equ	0xFF7
 36716                           tblptrl	equ	0xFF6
 36717                           tablat	equ	0xFF5
 36718                           prodh	equ	0xFF4
 36719                           prodl	equ	0xFF3
 36720                           intcon	equ	0xFF2
 36721                           indf0	equ	0xFEF
 36722                           postinc0	equ	0xFEE
 36723                           fsr0h	equ	0xFEA
 36724                           fsr0l	equ	0xFE9
 36725                           wreg	equ	0xFE8
 36726                           indf1	equ	0xFE7
 36727                           postinc1	equ	0xFE6
 36728                           postdec1	equ	0xFE5
 36729                           plusw1	equ	0xFE3
 36730                           fsr1h	equ	0xFE2
 36731                           fsr1l	equ	0xFE1
 36732                           indf2	equ	0xFDF
 36733                           postinc2	equ	0xFDE
 36734                           postdec2	equ	0xFDD
 36735                           plusw2	equ	0xFDB
 36736                           fsr2h	equ	0xFDA
 36737                           fsr2l	equ	0xFD9
 36738                           status	equ	0xFD8
 36739                           
 36740 ;; *************** function ___xxtofl *****************
 36741 ;; Defined at:
 36742 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\xxtofl.c"
 36743 ;; Parameters:    Size  Location     Type
 36744 ;;  sign            1    wreg     unsigned char 
 36745 ;;  val             4    0[BANK0 ] long 
 36746 ;; Auto vars:     Size  Location     Type
 36747 ;;  sign            1    8[BANK0 ] unsigned char 
 36748 ;;  arg             4   10[BANK0 ] unsigned long 
 36749 ;;  exp             1    9[BANK0 ] unsigned char 
 36750 ;; Return value:  Size  Location     Type
 36751 ;;                  4    0[BANK0 ] unsigned char 
 36752 ;; Registers used:
 36753 ;;		wreg, status,2, status,0
 36754 ;; Tracked objects:
 36755 ;;		On entry : 0/0
 36756 ;;		On exit  : 0/0
 36757 ;;		Unchanged: 0/0
 36758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36760 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36761 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36762 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36763 ;;Total ram usage:       14 bytes
 36764 ;; Hardware stack levels used:    1
 36765 ;; Hardware stack levels required when called:    4
 36766 ;; This function calls:
 36767 ;;		Nothing
 36768 ;; This function is called by:
 36769 ;;		_data_sys_cal_v1
 36770 ;;		_data_sys_cal_v2
 36771 ;;		_m_interp1_float_fast
 36772 ;;		_cal_diff_hight_to_vol_h
 36773 ;;		_cal_diff_hight_level
 36774 ;;		_cal_diff_hight_to_vol_v
 36775 ;;		_cal_diff_p_to_h
 36776 ;; This function uses a non-reentrant model
 36777 ;;
 36778                           
 36779                           	psect	text191
 36780  004022                     __ptext191:
 36781                           	opt stack 0
 36782  004022                     ___xxtofl:
 36783                           	opt stack 21
 36784                           
 36785                           ;incstack = 0
 36786                           ;___xxtofl@sign stored from wreg
 36787  004022  0100               	movlb	0	; () banked
 36788  004024  6F68               	movwf	___xxtofl@sign& (0+255),b
 36789  004026  0100               	movlb	0	; () banked
 36790  004028  5168               	movf	___xxtofl@sign& (0+255),w,b
 36791  00402A  0100               	movlb	0	; () banked
 36792  00402C  B4D8               	btfsc	status,2,c
 36793  00402E  D01E               	goto	l2935
 36794                           
 36795                           ; BSR set to: 0
 36796  004030  0100               	movlb	0	; () banked
 36797  004032  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 36798  004034  D01B               	goto	l2935
 36799                           
 36800                           ; BSR set to: 0
 36801  004036  C060  F064         	movff	___xxtofl@val,??___xxtofl
 36802  00403A  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 36803  00403E  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 36804  004042  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 36805  004046  0100               	movlb	0	; () banked
 36806  004048  1F64               	comf	??___xxtofl& (0+255),f,b
 36807  00404A  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 36808  00404C  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 36809  00404E  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 36810  004050  2B64               	incf	??___xxtofl& (0+255),f,b
 36811  004052  0E00               	movlw	0
 36812  004054  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 36813  004056  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 36814  004058  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 36815  00405A  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 36816  00405E  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 36817  004062  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 36818  004066  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 36819  00406A  D008               	goto	l13879
 36820  00406C                     l2935:
 36821                           
 36822                           ; BSR set to: 0
 36823  00406C  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 36824  004070  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 36825  004074  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 36826  004078  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 36827  00407C                     l13879:
 36828                           
 36829                           ; BSR set to: 0
 36830  00407C  0100               	movlb	0	; () banked
 36831  00407E  5160               	movf	___xxtofl@val& (0+255),w,b
 36832  004080  0100               	movlb	0	; () banked
 36833  004082  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 36834  004084  0100               	movlb	0	; () banked
 36835  004086  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 36836  004088  0100               	movlb	0	; () banked
 36837  00408A  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 36838  00408C  A4D8               	btfss	status,2,c
 36839  00408E  D00A               	goto	l13885
 36840                           
 36841                           ; BSR set to: 0
 36842  004090  0E00               	movlw	0
 36843  004092  0100               	movlb	0	; () banked
 36844  004094  6F60               	movwf	?___xxtofl& (0+255),b
 36845  004096  0E00               	movlw	0
 36846  004098  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 36847  00409A  0E00               	movlw	0
 36848  00409C  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 36849  00409E  0E00               	movlw	0
 36850  0040A0  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 36851                           
 36852                           ; BSR set to: 0
 36853  0040A2  0012               	return	
 36854  0040A4                     l13885:
 36855                           
 36856                           ; BSR set to: 0
 36857  0040A4  0E96               	movlw	150
 36858  0040A6  0100               	movlb	0	; () banked
 36859  0040A8  6F69               	movwf	___xxtofl@exp& (0+255),b
 36860  0040AA  D008               	goto	l13889
 36861  0040AC                     l13887:
 36862                           
 36863                           ; BSR set to: 0
 36864  0040AC  0100               	movlb	0	; () banked
 36865  0040AE  2B69               	incf	___xxtofl@exp& (0+255),f,b
 36866  0040B0  0100               	movlb	0	; () banked
 36867  0040B2  90D8               	bcf	status,0,c
 36868  0040B4  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 36869  0040B6  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 36870  0040B8  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 36871  0040BA  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 36872  0040BC                     l13889:
 36873                           
 36874                           ; BSR set to: 0
 36875  0040BC  0E00               	movlw	0
 36876  0040BE  0100               	movlb	0	; () banked
 36877  0040C0  156A               	andwf	___xxtofl@arg& (0+255),w,b
 36878  0040C2  0100               	movlb	0	; () banked
 36879  0040C4  6F64               	movwf	??___xxtofl& (0+255),b
 36880  0040C6  0E00               	movlw	0
 36881  0040C8  0100               	movlb	0	; () banked
 36882  0040CA  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 36883  0040CC  0100               	movlb	0	; () banked
 36884  0040CE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 36885  0040D0  0E00               	movlw	0
 36886  0040D2  0100               	movlb	0	; () banked
 36887  0040D4  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 36888  0040D6  0100               	movlb	0	; () banked
 36889  0040D8  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 36890  0040DA  0EFE               	movlw	254
 36891  0040DC  0100               	movlb	0	; () banked
 36892  0040DE  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 36893  0040E0  0100               	movlb	0	; () banked
 36894  0040E2  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 36895  0040E4  0100               	movlb	0	; () banked
 36896  0040E6  5164               	movf	??___xxtofl& (0+255),w,b
 36897  0040E8  0100               	movlb	0	; () banked
 36898  0040EA  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 36899  0040EC  0100               	movlb	0	; () banked
 36900  0040EE  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 36901  0040F0  0100               	movlb	0	; () banked
 36902  0040F2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 36903  0040F4  B4D8               	btfsc	status,2,c
 36904  0040F6  D010               	goto	l2942
 36905  0040F8  D7D9               	goto	l13887
 36906  0040FA                     l13891:
 36907                           
 36908                           ; BSR set to: 0
 36909  0040FA  0100               	movlb	0	; () banked
 36910  0040FC  2B69               	incf	___xxtofl@exp& (0+255),f,b
 36911                           
 36912                           ; BSR set to: 0
 36913  0040FE  0E01               	movlw	1
 36914  004100  0100               	movlb	0	; () banked
 36915  004102  276A               	addwf	___xxtofl@arg& (0+255),f,b
 36916  004104  0E00               	movlw	0
 36917  004106  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 36918  004108  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 36919  00410A  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 36920                           
 36921                           ; BSR set to: 0
 36922  00410C  0100               	movlb	0	; () banked
 36923  00410E  90D8               	bcf	status,0,c
 36924  004110  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 36925  004112  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 36926  004114  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 36927  004116  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 36928  004118                     l2942:
 36929                           
 36930                           ; BSR set to: 0
 36931  004118  0E00               	movlw	0
 36932  00411A  0100               	movlb	0	; () banked
 36933  00411C  156A               	andwf	___xxtofl@arg& (0+255),w,b
 36934  00411E  0100               	movlb	0	; () banked
 36935  004120  6F64               	movwf	??___xxtofl& (0+255),b
 36936  004122  0E00               	movlw	0
 36937  004124  0100               	movlb	0	; () banked
 36938  004126  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 36939  004128  0100               	movlb	0	; () banked
 36940  00412A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 36941  00412C  0E00               	movlw	0
 36942  00412E  0100               	movlb	0	; () banked
 36943  004130  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 36944  004132  0100               	movlb	0	; () banked
 36945  004134  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 36946  004136  0EFF               	movlw	255
 36947  004138  0100               	movlb	0	; () banked
 36948  00413A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 36949  00413C  0100               	movlb	0	; () banked
 36950  00413E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 36951  004140  0100               	movlb	0	; () banked
 36952  004142  5164               	movf	??___xxtofl& (0+255),w,b
 36953  004144  0100               	movlb	0	; () banked
 36954  004146  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 36955  004148  0100               	movlb	0	; () banked
 36956  00414A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 36957  00414C  0100               	movlb	0	; () banked
 36958  00414E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 36959  004150  B4D8               	btfsc	status,2,c
 36960  004152  D009               	goto	l13899
 36961  004154  D7D2               	goto	l13891
 36962  004156                     l13897:
 36963                           
 36964                           ; BSR set to: 0
 36965  004156  0100               	movlb	0	; () banked
 36966  004158  0769               	decf	___xxtofl@exp& (0+255),f,b
 36967  00415A  0100               	movlb	0	; () banked
 36968  00415C  90D8               	bcf	status,0,c
 36969  00415E  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 36970  004160  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 36971  004162  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 36972  004164  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 36973  004166                     l13899:
 36974                           
 36975                           ; BSR set to: 0
 36976  004166  0100               	movlb	0	; () banked
 36977  004168  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 36978  00416A  D004               	goto	l2949
 36979                           
 36980                           ; BSR set to: 0
 36981  00416C  0E02               	movlw	2
 36982  00416E  0100               	movlb	0	; () banked
 36983  004170  6169               	cpfslt	___xxtofl@exp& (0+255),b
 36984  004172  D7F1               	goto	l13897
 36985  004174                     l2949:
 36986                           
 36987                           ; BSR set to: 0
 36988  004174  0100               	movlb	0	; () banked
 36989  004176  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 36990  004178  D009               	goto	l2950
 36991                           
 36992                           ; BSR set to: 0
 36993  00417A  0EFF               	movlw	255
 36994  00417C  0100               	movlb	0	; () banked
 36995  00417E  176A               	andwf	___xxtofl@arg& (0+255),f,b
 36996  004180  0EFF               	movlw	255
 36997  004182  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 36998  004184  0E7F               	movlw	127
 36999  004186  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 37000  004188  0EFF               	movlw	255
 37001  00418A  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 37002  00418C                     l2950:
 37003                           
 37004                           ; BSR set to: 0
 37005  00418C  0100               	movlb	0	; () banked
 37006  00418E  90D8               	bcf	status,0,c
 37007  004190  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 37008  004192  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 37009  004196  0100               	movlb	0	; () banked
 37010  004198  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 37011  00419A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 37012  00419C  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 37013  00419E  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 37014  0041A2  0100               	movlb	0	; () banked
 37015  0041A4  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 37016  0041A6  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 37017  0041A8  6B64               	clrf	??___xxtofl& (0+255),b
 37018  0041AA  0100               	movlb	0	; () banked
 37019  0041AC  5164               	movf	??___xxtofl& (0+255),w,b
 37020  0041AE  0100               	movlb	0	; () banked
 37021  0041B0  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 37022  0041B2  0100               	movlb	0	; () banked
 37023  0041B4  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 37024  0041B6  0100               	movlb	0	; () banked
 37025  0041B8  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 37026  0041BA  0100               	movlb	0	; () banked
 37027  0041BC  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 37028  0041BE  0100               	movlb	0	; () banked
 37029  0041C0  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 37030  0041C2  0100               	movlb	0	; () banked
 37031  0041C4  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 37032  0041C6  0100               	movlb	0	; () banked
 37033  0041C8  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 37034                           
 37035                           ; BSR set to: 0
 37036  0041CA  0100               	movlb	0	; () banked
 37037  0041CC  5168               	movf	___xxtofl@sign& (0+255),w,b
 37038  0041CE  0100               	movlb	0	; () banked
 37039  0041D0  B4D8               	btfsc	status,2,c
 37040  0041D2  D005               	goto	l13911
 37041                           
 37042                           ; BSR set to: 0
 37043  0041D4  0100               	movlb	0	; () banked
 37044  0041D6  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 37045  0041D8  D002               	goto	l13911
 37046                           
 37047                           ; BSR set to: 0
 37048  0041DA  0100               	movlb	0	; () banked
 37049  0041DC  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 37050  0041DE                     l13911:
 37051                           
 37052                           ; BSR set to: 0
 37053  0041DE  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 37054  0041E2  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 37055  0041E6  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 37056  0041EA  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 37057  0041EE  0012               	return	
 37058  0041F0                     __end_of___xxtofl:
 37059                           	opt stack 0
 37060                           tosu	equ	0xFFF
 37061                           tosh	equ	0xFFE
 37062                           tosl	equ	0xFFD
 37063                           pclath	equ	0xFFA
 37064                           tblptru	equ	0xFF8
 37065                           tblptrh	equ	0xFF7
 37066                           tblptrl	equ	0xFF6
 37067                           tablat	equ	0xFF5
 37068                           prodh	equ	0xFF4
 37069                           prodl	equ	0xFF3
 37070                           intcon	equ	0xFF2
 37071                           indf0	equ	0xFEF
 37072                           postinc0	equ	0xFEE
 37073                           fsr0h	equ	0xFEA
 37074                           fsr0l	equ	0xFE9
 37075                           wreg	equ	0xFE8
 37076                           indf1	equ	0xFE7
 37077                           postinc1	equ	0xFE6
 37078                           postdec1	equ	0xFE5
 37079                           plusw1	equ	0xFE3
 37080                           fsr1h	equ	0xFE2
 37081                           fsr1l	equ	0xFE1
 37082                           indf2	equ	0xFDF
 37083                           postinc2	equ	0xFDE
 37084                           postdec2	equ	0xFDD
 37085                           plusw2	equ	0xFDB
 37086                           fsr2h	equ	0xFDA
 37087                           fsr2l	equ	0xFD9
 37088                           status	equ	0xFD8
 37089                           
 37090 ;; *************** function ___fltol *****************
 37091 ;; Defined at:
 37092 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fltol.c"
 37093 ;; Parameters:    Size  Location     Type
 37094 ;;  f1              4   88[BANK0 ] unsigned char 
 37095 ;; Auto vars:     Size  Location     Type
 37096 ;;  exp1            1   97[BANK0 ] unsigned char 
 37097 ;;  sign1           1   96[BANK0 ] unsigned char 
 37098 ;; Return value:  Size  Location     Type
 37099 ;;                  4   88[BANK0 ] long 
 37100 ;; Registers used:
 37101 ;;		wreg, status,2, status,0
 37102 ;; Tracked objects:
 37103 ;;		On entry : 0/0
 37104 ;;		On exit  : 0/0
 37105 ;;		Unchanged: 0/0
 37106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37108 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37109 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37110 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37111 ;;Total ram usage:       10 bytes
 37112 ;; Hardware stack levels used:    1
 37113 ;; Hardware stack levels required when called:    4
 37114 ;; This function calls:
 37115 ;;		Nothing
 37116 ;; This function is called by:
 37117 ;;		_data_sys_cal_v1
 37118 ;;		_data_sys_cal_v2
 37119 ;;		_cal_diff_hight_to_vol_h
 37120 ;;		_cal_diff_hight_level
 37121 ;;		_cal_diff_hight_to_vol_v
 37122 ;;		_cal_diff_p_to_h
 37123 ;; This function uses a non-reentrant model
 37124 ;;
 37125                           
 37126                           	psect	text192
 37127  005CF4                     __ptext192:
 37128                           	opt stack 0
 37129  005CF4                     ___fltol:
 37130                           	opt stack 21
 37131                           
 37132                           ; BSR set to: 0
 37133                           ;incstack = 0
 37134  005CF4  0100               	movlb	0	; () banked
 37135  005CF6  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 37136  005CF8  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 37137  005CFA  0100               	movlb	0	; () banked
 37138  005CFC  6FC1               	movwf	___fltol@exp1& (0+255),b
 37139  005CFE  0100               	movlb	0	; () banked
 37140  005D00  51C1               	movf	___fltol@exp1& (0+255),w,b
 37141  005D02  A4D8               	btfss	status,2,c
 37142  005D04  D00A               	goto	l14227
 37143                           
 37144                           ; BSR set to: 0
 37145  005D06  0E00               	movlw	0
 37146  005D08  0100               	movlb	0	; () banked
 37147  005D0A  6FB8               	movwf	?___fltol& (0+255),b
 37148  005D0C  0E00               	movlw	0
 37149  005D0E  6FB9               	movwf	(?___fltol+1)& (0+255),b
 37150  005D10  0E00               	movlw	0
 37151  005D12  6FBA               	movwf	(?___fltol+2)& (0+255),b
 37152  005D14  0E00               	movlw	0
 37153  005D16  6FBB               	movwf	(?___fltol+3)& (0+255),b
 37154                           
 37155                           ; BSR set to: 0
 37156  005D18  0012               	return	
 37157  005D1A                     l14227:
 37158                           
 37159                           ; BSR set to: 0
 37160  005D1A  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 37161  005D1E  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 37162  005D22  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 37163  005D26  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 37164  005D2A  0E20               	movlw	32
 37165  005D2C  D006               	goto	u12930
 37166  005D2E                     u12935:
 37167  005D2E  0100               	movlb	0	; () banked
 37168  005D30  90D8               	bcf	status,0,c
 37169  005D32  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 37170  005D34  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 37171  005D36  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 37172  005D38  33BC               	rrcf	??___fltol& (0+255),f,b
 37173  005D3A                     u12930:
 37174  005D3A  2EE8               	decfsz	wreg,f,c
 37175  005D3C  D7F8               	goto	u12935
 37176  005D3E  0100               	movlb	0	; () banked
 37177  005D40  51BC               	movf	??___fltol& (0+255),w,b
 37178  005D42  0100               	movlb	0	; () banked
 37179  005D44  6FC0               	movwf	___fltol@sign1& (0+255),b
 37180                           
 37181                           ; BSR set to: 0
 37182  005D46  0100               	movlb	0	; () banked
 37183  005D48  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 37184                           
 37185                           ; BSR set to: 0
 37186  005D4A  0EFF               	movlw	255
 37187  005D4C  0100               	movlb	0	; () banked
 37188  005D4E  17B8               	andwf	___fltol@f1& (0+255),f,b
 37189  005D50  0EFF               	movlw	255
 37190  005D52  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 37191  005D54  0EFF               	movlw	255
 37192  005D56  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 37193  005D58  0E00               	movlw	0
 37194  005D5A  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 37195                           
 37196                           ; BSR set to: 0
 37197  005D5C  0E96               	movlw	150
 37198  005D5E  0100               	movlb	0	; () banked
 37199  005D60  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 37200                           
 37201                           ; BSR set to: 0
 37202  005D62  0100               	movlb	0	; () banked
 37203  005D64  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 37204  005D66  D01A               	goto	l14247
 37205                           
 37206                           ; BSR set to: 0
 37207  005D68  0100               	movlb	0	; () banked
 37208  005D6A  51C1               	movf	___fltol@exp1& (0+255),w,b
 37209  005D6C  0A80               	xorlw	128
 37210  005D6E  0F97               	addlw	151
 37211  005D70  B0D8               	btfsc	status,0,c
 37212  005D72  D00A               	goto	l14243
 37213                           
 37214                           ; BSR set to: 0
 37215  005D74  0E00               	movlw	0
 37216  005D76  0100               	movlb	0	; () banked
 37217  005D78  6FB8               	movwf	?___fltol& (0+255),b
 37218  005D7A  0E00               	movlw	0
 37219  005D7C  6FB9               	movwf	(?___fltol+1)& (0+255),b
 37220  005D7E  0E00               	movlw	0
 37221  005D80  6FBA               	movwf	(?___fltol+2)& (0+255),b
 37222  005D82  0E00               	movlw	0
 37223  005D84  6FBB               	movwf	(?___fltol+3)& (0+255),b
 37224                           
 37225                           ; BSR set to: 0
 37226  005D86  0012               	return	
 37227  005D88                     l14243:
 37228                           
 37229                           ; BSR set to: 0
 37230  005D88  0100               	movlb	0	; () banked
 37231  005D8A  90D8               	bcf	status,0,c
 37232  005D8C  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 37233  005D8E  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 37234  005D90  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 37235  005D92  33B8               	rrcf	___fltol@f1& (0+255),f,b
 37236                           
 37237                           ; BSR set to: 0
 37238  005D94  0100               	movlb	0	; () banked
 37239  005D96  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 37240  005D98  D7F7               	goto	l14243
 37241                           
 37242                           ; BSR set to: 0
 37243  005D9A  D01B               	goto	l14257
 37244  005D9C                     l14247:
 37245                           
 37246                           ; BSR set to: 0
 37247  005D9C  0E1F               	movlw	31
 37248  005D9E  0100               	movlb	0	; () banked
 37249  005DA0  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 37250  005DA2  D012               	goto	l14255
 37251                           
 37252                           ; BSR set to: 0
 37253  005DA4  0E00               	movlw	0
 37254  005DA6  0100               	movlb	0	; () banked
 37255  005DA8  6FB8               	movwf	?___fltol& (0+255),b
 37256  005DAA  0E00               	movlw	0
 37257  005DAC  6FB9               	movwf	(?___fltol+1)& (0+255),b
 37258  005DAE  0E00               	movlw	0
 37259  005DB0  6FBA               	movwf	(?___fltol+2)& (0+255),b
 37260  005DB2  0E00               	movlw	0
 37261  005DB4  6FBB               	movwf	(?___fltol+3)& (0+255),b
 37262                           
 37263                           ; BSR set to: 0
 37264  005DB6  0012               	return	
 37265  005DB8                     l14253:
 37266                           
 37267                           ; BSR set to: 0
 37268  005DB8  0100               	movlb	0	; () banked
 37269  005DBA  90D8               	bcf	status,0,c
 37270  005DBC  37B8               	rlcf	___fltol@f1& (0+255),f,b
 37271  005DBE  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 37272  005DC0  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 37273  005DC2  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 37274  005DC4  0100               	movlb	0	; () banked
 37275  005DC6  07C1               	decf	___fltol@exp1& (0+255),f,b
 37276  005DC8                     l14255:
 37277                           
 37278                           ; BSR set to: 0
 37279  005DC8  0100               	movlb	0	; () banked
 37280  005DCA  51C1               	movf	___fltol@exp1& (0+255),w,b
 37281  005DCC  0100               	movlb	0	; () banked
 37282  005DCE  A4D8               	btfss	status,2,c
 37283  005DD0  D7F3               	goto	l14253
 37284  005DD2                     l14257:
 37285                           
 37286                           ; BSR set to: 0
 37287  005DD2  0100               	movlb	0	; () banked
 37288  005DD4  51C0               	movf	___fltol@sign1& (0+255),w,b
 37289  005DD6  0100               	movlb	0	; () banked
 37290  005DD8  B4D8               	btfsc	status,2,c
 37291  005DDA  D009               	goto	l14261
 37292                           
 37293                           ; BSR set to: 0
 37294  005DDC  0100               	movlb	0	; () banked
 37295  005DDE  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 37296  005DE0  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 37297  005DE2  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 37298  005DE4  6DB8               	negf	___fltol@f1& (0+255),b
 37299  005DE6  0E00               	movlw	0
 37300  005DE8  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 37301  005DEA  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 37302  005DEC  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 37303  005DEE                     l14261:
 37304                           
 37305                           ; BSR set to: 0
 37306  005DEE  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 37307  005DF2  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 37308  005DF6  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 37309  005DFA  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 37310  005DFE  0012               	return	
 37311  005E00                     __end_of___fltol:
 37312                           	opt stack 0
 37313                           tosu	equ	0xFFF
 37314                           tosh	equ	0xFFE
 37315                           tosl	equ	0xFFD
 37316                           pclath	equ	0xFFA
 37317                           tblptru	equ	0xFF8
 37318                           tblptrh	equ	0xFF7
 37319                           tblptrl	equ	0xFF6
 37320                           tablat	equ	0xFF5
 37321                           prodh	equ	0xFF4
 37322                           prodl	equ	0xFF3
 37323                           intcon	equ	0xFF2
 37324                           indf0	equ	0xFEF
 37325                           postinc0	equ	0xFEE
 37326                           fsr0h	equ	0xFEA
 37327                           fsr0l	equ	0xFE9
 37328                           wreg	equ	0xFE8
 37329                           indf1	equ	0xFE7
 37330                           postinc1	equ	0xFE6
 37331                           postdec1	equ	0xFE5
 37332                           plusw1	equ	0xFE3
 37333                           fsr1h	equ	0xFE2
 37334                           fsr1l	equ	0xFE1
 37335                           indf2	equ	0xFDF
 37336                           postinc2	equ	0xFDE
 37337                           postdec2	equ	0xFDD
 37338                           plusw2	equ	0xFDB
 37339                           fsr2h	equ	0xFDA
 37340                           fsr2l	equ	0xFD9
 37341                           status	equ	0xFD8
 37342                           
 37343 ;; *************** function ___flmul *****************
 37344 ;; Defined at:
 37345 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcmul.c"
 37346 ;; Parameters:    Size  Location     Type
 37347 ;;  b               4   14[BANK0 ] long 
 37348 ;;  a               4   18[BANK0 ] long 
 37349 ;; Auto vars:     Size  Location     Type
 37350 ;;  prod            4   33[BANK0 ] struct .
 37351 ;;  grs             4   28[BANK0 ] unsigned long 
 37352 ;;  temp            2   37[BANK0 ] struct .
 37353 ;;  bexp            1   32[BANK0 ] unsigned char 
 37354 ;;  aexp            1   27[BANK0 ] unsigned char 
 37355 ;;  sign            1   26[BANK0 ] unsigned char 
 37356 ;; Return value:  Size  Location     Type
 37357 ;;                  4   14[BANK0 ] unsigned char 
 37358 ;; Registers used:
 37359 ;;		wreg, status,2, status,0, prodl, prodh
 37360 ;; Tracked objects:
 37361 ;;		On entry : 0/0
 37362 ;;		On exit  : 0/0
 37363 ;;		Unchanged: 0/0
 37364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37365 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37366 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37368 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37369 ;;Total ram usage:       25 bytes
 37370 ;; Hardware stack levels used:    1
 37371 ;; Hardware stack levels required when called:    4
 37372 ;; This function calls:
 37373 ;;		Nothing
 37374 ;; This function is called by:
 37375 ;;		_data_sys_cal_v1
 37376 ;;		_data_sys_cal_v2
 37377 ;;		_m_interp1_float_fast
 37378 ;;		_cal_diff_hight_to_vol_h
 37379 ;;		_cal_diff_hight_level
 37380 ;;		_cal_diff_hight_to_vol_v
 37381 ;;		_cal_diff_p_to_h
 37382 ;; This function uses a non-reentrant model
 37383 ;;
 37384                           
 37385                           	psect	text193
 37386  001610                     __ptext193:
 37387                           	opt stack 0
 37388  001610                     ___flmul:
 37389                           	opt stack 21
 37390                           
 37391                           ; BSR set to: 0
 37392                           ;incstack = 0
 37393  001610  0100               	movlb	0	; () banked
 37394  001612  5171               	movf	(___flmul@b+3)& (0+255),w,b
 37395  001614  0B80               	andlw	128
 37396  001616  0100               	movlb	0	; () banked
 37397  001618  6F7A               	movwf	___flmul@sign& (0+255),b
 37398  00161A  0100               	movlb	0	; () banked
 37399  00161C  5171               	movf	(___flmul@b+3)& (0+255),w,b
 37400  00161E  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 37401  001620  0100               	movlb	0	; () banked
 37402  001622  6F80               	movwf	___flmul@bexp& (0+255),b
 37403                           
 37404                           ; BSR set to: 0
 37405  001624  0100               	movlb	0	; () banked
 37406  001626  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 37407  001628  D002               	goto	l13683
 37408                           
 37409                           ; BSR set to: 0
 37410  00162A  0100               	movlb	0	; () banked
 37411  00162C  8180               	bsf	___flmul@bexp& (0+255),0,b
 37412  00162E                     l13683:
 37413                           
 37414                           ; BSR set to: 0
 37415  00162E  0100               	movlb	0	; () banked
 37416  001630  5180               	movf	___flmul@bexp& (0+255),w,b
 37417  001632  0100               	movlb	0	; () banked
 37418  001634  B4D8               	btfsc	status,2,c
 37419  001636  D010               	goto	l13691
 37420                           
 37421                           ; BSR set to: 0
 37422  001638  0100               	movlb	0	; () banked
 37423  00163A  2980               	incf	___flmul@bexp& (0+255),w,b
 37424  00163C  A4D8               	btfss	status,2,c
 37425  00163E  D009               	goto	l13689
 37426                           
 37427                           ; BSR set to: 0
 37428  001640  0E00               	movlw	0
 37429  001642  0100               	movlb	0	; () banked
 37430  001644  6F6E               	movwf	___flmul@b& (0+255),b
 37431  001646  0E00               	movlw	0
 37432  001648  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 37433  00164A  0E00               	movlw	0
 37434  00164C  6F70               	movwf	(___flmul@b+2)& (0+255),b
 37435  00164E  0E00               	movlw	0
 37436  001650  6F71               	movwf	(___flmul@b+3)& (0+255),b
 37437  001652                     l13689:
 37438                           
 37439                           ; BSR set to: 0
 37440  001652  0100               	movlb	0	; () banked
 37441  001654  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 37442  001656  D009               	goto	l13693
 37443  001658                     l13691:
 37444                           
 37445                           ; BSR set to: 0
 37446  001658  0E00               	movlw	0
 37447  00165A  0100               	movlb	0	; () banked
 37448  00165C  6F6E               	movwf	___flmul@b& (0+255),b
 37449  00165E  0E00               	movlw	0
 37450  001660  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 37451  001662  0E00               	movlw	0
 37452  001664  6F70               	movwf	(___flmul@b+2)& (0+255),b
 37453  001666  0E00               	movlw	0
 37454  001668  6F71               	movwf	(___flmul@b+3)& (0+255),b
 37455  00166A                     l13693:
 37456                           
 37457                           ; BSR set to: 0
 37458  00166A  0100               	movlb	0	; () banked
 37459  00166C  5175               	movf	(___flmul@a+3)& (0+255),w,b
 37460  00166E  0B80               	andlw	128
 37461  001670  0100               	movlb	0	; () banked
 37462  001672  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 37463                           
 37464                           ; BSR set to: 0
 37465  001674  0100               	movlb	0	; () banked
 37466  001676  5175               	movf	(___flmul@a+3)& (0+255),w,b
 37467  001678  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 37468  00167A  0100               	movlb	0	; () banked
 37469  00167C  6F7B               	movwf	___flmul@aexp& (0+255),b
 37470                           
 37471                           ; BSR set to: 0
 37472  00167E  0100               	movlb	0	; () banked
 37473  001680  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 37474  001682  D002               	goto	l13701
 37475                           
 37476                           ; BSR set to: 0
 37477  001684  0100               	movlb	0	; () banked
 37478  001686  817B               	bsf	___flmul@aexp& (0+255),0,b
 37479  001688                     l13701:
 37480                           
 37481                           ; BSR set to: 0
 37482  001688  0100               	movlb	0	; () banked
 37483  00168A  517B               	movf	___flmul@aexp& (0+255),w,b
 37484  00168C  0100               	movlb	0	; () banked
 37485  00168E  B4D8               	btfsc	status,2,c
 37486  001690  D010               	goto	l13709
 37487                           
 37488                           ; BSR set to: 0
 37489  001692  0100               	movlb	0	; () banked
 37490  001694  297B               	incf	___flmul@aexp& (0+255),w,b
 37491  001696  A4D8               	btfss	status,2,c
 37492  001698  D009               	goto	l13707
 37493                           
 37494                           ; BSR set to: 0
 37495  00169A  0E00               	movlw	0
 37496  00169C  0100               	movlb	0	; () banked
 37497  00169E  6F72               	movwf	___flmul@a& (0+255),b
 37498  0016A0  0E00               	movlw	0
 37499  0016A2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 37500  0016A4  0E00               	movlw	0
 37501  0016A6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 37502  0016A8  0E00               	movlw	0
 37503  0016AA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 37504  0016AC                     l13707:
 37505                           
 37506                           ; BSR set to: 0
 37507  0016AC  0100               	movlb	0	; () banked
 37508  0016AE  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 37509  0016B0  D009               	goto	l2913
 37510  0016B2                     l13709:
 37511                           
 37512                           ; BSR set to: 0
 37513  0016B2  0E00               	movlw	0
 37514  0016B4  0100               	movlb	0	; () banked
 37515  0016B6  6F72               	movwf	___flmul@a& (0+255),b
 37516  0016B8  0E00               	movlw	0
 37517  0016BA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 37518  0016BC  0E00               	movlw	0
 37519  0016BE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 37520  0016C0  0E00               	movlw	0
 37521  0016C2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 37522  0016C4                     l2913:
 37523                           
 37524                           ; BSR set to: 0
 37525  0016C4  0100               	movlb	0	; () banked
 37526  0016C6  517B               	movf	___flmul@aexp& (0+255),w,b
 37527  0016C8  0100               	movlb	0	; () banked
 37528  0016CA  B4D8               	btfsc	status,2,c
 37529  0016CC  D005               	goto	l13713
 37530                           
 37531                           ; BSR set to: 0
 37532  0016CE  0100               	movlb	0	; () banked
 37533  0016D0  5180               	movf	___flmul@bexp& (0+255),w,b
 37534  0016D2  0100               	movlb	0	; () banked
 37535  0016D4  A4D8               	btfss	status,2,c
 37536  0016D6  D00A               	goto	l13717
 37537  0016D8                     l13713:
 37538                           
 37539                           ; BSR set to: 0
 37540  0016D8  0E00               	movlw	0
 37541  0016DA  0100               	movlb	0	; () banked
 37542  0016DC  6F6E               	movwf	?___flmul& (0+255),b
 37543  0016DE  0E00               	movlw	0
 37544  0016E0  6F6F               	movwf	(?___flmul+1)& (0+255),b
 37545  0016E2  0E00               	movlw	0
 37546  0016E4  6F70               	movwf	(?___flmul+2)& (0+255),b
 37547  0016E6  0E00               	movlw	0
 37548  0016E8  6F71               	movwf	(?___flmul+3)& (0+255),b
 37549                           
 37550                           ; BSR set to: 0
 37551  0016EA  0012               	return	
 37552  0016EC                     l13717:
 37553                           
 37554                           ; BSR set to: 0
 37555  0016EC  0100               	movlb	0	; () banked
 37556  0016EE  5174               	movf	(___flmul@a+2)& (0+255),w,b
 37557  0016F0  0100               	movlb	0	; () banked
 37558  0016F2  036E               	mulwf	___flmul@b& (0+255),b
 37559  0016F4  CFF3 F085          	movff	prodl,___flmul@temp
 37560  0016F8  CFF4 F086          	movff	prodh,___flmul@temp+1
 37561                           
 37562                           ; BSR set to: 0
 37563  0016FC  0100               	movlb	0	; () banked
 37564  0016FE  5185               	movf	___flmul@temp& (0+255),w,b
 37565  001700  0100               	movlb	0	; () banked
 37566  001702  6F7C               	movwf	___flmul@grs& (0+255),b
 37567  001704  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 37568  001706  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 37569  001708  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 37570                           
 37571                           ; BSR set to: 0
 37572  00170A  0100               	movlb	0	; () banked
 37573  00170C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37574  00170E  0100               	movlb	0	; () banked
 37575  001710  6F81               	movwf	___flmul@prod& (0+255),b
 37576  001712  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 37577  001714  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 37578  001716  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 37579  001718  0100               	movlb	0	; () banked
 37580  00171A  5173               	movf	(___flmul@a+1)& (0+255),w,b
 37581  00171C  0100               	movlb	0	; () banked
 37582  00171E  036F               	mulwf	(___flmul@b+1)& (0+255),b
 37583  001720  CFF3 F085          	movff	prodl,___flmul@temp
 37584  001724  CFF4 F086          	movff	prodh,___flmul@temp+1
 37585                           
 37586                           ; BSR set to: 0
 37587  001728  0100               	movlb	0	; () banked
 37588  00172A  5185               	movf	___flmul@temp& (0+255),w,b
 37589  00172C  0100               	movlb	0	; () banked
 37590  00172E  277C               	addwf	___flmul@grs& (0+255),f,b
 37591  001730  0E00               	movlw	0
 37592  001732  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37593  001734  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37594  001736  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37595                           
 37596                           ; BSR set to: 0
 37597  001738  0100               	movlb	0	; () banked
 37598  00173A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37599  00173C  0100               	movlb	0	; () banked
 37600  00173E  2781               	addwf	___flmul@prod& (0+255),f,b
 37601  001740  0E00               	movlw	0
 37602  001742  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37603  001744  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37604  001746  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37605  001748  0100               	movlb	0	; () banked
 37606  00174A  5172               	movf	___flmul@a& (0+255),w,b
 37607  00174C  0100               	movlb	0	; () banked
 37608  00174E  0370               	mulwf	(___flmul@b+2)& (0+255),b
 37609  001750  CFF3 F085          	movff	prodl,___flmul@temp
 37610  001754  CFF4 F086          	movff	prodh,___flmul@temp+1
 37611                           
 37612                           ; BSR set to: 0
 37613  001758  0100               	movlb	0	; () banked
 37614  00175A  5185               	movf	___flmul@temp& (0+255),w,b
 37615  00175C  0100               	movlb	0	; () banked
 37616  00175E  277C               	addwf	___flmul@grs& (0+255),f,b
 37617  001760  0E00               	movlw	0
 37618  001762  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37619  001764  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37620  001766  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37621                           
 37622                           ; BSR set to: 0
 37623  001768  0100               	movlb	0	; () banked
 37624  00176A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37625  00176C  0100               	movlb	0	; () banked
 37626  00176E  2781               	addwf	___flmul@prod& (0+255),f,b
 37627  001770  0E00               	movlw	0
 37628  001772  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37629  001774  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37630  001776  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37631                           
 37632                           ; BSR set to: 0
 37633  001778  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 37634  00177C  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 37635  001780  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 37636  001784  0100               	movlb	0	; () banked
 37637  001786  6B7C               	clrf	___flmul@grs& (0+255),b
 37638                           
 37639                           ; BSR set to: 0
 37640  001788  0100               	movlb	0	; () banked
 37641  00178A  5172               	movf	___flmul@a& (0+255),w,b
 37642  00178C  0100               	movlb	0	; () banked
 37643  00178E  036F               	mulwf	(___flmul@b+1)& (0+255),b
 37644  001790  CFF3 F085          	movff	prodl,___flmul@temp
 37645  001794  CFF4 F086          	movff	prodh,___flmul@temp+1
 37646                           
 37647                           ; BSR set to: 0
 37648  001798  0100               	movlb	0	; () banked
 37649  00179A  5185               	movf	___flmul@temp& (0+255),w,b
 37650  00179C  0100               	movlb	0	; () banked
 37651  00179E  277C               	addwf	___flmul@grs& (0+255),f,b
 37652  0017A0  0100               	movlb	0	; () banked
 37653  0017A2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37654  0017A4  0100               	movlb	0	; () banked
 37655  0017A6  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37656  0017A8  0E00               	movlw	0
 37657  0017AA  0100               	movlb	0	; () banked
 37658  0017AC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37659  0017AE  0E00               	movlw	0
 37660  0017B0  0100               	movlb	0	; () banked
 37661  0017B2  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37662                           
 37663                           ; BSR set to: 0
 37664  0017B4  0100               	movlb	0	; () banked
 37665  0017B6  5173               	movf	(___flmul@a+1)& (0+255),w,b
 37666  0017B8  0100               	movlb	0	; () banked
 37667  0017BA  036E               	mulwf	___flmul@b& (0+255),b
 37668  0017BC  CFF3 F085          	movff	prodl,___flmul@temp
 37669  0017C0  CFF4 F086          	movff	prodh,___flmul@temp+1
 37670                           
 37671                           ; BSR set to: 0
 37672  0017C4  0100               	movlb	0	; () banked
 37673  0017C6  5185               	movf	___flmul@temp& (0+255),w,b
 37674  0017C8  0100               	movlb	0	; () banked
 37675  0017CA  277C               	addwf	___flmul@grs& (0+255),f,b
 37676  0017CC  0100               	movlb	0	; () banked
 37677  0017CE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37678  0017D0  0100               	movlb	0	; () banked
 37679  0017D2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37680  0017D4  0E00               	movlw	0
 37681  0017D6  0100               	movlb	0	; () banked
 37682  0017D8  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37683  0017DA  0E00               	movlw	0
 37684  0017DC  0100               	movlb	0	; () banked
 37685  0017DE  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37686                           
 37687                           ; BSR set to: 0
 37688  0017E0  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 37689  0017E4  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 37690  0017E8  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 37691  0017EC  0100               	movlb	0	; () banked
 37692  0017EE  6B7C               	clrf	___flmul@grs& (0+255),b
 37693  0017F0  0100               	movlb	0	; () banked
 37694  0017F2  5172               	movf	___flmul@a& (0+255),w,b
 37695  0017F4  0100               	movlb	0	; () banked
 37696  0017F6  036E               	mulwf	___flmul@b& (0+255),b
 37697  0017F8  CFF3 F085          	movff	prodl,___flmul@temp
 37698  0017FC  CFF4 F086          	movff	prodh,___flmul@temp+1
 37699                           
 37700                           ; BSR set to: 0
 37701  001800  0100               	movlb	0	; () banked
 37702  001802  5185               	movf	___flmul@temp& (0+255),w,b
 37703  001804  0100               	movlb	0	; () banked
 37704  001806  277C               	addwf	___flmul@grs& (0+255),f,b
 37705  001808  0100               	movlb	0	; () banked
 37706  00180A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37707  00180C  0100               	movlb	0	; () banked
 37708  00180E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37709  001810  0E00               	movlw	0
 37710  001812  0100               	movlb	0	; () banked
 37711  001814  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37712  001816  0E00               	movlw	0
 37713  001818  0100               	movlb	0	; () banked
 37714  00181A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37715                           
 37716                           ; BSR set to: 0
 37717  00181C  0100               	movlb	0	; () banked
 37718  00181E  5174               	movf	(___flmul@a+2)& (0+255),w,b
 37719  001820  0100               	movlb	0	; () banked
 37720  001822  036F               	mulwf	(___flmul@b+1)& (0+255),b
 37721  001824  CFF3 F085          	movff	prodl,___flmul@temp
 37722  001828  CFF4 F086          	movff	prodh,___flmul@temp+1
 37723  00182C  0100               	movlb	0	; () banked
 37724  00182E  5185               	movf	___flmul@temp& (0+255),w,b
 37725  001830  0100               	movlb	0	; () banked
 37726  001832  2781               	addwf	___flmul@prod& (0+255),f,b
 37727  001834  0100               	movlb	0	; () banked
 37728  001836  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37729  001838  0100               	movlb	0	; () banked
 37730  00183A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37731  00183C  0E00               	movlw	0
 37732  00183E  0100               	movlb	0	; () banked
 37733  001840  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37734  001842  0E00               	movlw	0
 37735  001844  0100               	movlb	0	; () banked
 37736  001846  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37737                           
 37738                           ; BSR set to: 0
 37739  001848  0100               	movlb	0	; () banked
 37740  00184A  5173               	movf	(___flmul@a+1)& (0+255),w,b
 37741  00184C  0100               	movlb	0	; () banked
 37742  00184E  0370               	mulwf	(___flmul@b+2)& (0+255),b
 37743  001850  CFF3 F085          	movff	prodl,___flmul@temp
 37744  001854  CFF4 F086          	movff	prodh,___flmul@temp+1
 37745                           
 37746                           ; BSR set to: 0
 37747  001858  0100               	movlb	0	; () banked
 37748  00185A  5185               	movf	___flmul@temp& (0+255),w,b
 37749  00185C  0100               	movlb	0	; () banked
 37750  00185E  2781               	addwf	___flmul@prod& (0+255),f,b
 37751  001860  0100               	movlb	0	; () banked
 37752  001862  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37753  001864  0100               	movlb	0	; () banked
 37754  001866  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37755  001868  0E00               	movlw	0
 37756  00186A  0100               	movlb	0	; () banked
 37757  00186C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37758  00186E  0E00               	movlw	0
 37759  001870  0100               	movlb	0	; () banked
 37760  001872  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37761  001874  0100               	movlb	0	; () banked
 37762  001876  5174               	movf	(___flmul@a+2)& (0+255),w,b
 37763  001878  0100               	movlb	0	; () banked
 37764  00187A  0370               	mulwf	(___flmul@b+2)& (0+255),b
 37765  00187C  CFF3 F085          	movff	prodl,___flmul@temp
 37766  001880  CFF4 F086          	movff	prodh,___flmul@temp+1
 37767                           
 37768                           ; BSR set to: 0
 37769  001884  0100               	movlb	0	; () banked
 37770  001886  5185               	movf	___flmul@temp& (0+255),w,b
 37771  001888  0100               	movlb	0	; () banked
 37772  00188A  6F76               	movwf	??___flmul& (0+255),b
 37773  00188C  0100               	movlb	0	; () banked
 37774  00188E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37775  001890  0100               	movlb	0	; () banked
 37776  001892  6F77               	movwf	(??___flmul+1)& (0+255),b
 37777  001894  0100               	movlb	0	; () banked
 37778  001896  6B78               	clrf	(??___flmul+2)& (0+255),b
 37779  001898  0100               	movlb	0	; () banked
 37780  00189A  6B79               	clrf	(??___flmul+3)& (0+255),b
 37781  00189C  C078  F079         	movff	??___flmul+2,??___flmul+3
 37782  0018A0  C077  F078         	movff	??___flmul+1,??___flmul+2
 37783  0018A4  C076  F077         	movff	??___flmul,??___flmul+1
 37784  0018A8  0100               	movlb	0	; () banked
 37785  0018AA  6B76               	clrf	??___flmul& (0+255),b
 37786  0018AC  0100               	movlb	0	; () banked
 37787  0018AE  5176               	movf	??___flmul& (0+255),w,b
 37788  0018B0  0100               	movlb	0	; () banked
 37789  0018B2  2781               	addwf	___flmul@prod& (0+255),f,b
 37790  0018B4  0100               	movlb	0	; () banked
 37791  0018B6  5177               	movf	(??___flmul+1)& (0+255),w,b
 37792  0018B8  0100               	movlb	0	; () banked
 37793  0018BA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37794  0018BC  0100               	movlb	0	; () banked
 37795  0018BE  5178               	movf	(??___flmul+2)& (0+255),w,b
 37796  0018C0  0100               	movlb	0	; () banked
 37797  0018C2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37798  0018C4  0100               	movlb	0	; () banked
 37799  0018C6  5179               	movf	(??___flmul+3)& (0+255),w,b
 37800  0018C8  0100               	movlb	0	; () banked
 37801  0018CA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37802                           
 37803                           ; BSR set to: 0
 37804  0018CC  C07C  F076         	movff	___flmul@grs,??___flmul
 37805  0018D0  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 37806  0018D4  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 37807  0018D8  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 37808  0018DC  0E19               	movlw	25
 37809  0018DE  D006               	goto	u12300
 37810  0018E0                     u12305:
 37811  0018E0  0100               	movlb	0	; () banked
 37812  0018E2  90D8               	bcf	status,0,c
 37813  0018E4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 37814  0018E6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 37815  0018E8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 37816  0018EA  3376               	rrcf	??___flmul& (0+255),f,b
 37817  0018EC                     u12300:
 37818  0018EC  2EE8               	decfsz	wreg,f,c
 37819  0018EE  D7F8               	goto	u12305
 37820  0018F0  0100               	movlb	0	; () banked
 37821  0018F2  5176               	movf	??___flmul& (0+255),w,b
 37822  0018F4  0100               	movlb	0	; () banked
 37823  0018F6  2781               	addwf	___flmul@prod& (0+255),f,b
 37824  0018F8  0100               	movlb	0	; () banked
 37825  0018FA  5177               	movf	(??___flmul+1)& (0+255),w,b
 37826  0018FC  0100               	movlb	0	; () banked
 37827  0018FE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37828  001900  0100               	movlb	0	; () banked
 37829  001902  5178               	movf	(??___flmul+2)& (0+255),w,b
 37830  001904  0100               	movlb	0	; () banked
 37831  001906  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37832  001908  0100               	movlb	0	; () banked
 37833  00190A  5179               	movf	(??___flmul+3)& (0+255),w,b
 37834  00190C  0100               	movlb	0	; () banked
 37835  00190E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37836                           
 37837                           ; BSR set to: 0
 37838  001910  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 37839  001914  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 37840  001918  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 37841  00191C  0100               	movlb	0	; () banked
 37842  00191E  6B7C               	clrf	___flmul@grs& (0+255),b
 37843                           
 37844                           ; BSR set to: 0
 37845  001920  0100               	movlb	0	; () banked
 37846  001922  517B               	movf	___flmul@aexp& (0+255),w,b
 37847  001924  C080  F076         	movff	___flmul@bexp,??___flmul
 37848  001928  0100               	movlb	0	; () banked
 37849  00192A  6B77               	clrf	(??___flmul+1)& (0+255),b
 37850  00192C  0100               	movlb	0	; () banked
 37851  00192E  2776               	addwf	??___flmul& (0+255),f,b
 37852  001930  0E00               	movlw	0
 37853  001932  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 37854  001934  0E82               	movlw	130
 37855  001936  0100               	movlb	0	; () banked
 37856  001938  2576               	addwf	??___flmul& (0+255),w,b
 37857  00193A  0100               	movlb	0	; () banked
 37858  00193C  6F85               	movwf	___flmul@temp& (0+255),b
 37859  00193E  0EFF               	movlw	255
 37860  001940  0100               	movlb	0	; () banked
 37861  001942  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 37862  001944  0100               	movlb	0	; () banked
 37863  001946  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 37864  001948  D015               	goto	l13765
 37865  00194A                     l13759:
 37866                           
 37867                           ; BSR set to: 0
 37868  00194A  0100               	movlb	0	; () banked
 37869  00194C  90D8               	bcf	status,0,c
 37870  00194E  3781               	rlcf	___flmul@prod& (0+255),f,b
 37871  001950  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 37872  001952  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 37873  001954  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 37874                           
 37875                           ; BSR set to: 0
 37876  001956  0100               	movlb	0	; () banked
 37877  001958  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 37878  00195A  D002               	goto	l2920
 37879                           
 37880                           ; BSR set to: 0
 37881  00195C  0100               	movlb	0	; () banked
 37882  00195E  8181               	bsf	___flmul@prod& (0+255),0,b
 37883  001960                     l2920:
 37884                           
 37885                           ; BSR set to: 0
 37886  001960  0100               	movlb	0	; () banked
 37887  001962  90D8               	bcf	status,0,c
 37888  001964  377C               	rlcf	___flmul@grs& (0+255),f,b
 37889  001966  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 37890  001968  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 37891  00196A  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 37892  00196C  0100               	movlb	0	; () banked
 37893  00196E  0785               	decf	___flmul@temp& (0+255),f,b
 37894  001970  A0D8               	btfss	status,0,c
 37895  001972  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 37896  001974                     l13765:
 37897                           
 37898                           ; BSR set to: 0
 37899  001974  0100               	movlb	0	; () banked
 37900  001976  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 37901  001978  D7E8               	goto	l13759
 37902                           
 37903                           ; BSR set to: 0
 37904                           
 37905                           ; BSR set to: 0
 37906  00197A  0E00               	movlw	0
 37907  00197C  0100               	movlb	0	; () banked
 37908  00197E  6F7B               	movwf	___flmul@aexp& (0+255),b
 37909                           
 37910                           ; BSR set to: 0
 37911  001980  0100               	movlb	0	; () banked
 37912  001982  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 37913  001984  D024               	goto	l2922
 37914                           
 37915                           ; BSR set to: 0
 37916  001986  0EFF               	movlw	255
 37917  001988  0100               	movlb	0	; () banked
 37918  00198A  157C               	andwf	___flmul@grs& (0+255),w,b
 37919  00198C  0100               	movlb	0	; () banked
 37920  00198E  6F76               	movwf	??___flmul& (0+255),b
 37921  001990  0EFF               	movlw	255
 37922  001992  0100               	movlb	0	; () banked
 37923  001994  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 37924  001996  0100               	movlb	0	; () banked
 37925  001998  6F77               	movwf	(??___flmul+1)& (0+255),b
 37926  00199A  0EFF               	movlw	255
 37927  00199C  0100               	movlb	0	; () banked
 37928  00199E  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 37929  0019A0  0100               	movlb	0	; () banked
 37930  0019A2  6F78               	movwf	(??___flmul+2)& (0+255),b
 37931  0019A4  0E7F               	movlw	127
 37932  0019A6  0100               	movlb	0	; () banked
 37933  0019A8  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 37934  0019AA  0100               	movlb	0	; () banked
 37935  0019AC  6F79               	movwf	(??___flmul+3)& (0+255),b
 37936  0019AE  0100               	movlb	0	; () banked
 37937  0019B0  5176               	movf	??___flmul& (0+255),w,b
 37938  0019B2  0100               	movlb	0	; () banked
 37939  0019B4  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 37940  0019B6  0100               	movlb	0	; () banked
 37941  0019B8  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 37942  0019BA  0100               	movlb	0	; () banked
 37943  0019BC  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 37944  0019BE  A4D8               	btfss	status,2,c
 37945  0019C0  D003               	goto	l13775
 37946                           
 37947                           ; BSR set to: 0
 37948                           
 37949                           ; BSR set to: 0
 37950  0019C2  0100               	movlb	0	; () banked
 37951  0019C4  A181               	btfss	___flmul@prod& (0+255),0,b
 37952  0019C6  D003               	goto	l2922
 37953  0019C8                     l13775:
 37954                           
 37955                           ; BSR set to: 0
 37956  0019C8  0E01               	movlw	1
 37957  0019CA  0100               	movlb	0	; () banked
 37958  0019CC  6F7B               	movwf	___flmul@aexp& (0+255),b
 37959  0019CE                     l2922:
 37960                           
 37961                           ; BSR set to: 0
 37962  0019CE  0100               	movlb	0	; () banked
 37963  0019D0  517B               	movf	___flmul@aexp& (0+255),w,b
 37964  0019D2  0100               	movlb	0	; () banked
 37965  0019D4  B4D8               	btfsc	status,2,c
 37966  0019D6  D023               	goto	l13785
 37967                           
 37968                           ; BSR set to: 0
 37969  0019D8  0E01               	movlw	1
 37970  0019DA  0100               	movlb	0	; () banked
 37971  0019DC  2781               	addwf	___flmul@prod& (0+255),f,b
 37972  0019DE  0E00               	movlw	0
 37973  0019E0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37974  0019E2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37975  0019E4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37976                           
 37977                           ; BSR set to: 0
 37978  0019E6  0100               	movlb	0	; () banked
 37979  0019E8  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 37980  0019EA  D019               	goto	l13785
 37981                           
 37982                           ; BSR set to: 0
 37983  0019EC  C081  F076         	movff	___flmul@prod,??___flmul
 37984  0019F0  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 37985  0019F4  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 37986  0019F8  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 37987  0019FC  0100               	movlb	0	; () banked
 37988  0019FE  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 37989  001A00  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 37990  001A02  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 37991  001A04  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 37992  001A06  3376               	rrcf	??___flmul& (0+255),f,b
 37993  001A08  C076  F081         	movff	??___flmul,___flmul@prod
 37994  001A0C  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 37995  001A10  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 37996  001A14  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 37997                           
 37998                           ; BSR set to: 0
 37999  001A18  0100               	movlb	0	; () banked
 38000  001A1A  4B85               	infsnz	___flmul@temp& (0+255),f,b
 38001  001A1C  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 38002  001A1E                     l13785:
 38003                           
 38004                           ; BSR set to: 0
 38005  001A1E  0100               	movlb	0	; () banked
 38006  001A20  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 38007  001A22  D010               	goto	l13789
 38008  001A24  0100               	movlb	0	; () banked
 38009  001A26  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 38010  001A28  E104               	bnz	u12380
 38011  001A2A  0100               	movlb	0	; () banked
 38012  001A2C  2985               	incf	___flmul@temp& (0+255),w,b
 38013  001A2E  A0D8               	btfss	status,0,c
 38014  001A30  D009               	goto	l13789
 38015  001A32                     u12380:
 38016                           
 38017                           ; BSR set to: 0
 38018  001A32  0E00               	movlw	0
 38019  001A34  0100               	movlb	0	; () banked
 38020  001A36  6F81               	movwf	___flmul@prod& (0+255),b
 38021  001A38  0E00               	movlw	0
 38022  001A3A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 38023  001A3C  0E80               	movlw	128
 38024  001A3E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 38025  001A40  0E7F               	movlw	127
 38026  001A42  D02B               	goto	L30
 38027  001A44                     l13789:
 38028                           
 38029                           ; BSR set to: 0
 38030  001A44  0100               	movlb	0	; () banked
 38031  001A46  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 38032  001A48  D007               	goto	l13791
 38033  001A4A  0100               	movlb	0	; () banked
 38034  001A4C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 38035  001A4E  E111               	bnz	l2930
 38036  001A50  0100               	movlb	0	; () banked
 38037  001A52  0585               	decf	___flmul@temp& (0+255),w,b
 38038  001A54  B0D8               	btfsc	status,0,c
 38039  001A56  D00D               	goto	l2930
 38040  001A58                     l13791:
 38041                           
 38042                           ; BSR set to: 0
 38043  001A58  0E00               	movlw	0
 38044  001A5A  0100               	movlb	0	; () banked
 38045  001A5C  6F81               	movwf	___flmul@prod& (0+255),b
 38046  001A5E  0E00               	movlw	0
 38047  001A60  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 38048  001A62  0E00               	movlw	0
 38049  001A64  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 38050  001A66  0E00               	movlw	0
 38051  001A68  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 38052  001A6A  0E00               	movlw	0
 38053  001A6C  0100               	movlb	0	; () banked
 38054  001A6E  6F7A               	movwf	___flmul@sign& (0+255),b
 38055  001A70  D015               	goto	l13801
 38056  001A72                     l2930:
 38057                           
 38058                           ; BSR set to: 0
 38059  001A72  C085  F080         	movff	___flmul@temp,___flmul@bexp
 38060                           
 38061                           ; BSR set to: 0
 38062  001A76  0EFF               	movlw	255
 38063  001A78  0100               	movlb	0	; () banked
 38064  001A7A  1781               	andwf	___flmul@prod& (0+255),f,b
 38065  001A7C  0EFF               	movlw	255
 38066  001A7E  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 38067  001A80  0E7F               	movlw	127
 38068  001A82  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 38069  001A84  0E00               	movlw	0
 38070  001A86  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 38071                           
 38072                           ; BSR set to: 0
 38073  001A88  0100               	movlb	0	; () banked
 38074  001A8A  A180               	btfss	___flmul@bexp& (0+255),0,b
 38075  001A8C  D002               	goto	l13799
 38076                           
 38077                           ; BSR set to: 0
 38078  001A8E  0100               	movlb	0	; () banked
 38079  001A90  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 38080  001A92                     l13799:
 38081                           
 38082                           ; BSR set to: 0
 38083  001A92  0100               	movlb	0	; () banked
 38084  001A94  90D8               	bcf	status,0,c
 38085  001A96  3180               	rrcf	___flmul@bexp& (0+255),w,b
 38086  001A98  0100               	movlb	0	; () banked
 38087  001A9A                     L30:
 38088  001A9A  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 38089  001A9C                     l13801:
 38090                           
 38091                           ; BSR set to: 0
 38092  001A9C  0100               	movlb	0	; () banked
 38093  001A9E  517A               	movf	___flmul@sign& (0+255),w,b
 38094  001AA0  0100               	movlb	0	; () banked
 38095  001AA2  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 38096                           
 38097                           ; BSR set to: 0
 38098  001AA4  C081  F06E         	movff	___flmul@prod,?___flmul
 38099  001AA8  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 38100  001AAC  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 38101  001AB0  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 38102  001AB4  0012               	return	
 38103  001AB6                     __end_of___flmul:
 38104                           	opt stack 0
 38105                           tosu	equ	0xFFF
 38106                           tosh	equ	0xFFE
 38107                           tosl	equ	0xFFD
 38108                           pclath	equ	0xFFA
 38109                           tblptru	equ	0xFF8
 38110                           tblptrh	equ	0xFF7
 38111                           tblptrl	equ	0xFF6
 38112                           tablat	equ	0xFF5
 38113                           prodh	equ	0xFF4
 38114                           prodl	equ	0xFF3
 38115                           intcon	equ	0xFF2
 38116                           indf0	equ	0xFEF
 38117                           postinc0	equ	0xFEE
 38118                           fsr0h	equ	0xFEA
 38119                           fsr0l	equ	0xFE9
 38120                           wreg	equ	0xFE8
 38121                           indf1	equ	0xFE7
 38122                           postinc1	equ	0xFE6
 38123                           postdec1	equ	0xFE5
 38124                           plusw1	equ	0xFE3
 38125                           fsr1h	equ	0xFE2
 38126                           fsr1l	equ	0xFE1
 38127                           indf2	equ	0xFDF
 38128                           postinc2	equ	0xFDE
 38129                           postdec2	equ	0xFDD
 38130                           plusw2	equ	0xFDB
 38131                           fsr2h	equ	0xFDA
 38132                           fsr2l	equ	0xFD9
 38133                           status	equ	0xFD8
 38134                           
 38135 ;; *************** function ___fldiv *****************
 38136 ;; Defined at:
 38137 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcdiv.c"
 38138 ;; Parameters:    Size  Location     Type
 38139 ;;  b               4   39[BANK0 ] unsigned char 
 38140 ;;  a               4   43[BANK0 ] unsigned char 
 38141 ;; Auto vars:     Size  Location     Type
 38142 ;;  grs             4   58[BANK0 ] unsigned long 
 38143 ;;  rem             4   52[BANK0 ] unsigned long 
 38144 ;;  new_exp         2   56[BANK0 ] int 
 38145 ;;  aexp            1   63[BANK0 ] unsigned char 
 38146 ;;  bexp            1   62[BANK0 ] unsigned char 
 38147 ;;  sign            1   51[BANK0 ] unsigned char 
 38148 ;; Return value:  Size  Location     Type
 38149 ;;                  4   39[BANK0 ] unsigned char 
 38150 ;; Registers used:
 38151 ;;		wreg, status,2, status,0
 38152 ;; Tracked objects:
 38153 ;;		On entry : 0/0
 38154 ;;		On exit  : 0/0
 38155 ;;		Unchanged: 0/0
 38156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38157 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38158 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38159 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38160 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38161 ;;Total ram usage:       25 bytes
 38162 ;; Hardware stack levels used:    1
 38163 ;; Hardware stack levels required when called:    4
 38164 ;; This function calls:
 38165 ;;		Nothing
 38166 ;; This function is called by:
 38167 ;;		_data_sys_cal_v1
 38168 ;;		_data_sys_cal_v2
 38169 ;;		_m_interp1_float_fast
 38170 ;;		_cal_diff_hight_to_vol_h
 38171 ;;		_cal_diff_hight_level
 38172 ;;		_cal_diff_hight_to_vol_v
 38173 ;;		_cal_diff_p_to_h
 38174 ;; This function uses a non-reentrant model
 38175 ;;
 38176                           
 38177                           	psect	text194
 38178  002352                     __ptext194:
 38179                           	opt stack 0
 38180  002352                     ___fldiv:
 38181                           	opt stack 21
 38182                           
 38183                           ; BSR set to: 0
 38184                           ;incstack = 0
 38185  002352  0100               	movlb	0	; () banked
 38186  002354  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 38187  002356  0B80               	andlw	128
 38188  002358  0100               	movlb	0	; () banked
 38189  00235A  6F93               	movwf	___fldiv@sign& (0+255),b
 38190  00235C  0100               	movlb	0	; () banked
 38191  00235E  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 38192  002360  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 38193  002362  0100               	movlb	0	; () banked
 38194  002364  6F9E               	movwf	___fldiv@bexp& (0+255),b
 38195                           
 38196                           ; BSR set to: 0
 38197  002366  0100               	movlb	0	; () banked
 38198  002368  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 38199  00236A  D002               	goto	l13547
 38200                           
 38201                           ; BSR set to: 0
 38202  00236C  0100               	movlb	0	; () banked
 38203  00236E  819E               	bsf	___fldiv@bexp& (0+255),0,b
 38204  002370                     l13547:
 38205                           
 38206                           ; BSR set to: 0
 38207  002370  0100               	movlb	0	; () banked
 38208  002372  519E               	movf	___fldiv@bexp& (0+255),w,b
 38209  002374  0100               	movlb	0	; () banked
 38210  002376  B4D8               	btfsc	status,2,c
 38211  002378  D012               	goto	l13557
 38212                           
 38213                           ; BSR set to: 0
 38214  00237A  0100               	movlb	0	; () banked
 38215  00237C  299E               	incf	___fldiv@bexp& (0+255),w,b
 38216  00237E  A4D8               	btfss	status,2,c
 38217  002380  D009               	goto	l13553
 38218                           
 38219                           ; BSR set to: 0
 38220  002382  0E00               	movlw	0
 38221  002384  0100               	movlb	0	; () banked
 38222  002386  6F87               	movwf	___fldiv@b& (0+255),b
 38223  002388  0E00               	movlw	0
 38224  00238A  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38225  00238C  0E00               	movlw	0
 38226  00238E  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38227  002390  0E00               	movlw	0
 38228  002392  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38229  002394                     l13553:
 38230                           
 38231                           ; BSR set to: 0
 38232  002394  0100               	movlb	0	; () banked
 38233  002396  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 38234                           
 38235                           ; BSR set to: 0
 38236  002398  0E00               	movlw	0
 38237  00239A  0100               	movlb	0	; () banked
 38238  00239C  D008               	goto	L31
 38239  00239E                     l13557:
 38240                           
 38241                           ; BSR set to: 0
 38242  00239E  0E00               	movlw	0
 38243  0023A0  0100               	movlb	0	; () banked
 38244  0023A2  6F87               	movwf	___fldiv@b& (0+255),b
 38245  0023A4  0E00               	movlw	0
 38246  0023A6  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38247  0023A8  0E00               	movlw	0
 38248  0023AA  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38249  0023AC  0E00               	movlw	0
 38250  0023AE                     L31:
 38251  0023AE  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38252                           
 38253                           ; BSR set to: 0
 38254                           
 38255                           ; BSR set to: 0
 38256  0023B0  0100               	movlb	0	; () banked
 38257  0023B2  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38258  0023B4  0B80               	andlw	128
 38259  0023B6  0100               	movlb	0	; () banked
 38260  0023B8  1B93               	xorwf	___fldiv@sign& (0+255),f,b
 38261                           
 38262                           ; BSR set to: 0
 38263  0023BA  0100               	movlb	0	; () banked
 38264  0023BC  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38265  0023BE  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 38266  0023C0  0100               	movlb	0	; () banked
 38267  0023C2  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38268                           
 38269                           ; BSR set to: 0
 38270  0023C4  0100               	movlb	0	; () banked
 38271  0023C6  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
 38272  0023C8  D002               	goto	l13567
 38273                           
 38274                           ; BSR set to: 0
 38275  0023CA  0100               	movlb	0	; () banked
 38276  0023CC  819F               	bsf	___fldiv@aexp& (0+255),0,b
 38277  0023CE                     l13567:
 38278                           
 38279                           ; BSR set to: 0
 38280  0023CE  0100               	movlb	0	; () banked
 38281  0023D0  519F               	movf	___fldiv@aexp& (0+255),w,b
 38282  0023D2  0100               	movlb	0	; () banked
 38283  0023D4  B4D8               	btfsc	status,2,c
 38284  0023D6  D012               	goto	l13577
 38285                           
 38286                           ; BSR set to: 0
 38287  0023D8  0100               	movlb	0	; () banked
 38288  0023DA  299F               	incf	___fldiv@aexp& (0+255),w,b
 38289  0023DC  A4D8               	btfss	status,2,c
 38290  0023DE  D009               	goto	l13573
 38291                           
 38292                           ; BSR set to: 0
 38293  0023E0  0E00               	movlw	0
 38294  0023E2  0100               	movlb	0	; () banked
 38295  0023E4  6F8B               	movwf	___fldiv@a& (0+255),b
 38296  0023E6  0E00               	movlw	0
 38297  0023E8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 38298  0023EA  0E00               	movlw	0
 38299  0023EC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 38300  0023EE  0E00               	movlw	0
 38301  0023F0  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 38302  0023F2                     l13573:
 38303                           
 38304                           ; BSR set to: 0
 38305  0023F2  0100               	movlb	0	; () banked
 38306  0023F4  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 38307                           
 38308                           ; BSR set to: 0
 38309  0023F6  0E00               	movlw	0
 38310  0023F8  0100               	movlb	0	; () banked
 38311  0023FA  D008               	goto	L32
 38312  0023FC                     l13577:
 38313                           
 38314                           ; BSR set to: 0
 38315  0023FC  0E00               	movlw	0
 38316  0023FE  0100               	movlb	0	; () banked
 38317  002400  6F8B               	movwf	___fldiv@a& (0+255),b
 38318  002402  0E00               	movlw	0
 38319  002404  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 38320  002406  0E00               	movlw	0
 38321  002408  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 38322  00240A  0E00               	movlw	0
 38323  00240C                     L32:
 38324  00240C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 38325                           
 38326                           ; BSR set to: 0
 38327                           
 38328                           ; BSR set to: 0
 38329  00240E  0100               	movlb	0	; () banked
 38330  002410  518B               	movf	___fldiv@a& (0+255),w,b
 38331  002412  0100               	movlb	0	; () banked
 38332  002414  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 38333  002416  0100               	movlb	0	; () banked
 38334  002418  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 38335  00241A  0100               	movlb	0	; () banked
 38336  00241C  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 38337  00241E  A4D8               	btfss	status,2,c
 38338  002420  D017               	goto	l13589
 38339                           
 38340                           ; BSR set to: 0
 38341  002422  0E00               	movlw	0
 38342  002424  0100               	movlb	0	; () banked
 38343  002426  6F87               	movwf	___fldiv@b& (0+255),b
 38344  002428  0E00               	movlw	0
 38345  00242A  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38346  00242C  0E00               	movlw	0
 38347  00242E  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38348  002430  0E00               	movlw	0
 38349  002432  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38350                           
 38351                           ; BSR set to: 0
 38352  002434  0100               	movlb	0	; () banked
 38353  002436  0E80               	movlw	128
 38354  002438  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 38355  00243A  0E7F               	movlw	127
 38356  00243C  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 38357                           
 38358                           ; BSR set to: 0
 38359  00243E  C087  F087         	movff	___fldiv@b,?___fldiv
 38360  002442  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 38361  002446  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 38362  00244A  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 38363                           
 38364                           ; BSR set to: 0
 38365  00244E  0012               	return	
 38366  002450                     l13589:
 38367                           
 38368                           ; BSR set to: 0
 38369  002450  0100               	movlb	0	; () banked
 38370  002452  519E               	movf	___fldiv@bexp& (0+255),w,b
 38371  002454  0100               	movlb	0	; () banked
 38372  002456  A4D8               	btfss	status,2,c
 38373  002458  D012               	goto	l13597
 38374                           
 38375                           ; BSR set to: 0
 38376  00245A  0E00               	movlw	0
 38377  00245C  0100               	movlb	0	; () banked
 38378  00245E  6F87               	movwf	___fldiv@b& (0+255),b
 38379  002460  0E00               	movlw	0
 38380  002462  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38381  002464  0E00               	movlw	0
 38382  002466  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38383  002468  0E00               	movlw	0
 38384  00246A  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38385                           
 38386                           ; BSR set to: 0
 38387  00246C  C087  F087         	movff	___fldiv@b,?___fldiv
 38388  002470  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 38389  002474  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 38390  002478  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 38391                           
 38392                           ; BSR set to: 0
 38393  00247C  0012               	return	
 38394  00247E                     l13597:
 38395                           
 38396                           ; BSR set to: 0
 38397  00247E  0100               	movlb	0	; () banked
 38398  002480  519F               	movf	___fldiv@aexp& (0+255),w,b
 38399  002482  0100               	movlb	0	; () banked
 38400  002484  6F8F               	movwf	??___fldiv& (0+255),b
 38401  002486  6B90               	clrf	(??___fldiv+1)& (0+255),b
 38402  002488  0100               	movlb	0	; () banked
 38403  00248A  1F8F               	comf	??___fldiv& (0+255),f,b
 38404  00248C  1F90               	comf	(??___fldiv+1)& (0+255),f,b
 38405  00248E  4B8F               	infsnz	??___fldiv& (0+255),f,b
 38406  002490  2B90               	incf	(??___fldiv+1)& (0+255),f,b
 38407  002492  0100               	movlb	0	; () banked
 38408  002494  519E               	movf	___fldiv@bexp& (0+255),w,b
 38409  002496  0100               	movlb	0	; () banked
 38410  002498  6F91               	movwf	(??___fldiv+2)& (0+255),b
 38411  00249A  6B92               	clrf	(??___fldiv+3)& (0+255),b
 38412  00249C  0100               	movlb	0	; () banked
 38413  00249E  518F               	movf	??___fldiv& (0+255),w,b
 38414  0024A0  0100               	movlb	0	; () banked
 38415  0024A2  2791               	addwf	(??___fldiv+2)& (0+255),f,b
 38416  0024A4  0100               	movlb	0	; () banked
 38417  0024A6  5190               	movf	(??___fldiv+1)& (0+255),w,b
 38418  0024A8  0100               	movlb	0	; () banked
 38419  0024AA  2392               	addwfc	(??___fldiv+3)& (0+255),f,b
 38420  0024AC  0E7F               	movlw	127
 38421  0024AE  0100               	movlb	0	; () banked
 38422  0024B0  2591               	addwf	(??___fldiv+2)& (0+255),w,b
 38423  0024B2  0100               	movlb	0	; () banked
 38424  0024B4  6F98               	movwf	___fldiv@new_exp& (0+255),b
 38425  0024B6  0E00               	movlw	0
 38426  0024B8  0100               	movlb	0	; () banked
 38427  0024BA  2192               	addwfc	(??___fldiv+3)& (0+255),w,b
 38428  0024BC  0100               	movlb	0	; () banked
 38429  0024BE  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 38430                           
 38431                           ; BSR set to: 0
 38432  0024C0  C087  F094         	movff	___fldiv@b,___fldiv@rem
 38433  0024C4  C088  F095         	movff	___fldiv@b+1,___fldiv@rem+1
 38434  0024C8  C089  F096         	movff	___fldiv@b+2,___fldiv@rem+2
 38435  0024CC  C08A  F097         	movff	___fldiv@b+3,___fldiv@rem+3
 38436                           
 38437                           ; BSR set to: 0
 38438  0024D0  0E00               	movlw	0
 38439  0024D2  0100               	movlb	0	; () banked
 38440  0024D4  6F87               	movwf	___fldiv@b& (0+255),b
 38441  0024D6  0E00               	movlw	0
 38442  0024D8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38443  0024DA  0E00               	movlw	0
 38444  0024DC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38445  0024DE  0E00               	movlw	0
 38446  0024E0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38447                           
 38448                           ; BSR set to: 0
 38449  0024E2  0E00               	movlw	0
 38450  0024E4  0100               	movlb	0	; () banked
 38451  0024E6  6F9A               	movwf	___fldiv@grs& (0+255),b
 38452  0024E8  0E00               	movlw	0
 38453  0024EA  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
 38454  0024EC  0E00               	movlw	0
 38455  0024EE  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
 38456  0024F0  0E00               	movlw	0
 38457  0024F2  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
 38458                           
 38459                           ; BSR set to: 0
 38460  0024F4  0E00               	movlw	0
 38461  0024F6  0100               	movlb	0	; () banked
 38462  0024F8  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38463  0024FA  D042               	goto	l2883
 38464  0024FC                     l13607:
 38465                           
 38466                           ; BSR set to: 0
 38467  0024FC  0100               	movlb	0	; () banked
 38468  0024FE  519F               	movf	___fldiv@aexp& (0+255),w,b
 38469  002500  0100               	movlb	0	; () banked
 38470  002502  B4D8               	btfsc	status,2,c
 38471  002504  D017               	goto	l13615
 38472                           
 38473                           ; BSR set to: 0
 38474  002506  0100               	movlb	0	; () banked
 38475  002508  90D8               	bcf	status,0,c
 38476  00250A  3794               	rlcf	___fldiv@rem& (0+255),f,b
 38477  00250C  3795               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 38478  00250E  3796               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 38479  002510  3797               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 38480  002512  0100               	movlb	0	; () banked
 38481  002514  90D8               	bcf	status,0,c
 38482  002516  3787               	rlcf	___fldiv@b& (0+255),f,b
 38483  002518  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 38484  00251A  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 38485  00251C  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 38486                           
 38487                           ; BSR set to: 0
 38488  00251E  0100               	movlb	0	; () banked
 38489  002520  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 38490  002522  D002               	goto	l2886
 38491                           
 38492                           ; BSR set to: 0
 38493  002524  0100               	movlb	0	; () banked
 38494  002526  8187               	bsf	___fldiv@b& (0+255),0,b
 38495  002528                     l2886:
 38496                           
 38497                           ; BSR set to: 0
 38498  002528  0100               	movlb	0	; () banked
 38499  00252A  90D8               	bcf	status,0,c
 38500  00252C  379A               	rlcf	___fldiv@grs& (0+255),f,b
 38501  00252E  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 38502  002530  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 38503  002532  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 38504  002534                     l13615:
 38505                           
 38506                           ; BSR set to: 0
 38507  002534  0100               	movlb	0	; () banked
 38508  002536  518B               	movf	___fldiv@a& (0+255),w,b
 38509  002538  0100               	movlb	0	; () banked
 38510  00253A  5D94               	subwf	___fldiv@rem& (0+255),w,b
 38511  00253C  0100               	movlb	0	; () banked
 38512  00253E  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 38513  002540  0100               	movlb	0	; () banked
 38514  002542  5995               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 38515  002544  0100               	movlb	0	; () banked
 38516  002546  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 38517  002548  0100               	movlb	0	; () banked
 38518  00254A  5996               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 38519  00254C  0100               	movlb	0	; () banked
 38520  00254E  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38521  002550  0100               	movlb	0	; () banked
 38522  002552  5997               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 38523  002554  A0D8               	btfss	status,0,c
 38524  002556  D012               	goto	l13621
 38525                           
 38526                           ; BSR set to: 0
 38527  002558  0100               	movlb	0	; () banked
 38528  00255A  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 38529                           
 38530                           ; BSR set to: 0
 38531  00255C  0100               	movlb	0	; () banked
 38532  00255E  518B               	movf	___fldiv@a& (0+255),w,b
 38533  002560  0100               	movlb	0	; () banked
 38534  002562  5F94               	subwf	___fldiv@rem& (0+255),f,b
 38535  002564  0100               	movlb	0	; () banked
 38536  002566  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 38537  002568  0100               	movlb	0	; () banked
 38538  00256A  5B95               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 38539  00256C  0100               	movlb	0	; () banked
 38540  00256E  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 38541  002570  0100               	movlb	0	; () banked
 38542  002572  5B96               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 38543  002574  0100               	movlb	0	; () banked
 38544  002576  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38545  002578  0100               	movlb	0	; () banked
 38546  00257A  5B97               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 38547  00257C                     l13621:
 38548                           
 38549                           ; BSR set to: 0
 38550  00257C  0100               	movlb	0	; () banked
 38551  00257E  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 38552  002580                     l2883:
 38553                           
 38554                           ; BSR set to: 0
 38555  002580  0E19               	movlw	25
 38556  002582  0100               	movlb	0	; () banked
 38557  002584  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 38558  002586  D7BA               	goto	l13607
 38559                           
 38560                           ; BSR set to: 0
 38561                           
 38562                           ; BSR set to: 0
 38563  002588  0100               	movlb	0	; () banked
 38564  00258A  5194               	movf	___fldiv@rem& (0+255),w,b
 38565  00258C  0100               	movlb	0	; () banked
 38566  00258E  1195               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 38567  002590  0100               	movlb	0	; () banked
 38568  002592  1196               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 38569  002594  0100               	movlb	0	; () banked
 38570  002596  1197               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 38571  002598  B4D8               	btfsc	status,2,c
 38572  00259A  D018               	goto	l13633
 38573                           
 38574                           ; BSR set to: 0
 38575  00259C  0100               	movlb	0	; () banked
 38576  00259E  819A               	bsf	___fldiv@grs& (0+255),0,b
 38577                           
 38578                           ; BSR set to: 0
 38579  0025A0  D015               	goto	l13633
 38580  0025A2                     l13627:
 38581                           
 38582                           ; BSR set to: 0
 38583  0025A2  0100               	movlb	0	; () banked
 38584  0025A4  90D8               	bcf	status,0,c
 38585  0025A6  3787               	rlcf	___fldiv@b& (0+255),f,b
 38586  0025A8  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 38587  0025AA  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 38588  0025AC  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 38589                           
 38590                           ; BSR set to: 0
 38591  0025AE  0100               	movlb	0	; () banked
 38592  0025B0  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 38593  0025B2  D002               	goto	l2892
 38594                           
 38595                           ; BSR set to: 0
 38596  0025B4  0100               	movlb	0	; () banked
 38597  0025B6  8187               	bsf	___fldiv@b& (0+255),0,b
 38598  0025B8                     l2892:
 38599                           
 38600                           ; BSR set to: 0
 38601  0025B8  0100               	movlb	0	; () banked
 38602  0025BA  90D8               	bcf	status,0,c
 38603  0025BC  379A               	rlcf	___fldiv@grs& (0+255),f,b
 38604  0025BE  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 38605  0025C0  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 38606  0025C2  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 38607  0025C4  0100               	movlb	0	; () banked
 38608  0025C6  0798               	decf	___fldiv@new_exp& (0+255),f,b
 38609  0025C8  A0D8               	btfss	status,0,c
 38610  0025CA  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 38611  0025CC                     l13633:
 38612                           
 38613                           ; BSR set to: 0
 38614  0025CC  0100               	movlb	0	; () banked
 38615  0025CE  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 38616  0025D0  D7E8               	goto	l13627
 38617                           
 38618                           ; BSR set to: 0
 38619                           
 38620                           ; BSR set to: 0
 38621  0025D2  0E00               	movlw	0
 38622  0025D4  0100               	movlb	0	; () banked
 38623  0025D6  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38624                           
 38625                           ; BSR set to: 0
 38626  0025D8  0100               	movlb	0	; () banked
 38627  0025DA  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 38628  0025DC  D024               	goto	l2894
 38629                           
 38630                           ; BSR set to: 0
 38631  0025DE  0EFF               	movlw	255
 38632  0025E0  0100               	movlb	0	; () banked
 38633  0025E2  159A               	andwf	___fldiv@grs& (0+255),w,b
 38634  0025E4  0100               	movlb	0	; () banked
 38635  0025E6  6F8F               	movwf	??___fldiv& (0+255),b
 38636  0025E8  0EFF               	movlw	255
 38637  0025EA  0100               	movlb	0	; () banked
 38638  0025EC  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 38639  0025EE  0100               	movlb	0	; () banked
 38640  0025F0  6F90               	movwf	(??___fldiv+1)& (0+255),b
 38641  0025F2  0EFF               	movlw	255
 38642  0025F4  0100               	movlb	0	; () banked
 38643  0025F6  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 38644  0025F8  0100               	movlb	0	; () banked
 38645  0025FA  6F91               	movwf	(??___fldiv+2)& (0+255),b
 38646  0025FC  0E7F               	movlw	127
 38647  0025FE  0100               	movlb	0	; () banked
 38648  002600  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 38649  002602  0100               	movlb	0	; () banked
 38650  002604  6F92               	movwf	(??___fldiv+3)& (0+255),b
 38651  002606  0100               	movlb	0	; () banked
 38652  002608  518F               	movf	??___fldiv& (0+255),w,b
 38653  00260A  0100               	movlb	0	; () banked
 38654  00260C  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 38655  00260E  0100               	movlb	0	; () banked
 38656  002610  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 38657  002612  0100               	movlb	0	; () banked
 38658  002614  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 38659  002616  A4D8               	btfss	status,2,c
 38660  002618  D003               	goto	l13643
 38661                           
 38662                           ; BSR set to: 0
 38663                           
 38664                           ; BSR set to: 0
 38665  00261A  0100               	movlb	0	; () banked
 38666  00261C  A187               	btfss	___fldiv@b& (0+255),0,b
 38667  00261E  D003               	goto	l2894
 38668  002620                     l13643:
 38669                           
 38670                           ; BSR set to: 0
 38671  002620  0E01               	movlw	1
 38672  002622  0100               	movlb	0	; () banked
 38673  002624  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38674  002626                     l2894:
 38675                           
 38676                           ; BSR set to: 0
 38677  002626  0100               	movlb	0	; () banked
 38678  002628  519F               	movf	___fldiv@aexp& (0+255),w,b
 38679  00262A  0100               	movlb	0	; () banked
 38680  00262C  B4D8               	btfsc	status,2,c
 38681  00262E  D023               	goto	l13653
 38682                           
 38683                           ; BSR set to: 0
 38684  002630  0E01               	movlw	1
 38685  002632  0100               	movlb	0	; () banked
 38686  002634  2787               	addwf	___fldiv@b& (0+255),f,b
 38687  002636  0E00               	movlw	0
 38688  002638  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 38689  00263A  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 38690  00263C  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 38691                           
 38692                           ; BSR set to: 0
 38693  00263E  0100               	movlb	0	; () banked
 38694  002640  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 38695  002642  D019               	goto	l13653
 38696                           
 38697                           ; BSR set to: 0
 38698  002644  C087  F08F         	movff	___fldiv@b,??___fldiv
 38699  002648  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
 38700  00264C  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
 38701  002650  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
 38702  002654  0100               	movlb	0	; () banked
 38703  002656  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
 38704  002658  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
 38705  00265A  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
 38706  00265C  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
 38707  00265E  338F               	rrcf	??___fldiv& (0+255),f,b
 38708  002660  C08F  F087         	movff	??___fldiv,___fldiv@b
 38709  002664  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
 38710  002668  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
 38711  00266C  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
 38712                           
 38713                           ; BSR set to: 0
 38714  002670  0100               	movlb	0	; () banked
 38715  002672  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 38716  002674  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 38717  002676                     l13653:
 38718                           
 38719                           ; BSR set to: 0
 38720  002676  0100               	movlb	0	; () banked
 38721  002678  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 38722  00267A  D014               	goto	l13657
 38723  00267C  0100               	movlb	0	; () banked
 38724  00267E  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 38725  002680  E104               	bnz	u12190
 38726  002682  0100               	movlb	0	; () banked
 38727  002684  2998               	incf	___fldiv@new_exp& (0+255),w,b
 38728  002686  A0D8               	btfss	status,0,c
 38729  002688  D00D               	goto	l13657
 38730  00268A                     u12190:
 38731                           
 38732                           ; BSR set to: 0
 38733  00268A  0E00               	movlw	0
 38734  00268C  0100               	movlb	0	; () banked
 38735  00268E  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 38736  002690  6998               	setf	___fldiv@new_exp& (0+255),b
 38737  002692  0E00               	movlw	0
 38738  002694  0100               	movlb	0	; () banked
 38739  002696  6F87               	movwf	___fldiv@b& (0+255),b
 38740  002698  0E00               	movlw	0
 38741  00269A  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38742  00269C  0E00               	movlw	0
 38743  00269E  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38744  0026A0  0E00               	movlw	0
 38745  0026A2  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38746  0026A4                     l13657:
 38747                           
 38748                           ; BSR set to: 0
 38749  0026A4  0100               	movlb	0	; () banked
 38750  0026A6  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 38751  0026A8  D007               	goto	l13659
 38752  0026AA  0100               	movlb	0	; () banked
 38753  0026AC  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 38754  0026AE  E115               	bnz	l13661
 38755  0026B0  0100               	movlb	0	; () banked
 38756  0026B2  0598               	decf	___fldiv@new_exp& (0+255),w,b
 38757  0026B4  B0D8               	btfsc	status,0,c
 38758  0026B6  D011               	goto	l13661
 38759  0026B8                     l13659:
 38760                           
 38761                           ; BSR set to: 0
 38762  0026B8  0E00               	movlw	0
 38763  0026BA  0100               	movlb	0	; () banked
 38764  0026BC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 38765  0026BE  0E00               	movlw	0
 38766  0026C0  6F98               	movwf	___fldiv@new_exp& (0+255),b
 38767  0026C2  0E00               	movlw	0
 38768  0026C4  0100               	movlb	0	; () banked
 38769  0026C6  6F87               	movwf	___fldiv@b& (0+255),b
 38770  0026C8  0E00               	movlw	0
 38771  0026CA  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38772  0026CC  0E00               	movlw	0
 38773  0026CE  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38774  0026D0  0E00               	movlw	0
 38775  0026D2  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38776  0026D4  0E00               	movlw	0
 38777  0026D6  0100               	movlb	0	; () banked
 38778  0026D8  6F93               	movwf	___fldiv@sign& (0+255),b
 38779  0026DA                     l13661:
 38780                           
 38781                           ; BSR set to: 0
 38782  0026DA  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 38783                           
 38784                           ; BSR set to: 0
 38785  0026DE  0100               	movlb	0	; () banked
 38786  0026E0  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 38787  0026E2  D003               	goto	l13667
 38788                           
 38789                           ; BSR set to: 0
 38790  0026E4  0100               	movlb	0	; () banked
 38791  0026E6  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 38792  0026E8  D002               	goto	l13669
 38793  0026EA                     l13667:
 38794                           
 38795                           ; BSR set to: 0
 38796  0026EA  0100               	movlb	0	; () banked
 38797  0026EC  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 38798  0026EE                     l13669:
 38799                           
 38800                           ; BSR set to: 0
 38801  0026EE  0100               	movlb	0	; () banked
 38802  0026F0  90D8               	bcf	status,0,c
 38803  0026F2  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 38804  0026F4  0100               	movlb	0	; () banked
 38805  0026F6  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38806                           
 38807                           ; BSR set to: 0
 38808  0026F8  0100               	movlb	0	; () banked
 38809  0026FA  5193               	movf	___fldiv@sign& (0+255),w,b
 38810  0026FC  0100               	movlb	0	; () banked
 38811  0026FE  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 38812                           
 38813                           ; BSR set to: 0
 38814  002700  C087  F087         	movff	___fldiv@b,?___fldiv
 38815  002704  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 38816  002708  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 38817  00270C  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 38818  002710  0012               	return	
 38819  002712                     __end_of___fldiv:
 38820                           	opt stack 0
 38821                           tosu	equ	0xFFF
 38822                           tosh	equ	0xFFE
 38823                           tosl	equ	0xFFD
 38824                           pclath	equ	0xFFA
 38825                           tblptru	equ	0xFF8
 38826                           tblptrh	equ	0xFF7
 38827                           tblptrl	equ	0xFF6
 38828                           tablat	equ	0xFF5
 38829                           prodh	equ	0xFF4
 38830                           prodl	equ	0xFF3
 38831                           intcon	equ	0xFF2
 38832                           indf0	equ	0xFEF
 38833                           postinc0	equ	0xFEE
 38834                           fsr0h	equ	0xFEA
 38835                           fsr0l	equ	0xFE9
 38836                           wreg	equ	0xFE8
 38837                           indf1	equ	0xFE7
 38838                           postinc1	equ	0xFE6
 38839                           postdec1	equ	0xFE5
 38840                           plusw1	equ	0xFE3
 38841                           fsr1h	equ	0xFE2
 38842                           fsr1l	equ	0xFE1
 38843                           indf2	equ	0xFDF
 38844                           postinc2	equ	0xFDE
 38845                           postdec2	equ	0xFDD
 38846                           plusw2	equ	0xFDB
 38847                           fsr2h	equ	0xFDA
 38848                           fsr2l	equ	0xFD9
 38849                           status	equ	0xFD8
 38850                           
 38851 ;; *************** function _calib_data_init_pr *****************
 38852 ;; Defined at:
 38853 ;;		line 283 in file "src/api/data.c"
 38854 ;; Parameters:    Size  Location     Type
 38855 ;;		None
 38856 ;; Auto vars:     Size  Location     Type
 38857 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 38858 ;;		 -> prCalibTabDef(162), 
 38859 ;;  t16             2   23[BANK0 ] unsigned int 
 38860 ;;  ret             1   22[BANK0 ] unsigned char 
 38861 ;; Return value:  Size  Location     Type
 38862 ;;                  1    wreg      unsigned char 
 38863 ;; Registers used:
 38864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38865 ;; Tracked objects:
 38866 ;;		On entry : 0/0
 38867 ;;		On exit  : 0/0
 38868 ;;		Unchanged: 0/0
 38869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38871 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38873 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38874 ;;Total ram usage:        5 bytes
 38875 ;; Hardware stack levels used:    1
 38876 ;; Hardware stack levels required when called:    9
 38877 ;; This function calls:
 38878 ;;		_at24c02_init
 38879 ;;		_at24c02_read_n_byte
 38880 ;;		_at24c02_write_n_byte
 38881 ;;		_calib_data_set_default_pr
 38882 ;;		_crc_append
 38883 ;;		_crc_verify
 38884 ;; This function is called by:
 38885 ;;		_data_init_all
 38886 ;; This function uses a non-reentrant model
 38887 ;;
 38888                           
 38889                           	psect	text195
 38890  00574E                     __ptext195:
 38891                           	opt stack 0
 38892  00574E                     _calib_data_init_pr:
 38893                           	opt stack 20
 38894                           
 38895                           ;data.c: 285: uint8_t ret=0;
 38896                           
 38897                           ; BSR set to: 0
 38898                           ;incstack = 0
 38899  00574E  0E00               	movlw	0
 38900  005750  0100               	movlb	0	; () banked
 38901  005752  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 38902                           
 38903                           ; BSR set to: 0
 38904                           ;data.c: 286: uint16_t t16;
 38905                           ;data.c: 287: uint8_t* buf=(uint8_t*)(&prCalibTabDef);
 38906  005754  0E00               	movlw	low _prCalibTabDef
 38907  005756  0100               	movlb	0	; () banked
 38908  005758  6F79               	movwf	calib_data_init_pr@buf& (0+255),b
 38909  00575A  0E04               	movlw	high _prCalibTabDef
 38910  00575C  0100               	movlb	0	; () banked
 38911  00575E  6F7A               	movwf	(calib_data_init_pr@buf+1)& (0+255),b
 38912                           
 38913                           ; BSR set to: 0
 38914                           ;data.c: 289: p_prEepromObj=&at24c02Ch0;
 38915  005760  0E80               	movlw	low _at24c02Ch0
 38916  005762  6E27               	movwf	_p_prEepromObj,c
 38917  005764  0E01               	movlw	high _at24c02Ch0
 38918  005766  6E28               	movwf	_p_prEepromObj+1,c
 38919                           
 38920                           ; BSR set to: 0
 38921                           ;data.c: 290: at24c02_init(p_prEepromObj,0xaa);
 38922  005768  C027  F060         	movff	_p_prEepromObj,at24c02_init@pAt24c02
 38923  00576C  C028  F061         	movff	_p_prEepromObj+1,at24c02_init@pAt24c02+1
 38924  005770  0EAA               	movlw	170
 38925  005772  0100               	movlb	0	; () banked
 38926  005774  6F62               	movwf	at24c02_init@slv& (0+255),b
 38927  005776  ECCC  F042         	call	_at24c02_init	;wreg free
 38928                           
 38929                           ;data.c: 291: t16=sizeof(prCalibTabDef);
 38930  00577A  0E00               	movlw	0
 38931  00577C  0100               	movlb	0	; () banked
 38932  00577E  6F78               	movwf	(calib_data_init_pr@t16+1)& (0+255),b
 38933  005780  0EA2               	movlw	162
 38934  005782  6F77               	movwf	calib_data_init_pr@t16& (0+255),b
 38935                           
 38936                           ; BSR set to: 0
 38937                           ;data.c: 292: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 38938  005784  C027  F068         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 38939  005788  C028  F069         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 38940  00578C  0E00               	movlw	0
 38941  00578E  0100               	movlb	0	; () banked
 38942  005790  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 38943  005792  C079  F06B         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 38944  005796  C07A  F06C         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 38945  00579A  C077  F06D         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 38946  00579E  C078  F06E         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 38947  0057A2  ECB8  F022         	call	_at24c02_read_n_byte	;wreg free
 38948                           
 38949                           ;data.c: 293: ret=crc_verify(buf,t16);
 38950  0057A6  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 38951  0057AA  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 38952  0057AE  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 38953  0057B2  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 38954  0057B6  EC45  F041         	call	_crc_verify	;wreg free
 38955  0057BA  0100               	movlb	0	; () banked
 38956  0057BC  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 38957                           
 38958                           ; BSR set to: 0
 38959                           ;data.c: 294: if(!ret){
 38960  0057BE  0100               	movlb	0	; () banked
 38961  0057C0  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 38962  0057C2  0100               	movlb	0	; () banked
 38963  0057C4  A4D8               	btfss	status,2,c
 38964  0057C6  0012               	return	
 38965                           
 38966                           ; BSR set to: 0
 38967                           ;data.c: 295: calib_data_set_default_pr();
 38968  0057C8  ECF8  F020         	call	_calib_data_set_default_pr	;wreg free
 38969                           
 38970                           ;data.c: 296: crc_append(buf,t16-2);
 38971  0057CC  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 38972  0057D0  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 38973  0057D4  0EFE               	movlw	254
 38974  0057D6  0100               	movlb	0	; () banked
 38975  0057D8  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 38976  0057DA  0100               	movlb	0	; () banked
 38977  0057DC  6F6E               	movwf	crc_append@n& (0+255),b
 38978  0057DE  0EFF               	movlw	255
 38979  0057E0  0100               	movlb	0	; () banked
 38980  0057E2  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 38981  0057E4  0100               	movlb	0	; () banked
 38982  0057E6  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 38983  0057E8  EC89  F047         	call	_crc_append	;wreg free
 38984                           
 38985                           ;data.c: 297: at24c02_write_n_byte(p_prEepromObj,0,buf,t16);
 38986  0057EC  C027  F066         	movff	_p_prEepromObj,at24c02_write_n_byte@pAt24c02
 38987  0057F0  C028  F067         	movff	_p_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 38988  0057F4  0E00               	movlw	0
 38989  0057F6  0100               	movlb	0	; () banked
 38990  0057F8  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 38991  0057FA  C079  F069         	movff	calib_data_init_pr@buf,at24c02_write_n_byte@buf
 38992  0057FE  C07A  F06A         	movff	calib_data_init_pr@buf+1,at24c02_write_n_byte@buf+1
 38993  005802  C077  F06B         	movff	calib_data_init_pr@t16,at24c02_write_n_byte@len
 38994  005806  C078  F06C         	movff	calib_data_init_pr@t16+1,at24c02_write_n_byte@len+1
 38995  00580A  ECEF  F02D         	call	_at24c02_write_n_byte	;wreg free
 38996                           
 38997                           ;data.c: 298: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 38998  00580E  C027  F068         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 38999  005812  C028  F069         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 39000  005816  0E00               	movlw	0
 39001  005818  0100               	movlb	0	; () banked
 39002  00581A  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 39003  00581C  C079  F06B         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 39004  005820  C07A  F06C         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 39005  005824  C077  F06D         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 39006  005828  C078  F06E         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 39007  00582C  ECB8  F022         	call	_at24c02_read_n_byte	;wreg free
 39008                           
 39009                           ;data.c: 299: ret=crc_verify(buf,t16);
 39010  005830  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 39011  005834  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 39012  005838  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 39013  00583C  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 39014  005840  EC45  F041         	call	_crc_verify	;wreg free
 39015  005844  0100               	movlb	0	; () banked
 39016  005846  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 39017                           
 39018                           ; BSR set to: 0
 39019                           ;data.c: 300: if(!ret){
 39020  005848  0100               	movlb	0	; () banked
 39021  00584A  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 39022  00584C  0100               	movlb	0	; () banked
 39023  00584E  A4D8               	btfss	status,2,c
 39024  005850  0012               	return	
 39025                           
 39026                           ; BSR set to: 0
 39027                           ;data.c: 301: calib_data_set_default_pr();
 39028  005852  ECF8  F020         	call	_calib_data_set_default_pr	;wreg free
 39029                           
 39030                           ;data.c: 302: crc_append(buf,t16-2);
 39031  005856  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 39032  00585A  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 39033  00585E  0EFE               	movlw	254
 39034  005860  0100               	movlb	0	; () banked
 39035  005862  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 39036  005864  0100               	movlb	0	; () banked
 39037  005866  6F6E               	movwf	crc_append@n& (0+255),b
 39038  005868  0EFF               	movlw	255
 39039  00586A  0100               	movlb	0	; () banked
 39040  00586C  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 39041  00586E  0100               	movlb	0	; () banked
 39042  005870  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 39043  005872  EC89  F047         	call	_crc_append	;wreg free
 39044  005876  0012               	return	
 39045  005878                     __end_of_calib_data_init_pr:
 39046                           	opt stack 0
 39047                           tosu	equ	0xFFF
 39048                           tosh	equ	0xFFE
 39049                           tosl	equ	0xFFD
 39050                           pclath	equ	0xFFA
 39051                           tblptru	equ	0xFF8
 39052                           tblptrh	equ	0xFF7
 39053                           tblptrl	equ	0xFF6
 39054                           tablat	equ	0xFF5
 39055                           prodh	equ	0xFF4
 39056                           prodl	equ	0xFF3
 39057                           intcon	equ	0xFF2
 39058                           indf0	equ	0xFEF
 39059                           postinc0	equ	0xFEE
 39060                           fsr0h	equ	0xFEA
 39061                           fsr0l	equ	0xFE9
 39062                           wreg	equ	0xFE8
 39063                           indf1	equ	0xFE7
 39064                           postinc1	equ	0xFE6
 39065                           postdec1	equ	0xFE5
 39066                           plusw1	equ	0xFE3
 39067                           fsr1h	equ	0xFE2
 39068                           fsr1l	equ	0xFE1
 39069                           indf2	equ	0xFDF
 39070                           postinc2	equ	0xFDE
 39071                           postdec2	equ	0xFDD
 39072                           plusw2	equ	0xFDB
 39073                           fsr2h	equ	0xFDA
 39074                           fsr2l	equ	0xFD9
 39075                           status	equ	0xFD8
 39076                           
 39077 ;; *************** function _calib_data_set_default_pr *****************
 39078 ;; Defined at:
 39079 ;;		line 242 in file "src/api/data.c"
 39080 ;; Parameters:    Size  Location     Type
 39081 ;;		None
 39082 ;; Auto vars:     Size  Location     Type
 39083 ;;  j               1   15[BANK0 ] unsigned char 
 39084 ;;  i               1   14[BANK0 ] unsigned char 
 39085 ;; Return value:  Size  Location     Type
 39086 ;;                  1    wreg      void 
 39087 ;; Registers used:
 39088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39089 ;; Tracked objects:
 39090 ;;		On entry : 0/0
 39091 ;;		On exit  : 0/0
 39092 ;;		Unchanged: 0/0
 39093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39096 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39097 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39098 ;;Total ram usage:        8 bytes
 39099 ;; Hardware stack levels used:    1
 39100 ;; Hardware stack levels required when called:    5
 39101 ;; This function calls:
 39102 ;;		___wmul
 39103 ;; This function is called by:
 39104 ;;		_calib_data_init_pr
 39105 ;; This function uses a non-reentrant model
 39106 ;;
 39107                           
 39108                           	psect	text196
 39109  0041F0                     __ptext196:
 39110                           	opt stack 0
 39111  0041F0                     _calib_data_set_default_pr:
 39112                           	opt stack 23
 39113                           
 39114                           ;data.c: 244: uint8_t i,j;
 39115                           ;data.c: 245: prCalibTabDef.rowCount=1;
 39116                           
 39117                           ;incstack = 0
 39118  0041F0  0E01               	movlw	1
 39119  0041F2  0104               	movlb	4	; () banked
 39120  0041F4  6F00               	movwf	_prCalibTabDef& (0+255),b
 39121                           
 39122                           ;data.c: 246: for(i=0;i<1;i++){
 39123  0041F6  0E00               	movlw	0
 39124  0041F8  0100               	movlb	0	; () banked
 39125  0041FA  6F6E               	movwf	calib_data_set_default_pr@i& (0+255),b
 39126  0041FC  0100               	movlb	0	; () banked
 39127  0041FE  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39128  004200  0100               	movlb	0	; () banked
 39129  004202  A4D8               	btfss	status,2,c
 39130  004204  0012               	return	
 39131                           
 39132                           ; BSR set to: 0
 39133                           ;data.c: 247: prCalibTabDef.prCalibRow[i].pCount=6;
 39134                           
 39135                           ; BSR set to: 0
 39136                           
 39137                           ; BSR set to: 0
 39138  004206  0100               	movlb	0	; () banked
 39139  004208  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39140  00420A  0D34               	mullw	52
 39141  00420C  0E04               	movlw	low (_prCalibTabDef+4)
 39142  00420E  24F3               	addwf	prodl,w,c
 39143  004210  6ED9               	movwf	fsr2l,c
 39144  004212  0E04               	movlw	high (_prCalibTabDef+4)
 39145  004214  20F4               	addwfc	prodh,w,c
 39146  004216  6EDA               	movwf	fsr2h,c
 39147  004218  0E06               	movlw	6
 39148  00421A  6EDF               	movwf	indf2,c
 39149                           
 39150                           ; BSR set to: 0
 39151                           ;data.c: 248: for(j=0;j<6;j++){
 39152  00421C  0E00               	movlw	0
 39153  00421E  0100               	movlb	0	; () banked
 39154  004220  6F6F               	movwf	calib_data_set_default_pr@j& (0+255),b
 39155  004222                     l15681:
 39156                           
 39157                           ; BSR set to: 0
 39158  004222  0E05               	movlw	5
 39159  004224  0100               	movlb	0	; () banked
 39160  004226  656F               	cpfsgt	calib_data_set_default_pr@j& (0+255),b
 39161  004228  D001               	goto	l15685
 39162  00422A  D0C1               	goto	l15693
 39163  00422C                     l15685:
 39164                           
 39165                           ; BSR set to: 0
 39166                           ;data.c: 249: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 39167  00422C  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 39168  004230  0100               	movlb	0	; () banked
 39169  004232  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39170  004234  0E17               	movlw	23
 39171  004236  0100               	movlb	0	; () banked
 39172  004238  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39173  00423A  0E70               	movlw	112
 39174  00423C  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39175  00423E  EC25  F04E         	call	___wmul	;wreg free
 39176  004242  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 39177  004246  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 39178  00424A  C06E  F062         	movff	calib_data_set_default_pr@i,___wmul@multiplier
 39179  00424E  0100               	movlb	0	; () banked
 39180  004250  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39181  004252  0E01               	movlw	1
 39182  004254  0100               	movlb	0	; () banked
 39183  004256  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39184  004258  0EF4               	movlw	244
 39185  00425A  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39186  00425C  EC25  F04E         	call	___wmul	;wreg free
 39187  004260  0100               	movlb	0	; () banked
 39188  004262  5162               	movf	?___wmul& (0+255),w,b
 39189  004264  0100               	movlb	0	; () banked
 39190  004266  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39191  004268  0100               	movlb	0	; () banked
 39192  00426A  5163               	movf	(?___wmul+1)& (0+255),w,b
 39193  00426C  0100               	movlb	0	; () banked
 39194  00426E  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39195  004270  0100               	movlb	0	; () banked
 39196  004272  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 39197  004274  0D08               	mullw	8
 39198  004276  0E04               	movlw	4
 39199  004278  26F3               	addwf	prodl,f,c
 39200  00427A  0E00               	movlw	0
 39201  00427C  22F4               	addwfc	prodh,f,c
 39202  00427E  0E00               	movlw	low _prCalibTabDef
 39203  004280  0100               	movlb	0	; () banked
 39204  004282  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 39205  004284  0E04               	movlw	high _prCalibTabDef
 39206  004286  0100               	movlb	0	; () banked
 39207  004288  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 39208  00428A  0E04               	movlw	4
 39209  00428C  0100               	movlb	0	; () banked
 39210  00428E  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 39211  004290  0E00               	movlw	0
 39212  004292  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 39213  004294  50F3               	movf	prodl,w,c
 39214  004296  0100               	movlb	0	; () banked
 39215  004298  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 39216  00429A  50F4               	movf	prodh,w,c
 39217  00429C  0100               	movlb	0	; () banked
 39218  00429E  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 39219  0042A0  0100               	movlb	0	; () banked
 39220  0042A2  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39221  0042A4  0D34               	mullw	52
 39222  0042A6  50F3               	movf	prodl,w,c
 39223  0042A8  0100               	movlb	0	; () banked
 39224  0042AA  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 39225  0042AC  50F4               	movf	prodh,w,c
 39226  0042AE  0100               	movlb	0	; () banked
 39227  0042B0  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 39228  0042B2  0E04               	movlw	4
 39229  0042B4  0100               	movlb	0	; () banked
 39230  0042B6  256A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),w,b
 39231  0042B8  6ED9               	movwf	fsr2l,c
 39232  0042BA  0E00               	movlw	0
 39233  0042BC  0100               	movlb	0	; () banked
 39234  0042BE  216B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),w,b
 39235  0042C0  6EDA               	movwf	fsr2h,c
 39236  0042C2  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 39237  0042C6  C069  FFDD         	movff	??_calib_data_set_default_pr+1,postdec2
 39238                           
 39239                           ;data.c: 250: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 39240  0042CA  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 39241  0042CE  0100               	movlb	0	; () banked
 39242  0042D0  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39243  0042D2  0E17               	movlw	23
 39244  0042D4  0100               	movlb	0	; () banked
 39245  0042D6  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39246  0042D8  0E70               	movlw	112
 39247  0042DA  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39248  0042DC  EC25  F04E         	call	___wmul	;wreg free
 39249  0042E0  0100               	movlb	0	; () banked
 39250  0042E2  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 39251  0042E6  0100               	movlb	0	; () banked
 39252  0042E8  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 39253  0042EC  0E00               	movlw	0
 39254  0042EE  0100               	movlb	0	; () banked
 39255  0042F0  BF69               	btfsc	(??_calib_data_set_default_pr+1)& (0+255),7,b
 39256  0042F2  0EFF               	movlw	255
 39257  0042F4  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 39258  0042F6  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 39259  0042F8  0100               	movlb	0	; () banked
 39260  0042FA  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 39261  0042FC  0D08               	mullw	8
 39262  0042FE  0E04               	movlw	4
 39263  004300  26F3               	addwf	prodl,f,c
 39264  004302  0E00               	movlw	0
 39265  004304  22F4               	addwfc	prodh,f,c
 39266  004306  0E00               	movlw	low _prCalibTabDef
 39267  004308  0100               	movlb	0	; () banked
 39268  00430A  6F6C               	movwf	(??_calib_data_set_default_pr+4)& (0+255),b
 39269  00430C  0E04               	movlw	high _prCalibTabDef
 39270  00430E  0100               	movlb	0	; () banked
 39271  004310  6F6D               	movwf	(??_calib_data_set_default_pr+5)& (0+255),b
 39272  004312  0E04               	movlw	4
 39273  004314  0100               	movlb	0	; () banked
 39274  004316  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 39275  004318  0E00               	movlw	0
 39276  00431A  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 39277  00431C  50F3               	movf	prodl,w,c
 39278  00431E  0100               	movlb	0	; () banked
 39279  004320  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 39280  004322  50F4               	movf	prodh,w,c
 39281  004324  0100               	movlb	0	; () banked
 39282  004326  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 39283  004328  0100               	movlb	0	; () banked
 39284  00432A  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39285  00432C  0D34               	mullw	52
 39286  00432E  50F3               	movf	prodl,w,c
 39287  004330  0100               	movlb	0	; () banked
 39288  004332  256C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),w,b
 39289  004334  6ED9               	movwf	fsr2l,c
 39290  004336  50F4               	movf	prodh,w,c
 39291  004338  0100               	movlb	0	; () banked
 39292  00433A  216D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),w,b
 39293  00433C  6EDA               	movwf	fsr2h,c
 39294  00433E  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 39295  004342  C069  FFDE         	movff	??_calib_data_set_default_pr+1,postinc2
 39296  004346  C06A  FFDE         	movff	??_calib_data_set_default_pr+2,postinc2
 39297  00434A  C06B  FFDE         	movff	??_calib_data_set_default_pr+3,postinc2
 39298                           
 39299                           ; BSR set to: 0
 39300                           ;data.c: 251: prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=0;
 39301  00434E  0100               	movlb	0	; () banked
 39302  004350  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 39303  004352  0D08               	mullw	8
 39304  004354  0E04               	movlw	4
 39305  004356  26F3               	addwf	prodl,f,c
 39306  004358  0E00               	movlw	0
 39307  00435A  22F4               	addwfc	prodh,f,c
 39308  00435C  0E00               	movlw	low _prCalibTabDef
 39309  00435E  0100               	movlb	0	; () banked
 39310  004360  6F68               	movwf	??_calib_data_set_default_pr& (0+255),b
 39311  004362  0E04               	movlw	high _prCalibTabDef
 39312  004364  0100               	movlb	0	; () banked
 39313  004366  6F69               	movwf	(??_calib_data_set_default_pr+1)& (0+255),b
 39314  004368  0E04               	movlw	4
 39315  00436A  0100               	movlb	0	; () banked
 39316  00436C  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39317  00436E  0E00               	movlw	0
 39318  004370  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39319  004372  50F3               	movf	prodl,w,c
 39320  004374  0100               	movlb	0	; () banked
 39321  004376  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39322  004378  50F4               	movf	prodh,w,c
 39323  00437A  0100               	movlb	0	; () banked
 39324  00437C  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39325  00437E  0100               	movlb	0	; () banked
 39326  004380  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39327  004382  0D34               	mullw	52
 39328  004384  50F3               	movf	prodl,w,c
 39329  004386  0100               	movlb	0	; () banked
 39330  004388  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39331  00438A  50F4               	movf	prodh,w,c
 39332  00438C  0100               	movlb	0	; () banked
 39333  00438E  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39334  004390  0E06               	movlw	6
 39335  004392  0100               	movlb	0	; () banked
 39336  004394  2568               	addwf	??_calib_data_set_default_pr& (0+255),w,b
 39337  004396  6ED9               	movwf	fsr2l,c
 39338  004398  0E00               	movlw	0
 39339  00439A  0100               	movlb	0	; () banked
 39340  00439C  2169               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),w,b
 39341  00439E  6EDA               	movwf	fsr2h,c
 39342  0043A0  0E00               	movlw	0
 39343  0043A2  6EDE               	movwf	postinc2,c
 39344  0043A4  0E00               	movlw	0
 39345  0043A6  6EDD               	movwf	postdec2,c
 39346                           
 39347                           ; BSR set to: 0
 39348  0043A8  0100               	movlb	0	; () banked
 39349  0043AA  2B6F               	incf	calib_data_set_default_pr@j& (0+255),f,b
 39350  0043AC  D73A               	goto	l15681
 39351  0043AE                     l15693:
 39352                           
 39353                           ; BSR set to: 0
 39354  0043AE  0100               	movlb	0	; () banked
 39355  0043B0  2B6E               	incf	calib_data_set_default_pr@i& (0+255),f,b
 39356  0043B2  D724               	goto	L33
 39357  0043B4                     __end_of_calib_data_set_default_pr:
 39358                           	opt stack 0
 39359                           tosu	equ	0xFFF
 39360                           tosh	equ	0xFFE
 39361                           tosl	equ	0xFFD
 39362                           pclath	equ	0xFFA
 39363                           tblptru	equ	0xFF8
 39364                           tblptrh	equ	0xFF7
 39365                           tblptrl	equ	0xFF6
 39366                           tablat	equ	0xFF5
 39367                           prodh	equ	0xFF4
 39368                           prodl	equ	0xFF3
 39369                           intcon	equ	0xFF2
 39370                           indf0	equ	0xFEF
 39371                           postinc0	equ	0xFEE
 39372                           fsr0h	equ	0xFEA
 39373                           fsr0l	equ	0xFE9
 39374                           wreg	equ	0xFE8
 39375                           indf1	equ	0xFE7
 39376                           postinc1	equ	0xFE6
 39377                           postdec1	equ	0xFE5
 39378                           plusw1	equ	0xFE3
 39379                           fsr1h	equ	0xFE2
 39380                           fsr1l	equ	0xFE1
 39381                           indf2	equ	0xFDF
 39382                           postinc2	equ	0xFDE
 39383                           postdec2	equ	0xFDD
 39384                           plusw2	equ	0xFDB
 39385                           fsr2h	equ	0xFDA
 39386                           fsr2l	equ	0xFD9
 39387                           status	equ	0xFD8
 39388                           
 39389 ;; *************** function _calib_data_init_diff_pr *****************
 39390 ;; Defined at:
 39391 ;;		line 257 in file "src/api/data.c"
 39392 ;; Parameters:    Size  Location     Type
 39393 ;;		None
 39394 ;; Auto vars:     Size  Location     Type
 39395 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 39396 ;;		 -> diff_prCalibTabDef(162), 
 39397 ;;  t16             2   23[BANK0 ] unsigned int 
 39398 ;;  ret             1   22[BANK0 ] unsigned char 
 39399 ;; Return value:  Size  Location     Type
 39400 ;;                  1    wreg      unsigned char 
 39401 ;; Registers used:
 39402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39403 ;; Tracked objects:
 39404 ;;		On entry : 0/0
 39405 ;;		On exit  : 0/0
 39406 ;;		Unchanged: 0/0
 39407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39409 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39411 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39412 ;;Total ram usage:        5 bytes
 39413 ;; Hardware stack levels used:    1
 39414 ;; Hardware stack levels required when called:    9
 39415 ;; This function calls:
 39416 ;;		_at24c02_init
 39417 ;;		_at24c02_read_n_byte
 39418 ;;		_at24c02_write_n_byte
 39419 ;;		_calib_data_set_default_diff_pr
 39420 ;;		_crc_append
 39421 ;;		_crc_verify
 39422 ;; This function is called by:
 39423 ;;		_data_init_all
 39424 ;; This function uses a non-reentrant model
 39425 ;;
 39426                           
 39427                           	psect	text197
 39428  005878                     __ptext197:
 39429                           	opt stack 0
 39430  005878                     _calib_data_init_diff_pr:
 39431                           	opt stack 20
 39432                           
 39433                           ;data.c: 259: uint8_t ret=0;
 39434                           
 39435                           ; BSR set to: 0
 39436                           ;incstack = 0
 39437  005878  0E00               	movlw	0
 39438  00587A  0100               	movlb	0	; () banked
 39439  00587C  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 39440                           
 39441                           ; BSR set to: 0
 39442                           ;data.c: 260: uint16_t t16;
 39443                           ;data.c: 261: uint8_t* buf=(uint8_t*)(&diff_prCalibTabDef);
 39444  00587E  0E10               	movlw	low _diff_prCalibTabDef
 39445  005880  0100               	movlb	0	; () banked
 39446  005882  6F79               	movwf	calib_data_init_diff_pr@buf& (0+255),b
 39447  005884  0E03               	movlw	high _diff_prCalibTabDef
 39448  005886  0100               	movlb	0	; () banked
 39449  005888  6F7A               	movwf	(calib_data_init_diff_pr@buf+1)& (0+255),b
 39450                           
 39451                           ; BSR set to: 0
 39452                           ;data.c: 263: pdiff_prEepromObj= &at24c02Ch1;
 39453  00588A  0E8B               	movlw	low _at24c02Ch1
 39454  00588C  6E29               	movwf	_pdiff_prEepromObj,c
 39455  00588E  0E01               	movlw	high _at24c02Ch1
 39456  005890  6E2A               	movwf	_pdiff_prEepromObj+1,c
 39457                           
 39458                           ; BSR set to: 0
 39459                           ;data.c: 264: at24c02_init(pdiff_prEepromObj,0xaa);
 39460  005892  C029  F060         	movff	_pdiff_prEepromObj,at24c02_init@pAt24c02
 39461  005896  C02A  F061         	movff	_pdiff_prEepromObj+1,at24c02_init@pAt24c02+1
 39462  00589A  0EAA               	movlw	170
 39463  00589C  0100               	movlb	0	; () banked
 39464  00589E  6F62               	movwf	at24c02_init@slv& (0+255),b
 39465  0058A0  ECCC  F042         	call	_at24c02_init	;wreg free
 39466                           
 39467                           ;data.c: 265: t16=sizeof(diff_prCalibTabDef);
 39468  0058A4  0E00               	movlw	0
 39469  0058A6  0100               	movlb	0	; () banked
 39470  0058A8  6F78               	movwf	(calib_data_init_diff_pr@t16+1)& (0+255),b
 39471  0058AA  0EA2               	movlw	162
 39472  0058AC  6F77               	movwf	calib_data_init_diff_pr@t16& (0+255),b
 39473                           
 39474                           ; BSR set to: 0
 39475                           ;data.c: 266: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 39476  0058AE  C029  F068         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 39477  0058B2  C02A  F069         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 39478  0058B6  0E00               	movlw	0
 39479  0058B8  0100               	movlb	0	; () banked
 39480  0058BA  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 39481  0058BC  C079  F06B         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 39482  0058C0  C07A  F06C         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 39483  0058C4  C077  F06D         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 39484  0058C8  C078  F06E         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 39485  0058CC  ECB8  F022         	call	_at24c02_read_n_byte	;wreg free
 39486                           
 39487                           ;data.c: 267: ret=crc_verify(buf,t16);
 39488  0058D0  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 39489  0058D4  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 39490  0058D8  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 39491  0058DC  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 39492  0058E0  EC45  F041         	call	_crc_verify	;wreg free
 39493  0058E4  0100               	movlb	0	; () banked
 39494  0058E6  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 39495                           
 39496                           ; BSR set to: 0
 39497                           ;data.c: 268: if(!ret){
 39498  0058E8  0100               	movlb	0	; () banked
 39499  0058EA  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 39500  0058EC  0100               	movlb	0	; () banked
 39501  0058EE  A4D8               	btfss	status,2,c
 39502  0058F0  0012               	return	
 39503                           
 39504                           ; BSR set to: 0
 39505                           ;data.c: 269: calib_data_set_default_diff_pr();
 39506  0058F2  EC39  F01E         	call	_calib_data_set_default_diff_pr	;wreg free
 39507                           
 39508                           ;data.c: 270: crc_append(buf,t16-2);
 39509  0058F6  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 39510  0058FA  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 39511  0058FE  0EFE               	movlw	254
 39512  005900  0100               	movlb	0	; () banked
 39513  005902  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 39514  005904  0100               	movlb	0	; () banked
 39515  005906  6F6E               	movwf	crc_append@n& (0+255),b
 39516  005908  0EFF               	movlw	255
 39517  00590A  0100               	movlb	0	; () banked
 39518  00590C  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 39519  00590E  0100               	movlb	0	; () banked
 39520  005910  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 39521  005912  EC89  F047         	call	_crc_append	;wreg free
 39522                           
 39523                           ;data.c: 271: at24c02_write_n_byte(pdiff_prEepromObj,0,buf,t16);
 39524  005916  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 39525  00591A  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 39526  00591E  0E00               	movlw	0
 39527  005920  0100               	movlb	0	; () banked
 39528  005922  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 39529  005924  C079  F069         	movff	calib_data_init_diff_pr@buf,at24c02_write_n_byte@buf
 39530  005928  C07A  F06A         	movff	calib_data_init_diff_pr@buf+1,at24c02_write_n_byte@buf+1
 39531  00592C  C077  F06B         	movff	calib_data_init_diff_pr@t16,at24c02_write_n_byte@len
 39532  005930  C078  F06C         	movff	calib_data_init_diff_pr@t16+1,at24c02_write_n_byte@len+1
 39533  005934  ECEF  F02D         	call	_at24c02_write_n_byte	;wreg free
 39534                           
 39535                           ;data.c: 272: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 39536  005938  C029  F068         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 39537  00593C  C02A  F069         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 39538  005940  0E00               	movlw	0
 39539  005942  0100               	movlb	0	; () banked
 39540  005944  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 39541  005946  C079  F06B         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 39542  00594A  C07A  F06C         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 39543  00594E  C077  F06D         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 39544  005952  C078  F06E         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 39545  005956  ECB8  F022         	call	_at24c02_read_n_byte	;wreg free
 39546                           
 39547                           ;data.c: 273: ret=crc_verify(buf,t16);
 39548  00595A  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 39549  00595E  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 39550  005962  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 39551  005966  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 39552  00596A  EC45  F041         	call	_crc_verify	;wreg free
 39553  00596E  0100               	movlb	0	; () banked
 39554  005970  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 39555                           
 39556                           ; BSR set to: 0
 39557                           ;data.c: 274: if(!ret){
 39558  005972  0100               	movlb	0	; () banked
 39559  005974  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 39560  005976  0100               	movlb	0	; () banked
 39561  005978  A4D8               	btfss	status,2,c
 39562  00597A  0012               	return	
 39563                           
 39564                           ; BSR set to: 0
 39565                           ;data.c: 275: calib_data_set_default_diff_pr();
 39566  00597C  EC39  F01E         	call	_calib_data_set_default_diff_pr	;wreg free
 39567                           
 39568                           ;data.c: 276: crc_append(buf,t16-2);
 39569  005980  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 39570  005984  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 39571  005988  0EFE               	movlw	254
 39572  00598A  0100               	movlb	0	; () banked
 39573  00598C  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 39574  00598E  0100               	movlb	0	; () banked
 39575  005990  6F6E               	movwf	crc_append@n& (0+255),b
 39576  005992  0EFF               	movlw	255
 39577  005994  0100               	movlb	0	; () banked
 39578  005996  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 39579  005998  0100               	movlb	0	; () banked
 39580  00599A  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 39581  00599C  EC89  F047         	call	_crc_append	;wreg free
 39582  0059A0  0012               	return	
 39583  0059A2                     __end_of_calib_data_init_diff_pr:
 39584                           	opt stack 0
 39585                           tosu	equ	0xFFF
 39586                           tosh	equ	0xFFE
 39587                           tosl	equ	0xFFD
 39588                           pclath	equ	0xFFA
 39589                           tblptru	equ	0xFF8
 39590                           tblptrh	equ	0xFF7
 39591                           tblptrl	equ	0xFF6
 39592                           tablat	equ	0xFF5
 39593                           prodh	equ	0xFF4
 39594                           prodl	equ	0xFF3
 39595                           intcon	equ	0xFF2
 39596                           indf0	equ	0xFEF
 39597                           postinc0	equ	0xFEE
 39598                           fsr0h	equ	0xFEA
 39599                           fsr0l	equ	0xFE9
 39600                           wreg	equ	0xFE8
 39601                           indf1	equ	0xFE7
 39602                           postinc1	equ	0xFE6
 39603                           postdec1	equ	0xFE5
 39604                           plusw1	equ	0xFE3
 39605                           fsr1h	equ	0xFE2
 39606                           fsr1l	equ	0xFE1
 39607                           indf2	equ	0xFDF
 39608                           postinc2	equ	0xFDE
 39609                           postdec2	equ	0xFDD
 39610                           plusw2	equ	0xFDB
 39611                           fsr2h	equ	0xFDA
 39612                           fsr2l	equ	0xFD9
 39613                           status	equ	0xFD8
 39614                           
 39615 ;; *************** function _crc_verify *****************
 39616 ;; Defined at:
 39617 ;;		line 76 in file "src/depend/crc16.c"
 39618 ;; Parameters:    Size  Location     Type
 39619 ;;  message         2   12[BANK0 ] PTR unsigned char 
 39620 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 39621 ;;  n               2   14[BANK0 ] unsigned int 
 39622 ;; Auto vars:     Size  Location     Type
 39623 ;;  expected        2   20[BANK0 ] unsigned int 
 39624 ;;  crccal          2   18[BANK0 ] unsigned int 
 39625 ;; Return value:  Size  Location     Type
 39626 ;;                  1    wreg      unsigned char 
 39627 ;; Registers used:
 39628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39629 ;; Tracked objects:
 39630 ;;		On entry : 0/0
 39631 ;;		On exit  : 0/0
 39632 ;;		Unchanged: 0/0
 39633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39634 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39635 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39637 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39638 ;;Total ram usage:       10 bytes
 39639 ;; Hardware stack levels used:    1
 39640 ;; Hardware stack levels required when called:    5
 39641 ;; This function calls:
 39642 ;;		_crc_sum
 39643 ;;		_m_mem_cpy_len
 39644 ;; This function is called by:
 39645 ;;		_data_sys_init
 39646 ;;		_calib_data_init_diff_pr
 39647 ;;		_calib_data_init_pr
 39648 ;;		___sys_data_save_write_flash
 39649 ;;		_data_sys_save
 39650 ;; This function uses a non-reentrant model
 39651 ;;
 39652                           
 39653                           	psect	text198
 39654  00828A                     __ptext198:
 39655                           	opt stack 0
 39656  00828A                     _crc_verify:
 39657                           	opt stack 21
 39658                           
 39659                           ;crc16.c: 78: uint16_t expected,crccal;
 39660                           ;crc16.c: 81: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
 39661                           
 39662                           ;incstack = 0
 39663  00828A  0E74               	movlw	low crc_verify@expected
 39664  00828C  0100               	movlb	0	; () banked
 39665  00828E  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 39666  008290  0E00               	movlw	high crc_verify@expected
 39667  008292  0100               	movlb	0	; () banked
 39668  008294  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 39669  008296  0100               	movlb	0	; () banked
 39670  008298  516E               	movf	crc_verify@n& (0+255),w,b
 39671  00829A  0100               	movlb	0	; () banked
 39672  00829C  256C               	addwf	crc_verify@message& (0+255),w,b
 39673  00829E  0100               	movlb	0	; () banked
 39674  0082A0  6F70               	movwf	??_crc_verify& (0+255),b
 39675  0082A2  0100               	movlb	0	; () banked
 39676  0082A4  516F               	movf	(crc_verify@n+1)& (0+255),w,b
 39677  0082A6  0100               	movlb	0	; () banked
 39678  0082A8  216D               	addwfc	(crc_verify@message+1)& (0+255),w,b
 39679  0082AA  0100               	movlb	0	; () banked
 39680  0082AC  6F71               	movwf	(??_crc_verify+1)& (0+255),b
 39681  0082AE  0EFE               	movlw	254
 39682  0082B0  0100               	movlb	0	; () banked
 39683  0082B2  2570               	addwf	??_crc_verify& (0+255),w,b
 39684  0082B4  0100               	movlb	0	; () banked
 39685  0082B6  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 39686  0082B8  0EFF               	movlw	255
 39687  0082BA  0100               	movlb	0	; () banked
 39688  0082BC  2171               	addwfc	(??_crc_verify+1)& (0+255),w,b
 39689  0082BE  0100               	movlb	0	; () banked
 39690  0082C0  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 39691  0082C2  0E00               	movlw	0
 39692  0082C4  0100               	movlb	0	; () banked
 39693  0082C6  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 39694  0082C8  0E02               	movlw	2
 39695  0082CA  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 39696  0082CC  ECE3  F04B         	call	_m_mem_cpy_len	;wreg free
 39697                           
 39698                           ;crc16.c: 82: crccal=crc_sum(message,n - 2);
 39699  0082D0  C06C  F060         	movff	crc_verify@message,crc_sum@puchMsg
 39700  0082D4  C06D  F061         	movff	crc_verify@message+1,crc_sum@puchMsg+1
 39701  0082D8  0EFE               	movlw	254
 39702  0082DA  0100               	movlb	0	; () banked
 39703  0082DC  256E               	addwf	crc_verify@n& (0+255),w,b
 39704  0082DE  0100               	movlb	0	; () banked
 39705  0082E0  6F62               	movwf	crc_sum@usDataLen& (0+255),b
 39706  0082E2  0EFF               	movlw	255
 39707  0082E4  0100               	movlb	0	; () banked
 39708  0082E6  216F               	addwfc	(crc_verify@n+1)& (0+255),w,b
 39709  0082E8  0100               	movlb	0	; () banked
 39710  0082EA  6F63               	movwf	(crc_sum@usDataLen+1)& (0+255),b
 39711  0082EC  EC89  F03D         	call	_crc_sum	;wreg free
 39712  0082F0  C060  F072         	movff	?_crc_sum,crc_verify@crccal
 39713  0082F4  C061  F073         	movff	?_crc_sum+1,crc_verify@crccal+1
 39714                           
 39715                           ;crc16.c: 83: if(expected!=crccal)return 0;
 39716  0082F8  0100               	movlb	0	; () banked
 39717  0082FA  5172               	movf	crc_verify@crccal& (0+255),w,b
 39718  0082FC  0100               	movlb	0	; () banked
 39719  0082FE  1974               	xorwf	crc_verify@expected& (0+255),w,b
 39720  008300  E106               	bnz	u13080
 39721  008302  0100               	movlb	0	; () banked
 39722  008304  5173               	movf	(crc_verify@crccal+1)& (0+255),w,b
 39723  008306  0100               	movlb	0	; () banked
 39724  008308  1975               	xorwf	(crc_verify@expected+1)& (0+255),w,b
 39725  00830A  B4D8               	btfsc	status,2,c
 39726  00830C  D002               	goto	l14371
 39727  00830E                     u13080:
 39728                           
 39729                           ; BSR set to: 0
 39730  00830E  0E00               	movlw	0
 39731                           
 39732                           ; BSR set to: 0
 39733  008310  0012               	return	
 39734  008312                     l14371:
 39735                           
 39736                           ; BSR set to: 0
 39737                           ;crc16.c: 84: return 1;
 39738  008312  0E01               	movlw	1
 39739  008314  0012               	return	
 39740  008316                     __end_of_crc_verify:
 39741                           	opt stack 0
 39742                           tosu	equ	0xFFF
 39743                           tosh	equ	0xFFE
 39744                           tosl	equ	0xFFD
 39745                           pclath	equ	0xFFA
 39746                           tblptru	equ	0xFF8
 39747                           tblptrh	equ	0xFF7
 39748                           tblptrl	equ	0xFF6
 39749                           tablat	equ	0xFF5
 39750                           prodh	equ	0xFF4
 39751                           prodl	equ	0xFF3
 39752                           intcon	equ	0xFF2
 39753                           indf0	equ	0xFEF
 39754                           postinc0	equ	0xFEE
 39755                           fsr0h	equ	0xFEA
 39756                           fsr0l	equ	0xFE9
 39757                           wreg	equ	0xFE8
 39758                           indf1	equ	0xFE7
 39759                           postinc1	equ	0xFE6
 39760                           postdec1	equ	0xFE5
 39761                           plusw1	equ	0xFE3
 39762                           fsr1h	equ	0xFE2
 39763                           fsr1l	equ	0xFE1
 39764                           indf2	equ	0xFDF
 39765                           postinc2	equ	0xFDE
 39766                           postdec2	equ	0xFDD
 39767                           plusw2	equ	0xFDB
 39768                           fsr2h	equ	0xFDA
 39769                           fsr2l	equ	0xFD9
 39770                           status	equ	0xFD8
 39771                           
 39772 ;; *************** function _m_mem_cpy_len *****************
 39773 ;; Defined at:
 39774 ;;		line 41 in file "src/depend/m_string.c"
 39775 ;; Parameters:    Size  Location     Type
 39776 ;;  d               2    0[BANK0 ] PTR unsigned char 
 39777 ;;		 -> m_flash_test@tmp(16), globleBuffer(256), crc_verify@expected(2), stSysData(240), 
 39778 ;;  s               2    2[BANK0 ] PTR unsigned char 
 39779 ;;		 -> flashTestbuf(65), m_flash_test@tmp(16), stSysData(240), defultSystemData(240), 
 39780 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 39781 ;;  len             2    4[BANK0 ] unsigned int 
 39782 ;; Auto vars:     Size  Location     Type
 39783 ;;		None
 39784 ;; Return value:  Size  Location     Type
 39785 ;;                  1    wreg      void 
 39786 ;; Registers used:
 39787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39788 ;; Tracked objects:
 39789 ;;		On entry : 0/0
 39790 ;;		On exit  : 0/0
 39791 ;;		Unchanged: 0/0
 39792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39793 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39797 ;;Total ram usage:        6 bytes
 39798 ;; Hardware stack levels used:    1
 39799 ;; Hardware stack levels required when called:    4
 39800 ;; This function calls:
 39801 ;;		Nothing
 39802 ;; This function is called by:
 39803 ;;		_data_sys_init
 39804 ;;		_crc_verify
 39805 ;;		_m_flash_write
 39806 ;;		_data_sys_save
 39807 ;;		_m_flash_test
 39808 ;; This function uses a non-reentrant model
 39809 ;;
 39810                           
 39811                           	psect	text199
 39812  0097C6                     __ptext199:
 39813                           	opt stack 0
 39814  0097C6                     _m_mem_cpy_len:
 39815                           	opt stack 21
 39816                           
 39817                           ;m_string.c: 44: while(len)
 39818                           
 39819                           ; BSR set to: 0
 39820                           ;incstack = 0
 39821  0097C6  D01F               	goto	l13941
 39822  0097C8                     l13933:
 39823                           
 39824                           ;m_string.c: 45: {
 39825                           ;m_string.c: 46: *d++=*s++;
 39826  0097C8  C062  FFF6         	movff	m_mem_cpy_len@s,tblptrl
 39827  0097CC  C063  FFF7         	movff	m_mem_cpy_len@s+1,tblptrh
 39828  0097D0  6AF8               	clrf	tblptru,c
 39829  0097D2  C060  FFD9         	movff	m_mem_cpy_len@d,fsr2l
 39830  0097D6  C061  FFDA         	movff	m_mem_cpy_len@d+1,fsr2h
 39831  0097DA  0E0F               	movlw	(high __ramtop+-1)
 39832  0097DC  64F7               	cpfsgt	tblptrh,c
 39833  0097DE  D003               	bra	u12647
 39834  0097E0  0008               	tblrd		*
 39835  0097E2  50F5               	movf	tablat,w,c
 39836  0097E4  D005               	bra	u12640
 39837  0097E6                     u12647:
 39838  0097E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 39839  0097EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 39840  0097EE  50EF               	movf	indf0,w,c
 39841  0097F0                     u12640:
 39842  0097F0  6EDF               	movwf	indf2,c
 39843  0097F2  0100               	movlb	0	; () banked
 39844  0097F4  4B62               	infsnz	m_mem_cpy_len@s& (0+255),f,b
 39845  0097F6  2B63               	incf	(m_mem_cpy_len@s+1)& (0+255),f,b
 39846                           
 39847                           ; BSR set to: 0
 39848  0097F8  0100               	movlb	0	; () banked
 39849  0097FA  4B60               	infsnz	m_mem_cpy_len@d& (0+255),f,b
 39850  0097FC  2B61               	incf	(m_mem_cpy_len@d+1)& (0+255),f,b
 39851                           
 39852                           ; BSR set to: 0
 39853                           ;m_string.c: 47: len--;
 39854  0097FE  0100               	movlb	0	; () banked
 39855  009800  0764               	decf	m_mem_cpy_len@len& (0+255),f,b
 39856  009802  A0D8               	btfss	status,0,c
 39857  009804  0765               	decf	(m_mem_cpy_len@len+1)& (0+255),f,b
 39858  009806                     l13941:
 39859  009806  0100               	movlb	0	; () banked
 39860  009808  5164               	movf	m_mem_cpy_len@len& (0+255),w,b
 39861  00980A  0100               	movlb	0	; () banked
 39862  00980C  1165               	iorwf	(m_mem_cpy_len@len+1)& (0+255),w,b
 39863  00980E  B4D8               	btfsc	status,2,c
 39864  009810  0012               	return	
 39865  009812  D7DA               	goto	l13933
 39866  009814                     __end_of_m_mem_cpy_len:
 39867                           	opt stack 0
 39868                           tosu	equ	0xFFF
 39869                           tosh	equ	0xFFE
 39870                           tosl	equ	0xFFD
 39871                           pclath	equ	0xFFA
 39872                           tblptru	equ	0xFF8
 39873                           tblptrh	equ	0xFF7
 39874                           tblptrl	equ	0xFF6
 39875                           tablat	equ	0xFF5
 39876                           prodh	equ	0xFF4
 39877                           prodl	equ	0xFF3
 39878                           intcon	equ	0xFF2
 39879                           indf0	equ	0xFEF
 39880                           postinc0	equ	0xFEE
 39881                           fsr0h	equ	0xFEA
 39882                           fsr0l	equ	0xFE9
 39883                           wreg	equ	0xFE8
 39884                           indf1	equ	0xFE7
 39885                           postinc1	equ	0xFE6
 39886                           postdec1	equ	0xFE5
 39887                           plusw1	equ	0xFE3
 39888                           fsr1h	equ	0xFE2
 39889                           fsr1l	equ	0xFE1
 39890                           indf2	equ	0xFDF
 39891                           postinc2	equ	0xFDE
 39892                           postdec2	equ	0xFDD
 39893                           plusw2	equ	0xFDB
 39894                           fsr2h	equ	0xFDA
 39895                           fsr2l	equ	0xFD9
 39896                           status	equ	0xFD8
 39897                           
 39898 ;; *************** function _crc_append *****************
 39899 ;; Defined at:
 39900 ;;		line 86 in file "src/depend/crc16.c"
 39901 ;; Parameters:    Size  Location     Type
 39902 ;;  message         2   12[BANK0 ] PTR unsigned char 
 39903 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 39904 ;;  n               2   14[BANK0 ] unsigned int 
 39905 ;; Auto vars:     Size  Location     Type
 39906 ;;  crc             2   18[BANK0 ] unsigned int 
 39907 ;; Return value:  Size  Location     Type
 39908 ;;                  1    wreg      void 
 39909 ;; Registers used:
 39910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39911 ;; Tracked objects:
 39912 ;;		On entry : 0/0
 39913 ;;		On exit  : 0/0
 39914 ;;		Unchanged: 0/0
 39915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39917 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39919 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39920 ;;Total ram usage:        8 bytes
 39921 ;; Hardware stack levels used:    1
 39922 ;; Hardware stack levels required when called:    5
 39923 ;; This function calls:
 39924 ;;		_crc_sum
 39925 ;; This function is called by:
 39926 ;;		_data_sys_init
 39927 ;;		_calib_data_init_diff_pr
 39928 ;;		_calib_data_init_pr
 39929 ;;		___sys_data_save_write_flash
 39930 ;;		___set_short_diff_calib
 39931 ;;		___set_short_pr_calib
 39932 ;;		_data_sys_save
 39933 ;; This function uses a non-reentrant model
 39934 ;;
 39935                           
 39936                           	psect	text200
 39937  008F12                     __ptext200:
 39938                           	opt stack 0
 39939  008F12                     _crc_append:
 39940                           	opt stack 21
 39941                           
 39942                           ;crc16.c: 88: uint16_t crc;
 39943                           ;crc16.c: 89: crc = crc_sum(message, n);
 39944                           
 39945                           ; BSR set to: 0
 39946                           ;incstack = 0
 39947  008F12  C06C  F060         	movff	crc_append@message,crc_sum@puchMsg
 39948  008F16  C06D  F061         	movff	crc_append@message+1,crc_sum@puchMsg+1
 39949  008F1A  C06E  F062         	movff	crc_append@n,crc_sum@usDataLen
 39950  008F1E  C06F  F063         	movff	crc_append@n+1,crc_sum@usDataLen+1
 39951  008F22  EC89  F03D         	call	_crc_sum	;wreg free
 39952  008F26  C060  F072         	movff	?_crc_sum,crc_append@crc
 39953  008F2A  C061  F073         	movff	?_crc_sum+1,crc_append@crc+1
 39954                           
 39955                           ;crc16.c: 90: message[n] = (uint8_t)(crc & 0xff);
 39956  008F2E  0100               	movlb	0	; () banked
 39957  008F30  516E               	movf	crc_append@n& (0+255),w,b
 39958  008F32  0100               	movlb	0	; () banked
 39959  008F34  256C               	addwf	crc_append@message& (0+255),w,b
 39960  008F36  6ED9               	movwf	fsr2l,c
 39961  008F38  0100               	movlb	0	; () banked
 39962  008F3A  516F               	movf	(crc_append@n+1)& (0+255),w,b
 39963  008F3C  0100               	movlb	0	; () banked
 39964  008F3E  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 39965  008F40  6EDA               	movwf	fsr2h,c
 39966  008F42  C072  FFDF         	movff	crc_append@crc,indf2
 39967                           
 39968                           ; BSR set to: 0
 39969                           ;crc16.c: 91: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
 39970  008F46  0E01               	movlw	1
 39971  008F48  0100               	movlb	0	; () banked
 39972  008F4A  256E               	addwf	crc_append@n& (0+255),w,b
 39973  008F4C  0100               	movlb	0	; () banked
 39974  008F4E  6F70               	movwf	??_crc_append& (0+255),b
 39975  008F50  0E00               	movlw	0
 39976  008F52  0100               	movlb	0	; () banked
 39977  008F54  216F               	addwfc	(crc_append@n+1)& (0+255),w,b
 39978  008F56  0100               	movlb	0	; () banked
 39979  008F58  6F71               	movwf	(??_crc_append+1)& (0+255),b
 39980  008F5A  0100               	movlb	0	; () banked
 39981  008F5C  5170               	movf	??_crc_append& (0+255),w,b
 39982  008F5E  0100               	movlb	0	; () banked
 39983  008F60  256C               	addwf	crc_append@message& (0+255),w,b
 39984  008F62  6ED9               	movwf	fsr2l,c
 39985  008F64  0100               	movlb	0	; () banked
 39986  008F66  5171               	movf	(??_crc_append+1)& (0+255),w,b
 39987  008F68  0100               	movlb	0	; () banked
 39988  008F6A  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 39989  008F6C  6EDA               	movwf	fsr2h,c
 39990  008F6E  0100               	movlb	0	; () banked
 39991  008F70  5173               	movf	(crc_append@crc+1)& (0+255),w,b
 39992  008F72  6EDF               	movwf	indf2,c
 39993                           
 39994                           ; BSR set to: 0
 39995  008F74  0012               	return		;funcret
 39996  008F76                     __end_of_crc_append:
 39997                           	opt stack 0
 39998                           tosu	equ	0xFFF
 39999                           tosh	equ	0xFFE
 40000                           tosl	equ	0xFFD
 40001                           pclath	equ	0xFFA
 40002                           tblptru	equ	0xFF8
 40003                           tblptrh	equ	0xFF7
 40004                           tblptrl	equ	0xFF6
 40005                           tablat	equ	0xFF5
 40006                           prodh	equ	0xFF4
 40007                           prodl	equ	0xFF3
 40008                           intcon	equ	0xFF2
 40009                           indf0	equ	0xFEF
 40010                           postinc0	equ	0xFEE
 40011                           fsr0h	equ	0xFEA
 40012                           fsr0l	equ	0xFE9
 40013                           wreg	equ	0xFE8
 40014                           indf1	equ	0xFE7
 40015                           postinc1	equ	0xFE6
 40016                           postdec1	equ	0xFE5
 40017                           plusw1	equ	0xFE3
 40018                           fsr1h	equ	0xFE2
 40019                           fsr1l	equ	0xFE1
 40020                           indf2	equ	0xFDF
 40021                           postinc2	equ	0xFDE
 40022                           postdec2	equ	0xFDD
 40023                           plusw2	equ	0xFDB
 40024                           fsr2h	equ	0xFDA
 40025                           fsr2l	equ	0xFD9
 40026                           status	equ	0xFD8
 40027                           
 40028 ;; *************** function _crc_sum *****************
 40029 ;; Defined at:
 40030 ;;		line 61 in file "src/depend/crc16.c"
 40031 ;; Parameters:    Size  Location     Type
 40032 ;;  puchMsg         2    0[BANK0 ] PTR unsigned char 
 40033 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 40034 ;;  usDataLen       2    2[BANK0 ] unsigned int 
 40035 ;; Auto vars:     Size  Location     Type
 40036 ;;  uIndex          2    8[BANK0 ] unsigned int 
 40037 ;;  len             2    6[BANK0 ] unsigned int 
 40038 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
 40039 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
 40040 ;; Return value:  Size  Location     Type
 40041 ;;                  2    0[BANK0 ] unsigned int 
 40042 ;; Registers used:
 40043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40044 ;; Tracked objects:
 40045 ;;		On entry : 0/0
 40046 ;;		On exit  : 0/0
 40047 ;;		Unchanged: 0/0
 40048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40050 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40052 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40053 ;;Total ram usage:       12 bytes
 40054 ;; Hardware stack levels used:    1
 40055 ;; Hardware stack levels required when called:    4
 40056 ;; This function calls:
 40057 ;;		Nothing
 40058 ;; This function is called by:
 40059 ;;		_crc_verify
 40060 ;;		_crc_append
 40061 ;; This function uses a non-reentrant model
 40062 ;;
 40063                           
 40064                           	psect	text201
 40065  007B12                     __ptext201:
 40066                           	opt stack 0
 40067  007B12                     _crc_sum:
 40068                           	opt stack 21
 40069                           
 40070                           ;crc16.c: 63: uint16_t len;
 40071                           ;crc16.c: 64: len=usDataLen;
 40072                           
 40073                           ; BSR set to: 0
 40074                           ;incstack = 0
 40075  007B12  C062  F066         	movff	crc_sum@usDataLen,crc_sum@len
 40076  007B16  C063  F067         	movff	crc_sum@usDataLen+1,crc_sum@len+1
 40077                           
 40078                           ;crc16.c: 65: uint8_t uchCRCHi = 0xFF ;
 40079  007B1A  0100               	movlb	0	; () banked
 40080  007B1C  696A               	setf	crc_sum@uchCRCHi& (0+255),b
 40081                           
 40082                           ;crc16.c: 66: uint8_t uchCRCLo = 0xFF ;
 40083  007B1E  0100               	movlb	0	; () banked
 40084  007B20  696B               	setf	crc_sum@uchCRCLo& (0+255),b
 40085                           
 40086                           ;crc16.c: 67: uint16_t uIndex ;
 40087                           ;crc16.c: 68: while (len--)
 40088  007B22  D028               	goto	l14083
 40089  007B24                     l14075:
 40090                           
 40091                           ; BSR set to: 0
 40092                           ;crc16.c: 69: {
 40093                           ;crc16.c: 70: uIndex = (uchCRCLo ^ *puchMsg++) ;
 40094  007B24  C060  FFD9         	movff	crc_sum@puchMsg,fsr2l
 40095  007B28  C061  FFDA         	movff	crc_sum@puchMsg+1,fsr2h
 40096  007B2C  50DF               	movf	indf2,w,c
 40097  007B2E  0100               	movlb	0	; () banked
 40098  007B30  196B               	xorwf	crc_sum@uchCRCLo& (0+255),w,b
 40099  007B32  0100               	movlb	0	; () banked
 40100  007B34  6F64               	movwf	??_crc_sum& (0+255),b
 40101  007B36  0100               	movlb	0	; () banked
 40102  007B38  5164               	movf	??_crc_sum& (0+255),w,b
 40103  007B3A  0100               	movlb	0	; () banked
 40104  007B3C  6F68               	movwf	crc_sum@uIndex& (0+255),b
 40105  007B3E  6B69               	clrf	(crc_sum@uIndex+1)& (0+255),b
 40106                           
 40107                           ; BSR set to: 0
 40108  007B40  0100               	movlb	0	; () banked
 40109  007B42  4B60               	infsnz	crc_sum@puchMsg& (0+255),f,b
 40110  007B44  2B61               	incf	(crc_sum@puchMsg+1)& (0+255),f,b
 40111                           
 40112                           ; BSR set to: 0
 40113                           ;crc16.c: 71: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
 40114  007B46  0EB1               	movlw	low _auchCRCHi
 40115  007B48  0100               	movlb	0	; () banked
 40116  007B4A  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 40117  007B4C  6EF6               	movwf	tblptrl,c
 40118  007B4E  0EED               	movlw	high _auchCRCHi
 40119  007B50  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 40120  007B52  6EF7               	movwf	tblptrh,c
 40121  007B54                     	if	0	;There are less than 3 active tblptr bytes
 40122  007B54                     	endif
 40123  007B54  0008               	tblrd		*
 40124  007B56  50F5               	movf	tablat,w,c
 40125  007B58  0100               	movlb	0	; () banked
 40126  007B5A  196A               	xorwf	crc_sum@uchCRCHi& (0+255),w,b
 40127  007B5C  0100               	movlb	0	; () banked
 40128  007B5E  6F6B               	movwf	crc_sum@uchCRCLo& (0+255),b
 40129                           
 40130                           ; BSR set to: 0
 40131                           ;crc16.c: 72: uchCRCHi = auchCRCLo[uIndex] ;
 40132  007B60  0EB1               	movlw	low _auchCRCLo
 40133  007B62  0100               	movlb	0	; () banked
 40134  007B64  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 40135  007B66  6EF6               	movwf	tblptrl,c
 40136  007B68  0EEC               	movlw	high _auchCRCLo
 40137  007B6A  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 40138  007B6C  6EF7               	movwf	tblptrh,c
 40139  007B6E                     	if	0	;There are less than 3 active tblptr bytes
 40140  007B6E                     	endif
 40141  007B6E  0008               	tblrd		*
 40142  007B70  CFF5 F06A          	movff	tablat,crc_sum@uchCRCHi
 40143  007B74                     l14083:
 40144                           
 40145                           ; BSR set to: 0
 40146  007B74  0100               	movlb	0	; () banked
 40147  007B76  0766               	decf	crc_sum@len& (0+255),f,b
 40148  007B78  A0D8               	btfss	status,0,c
 40149  007B7A  0767               	decf	(crc_sum@len+1)& (0+255),f,b
 40150  007B7C  0100               	movlb	0	; () banked
 40151  007B7E  2966               	incf	crc_sum@len& (0+255),w,b
 40152  007B80  E1D1               	bnz	l14075
 40153  007B82  0100               	movlb	0	; () banked
 40154  007B84  2967               	incf	(crc_sum@len+1)& (0+255),w,b
 40155  007B86  A4D8               	btfss	status,2,c
 40156  007B88  D7CD               	goto	l14075
 40157                           
 40158                           ; BSR set to: 0
 40159                           ;crc16.c: 73: }
 40160                           ;crc16.c: 74: return (uchCRCHi << 8 | uchCRCLo) ;
 40161                           
 40162                           ; BSR set to: 0
 40163  007B8A  0100               	movlb	0	; () banked
 40164  007B8C  516B               	movf	crc_sum@uchCRCLo& (0+255),w,b
 40165  007B8E  C06A  F064         	movff	crc_sum@uchCRCHi,??_crc_sum
 40166  007B92  0100               	movlb	0	; () banked
 40167  007B94  6B65               	clrf	(??_crc_sum+1)& (0+255),b
 40168  007B96  C064  F065         	movff	??_crc_sum,??_crc_sum+1
 40169  007B9A  0100               	movlb	0	; () banked
 40170  007B9C  6B64               	clrf	??_crc_sum& (0+255),b
 40171  007B9E  0100               	movlb	0	; () banked
 40172  007BA0  1164               	iorwf	??_crc_sum& (0+255),w,b
 40173  007BA2  0100               	movlb	0	; () banked
 40174  007BA4  6F60               	movwf	?_crc_sum& (0+255),b
 40175  007BA6  0100               	movlb	0	; () banked
 40176  007BA8  5165               	movf	(??_crc_sum+1)& (0+255),w,b
 40177  007BAA  0100               	movlb	0	; () banked
 40178  007BAC  6F61               	movwf	(?_crc_sum+1)& (0+255),b
 40179  007BAE  0012               	return	
 40180  007BB0                     __end_of_crc_sum:
 40181                           	opt stack 0
 40182                           tosu	equ	0xFFF
 40183                           tosh	equ	0xFFE
 40184                           tosl	equ	0xFFD
 40185                           pclath	equ	0xFFA
 40186                           tblptru	equ	0xFF8
 40187                           tblptrh	equ	0xFF7
 40188                           tblptrl	equ	0xFF6
 40189                           tablat	equ	0xFF5
 40190                           prodh	equ	0xFF4
 40191                           prodl	equ	0xFF3
 40192                           intcon	equ	0xFF2
 40193                           indf0	equ	0xFEF
 40194                           postinc0	equ	0xFEE
 40195                           fsr0h	equ	0xFEA
 40196                           fsr0l	equ	0xFE9
 40197                           wreg	equ	0xFE8
 40198                           indf1	equ	0xFE7
 40199                           postinc1	equ	0xFE6
 40200                           postdec1	equ	0xFE5
 40201                           plusw1	equ	0xFE3
 40202                           fsr1h	equ	0xFE2
 40203                           fsr1l	equ	0xFE1
 40204                           indf2	equ	0xFDF
 40205                           postinc2	equ	0xFDE
 40206                           postdec2	equ	0xFDD
 40207                           plusw2	equ	0xFDB
 40208                           fsr2h	equ	0xFDA
 40209                           fsr2l	equ	0xFD9
 40210                           status	equ	0xFD8
 40211                           
 40212 ;; *************** function _calib_data_set_default_diff_pr *****************
 40213 ;; Defined at:
 40214 ;;		line 227 in file "src/api/data.c"
 40215 ;; Parameters:    Size  Location     Type
 40216 ;;		None
 40217 ;; Auto vars:     Size  Location     Type
 40218 ;;  i               1   15[BANK0 ] unsigned char 
 40219 ;;  j               1   14[BANK0 ] unsigned char 
 40220 ;; Return value:  Size  Location     Type
 40221 ;;                  1    wreg      void 
 40222 ;; Registers used:
 40223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40224 ;; Tracked objects:
 40225 ;;		On entry : 0/0
 40226 ;;		On exit  : 0/0
 40227 ;;		Unchanged: 0/0
 40228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40230 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40231 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40232 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40233 ;;Total ram usage:        8 bytes
 40234 ;; Hardware stack levels used:    1
 40235 ;; Hardware stack levels required when called:    5
 40236 ;; This function calls:
 40237 ;;		___wmul
 40238 ;; This function is called by:
 40239 ;;		_calib_data_init_diff_pr
 40240 ;; This function uses a non-reentrant model
 40241 ;;
 40242                           
 40243                           	psect	text202
 40244  003C72                     __ptext202:
 40245                           	opt stack 0
 40246  003C72                     _calib_data_set_default_diff_pr:
 40247                           	opt stack 23
 40248                           
 40249                           ;data.c: 229: uint8_t i,j;
 40250                           ;data.c: 230: diff_prCalibTabDef.rowCount=3;
 40251                           
 40252                           ; BSR set to: 0
 40253                           ;incstack = 0
 40254  003C72  0E03               	movlw	3
 40255  003C74  0103               	movlb	3	; () banked
 40256  003C76  6F10               	movwf	_diff_prCalibTabDef& (0+255),b
 40257                           
 40258                           ;data.c: 231: for(i=0;i<3;i++){
 40259  003C78  0E00               	movlw	0
 40260  003C7A  0100               	movlb	0	; () banked
 40261  003C7C  6F6F               	movwf	calib_data_set_default_diff_pr@i& (0+255),b
 40262  003C7E                     l15651:
 40263                           
 40264                           ; BSR set to: 0
 40265  003C7E  0E02               	movlw	2
 40266  003C80  0100               	movlb	0	; () banked
 40267  003C82  656F               	cpfsgt	calib_data_set_default_diff_pr@i& (0+255),b
 40268  003C84  D001               	goto	l15655
 40269  003C86  0012               	return	
 40270  003C88                     l15655:
 40271                           
 40272                           ; BSR set to: 0
 40273                           ;data.c: 232: diff_prCalibTabDef.prCalibRow[i].pCount=6;
 40274  003C88  0100               	movlb	0	; () banked
 40275  003C8A  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40276  003C8C  0D34               	mullw	52
 40277  003C8E  0E14               	movlw	low (_diff_prCalibTabDef+4)
 40278  003C90  24F3               	addwf	prodl,w,c
 40279  003C92  6ED9               	movwf	fsr2l,c
 40280  003C94  0E03               	movlw	high (_diff_prCalibTabDef+4)
 40281  003C96  20F4               	addwfc	prodh,w,c
 40282  003C98  6EDA               	movwf	fsr2h,c
 40283  003C9A  0E06               	movlw	6
 40284  003C9C  6EDF               	movwf	indf2,c
 40285                           
 40286                           ; BSR set to: 0
 40287                           ;data.c: 233: for(j=0;j<6;j++){
 40288  003C9E  0E00               	movlw	0
 40289  003CA0  0100               	movlb	0	; () banked
 40290  003CA2  6F6E               	movwf	calib_data_set_default_diff_pr@j& (0+255),b
 40291  003CA4                     l15659:
 40292                           
 40293                           ; BSR set to: 0
 40294  003CA4  0E05               	movlw	5
 40295  003CA6  0100               	movlb	0	; () banked
 40296  003CA8  656E               	cpfsgt	calib_data_set_default_diff_pr@j& (0+255),b
 40297  003CAA  D001               	goto	l15663
 40298  003CAC  D0CE               	goto	l15669
 40299  003CAE                     l15663:
 40300                           
 40301                           ; BSR set to: 0
 40302                           ;data.c: 234: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 40303  003CAE  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 40304  003CB2  0100               	movlb	0	; () banked
 40305  003CB4  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40306  003CB6  0E17               	movlw	23
 40307  003CB8  0100               	movlb	0	; () banked
 40308  003CBA  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40309  003CBC  0E70               	movlw	112
 40310  003CBE  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40311  003CC0  EC25  F04E         	call	___wmul	;wreg free
 40312  003CC4  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 40313  003CC8  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 40314  003CCC  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 40315  003CD0  0100               	movlb	0	; () banked
 40316  003CD2  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40317  003CD4  0E01               	movlw	1
 40318  003CD6  0100               	movlb	0	; () banked
 40319  003CD8  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40320  003CDA  0EF4               	movlw	244
 40321  003CDC  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40322  003CDE  EC25  F04E         	call	___wmul	;wreg free
 40323  003CE2  0100               	movlb	0	; () banked
 40324  003CE4  5162               	movf	?___wmul& (0+255),w,b
 40325  003CE6  0100               	movlb	0	; () banked
 40326  003CE8  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40327  003CEA  0100               	movlb	0	; () banked
 40328  003CEC  5163               	movf	(?___wmul+1)& (0+255),w,b
 40329  003CEE  0100               	movlb	0	; () banked
 40330  003CF0  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40331  003CF2  0100               	movlb	0	; () banked
 40332  003CF4  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 40333  003CF6  0D08               	mullw	8
 40334  003CF8  0E04               	movlw	4
 40335  003CFA  26F3               	addwf	prodl,f,c
 40336  003CFC  0E00               	movlw	0
 40337  003CFE  22F4               	addwfc	prodh,f,c
 40338  003D00  0E10               	movlw	low _diff_prCalibTabDef
 40339  003D02  0100               	movlb	0	; () banked
 40340  003D04  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 40341  003D06  0E03               	movlw	high _diff_prCalibTabDef
 40342  003D08  0100               	movlb	0	; () banked
 40343  003D0A  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 40344  003D0C  0E04               	movlw	4
 40345  003D0E  0100               	movlb	0	; () banked
 40346  003D10  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 40347  003D12  0E00               	movlw	0
 40348  003D14  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 40349  003D16  50F3               	movf	prodl,w,c
 40350  003D18  0100               	movlb	0	; () banked
 40351  003D1A  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 40352  003D1C  50F4               	movf	prodh,w,c
 40353  003D1E  0100               	movlb	0	; () banked
 40354  003D20  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 40355  003D22  0100               	movlb	0	; () banked
 40356  003D24  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40357  003D26  0D34               	mullw	52
 40358  003D28  50F3               	movf	prodl,w,c
 40359  003D2A  0100               	movlb	0	; () banked
 40360  003D2C  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 40361  003D2E  50F4               	movf	prodh,w,c
 40362  003D30  0100               	movlb	0	; () banked
 40363  003D32  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 40364  003D34  0E04               	movlw	4
 40365  003D36  0100               	movlb	0	; () banked
 40366  003D38  256A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),w,b
 40367  003D3A  6ED9               	movwf	fsr2l,c
 40368  003D3C  0E00               	movlw	0
 40369  003D3E  0100               	movlb	0	; () banked
 40370  003D40  216B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),w,b
 40371  003D42  6EDA               	movwf	fsr2h,c
 40372  003D44  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 40373  003D48  C069  FFDD         	movff	??_calib_data_set_default_diff_pr+1,postdec2
 40374                           
 40375                           ;data.c: 235: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 40376  003D4C  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 40377  003D50  0100               	movlb	0	; () banked
 40378  003D52  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40379  003D54  0E17               	movlw	23
 40380  003D56  0100               	movlb	0	; () banked
 40381  003D58  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40382  003D5A  0E70               	movlw	112
 40383  003D5C  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40384  003D5E  EC25  F04E         	call	___wmul	;wreg free
 40385  003D62  0100               	movlb	0	; () banked
 40386  003D64  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 40387  003D68  0100               	movlb	0	; () banked
 40388  003D6A  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 40389  003D6E  0E00               	movlw	0
 40390  003D70  0100               	movlb	0	; () banked
 40391  003D72  BF69               	btfsc	(??_calib_data_set_default_diff_pr+1)& (0+255),7,b
 40392  003D74  0EFF               	movlw	255
 40393  003D76  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 40394  003D78  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 40395  003D7A  0100               	movlb	0	; () banked
 40396  003D7C  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 40397  003D7E  0D08               	mullw	8
 40398  003D80  0E04               	movlw	4
 40399  003D82  26F3               	addwf	prodl,f,c
 40400  003D84  0E00               	movlw	0
 40401  003D86  22F4               	addwfc	prodh,f,c
 40402  003D88  0E10               	movlw	low _diff_prCalibTabDef
 40403  003D8A  0100               	movlb	0	; () banked
 40404  003D8C  6F6C               	movwf	(??_calib_data_set_default_diff_pr+4)& (0+255),b
 40405  003D8E  0E03               	movlw	high _diff_prCalibTabDef
 40406  003D90  0100               	movlb	0	; () banked
 40407  003D92  6F6D               	movwf	(??_calib_data_set_default_diff_pr+5)& (0+255),b
 40408  003D94  0E04               	movlw	4
 40409  003D96  0100               	movlb	0	; () banked
 40410  003D98  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 40411  003D9A  0E00               	movlw	0
 40412  003D9C  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 40413  003D9E  50F3               	movf	prodl,w,c
 40414  003DA0  0100               	movlb	0	; () banked
 40415  003DA2  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 40416  003DA4  50F4               	movf	prodh,w,c
 40417  003DA6  0100               	movlb	0	; () banked
 40418  003DA8  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 40419  003DAA  0100               	movlb	0	; () banked
 40420  003DAC  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40421  003DAE  0D34               	mullw	52
 40422  003DB0  50F3               	movf	prodl,w,c
 40423  003DB2  0100               	movlb	0	; () banked
 40424  003DB4  256C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),w,b
 40425  003DB6  6ED9               	movwf	fsr2l,c
 40426  003DB8  50F4               	movf	prodh,w,c
 40427  003DBA  0100               	movlb	0	; () banked
 40428  003DBC  216D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),w,b
 40429  003DBE  6EDA               	movwf	fsr2h,c
 40430  003DC0  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 40431  003DC4  C069  FFDE         	movff	??_calib_data_set_default_diff_pr+1,postinc2
 40432  003DC8  C06A  FFDE         	movff	??_calib_data_set_default_diff_pr+2,postinc2
 40433  003DCC  C06B  FFDE         	movff	??_calib_data_set_default_diff_pr+3,postinc2
 40434                           
 40435                           ;data.c: 236: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=i*1000;
 40436  003DD0  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 40437  003DD4  0100               	movlb	0	; () banked
 40438  003DD6  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40439  003DD8  0E03               	movlw	3
 40440  003DDA  0100               	movlb	0	; () banked
 40441  003DDC  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40442  003DDE  0EE8               	movlw	232
 40443  003DE0  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40444  003DE2  EC25  F04E         	call	___wmul	;wreg free
 40445  003DE6  0100               	movlb	0	; () banked
 40446  003DE8  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 40447  003DEA  0D08               	mullw	8
 40448  003DEC  0E04               	movlw	4
 40449  003DEE  26F3               	addwf	prodl,f,c
 40450  003DF0  0E00               	movlw	0
 40451  003DF2  22F4               	addwfc	prodh,f,c
 40452  003DF4  0E10               	movlw	low _diff_prCalibTabDef
 40453  003DF6  0100               	movlb	0	; () banked
 40454  003DF8  6F68               	movwf	??_calib_data_set_default_diff_pr& (0+255),b
 40455  003DFA  0E03               	movlw	high _diff_prCalibTabDef
 40456  003DFC  0100               	movlb	0	; () banked
 40457  003DFE  6F69               	movwf	(??_calib_data_set_default_diff_pr+1)& (0+255),b
 40458  003E00  0E04               	movlw	4
 40459  003E02  0100               	movlb	0	; () banked
 40460  003E04  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40461  003E06  0E00               	movlw	0
 40462  003E08  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40463  003E0A  50F3               	movf	prodl,w,c
 40464  003E0C  0100               	movlb	0	; () banked
 40465  003E0E  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40466  003E10  50F4               	movf	prodh,w,c
 40467  003E12  0100               	movlb	0	; () banked
 40468  003E14  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40469  003E16  0100               	movlb	0	; () banked
 40470  003E18  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40471  003E1A  0D34               	mullw	52
 40472  003E1C  50F3               	movf	prodl,w,c
 40473  003E1E  0100               	movlb	0	; () banked
 40474  003E20  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40475  003E22  50F4               	movf	prodh,w,c
 40476  003E24  0100               	movlb	0	; () banked
 40477  003E26  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40478  003E28  0E06               	movlw	6
 40479  003E2A  0100               	movlb	0	; () banked
 40480  003E2C  2568               	addwf	??_calib_data_set_default_diff_pr& (0+255),w,b
 40481  003E2E  6ED9               	movwf	fsr2l,c
 40482  003E30  0E00               	movlw	0
 40483  003E32  0100               	movlb	0	; () banked
 40484  003E34  2169               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),w,b
 40485  003E36  6EDA               	movwf	fsr2h,c
 40486  003E38  0100               	movlb	0	; () banked
 40487  003E3A  C062  FFDE         	movff	?___wmul,postinc2
 40488  003E3E  0100               	movlb	0	; () banked
 40489  003E40  C063  FFDD         	movff	?___wmul+1,postdec2
 40490                           
 40491                           ; BSR set to: 0
 40492  003E44  0100               	movlb	0	; () banked
 40493  003E46  2B6E               	incf	calib_data_set_default_diff_pr@j& (0+255),f,b
 40494  003E48  D72D               	goto	l15659
 40495  003E4A                     l15669:
 40496                           
 40497                           ; BSR set to: 0
 40498  003E4A  0100               	movlb	0	; () banked
 40499  003E4C  2B6F               	incf	calib_data_set_default_diff_pr@i& (0+255),f,b
 40500  003E4E  D717               	goto	l15651
 40501  003E50                     __end_of_calib_data_set_default_diff_pr:
 40502                           	opt stack 0
 40503                           tosu	equ	0xFFF
 40504                           tosh	equ	0xFFE
 40505                           tosl	equ	0xFFD
 40506                           pclath	equ	0xFFA
 40507                           tblptru	equ	0xFF8
 40508                           tblptrh	equ	0xFF7
 40509                           tblptrl	equ	0xFF6
 40510                           tablat	equ	0xFF5
 40511                           prodh	equ	0xFF4
 40512                           prodl	equ	0xFF3
 40513                           intcon	equ	0xFF2
 40514                           indf0	equ	0xFEF
 40515                           postinc0	equ	0xFEE
 40516                           fsr0h	equ	0xFEA
 40517                           fsr0l	equ	0xFE9
 40518                           wreg	equ	0xFE8
 40519                           indf1	equ	0xFE7
 40520                           postinc1	equ	0xFE6
 40521                           postdec1	equ	0xFE5
 40522                           plusw1	equ	0xFE3
 40523                           fsr1h	equ	0xFE2
 40524                           fsr1l	equ	0xFE1
 40525                           indf2	equ	0xFDF
 40526                           postinc2	equ	0xFDE
 40527                           postdec2	equ	0xFDD
 40528                           plusw2	equ	0xFDB
 40529                           fsr2h	equ	0xFDA
 40530                           fsr2l	equ	0xFD9
 40531                           status	equ	0xFD8
 40532                           
 40533 ;; *************** function ___wmul *****************
 40534 ;; Defined at:
 40535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 40536 ;; Parameters:    Size  Location     Type
 40537 ;;  multiplier      2    2[BANK0 ] unsigned int 
 40538 ;;  multiplicand    2    4[BANK0 ] unsigned int 
 40539 ;; Auto vars:     Size  Location     Type
 40540 ;;  product         2    6[BANK0 ] unsigned int 
 40541 ;; Return value:  Size  Location     Type
 40542 ;;                  2    2[BANK0 ] unsigned int 
 40543 ;; Registers used:
 40544 ;;		wreg, status,2, status,0, prodl, prodh
 40545 ;; Tracked objects:
 40546 ;;		On entry : 0/0
 40547 ;;		On exit  : 0/0
 40548 ;;		Unchanged: 0/0
 40549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40554 ;;Total ram usage:        6 bytes
 40555 ;; Hardware stack levels used:    1
 40556 ;; Hardware stack levels required when called:    4
 40557 ;; This function calls:
 40558 ;;		Nothing
 40559 ;; This function is called by:
 40560 ;;		_calib_data_set_default_diff_pr
 40561 ;;		_calib_data_set_default_pr
 40562 ;;		_key_adj_value_fixed
 40563 ;; This function uses a non-reentrant model
 40564 ;;
 40565                           
 40566                           	psect	text203
 40567  009C4A                     __ptext203:
 40568                           	opt stack 0
 40569  009C4A                     ___wmul:
 40570                           	opt stack 21
 40571                           
 40572                           ; BSR set to: 0
 40573                           ;incstack = 0
 40574  009C4A  0100               	movlb	0	; () banked
 40575  009C4C  5162               	movf	___wmul@multiplier& (0+255),w,b
 40576  009C4E  0100               	movlb	0	; () banked
 40577  009C50  0364               	mulwf	___wmul@multiplicand& (0+255),b
 40578  009C52  CFF3 F066          	movff	prodl,___wmul@product
 40579  009C56  CFF4 F067          	movff	prodh,___wmul@product+1
 40580  009C5A  0100               	movlb	0	; () banked
 40581  009C5C  5162               	movf	___wmul@multiplier& (0+255),w,b
 40582  009C5E  0100               	movlb	0	; () banked
 40583  009C60  0365               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 40584  009C62  50F3               	movf	prodl,w,c
 40585  009C64  0100               	movlb	0	; () banked
 40586  009C66  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 40587  009C68  0100               	movlb	0	; () banked
 40588  009C6A  5163               	movf	(___wmul@multiplier+1)& (0+255),w,b
 40589  009C6C  0100               	movlb	0	; () banked
 40590  009C6E  0364               	mulwf	___wmul@multiplicand& (0+255),b
 40591  009C70  50F3               	movf	prodl,w,c
 40592  009C72  0100               	movlb	0	; () banked
 40593  009C74  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 40594                           
 40595                           ; BSR set to: 0
 40596  009C76  C066  F062         	movff	___wmul@product,?___wmul
 40597  009C7A  C067  F063         	movff	___wmul@product+1,?___wmul+1
 40598  009C7E  0012               	return	
 40599  009C80                     __end_of___wmul:
 40600                           	opt stack 0
 40601                           tosu	equ	0xFFF
 40602                           tosh	equ	0xFFE
 40603                           tosl	equ	0xFFD
 40604                           pclath	equ	0xFFA
 40605                           tblptru	equ	0xFF8
 40606                           tblptrh	equ	0xFF7
 40607                           tblptrl	equ	0xFF6
 40608                           tablat	equ	0xFF5
 40609                           prodh	equ	0xFF4
 40610                           prodl	equ	0xFF3
 40611                           intcon	equ	0xFF2
 40612                           indf0	equ	0xFEF
 40613                           postinc0	equ	0xFEE
 40614                           fsr0h	equ	0xFEA
 40615                           fsr0l	equ	0xFE9
 40616                           wreg	equ	0xFE8
 40617                           indf1	equ	0xFE7
 40618                           postinc1	equ	0xFE6
 40619                           postdec1	equ	0xFE5
 40620                           plusw1	equ	0xFE3
 40621                           fsr1h	equ	0xFE2
 40622                           fsr1l	equ	0xFE1
 40623                           indf2	equ	0xFDF
 40624                           postinc2	equ	0xFDE
 40625                           postdec2	equ	0xFDD
 40626                           plusw2	equ	0xFDB
 40627                           fsr2h	equ	0xFDA
 40628                           fsr2l	equ	0xFD9
 40629                           status	equ	0xFD8
 40630                           
 40631 ;; *************** function _at24c02_write_n_byte *****************
 40632 ;; Defined at:
 40633 ;;		line 70 in file "src/driver/ex_eeprom.c"
 40634 ;; Parameters:    Size  Location     Type
 40635 ;;  pAt24c02        2    6[BANK0 ] PTR struct .
 40636 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 40637 ;;  addr            1    8[BANK0 ] unsigned char 
 40638 ;;  buf             2    9[BANK0 ] PTR unsigned char 
 40639 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 40640 ;;  len             2   11[BANK0 ] unsigned int 
 40641 ;; Auto vars:     Size  Location     Type
 40642 ;;  i               2   13[BANK0 ] unsigned int 
 40643 ;; Return value:  Size  Location     Type
 40644 ;;                  1    wreg      void 
 40645 ;; Registers used:
 40646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 40647 ;; Tracked objects:
 40648 ;;		On entry : 0/0
 40649 ;;		On exit  : 0/0
 40650 ;;		Unchanged: 0/0
 40651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40652 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40655 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40656 ;;Total ram usage:        9 bytes
 40657 ;; Hardware stack levels used:    1
 40658 ;; Hardware stack levels required when called:    8
 40659 ;; This function calls:
 40660 ;;		_delay_ms
 40661 ;;		_iic_send_byte
 40662 ;;		_iic_start
 40663 ;;		_iic_stop
 40664 ;; This function is called by:
 40665 ;;		_calib_data_init_diff_pr
 40666 ;;		_calib_data_init_pr
 40667 ;;		___set_short_diff_calib
 40668 ;;		___set_short_pr_calib
 40669 ;; This function uses a non-reentrant model
 40670 ;;
 40671                           
 40672                           	psect	text204
 40673  005BDE                     __ptext204:
 40674                           	opt stack 0
 40675  005BDE                     _at24c02_write_n_byte:
 40676                           	opt stack 19
 40677                           
 40678                           ;ex_eeprom.c: 72: uint16_t i;
 40679                           ;ex_eeprom.c: 73: for(i=0;i<len;i++){
 40680                           
 40681                           ; BSR set to: 0
 40682                           ;incstack = 0
 40683  005BDE  0E00               	movlw	0
 40684  005BE0  0100               	movlb	0	; () banked
 40685  005BE2  6F6E               	movwf	(at24c02_write_n_byte@i+1)& (0+255),b
 40686  005BE4  0E00               	movlw	0
 40687  005BE6  6F6D               	movwf	at24c02_write_n_byte@i& (0+255),b
 40688  005BE8  D07A               	goto	l15005
 40689  005BEA                     l14993:
 40690                           
 40691                           ; BSR set to: 0
 40692                           ;ex_eeprom.c: 74: pAt24c02->iic_start();
 40693  005BEA  0100               	movlb	0	; () banked
 40694  005BEC  EE20 F001          	lfsr	2,1
 40695  005BF0  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40696  005BF2  26D9               	addwf	fsr2l,f,c
 40697  005BF4  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40698  005BF6  22DA               	addwfc	fsr2h,f,c
 40699  005BF8  D801               	call	u13918
 40700  005BFA  D00A               	goto	u13919
 40701  005BFC                     u13918:
 40702  005BFC  0005               	push	
 40703  005BFE  6EFA               	movwf	pclath,c
 40704  005C00  50DE               	movf	postinc2,w,c
 40705  005C02  6EFD               	movwf	tosl,c
 40706  005C04  50DE               	movf	postinc2,w,c
 40707  005C06  6EFE               	movwf	tosh,c
 40708  005C08  50F8               	movf	tblptru,w,c
 40709  005C0A  6EFF               	movwf	tosu,c
 40710  005C0C  50FA               	movf	pclath,w,c
 40711  005C0E  0012               	return		;indir
 40712  005C10                     u13919:
 40713                           
 40714                           ;ex_eeprom.c: 75: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 40715  005C10  0100               	movlb	0	; () banked
 40716  005C12  EE20 F005          	lfsr	2,5
 40717  005C16  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40718  005C18  26D9               	addwf	fsr2l,f,c
 40719  005C1A  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40720  005C1C  22DA               	addwfc	fsr2h,f,c
 40721  005C1E  D801               	call	u13928
 40722  005C20  D00F               	goto	u13929
 40723  005C22                     u13928:
 40724  005C22  0005               	push	
 40725  005C24  6EFA               	movwf	pclath,c
 40726  005C26  50DE               	movf	postinc2,w,c
 40727  005C28  6EFD               	movwf	tosl,c
 40728  005C2A  50DE               	movf	postinc2,w,c
 40729  005C2C  6EFE               	movwf	tosh,c
 40730  005C2E  50F8               	movf	tblptru,w,c
 40731  005C30  6EFF               	movwf	tosu,c
 40732  005C32  50FA               	movf	pclath,w,c
 40733  005C34  C066  FFD9         	movff	at24c02_write_n_byte@pAt24c02,fsr2l
 40734  005C38  C067  FFDA         	movff	at24c02_write_n_byte@pAt24c02+1,fsr2h
 40735  005C3C  50DF               	movf	indf2,w,c
 40736  005C3E  0012               	return		;indir
 40737  005C40                     u13929:
 40738                           
 40739                           ;ex_eeprom.c: 76: pAt24c02->iic_send_byte(addr++);
 40740  005C40  0100               	movlb	0	; () banked
 40741  005C42  EE20 F005          	lfsr	2,5
 40742  005C46  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40743  005C48  26D9               	addwf	fsr2l,f,c
 40744  005C4A  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40745  005C4C  22DA               	addwfc	fsr2h,f,c
 40746  005C4E  D801               	call	u13938
 40747  005C50  D00C               	goto	l14995
 40748  005C52                     u13938:
 40749  005C52  0005               	push	
 40750  005C54  6EFA               	movwf	pclath,c
 40751  005C56  50DE               	movf	postinc2,w,c
 40752  005C58  6EFD               	movwf	tosl,c
 40753  005C5A  50DE               	movf	postinc2,w,c
 40754  005C5C  6EFE               	movwf	tosh,c
 40755  005C5E  50F8               	movf	tblptru,w,c
 40756  005C60  6EFF               	movwf	tosu,c
 40757  005C62  50FA               	movf	pclath,w,c
 40758  005C64  0100               	movlb	0	; () banked
 40759  005C66  5168               	movf	at24c02_write_n_byte@addr& (0+255),w,b
 40760  005C68  0012               	return		;indir
 40761  005C6A                     l14995:
 40762  005C6A  0100               	movlb	0	; () banked
 40763  005C6C  2B68               	incf	at24c02_write_n_byte@addr& (0+255),f,b
 40764                           
 40765                           ; BSR set to: 0
 40766                           ;ex_eeprom.c: 78: pAt24c02->iic_send_byte(*buf++);
 40767  005C6E  0100               	movlb	0	; () banked
 40768  005C70  EE20 F005          	lfsr	2,5
 40769  005C74  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40770  005C76  26D9               	addwf	fsr2l,f,c
 40771  005C78  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40772  005C7A  22DA               	addwfc	fsr2h,f,c
 40773  005C7C  D801               	call	u13948
 40774  005C7E  D00F               	goto	u13949
 40775  005C80                     u13948:
 40776  005C80  0005               	push	
 40777  005C82  6EFA               	movwf	pclath,c
 40778  005C84  50DE               	movf	postinc2,w,c
 40779  005C86  6EFD               	movwf	tosl,c
 40780  005C88  50DE               	movf	postinc2,w,c
 40781  005C8A  6EFE               	movwf	tosh,c
 40782  005C8C  50F8               	movf	tblptru,w,c
 40783  005C8E  6EFF               	movwf	tosu,c
 40784  005C90  50FA               	movf	pclath,w,c
 40785  005C92  C069  FFD9         	movff	at24c02_write_n_byte@buf,fsr2l
 40786  005C96  C06A  FFDA         	movff	at24c02_write_n_byte@buf+1,fsr2h
 40787  005C9A  50DF               	movf	indf2,w,c
 40788  005C9C  0012               	return		;indir
 40789  005C9E                     u13949:
 40790  005C9E  0100               	movlb	0	; () banked
 40791  005CA0  4B69               	infsnz	at24c02_write_n_byte@buf& (0+255),f,b
 40792  005CA2  2B6A               	incf	(at24c02_write_n_byte@buf+1)& (0+255),f,b
 40793                           
 40794                           ; BSR set to: 0
 40795                           ;ex_eeprom.c: 79: pAt24c02->iic_stop();
 40796  005CA4  0100               	movlb	0	; () banked
 40797  005CA6  EE20 F003          	lfsr	2,3
 40798  005CAA  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40799  005CAC  26D9               	addwf	fsr2l,f,c
 40800  005CAE  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40801  005CB0  22DA               	addwfc	fsr2h,f,c
 40802  005CB2  D801               	call	u13958
 40803  005CB4  D00A               	goto	l15001
 40804  005CB6                     u13958:
 40805  005CB6  0005               	push	
 40806  005CB8  6EFA               	movwf	pclath,c
 40807  005CBA  50DE               	movf	postinc2,w,c
 40808  005CBC  6EFD               	movwf	tosl,c
 40809  005CBE  50DE               	movf	postinc2,w,c
 40810  005CC0  6EFE               	movwf	tosh,c
 40811  005CC2  50F8               	movf	tblptru,w,c
 40812  005CC4  6EFF               	movwf	tosu,c
 40813  005CC6  50FA               	movf	pclath,w,c
 40814  005CC8  0012               	return		;indir
 40815  005CCA                     l15001:
 40816                           
 40817                           ;ex_eeprom.c: 80: delay_ms(1);
 40818  005CCA  0E00               	movlw	0
 40819  005CCC  0100               	movlb	0	; () banked
 40820  005CCE  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 40821  005CD0  0E01               	movlw	1
 40822  005CD2  6F64               	movwf	delay_ms@dly& (0+255),b
 40823  005CD4  EC25  F050         	call	_delay_ms
 40824  005CD8  0100               	movlb	0	; () banked
 40825  005CDA  4B6D               	infsnz	at24c02_write_n_byte@i& (0+255),f,b
 40826  005CDC  2B6E               	incf	(at24c02_write_n_byte@i+1)& (0+255),f,b
 40827  005CDE                     l15005:
 40828                           
 40829                           ; BSR set to: 0
 40830  005CDE  0100               	movlb	0	; () banked
 40831  005CE0  516B               	movf	at24c02_write_n_byte@len& (0+255),w,b
 40832  005CE2  0100               	movlb	0	; () banked
 40833  005CE4  5D6D               	subwf	at24c02_write_n_byte@i& (0+255),w,b
 40834  005CE6  0100               	movlb	0	; () banked
 40835  005CE8  516C               	movf	(at24c02_write_n_byte@len+1)& (0+255),w,b
 40836  005CEA  0100               	movlb	0	; () banked
 40837  005CEC  596E               	subwfb	(at24c02_write_n_byte@i+1)& (0+255),w,b
 40838  005CEE  B0D8               	btfsc	status,0,c
 40839  005CF0  0012               	return	
 40840  005CF2  D77B               	goto	l14993
 40841  005CF4                     __end_of_at24c02_write_n_byte:
 40842                           	opt stack 0
 40843                           tosu	equ	0xFFF
 40844                           tosh	equ	0xFFE
 40845                           tosl	equ	0xFFD
 40846                           pclath	equ	0xFFA
 40847                           tblptru	equ	0xFF8
 40848                           tblptrh	equ	0xFF7
 40849                           tblptrl	equ	0xFF6
 40850                           tablat	equ	0xFF5
 40851                           prodh	equ	0xFF4
 40852                           prodl	equ	0xFF3
 40853                           intcon	equ	0xFF2
 40854                           indf0	equ	0xFEF
 40855                           postinc0	equ	0xFEE
 40856                           fsr0h	equ	0xFEA
 40857                           fsr0l	equ	0xFE9
 40858                           wreg	equ	0xFE8
 40859                           indf1	equ	0xFE7
 40860                           postinc1	equ	0xFE6
 40861                           postdec1	equ	0xFE5
 40862                           plusw1	equ	0xFE3
 40863                           fsr1h	equ	0xFE2
 40864                           fsr1l	equ	0xFE1
 40865                           indf2	equ	0xFDF
 40866                           postinc2	equ	0xFDE
 40867                           postdec2	equ	0xFDD
 40868                           plusw2	equ	0xFDB
 40869                           fsr2h	equ	0xFDA
 40870                           fsr2l	equ	0xFD9
 40871                           status	equ	0xFD8
 40872                           
 40873 ;; *************** function _delay_ms *****************
 40874 ;; Defined at:
 40875 ;;		line 97 in file "src/soc/clock.c"
 40876 ;; Parameters:    Size  Location     Type
 40877 ;;  dly             2    4[BANK0 ] unsigned int 
 40878 ;; Auto vars:     Size  Location     Type
 40879 ;;		None
 40880 ;; Return value:  Size  Location     Type
 40881 ;;                  1    wreg      void 
 40882 ;; Registers used:
 40883 ;;		wreg, status,2, status,0, cstack
 40884 ;; Tracked objects:
 40885 ;;		On entry : 0/0
 40886 ;;		On exit  : 0/0
 40887 ;;		Unchanged: 0/0
 40888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40892 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40893 ;;Total ram usage:        2 bytes
 40894 ;; Hardware stack levels used:    1
 40895 ;; Hardware stack levels required when called:    5
 40896 ;; This function calls:
 40897 ;;		_delay_us
 40898 ;; This function is called by:
 40899 ;;		_key_waite_release
 40900 ;;		_at24c02_write_n_byte
 40901 ;;		_key_polling
 40902 ;; This function uses a non-reentrant model
 40903 ;;
 40904                           
 40905                           	psect	text205
 40906  00A04A                     __ptext205:
 40907                           	opt stack 0
 40908  00A04A                     _delay_ms:
 40909                           	opt stack 22
 40910                           
 40911                           ;clock.c: 99: while(dly>0){
 40912                           
 40913                           ; BSR set to: 0
 40914                           ;incstack = 0
 40915  00A04A  D00B               	goto	l14623
 40916  00A04C                     l14619:
 40917                           
 40918                           ;clock.c: 100: delay_us(1000);
 40919  00A04C  0E03               	movlw	3
 40920  00A04E  0100               	movlb	0	; () banked
 40921  00A050  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40922  00A052  0EE8               	movlw	232
 40923  00A054  6F60               	movwf	delay_us@dly& (0+255),b
 40924  00A056  ECD3  F04D         	call	_delay_us	;wreg free
 40925                           
 40926                           ;clock.c: 101: dly--;
 40927  00A05A  0100               	movlb	0	; () banked
 40928  00A05C  0764               	decf	delay_ms@dly& (0+255),f,b
 40929  00A05E  A0D8               	btfss	status,0,c
 40930  00A060  0765               	decf	(delay_ms@dly+1)& (0+255),f,b
 40931  00A062                     l14623:
 40932  00A062  0100               	movlb	0	; () banked
 40933  00A064  5164               	movf	delay_ms@dly& (0+255),w,b
 40934  00A066  0100               	movlb	0	; () banked
 40935  00A068  1165               	iorwf	(delay_ms@dly+1)& (0+255),w,b
 40936  00A06A  B4D8               	btfsc	status,2,c
 40937  00A06C  0012               	return	
 40938  00A06E  D7EE               	goto	l14619
 40939  00A070                     __end_of_delay_ms:
 40940                           	opt stack 0
 40941                           tosu	equ	0xFFF
 40942                           tosh	equ	0xFFE
 40943                           tosl	equ	0xFFD
 40944                           pclath	equ	0xFFA
 40945                           tblptru	equ	0xFF8
 40946                           tblptrh	equ	0xFF7
 40947                           tblptrl	equ	0xFF6
 40948                           tablat	equ	0xFF5
 40949                           prodh	equ	0xFF4
 40950                           prodl	equ	0xFF3
 40951                           intcon	equ	0xFF2
 40952                           indf0	equ	0xFEF
 40953                           postinc0	equ	0xFEE
 40954                           fsr0h	equ	0xFEA
 40955                           fsr0l	equ	0xFE9
 40956                           wreg	equ	0xFE8
 40957                           indf1	equ	0xFE7
 40958                           postinc1	equ	0xFE6
 40959                           postdec1	equ	0xFE5
 40960                           plusw1	equ	0xFE3
 40961                           fsr1h	equ	0xFE2
 40962                           fsr1l	equ	0xFE1
 40963                           indf2	equ	0xFDF
 40964                           postinc2	equ	0xFDE
 40965                           postdec2	equ	0xFDD
 40966                           plusw2	equ	0xFDB
 40967                           fsr2h	equ	0xFDA
 40968                           fsr2l	equ	0xFD9
 40969                           status	equ	0xFD8
 40970                           
 40971 ;; *************** function _at24c02_read_n_byte *****************
 40972 ;; Defined at:
 40973 ;;		line 45 in file "src/driver/ex_eeprom.c"
 40974 ;; Parameters:    Size  Location     Type
 40975 ;;  pAt24c02        2    8[BANK0 ] PTR struct .
 40976 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 40977 ;;  addr            1   10[BANK0 ] unsigned char 
 40978 ;;  buf             2   11[BANK0 ] PTR unsigned char 
 40979 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 40980 ;;  len             2   13[BANK0 ] unsigned int 
 40981 ;; Auto vars:     Size  Location     Type
 40982 ;;  i               2   19[BANK0 ] unsigned int 
 40983 ;; Return value:  Size  Location     Type
 40984 ;;                  1    wreg      void 
 40985 ;; Registers used:
 40986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 40987 ;; Tracked objects:
 40988 ;;		On entry : 0/0
 40989 ;;		On exit  : 0/0
 40990 ;;		Unchanged: 0/0
 40991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40992 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40993 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40994 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40995 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40996 ;;Total ram usage:       13 bytes
 40997 ;; Hardware stack levels used:    1
 40998 ;; Hardware stack levels required when called:    8
 40999 ;; This function calls:
 41000 ;;		_iic_received_byte_if_ack
 41001 ;;		_iic_send_byte
 41002 ;;		_iic_start
 41003 ;;		_iic_stop
 41004 ;; This function is called by:
 41005 ;;		_calib_data_init_diff_pr
 41006 ;;		_calib_data_init_pr
 41007 ;; This function uses a non-reentrant model
 41008 ;;
 41009                           
 41010                           	psect	text206
 41011  004570                     __ptext206:
 41012                           	opt stack 0
 41013  004570                     _at24c02_read_n_byte:
 41014                           	opt stack 20
 41015                           
 41016                           ;ex_eeprom.c: 48: uint16_t i;
 41017                           ;ex_eeprom.c: 49: pAt24c02->iic_start();
 41018                           
 41019                           ; BSR set to: 0
 41020                           ;incstack = 0
 41021  004570  0100               	movlb	0	; () banked
 41022  004572  EE20 F001          	lfsr	2,1
 41023  004576  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41024  004578  26D9               	addwf	fsr2l,f,c
 41025  00457A  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41026  00457C  22DA               	addwfc	fsr2h,f,c
 41027  00457E  D801               	call	u14578
 41028  004580  D00A               	goto	u14579
 41029  004582                     u14578:
 41030  004582  0005               	push	
 41031  004584  6EFA               	movwf	pclath,c
 41032  004586  50DE               	movf	postinc2,w,c
 41033  004588  6EFD               	movwf	tosl,c
 41034  00458A  50DE               	movf	postinc2,w,c
 41035  00458C  6EFE               	movwf	tosh,c
 41036  00458E  50F8               	movf	tblptru,w,c
 41037  004590  6EFF               	movwf	tosu,c
 41038  004592  50FA               	movf	pclath,w,c
 41039  004594  0012               	return		;indir
 41040  004596                     u14579:
 41041                           
 41042                           ;ex_eeprom.c: 50: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 41043  004596  0100               	movlb	0	; () banked
 41044  004598  EE20 F005          	lfsr	2,5
 41045  00459C  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41046  00459E  26D9               	addwf	fsr2l,f,c
 41047  0045A0  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41048  0045A2  22DA               	addwfc	fsr2h,f,c
 41049  0045A4  D801               	call	u14588
 41050  0045A6  D00F               	goto	u14589
 41051  0045A8                     u14588:
 41052  0045A8  0005               	push	
 41053  0045AA  6EFA               	movwf	pclath,c
 41054  0045AC  50DE               	movf	postinc2,w,c
 41055  0045AE  6EFD               	movwf	tosl,c
 41056  0045B0  50DE               	movf	postinc2,w,c
 41057  0045B2  6EFE               	movwf	tosh,c
 41058  0045B4  50F8               	movf	tblptru,w,c
 41059  0045B6  6EFF               	movwf	tosu,c
 41060  0045B8  50FA               	movf	pclath,w,c
 41061  0045BA  C068  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 41062  0045BE  C069  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 41063  0045C2  50DF               	movf	indf2,w,c
 41064  0045C4  0012               	return		;indir
 41065  0045C6                     u14589:
 41066                           
 41067                           ;ex_eeprom.c: 51: pAt24c02->iic_send_byte(addr);
 41068  0045C6  0100               	movlb	0	; () banked
 41069  0045C8  EE20 F005          	lfsr	2,5
 41070  0045CC  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41071  0045CE  26D9               	addwf	fsr2l,f,c
 41072  0045D0  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41073  0045D2  22DA               	addwfc	fsr2h,f,c
 41074  0045D4  D801               	call	u14598
 41075  0045D6  D00C               	goto	u14599
 41076  0045D8                     u14598:
 41077  0045D8  0005               	push	
 41078  0045DA  6EFA               	movwf	pclath,c
 41079  0045DC  50DE               	movf	postinc2,w,c
 41080  0045DE  6EFD               	movwf	tosl,c
 41081  0045E0  50DE               	movf	postinc2,w,c
 41082  0045E2  6EFE               	movwf	tosh,c
 41083  0045E4  50F8               	movf	tblptru,w,c
 41084  0045E6  6EFF               	movwf	tosu,c
 41085  0045E8  50FA               	movf	pclath,w,c
 41086  0045EA  0100               	movlb	0	; () banked
 41087  0045EC  516A               	movf	at24c02_read_n_byte@addr& (0+255),w,b
 41088  0045EE  0012               	return		;indir
 41089  0045F0                     u14599:
 41090                           
 41091                           ;ex_eeprom.c: 53: pAt24c02->iic_start();
 41092  0045F0  0100               	movlb	0	; () banked
 41093  0045F2  EE20 F001          	lfsr	2,1
 41094  0045F6  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41095  0045F8  26D9               	addwf	fsr2l,f,c
 41096  0045FA  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41097  0045FC  22DA               	addwfc	fsr2h,f,c
 41098  0045FE  D801               	call	u14608
 41099  004600  D00A               	goto	u14609
 41100  004602                     u14608:
 41101  004602  0005               	push	
 41102  004604  6EFA               	movwf	pclath,c
 41103  004606  50DE               	movf	postinc2,w,c
 41104  004608  6EFD               	movwf	tosl,c
 41105  00460A  50DE               	movf	postinc2,w,c
 41106  00460C  6EFE               	movwf	tosh,c
 41107  00460E  50F8               	movf	tblptru,w,c
 41108  004610  6EFF               	movwf	tosu,c
 41109  004612  50FA               	movf	pclath,w,c
 41110  004614  0012               	return		;indir
 41111  004616                     u14609:
 41112                           
 41113                           ;ex_eeprom.c: 54: pAt24c02->iic_send_byte(pAt24c02->slaveAddr+1);
 41114  004616  0100               	movlb	0	; () banked
 41115  004618  EE20 F005          	lfsr	2,5
 41116  00461C  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41117  00461E  26D9               	addwf	fsr2l,f,c
 41118  004620  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41119  004622  22DA               	addwfc	fsr2h,f,c
 41120  004624  D801               	call	u14618
 41121  004626  D013               	goto	l15711
 41122  004628                     u14618:
 41123  004628  0005               	push	
 41124  00462A  6EFA               	movwf	pclath,c
 41125  00462C  50DE               	movf	postinc2,w,c
 41126  00462E  6EFD               	movwf	tosl,c
 41127  004630  50DE               	movf	postinc2,w,c
 41128  004632  6EFE               	movwf	tosh,c
 41129  004634  50F8               	movf	tblptru,w,c
 41130  004636  6EFF               	movwf	tosu,c
 41131  004638  50FA               	movf	pclath,w,c
 41132  00463A  C068  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 41133  00463E  C069  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 41134  004642  50DF               	movf	indf2,w,c
 41135  004644  0100               	movlb	0	; () banked
 41136  004646  6F6F               	movwf	??_at24c02_read_n_byte& (0+255),b
 41137  004648  0100               	movlb	0	; () banked
 41138  00464A  296F               	incf	??_at24c02_read_n_byte& (0+255),w,b
 41139  00464C  0012               	return		;indir
 41140  00464E                     l15711:
 41141                           
 41142                           ;ex_eeprom.c: 55: for(i=0;i<len-1;i++){
 41143  00464E  0E00               	movlw	0
 41144  004650  0100               	movlb	0	; () banked
 41145  004652  6F74               	movwf	(at24c02_read_n_byte@i+1)& (0+255),b
 41146  004654  0E00               	movlw	0
 41147  004656  6F73               	movwf	at24c02_read_n_byte@i& (0+255),b
 41148  004658  D01F               	goto	l15719
 41149  00465A                     l15713:
 41150                           
 41151                           ; BSR set to: 0
 41152                           ;ex_eeprom.c: 56: *buf++=pAt24c02->iic_received_byte_if_ack(IIC_ACK);
 41153  00465A  0100               	movlb	0	; () banked
 41154  00465C  EE20 F009          	lfsr	2,9
 41155  004660  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41156  004662  26D9               	addwf	fsr2l,f,c
 41157  004664  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41158  004666  22DA               	addwfc	fsr2h,f,c
 41159  004668  D801               	call	u14628
 41160  00466A  D00B               	goto	u14629
 41161  00466C                     u14628:
 41162  00466C  0005               	push	
 41163  00466E  6EFA               	movwf	pclath,c
 41164  004670  50DE               	movf	postinc2,w,c
 41165  004672  6EFD               	movwf	tosl,c
 41166  004674  50DE               	movf	postinc2,w,c
 41167  004676  6EFE               	movwf	tosh,c
 41168  004678  50F8               	movf	tblptru,w,c
 41169  00467A  6EFF               	movwf	tosu,c
 41170  00467C  50FA               	movf	pclath,w,c
 41171  00467E  0E00               	movlw	0
 41172  004680  0012               	return		;indir
 41173  004682                     u14629:
 41174  004682  C06B  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 41175  004686  C06C  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 41176  00468A  6EDF               	movwf	indf2,c
 41177  00468C  0100               	movlb	0	; () banked
 41178  00468E  4B6B               	infsnz	at24c02_read_n_byte@buf& (0+255),f,b
 41179  004690  2B6C               	incf	(at24c02_read_n_byte@buf+1)& (0+255),f,b
 41180                           
 41181                           ; BSR set to: 0
 41182  004692  0100               	movlb	0	; () banked
 41183  004694  4B73               	infsnz	at24c02_read_n_byte@i& (0+255),f,b
 41184  004696  2B74               	incf	(at24c02_read_n_byte@i+1)& (0+255),f,b
 41185  004698                     l15719:
 41186                           
 41187                           ; BSR set to: 0
 41188  004698  0EFF               	movlw	255
 41189  00469A  0100               	movlb	0	; () banked
 41190  00469C  6F6F               	movwf	??_at24c02_read_n_byte& (0+255),b
 41191  00469E  0EFF               	movlw	255
 41192  0046A0  0100               	movlb	0	; () banked
 41193  0046A2  6F70               	movwf	(??_at24c02_read_n_byte+1)& (0+255),b
 41194  0046A4  C06D  F071         	movff	at24c02_read_n_byte@len,??_at24c02_read_n_byte+2
 41195  0046A8  C06E  F072         	movff	at24c02_read_n_byte@len+1,??_at24c02_read_n_byte+3
 41196  0046AC  0100               	movlb	0	; () banked
 41197  0046AE  516F               	movf	??_at24c02_read_n_byte& (0+255),w,b
 41198  0046B0  0100               	movlb	0	; () banked
 41199  0046B2  2771               	addwf	(??_at24c02_read_n_byte+2)& (0+255),f,b
 41200  0046B4  0100               	movlb	0	; () banked
 41201  0046B6  5170               	movf	(??_at24c02_read_n_byte+1)& (0+255),w,b
 41202  0046B8  0100               	movlb	0	; () banked
 41203  0046BA  2372               	addwfc	(??_at24c02_read_n_byte+3)& (0+255),f,b
 41204  0046BC  0100               	movlb	0	; () banked
 41205  0046BE  5171               	movf	(??_at24c02_read_n_byte+2)& (0+255),w,b
 41206  0046C0  0100               	movlb	0	; () banked
 41207  0046C2  5D73               	subwf	at24c02_read_n_byte@i& (0+255),w,b
 41208  0046C4  0100               	movlb	0	; () banked
 41209  0046C6  5172               	movf	(??_at24c02_read_n_byte+3)& (0+255),w,b
 41210  0046C8  0100               	movlb	0	; () banked
 41211  0046CA  5974               	subwfb	(at24c02_read_n_byte@i+1)& (0+255),w,b
 41212  0046CC  A0D8               	btfss	status,0,c
 41213  0046CE  D7C5               	goto	l15713
 41214                           
 41215                           ; BSR set to: 0
 41216                           ;ex_eeprom.c: 57: }
 41217                           ;ex_eeprom.c: 58: *buf=pAt24c02->iic_received_byte_if_ack(IIC_NACK);
 41218                           
 41219                           ; BSR set to: 0
 41220  0046D0  0100               	movlb	0	; () banked
 41221  0046D2  EE20 F009          	lfsr	2,9
 41222  0046D6  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41223  0046D8  26D9               	addwf	fsr2l,f,c
 41224  0046DA  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41225  0046DC  22DA               	addwfc	fsr2h,f,c
 41226  0046DE  D801               	call	u14648
 41227  0046E0  D00B               	goto	u14649
 41228  0046E2                     u14648:
 41229  0046E2  0005               	push	
 41230  0046E4  6EFA               	movwf	pclath,c
 41231  0046E6  50DE               	movf	postinc2,w,c
 41232  0046E8  6EFD               	movwf	tosl,c
 41233  0046EA  50DE               	movf	postinc2,w,c
 41234  0046EC  6EFE               	movwf	tosh,c
 41235  0046EE  50F8               	movf	tblptru,w,c
 41236  0046F0  6EFF               	movwf	tosu,c
 41237  0046F2  50FA               	movf	pclath,w,c
 41238  0046F4  0E01               	movlw	1
 41239  0046F6  0012               	return		;indir
 41240  0046F8                     u14649:
 41241  0046F8  C06B  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 41242  0046FC  C06C  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 41243  004700  6EDF               	movwf	indf2,c
 41244                           
 41245                           ;ex_eeprom.c: 59: pAt24c02->iic_stop();
 41246  004702  0100               	movlb	0	; () banked
 41247  004704  EE20 F003          	lfsr	2,3
 41248  004708  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41249  00470A  26D9               	addwf	fsr2l,f,c
 41250  00470C  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41251  00470E  22DA               	addwfc	fsr2h,f,c
 41252  004710  D801               	call	u14658
 41253  004712  0012               	return	
 41254  004714                     u14658:
 41255  004714  0005               	push	
 41256  004716  6EFA               	movwf	pclath,c
 41257  004718  50DE               	movf	postinc2,w,c
 41258  00471A  6EFD               	movwf	tosl,c
 41259  00471C  50DE               	movf	postinc2,w,c
 41260  00471E  6EFE               	movwf	tosh,c
 41261  004720  50F8               	movf	tblptru,w,c
 41262  004722  6EFF               	movwf	tosu,c
 41263  004724  50FA               	movf	pclath,w,c
 41264  004726  0012               	return		;indir
 41265  004728                     __end_of_at24c02_read_n_byte:
 41266                           	opt stack 0
 41267                           tosu	equ	0xFFF
 41268                           tosh	equ	0xFFE
 41269                           tosl	equ	0xFFD
 41270                           pclath	equ	0xFFA
 41271                           tblptru	equ	0xFF8
 41272                           tblptrh	equ	0xFF7
 41273                           tblptrl	equ	0xFF6
 41274                           tablat	equ	0xFF5
 41275                           prodh	equ	0xFF4
 41276                           prodl	equ	0xFF3
 41277                           intcon	equ	0xFF2
 41278                           indf0	equ	0xFEF
 41279                           postinc0	equ	0xFEE
 41280                           fsr0h	equ	0xFEA
 41281                           fsr0l	equ	0xFE9
 41282                           wreg	equ	0xFE8
 41283                           indf1	equ	0xFE7
 41284                           postinc1	equ	0xFE6
 41285                           postdec1	equ	0xFE5
 41286                           plusw1	equ	0xFE3
 41287                           fsr1h	equ	0xFE2
 41288                           fsr1l	equ	0xFE1
 41289                           indf2	equ	0xFDF
 41290                           postinc2	equ	0xFDE
 41291                           postdec2	equ	0xFDD
 41292                           plusw2	equ	0xFDB
 41293                           fsr2h	equ	0xFDA
 41294                           fsr2l	equ	0xFD9
 41295                           status	equ	0xFD8
 41296                           
 41297 ;; *************** function _iic_start *****************
 41298 ;; Defined at:
 41299 ;;		line 19 in file "src/driver/i2c.c"
 41300 ;; Parameters:    Size  Location     Type
 41301 ;;		None
 41302 ;; Auto vars:     Size  Location     Type
 41303 ;;		None
 41304 ;; Return value:  Size  Location     Type
 41305 ;;                  1    wreg      void 
 41306 ;; Registers used:
 41307 ;;		wreg, status,2, status,0, cstack
 41308 ;; Tracked objects:
 41309 ;;		On entry : 0/0
 41310 ;;		On exit  : 0/0
 41311 ;;		Unchanged: 0/0
 41312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41317 ;;Total ram usage:        0 bytes
 41318 ;; Hardware stack levels used:    1
 41319 ;; Hardware stack levels required when called:    5
 41320 ;; This function calls:
 41321 ;;		_delay_us
 41322 ;; This function is called by:
 41323 ;;		_ads1115_init
 41324 ;;		_at24c02_init
 41325 ;;		_pcf8574_init
 41326 ;;		_ads1115_write_reg
 41327 ;;		_ads1115_read_reg
 41328 ;;		_at24c02_write_n_byte
 41329 ;;		_at24c02_read_n_byte
 41330 ;;		_pcf8574_write_singel
 41331 ;;		_ad421_write_via_pcf8574
 41332 ;; This function uses a non-reentrant model
 41333 ;;
 41334                           
 41335                           	psect	text207
 41336  009B6E                     __ptext207:
 41337                           	opt stack 0
 41338  009B6E                     _iic_start:
 41339                           	opt stack 21
 41340                           
 41341                           ;incstack = 0
 41342                           ;i2c.c: 21: do{TRISC &= ~(1<<3);}while(0);;;
 41343  009B6E  9694               	bcf	3988,3,c	;volatile
 41344                           
 41345                           ;i2c.c: 22: do{TRISC &= ~(1<<4);}while(0);;;
 41346  009B70  9894               	bcf	3988,4,c	;volatile
 41347                           
 41348                           ;i2c.c: 24: do{LATC |= (1<<4);}while(0);;;
 41349  009B72  888B               	bsf	3979,4,c	;volatile
 41350                           
 41351                           ;i2c.c: 25: do{LATC |= (1<<3);}while(0);;;
 41352  009B74  868B               	bsf	3979,3,c	;volatile
 41353                           
 41354                           ;i2c.c: 26: delay_us(3);
 41355  009B76  0E00               	movlw	0
 41356  009B78  0100               	movlb	0	; () banked
 41357  009B7A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41358  009B7C  0E03               	movlw	3
 41359  009B7E  6F60               	movwf	delay_us@dly& (0+255),b
 41360  009B80  ECD3  F04D         	call	_delay_us
 41361                           
 41362                           ;i2c.c: 27: do{LATC &= ~(1<<4);}while(0);;;
 41363  009B84  988B               	bcf	3979,4,c	;volatile
 41364                           
 41365                           ;i2c.c: 28: delay_us(3);
 41366  009B86  0E00               	movlw	0
 41367  009B88  0100               	movlb	0	; () banked
 41368  009B8A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41369  009B8C  0E03               	movlw	3
 41370  009B8E  6F60               	movwf	delay_us@dly& (0+255),b
 41371  009B90  ECD3  F04D         	call	_delay_us	;wreg free
 41372                           
 41373                           ;i2c.c: 29: do{LATC &= ~(1<<3);}while(0);;;
 41374  009B94  968B               	bcf	3979,3,c	;volatile
 41375                           
 41376                           ;i2c.c: 30: delay_us(3);
 41377  009B96  0E00               	movlw	0
 41378  009B98  0100               	movlb	0	; () banked
 41379  009B9A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41380  009B9C  0E03               	movlw	3
 41381  009B9E  6F60               	movwf	delay_us@dly& (0+255),b
 41382  009BA0  ECD3  F04D         	call	_delay_us	;wreg free
 41383  009BA4  0012               	return		;funcret
 41384  009BA6                     __end_of_iic_start:
 41385                           	opt stack 0
 41386                           tosu	equ	0xFFF
 41387                           tosh	equ	0xFFE
 41388                           tosl	equ	0xFFD
 41389                           pclath	equ	0xFFA
 41390                           tblptru	equ	0xFF8
 41391                           tblptrh	equ	0xFF7
 41392                           tblptrl	equ	0xFF6
 41393                           tablat	equ	0xFF5
 41394                           prodh	equ	0xFF4
 41395                           prodl	equ	0xFF3
 41396                           intcon	equ	0xFF2
 41397                           indf0	equ	0xFEF
 41398                           postinc0	equ	0xFEE
 41399                           fsr0h	equ	0xFEA
 41400                           fsr0l	equ	0xFE9
 41401                           wreg	equ	0xFE8
 41402                           indf1	equ	0xFE7
 41403                           postinc1	equ	0xFE6
 41404                           postdec1	equ	0xFE5
 41405                           plusw1	equ	0xFE3
 41406                           fsr1h	equ	0xFE2
 41407                           fsr1l	equ	0xFE1
 41408                           indf2	equ	0xFDF
 41409                           postinc2	equ	0xFDE
 41410                           postdec2	equ	0xFDD
 41411                           plusw2	equ	0xFDB
 41412                           fsr2h	equ	0xFDA
 41413                           fsr2l	equ	0xFD9
 41414                           status	equ	0xFD8
 41415                           
 41416 ;; *************** function _iic_send_byte *****************
 41417 ;; Defined at:
 41418 ;;		line 84 in file "src/driver/i2c.c"
 41419 ;; Parameters:    Size  Location     Type
 41420 ;;  x               1    wreg     unsigned char 
 41421 ;; Auto vars:     Size  Location     Type
 41422 ;;  x               1    4[BANK0 ] unsigned char 
 41423 ;;  i               1    5[BANK0 ] unsigned char 
 41424 ;; Return value:  Size  Location     Type
 41425 ;;                  1    wreg      unsigned char 
 41426 ;; Registers used:
 41427 ;;		wreg, status,2, status,0, cstack
 41428 ;; Tracked objects:
 41429 ;;		On entry : 0/0
 41430 ;;		On exit  : 0/0
 41431 ;;		Unchanged: 0/0
 41432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41434 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41436 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41437 ;;Total ram usage:        2 bytes
 41438 ;; Hardware stack levels used:    1
 41439 ;; Hardware stack levels required when called:    7
 41440 ;; This function calls:
 41441 ;;		_delay_us
 41442 ;;		_iic_waite_ack
 41443 ;; This function is called by:
 41444 ;;		_ads1115_init
 41445 ;;		_at24c02_init
 41446 ;;		_pcf8574_init
 41447 ;;		_ads1115_write_reg
 41448 ;;		_ads1115_read_reg
 41449 ;;		_at24c02_write_n_byte
 41450 ;;		_at24c02_read_n_byte
 41451 ;;		_pcf8574_write_singel
 41452 ;;		_ad421_write_via_pcf8574
 41453 ;; This function uses a non-reentrant model
 41454 ;;
 41455                           
 41456                           	psect	text208
 41457  0087F0                     __ptext208:
 41458                           	opt stack 0
 41459  0087F0                     _iic_send_byte:
 41460                           	opt stack 19
 41461                           
 41462                           ;incstack = 0
 41463                           ;iic_send_byte@x stored from wreg
 41464  0087F0  0100               	movlb	0	; () banked
 41465  0087F2  6F64               	movwf	iic_send_byte@x& (0+255),b
 41466                           
 41467                           ;i2c.c: 86: uint8_t i;
 41468                           ;i2c.c: 87: do{TRISC &= ~(1<<3);}while(0);;;
 41469  0087F4  9694               	bcf	3988,3,c	;volatile
 41470                           
 41471                           ;i2c.c: 88: do{TRISC &= ~(1<<4);}while(0);;;
 41472  0087F6  9894               	bcf	3988,4,c	;volatile
 41473                           
 41474                           ;i2c.c: 89: do{LATC &= ~(1<<3);}while(0);;;
 41475  0087F8  968B               	bcf	3979,3,c	;volatile
 41476                           
 41477                           ;i2c.c: 90: delay_us(3);
 41478  0087FA  0E00               	movlw	0
 41479  0087FC  0100               	movlb	0	; () banked
 41480  0087FE  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41481  008800  0E03               	movlw	3
 41482  008802  6F60               	movwf	delay_us@dly& (0+255),b
 41483  008804  ECD3  F04D         	call	_delay_us	;wreg free
 41484                           
 41485                           ;i2c.c: 91: for(i=0;i<8;i++){
 41486  008808  0E00               	movlw	0
 41487  00880A  0100               	movlb	0	; () banked
 41488  00880C  6F65               	movwf	iic_send_byte@i& (0+255),b
 41489  00880E                     l14105:
 41490                           
 41491                           ; BSR set to: 0
 41492  00880E  0E07               	movlw	7
 41493  008810  0100               	movlb	0	; () banked
 41494  008812  6565               	cpfsgt	iic_send_byte@i& (0+255),b
 41495  008814  D001               	goto	l1622
 41496  008816  D023               	goto	l14125
 41497  008818                     l1622:
 41498                           
 41499                           ; BSR set to: 0
 41500                           ;i2c.c: 92: if(x&0x80){
 41501  008818  0100               	movlb	0	; () banked
 41502  00881A  AF64               	btfss	iic_send_byte@x& (0+255),7,b
 41503  00881C  D002               	goto	l14111
 41504                           
 41505                           ; BSR set to: 0
 41506                           
 41507                           ; BSR set to: 0
 41508                           
 41509                           ;i2c.c: 93: do{LATC |= (1<<4);}while(0);;;
 41510  00881E  888B               	bsf	3979,4,c	;volatile
 41511                           
 41512                           ; BSR set to: 0
 41513                           ;i2c.c: 94: }
 41514  008820  D001               	goto	l14113
 41515  008822                     l14111:
 41516                           
 41517                           ; BSR set to: 0
 41518  008822  988B               	bcf	3979,4,c	;volatile
 41519  008824                     l14113:
 41520                           
 41521                           ; BSR set to: 0
 41522                           ;i2c.c: 97: }
 41523                           ;i2c.c: 98: delay_us(3);
 41524  008824  0E00               	movlw	0
 41525  008826  0100               	movlb	0	; () banked
 41526  008828  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41527  00882A  0E03               	movlw	3
 41528  00882C  6F60               	movwf	delay_us@dly& (0+255),b
 41529  00882E  ECD3  F04D         	call	_delay_us	;wreg free
 41530                           
 41531                           ;i2c.c: 99: do{LATC |= (1<<3);}while(0);;;
 41532  008832  868B               	bsf	3979,3,c	;volatile
 41533                           
 41534                           ;i2c.c: 101: delay_us(3);
 41535  008834  0E00               	movlw	0
 41536  008836  0100               	movlb	0	; () banked
 41537  008838  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41538  00883A  0E03               	movlw	3
 41539  00883C  6F60               	movwf	delay_us@dly& (0+255),b
 41540  00883E  ECD3  F04D         	call	_delay_us	;wreg free
 41541                           
 41542                           ;i2c.c: 102: do{LATC &= ~(1<<3);}while(0);;;
 41543  008842  968B               	bcf	3979,3,c	;volatile
 41544                           
 41545                           ;i2c.c: 104: delay_us(3);
 41546  008844  0E00               	movlw	0
 41547  008846  0100               	movlb	0	; () banked
 41548  008848  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41549  00884A  0E03               	movlw	3
 41550  00884C  6F60               	movwf	delay_us@dly& (0+255),b
 41551  00884E  ECD3  F04D         	call	_delay_us	;wreg free
 41552                           
 41553                           ;i2c.c: 105: x<<=1;
 41554  008852  0100               	movlb	0	; () banked
 41555  008854  90D8               	bcf	status,0,c
 41556  008856  3764               	rlcf	iic_send_byte@x& (0+255),f,b
 41557                           
 41558                           ; BSR set to: 0
 41559  008858  0100               	movlb	0	; () banked
 41560  00885A  2B65               	incf	iic_send_byte@i& (0+255),f,b
 41561  00885C  D7D8               	goto	l14105
 41562  00885E                     l14125:
 41563                           
 41564                           ; BSR set to: 0
 41565                           ;i2c.c: 106: }
 41566                           ;i2c.c: 107: return iic_waite_ack();
 41567                           ;	Return value of _iic_send_byte is never used
 41568  00885E  EC4A  F04A         	call	_iic_waite_ack	;wreg free
 41569  008862  0012               	return	
 41570  008864                     __end_of_iic_send_byte:
 41571                           	opt stack 0
 41572                           tosu	equ	0xFFF
 41573                           tosh	equ	0xFFE
 41574                           tosl	equ	0xFFD
 41575                           pclath	equ	0xFFA
 41576                           tblptru	equ	0xFF8
 41577                           tblptrh	equ	0xFF7
 41578                           tblptrl	equ	0xFF6
 41579                           tablat	equ	0xFF5
 41580                           prodh	equ	0xFF4
 41581                           prodl	equ	0xFF3
 41582                           intcon	equ	0xFF2
 41583                           indf0	equ	0xFEF
 41584                           postinc0	equ	0xFEE
 41585                           fsr0h	equ	0xFEA
 41586                           fsr0l	equ	0xFE9
 41587                           wreg	equ	0xFE8
 41588                           indf1	equ	0xFE7
 41589                           postinc1	equ	0xFE6
 41590                           postdec1	equ	0xFE5
 41591                           plusw1	equ	0xFE3
 41592                           fsr1h	equ	0xFE2
 41593                           fsr1l	equ	0xFE1
 41594                           indf2	equ	0xFDF
 41595                           postinc2	equ	0xFDE
 41596                           postdec2	equ	0xFDD
 41597                           plusw2	equ	0xFDB
 41598                           fsr2h	equ	0xFDA
 41599                           fsr2l	equ	0xFD9
 41600                           status	equ	0xFD8
 41601                           
 41602 ;; *************** function _iic_waite_ack *****************
 41603 ;; Defined at:
 41604 ;;		line 63 in file "src/driver/i2c.c"
 41605 ;; Parameters:    Size  Location     Type
 41606 ;;		None
 41607 ;; Auto vars:     Size  Location     Type
 41608 ;;  timeout         1   31[COMRAM] unsigned char 
 41609 ;; Return value:  Size  Location     Type
 41610 ;;                  1    wreg      unsigned char 
 41611 ;; Registers used:
 41612 ;;		wreg, status,2, status,0, cstack
 41613 ;; Tracked objects:
 41614 ;;		On entry : 0/0
 41615 ;;		On exit  : 0/0
 41616 ;;		Unchanged: 0/0
 41617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41622 ;;Total ram usage:        1 bytes
 41623 ;; Hardware stack levels used:    1
 41624 ;; Hardware stack levels required when called:    6
 41625 ;; This function calls:
 41626 ;;		_delay_us
 41627 ;;		_iic_stop
 41628 ;; This function is called by:
 41629 ;;		_ads1115_init
 41630 ;;		_at24c02_init
 41631 ;;		_iic_send_byte
 41632 ;;		_pcf8574_init
 41633 ;; This function uses a non-reentrant model
 41634 ;;
 41635                           
 41636                           	psect	text209
 41637  009494                     __ptext209:
 41638                           	opt stack 0
 41639  009494                     _iic_waite_ack:
 41640                           	opt stack 19
 41641                           
 41642                           ;i2c.c: 65: uint8_t timeout=200;
 41643                           
 41644                           ;incstack = 0
 41645  009494  0EC8               	movlw	200
 41646  009496  6E20               	movwf	iic_waite_ack@timeout,c
 41647                           
 41648                           ;i2c.c: 66: do{TRISC &= ~(1<<3);}while(0);;;
 41649  009498  9694               	bcf	3988,3,c	;volatile
 41650                           
 41651                           ;i2c.c: 67: do{TRISC |= (1<<4);}while(0);;;
 41652  00949A  8894               	bsf	3988,4,c	;volatile
 41653                           
 41654                           ;i2c.c: 68: do{LATC &= ~(1<<3);}while(0);;;
 41655  00949C  968B               	bcf	3979,3,c	;volatile
 41656                           
 41657                           ;i2c.c: 69: delay_us(3);
 41658  00949E  0E00               	movlw	0
 41659  0094A0  0100               	movlb	0	; () banked
 41660  0094A2  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41661  0094A4  0E03               	movlw	3
 41662  0094A6  6F60               	movwf	delay_us@dly& (0+255),b
 41663  0094A8  ECD3  F04D         	call	_delay_us	;wreg free
 41664                           
 41665                           ;i2c.c: 70: do{LATC |= (1<<3);}while(0);;;
 41666  0094AC  868B               	bsf	3979,3,c	;volatile
 41667                           
 41668                           ;i2c.c: 71: delay_us(3);
 41669  0094AE  0E00               	movlw	0
 41670  0094B0  0100               	movlb	0	; () banked
 41671  0094B2  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41672  0094B4  0E03               	movlw	3
 41673  0094B6  6F60               	movwf	delay_us@dly& (0+255),b
 41674  0094B8  ECD3  F04D         	call	_delay_us	;wreg free
 41675                           
 41676                           ;i2c.c: 72: while(timeout--){
 41677  0094BC  D002               	goto	l13227
 41678  0094BE                     l1607:
 41679                           
 41680                           ;i2c.c: 73: if(!(PORTC & (1<<4)))break;
 41681  0094BE  A882               	btfss	3970,4,c	;volatile
 41682  0094C0  D004               	goto	l13229
 41683  0094C2                     l13227:
 41684  0094C2  0620               	decf	iic_waite_ack@timeout,f,c
 41685  0094C4  2820               	incf	iic_waite_ack@timeout,w,c
 41686  0094C6  A4D8               	btfss	status,2,c
 41687  0094C8  D7FA               	goto	l1607
 41688  0094CA                     l13229:
 41689                           
 41690                           ;i2c.c: 74: }
 41691                           ;i2c.c: 75: if(!timeout){
 41692  0094CA  5020               	movf	iic_waite_ack@timeout,w,c
 41693  0094CC  A4D8               	btfss	status,2,c
 41694  0094CE  D004               	goto	l13237
 41695                           
 41696                           ;i2c.c: 76: iic_stop();
 41697  0094D0  EC40  F04E         	call	_iic_stop	;wreg free
 41698                           
 41699                           ;i2c.c: 77: return 0;
 41700  0094D4  0E00               	movlw	0
 41701  0094D6  0012               	return	
 41702  0094D8                     l13237:
 41703  0094D8  968B               	bcf	3979,3,c	;volatile
 41704                           
 41705                           ;i2c.c: 80: delay_us(3);
 41706  0094DA  0E00               	movlw	0
 41707  0094DC  0100               	movlb	0	; () banked
 41708  0094DE  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41709  0094E0  0E03               	movlw	3
 41710  0094E2  6F60               	movwf	delay_us@dly& (0+255),b
 41711  0094E4  ECD3  F04D         	call	_delay_us	;wreg free
 41712                           
 41713                           ;i2c.c: 81: return 1;
 41714  0094E8  0E01               	movlw	1
 41715  0094EA  0012               	return	
 41716  0094EC                     __end_of_iic_waite_ack:
 41717                           	opt stack 0
 41718                           tosu	equ	0xFFF
 41719                           tosh	equ	0xFFE
 41720                           tosl	equ	0xFFD
 41721                           pclath	equ	0xFFA
 41722                           tblptru	equ	0xFF8
 41723                           tblptrh	equ	0xFF7
 41724                           tblptrl	equ	0xFF6
 41725                           tablat	equ	0xFF5
 41726                           prodh	equ	0xFF4
 41727                           prodl	equ	0xFF3
 41728                           intcon	equ	0xFF2
 41729                           indf0	equ	0xFEF
 41730                           postinc0	equ	0xFEE
 41731                           fsr0h	equ	0xFEA
 41732                           fsr0l	equ	0xFE9
 41733                           wreg	equ	0xFE8
 41734                           indf1	equ	0xFE7
 41735                           postinc1	equ	0xFE6
 41736                           postdec1	equ	0xFE5
 41737                           plusw1	equ	0xFE3
 41738                           fsr1h	equ	0xFE2
 41739                           fsr1l	equ	0xFE1
 41740                           indf2	equ	0xFDF
 41741                           postinc2	equ	0xFDE
 41742                           postdec2	equ	0xFDD
 41743                           plusw2	equ	0xFDB
 41744                           fsr2h	equ	0xFDA
 41745                           fsr2l	equ	0xFD9
 41746                           status	equ	0xFD8
 41747                           
 41748 ;; *************** function _iic_stop *****************
 41749 ;; Defined at:
 41750 ;;		line 33 in file "src/driver/i2c.c"
 41751 ;; Parameters:    Size  Location     Type
 41752 ;;		None
 41753 ;; Auto vars:     Size  Location     Type
 41754 ;;		None
 41755 ;; Return value:  Size  Location     Type
 41756 ;;                  1    wreg      void 
 41757 ;; Registers used:
 41758 ;;		wreg, status,2, status,0, cstack
 41759 ;; Tracked objects:
 41760 ;;		On entry : 0/0
 41761 ;;		On exit  : 0/0
 41762 ;;		Unchanged: 0/0
 41763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41768 ;;Total ram usage:        0 bytes
 41769 ;; Hardware stack levels used:    1
 41770 ;; Hardware stack levels required when called:    5
 41771 ;; This function calls:
 41772 ;;		_delay_us
 41773 ;; This function is called by:
 41774 ;;		_ads1115_init
 41775 ;;		_at24c02_init
 41776 ;;		_iic_waite_ack
 41777 ;;		_pcf8574_init
 41778 ;;		_ads1115_write_reg
 41779 ;;		_ads1115_read_reg
 41780 ;;		_at24c02_write_n_byte
 41781 ;;		_at24c02_read_n_byte
 41782 ;;		_pcf8574_write_singel
 41783 ;;		_ad421_write_via_pcf8574
 41784 ;; This function uses a non-reentrant model
 41785 ;;
 41786                           
 41787                           	psect	text210
 41788  009C80                     __ptext210:
 41789                           	opt stack 0
 41790  009C80                     _iic_stop:
 41791                           	opt stack 21
 41792                           
 41793                           ;incstack = 0
 41794                           ;i2c.c: 35: do{TRISC &= ~(1<<3);}while(0);;;
 41795  009C80  9694               	bcf	3988,3,c	;volatile
 41796                           
 41797                           ;i2c.c: 36: do{TRISC &= ~(1<<4);}while(0);;;
 41798  009C82  9894               	bcf	3988,4,c	;volatile
 41799                           
 41800                           ;i2c.c: 37: do{LATC &= ~(1<<4);}while(0);;;
 41801  009C84  988B               	bcf	3979,4,c	;volatile
 41802                           
 41803                           ;i2c.c: 38: delay_us(3);
 41804  009C86  0E00               	movlw	0
 41805  009C88  0100               	movlb	0	; () banked
 41806  009C8A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41807  009C8C  0E03               	movlw	3
 41808  009C8E  6F60               	movwf	delay_us@dly& (0+255),b
 41809  009C90  ECD3  F04D         	call	_delay_us	;wreg free
 41810                           
 41811                           ;i2c.c: 39: do{LATC |= (1<<3);}while(0);;;
 41812  009C94  868B               	bsf	3979,3,c	;volatile
 41813                           
 41814                           ;i2c.c: 40: delay_us(3);
 41815  009C96  0E00               	movlw	0
 41816  009C98  0100               	movlb	0	; () banked
 41817  009C9A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41818  009C9C  0E03               	movlw	3
 41819  009C9E  6F60               	movwf	delay_us@dly& (0+255),b
 41820  009CA0  ECD3  F04D         	call	_delay_us	;wreg free
 41821                           
 41822                           ;i2c.c: 41: do{LATC |= (1<<4);}while(0);;;
 41823  009CA4  888B               	bsf	3979,4,c	;volatile
 41824                           
 41825                           ;i2c.c: 42: delay_us(3);
 41826  009CA6  0E00               	movlw	0
 41827  009CA8  0100               	movlb	0	; () banked
 41828  009CAA  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41829  009CAC  0E03               	movlw	3
 41830  009CAE  6F60               	movwf	delay_us@dly& (0+255),b
 41831  009CB0  ECD3  F04D         	call	_delay_us	;wreg free
 41832  009CB4  0012               	return		;funcret
 41833  009CB6                     __end_of_iic_stop:
 41834                           	opt stack 0
 41835                           tosu	equ	0xFFF
 41836                           tosh	equ	0xFFE
 41837                           tosl	equ	0xFFD
 41838                           pclath	equ	0xFFA
 41839                           tblptru	equ	0xFF8
 41840                           tblptrh	equ	0xFF7
 41841                           tblptrl	equ	0xFF6
 41842                           tablat	equ	0xFF5
 41843                           prodh	equ	0xFF4
 41844                           prodl	equ	0xFF3
 41845                           intcon	equ	0xFF2
 41846                           indf0	equ	0xFEF
 41847                           postinc0	equ	0xFEE
 41848                           fsr0h	equ	0xFEA
 41849                           fsr0l	equ	0xFE9
 41850                           wreg	equ	0xFE8
 41851                           indf1	equ	0xFE7
 41852                           postinc1	equ	0xFE6
 41853                           postdec1	equ	0xFE5
 41854                           plusw1	equ	0xFE3
 41855                           fsr1h	equ	0xFE2
 41856                           fsr1l	equ	0xFE1
 41857                           indf2	equ	0xFDF
 41858                           postinc2	equ	0xFDE
 41859                           postdec2	equ	0xFDD
 41860                           plusw2	equ	0xFDB
 41861                           fsr2h	equ	0xFDA
 41862                           fsr2l	equ	0xFD9
 41863                           status	equ	0xFD8
 41864                           
 41865 ;; *************** function _iic_received_byte_if_ack *****************
 41866 ;; Defined at:
 41867 ;;		line 130 in file "src/driver/i2c.c"
 41868 ;; Parameters:    Size  Location     Type
 41869 ;;  ack             1    wreg     unsigned char 
 41870 ;; Auto vars:     Size  Location     Type
 41871 ;;  ack             1    6[BANK0 ] unsigned char 
 41872 ;;  ret             1    7[BANK0 ] unsigned char 
 41873 ;; Return value:  Size  Location     Type
 41874 ;;                  1    wreg      unsigned char 
 41875 ;; Registers used:
 41876 ;;		wreg, status,2, status,0, cstack
 41877 ;; Tracked objects:
 41878 ;;		On entry : 0/0
 41879 ;;		On exit  : 0/0
 41880 ;;		Unchanged: 0/0
 41881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41885 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41886 ;;Total ram usage:        2 bytes
 41887 ;; Hardware stack levels used:    1
 41888 ;; Hardware stack levels required when called:    6
 41889 ;; This function calls:
 41890 ;;		_iic_received_byte
 41891 ;;		_iic_send_ack
 41892 ;; This function is called by:
 41893 ;;		_ads1115_init
 41894 ;;		_at24c02_init
 41895 ;;		_pcf8574_init
 41896 ;;		_ads1115_read_reg
 41897 ;;		_at24c02_read_n_byte
 41898 ;; This function uses a non-reentrant model
 41899 ;;
 41900                           
 41901                           	psect	text211
 41902  00A188                     __ptext211:
 41903                           	opt stack 0
 41904  00A188                     _iic_received_byte_if_ack:
 41905                           	opt stack 19
 41906                           
 41907                           ;incstack = 0
 41908                           ;iic_received_byte_if_ack@ack stored from wreg
 41909  00A188  0100               	movlb	0	; () banked
 41910  00A18A  6F66               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 41911                           
 41912                           ;i2c.c: 132: uint8_t ret=0;
 41913  00A18C  0E00               	movlw	0
 41914  00A18E  0100               	movlb	0	; () banked
 41915  00A190  6F67               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 41916                           
 41917                           ; BSR set to: 0
 41918                           ;i2c.c: 133: ret=iic_received_byte();
 41919  00A192  ECBB  F047         	call	_iic_received_byte	;wreg free
 41920  00A196  0100               	movlb	0	; () banked
 41921  00A198  6F67               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 41922                           
 41923                           ; BSR set to: 0
 41924                           ;i2c.c: 134: iic_send_ack(ack);
 41925  00A19A  0100               	movlb	0	; () banked
 41926  00A19C  5166               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 41927  00A19E  ECF5  F04A         	call	_iic_send_ack
 41928                           
 41929                           ;i2c.c: 135: return ret;
 41930  00A1A2  0100               	movlb	0	; () banked
 41931  00A1A4  5167               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 41932  00A1A6  0012               	return	
 41933  00A1A8                     __end_of_iic_received_byte_if_ack:
 41934                           	opt stack 0
 41935                           tosu	equ	0xFFF
 41936                           tosh	equ	0xFFE
 41937                           tosl	equ	0xFFD
 41938                           pclath	equ	0xFFA
 41939                           tblptru	equ	0xFF8
 41940                           tblptrh	equ	0xFF7
 41941                           tblptrl	equ	0xFF6
 41942                           tablat	equ	0xFF5
 41943                           prodh	equ	0xFF4
 41944                           prodl	equ	0xFF3
 41945                           intcon	equ	0xFF2
 41946                           indf0	equ	0xFEF
 41947                           postinc0	equ	0xFEE
 41948                           fsr0h	equ	0xFEA
 41949                           fsr0l	equ	0xFE9
 41950                           wreg	equ	0xFE8
 41951                           indf1	equ	0xFE7
 41952                           postinc1	equ	0xFE6
 41953                           postdec1	equ	0xFE5
 41954                           plusw1	equ	0xFE3
 41955                           fsr1h	equ	0xFE2
 41956                           fsr1l	equ	0xFE1
 41957                           indf2	equ	0xFDF
 41958                           postinc2	equ	0xFDE
 41959                           postdec2	equ	0xFDD
 41960                           plusw2	equ	0xFDB
 41961                           fsr2h	equ	0xFDA
 41962                           fsr2l	equ	0xFD9
 41963                           status	equ	0xFD8
 41964                           
 41965 ;; *************** function _iic_send_ack *****************
 41966 ;; Defined at:
 41967 ;;		line 45 in file "src/driver/i2c.c"
 41968 ;; Parameters:    Size  Location     Type
 41969 ;;  ack             1    wreg     char 
 41970 ;; Auto vars:     Size  Location     Type
 41971 ;;  ack             1   31[COMRAM] char 
 41972 ;; Return value:  Size  Location     Type
 41973 ;;                  1    wreg      void 
 41974 ;; Registers used:
 41975 ;;		wreg, status,2, status,0, cstack
 41976 ;; Tracked objects:
 41977 ;;		On entry : 0/0
 41978 ;;		On exit  : 0/0
 41979 ;;		Unchanged: 0/0
 41980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41985 ;;Total ram usage:        1 bytes
 41986 ;; Hardware stack levels used:    1
 41987 ;; Hardware stack levels required when called:    5
 41988 ;; This function calls:
 41989 ;;		_delay_us
 41990 ;; This function is called by:
 41991 ;;		_iic_received_byte_if_ack
 41992 ;; This function uses a non-reentrant model
 41993 ;;
 41994                           
 41995                           	psect	text212
 41996  0095EA                     __ptext212:
 41997                           	opt stack 0
 41998  0095EA                     _iic_send_ack:
 41999                           	opt stack 19
 42000                           
 42001                           ; BSR set to: 0
 42002                           ;incstack = 0
 42003                           ;iic_send_ack@ack stored from wreg
 42004  0095EA  6E20               	movwf	iic_send_ack@ack,c
 42005                           
 42006                           ;i2c.c: 47: do{TRISC &= ~(1<<3);}while(0);;;
 42007  0095EC  9694               	bcf	3988,3,c	;volatile
 42008                           
 42009                           ;i2c.c: 48: do{TRISC &= ~(1<<4);}while(0);;;
 42010  0095EE  9894               	bcf	3988,4,c	;volatile
 42011                           
 42012                           ;i2c.c: 49: do{LATC &= ~(1<<3);}while(0);;;
 42013  0095F0  968B               	bcf	3979,3,c	;volatile
 42014                           
 42015                           ;i2c.c: 50: delay_us(3);
 42016  0095F2  0E00               	movlw	0
 42017  0095F4  0100               	movlb	0	; () banked
 42018  0095F6  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42019  0095F8  0E03               	movlw	3
 42020  0095FA  6F60               	movwf	delay_us@dly& (0+255),b
 42021  0095FC  ECD3  F04D         	call	_delay_us	;wreg free
 42022                           
 42023                           ;i2c.c: 51: if(ack){
 42024  009600  5020               	movf	iic_send_ack@ack,w,c
 42025  009602  B4D8               	btfsc	status,2,c
 42026  009604  D002               	goto	l13201
 42027                           
 42028                           ;i2c.c: 52: do{LATC |= (1<<4);}while(0);;;
 42029  009606  888B               	bsf	3979,4,c	;volatile
 42030                           
 42031                           ;i2c.c: 53: }else{
 42032  009608  D001               	goto	l13203
 42033  00960A                     l13201:
 42034  00960A  988B               	bcf	3979,4,c	;volatile
 42035  00960C                     l13203:
 42036                           
 42037                           ;i2c.c: 55: }
 42038                           ;i2c.c: 56: delay_us(3);
 42039  00960C  0E00               	movlw	0
 42040  00960E  0100               	movlb	0	; () banked
 42041  009610  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42042  009612  0E03               	movlw	3
 42043  009614  6F60               	movwf	delay_us@dly& (0+255),b
 42044  009616  ECD3  F04D         	call	_delay_us	;wreg free
 42045                           
 42046                           ;i2c.c: 57: do{LATC |= (1<<3);}while(0);;;
 42047  00961A  868B               	bsf	3979,3,c	;volatile
 42048                           
 42049                           ;i2c.c: 58: delay_us(3);
 42050  00961C  0E00               	movlw	0
 42051  00961E  0100               	movlb	0	; () banked
 42052  009620  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42053  009622  0E03               	movlw	3
 42054  009624  6F60               	movwf	delay_us@dly& (0+255),b
 42055  009626  ECD3  F04D         	call	_delay_us	;wreg free
 42056                           
 42057                           ;i2c.c: 59: do{LATC &= ~(1<<3);}while(0);;;
 42058  00962A  968B               	bcf	3979,3,c	;volatile
 42059                           
 42060                           ;i2c.c: 60: delay_us(3);
 42061  00962C  0E00               	movlw	0
 42062  00962E  0100               	movlb	0	; () banked
 42063  009630  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42064  009632  0E03               	movlw	3
 42065  009634  6F60               	movwf	delay_us@dly& (0+255),b
 42066  009636  ECD3  F04D         	call	_delay_us	;wreg free
 42067  00963A  0012               	return		;funcret
 42068  00963C                     __end_of_iic_send_ack:
 42069                           	opt stack 0
 42070                           tosu	equ	0xFFF
 42071                           tosh	equ	0xFFE
 42072                           tosl	equ	0xFFD
 42073                           pclath	equ	0xFFA
 42074                           tblptru	equ	0xFF8
 42075                           tblptrh	equ	0xFF7
 42076                           tblptrl	equ	0xFF6
 42077                           tablat	equ	0xFF5
 42078                           prodh	equ	0xFF4
 42079                           prodl	equ	0xFF3
 42080                           intcon	equ	0xFF2
 42081                           indf0	equ	0xFEF
 42082                           postinc0	equ	0xFEE
 42083                           fsr0h	equ	0xFEA
 42084                           fsr0l	equ	0xFE9
 42085                           wreg	equ	0xFE8
 42086                           indf1	equ	0xFE7
 42087                           postinc1	equ	0xFE6
 42088                           postdec1	equ	0xFE5
 42089                           plusw1	equ	0xFE3
 42090                           fsr1h	equ	0xFE2
 42091                           fsr1l	equ	0xFE1
 42092                           indf2	equ	0xFDF
 42093                           postinc2	equ	0xFDE
 42094                           postdec2	equ	0xFDD
 42095                           plusw2	equ	0xFDB
 42096                           fsr2h	equ	0xFDA
 42097                           fsr2l	equ	0xFD9
 42098                           status	equ	0xFD8
 42099                           
 42100 ;; *************** function _iic_received_byte *****************
 42101 ;; Defined at:
 42102 ;;		line 110 in file "src/driver/i2c.c"
 42103 ;; Parameters:    Size  Location     Type
 42104 ;;		None
 42105 ;; Auto vars:     Size  Location     Type
 42106 ;;  i               1    5[BANK0 ] unsigned char 
 42107 ;;  ret             1    4[BANK0 ] unsigned char 
 42108 ;; Return value:  Size  Location     Type
 42109 ;;                  1    wreg      unsigned char 
 42110 ;; Registers used:
 42111 ;;		wreg, status,2, status,0, cstack
 42112 ;; Tracked objects:
 42113 ;;		On entry : 0/0
 42114 ;;		On exit  : 0/0
 42115 ;;		Unchanged: 0/0
 42116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42121 ;;Total ram usage:        2 bytes
 42122 ;; Hardware stack levels used:    1
 42123 ;; Hardware stack levels required when called:    5
 42124 ;; This function calls:
 42125 ;;		_delay_us
 42126 ;; This function is called by:
 42127 ;;		_iic_received_byte_if_ack
 42128 ;; This function uses a non-reentrant model
 42129 ;;
 42130                           
 42131                           	psect	text213
 42132  008F76                     __ptext213:
 42133                           	opt stack 0
 42134  008F76                     _iic_received_byte:
 42135                           	opt stack 19
 42136                           
 42137                           ;i2c.c: 112: uint8_t i;
 42138                           ;i2c.c: 113: uint8_t ret=0;
 42139                           
 42140                           ;incstack = 0
 42141  008F76  0E00               	movlw	0
 42142  008F78  0100               	movlb	0	; () banked
 42143  008F7A  6F64               	movwf	iic_received_byte@ret& (0+255),b
 42144                           
 42145                           ; BSR set to: 0
 42146                           
 42147                           ; BSR set to: 0
 42148                           
 42149                           ;i2c.c: 114: do{TRISC &= ~(1<<3);}while(0);;;
 42150  008F7C  9694               	bcf	3988,3,c	;volatile
 42151                           
 42152                           ; BSR set to: 0
 42153                           
 42154                           ; BSR set to: 0
 42155                           
 42156                           ;i2c.c: 115: do{TRISC |= (1<<4);}while(0);;;
 42157                           
 42158                           ; BSR set to: 0
 42159  008F7E  8894               	bsf	3988,4,c	;volatile
 42160                           
 42161                           ; BSR set to: 0
 42162                           ;i2c.c: 116: for(i=0;i<8;i++){
 42163  008F80  0E00               	movlw	0
 42164  008F82  0100               	movlb	0	; () banked
 42165  008F84  6F65               	movwf	iic_received_byte@i& (0+255),b
 42166  008F86                     l13251:
 42167                           
 42168                           ; BSR set to: 0
 42169  008F86  0E07               	movlw	7
 42170  008F88  0100               	movlb	0	; () banked
 42171  008F8A  6565               	cpfsgt	iic_received_byte@i& (0+255),b
 42172  008F8C  D001               	goto	l13255
 42173  008F8E  D01A               	goto	l13271
 42174  008F90                     l13255:
 42175                           
 42176                           ; BSR set to: 0
 42177                           ;i2c.c: 117: ret<<=1;
 42178  008F90  0100               	movlb	0	; () banked
 42179  008F92  90D8               	bcf	status,0,c
 42180  008F94  3764               	rlcf	iic_received_byte@ret& (0+255),f,b
 42181                           
 42182                           ; BSR set to: 0
 42183                           
 42184                           ; BSR set to: 0
 42185                           
 42186                           ;i2c.c: 118: do{LATC &= ~(1<<3);}while(0);;;
 42187  008F96  968B               	bcf	3979,3,c	;volatile
 42188                           
 42189                           ; BSR set to: 0
 42190                           ;i2c.c: 119: delay_us(3);
 42191                           
 42192                           ; BSR set to: 0
 42193  008F98  0E00               	movlw	0
 42194  008F9A  0100               	movlb	0	; () banked
 42195  008F9C  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42196  008F9E  0E03               	movlw	3
 42197  008FA0  6F60               	movwf	delay_us@dly& (0+255),b
 42198  008FA2  ECD3  F04D         	call	_delay_us	;wreg free
 42199                           
 42200                           ;i2c.c: 120: do{LATC |= (1<<3);}while(0);;;
 42201  008FA6  868B               	bsf	3979,3,c	;volatile
 42202                           
 42203                           ;i2c.c: 121: delay_us(3);
 42204  008FA8  0E00               	movlw	0
 42205  008FAA  0100               	movlb	0	; () banked
 42206  008FAC  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42207  008FAE  0E03               	movlw	3
 42208  008FB0  6F60               	movwf	delay_us@dly& (0+255),b
 42209  008FB2  ECD3  F04D         	call	_delay_us	;wreg free
 42210                           
 42211                           ;i2c.c: 122: if((PORTC & (1<<4))){
 42212  008FB6  A882               	btfss	3970,4,c	;volatile
 42213  008FB8  D002               	goto	l1647
 42214                           
 42215                           ;i2c.c: 123: ret|=1;
 42216  008FBA  0100               	movlb	0	; () banked
 42217  008FBC  8164               	bsf	iic_received_byte@ret& (0+255),0,b
 42218  008FBE                     l1647:
 42219  008FBE  0100               	movlb	0	; () banked
 42220  008FC0  2B65               	incf	iic_received_byte@i& (0+255),f,b
 42221  008FC2  D7E1               	goto	l13251
 42222  008FC4                     l13271:
 42223                           
 42224                           ; BSR set to: 0
 42225  008FC4  968B               	bcf	3979,3,c	;volatile
 42226                           
 42227                           ; BSR set to: 0
 42228                           ;i2c.c: 127: delay_us(3);
 42229                           
 42230                           ; BSR set to: 0
 42231  008FC6  0E00               	movlw	0
 42232  008FC8  0100               	movlb	0	; () banked
 42233  008FCA  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42234  008FCC  0E03               	movlw	3
 42235  008FCE  6F60               	movwf	delay_us@dly& (0+255),b
 42236  008FD0  ECD3  F04D         	call	_delay_us	;wreg free
 42237                           
 42238                           ;i2c.c: 128: return ret;
 42239  008FD4  0100               	movlb	0	; () banked
 42240  008FD6  5164               	movf	iic_received_byte@ret& (0+255),w,b
 42241  008FD8  0012               	return	
 42242  008FDA                     __end_of_iic_received_byte:
 42243                           	opt stack 0
 42244                           tosu	equ	0xFFF
 42245                           tosh	equ	0xFFE
 42246                           tosl	equ	0xFFD
 42247                           pclath	equ	0xFFA
 42248                           tblptru	equ	0xFF8
 42249                           tblptrh	equ	0xFF7
 42250                           tblptrl	equ	0xFF6
 42251                           tablat	equ	0xFF5
 42252                           prodh	equ	0xFF4
 42253                           prodl	equ	0xFF3
 42254                           intcon	equ	0xFF2
 42255                           indf0	equ	0xFEF
 42256                           postinc0	equ	0xFEE
 42257                           fsr0h	equ	0xFEA
 42258                           fsr0l	equ	0xFE9
 42259                           wreg	equ	0xFE8
 42260                           indf1	equ	0xFE7
 42261                           postinc1	equ	0xFE6
 42262                           postdec1	equ	0xFE5
 42263                           plusw1	equ	0xFE3
 42264                           fsr1h	equ	0xFE2
 42265                           fsr1l	equ	0xFE1
 42266                           indf2	equ	0xFDF
 42267                           postinc2	equ	0xFDE
 42268                           postdec2	equ	0xFDD
 42269                           plusw2	equ	0xFDB
 42270                           fsr2h	equ	0xFDA
 42271                           fsr2l	equ	0xFD9
 42272                           status	equ	0xFD8
 42273                           
 42274 ;; *************** function _delay_us *****************
 42275 ;; Defined at:
 42276 ;;		line 82 in file "src/soc/clock.c"
 42277 ;; Parameters:    Size  Location     Type
 42278 ;;  dly             2    0[BANK0 ] unsigned int 
 42279 ;; Auto vars:     Size  Location     Type
 42280 ;;  i               2    2[BANK0 ] unsigned int 
 42281 ;; Return value:  Size  Location     Type
 42282 ;;                  1    wreg      void 
 42283 ;; Registers used:
 42284 ;;		wreg, status,2, status,0
 42285 ;; Tracked objects:
 42286 ;;		On entry : 0/0
 42287 ;;		On exit  : 0/0
 42288 ;;		Unchanged: 0/0
 42289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42290 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42291 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42293 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42294 ;;Total ram usage:        4 bytes
 42295 ;; Hardware stack levels used:    1
 42296 ;; Hardware stack levels required when called:    4
 42297 ;; This function calls:
 42298 ;;		Nothing
 42299 ;; This function is called by:
 42300 ;;		_iic_start
 42301 ;;		_iic_stop
 42302 ;;		_iic_send_ack
 42303 ;;		_iic_waite_ack
 42304 ;;		_iic_send_byte
 42305 ;;		_iic_received_byte
 42306 ;;		_in_adc_start_and_read
 42307 ;;		_delay_ms
 42308 ;; This function uses a non-reentrant model
 42309 ;;
 42310                           
 42311                           	psect	text214
 42312  009BA6                     __ptext214:
 42313                           	opt stack 0
 42314  009BA6                     _delay_us:
 42315                           	opt stack 22
 42316                           
 42317                           ;clock.c: 84: uint16_t i;
 42318                           ;clock.c: 85: for(i=0;i<dly;i++){
 42319                           
 42320                           ; BSR set to: 0
 42321                           ;incstack = 0
 42322  009BA6  0E00               	movlw	0
 42323  009BA8  0100               	movlb	0	; () banked
 42324  009BAA  6F63               	movwf	(delay_us@i+1)& (0+255),b
 42325  009BAC  0E00               	movlw	0
 42326  009BAE  6F62               	movwf	delay_us@i& (0+255),b
 42327  009BB0  D00B               	goto	l13125
 42328  009BB2                     l2233:
 42329                           
 42330                           ; BSR set to: 0
 42331                           ;clock.c: 86: __nop();
 42332  009BB2  F000               	nop	
 42333                           
 42334                           ;clock.c: 87: __nop();
 42335  009BB4  F000               	nop	
 42336                           
 42337                           ;clock.c: 88: __nop();
 42338  009BB6  F000               	nop	
 42339                           
 42340                           ;clock.c: 89: __nop();
 42341  009BB8  F000               	nop	
 42342                           
 42343                           ;clock.c: 91: __nop();
 42344  009BBA  F000               	nop	
 42345                           
 42346                           ;clock.c: 92: __nop();
 42347  009BBC  F000               	nop	
 42348                           
 42349                           ;clock.c: 93: __nop();
 42350  009BBE  F000               	nop	
 42351                           
 42352                           ;clock.c: 94: __nop();
 42353  009BC0  F000               	nop	
 42354  009BC2  0100               	movlb	0	; () banked
 42355  009BC4  4B62               	infsnz	delay_us@i& (0+255),f,b
 42356  009BC6  2B63               	incf	(delay_us@i+1)& (0+255),f,b
 42357  009BC8                     l13125:
 42358                           
 42359                           ; BSR set to: 0
 42360  009BC8  0100               	movlb	0	; () banked
 42361  009BCA  5160               	movf	delay_us@dly& (0+255),w,b
 42362  009BCC  0100               	movlb	0	; () banked
 42363  009BCE  5D62               	subwf	delay_us@i& (0+255),w,b
 42364  009BD0  0100               	movlb	0	; () banked
 42365  009BD2  5161               	movf	(delay_us@dly+1)& (0+255),w,b
 42366  009BD4  0100               	movlb	0	; () banked
 42367  009BD6  5963               	subwfb	(delay_us@i+1)& (0+255),w,b
 42368  009BD8  B0D8               	btfsc	status,0,c
 42369  009BDA  0012               	return	
 42370  009BDC  D7EA               	goto	l2233
 42371  009BDE                     __end_of_delay_us:
 42372                           	opt stack 0
 42373                           tosu	equ	0xFFF
 42374                           tosh	equ	0xFFE
 42375                           tosl	equ	0xFFD
 42376                           pclath	equ	0xFFA
 42377                           tblptru	equ	0xFF8
 42378                           tblptrh	equ	0xFF7
 42379                           tblptrl	equ	0xFF6
 42380                           tablat	equ	0xFF5
 42381                           prodh	equ	0xFF4
 42382                           prodl	equ	0xFF3
 42383                           intcon	equ	0xFF2
 42384                           indf0	equ	0xFEF
 42385                           postinc0	equ	0xFEE
 42386                           fsr0h	equ	0xFEA
 42387                           fsr0l	equ	0xFE9
 42388                           wreg	equ	0xFE8
 42389                           indf1	equ	0xFE7
 42390                           postinc1	equ	0xFE6
 42391                           postdec1	equ	0xFE5
 42392                           plusw1	equ	0xFE3
 42393                           fsr1h	equ	0xFE2
 42394                           fsr1l	equ	0xFE1
 42395                           indf2	equ	0xFDF
 42396                           postinc2	equ	0xFDE
 42397                           postdec2	equ	0xFDD
 42398                           plusw2	equ	0xFDB
 42399                           fsr2h	equ	0xFDA
 42400                           fsr2l	equ	0xFD9
 42401                           status	equ	0xFD8
 42402                           
 42403 ;; *************** function _at24c02_init *****************
 42404 ;; Defined at:
 42405 ;;		line 13 in file "src/driver/ex_eeprom.c"
 42406 ;; Parameters:    Size  Location     Type
 42407 ;;  pAt24c02        2    0[BANK0 ] PTR struct .
 42408 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 42409 ;;  slv             1    2[BANK0 ] unsigned char 
 42410 ;; Auto vars:     Size  Location     Type
 42411 ;;		None
 42412 ;; Return value:  Size  Location     Type
 42413 ;;                  1    wreg      void 
 42414 ;; Registers used:
 42415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42416 ;; Tracked objects:
 42417 ;;		On entry : 0/0
 42418 ;;		On exit  : 0/0
 42419 ;;		Unchanged: 0/0
 42420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42421 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42424 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42425 ;;Total ram usage:        3 bytes
 42426 ;; Hardware stack levels used:    1
 42427 ;; Hardware stack levels required when called:    4
 42428 ;; This function calls:
 42429 ;;		Nothing
 42430 ;; This function is called by:
 42431 ;;		_calib_data_init_diff_pr
 42432 ;;		_calib_data_init_pr
 42433 ;;		_at24c02_init_all_chip
 42434 ;; This function uses a non-reentrant model
 42435 ;;
 42436                           
 42437                           	psect	text215
 42438  008598                     __ptext215:
 42439                           	opt stack 0
 42440  008598                     _at24c02_init:
 42441                           	opt stack 24
 42442                           
 42443                           ;ex_eeprom.c: 15: pAt24c02->slaveAddr=slv;
 42444                           
 42445                           ; BSR set to: 0
 42446                           ;incstack = 0
 42447  008598  C060  FFD9         	movff	at24c02_init@pAt24c02,fsr2l
 42448  00859C  C061  FFDA         	movff	at24c02_init@pAt24c02+1,fsr2h
 42449  0085A0  C062  FFDF         	movff	at24c02_init@slv,indf2
 42450                           
 42451                           ;ex_eeprom.c: 16: pAt24c02->iic_start=iic_start;
 42452  0085A4  0100               	movlb	0	; () banked
 42453  0085A6  EE20 F001          	lfsr	2,1
 42454  0085AA  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42455  0085AC  26D9               	addwf	fsr2l,f,c
 42456  0085AE  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42457  0085B0  22DA               	addwfc	fsr2h,f,c
 42458  0085B2  0E6E               	movlw	low _iic_start
 42459  0085B4  6EDE               	movwf	postinc2,c
 42460  0085B6  0E9B               	movlw	high _iic_start
 42461  0085B8  6EDD               	movwf	postdec2,c
 42462                           
 42463                           ; BSR set to: 0
 42464                           ;ex_eeprom.c: 17: pAt24c02->iic_stop=iic_stop;
 42465  0085BA  0100               	movlb	0	; () banked
 42466  0085BC  EE20 F003          	lfsr	2,3
 42467  0085C0  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42468  0085C2  26D9               	addwf	fsr2l,f,c
 42469  0085C4  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42470  0085C6  22DA               	addwfc	fsr2h,f,c
 42471  0085C8  0E80               	movlw	low _iic_stop
 42472  0085CA  6EDE               	movwf	postinc2,c
 42473  0085CC  0E9C               	movlw	high _iic_stop
 42474  0085CE  6EDD               	movwf	postdec2,c
 42475                           
 42476                           ; BSR set to: 0
 42477                           ;ex_eeprom.c: 18: pAt24c02->iic_send_byte=iic_send_byte;
 42478  0085D0  0100               	movlb	0	; () banked
 42479  0085D2  EE20 F005          	lfsr	2,5
 42480  0085D6  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42481  0085D8  26D9               	addwf	fsr2l,f,c
 42482  0085DA  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42483  0085DC  22DA               	addwfc	fsr2h,f,c
 42484  0085DE  0EF0               	movlw	low _iic_send_byte
 42485  0085E0  6EDE               	movwf	postinc2,c
 42486  0085E2  0E87               	movlw	high _iic_send_byte
 42487  0085E4  6EDD               	movwf	postdec2,c
 42488                           
 42489                           ; BSR set to: 0
 42490                           ;ex_eeprom.c: 20: pAt24c02->iic_waite_ack=iic_waite_ack;
 42491  0085E6  0100               	movlb	0	; () banked
 42492  0085E8  EE20 F007          	lfsr	2,7
 42493  0085EC  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42494  0085EE  26D9               	addwf	fsr2l,f,c
 42495  0085F0  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42496  0085F2  22DA               	addwfc	fsr2h,f,c
 42497  0085F4  0E94               	movlw	low _iic_waite_ack
 42498  0085F6  6EDE               	movwf	postinc2,c
 42499  0085F8  0E94               	movlw	high _iic_waite_ack
 42500  0085FA  6EDD               	movwf	postdec2,c
 42501                           
 42502                           ; BSR set to: 0
 42503                           ;ex_eeprom.c: 22: pAt24c02->iic_received_byte_if_ack=iic_received_byte_if_ack;
 42504  0085FC  0100               	movlb	0	; () banked
 42505  0085FE  EE20 F009          	lfsr	2,9
 42506  008602  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42507  008604  26D9               	addwf	fsr2l,f,c
 42508  008606  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42509  008608  22DA               	addwfc	fsr2h,f,c
 42510  00860A  0E88               	movlw	low _iic_received_byte_if_ack
 42511  00860C  6EDE               	movwf	postinc2,c
 42512  00860E  0EA1               	movlw	high _iic_received_byte_if_ack
 42513  008610  6EDD               	movwf	postdec2,c
 42514                           
 42515                           ; BSR set to: 0
 42516  008612  0012               	return		;funcret
 42517  008614                     __end_of_at24c02_init:
 42518                           	opt stack 0
 42519                           tosu	equ	0xFFF
 42520                           tosh	equ	0xFFE
 42521                           tosl	equ	0xFFD
 42522                           pclath	equ	0xFFA
 42523                           tblptru	equ	0xFF8
 42524                           tblptrh	equ	0xFF7
 42525                           tblptrl	equ	0xFF6
 42526                           tablat	equ	0xFF5
 42527                           prodh	equ	0xFF4
 42528                           prodl	equ	0xFF3
 42529                           intcon	equ	0xFF2
 42530                           indf0	equ	0xFEF
 42531                           postinc0	equ	0xFEE
 42532                           fsr0h	equ	0xFEA
 42533                           fsr0l	equ	0xFE9
 42534                           wreg	equ	0xFE8
 42535                           indf1	equ	0xFE7
 42536                           postinc1	equ	0xFE6
 42537                           postdec1	equ	0xFE5
 42538                           plusw1	equ	0xFE3
 42539                           fsr1h	equ	0xFE2
 42540                           fsr1l	equ	0xFE1
 42541                           indf2	equ	0xFDF
 42542                           postinc2	equ	0xFDE
 42543                           postdec2	equ	0xFDD
 42544                           plusw2	equ	0xFDB
 42545                           fsr2h	equ	0xFDA
 42546                           fsr2l	equ	0xFD9
 42547                           status	equ	0xFD8
 42548                           
 42549 ;; *************** function _ads1115_init_all_chip *****************
 42550 ;; Defined at:
 42551 ;;		line 112 in file "src/driver/ads1115.c"
 42552 ;; Parameters:    Size  Location     Type
 42553 ;;		None
 42554 ;; Auto vars:     Size  Location     Type
 42555 ;;		None
 42556 ;; Return value:  Size  Location     Type
 42557 ;;                  1    wreg      void 
 42558 ;; Registers used:
 42559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42560 ;; Tracked objects:
 42561 ;;		On entry : 0/0
 42562 ;;		On exit  : 0/0
 42563 ;;		Unchanged: 0/0
 42564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42569 ;;Total ram usage:        0 bytes
 42570 ;; Hardware stack levels used:    1
 42571 ;; Hardware stack levels required when called:    5
 42572 ;; This function calls:
 42573 ;;		_ads1115_init
 42574 ;; This function is called by:
 42575 ;;		_main
 42576 ;; This function uses a non-reentrant model
 42577 ;;
 42578                           
 42579                           	psect	text216
 42580  009A54                     __ptext216:
 42581                           	opt stack 0
 42582  009A54                     _ads1115_init_all_chip:
 42583                           	opt stack 25
 42584                           
 42585                           ;ads1115.c: 115: pAds1115PrObj= &ads1115Chip0;
 42586                           
 42587                           ; BSR set to: 0
 42588                           ;incstack = 0
 42589  009A54  0E70               	movlw	low _ads1115Chip0
 42590  009A56  6E25               	movwf	_pAds1115PrObj,c
 42591  009A58  0E01               	movlw	high _ads1115Chip0
 42592  009A5A  6E26               	movwf	_pAds1115PrObj+1,c
 42593                           
 42594                           ;ads1115.c: 116: ads1115_init(pAds1115PrObj,(0x90));
 42595  009A5C  C025  F060         	movff	_pAds1115PrObj,ads1115_init@pAds1115
 42596  009A60  C026  F061         	movff	_pAds1115PrObj+1,ads1115_init@pAds1115+1
 42597  009A64  0E90               	movlw	144
 42598  009A66  0100               	movlb	0	; () banked
 42599  009A68  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 42600  009A6A  EC96  F03C         	call	_ads1115_init	;wreg free
 42601                           
 42602                           ;ads1115.c: 118: pAds1115DiffPrObj=&ads1115Chip1;
 42603  009A6E  0EF0               	movlw	low _ads1115Chip1
 42604  009A70  0100               	movlb	0	; () banked
 42605  009A72  6FEF               	movwf	_pAds1115DiffPrObj& (0+255),b
 42606  009A74  0E02               	movlw	high _ads1115Chip1
 42607  009A76  0100               	movlb	0	; () banked
 42608  009A78  6FF0               	movwf	(_pAds1115DiffPrObj+1)& (0+255),b
 42609                           
 42610                           ;ads1115.c: 119: ads1115_init(pAds1115DiffPrObj,(0x92));
 42611  009A7A  C0EF  F060         	movff	_pAds1115DiffPrObj,ads1115_init@pAds1115
 42612  009A7E  C0F0  F061         	movff	_pAds1115DiffPrObj+1,ads1115_init@pAds1115+1
 42613  009A82  0E92               	movlw	146
 42614  009A84  0100               	movlb	0	; () banked
 42615  009A86  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 42616  009A88  EC96  F03C         	call	_ads1115_init	;wreg free
 42617  009A8C  0012               	return		;funcret
 42618  009A8E                     __end_of_ads1115_init_all_chip:
 42619                           	opt stack 0
 42620                           tosu	equ	0xFFF
 42621                           tosh	equ	0xFFE
 42622                           tosl	equ	0xFFD
 42623                           pclath	equ	0xFFA
 42624                           tblptru	equ	0xFF8
 42625                           tblptrh	equ	0xFF7
 42626                           tblptrl	equ	0xFF6
 42627                           tablat	equ	0xFF5
 42628                           prodh	equ	0xFF4
 42629                           prodl	equ	0xFF3
 42630                           intcon	equ	0xFF2
 42631                           indf0	equ	0xFEF
 42632                           postinc0	equ	0xFEE
 42633                           fsr0h	equ	0xFEA
 42634                           fsr0l	equ	0xFE9
 42635                           wreg	equ	0xFE8
 42636                           indf1	equ	0xFE7
 42637                           postinc1	equ	0xFE6
 42638                           postdec1	equ	0xFE5
 42639                           plusw1	equ	0xFE3
 42640                           fsr1h	equ	0xFE2
 42641                           fsr1l	equ	0xFE1
 42642                           indf2	equ	0xFDF
 42643                           postinc2	equ	0xFDE
 42644                           postdec2	equ	0xFDD
 42645                           plusw2	equ	0xFDB
 42646                           fsr2h	equ	0xFDA
 42647                           fsr2l	equ	0xFD9
 42648                           status	equ	0xFD8
 42649                           
 42650 ;; *************** function _ads1115_init *****************
 42651 ;; Defined at:
 42652 ;;		line 5 in file "src/driver/ads1115.c"
 42653 ;; Parameters:    Size  Location     Type
 42654 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 42655 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 42656 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 42657 ;; Auto vars:     Size  Location     Type
 42658 ;;		None
 42659 ;; Return value:  Size  Location     Type
 42660 ;;                  1    wreg      void 
 42661 ;; Registers used:
 42662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42663 ;; Tracked objects:
 42664 ;;		On entry : 0/0
 42665 ;;		On exit  : 0/0
 42666 ;;		Unchanged: 0/0
 42667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42668 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42671 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42672 ;;Total ram usage:        3 bytes
 42673 ;; Hardware stack levels used:    1
 42674 ;; Hardware stack levels required when called:    4
 42675 ;; This function calls:
 42676 ;;		Nothing
 42677 ;; This function is called by:
 42678 ;;		_ads1115_init_all_chip
 42679 ;; This function uses a non-reentrant model
 42680 ;;
 42681                           
 42682                           	psect	text217
 42683  00792C                     __ptext217:
 42684                           	opt stack 0
 42685  00792C                     _ads1115_init:
 42686                           	opt stack 25
 42687                           
 42688                           ;ads1115.c: 7: pAds1115->chip=ADS1115;
 42689                           
 42690                           ;incstack = 0
 42691  00792C  C060  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 42692  007930  C061  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 42693  007934  0E05               	movlw	5
 42694  007936  6EDF               	movwf	indf2,c
 42695                           
 42696                           ;ads1115.c: 8: pAds1115->slaveAddr=slvaddr;
 42697  007938  0100               	movlb	0	; () banked
 42698  00793A  EE20 F001          	lfsr	2,1
 42699  00793E  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42700  007940  26D9               	addwf	fsr2l,f,c
 42701  007942  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42702  007944  22DA               	addwfc	fsr2h,f,c
 42703  007946  C062  FFDF         	movff	ads1115_init@slvaddr,indf2
 42704                           
 42705                           ; BSR set to: 0
 42706                           ;ads1115.c: 9: pAds1115->config.data=0x8583;;
 42707  00794A  0100               	movlb	0	; () banked
 42708  00794C  EE20 F002          	lfsr	2,2
 42709  007950  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42710  007952  26D9               	addwf	fsr2l,f,c
 42711  007954  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42712  007956  22DA               	addwfc	fsr2h,f,c
 42713  007958  0E83               	movlw	131
 42714  00795A  6EDE               	movwf	postinc2,c
 42715  00795C  0E85               	movlw	133
 42716  00795E  6EDD               	movwf	postdec2,c
 42717                           
 42718                           ; BSR set to: 0
 42719                           ;ads1115.c: 10: pAds1115->iic_start=iic_start;
 42720  007960  0100               	movlb	0	; () banked
 42721  007962  EE20 F006          	lfsr	2,6
 42722  007966  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42723  007968  26D9               	addwf	fsr2l,f,c
 42724  00796A  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42725  00796C  22DA               	addwfc	fsr2h,f,c
 42726  00796E  0E6E               	movlw	low _iic_start
 42727  007970  6EDE               	movwf	postinc2,c
 42728  007972  0E9B               	movlw	high _iic_start
 42729  007974  6EDD               	movwf	postdec2,c
 42730                           
 42731                           ; BSR set to: 0
 42732                           ;ads1115.c: 11: pAds1115->iic_stop=iic_stop;
 42733  007976  0100               	movlb	0	; () banked
 42734  007978  EE20 F008          	lfsr	2,8
 42735  00797C  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42736  00797E  26D9               	addwf	fsr2l,f,c
 42737  007980  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42738  007982  22DA               	addwfc	fsr2h,f,c
 42739  007984  0E80               	movlw	low _iic_stop
 42740  007986  6EDE               	movwf	postinc2,c
 42741  007988  0E9C               	movlw	high _iic_stop
 42742  00798A  6EDD               	movwf	postdec2,c
 42743                           
 42744                           ; BSR set to: 0
 42745                           ;ads1115.c: 12: pAds1115->iic_send_byte=iic_send_byte;
 42746  00798C  0100               	movlb	0	; () banked
 42747  00798E  EE20 F00A          	lfsr	2,10
 42748  007992  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42749  007994  26D9               	addwf	fsr2l,f,c
 42750  007996  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42751  007998  22DA               	addwfc	fsr2h,f,c
 42752  00799A  0EF0               	movlw	low _iic_send_byte
 42753  00799C  6EDE               	movwf	postinc2,c
 42754  00799E  0E87               	movlw	high _iic_send_byte
 42755  0079A0  6EDD               	movwf	postdec2,c
 42756                           
 42757                           ; BSR set to: 0
 42758                           ;ads1115.c: 13: pAds1115->iic_waite_ack=iic_waite_ack;
 42759  0079A2  0100               	movlb	0	; () banked
 42760  0079A4  EE20 F00C          	lfsr	2,12
 42761  0079A8  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42762  0079AA  26D9               	addwf	fsr2l,f,c
 42763  0079AC  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42764  0079AE  22DA               	addwfc	fsr2h,f,c
 42765  0079B0  0E94               	movlw	low _iic_waite_ack
 42766  0079B2  6EDE               	movwf	postinc2,c
 42767  0079B4  0E94               	movlw	high _iic_waite_ack
 42768  0079B6  6EDD               	movwf	postdec2,c
 42769                           
 42770                           ; BSR set to: 0
 42771                           ;ads1115.c: 14: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 42772  0079B8  0100               	movlb	0	; () banked
 42773  0079BA  EE20 F00E          	lfsr	2,14
 42774  0079BE  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42775  0079C0  26D9               	addwf	fsr2l,f,c
 42776  0079C2  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42777  0079C4  22DA               	addwfc	fsr2h,f,c
 42778  0079C6  0E88               	movlw	low _iic_received_byte_if_ack
 42779  0079C8  6EDE               	movwf	postinc2,c
 42780  0079CA  0EA1               	movlw	high _iic_received_byte_if_ack
 42781  0079CC  6EDD               	movwf	postdec2,c
 42782                           
 42783                           ; BSR set to: 0
 42784  0079CE  0012               	return		;funcret
 42785  0079D0                     __end_of_ads1115_init:
 42786                           	opt stack 0
 42787                           tosu	equ	0xFFF
 42788                           tosh	equ	0xFFE
 42789                           tosl	equ	0xFFD
 42790                           pclath	equ	0xFFA
 42791                           tblptru	equ	0xFF8
 42792                           tblptrh	equ	0xFF7
 42793                           tblptrl	equ	0xFF6
 42794                           tablat	equ	0xFF5
 42795                           prodh	equ	0xFF4
 42796                           prodl	equ	0xFF3
 42797                           intcon	equ	0xFF2
 42798                           indf0	equ	0xFEF
 42799                           postinc0	equ	0xFEE
 42800                           fsr0h	equ	0xFEA
 42801                           fsr0l	equ	0xFE9
 42802                           wreg	equ	0xFE8
 42803                           indf1	equ	0xFE7
 42804                           postinc1	equ	0xFE6
 42805                           postdec1	equ	0xFE5
 42806                           plusw1	equ	0xFE3
 42807                           fsr1h	equ	0xFE2
 42808                           fsr1l	equ	0xFE1
 42809                           indf2	equ	0xFDF
 42810                           postinc2	equ	0xFDE
 42811                           postdec2	equ	0xFDD
 42812                           plusw2	equ	0xFDB
 42813                           fsr2h	equ	0xFDA
 42814                           fsr2l	equ	0xFD9
 42815                           status	equ	0xFD8
 42816                           
 42817 ;; *************** function _handler_interrupt_low *****************
 42818 ;; Defined at:
 42819 ;;		line 38 in file "src/soc/int.c"
 42820 ;; Parameters:    Size  Location     Type
 42821 ;;		None
 42822 ;; Auto vars:     Size  Location     Type
 42823 ;;		None
 42824 ;; Return value:  Size  Location     Type
 42825 ;;                  1    wreg      void 
 42826 ;; Registers used:
 42827 ;;		wreg, status,2, status,0, cstack
 42828 ;; Tracked objects:
 42829 ;;		On entry : 0/0
 42830 ;;		On exit  : 0/0
 42831 ;;		Unchanged: 0/0
 42832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42835 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42836 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42837 ;;Total ram usage:       17 bytes
 42838 ;; Hardware stack levels used:    1
 42839 ;; Hardware stack levels required when called:    3
 42840 ;; This function calls:
 42841 ;;		_rtc_alrm_irq_hook
 42842 ;;		_sys_ticker_irq_hook
 42843 ;; This function is called by:
 42844 ;;		Interrupt level 1
 42845 ;; This function uses a non-reentrant model
 42846 ;;
 42847                           
 42848                           	psect	intcodelo
 42849  000018                     __pintcodelo:
 42850                           	opt stack 0
 42851  000018                     _handler_interrupt_low:
 42852                           	opt stack 17
 42853                           
 42854                           ; BSR set to: 0
 42855                           ;incstack = 0
 42856  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 42857  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
 42858  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
 42859  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
 42860  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
 42861  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
 42862  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
 42863  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
 42864  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
 42865  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
 42866  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
 42867  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
 42868  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
 42869  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
 42870  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
 42871  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
 42872  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
 42873  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
 42874                           
 42875                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 42876  00005E  B29D               	btfsc	3997,1,c	;volatile
 42877  000060  A29E               	btfss	3998,1,c	;volatile
 42878  000062  D00D               	goto	i1l13041
 42879  000064  B29F               	btfsc	3999,1,c	;volatile
 42880  000066  D00B               	goto	i1l13041
 42881                           
 42882                           ;int.c: 41: PIR1bits.TMR2IF=0;
 42883  000068  929E               	bcf	3998,1,c	;volatile
 42884                           
 42885                           ;int.c: 42: glTicker++;
 42886  00006A  0E01               	movlw	1
 42887  00006C  0101               	movlb	1	; () banked
 42888  00006E  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 42889  000070  0E00               	movlw	0
 42890  000072  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 42891  000074  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 42892  000076  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 42893                           
 42894                           ; BSR set to: 1
 42895                           ;int.c: 43: glbEvent |= (1<<0);
 42896  000078  802E               	bsf	_glbEvent,0,c	;volatile
 42897                           
 42898                           ; BSR set to: 1
 42899                           ;int.c: 44: sys_ticker_irq_hook();
 42900  00007A  EC0E  F051         	call	_sys_ticker_irq_hook	;wreg free
 42901  00007E                     i1l13041:
 42902                           
 42903                           ;int.c: 45: }
 42904                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 42905  00007E  B0A3               	btfsc	4003,0,c	;volatile
 42906  000080  A0A4               	btfss	4004,0,c	;volatile
 42907  000082  D006               	goto	i1l2281
 42908  000084  B0A5               	btfsc	4005,0,c	;volatile
 42909  000086  D004               	goto	i1l2281
 42910                           
 42911                           ;int.c: 47: PIR3bits.RTCCIF=0;
 42912  000088  90A4               	bcf	4004,0,c	;volatile
 42913                           
 42914                           ;int.c: 48: glbEvent |= (1<<1);
 42915  00008A  822E               	bsf	_glbEvent,1,c	;volatile
 42916                           
 42917                           ;int.c: 49: rtc_alrm_irq_hook();
 42918  00008C  ECFA  F051         	call	_rtc_alrm_irq_hook	;wreg free
 42919  000090                     i1l2281:
 42920  000090  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 42921  000094  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 42922  000098  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 42923  00009C  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 42924  0000A0  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 42925  0000A4  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 42926  0000A8  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 42927  0000AC  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 42928  0000B0  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 42929  0000B4  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 42930  0000B8  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 42931  0000BC  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 42932  0000C0  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 42933  0000C4  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
 42934  0000C8  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
 42935  0000CC  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
 42936  0000D0  C00F  FFD8         	movff	??_handler_interrupt_low,status
 42937  0000D4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 42938  0000D6  0010               	retfie	
 42939  0000D8                     __end_of_handler_interrupt_low:
 42940                           	opt stack 0
 42941                           tosu	equ	0xFFF
 42942                           tosh	equ	0xFFE
 42943                           tosl	equ	0xFFD
 42944                           pclatu	equ	0xFFB
 42945                           pclath	equ	0xFFA
 42946                           tblptru	equ	0xFF8
 42947                           tblptrh	equ	0xFF7
 42948                           tblptrl	equ	0xFF6
 42949                           tablat	equ	0xFF5
 42950                           prodh	equ	0xFF4
 42951                           prodl	equ	0xFF3
 42952                           intcon	equ	0xFF2
 42953                           indf0	equ	0xFEF
 42954                           postinc0	equ	0xFEE
 42955                           fsr0h	equ	0xFEA
 42956                           fsr0l	equ	0xFE9
 42957                           wreg	equ	0xFE8
 42958                           indf1	equ	0xFE7
 42959                           postinc1	equ	0xFE6
 42960                           postdec1	equ	0xFE5
 42961                           plusw1	equ	0xFE3
 42962                           fsr1h	equ	0xFE2
 42963                           fsr1l	equ	0xFE1
 42964                           bsr	equ	0xFE0
 42965                           indf2	equ	0xFDF
 42966                           postinc2	equ	0xFDE
 42967                           postdec2	equ	0xFDD
 42968                           plusw2	equ	0xFDB
 42969                           fsr2h	equ	0xFDA
 42970                           fsr2l	equ	0xFD9
 42971                           status	equ	0xFD8
 42972                           
 42973 ;; *************** function _sys_ticker_irq_hook *****************
 42974 ;; Defined at:
 42975 ;;		line 40 in file "src/soc/ticker.c"
 42976 ;; Parameters:    Size  Location     Type
 42977 ;;		None
 42978 ;; Auto vars:     Size  Location     Type
 42979 ;;		None
 42980 ;; Return value:  Size  Location     Type
 42981 ;;                  1    wreg      void 
 42982 ;; Registers used:
 42983 ;;		wreg, status,2, status,0
 42984 ;; Tracked objects:
 42985 ;;		On entry : 0/0
 42986 ;;		On exit  : 0/0
 42987 ;;		Unchanged: 0/0
 42988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42993 ;;Total ram usage:        0 bytes
 42994 ;; Hardware stack levels used:    1
 42995 ;; Hardware stack levels required when called:    2
 42996 ;; This function calls:
 42997 ;;		Nothing
 42998 ;; This function is called by:
 42999 ;;		_handler_interrupt_low
 43000 ;; This function uses a non-reentrant model
 43001 ;;
 43002                           
 43003                           	psect	text219
 43004  00A21C                     __ptext219:
 43005                           	opt stack 0
 43006  00A21C                     _sys_ticker_irq_hook:
 43007                           	opt stack 17
 43008                           
 43009                           ;ticker.c: 42: if(dlyTickerEn){
 43010                           
 43011                           ;incstack = 0
 43012  00A21C  502B               	movf	_dlyTickerEn,w,c
 43013  00A21E  B4D8               	btfsc	status,2,c
 43014  00A220  D005               	goto	i1l2380
 43015                           
 43016                           ;ticker.c: 43: dlyTicker+=10;
 43017  00A222  0E0A               	movlw	10
 43018  00A224  0101               	movlb	1	; () banked
 43019  00A226  275A               	addwf	_dlyTicker& (0+255),f,b
 43020  00A228  0E00               	movlw	0
 43021  00A22A  235B               	addwfc	(_dlyTicker+1)& (0+255),f,b
 43022  00A22C                     i1l2380:
 43023                           
 43024                           ;ticker.c: 44: }
 43025                           ;ticker.c: 45: userTicker_ms+=20;
 43026  00A22C  0E14               	movlw	20
 43027  00A22E  0101               	movlb	1	; () banked
 43028  00A230  2764               	addwf	_userTicker_ms& (0+255),f,b	;volatile
 43029  00A232  0E00               	movlw	0
 43030  00A234  2365               	addwfc	(_userTicker_ms+1)& (0+255),f,b	;volatile
 43031                           
 43032                           ; BSR set to: 1
 43033  00A236  0012               	return		;funcret
 43034  00A238                     __end_of_sys_ticker_irq_hook:
 43035                           	opt stack 0
 43036                           tosu	equ	0xFFF
 43037                           tosh	equ	0xFFE
 43038                           tosl	equ	0xFFD
 43039                           pclatu	equ	0xFFB
 43040                           pclath	equ	0xFFA
 43041                           tblptru	equ	0xFF8
 43042                           tblptrh	equ	0xFF7
 43043                           tblptrl	equ	0xFF6
 43044                           tablat	equ	0xFF5
 43045                           prodh	equ	0xFF4
 43046                           prodl	equ	0xFF3
 43047                           intcon	equ	0xFF2
 43048                           indf0	equ	0xFEF
 43049                           postinc0	equ	0xFEE
 43050                           fsr0h	equ	0xFEA
 43051                           fsr0l	equ	0xFE9
 43052                           wreg	equ	0xFE8
 43053                           indf1	equ	0xFE7
 43054                           postinc1	equ	0xFE6
 43055                           postdec1	equ	0xFE5
 43056                           plusw1	equ	0xFE3
 43057                           fsr1h	equ	0xFE2
 43058                           fsr1l	equ	0xFE1
 43059                           bsr	equ	0xFE0
 43060                           indf2	equ	0xFDF
 43061                           postinc2	equ	0xFDE
 43062                           postdec2	equ	0xFDD
 43063                           plusw2	equ	0xFDB
 43064                           fsr2h	equ	0xFDA
 43065                           fsr2l	equ	0xFD9
 43066                           status	equ	0xFD8
 43067                           
 43068 ;; *************** function _rtc_alrm_irq_hook *****************
 43069 ;; Defined at:
 43070 ;;		line 103 in file "src/soc/rtc.c"
 43071 ;; Parameters:    Size  Location     Type
 43072 ;;		None
 43073 ;; Auto vars:     Size  Location     Type
 43074 ;;		None
 43075 ;; Return value:  Size  Location     Type
 43076 ;;                  1    wreg      void 
 43077 ;; Registers used:
 43078 ;;		None
 43079 ;; Tracked objects:
 43080 ;;		On entry : 0/0
 43081 ;;		On exit  : 0/0
 43082 ;;		Unchanged: 0/0
 43083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43088 ;;Total ram usage:        0 bytes
 43089 ;; Hardware stack levels used:    1
 43090 ;; Hardware stack levels required when called:    2
 43091 ;; This function calls:
 43092 ;;		Nothing
 43093 ;; This function is called by:
 43094 ;;		_handler_interrupt_low
 43095 ;; This function uses a non-reentrant model
 43096 ;;
 43097                           
 43098                           	psect	text220
 43099  00A3F4                     __ptext220:
 43100                           	opt stack 0
 43101  00A3F4                     _rtc_alrm_irq_hook:
 43102                           	opt stack 17
 43103                           
 43104                           ; BSR set to: 1
 43105                           ;incstack = 0
 43106  00A3F4  0012               	return		;funcret
 43107  00A3F6                     __end_of_rtc_alrm_irq_hook:
 43108                           	opt stack 0
 43109                           tosu	equ	0xFFF
 43110                           tosh	equ	0xFFE
 43111                           tosl	equ	0xFFD
 43112                           pclatu	equ	0xFFB
 43113                           pclath	equ	0xFFA
 43114                           tblptru	equ	0xFF8
 43115                           tblptrh	equ	0xFF7
 43116                           tblptrl	equ	0xFF6
 43117                           tablat	equ	0xFF5
 43118                           prodh	equ	0xFF4
 43119                           prodl	equ	0xFF3
 43120                           intcon	equ	0xFF2
 43121                           indf0	equ	0xFEF
 43122                           postinc0	equ	0xFEE
 43123                           fsr0h	equ	0xFEA
 43124                           fsr0l	equ	0xFE9
 43125                           wreg	equ	0xFE8
 43126                           indf1	equ	0xFE7
 43127                           postinc1	equ	0xFE6
 43128                           postdec1	equ	0xFE5
 43129                           plusw1	equ	0xFE3
 43130                           fsr1h	equ	0xFE2
 43131                           fsr1l	equ	0xFE1
 43132                           bsr	equ	0xFE0
 43133                           indf2	equ	0xFDF
 43134                           postinc2	equ	0xFDE
 43135                           postdec2	equ	0xFDD
 43136                           plusw2	equ	0xFDB
 43137                           fsr2h	equ	0xFDA
 43138                           fsr2l	equ	0xFD9
 43139                           status	equ	0xFD8
 43140                           
 43141 ;; *************** function _handler_interrupt_hight *****************
 43142 ;; Defined at:
 43143 ;;		line 9 in file "src/soc/int.c"
 43144 ;; Parameters:    Size  Location     Type
 43145 ;;		None
 43146 ;; Auto vars:     Size  Location     Type
 43147 ;;		None
 43148 ;; Return value:  Size  Location     Type
 43149 ;;                  1    wreg      void 
 43150 ;; Registers used:
 43151 ;;		wreg, status,2, status,0, cstack
 43152 ;; Tracked objects:
 43153 ;;		On entry : 0/0
 43154 ;;		On exit  : 0/0
 43155 ;;		Unchanged: 0/0
 43156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43159 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43160 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43161 ;;Total ram usage:       14 bytes
 43162 ;; Hardware stack levels used:    1
 43163 ;; Hardware stack levels required when called:    1
 43164 ;; This function calls:
 43165 ;;		i2_rtc_alrm_irq_hook
 43166 ;;		i2_sys_ticker_irq_hook
 43167 ;; This function is called by:
 43168 ;;		Interrupt level 2
 43169 ;; This function uses a non-reentrant model
 43170 ;;
 43171                           
 43172                           	psect	intcode
 43173  000008                     __pintcode:
 43174                           	opt stack 0
 43175  000008                     _handler_interrupt_hight:
 43176                           	opt stack 17
 43177                           
 43178                           ;incstack = 0
 43179  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 43180  00000A  EF3E  F037         	goto	int_func
 43181                           tosu	equ	0xFFF
 43182                           tosh	equ	0xFFE
 43183                           tosl	equ	0xFFD
 43184                           pclatu	equ	0xFFB
 43185                           pclath	equ	0xFFA
 43186                           tblptru	equ	0xFF8
 43187                           tblptrh	equ	0xFF7
 43188                           tblptrl	equ	0xFF6
 43189                           tablat	equ	0xFF5
 43190                           prodh	equ	0xFF4
 43191                           prodl	equ	0xFF3
 43192                           intcon	equ	0xFF2
 43193                           indf0	equ	0xFEF
 43194                           postinc0	equ	0xFEE
 43195                           fsr0h	equ	0xFEA
 43196                           fsr0l	equ	0xFE9
 43197                           wreg	equ	0xFE8
 43198                           indf1	equ	0xFE7
 43199                           postinc1	equ	0xFE6
 43200                           postdec1	equ	0xFE5
 43201                           plusw1	equ	0xFE3
 43202                           fsr1h	equ	0xFE2
 43203                           fsr1l	equ	0xFE1
 43204                           bsr	equ	0xFE0
 43205                           indf2	equ	0xFDF
 43206                           postinc2	equ	0xFDE
 43207                           postdec2	equ	0xFDD
 43208                           plusw2	equ	0xFDB
 43209                           fsr2h	equ	0xFDA
 43210                           fsr2l	equ	0xFD9
 43211                           status	equ	0xFD8
 43212                           
 43213                           	psect	intcode_body
 43214  006E7C                     __pintcode_body:
 43215                           	opt stack 17
 43216  006E7C                     int_func:
 43217                           	opt stack 17
 43218  006E7C  CFFA F001          	movff	pclath,??_handler_interrupt_hight
 43219  006E80  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
 43220  006E84  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
 43221  006E88  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
 43222  006E8C  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
 43223  006E90  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
 43224  006E94  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
 43225  006E98  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
 43226  006E9C  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
 43227  006EA0  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
 43228  006EA4  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
 43229  006EA8  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
 43230  006EAC  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
 43231  006EB0  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
 43232                           
 43233                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 43234  006EB4  BAF2               	btfsc	intcon,5,c	;volatile
 43235  006EB6  A4F2               	btfss	intcon,2,c	;volatile
 43236  006EB8  D002               	goto	i2l2270
 43237  006EBA  B4F1               	btfsc	intcon2,2,c	;volatile
 43238                           
 43239                           ;int.c: 13: __nop();
 43240  006EBC  F000               	nop	
 43241  006EBE                     i2l2270:
 43242                           
 43243                           ;int.c: 14: }
 43244                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 43245  006EBE  BCF2               	btfsc	intcon,6,c	;volatile
 43246  006EC0  A89D               	btfss	3997,4,c	;volatile
 43247  006EC2  D001               	goto	i2l2271
 43248  006EC4  509E               	movf	3998,w,c	;volatile
 43249  006EC6                     i2l2271:
 43250                           
 43251                           ;int.c: 17: }
 43252                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 43253  006EC6  BCF2               	btfsc	intcon,6,c	;volatile
 43254  006EC8  AA9D               	btfss	3997,5,c	;volatile
 43255  006ECA  D001               	goto	i2l2272
 43256  006ECC  509E               	movf	3998,w,c	;volatile
 43257  006ECE                     i2l2272:
 43258                           
 43259                           ;int.c: 20: }
 43260                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 43261  006ECE  BCF2               	btfsc	intcon,6,c	;volatile
 43262  006ED0  A09D               	btfss	3997,0,c	;volatile
 43263  006ED2  D001               	goto	i2l2273
 43264  006ED4  509E               	movf	3998,w,c	;volatile
 43265  006ED6                     i2l2273:
 43266                           
 43267                           ;int.c: 23: }
 43268                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 43269  006ED6  B29D               	btfsc	3997,1,c	;volatile
 43270  006ED8  A29E               	btfss	3998,1,c	;volatile
 43271  006EDA  D00D               	goto	i2l13015
 43272  006EDC  A29F               	btfss	3999,1,c	;volatile
 43273  006EDE  D00B               	goto	i2l13015
 43274                           
 43275                           ;int.c: 26: PIR1bits.TMR2IF=0;
 43276  006EE0  929E               	bcf	3998,1,c	;volatile
 43277                           
 43278                           ;int.c: 27: glTicker++;
 43279  006EE2  0E01               	movlw	1
 43280  006EE4  0101               	movlb	1	; () banked
 43281  006EE6  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 43282  006EE8  0E00               	movlw	0
 43283  006EEA  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 43284  006EEC  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 43285  006EEE  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 43286                           
 43287                           ; BSR set to: 1
 43288                           ;int.c: 28: glbEvent |= (1<<0);
 43289  006EF0  802E               	bsf	_glbEvent,0,c	;volatile
 43290                           
 43291                           ; BSR set to: 1
 43292                           ;int.c: 29: sys_ticker_irq_hook();
 43293  006EF2  EC1C  F051         	call	i2_sys_ticker_irq_hook	;wreg free
 43294  006EF6                     i2l13015:
 43295                           
 43296                           ;int.c: 30: }
 43297                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 43298  006EF6  B0A3               	btfsc	4003,0,c	;volatile
 43299  006EF8  A0A4               	btfss	4004,0,c	;volatile
 43300  006EFA  D006               	goto	i2l2276
 43301  006EFC  A0A5               	btfss	4005,0,c	;volatile
 43302  006EFE  D004               	goto	i2l2276
 43303                           
 43304                           ;int.c: 32: PIR3bits.RTCCIF=0;
 43305  006F00  90A4               	bcf	4004,0,c	;volatile
 43306                           
 43307                           ;int.c: 33: glbEvent |= (1<<1);
 43308  006F02  822E               	bsf	_glbEvent,1,c	;volatile
 43309                           
 43310                           ;int.c: 34: rtc_alrm_irq_hook();
 43311  006F04  ECFB  F051         	call	i2_rtc_alrm_irq_hook	;wreg free
 43312  006F08                     i2l2276:
 43313  006F08  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 43314  006F0C  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 43315  006F10  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 43316  006F14  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 43317  006F18  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 43318  006F1C  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 43319  006F20  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 43320  006F24  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 43321  006F28  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 43322  006F2C  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 43323  006F30  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 43324  006F34  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 43325  006F38  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 43326  006F3C  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
 43327  006F40  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 43328  006F42  0011               	retfie		f
 43329  006F44                     __end_of_handler_interrupt_hight:
 43330                           	opt stack 0
 43331                           tosu	equ	0xFFF
 43332                           tosh	equ	0xFFE
 43333                           tosl	equ	0xFFD
 43334                           pclatu	equ	0xFFB
 43335                           pclath	equ	0xFFA
 43336                           tblptru	equ	0xFF8
 43337                           tblptrh	equ	0xFF7
 43338                           tblptrl	equ	0xFF6
 43339                           tablat	equ	0xFF5
 43340                           prodh	equ	0xFF4
 43341                           prodl	equ	0xFF3
 43342                           intcon	equ	0xFF2
 43343                           intcon2	equ	0xFF1
 43344                           indf0	equ	0xFEF
 43345                           postinc0	equ	0xFEE
 43346                           fsr0h	equ	0xFEA
 43347                           fsr0l	equ	0xFE9
 43348                           wreg	equ	0xFE8
 43349                           indf1	equ	0xFE7
 43350                           postinc1	equ	0xFE6
 43351                           postdec1	equ	0xFE5
 43352                           plusw1	equ	0xFE3
 43353                           fsr1h	equ	0xFE2
 43354                           fsr1l	equ	0xFE1
 43355                           bsr	equ	0xFE0
 43356                           indf2	equ	0xFDF
 43357                           postinc2	equ	0xFDE
 43358                           postdec2	equ	0xFDD
 43359                           plusw2	equ	0xFDB
 43360                           fsr2h	equ	0xFDA
 43361                           fsr2l	equ	0xFD9
 43362                           status	equ	0xFD8
 43363                           
 43364 ;; *************** function i2_sys_ticker_irq_hook *****************
 43365 ;; Defined at:
 43366 ;;		line 40 in file "src/soc/ticker.c"
 43367 ;; Parameters:    Size  Location     Type
 43368 ;;		None
 43369 ;; Auto vars:     Size  Location     Type
 43370 ;;		None
 43371 ;; Return value:  Size  Location     Type
 43372 ;;                  1    wreg      void 
 43373 ;; Registers used:
 43374 ;;		wreg, status,2, status,0
 43375 ;; Tracked objects:
 43376 ;;		On entry : 0/0
 43377 ;;		On exit  : 0/0
 43378 ;;		Unchanged: 0/0
 43379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43384 ;;Total ram usage:        0 bytes
 43385 ;; Hardware stack levels used:    1
 43386 ;; This function calls:
 43387 ;;		Nothing
 43388 ;; This function is called by:
 43389 ;;		_handler_interrupt_hight
 43390 ;; This function uses a non-reentrant model
 43391 ;;
 43392                           
 43393                           	psect	text222
 43394  00A238                     __ptext222:
 43395                           	opt stack 0
 43396  00A238                     i2_sys_ticker_irq_hook:
 43397                           	opt stack 17
 43398                           
 43399                           ;ticker.c: 42: if(dlyTickerEn){
 43400                           
 43401                           ;incstack = 0
 43402  00A238  502B               	movf	_dlyTickerEn,w,c
 43403  00A23A  B4D8               	btfsc	status,2,c
 43404  00A23C  D005               	goto	i2l2380
 43405                           
 43406                           ;ticker.c: 43: dlyTicker+=10;
 43407  00A23E  0E0A               	movlw	10
 43408  00A240  0101               	movlb	1	; () banked
 43409  00A242  275A               	addwf	_dlyTicker& (0+255),f,b
 43410  00A244  0E00               	movlw	0
 43411  00A246  235B               	addwfc	(_dlyTicker+1)& (0+255),f,b
 43412  00A248                     i2l2380:
 43413                           
 43414                           ;ticker.c: 44: }
 43415                           ;ticker.c: 45: userTicker_ms+=20;
 43416  00A248  0E14               	movlw	20
 43417  00A24A  0101               	movlb	1	; () banked
 43418  00A24C  2764               	addwf	_userTicker_ms& (0+255),f,b	;volatile
 43419  00A24E  0E00               	movlw	0
 43420  00A250  2365               	addwfc	(_userTicker_ms+1)& (0+255),f,b	;volatile
 43421                           
 43422                           ; BSR set to: 1
 43423  00A252  0012               	return		;funcret
 43424  00A254                     __end_ofi2_sys_ticker_irq_hook:
 43425                           	opt stack 0
 43426                           tosu	equ	0xFFF
 43427                           tosh	equ	0xFFE
 43428                           tosl	equ	0xFFD
 43429                           pclatu	equ	0xFFB
 43430                           pclath	equ	0xFFA
 43431                           tblptru	equ	0xFF8
 43432                           tblptrh	equ	0xFF7
 43433                           tblptrl	equ	0xFF6
 43434                           tablat	equ	0xFF5
 43435                           prodh	equ	0xFF4
 43436                           prodl	equ	0xFF3
 43437                           intcon	equ	0xFF2
 43438                           intcon2	equ	0xFF1
 43439                           indf0	equ	0xFEF
 43440                           postinc0	equ	0xFEE
 43441                           fsr0h	equ	0xFEA
 43442                           fsr0l	equ	0xFE9
 43443                           wreg	equ	0xFE8
 43444                           indf1	equ	0xFE7
 43445                           postinc1	equ	0xFE6
 43446                           postdec1	equ	0xFE5
 43447                           plusw1	equ	0xFE3
 43448                           fsr1h	equ	0xFE2
 43449                           fsr1l	equ	0xFE1
 43450                           bsr	equ	0xFE0
 43451                           indf2	equ	0xFDF
 43452                           postinc2	equ	0xFDE
 43453                           postdec2	equ	0xFDD
 43454                           plusw2	equ	0xFDB
 43455                           fsr2h	equ	0xFDA
 43456                           fsr2l	equ	0xFD9
 43457                           status	equ	0xFD8
 43458                           
 43459 ;; *************** function i2_rtc_alrm_irq_hook *****************
 43460 ;; Defined at:
 43461 ;;		line 103 in file "src/soc/rtc.c"
 43462 ;; Parameters:    Size  Location     Type
 43463 ;;		None
 43464 ;; Auto vars:     Size  Location     Type
 43465 ;;		None
 43466 ;; Return value:  Size  Location     Type
 43467 ;;                  1    wreg      void 
 43468 ;; Registers used:
 43469 ;;		None
 43470 ;; Tracked objects:
 43471 ;;		On entry : 0/0
 43472 ;;		On exit  : 0/0
 43473 ;;		Unchanged: 0/0
 43474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43479 ;;Total ram usage:        0 bytes
 43480 ;; Hardware stack levels used:    1
 43481 ;; This function calls:
 43482 ;;		Nothing
 43483 ;; This function is called by:
 43484 ;;		_handler_interrupt_hight
 43485 ;; This function uses a non-reentrant model
 43486 ;;
 43487                           
 43488                           	psect	text223
 43489  00A3F6                     __ptext223:
 43490                           	opt stack 0
 43491  00A3F6                     i2_rtc_alrm_irq_hook:
 43492                           	opt stack 17
 43493                           
 43494                           ; BSR set to: 1
 43495                           ;incstack = 0
 43496  00A3F6  0012               	return		;funcret
 43497  00A3F8                     __end_ofi2_rtc_alrm_irq_hook:
 43498                           	opt stack 0
 43499                           tosu	equ	0xFFF
 43500                           tosh	equ	0xFFE
 43501                           tosl	equ	0xFFD
 43502                           pclatu	equ	0xFFB
 43503                           pclath	equ	0xFFA
 43504                           tblptru	equ	0xFF8
 43505                           tblptrh	equ	0xFF7
 43506                           tblptrl	equ	0xFF6
 43507                           tablat	equ	0xFF5
 43508                           prodh	equ	0xFF4
 43509                           prodl	equ	0xFF3
 43510                           intcon	equ	0xFF2
 43511                           intcon2	equ	0xFF1
 43512                           indf0	equ	0xFEF
 43513                           postinc0	equ	0xFEE
 43514                           fsr0h	equ	0xFEA
 43515                           fsr0l	equ	0xFE9
 43516                           wreg	equ	0xFE8
 43517                           indf1	equ	0xFE7
 43518                           postinc1	equ	0xFE6
 43519                           postdec1	equ	0xFE5
 43520                           plusw1	equ	0xFE3
 43521                           fsr1h	equ	0xFE2
 43522                           fsr1l	equ	0xFE1
 43523                           bsr	equ	0xFE0
 43524                           indf2	equ	0xFDF
 43525                           postinc2	equ	0xFDE
 43526                           postdec2	equ	0xFDD
 43527                           plusw2	equ	0xFDB
 43528                           fsr2h	equ	0xFDA
 43529                           fsr2l	equ	0xFD9
 43530                           status	equ	0xFD8
 43531                           tosu	equ	0xFFF
 43532                           tosh	equ	0xFFE
 43533                           tosl	equ	0xFFD
 43534                           pclatu	equ	0xFFB
 43535                           pclath	equ	0xFFA
 43536                           tblptru	equ	0xFF8
 43537                           tblptrh	equ	0xFF7
 43538                           tblptrl	equ	0xFF6
 43539                           tablat	equ	0xFF5
 43540                           prodh	equ	0xFF4
 43541                           prodl	equ	0xFF3
 43542                           intcon	equ	0xFF2
 43543                           intcon2	equ	0xFF1
 43544                           indf0	equ	0xFEF
 43545                           postinc0	equ	0xFEE
 43546                           fsr0h	equ	0xFEA
 43547                           fsr0l	equ	0xFE9
 43548                           wreg	equ	0xFE8
 43549                           indf1	equ	0xFE7
 43550                           postinc1	equ	0xFE6
 43551                           postdec1	equ	0xFE5
 43552                           plusw1	equ	0xFE3
 43553                           fsr1h	equ	0xFE2
 43554                           fsr1l	equ	0xFE1
 43555                           bsr	equ	0xFE0
 43556                           indf2	equ	0xFDF
 43557                           postinc2	equ	0xFDE
 43558                           postdec2	equ	0xFDD
 43559                           plusw2	equ	0xFDB
 43560                           fsr2h	equ	0xFDA
 43561                           fsr2l	equ	0xFD9
 43562                           status	equ	0xFD8
 43563                           
 43564                           	psect	text224
 43565  000000                     __ptext224:
 43566                           	opt stack 0
 43567                           tosu	equ	0xFFF
 43568                           tosh	equ	0xFFE
 43569                           tosl	equ	0xFFD
 43570                           pclatu	equ	0xFFB
 43571                           pclath	equ	0xFFA
 43572                           tblptru	equ	0xFF8
 43573                           tblptrh	equ	0xFF7
 43574                           tblptrl	equ	0xFF6
 43575                           tablat	equ	0xFF5
 43576                           prodh	equ	0xFF4
 43577                           prodl	equ	0xFF3
 43578                           intcon	equ	0xFF2
 43579                           intcon2	equ	0xFF1
 43580                           indf0	equ	0xFEF
 43581                           postinc0	equ	0xFEE
 43582                           fsr0h	equ	0xFEA
 43583                           fsr0l	equ	0xFE9
 43584                           wreg	equ	0xFE8
 43585                           indf1	equ	0xFE7
 43586                           postinc1	equ	0xFE6
 43587                           postdec1	equ	0xFE5
 43588                           plusw1	equ	0xFE3
 43589                           fsr1h	equ	0xFE2
 43590                           fsr1l	equ	0xFE1
 43591                           bsr	equ	0xFE0
 43592                           indf2	equ	0xFDF
 43593                           postinc2	equ	0xFDE
 43594                           postdec2	equ	0xFDD
 43595                           plusw2	equ	0xFDB
 43596                           fsr2h	equ	0xFDA
 43597                           fsr2l	equ	0xFD9
 43598                           status	equ	0xFD8
 43599                           
 43600                           	psect	rparam
 43601  0000                     tosu	equ	0xFFF
 43602                           tosh	equ	0xFFE
 43603                           tosl	equ	0xFFD
 43604                           pclatu	equ	0xFFB
 43605                           pclath	equ	0xFFA
 43606                           tblptru	equ	0xFF8
 43607                           tblptrh	equ	0xFF7
 43608                           tblptrl	equ	0xFF6
 43609                           tablat	equ	0xFF5
 43610                           prodh	equ	0xFF4
 43611                           prodl	equ	0xFF3
 43612                           intcon	equ	0xFF2
 43613                           intcon2	equ	0xFF1
 43614                           indf0	equ	0xFEF
 43615                           postinc0	equ	0xFEE
 43616                           fsr0h	equ	0xFEA
 43617                           fsr0l	equ	0xFE9
 43618                           wreg	equ	0xFE8
 43619                           indf1	equ	0xFE7
 43620                           postinc1	equ	0xFE6
 43621                           postdec1	equ	0xFE5
 43622                           plusw1	equ	0xFE3
 43623                           fsr1h	equ	0xFE2
 43624                           fsr1l	equ	0xFE1
 43625                           bsr	equ	0xFE0
 43626                           indf2	equ	0xFDF
 43627                           postinc2	equ	0xFDE
 43628                           postdec2	equ	0xFDD
 43629                           plusw2	equ	0xFDB
 43630                           fsr2h	equ	0xFDA
 43631                           fsr2l	equ	0xFD9
 43632                           status	equ	0xFD8
 43633                           
 43634                           	psect	temp
 43635  000040                     btemp:
 43636                           	opt stack 0
 43637  000040                     	ds	1
 43638  0000                     int$flags	set	btemp
 43639                           tosu	equ	0xFFF
 43640                           tosh	equ	0xFFE
 43641                           tosl	equ	0xFFD
 43642                           pclatu	equ	0xFFB
 43643                           pclath	equ	0xFFA
 43644                           tblptru	equ	0xFF8
 43645                           tblptrh	equ	0xFF7
 43646                           tblptrl	equ	0xFF6
 43647                           tablat	equ	0xFF5
 43648                           prodh	equ	0xFF4
 43649                           prodl	equ	0xFF3
 43650                           intcon	equ	0xFF2
 43651                           intcon2	equ	0xFF1
 43652                           indf0	equ	0xFEF
 43653                           postinc0	equ	0xFEE
 43654                           fsr0h	equ	0xFEA
 43655                           fsr0l	equ	0xFE9
 43656                           wreg	equ	0xFE8
 43657                           indf1	equ	0xFE7
 43658                           postinc1	equ	0xFE6
 43659                           postdec1	equ	0xFE5
 43660                           plusw1	equ	0xFE3
 43661                           fsr1h	equ	0xFE2
 43662                           fsr1l	equ	0xFE1
 43663                           bsr	equ	0xFE0
 43664                           indf2	equ	0xFDF
 43665                           postinc2	equ	0xFDE
 43666                           postdec2	equ	0xFDD
 43667                           plusw2	equ	0xFDB
 43668                           fsr2h	equ	0xFDA
 43669                           fsr2l	equ	0xFD9
 43670                           status	equ	0xFD8


Data Sizes:
    Strings     142
    Constant    1727
    Data        14
    BSS         1169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    135     160
    BANK1           256      5     256
    BANK2           256      0     256
    BANK3           256     25     227
    BANK4           256      0     162
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    m_flash_write@buf	PTR unsigned char  size(2) Largest target is 240
		 -> m_flash_test@tmp(COMRAM[16]), stSysData(BANK2[240]), 

    m_flash_write@tmpBuf	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer(BANK5[256]), 

    m_flash_read@buf	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer(BANK5[256]), stSysData(BANK2[240]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_work_mode_adj@buf(BANK0[10]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), 
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(COMRAM[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_xfloat_pt@buf(BANK0[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_xfloat_pt@buf(BANK0[10]), STR_1(CODE[5]), 

    at24c02_write_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115DiffPrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115DiffPrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115DiffPrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115DiffPrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115PrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115PrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115PrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115PrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S2358$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S2358$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S2358$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S2358$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S2358$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_xfloat_pt@buf(BANK0[10]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(COMRAM[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[9]), STR_32(CODE[9]), STR_31(CODE[5]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[5]), ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), 
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[5]), 
		 -> ui_disp_menu_epr_calib_adj@buf(BANK0[6]), STR_22(CODE[5]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), STR_21(CODE[5]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), STR_14(CODE[5]), 
		 -> ui_disp_menu_calib_pr_adj@buf(BANK0[10]), STR_13(CODE[5]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_work_mode_adj@buf(BANK0[10]), ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), ui_disp_menu_epr_calib_adj@buf(BANK0[6]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), 
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), 
		 -> ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 240
		 -> flashTestbuf(CODE[65]), m_flash_test@tmp(COMRAM[16]), stSysData(BANK2[240]), defultSystemData(CODE[240]), 
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer(BANK5[256]), crc_verify@expected(BANK0[2]), stSysData(BANK2[240]), 

    m_mem_set@buf	PTR unsigned char  size(2) Largest target is 24
		 -> tmpx(BANK3[24]), 

    crc_append@message	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    crc_sum@puchMsg	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    pAds1115PrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    sample_diff_pr_fliter@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    __x_sample_fifo@buf	PTR int  size(2) Largest target is 8
		 -> sampBufRefInSoc(BANK1[8]), sampBufBatInSoc(BANK1[8]), sampBufExPr1InSoc(BANK1[8]), sampBufExPr0InSoc(BANK1[8]), 
		 -> sampBufPr(BANK1[8]), sampBufPt100ExB(BANK1[8]), sampBufPt100ExA(BANK1[8]), sampBufDiffPr_S1(BANK1[8]), 
		 -> sampBufDiffPr_D23(BANK1[8]), sampBufDiffPr_D01(BANK1[8]), 

    __x_sample_fliter@buf	PTR int  size(2) Largest target is 8
		 -> sampBufDiffPr_D23(BANK1[8]), sampBufDiffPr_D01(BANK1[8]), 

    ui_disp_menu_work_mode_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_menu_warn_v_adj@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    ui_disp_menu_warn_t_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_menu_h_adj@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    ui_disp_menu_pos_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_xfloat_pt@xpf	PTR struct . size(2) Largest target is 4
		 -> ui_disp_menu_home@mf(BANK0[4]), ui_disp_menu_home_02@mf(COMRAM[4]), ui_disp_menu_home_01@mf(COMRAM[4]), ui_disp_menu_home_00@mf(COMRAM[4]), 

    ui_disp_adj_xfixed_pt_dp@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_31(CODE[5]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    ui_disp_adj_xfloat_pt@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), ui_disp_menu_epr_calib_adj@buf(BANK0[6]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), 
		 -> ui_disp_menu_calib_diff_adj@buf(BANK0[10]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_9(CODE[5]), STR_6(CODE[5]), 

    ui_disp_adj_xfloat_pt@xpf	PTR struct . size(2) Largest target is 4
		 -> m_floatAdj(COMRAM[4]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    __set_long_work_mode@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_long_bar_level_scale@p	PTR int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_long_bar_level_scale@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_long_base_zero@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_long_density@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_epr_ilp_scale@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_epr_param@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_warn_value@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_warn_type@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_warn_type@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_poly_coefic@p	PTR int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_poly_coefic@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_pose_size@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_pose_size@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __sys_data_save_write_flash@buf	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __sys_data_save_write_flash@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __up_adj_work_mode@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __up_warn_type_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __up_pose_size_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __enter_menu_bar_scale@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_epr_ilp_scale@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_epr_calib@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_warn_value@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_warn_type@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_poly_coeffic@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_calib_press@stp	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), 

    __enter_menu_calib_press_diff@stp	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK3[162]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_h@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_d@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_pose_size@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    key_adj_value_float@mfp	PTR struct . size(2) Largest target is 4
		 -> m_floatAdj(COMRAM[4]), 

    key_adj_value_fixed@value	PTR unsigned int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), passWord(COMRAM[2]), key_adj_value_float@t16(BANK0[2]), 

    key_shift_loc@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK3[1]), 

    cal_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK4[156]), prCalibTabDef(BANK4[162]), 

    cal_diff_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef.prCalibRow(BANK3[156]), diff_prCalibTabDef(BANK3[162]), 

    cal_diff_press@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    cal_diff_p_to_h@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_float_fast@tab	PTR float  size(2) Largest target is 404
		 -> hKel(CODE[404]), hKcy(CODE[404]), 

    m_interp1_cal_p_t@tmpx	PTR struct . size(2) Largest target is 24
		 -> tmpx(BANK3[24]), 

    m_interp1_cal_p_t@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_cal_p_v@xout	PTR struct . size(2) Largest target is 24
		 -> tmpx(BANK3[24]), NULL(NULL[0]), 

    m_interp1_cal_p_v@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK4[156]), diff_prCalibTabDef.prCalibRow(BANK3[156]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    m_interp1_cal_p_v@xin	PTR struct . size(2) Largest target is 8
		 -> cal_press@xin(BANK0[8]), x_prDiffData(BANK1[8]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_diff_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK3[162]), 

    data_sys_init@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_init@buf	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_cal_v2@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_cal_v1@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S74$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S74$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S74$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S74$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S74$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    _ui_disp_start_cs600->_lcd_disp_logo
    _ui_disp_start_cs600->_m_int8_2_hex
    _key_process->_key_waite_release
    _key_process_up->___up_home_adj
    _key_process_up->___up_warn_type_adj
    _key_adj_value_fixed->___exp_10
    ___lwmod->___exp_10
    _key_process_set_down_long->___enter_menu_calib_press
    _key_process_set_down_long->___enter_menu_calib_press_diff
    ___set_short_pr_calib->___enter_menu_calib_press
    ___set_short_diff_calib->___enter_menu_calib_press_diff
    _key_process_down->___down_home_adj
    _key_process_down->_key_shift_loc
    ___down_pr_calib->_key_shift_loc
    ___down_pose_size->_key_shift_loc
    ___down_dpr_calib->_key_shift_loc
    _sample_pr_chip_fast->_ads1115_set_mux
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _sample_diff_pr_chip_fast->_ads1115_set_data_rate
    _sample_diff_pr_chip_fast->_ads1115_set_mux
    _sample_diff_pr_chip_fast->_ads1115_set_pga
    _ui_disp_menu_work_mode_adj->_lcd_disp_logo
    _ui_disp_menu_warn_v_adj->_lcd_disp_logo
    _ui_disp_menu_warn_v_adj->_lcd_disp_unit_2nd_m
    _ui_disp_menu_warn_v_adj->_lcd_disp_unit_mpa
    _ui_disp_menu_warn_t_adj->_lcd_disp_logo
    _ui_disp_menu_psw_adj->_lcd_disp_logo
    _ui_disp_adj_xfixed_pt->___x_arrange_str
    _ui_disp_menu_pos_adj->_lcd_disp_logo
    _ui_disp_menu_h_adj->_lcd_disp_logo
    _ui_disp_menu_d_adj->_lcd_disp_logo
    _ui_disp_menu_poly_c_adj->_lcd_disp_logo
    _ui_disp_menu_home->_lcd_disp_logo
    _ui_disp_menu_home->_lcd_disp_unit_1st_m
    _ui_disp_menu_home->_lcd_disp_unit_1st_m3
    _ui_disp_menu_home->_lcd_disp_unit_2nd_m
    _ui_disp_menu_home->_lcd_disp_unit_2nd_m3
    _ui_disp_menu_home->_lcd_disp_unit_mpa
    _ui_disp_menu_home->_lcd_disp_unit_t
    _ui_disp_menu_home->_lcd_disp_unit_temperature
    ___lwdiv->___exp_10
    _lcd_disp_level->_lcd_disp_level_bar
    _ui_disp_menu_epr_ilp_scale_adj->_lcd_disp_logo
    _ui_disp_menu_epr_calib_adj->_lcd_disp_logo
    _ui_disp_menu_density_adj->_lcd_disp_logo
    _ui_disp_menu_calib_pr_adj->___lbdiv
    _ui_disp_menu_calib_pr_adj->_lcd_disp_logo
    _ui_disp_menu_calib_diff_adj->___lbdiv
    _ui_disp_menu_calib_diff_adj->_lcd_disp_logo
    _ui_disp_menu_bzero_adj->_lcd_disp_logo
    _ui_disp_adj_xfloat_pt->___x_arrange_str
    _ui_disp_menu_bar_full_adj->_lcd_disp_logo
    _ui_disp_adj_xfixed_pt_dp->___x_arrange_str
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_show_dp->_lcd_disp_dp_loc_4
    _lcd_show_dp->_lcd_disp_dp_loc_5
    _lcd_show_dp->_lcd_disp_dp_loc_6
    _sample_call_cal_in_soc->_cal_additional_pressute
    _m_flash_write->_m_flash_unlock
    _m_flash_erase->_m_flash_unlock
    ___wmul->___exp_10
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_send_ack

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_config->_lcd_disp_all
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _key_process_up->___up_pose_size_adj
    ___up_warn_value_adj->_key_adj_value_float
    ___up_psw_adj->_key_adj_value_fixed
    ___up_pr_calib_adj->_key_adj_value_float
    ___up_pose_size_adj->_key_adj_value_float
    ___up_poly_coefic_adj->_key_adj_value_fixed
    ___up_epr_ilp_scale_adj->_key_adj_value_float
    ___up_epr_calib_adj->_key_adj_value_float
    ___up_diff_calib_adj->_key_adj_value_float
    ___up_density_adj->_key_adj_value_float
    ___up_base_zero_adj->_key_adj_value_float
    _key_adj_value_float->_key_adj_value_fixed
    ___up_adj_bar_level_scale->_key_adj_value_fixed
    _key_adj_value_fixed->___lwmod
    ___lwmod->___lwdiv
    _key_process_set_long->___set_long_bar_level_scale
    ___set_long_density->___sys_data_save_write_flash
    ___set_long_base_zero->___sys_data_save_write_flash
    ___set_long_bar_level_scale->___sys_data_save_write_flash
    _key_process_set_down_long->___enter_menu_calib_press
    _key_process_set_down_long->___enter_menu_calib_press_diff
    ___enter_menu_set_density->___int32_2_mflot32
    ___enter_menu_set_base_zero->___int32_2_mflot32
    _key_process_set->___set_short_warn_type
    _key_process_set->___set_short_warn_value
    ___set_short_warn_value->___sys_data_save_write_flash
    ___enter_menu_warn_value->___int32_2_mflot32
    ___set_short_warn_type->___sys_data_save_write_flash
    ___set_short_pr_calib->___enter_menu_calib_press
    ___enter_menu_calib_press->___int32_2_mflot32
    ___set_short_pose_size->___sys_data_save_write_flash
    ___enter_menu_set_h->___int32_2_mflot32
    ___enter_menu_set_d->___int32_2_mflot32
    ___set_short_poly_coefic->___sys_data_save_write_flash
    ___set_short_epr_param->___sys_data_save_write_flash
    ___enter_menu_epr_calib->___int32_2_mflot32
    ___set_short_epr_ilp_scale->___sys_data_save_write_flash
    ___sys_data_save_write_flash->_data_sys_cal_v1
    ___enter_menu_epr_ilp_scale->___int32_2_mflot32
    ___set_short_diff_calib->___enter_menu_calib_press_diff
    ___mflot32_2_int32->___lmul
    ___enter_menu_calib_press_diff->___int32_2_mflot32
    _key_process_down->_key_shift_loc
    ___down_pr_calib->_key_shift_loc
    ___down_pose_size->_key_shift_loc
    ___down_dpr_calib->_key_shift_loc
    _event_process_ticker->_sample_call_in_ticker
    _sample_pr_chip_fast->___x_sample_fifo
    _sample_in_soc_adc_ch->___x_sample_fifo
    _in_adc_start_and_read->_delay_us
    _sample_diff_pr_chip_fast->_sample_diff_pr_fliter
    _sample_diff_pr_fliter->___x_sample_fliter
    ___x_sample_fliter->___aldiv
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    ___x_sample_fifo->___aldiv
    _event_process_rtc->_sample_function_enable_fi_in_rtc
    _ui_disp_menu->_ui_disp_menu_warn_v_adj
    _ui_disp_menu_work_mode_adj->_lcd_show_string
    _ui_disp_menu_warn_v_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_warn_t_adj->_lcd_show_string_l0
    _ui_disp_menu_warn_t_adj->_lcd_show_string_l1
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_menu_pose_size->_ui_disp_menu_h_adj
    _ui_disp_menu_pos_adj->_lcd_show_string_l0
    _ui_disp_menu_pos_adj->_lcd_show_string_l1
    _ui_disp_menu_h_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_d_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_poly_c_adj->_ui_disp_adj_xfixed_pt_dp
    _ui_disp_menu_home->_ui_disp_xfloat_pt
    _ui_disp_xfloat_pt->_lcd_show_string_l0
    _ui_disp_xfloat_pt->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    ___lwdiv->___exp_10
    _lcd_disp_unit_temperature->_lcd_set_com_seg
    _lcd_disp_unit_t->_lcd_set_com_seg
    _lcd_disp_unit_mpa->_lcd_set_com_seg
    _lcd_disp_unit_2nd_m3->_lcd_set_com_seg
    _lcd_disp_unit_2nd_m->_lcd_set_com_seg
    _lcd_disp_unit_1st_m3->_lcd_set_com_seg
    _lcd_disp_unit_1st_m->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    ___int32_2_mflot32->___lldiv
    _ui_disp_menu_epr_ilp_scale_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_epr_calib_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_density_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_calib_pr_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_calib_diff_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_bzero_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_adj_xfloat_pt->_lcd_show_string
    _ui_disp_menu_bar_full_adj->_ui_disp_adj_xfixed_pt_dp
    _ui_disp_adj_xfixed_pt_dp->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_6->_lcd_set_com_seg
    _lcd_disp_dp_loc_5->_lcd_set_com_seg
    _lcd_disp_dp_loc_4->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _m_int16_2_str_4->___awdiv
    _lcd_disp_logo->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _sample_call_cal_pr->_cal_press
    _cal_press->_m_interp1_cal_p_v
    _m_interp1_cal_p_v->___aldiv
    _m_interp1_cal_p_t->___aldiv
    ___aldiv->___lmul
    _cal_diff_p_to_h->___fltol
    _cal_diff_hight_to_vol_v->_m_interp1_float_fast
    _cal_diff_hight_to_vol_h->_m_interp1_float_fast
    _m_interp1_float_fast->___flge
    ___flneg->___fldiv
    _cal_diff_hight_level->___flge
    ___flge->___fladd
    ___fladd->___flneg
    _data_init_all->_data_sys_init
    _data_sys_init->_data_sys_cal_v1
    _m_flash_write->_m_flash_read
    _data_sys_cal_v2->___fltol
    _data_sys_cal_v1->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _calib_data_init_pr->_crc_verify
    _calib_data_set_default_pr->___wmul
    _calib_data_init_diff_pr->_crc_verify
    _crc_verify->_crc_sum
    _crc_append->_crc_sum
    _calib_data_set_default_diff_pr->___wmul
    ___wmul->___exp_10
    _at24c02_write_n_byte->_delay_ms
    _at24c02_write_n_byte->_iic_send_byte
    _delay_ms->_delay_us
    _at24c02_read_n_byte->_iic_received_byte_if_ack
    _iic_start->_delay_us
    _iic_send_byte->_delay_us
    _iic_waite_ack->_delay_us
    _iic_stop->_delay_us
    _iic_received_byte_if_ack->_iic_received_byte
    _iic_send_ack->_delay_us
    _iic_received_byte->_delay_us
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_event_process_rtc
    _main->_event_process_ticker
    _key_process_set_long->___set_short_poly_coefic
    _key_process_set_long->___set_short_warn_type
    _key_process_set->___set_short_poly_coefic
    _key_process_set->___set_short_warn_type
    _cal_diff_press->_cal_diff_hight_to_vol_h
    _cal_diff_press->_cal_diff_hight_to_vol_v

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    _key_process_set_long->___set_short_pose_size
    _key_process_set->___set_short_pose_size
    _sample_call_cal_diff_pr->_cal_diff_press
    _cal_diff_press->_cal_diff_hight_to_vol_v

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 21879212
              _ads1115_init_all_chip
                      _data_init_all
                  _event_process_rtc
               _event_process_ticker
             _event_process_time_out
                        _in_adc_init
                        _key_polling
                        _key_process
                           _lcd_init
                            _rtc_set
                           _soc_init
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  537969
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                          _lcd_bl_on
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_process                                          3     3      0 10877817
                                              9 BANK3      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _key_waite_release                                    5     1      4    5547
                                             31 COMRAM     1     1      0
                                              8 BANK0      4     0      4
                           _delay_ms
                        _key_polling
 ---------------------------------------------------------------------------------
 (3) _key_polling                                          2     2      0    2618
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _key_process_up                                       0     0      0   60668
           ___up_adj_bar_level_scale
                 ___up_adj_work_mode
                 ___up_base_zero_adj
                   ___up_density_adj
                ___up_diff_calib_adj
                 ___up_epr_calib_adj
             ___up_epr_ilp_scale_adj
                      ___up_home_adj
               ___up_poly_coefic_adj
                 ___up_pose_size_adj
                  ___up_pr_calib_adj
                       ___up_psw_adj
                 ___up_warn_type_adj
                ___up_warn_value_adj
 ---------------------------------------------------------------------------------
 (3) ___up_warn_value_adj                                  0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_warn_type_adj                                   3     3      0     127
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___up_psw_adj                                         0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_pr_calib_adj                                    1     1      0    6080
                                             27 BANK0      1     1      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_pose_size_adj                                   3     3      0    6136
                                             27 BANK0      3     3      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_poly_coefic_adj                                 0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_home_adj                                        1     1      0      77
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___up_epr_ilp_scale_adj                               0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_epr_calib_adj                                   0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_diff_calib_adj                                  1     1      0    6080
                                             27 BANK0      1     1      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_density_adj                                     0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_base_zero_adj                                   0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (4) _key_adj_value_float                                  6     3      3    6009
                                             21 BANK0      6     3      3
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_adj_work_mode                                   2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___up_adj_bar_level_scale                             0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (5) _key_adj_value_fixed                                  7     4      3    4009
                                             14 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              9 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___exp_10                                             3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _key_process_set_long                                 0     0      0  485152
         ___exit_menu_to_home_unsave
         ___set_long_bar_level_scale
               ___set_long_base_zero
                 ___set_long_density
               ___set_long_work_mode
             ___set_short_diff_calib
          ___set_short_epr_ilp_scale
              ___set_short_epr_param
            ___set_short_poly_coefic
              ___set_short_pose_size
               ___set_short_pr_calib
              ___set_short_warn_type
             ___set_short_warn_value
 ---------------------------------------------------------------------------------
 (3) ___set_long_work_mode                                 6     6      0      34
                                              0 BANK0      2     2      0
         ___exit_menu_to_home_unsave
 ---------------------------------------------------------------------------------
 (3) ___set_long_density                                   9     9      0   47724
                                              0 BANK3      6     6      0
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___set_long_base_zero                                 9     9      0   47724
                                              0 BANK3      6     6      0
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___set_long_bar_level_scale                           8     8      0   45163
                                            131 BANK0      4     4      0
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (2) _key_process_set_down_long                            2     2      0   21406
                                             42 BANK0      2     2      0
             ___enter_menu_bar_scale
           ___enter_menu_calib_press
      ___enter_menu_calib_press_diff
             ___enter_menu_epr_calib
         ___enter_menu_epr_ilp_scale
          ___enter_menu_poly_coeffic
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
         ___enter_menu_set_pose_size
             ___enter_menu_warn_type
            ___enter_menu_warn_value
             ___enter_menu_work_mode
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_work_mode                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_density                             8     8      0    2877
                                             29 BANK0      8     8      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_base_zero                           6     6      0    2877
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_bar_scale                               4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _key_process_set                                      0     0      0  344507
              ___enter_menu_password
             ___set_short_diff_calib
          ___set_short_epr_ilp_scale
              ___set_short_epr_param
            ___set_short_poly_coefic
              ___set_short_pose_size
               ___set_short_pr_calib
              ___set_short_warn_type
             ___set_short_warn_value
 ---------------------------------------------------------------------------------
 (3) ___set_short_warn_value                              10    10      0   50889
                                            131 BANK0      2     2      0
                                              0 BANK3      8     8      0
            ___enter_menu_warn_value
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_warn_value                             10    10      0    3007
                                             29 BANK0     10    10      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_warn_type                                7     7      0   45259
                                            131 BANK0      2     2      0
                                              0 BANK1      5     5      0
             ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_warn_type                               5     5      0      65
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___set_short_pr_calib                                20    20      0   23699
                                             42 BANK0     20    20      0
           ___enter_menu_calib_press
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
               _at24c02_write_n_byte
                         _crc_append
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_calib_press                            14    13      1    3212
                                             31 COMRAM     1     0      1
                                             29 BANK0     13    13      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_pose_size                                9     9      0   53673
                                              0 BANK3      9     9      0
                 ___enter_menu_set_d
                 ___enter_menu_set_h
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_pose_size                           2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_h                                   6     6      0    2877
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_d                                   6     6      0    2877
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_poly_coefic                              5     5      0   45259
                                              0 BANK1      5     5      0
          ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_poly_coeffic                            5     5      0      65
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___set_short_epr_param                               10    10      0   51075
                                              0 BANK3      7     7      0
             ___enter_menu_epr_calib
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_epr_calib                               7     7      0    3010
                                             29 BANK0      7     7      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_epr_ilp_scale                           10    10      0   50954
                                              0 BANK3      7     7      0
         ___enter_menu_epr_ilp_scale
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___sys_data_save_write_flash                          5     5      0   45095
                                            126 BANK0      5     5      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_epr_ilp_scale                           7     7      0    3013
                                             29 BANK0      7     7      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_diff_calib                              20    20      0   23699
                                             42 BANK0     20    20      0
      ___enter_menu_calib_press_diff
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
               _at24c02_write_n_byte
                         _crc_append
 ---------------------------------------------------------------------------------
 (4) ___mflot32_2_int32                                   13     9      4    2561
                                             12 BANK0     13     9      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___exit_menu_to_home_unsave                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_calib_press_diff                       14    13      1    3212
                                             31 COMRAM     1     0      1
                                             29 BANK0     13    13      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_password                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_down                                     0     0      0   13251
                   ___down_dpr_calib
                    ___down_home_adj
                   ___down_pose_size
                    ___down_pr_calib
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_pr_calib                                      0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_pose_size                                     0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_home_adj                                      1     1      0      71
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___down_dpr_calib                                     0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) _key_shift_loc                                        5     1      4    3295
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _event_process_time_out                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _event_process_ticker                                 1     1      0  231239
                                              4 BANK1      1     1      0
              _sample_call_in_ticker
 ---------------------------------------------------------------------------------
 (2) _sample_call_in_ticker                                1     1      0  231229
                                            134 BANK0      1     1      0
            _sample_call_cal_diff_pr
             _sample_call_cal_in_soc
                 _sample_call_cal_pr
           _sample_diff_pr_chip_fast
               _sample_in_soc_adc_ch
                _sample_pr_chip_fast
 ---------------------------------------------------------------------------------
 (3) _sample_pr_chip_fast                                  3     3      0   34570
                                             42 BANK0      3     3      0
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
 ---------------------------------------------------------------------------------
 (3) _sample_in_soc_adc_ch                                 2     2      0    7387
                                             42 BANK0      2     2      0
                    ___x_sample_fifo
                        _in_adc_init
              _in_adc_start_and_read
 ---------------------------------------------------------------------------------
 (4) _in_adc_start_and_read                                6     4      2    2212
                                             31 COMRAM     1     1      0
                                              4 BANK0      5     3      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_fast                             2     2      0   39499
                                             49 BANK0      2     2      0
                    ___x_sample_fifo
            _ads1115_read_conversion
              _ads1115_set_data_rate
                    _ads1115_set_mux
                    _ads1115_set_pga
           _ads1115_start_conversion
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (4) _sample_diff_pr_fliter                                2     0      2    3585
                                             47 BANK0      2     0      2
                  ___x_sample_fliter
 ---------------------------------------------------------------------------------
 (5) ___x_sample_fliter                                   21    17      4    3402
                                             26 BANK0     21    17      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) _ads1115_start_conversion                             2     0      2   12399
                                             11 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_write_reg                                    5     0      5   11977
                                              6 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_pga                                      4     1      3     962
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_mux                                      4     1      3     782
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_data_rate                                4     1      3     422
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_read_conversion                              5     3      2   16214
                                             14 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_read_reg                                     6     3      3   15935
                                              8 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) ___x_sample_fifo                                     16    11      5    5039
                                             26 BANK0     16    11      5
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _event_process_rtc                                    1     1      0 10096969
                                              4 BANK1      1     1      0
   _sample_function_enable_fi_in_rtc
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _ui_disp_menu                                         0     0      0 9947122
          _ui_disp_menu_bar_full_adj
             _ui_disp_menu_bzero_adj
        _ui_disp_menu_calib_diff_adj
          _ui_disp_menu_calib_pr_adj
           _ui_disp_menu_density_adj
         _ui_disp_menu_epr_calib_adj
     _ui_disp_menu_epr_ilp_scale_adj
                  _ui_disp_menu_home
            _ui_disp_menu_poly_c_adj
             _ui_disp_menu_pose_size
               _ui_disp_menu_psw_adj
            _ui_disp_menu_warn_t_adj
            _ui_disp_menu_warn_v_adj
         _ui_disp_menu_work_mode_adj
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_work_mode_adj                          13    13      0  289413
                                             22 BANK0     13    13      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_warn_v_adj                             16    16      0  555478
                                             42 BANK0     12    12      0
                       _lcd_disp_all
                      _lcd_disp_logo
                _lcd_disp_unit_2nd_m
                  _lcd_disp_unit_mpa
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_warn_t_adj                             10    10      0  541954
                                             22 BANK0     10    10      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_psw_adj                                 0     0      0  737382
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt                               17    12      5  706040
                                             22 BANK0     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_pose_size                               0     0      0 1517062
                 _ui_disp_menu_d_adj
                 _ui_disp_menu_h_adj
               _ui_disp_menu_pos_adj
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_pos_adj                                 8     8      0  541740
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_h_adj                                   2     2      0  487678
                                             42 BANK0      2     2      0
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_d_adj                                   0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_poly_c_adj                              7     7      0  932054
                                             40 BANK0      7     7      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
           _ui_disp_adj_xfixed_pt_dp
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_home                                    5     5      0  988703
                                             39 BANK0      5     5      0
                  ___int32_2_mflot32
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                _lcd_disp_unit_1st_m
               _lcd_disp_unit_1st_m3
                _lcd_disp_unit_2nd_m
               _lcd_disp_unit_2nd_m3
                  _lcd_disp_unit_mpa
                    _lcd_disp_unit_t
          _lcd_disp_unit_temperature
                  _ui_disp_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_xfloat_pt                                   17    14      3  702263
                                             22 BANK0     17    14      3
                            ___lwdiv
                        _lcd_show_dp
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                    _m_int16_2_str_4
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  252576
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  252576
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     601
                                              2 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_temperature                            1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_t                                      1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_mpa                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_2nd_m3                                 1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_2nd_m                                  1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_1st_m3                                 1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_1st_m                                  1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_level                                       2     2      0   33329
                                             18 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_level_bar                                   3     2      1   33097
                                             31 COMRAM     1     0      1
                                             16 BANK0      2     2      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) ___int32_2_mflot32                                   16    12      4    2775
                                             13 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_epr_ilp_scale_adj                       6     6      0  492807
                                             42 BANK0      6     6      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_epr_calib_adj                           6     6      0  492807
                                             42 BANK0      6     6      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_density_adj                             0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_calib_pr_adj                           11    11      0  748609
                                             42 BANK0     11    11      0
                            ___awmod
                            ___lbdiv
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_calib_diff_adj                         11    11      0  748683
                                             42 BANK0     11    11      0
                            ___awmod
                            ___lbdiv
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     691
                                             31 COMRAM     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_bzero_adj                               0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfloat_pt                               20    15      5  456302
                                             22 BANK0     20    15      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_bar_full_adj                            0     0      0  926882
                       _lcd_disp_all
                      _lcd_disp_logo
           _ui_disp_adj_xfixed_pt_dp
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt_dp                            18    12      6  895540
                                             22 BANK0     18    12      6
                    ___x_arrange_str
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (5) _ui_disp_clear_num_dp                                 0     0      0  441955
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (4) _lcd_show_string                                      3     1      2  252936
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  252083
                                             16 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_show_dp                                          2     1      1  189019
                                             16 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
                  _lcd_disp_dp_loc_4
                  _lcd_disp_dp_loc_5
                  _lcd_disp_dp_loc_6
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_6                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_5                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_4                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_2                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_1                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_0                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _m_mem_cpy                                            4     0      4    4990
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_int16_2_str_4                                      4     0      4    4502
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1873
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___x_arrange_str                                      4     1      3     974
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   31181
                                              8 BANK0      8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sample_function_enable_fi_in_rtc                     1     1      0  149844
                                            134 BANK0      1     1      0
               _sample_all_power_off
                _sample_all_power_on
            _sample_call_cal_diff_pr
             _sample_call_cal_in_soc
                 _sample_call_cal_pr
               _sample_variable_init
 ---------------------------------------------------------------------------------
 (3) _sample_variable_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_pr                                   0     0      0    5300
                          _cal_press
           _cal_pt100_temperature_ex
 ---------------------------------------------------------------------------------
 (4) _cal_pt100_temperature_ex                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _cal_press                                           11    11      0    5300
                                             58 BANK0     11    11      0
                  _m_interp1_cal_p_v
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_in_soc                               0     0      0      31
            _cal_additional_pressute
 ---------------------------------------------------------------------------------
 (4) _cal_additional_pressute                              1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_diff_pr                              0     0      0  144439
                     _cal_diff_press
           _cal_pt100_temperature_in
 ---------------------------------------------------------------------------------
 (4) _cal_pt100_temperature_in                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _cal_diff_press                                       5     5      0  144439
                                             20 BANK3      5     5      0
               _cal_diff_hight_level
            _cal_diff_hight_to_vol_h
            _cal_diff_hight_to_vol_v
                    _cal_diff_p_to_h
                  _m_interp1_cal_p_t
                  _m_interp1_cal_p_v
                          _m_mem_set
 ---------------------------------------------------------------------------------
 (5) _m_mem_set                                            4     0      4     366
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_interp1_cal_p_v                                   32    26      6    5102
                                             26 BANK0     32    26      6
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _m_interp1_cal_p_t                                   31    26      5    4591
                                             26 BANK0     31    26      5
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1476
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8    1825
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _cal_diff_p_to_h                                     10     8      2   15118
                                             98 BANK0     10     8      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_to_vol_v                             24    20      4   48314
                                              0 BANK1      4     0      4
                                              0 BANK3     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_to_vol_h                             20    16      4   47390
                                              0 BANK1      4     0      4
                                              0 BANK3     16    16      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (6) _m_interp1_float_fast                                34    26      8   23913
                                            100 BANK0     34    26      8
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     515
                                             64 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_level                                16    16      0   23257
                                            100 BANK0     16    16      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1706
                                             88 BANK0     12     4      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    6282
                                             68 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _sample_all_power_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_all_power_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _data_init_all                                        0     0      0  131490
            _calib_data_init_diff_pr
                 _calib_data_init_pr
                      _data_sys_init
 ---------------------------------------------------------------------------------
 (2) _data_sys_init                                        7     7      0   46705
                                            126 BANK0      7     7      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (5) _m_flash_write                                       21    13      8    5581
                                             14 BANK0     21    13      8
                      _m_flash_erase
                       _m_flash_read
                     _m_flash_unlock
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (6) _m_flash_read                                        14     6      8    2160
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (6) _m_flash_erase                                        8     4      4     260
                                              0 BANK0      8     4      4
                     _m_flash_unlock
 ---------------------------------------------------------------------------------
 (6) _m_flash_unlock                                       1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _data_sys_cal_v2                                     20    16      4   15338
                                             98 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _data_sys_cal_v1                                     28    24      4   15440
                                             98 BANK0     28    24      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    2696
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5933
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    5175
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_pr                                   5     5      0   42377
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
          _calib_data_set_default_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_pr                            8     8      0    2298
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_diff_pr                              5     5      0   42408
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
     _calib_data_set_default_diff_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (5) _crc_verify                                          10     6      4    3778
                                             12 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (6) _m_mem_cpy_len                                        6     0      6    1452
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (5) _crc_append                                           8     4      4    2531
                                             12 BANK0      8     4      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (6) _crc_sum                                             12     8      4     660
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_diff_pr                       8     8      0    2329
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1852
                                              2 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) _at24c02_write_n_byte                                 9     2      7   15061
                                              6 BANK0      9     2      7
                           _delay_ms
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2    2442
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _at24c02_read_n_byte                                 13     6      7   17254
                                              8 BANK0     13     6      7
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (5) _iic_start                                            0     0      0    2138
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _iic_send_byte                                        2     2      0    6581
                                              4 BANK0      2     2      0
                           _delay_us
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (6) _iic_waite_ack                                        1     1      0    4341
                                             31 COMRAM     1     1      0
                           _delay_us
                           _iic_stop
 ---------------------------------------------------------------------------------
 (5) _iic_stop                                             0     0      0    2138
                           _delay_us
 ---------------------------------------------------------------------------------
 (6) _iic_received_byte_if_ack                             2     2      0    4483
                                              6 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (7) _iic_send_ack                                         1     1      0    2169
                                             31 COMRAM     1     1      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (7) _iic_received_byte                                    2     2      0    2246
                                              4 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     2      2    2138
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _at24c02_init                                         3     0      3     937
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (12) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (14) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _data_init_all
     _calib_data_init_diff_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
             _delay_us
           _iic_send_ack
             _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _at24c02_write_n_byte
         _delay_ms
           _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _calib_data_set_default_diff_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _calib_data_init_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
             _delay_us
           _iic_send_ack
             _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _at24c02_write_n_byte
         _delay_ms
           _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _calib_data_set_default_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _data_sys_init
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
       _data_sys_cal_v1
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _data_sys_cal_v2
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _m_flash_read
       _m_flash_write
         _m_flash_erase
           _m_flash_unlock
         _m_flash_read
         _m_flash_unlock
         _m_mem_cpy_len
       _m_mem_cpy_len
   _event_process_rtc
     _sample_function_enable_fi_in_rtc
       _sample_all_power_off
       _sample_all_power_on
       _sample_call_cal_diff_pr
         _cal_diff_press
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _cal_diff_hight_to_vol_h
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_hight_to_vol_v
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_p_to_h
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_interp1_cal_p_t
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_mem_set
         _cal_pt100_temperature_in
       _sample_call_cal_in_soc
         _cal_additional_pressute
       _sample_call_cal_pr
         _cal_press
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _cal_pt100_temperature_ex
       _sample_variable_init
     _ui_disp_menu
       _ui_disp_menu_bar_full_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_bzero_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_diff_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_pr_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_density_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_calib_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_ilp_scale_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_home
         ___int32_2_mflot32
           ___lldiv
         _lcd_disp_all
         _lcd_disp_level
           _lcd_disp_level_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_disp_unit_1st_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_1st_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_t
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_temperature
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_xfloat_pt
           ___lwdiv
             ___exp_10 (ARG)
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
       _ui_disp_menu_poly_c_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_pose_size
         _ui_disp_menu_d_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_h_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_pos_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_refresh
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_mem_cpy
       _ui_disp_menu_psw_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_warn_t_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string_l0
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _lcd_show_string_l1
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
       _ui_disp_menu_warn_v_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_work_mode_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
   _event_process_ticker
     _sample_call_in_ticker
       _sample_call_cal_diff_pr
         _cal_diff_press
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _cal_diff_hight_to_vol_h
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_hight_to_vol_v
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_p_to_h
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_interp1_cal_p_t
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_mem_set
         _cal_pt100_temperature_in
       _sample_call_cal_in_soc
         _cal_additional_pressute
       _sample_call_cal_pr
         _cal_press
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _cal_pt100_temperature_ex
       _sample_diff_pr_chip_fast
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
                 _delay_us
               _iic_send_ack
                 _delay_us
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _ads1115_set_data_rate
         _ads1115_set_mux
         _ads1115_set_pga
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
               ___lmul (ARG)
       _sample_in_soc_adc_ch
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _in_adc_init
         _in_adc_start_and_read
           _delay_us
       _sample_pr_chip_fast
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
                 _delay_us
               _iic_send_ack
                 _delay_us
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
   _event_process_time_out
   _in_adc_init
   _key_polling
     _delay_ms
       _delay_us
   _key_process
     _key_process_down
       ___down_dpr_calib
         _key_shift_loc
       ___down_home_adj
       ___down_pose_size
         _key_shift_loc
       ___down_pr_calib
         _key_shift_loc
       _key_shift_loc
     _key_process_set
       ___enter_menu_password
       ___set_short_diff_calib
         ___enter_menu_calib_press_diff
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_epr_ilp_scale
         ___enter_menu_epr_ilp_scale
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_epr_param
         ___enter_menu_epr_calib
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_poly_coefic
         ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pose_size
         ___enter_menu_set_d
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_h
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pr_calib
         ___enter_menu_calib_press
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_warn_type
         ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_warn_value
         ___enter_menu_warn_value
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
     _key_process_set_down_long
       ___enter_menu_bar_scale
       ___enter_menu_calib_press
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_calib_press_diff
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_epr_calib
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_epr_ilp_scale
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_poly_coeffic
       ___enter_menu_set_base_zero
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_density
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_pose_size
       ___enter_menu_warn_type
       ___enter_menu_warn_value
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_work_mode
     _key_process_set_long
       ___exit_menu_to_home_unsave
       ___set_long_bar_level_scale
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_base_zero
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_density
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_work_mode
         ___exit_menu_to_home_unsave
       ___set_short_diff_calib
         ___enter_menu_calib_press_diff
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_epr_ilp_scale
         ___enter_menu_epr_ilp_scale
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_epr_param
         ___enter_menu_epr_calib
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_poly_coefic
         ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pose_size
         ___enter_menu_set_d
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_h
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pr_calib
         ___enter_menu_calib_press
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_warn_type
         ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_warn_value
         ___enter_menu_warn_value
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
     _key_process_up
       ___up_adj_bar_level_scale
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_adj_work_mode
       ___up_base_zero_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_density_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_diff_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_epr_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_epr_ilp_scale_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_home_adj
       ___up_poly_coefic_adj
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_pose_size_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_pr_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_psw_adj
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_warn_type_adj
       ___up_warn_value_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
     _key_waite_release
       _delay_ms
         _delay_us
       _key_polling
         _delay_ms
           _delay_us
     _ui_disp_menu
       _ui_disp_menu_bar_full_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_bzero_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_diff_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_pr_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_density_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_calib_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_ilp_scale_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_home
         ___int32_2_mflot32
           ___lldiv
         _lcd_disp_all
         _lcd_disp_level
           _lcd_disp_level_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_disp_unit_1st_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_1st_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_t
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_temperature
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_xfloat_pt
           ___lwdiv
             ___exp_10 (ARG)
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
       _ui_disp_menu_poly_c_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_pose_size
         _ui_disp_menu_d_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_h_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_pos_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_refresh
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_mem_cpy
       _ui_disp_menu_psw_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_warn_t_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string_l0
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _lcd_show_string_l1
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
       _ui_disp_menu_warn_v_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_work_mode_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
   _lcd_init
     _lcd_bl_on
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A2      14       63.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      E3      11       88.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     564      12        0.0%
DATA                 0      0     564       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Sep 25 20:16:04 2017

             __end_of___set_long_base_zero 943C               __end_of___up_poly_coefic_adj A2B0  
               ui_disp_menu_poly_c_adj@buf 0088                      lcd_show_string_l0@str 0073  
                           ?_iic_waite_ack 0001                      lcd_show_string_l1@str 0073  
                             ___fldiv@aexp 009F                               ___fldiv@bexp 009E  
          __size_of___set_short_diff_calib 036A                               ?_lcd_show_dp 0070  
                      ?_lcd_show_string_l0 0073                        ?_lcd_show_string_l1 0073  
                 ??___enter_menu_bar_scale 0060                               ___fldiv@sign 0093  
               __end_of_rtcc_reg_wr_enable A3D0                     ??_ui_disp_menu_pos_adj 0021  
                    ??_at24c02_read_n_byte 006F                               ?_in_adc_init 0001  
                     at24c02_init@pAt24c02 0060                     __end_of_m_flash_unlock A26E  
                            ?_m_int8_2_hex 0060                     ??_ui_disp_menu_psw_adj 0021  
                             ___awdiv@sign 0065                ?___enter_menu_epr_ilp_scale 0001  
                                       bsr 000FE0                              ?_lcd_show_chr 0070  
                      ___wmul@multiplicand 0064                       _m_interp1_float_fast 1F2A  
    __end_of___enter_menu_calib_press_diff 6422     __size_of___enter_menu_calib_press_diff 0104  
            ___enter_menu_calib_press_diff 631E                __end_of_rtcc_reg_wr_disable A3DC  
   __end_of_ui_disp_menu_epr_ilp_scale_adj 7008    __size_of_ui_disp_menu_epr_ilp_scale_adj 00C4  
           _ui_disp_menu_epr_ilp_scale_adj 6F44                          _pAds1115DiffPrObj 00EF  
                             __CFG_CP0$OFF 000000                              ?_m_flash_read 0060  
                              __CFG_OSC$HS 000000              ui_disp_menu_epr_calib_adj@buf 008A  
                                      l176 0584                                        WREG 000FE8  
                                      l810 36B6                                        l821 37DC  
                     ___up_pr_calib_adj@t8 007B                                        l938 67B6  
                                      _PR2 000FCB                ___set_short_poly_coefic@stp 01FE  
                         ??_key_process_up 0021                                        _dwm 00FD  
                       ___down_home_adj@t8 0020                               ___awmod@sign 0065  
                                      prod 000FF3       __size_of_ui_disp_menu_calib_diff_adj 00FC  
                                      tosl 000FFD                                        wreg 000FE8  
                       ___up_pose_size_adj 8864                  __size_of_ads1115_read_reg 01BC  
                             ___flmul@aexp 007B                               ___flmul@bexp 0080  
                  __end_of___x_arrange_str 921E                       ??_lcd_disp_level_bar 0021  
                             ___flmul@sign 007A                             ?_m_flash_erase 0060  
                             ___flmul@temp 0085                   __end_of___down_pose_size 9D1A  
                             ___flmul@prod 0081        ___enter_menu_poly_coeffic@__subMenu 0062  
                 ??___set_short_warn_value 00E3          __size_of___up_adj_bar_level_scale 0016  
                _m_interp1_float_fast$5883 00DC                  ?___up_adj_bar_level_scale 0001  
                     ??_lcd_show_string_l0 0021                       ??_lcd_show_string_l1 0021  
                 ??_ui_disp_menu_pose_size 0021                         m_int16_2_str_4@buf 0068  
                           ?_m_flash_write 006E                  __size_of___up_density_adj 0016  
                 ?___set_short_poly_coefic 0001                               ___fltol@exp1 00C1  
                                     l1103 2E86                                       l1104 2EDA  
                                     l2202 54C2                                       l2203 54D0  
                                     l2233 9BB2                                       l1622 8818  
                                     l1607 94BE                                       l2193 84E6  
                                     l1725 8C12                                       l1726 8C10  
                                     l1647 8FBE                                       l2800 9094  
                                     l2385 9BEE                                       l2590 4868  
                                     l2920 1960                                       l2913 16C4  
                                     l2737 72F0                                       l2930 1A72  
                                     l2922 19CE                                       l2827 1348  
                                     l2844 14BC                                       l2828 133C  
                                     l2853 1550                                       l2829 1308  
                                     l2950 418C                                       l2942 4118  
                                     l2790 86FA                                       l2935 406C  
                                     l2883 2580                                       l2892 25B8  
                                     l2949 4174                                       l2894 2626  
                                     l2886 2528                  _ui_disp_menu_calib_pr_adj 67F8  
                                     STR_1 F3A9                                       STR_2 F370  
                                     STR_3 F374                                       STR_4 F374  
                                     STR_5 F3CC                                       STR_6 F3EA  
                                     STR_7 F3EF                                       STR_8 F374  
                                     STR_9 F3D6                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATG 000F8F  
                                     _LATH 000F90                        ?___up_pose_size_adj 0001  
                            _m_mem_cpy_len 97C6                  _ui_disp_menu_bar_full_adj 9D1A  
                           ??_lcd_disp_all 0020                          ??_key_process_set 0021  
                 ??___enter_menu_epr_calib 0020                   cal_diff_hight_to_vol_h@h 01FB  
                                     _pLCD 0100                   cal_diff_hight_to_vol_v@D 03D6  
                                     _hKel EF17               __end_of_LCDDigitalIndexTable EEDC  
                                     _hKcy F0AB                   cal_diff_hight_to_vol_v@h 01FB  
                __size_of_lcd_disp_refresh 0062                                       _main 8FDA  
                                     _menu 0033                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     _tmpx 03B2                                       btemp 0040  
                      _lcd_disp_unit_2nd_m 8DE2                    _handler_interrupt_hight 0008  
                      _lcd_disp_unit_1st_m 9596                   ?_ui_disp_menu_poly_c_adj 0001  
                     ___set_short_pr_calib 2A7C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 00D8  
                           ??_iic_send_ack 0020                         _PrChipSampleFinish 00F6  
                            __CFG_IESO$OFF 000000                            ___fldiv@new_exp 0098  
                 ?_ui_disp_menu_warn_t_adj 0001                   ?_ui_disp_menu_warn_v_adj 0001  
                        _key_waite_release 963C           __end_of_iic_received_byte_if_ack A1A8  
                   ___up_diff_calib_adj@t8 007B                 calib_data_init_diff_pr@t16 0077  
                             ___param_bank 000000                 calib_data_init_diff_pr@buf 0079  
                         ?_lcd_set_com_seg 0068         __size_of_calib_data_set_default_pr 01C4  
               calib_data_init_diff_pr@ret 0076                 __size_of___up_pr_calib_adj 0038  
                         ??_cal_diff_press 0020            __size_of_sample_call_cal_in_soc 0022  
               ??_ui_disp_menu_density_adj 0021                         ?_key_waite_release 0068  
                                    EECON2 000FA7                             ??_m_int8_2_hex 0020  
                    key_adj_value_float@t8 007A                 ??_ads1115_start_conversion 0021  
         ___enter_menu_warn_type@__subMenu 0062                             ??_lcd_show_chr 0021  
                            lcd_disp_all@i 0061                              lcd_disp_all@x 0060  
                     ??___up_pose_size_adj 007B                            ?_m_flash_unlock 0001  
                    ?_m_interp1_float_fast 00C4                                      TABLAT 000FF5  
                           ??_m_flash_read 0020                __size_of_ui_disp_menu_d_adj 002E  
                  ??_ads1115_set_data_rate 0020                            ___x_sample_fifo 4B94  
              __size_of_ui_disp_menu_h_adj 0070                                      RTCCFG 000F5F  
                                    l13101 71EA                                      l13201 960A  
                                    l13113 7228                                      l14001 91C6  
                                    l13203 960C                                      l13131 6DC2  
                                    l13125 9BC8                                      l13117 723C  
                                    l13109 721A                                      l14005 91F8  
                                    l13301 9DC6                                      l14021 8B28  
                                    l14111 8822                                      l13143 6E3C  
                                    l13135 6DCC                                      l14007 91FA  
                                    l14023 8B32                                      l14015 8B0A  
                                    l14113 8824                                      l14105 880E  
                                    l15001 5CCA                                      l14201 5B4A  
                                    l13313 9D66                                      l14025 8B3C  
                                    l14017 8B14                                      l13321 7D0A  
                                    l14033 8A9E                                      l13251 8F86  
                                    l13227 94C2                                      l13091 71BA  
                                    l14051 8BA8                                      l13307 9D96  
                                    l14019 8B1E                                      l13331 7D3C  
                                    l13323 7D14                                      l13237 94D8  
                                    l13229 94CA                                      l14125 885E  
                                    l15005 5CDE                                      l14213 5BB0  
                                    l15021 5A1C                                      l13085 71A4  
                                    l14045 8B72                                      l14029 8B46  
                                    l13173 916C                                      l13325 7D1E  
                                    l13317 7CF6                                      l13271 8FC4  
                                    l13255 8F90                                      l13431 1322  
                                    l13351 11AA                                      l15015 59D8  
                                    l13327 7D28                                      l13319 7D00  
                                    l13335 7D46                                      l14039 8AD4  
                                    l13521 15B8                                      l13417 1288  
                                    l13345 1186                                      l14217 5BCC  
                                    l14209 5B9E                                      l13097 71D8  
                                    l13185 919A                                      l13177 9176  
                                    l13329 7D32                                      l14305 86EC  
                                    l14321 9086                                      l14313 9050  
                                    l15105 6968                                      l14075 7B24  
                                    l14083 7B74                                      l14243 5D88  
                                    l14227 5D1A                                      l13531 15EA  
                                    l13507 154A                                      l13435 132C  
                                    l13363 11E0                                      l13355 11B4  
                                    l15035 5A9E                                      l13099 71E4  
                                    l14059 4FE8                                      l13283 9E56  
                                    l16011 2A70                                      l14315 905C  
                                    l15115 69A2                                      l15107 697C  
                                    l13621 257C                                      l13701 1688  
                                    l14261 5DEE                                      l14253 5DB8  
                                    l14405 54B2                                      l14421 54E0  
                                    l13525 15DA                                      l13517 15A6  
                                    l13453 13AA                                      l13445 136C  
                                    l13429 131C                                      l14173 87B2  
                                    l13189 91BA                                      l14317 9062  
                                    l13615 2534                                      l13607 24FC  
                                    l14255 5DC8                                      l14247 5D9C  
                                    l14407 54B8                                      l13455 13B0  
                                    l13463 13CC                                      l13375 1218  
                                    l14503 342E                                      l14191 5B06  
                                    l13295 9DF6                                      l14271 7274  
                                    l15071 987C                                      l15311 7816  
                                    l13633 25CC                                      l13553 2394  
                                    l13801 1A9C                                      l13713 16D8  
                                    l14257 5DD2                                      l13537 15FE  
                                    l13529 15E6                                      l13481 14EE  
                                    l13473 149C                                      l13369 11F4  
                                    l14185 5AE8                                      l14169 878C  
                                    l14441 0974                                      l14433 08B2  
                                    l13289 9E26                                      l15401 6A68  
                                    l14273 7284                                      l15321 7876  
                                    l15241 775A                                      l15225 7120  
                                    l17001 747C                                      l14371 8312  
                                    l13643 2620                                      l13627 25A2  
                                    l13547 2370                                      l13707 16AC  
                                    l13491 1510                                      l13459 13BA  
                                    l13387 124C                                      l13379 1222  
                                    l14531 31BC                                      l14427 07A2  
                                    l14611 A148                                      l14283 72DE  
                                    l14275 728A                                      l15411 528C  
                                    l15163 6368                                      l15315 7850  
                                    l15243 7762                                      l15251 77A6  
                                    l16131 5524                                      l16051 2DB0  
                                    l16027 2ACE                                      l17011 74A0  
                                    l17003 7482                                      l13661 26DA  
                                    l13653 2676                                      l13573 23F2  
                                    l13557 239E                                      l13717 16EC  
                                    l13709 16B2                                      l14197 5B34  
                                    l14437 091A                                      l14701 9E86  
                                    l15333 945C                                      l14293 86AA  
                                    l15421 52E8                                      l15245 776A  
                                    l16133 554A                                      l16141 55DC  
                                    l16045 2DA0                                      l16037 2D42  
                                    l16125 6CE4                                      l16109 6C96  
                                    l17021 74C8                                      l17013 74A8  
                                    l17005 748A                                      l14623 A062  
                                    l13567 23CE                                      l13911 41DE  
                                    l13487 1504                                      l14551 3336  
                                    l14543 328E                                      l14199 5B44  
                                    l14471 1BDC                                      l14447 0C0C  
                                    l14439 091E                                      l14615 A15A  
                                    l13831 7A46                                      l13823 7A10  
                                    l13815 79EC                                      l15343 9482  
                                    l14295 86B6                                      l14711 98C8  
                                    l15431 533A                                      l15079 9890  
                                    l15271 7346                                      l15239 7752  
                                    l16151 560A                                      l16135 5580  
                                    l16143 55F6                                      l16071 89A4  
                                    l15183 6160                                      l16119 6CD8  
                                    l17031 7BB2                                      l17023 74CE  
                                    l17015 74B0                                      l17007 7490  
                                    l14631 663C                                      l13657 26A4  
                                    l13577 23FC                                      l13497 1524  
                                    l14537 3250                                      l14529 30CE  
                                    l14465 1AD4                                      l14457 0C90  
                                    l13825 7A1C                                      l15337 946C  
                                    l15329 944E                                      l14297 86BC  
                                    l14705 98A6                                      l15425 5308  
                                    l16401 8EC8                                      l16305 9FD4  
                                    l16313 9FE6                                      l17121 975E  
                                    l15169 641C                                      l15265 732E  
                                    l15249 778A                                      l16137 55A6  
                                    l16057 2DCE                                      l17041 7BD8  
                                    l17033 7BB8                                      l17017 74B8  
                                    l17009 7498                                      l14641 66D8  
                                    l15089 6916                                      l14619 A04C  
                                    l13667 26EA                                      l13659 26B8  
                                    l13691 1658                                      l13683 162E  
                                    l13499 152A                                      l13851 47C4  
                                    l14571 02A4                                      l14475 1C44  
                                    l13827 7A22                                      l13835 7A54  
                                    l13819 79FC                                      l16331 6548  
                                    l15339 9478                                      l15451 95D6  
                                    l16251 38DC                                      l16243 3892  
                                    l15515 826E                                      l16307 9FDA  
                                    l15355 6D0A                                      l15267 7336  
                                    l15275 7366                                      l16163 7562  
                                    l16091 840C                                      l17043 7BE0  
                                    l17035 7BC0                                      l17051 7BF8  
                                    l17019 74C0                                      l17027 74D4  
                                    l15099 6946                                      l13933 97C8  
                                    l13941 9806                                      l13669 26EE  
                                    l13597 247E                                      l13589 2450  
                                    l13765 1974                                      l13693 166A  
                                    l13861 48B4                                      l14485 1F10  
                                    l14477 1C48                                      l14813 3814  
                                    l16501 6FE6                                      l14653 6072  
                                    l14661 60B6                                      l14901 0D30  
                                    l15437 535C                                      l15429 5322  
                                    l16309 9FE0                                      l15373 6D9E  
                                    l15365 6D5E                                      l17061 769E  
                                    l15269 733E                                      l15277 7382  
                                    l16165 756A                                      l16173 759A  
                                    l16157 5616                                      l16077 89B0  
                                    l15189 6214                                      l17045 7BE8  
                                    l17037 7BC8                                      l15711 464E  
                                    l13791 1A58                                      l13775 19C8  
                                    l13759 194A                                      l13855 4816  
                                    l13847 4776                                      l13951 2060  
                                    l14495 3396                                      l14479 1C98  
                                    l17151 6ACE                                      l13839 7A68  
                                    l15383 69D4                                      l16335 6556  
                                    l16327 653E                                      l14663 60D0  
                                    l14911 0D8A                                      l14903 0D42  
                                    l15439 536C                                      l16415 5638  
                                    l17071 76BC                                      l17063 76A4  
                                    l17055 768C                                      l15551 4C70  
                                    l14831 2E32                                      l16183 75C8  
                                    l16167 7572                                      l16175 75B4  
                                    l17047 7BF0                                      l17039 7BD0  
                                    l15713 465A                                      l13785 1A1E  
                                    l13689 1652                                      l13929 8506  
                                    l13945 1F36                                      l14585 048A  
                                    l17161 6AF6                                      l15393 6A28  
                                    l15641 97B6                                      l15633 9798  
                                    l14921 0DE4                                      l14913 0D9C  
                                    l14905 0D54                                      l15529 8A06  
                                    l16433 56EE                                      l17081 76DA  
                                    l17073 76C2                                      l17065 76AA  
                                    l17057 7692                                      l14825 2E00  
                                    l15801 9D0A                                      l16169 757A  
                                    l16097 8418                                      l15651 3C7E  
                                    l13891 40FA                                      l13955 20D0  
                                    l14675 9EA4                                      l14739 3626  
                                    l14771 36F0                                      l15635 979C  
                                    l14667 60FC                                      l14931 0E3E  
                                    l14923 0DF6                                      l14915 0DAE  
                                    l14907 0D66                                      l15467 8E88  
                                    l15491 8E34                                      l15459 8DCE  
                                    l15475 9582                                      l15483 8D68  
                                    l16259 3926                                      l16451 6730  
                                    l16515 8748                                      l17075 76C8  
                                    l17067 76B0                                      l17059 7698  
                                    l17323 9F9C                                      l15539 4BAE  
                                    l14843 2F30                                      l16603 3ED0  
                                    l13789 1A44                                      l13885 40A4  
                                    l13869 9B5C                                      l13957 20D6  
                                    l17181 6B44                                      l17173 6B2C  
                                    l17157 6AE6                                      l14757 368E  
                                    l15629 9790                                      l15645 97C0  
                                    l16349 65D8                                      l16381 6892  
                                    l14941 0E98                                      l14933 0E50  
                                    l14925 0E08                                      l14917 0DC0  
                                    l14909 0D78                                      l14693 8A66  
                                    l16285 3A10                                      l16277 39C4  
                                    l16293 3A5A                                      l16269 397A  
                                    l16437 571C                                      l16429 56C2  
                                    l16517 8764                                      l17077 76CE  
                                    l17069 76B6                                      l17085 76E0  
                                    l15581 9850                                      l16621 3F66  
                                    l16613 3F24                                      l16189 75D4  
                                    l15901 9CB8                                      l15741 9260  
                                    l17261 7AB4                                      l17309 7CD8  
                                    l15719 4698                                      l15663 3CAE  
                                    l15655 3C88                                      l13799 1A92  
                                    l13887 40AC                                      l13879 407C  
                                    l13959 210E                                      l17167 6B10  
                                    l17183 6B4A                                      l14679 9EAE  
                                    l14951 0EF2                                      l14943 0EAA  
                                    l14935 0E62                                      l14927 0E1A  
                                    l14919 0DD2                                      l14687 8A30  
                                    l16439 5738                                      l17079 76D4  
                                    l14871 4490                                      l14863 43E4  
                                    l14855 308A                                      l16631 3FB4  
                                    l16703 4B5A                                      l13991 92AE  
                                    l13983 9296                                      l13975 927E  
                                    l15831 A014                                      l15681 4222  
                                    l13897 4156                                      l13889 40BC  
                                    l14793 377E                                      l16473 7016  
                                    l14961 0F4C                                      l14953 0F04  
                                    l14945 0EBC                                      l14937 0E74  
                                    l14929 0E2C                                      l16465 67C8  
                                    l14873 44CE                                      l14865 441A  
                                    l16713 4B90                                      l16705 4B60  
                                    l15921 5E12                                      l15905 9CCE  
                                    l15745 926A                                      l17273 7AE2  
                                    l17265 7AC4                                      l15659 3CA4  
                                    l13899 4166                                      l16539 A1D2  
                                    l16571 A130                                      l16555 A1B4  
                                    l14779 3714                                      l16475 7034  
                                    l16483 708E                                      l16491 6F70  
                                    l14971 0FA6                                      l14963 0F5E  
                                    l14955 0F16                                      l14947 0ECE  
                                    l14939 0E86                                      l14891 0CD6  
                                    l15499 837A                                      l16467 67D0  
                                    l14867 4444                                      l16635 3FCC  
                                    l16723 4D1C                                      l15819 A1F6  
                                    l13987 92A2                                      l13979 928A  
                                    l15851 88AA                                      l15843 8866  
                                    l17099 9BF0                                      l15669 3E4A  
                                    l15693 43AE                                      l15685 422C  
                                    l16477 7052                                      l16485 70A8  
                                    l16493 6F8E                                      l14981 1000  
                                    l14973 0FB8                                      l14965 0F70  
                                    l14957 0F28                                      l14949 0EE0  
                                    l14893 0CE8                                      l14885 0CA4  
                                    l16469 67D6                                      l14877 4566  
                                    l14869 446A                                      l16901 512E  
                                    l15925 5E3A                                      l15781 8686  
                                    l13997 92BA                                      l15917 9C3C  
                                    l15749 9274                                      l17269 7AD2  
                                    l17277 7AEE                                      l14799 37B4  
                                    l16479 7070                                      l16495 6FAC  
                                    l14983 1012                                      l14975 0FCA  
                                    l14967 0F82                                      l14959 0F3A  
                                    l14895 0CFA                                      l14887 0CB2  
                                    l16751 4DC8                                      l16743 4D86  
                                    l16735 4D42                                      l16663 4A4E  
                                    l16911 5194                                      l16903 514C  
                                    l15951 5EE0                                      l15943 5ECE  
                                    l15935 5EAA                                      l15871 9B20  
                                    l15855 88C0                                      l14993 5BEA  
                                    l16489 6F52                                      l14985 1024  
                                    l14977 0FDC                                      l14969 0F94  
                                    l14897 0D0C                                      l14889 0CC4  
                                    l16649 401E                                      l16585 3E6E  
                                    l16921 5212                                      l16913 519A  
                                    l16905 516A                                      l15953 5EE6  
                                    l15929 5E66                                      l15937 5EBE  
                                    l17297 7C94                                      l17633 9008  
                    ___set_short_epr_param 54EE                                      l14995 5C6A  
                                    l16499 6FCA                                      l14979 0FEE  
                                    l14899 0D1E                                      l16771 4E4C  
                                    l16915 51B8                                      l16907 5170  
                                    l15955 5EEC                                      l15883 9AE2  
                                    l16931 75E4                                      l17651 9026  
                                    l14989 1036                                      l16685 4AD2  
                                    l16677 4A8A                                      l15797 9CEC  
                                    l16917 51D6                                      l16909 518E  
                                    l16925 5230                                      l15869 9B1A  
                                    l15885 9AE8                                      l16941 7602  
                                    l16933 75EA                                      l17645 901C  
                                    l16775 4E60                                      l16759 4E02  
                                    l16695 4B1E                                      l16919 51F4  
                                    l15975 2764                                      l15959 5EF2  
                                    l16951 7620                                      l16943 7608  
                                    l16935 75F0                                      l17639 9012  
                                    l16769 4E46                                      l15993 2A36  
                                    l15985 29D8                                      l16953 7626  
                                    l16945 760E                                      l16937 75F6  
                                    l16929 75DE                                      l16881 9648  
                                    l16971 6B78                                      l16955 762C  
                                    l16947 7614                                      l16939 75FC  
                                    l16891 9676                                      l16981 6BA8  
                                    l16973 6B84                                      l16965 6B66  
                                    l16949 761A                                      l15999 2A46  
                                    l16983 6BB0                                      l16975 6B90  
                                    l16967 6B6C                                      l16991 6BC4  
                                    l16959 7632                                      l16985 6BB8  
                                    l16977 6B98                                      l16969 6B72  
                                    l16889 9662                                      l16899 5128  
                                    l16987 6BBE                                      l16979 6BA0  
                                    l16999 7476                              ___fltol@sign1 00C0  
                          __end_of___aldiv 5BDE                            __end_of___fladd 1610  
                                    ?_main 0001                          ?_key_process_down 0001  
                    __end_of_data_init_all A3B6                            __end_of___fldiv 2712  
                          __end_of___awdiv 7246                            __end_of___lbdiv 97C6  
                          __end_of___flneg 9B6E                                      STR_10 F3D1  
                                    STR_11 F3BD                                      STR_20 F3F9  
                                    STR_12 F3B8                                      STR_13 F374  
                                    STR_21 F3C7                                      STR_14 F374  
                                    STR_30 F3B3                                      STR_22 F395  
                                    STR_15 F374                                      STR_31 F3E5  
                                    STR_23 F38B                                      STR_24 F39F  
                                    STR_16 F39A                                      STR_32 F379  
                     ?_lcd_disp_unit_2nd_m 0001                                      STR_17 F374  
                                    STR_25 F390                                      STR_33 F382  
                                    STR_18 F3F4                                      STR_26 F3A4  
                                    STR_27 F3DB                                      STR_19 F3C2  
                                    STR_28 F3AE                            __end_of___awmod 7A72  
                                    STR_29 F3E0                            __end_of___flmul 1AB6  
                          __end_of___fltol 5E00                            __end_of___lldiv 7302  
                      ??_key_waite_release 0020                       _cal_diff_hight_level 309E  
                                    u12300 18EC                            ___awdiv@divisor 0062  
                     ?_lcd_disp_unit_1st_m 0001                                      u11414 6E1C  
                                    u11415 6E16                                      u11424 6E52  
                                    u12305 18E0                                      u11425 6E4C  
                                    u11700 12EA                                      u12190 268A  
                                    u11710 12EC                                      u13080 830E  
                                    u13400 60EA                                      _T2CON 000FCA  
                                    u12380 1A32                                      u13430 8A50  
                                    u12640 97F0                                      u12720 8ABE  
                                    u13440 8A86                                      u13360 66CE  
                                    u11690 12D2                                      u12730 8AF4  
               ___set_short_warn_value@t32 03CB                                      u13437 8A46  
                                    u12647 97E6                                      u12727 8AB4  
                                    u13447 8A7C                                      u12760 8B9A  
                                    u12737 8AEA                                      u12930 5D3A  
                                    u12770 8BC8                                      u12935 5D2E  
                                    u12767 8B90                                      u14608 4602  
                                    u13808 650E                                      u14609 4616  
                                    u12777 8BBE                                      u14618 4628  
                                    u13818 43D0                                      u14628 466C  
                                    u13828 43F6                                      u14629 4682  
                                    u13918 5BFC                                      u13838 442C  
                                    u13758 6434                                      u13919 5C10  
                                    u13759 6448                                      u14648 46E2  
                                    u13928 5C22                                      u13848 4456  
                                    u13768 645A                                      _FSR0H 000FEA  
                                    u14649 46F8                                      u13929 5C40  
                                    u13769 647E                                      u14658 4714  
                                    u14578 4582                                      u13938 5C52  
                                    u13858 447C                                      u13778 6490  
                                    u14930 2BA2                                      u14579 4596  
                                    u13779 64A8                                      u14588 45A8  
                                    u13948 5C80                                      u13868 44A2  
                                    u13788 64BA                                      u14860 2838  
                                    _FSR0L 000FE9                                      u14589 45C6  
                                    u13949 5C9E                                      u13789 64D2  
                                    u14598 45D8                                      u13958 5CB6  
                                    u13878 44E0                                      u13798 64E4  
                                    u14599 45F0                                      u13991 8526  
                                    u13879 44F6                                      u13799 64FC  
                                    u13888 451E                                      u13889 4534  
                                    u13898 4552                            __end_of___lwdiv 8704  
                                    u15891 7C5A                            __end_of___lwmod 909E  
                      ui_disp_menu_home@t8 0087                        ui_disp_menu_home@mf 0088  
                          ___awdiv@counter 0064                 ___set_short_warn_value@stp 03CF  
                                    _PORTB 000F81                                      _PORTC 000F82  
               __end_of_sample_call_cal_pr A1C6                 ui_disp_menu_warn_t_adj@buf 0077  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISG 000F98                                      _TRISH 000F99  
                       ??_key_process_down 0021                            ??_lcd_disp_logo 0020  
                             ?_key_polling 0001                        lcd_disp_dp_loc_0@dp 0020  
                      lcd_disp_dp_loc_1@dp 0020                        lcd_disp_dp_loc_2@dp 0020  
                             ?_key_process 0001                        lcd_disp_dp_loc_4@dp 0020  
                      lcd_disp_dp_loc_5@dp 0020                        lcd_disp_dp_loc_6@dp 0020  
                      ___lmul@multiplicand 0064                             __CFG_FCMEN$OFF 000000  
                          __end_of_crc_sum 7BB0                 ui_disp_menu_warn_v_adj@buf 008C  
                   _diffPrChipSampleFinish 00F9                 ui_disp_menu_warn_v_adj@fps 0092  
                       ___up_warn_type_adj 98E0                   ??___enter_menu_warn_type 0060  
                   ___set_short_diff_calib 2712                                      _glRtc 0133  
              sample_diff_pr_chip_fast@t16 0091                                      _st_Bj 002C  
                    __size_of___up_psw_adj 0016                             ?_m_mem_cpy_len 0060  
                     _lcd_disp_unit_2nd_m3 8316                             __CFG_T1DIG$OFF 000000  
                   ??_sample_variable_init 0020               ??___enter_menu_set_base_zero 0020  
                     _lcd_disp_unit_1st_m3 8E48                                      pclath 000FFA  
                                    tablat 000FF5               __end_of_sample_in_soc_adc_ch 4E64  
                          __end_of_rtc_set 7474                          ??_data_sys_cal_v1 0020  
                        ??_data_sys_cal_v2 0020       __size_of___sys_data_save_write_flash 0104  
                                    plusw1 000FE3                                      plusw2 000FDB  
                     _event_process_ticker A3DC                         crc_verify@expected 0074  
                      ?___up_warn_type_adj 0001                                      status 000FD8  
                     ___up_pose_size_adj@p 007C                               _adc_pressure 016C  
             __end_of___set_long_work_mode A188                            ??_iic_send_byte 0021  
                    ?___set_short_pr_calib 0001                      __end_of_data_sys_init 4A2A  
                          ___lbdiv@divisor 0020                         _diff_prCalibTabDef 0310  
                __end_of_key_waite_release 968C                            ___lbdiv@counter 0061  
                         ?_lcd_show_string 0073                           key_shift_loc@max 0063  
                         key_shift_loc@loc 0060                           key_shift_loc@min 0062  
                 ??___enter_menu_work_mode 0020                      ___set_short_pose_size 5E00  
                          ??_iic_waite_ack 0020            __size_of_ui_disp_menu_bzero_adj 002E  
                         __end_of_HexTable EF17               __size_of_key_adj_value_float 00DE  
                    _sample_call_in_ticker 972A               __size_of_key_adj_value_fixed 00F8  
                          __initialization 7888                          ??___down_home_adj 0020  
         __size_of_sample_call_cal_diff_pr 001E               at24c02_write_n_byte@pAt24c02 0066  
                             __end_of_hKel F0AB                               __end_of_hKcy F23F  
                    ___set_short_warn_type 83A0                          ??_cal_diff_p_to_h 0020  
                             __end_of_main 903C                       ___up_adj_work_mode@p 0060  
                            _prCalibTabDef 0400                 ___enter_menu_warn_value@t8 0082  
                         _glNoEventTimeOut 00FF               ??_ui_disp_menu_epr_calib_adj 0021  
        __end_of_calib_data_set_default_pr 43B4            __size_of___enter_menu_bar_scale 003C  
                     iic_received_byte@ret 0064                __size_of_calib_data_init_pr 012A  
                 ?_cal_additional_pressute 0001                          ??___down_pr_calib 0021  
             __size_of_sample_pr_chip_fast 016A                    sample_in_soc_adc_ch@t16 008A  
                   key_adj_value_float@t16 0078                              _userTicker_ms 0164  
                   key_adj_value_fixed@t16 0073                    ads1115_set_data_rate@dr 0062  
            ads1115_set_data_rate@pAds1115 0060                       ??___up_warn_type_adj 0020  
                    ??_lcd_disp_unit_2nd_m 0020                     key_adj_value_float@mfp 0075  
                   key_adj_value_float@loc 0077                     key_adj_value_fixed@loc 0070  
                    ?_cal_diff_hight_level 0001                      ??_lcd_disp_unit_1st_m 0020  
                                   ??_main 0021                __size_of___enter_menu_set_d 0068  
              __size_of___enter_menu_set_h 0068                              __activetblptr 000002  
                    ___enter_menu_password A308                 ___enter_menu_warn_type@fps 0063  
                             ___up_psw_adj A284                ??___enter_menu_poly_coeffic 0060  
                          ??_m_flash_erase 0021              lcd_disp_unit_temperature@show 0020  
              ??_lcd_disp_unit_temperature 0020                                 _at24c02Ch0 0180  
                               _at24c02Ch1 018B               __end_of_key_process_set_long 752C  
       __size_of___set_short_epr_ilp_scale 00B0                            ??_m_flash_write 0076  
                   ___set_long_work_mode@p 0060                       cal_diff_press@tabrow 03DE  
                         ?___x_arrange_str 0060           __size_of_calib_data_init_diff_pr 012A  
                   _sample_call_cal_in_soc A124                        ___up_warn_value_adj A26E  
              ui_disp_menu_calib_pr_adj@t8 0094                                     _ADCON1 000FC1  
          __size_of___set_short_warn_value 00C8                       ___set_long_base_zero 93E4  
         __size_of_ads1115_read_conversion 0046                         _sensorSimpleTsLong 00F1  
                                   _ADRESH 000FC4                                     _ADRESL 000FC3  
                    ?_lcd_disp_unit_2nd_m3 0001                           __end_of___exp_10 92D6  
                         ___awdiv@dividend 0060                       ___up_poly_coefic_adj A29A  
          __size_of_ui_disp_menu_pose_size 002A                      ?_lcd_disp_unit_1st_m3 0001  
                                   _LCDCON 000FA8            ___sys_data_save_write_flash@buf 00E1  
                                   _LCDSE0 000FA9                                     _LCDSE1 000FB6  
                                   _LCDSE2 000FB7                                     _LCDSE3 000FB8  
                                   _LCDSE4 000FB9                                     _LCDSE5 000FBA  
                                   _LCDREG 000FD2           ___set_short_epr_ilp_scale@gohome 03CA  
          ___sys_data_save_write_flash@ret 00DE            ___sys_data_save_write_flash@stp 00DF  
                ??_handler_interrupt_hight 0001                                     i1l2281 0090  
                                   i1l2380 A22C             ___set_short_poly_coefic@gohome 01FB  
                                   i2l2270 6EBE                                     i2l2271 6EC6  
                                   i2l2272 6ECE                                     i2l2273 6ED6  
                                   i2l2380 A248                                     i2l2276 6F08  
                           __CFG_WDTEN$OFF 000000                 ??_ui_disp_adj_xfixed_pt_dp 007C  
                                   _INTCON 000FF2                                     _TABLAT 000FF5  
             __end_of_at24c02_write_n_byte 5CF4                      ?_event_process_ticker 0001  
                 ?___enter_menu_warn_value 0001            __size_of___enter_menu_epr_calib 00A8  
              ?___exit_menu_to_home_unsave 0001                               m_mem_set@buf 0060  
                             m_mem_set@len 0063                ??_key_process_set_down_long 008A  
                            m_int8_2_hex@b 0062        __size_of___enter_menu_epr_ilp_scale 00BA  
             __size_of_sys_ticker_irq_hook 001C                           __end_of___xxtofl 41F0  
                         ??_lcd_disp_level 0021        __size_of_ui_disp_menu_epr_calib_adj 00C2  
                 ??___up_epr_ilp_scale_adj 0021                           __end_of_delay_ms A070  
                   __size_of___up_home_adj 0028                           __end_of_delay_us 9BDE  
                            ?_at24c02_init 0060             __size_of_sample_diff_pr_fliter 007E  
            __end_of_sample_diff_pr_fliter 849E                             __CFG_XINST$OFF 000000  
                        _prChipSampleCount 00F7                             cal_press@F7856 0123  
                    m_interp1_float_fast@f 00E0                      m_interp1_float_fast@i 00E4  
                  __end_of___x_sample_fifo 4CFE                      m_interp1_float_fast@x 00D4  
                    m_interp1_float_fast@y 00D8               ??___enter_menu_set_pose_size 0020  
                     ?___up_warn_value_adj 0001                           __end_of_lcd_init A39A  
                         __end_of_iic_stop 9CB6                                     ___flge 4728  
                                   ___lmul 877A                                  ??___aldiv 0020  
                                ??___fladd 00AC                                     ___wmul 9C4A  
              ui_disp_menu_warn_v_adj@type 0094                     ??_m_interp1_float_fast 00CC  
                                ??___fldiv 008F                  ui_disp_menu_poly_c_adj@t8 008E  
                                ??___awdiv 0020                                  ??___lbdiv 0021  
                                ??___flneg 0020                                  ??___awmod 0020  
                                ??___flmul 0076                                  ??___fltol 00BC  
                     __end_of_flashTestbuf F370                                  ??___lldiv 0020  
                  at24c02_write_n_byte@buf 0069                    at24c02_write_n_byte@len 006B  
                                ??___lwdiv 0021                                  ??___lwmod 0021  
               ??___enter_menu_calib_press 007D                     __size_of_key_shift_loc 0044  
                   ?___set_short_epr_param 0001                        lcd_disp_level@level 0072  
                                   clear_0 78C2                                     clear_1 78D4  
                                   clear_2 78E0                                     clear_3 78EE  
                                   clear_4 7900                                     clear_5 790C  
                                   clear_6 7918                              m_flash_read@i 0068  
                         ___awdiv@quotient 0066                            ___awmod@divisor 0062  
            ui_disp_menu_calib_diff_adj@t8 0094                       __size_of_lcd_show_dp 006C  
                     __end_of_lcd_disp_all 9ECA                        m_interp1_cal_p_t@pr 0092  
                      m_interp1_cal_p_v@pr 0095                            ___awmod@counter 0064  
                     __size_of_in_adc_init 0024                                  ??_crc_sum 0064  
                    i2_sys_ticker_irq_hook A238                       _LCDDigitalIndexTable EEB1  
                     at24c02_read_n_byte@i 0073                         ___up_epr_calib_adj 9CB6  
                       ui_disp_xfloat_pt@x 0085                    ??_in_adc_start_and_read 0020  
                 __size_of_ads1115_set_pga 0024                   __size_of_ads1115_set_mux 0024  
                         key_polling@ktemp 0066                           __end_of_soc_init A37C  
                     __end_of_iic_send_ack 963C                           _ads1115_read_reg 43B4  
                   _ui_disp_menu_bzero_adj 9F26                               __mediumconst ECB0  
                         __end_of_rtc_init 999E                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
        __size_of_iic_received_byte_if_ack 0020                       lcd_disp_get_code@chr 0060  
                 __size_of_lcd_disp_unit_t 0054                       lcd_disp_get_code@ret 0061  
                ?_iic_received_byte_if_ack 0001                            ??_m_mem_cpy_len 0020  
                                ??_rtc_set 0020                      ?___set_long_base_zero 0001  
                 ui_disp_start_cs600@F7719 01EE                      ?___up_poly_coefic_adj 0001  
        __end_of___set_short_epr_ilp_scale 75DC            __size_of___enter_menu_warn_type 0062  
                      ?___up_epr_calib_adj 0001                           ___up_density_adj A2C6  
                   ___enter_menu_bar_scale 99DC                 __end_of___up_adj_work_mode 9C4A  
                 ?_cal_diff_hight_to_vol_h 01FB                   ?_cal_diff_hight_to_vol_v 01FB  
                         ___lbdiv@dividend 0060                   ??_event_process_time_out 0020  
                     __end_of_m_int8_2_hex 9330                                 ___flge@ff1 00B8  
                               ___flge@ff2 00BC                       __end_of_lcd_show_chr 7D7C  
                             ___xxtofl@arg 006A                               _pcf8574Value 002D  
                             ___xxtofl@exp 0069                               ___xxtofl@val 0060  
                   ??___set_short_pr_calib 008A                          ?___down_dpr_calib 0001  
                         _lcd_disp_refresh 9100                                 __accesstop 0060  
                  __end_of__initialization 791E                  ui_disp_menu_warn_t_adj@t8 007D  
                     __end_of_m_flash_read 851C                          _sampBufDiffPr_D01 01DE  
                        _sampBufDiffPr_D23 01D6                                 ___flneg@f1 00A0  
                               ___exp_10@n 0020                  ui_disp_menu_warn_v_adj@t8 0095  
                 __size_of_m_int16_2_str_4 015E                 __end_of___set_long_density 96DC  
                ___enter_menu_poly_coeffic 96DC                 __size_of_key_waite_release 0050  
             __size_ofi2_rtc_alrm_irq_hook 0002                             ??_at24c02_init 0020  
                       ??___down_dpr_calib 0021                              ___rparam_used 000001  
                _lcd_disp_unit_temperature 8D16                                 ___fltol@f1 00B8  
                   ?___set_short_pose_size 0001                   sample_call_in_ticker@ret 00E6  
                   ?_sample_call_in_ticker 0001                     ?___set_short_warn_type 0001  
                    _handler_interrupt_low 0018                          _event_process_rtc 9F7E  
                    ??___up_warn_value_adj 0021         __size_of_ui_disp_menu_calib_pr_adj 00E0  
                            _p_prEepromObj 0027            __size_of___enter_menu_work_mode 0012  
                           iic_send_byte@i 0065         __size_of_ui_disp_menu_bar_full_adj 0030  
                           iic_send_byte@x 0064                       _inSocAdcSampleFinish 00F3  
                        _sampBufExPr0InSoc 01AE           __end_of_ui_disp_menu_density_adj 9F26  
                           __pcstackCOMRAM 0001                          _sampBufExPr1InSoc 01A6  
                   ___set_short_warn_value 6C24                         __size_of_cal_press 007C  
                     ??___up_epr_calib_adj 0021                               __pidataBANK0 A3F8  
                             __pidataBANK1 A3B6             __size_of_ui_disp_adj_xfloat_pt 025A  
                       ?_event_process_rtc 0001             __size_of_ui_disp_adj_xfixed_pt 00C8  
                   _ui_disp_menu_pose_size 9FD2              __end_of_ui_disp_adj_xfloat_pt 382A  
            __end_of_ui_disp_adj_xfixed_pt 6DB4               __size_of___up_diff_calib_adj 0038  
                  m_flash_write@writeTimes 0078                 ___enter_menu_epr_calib@t32 007E  
          __end_of_handler_interrupt_hight 6F44                      m_flash_write@pageAddr 007A  
               ___enter_menu_epr_calib@fps 0082                     ??_cal_diff_hight_level 0020  
              ___enter_menu_warn_value@t32 0083                     ___enter_menu_epr_calib 7738  
              ___enter_menu_warn_value@fps 0080                           ___lbdiv@quotient 0062  
                _key_process_set_down_long 6B5C                      ___x_sample_fliter@t32 008A  
                 _sample_diff_pr_chip_fast 3E50                     ?___enter_menu_password 0001  
                    ___x_sample_fliter@buf 007A                   ___enter_menu_set_density 88D6  
                    ___x_sample_fliter@len 007C                       _sample_in_soc_adc_ch 4CFE  
                    ___x_sample_fliter@max 0086                      ___x_sample_fliter@min 0088  
                      ??_event_process_rtc 0021               __end_of_ui_disp_clear_num_dp 938A  
                          _key_process_set 7BB0                              ___up_home_adj 9FFC  
                     ___set_long_work_mode A168                      _ads1115_init_all_chip 9A54  
                 ___x_sample_fliter@maxLoc 0084                    in_adc_start_and_read@ch 0066  
                 ___x_sample_fliter@minLoc 0085                         __size_of_lcd_bl_on 000A  
                       _rtcc_reg_wr_enable A3C4                     ??_lcd_disp_unit_2nd_m3 0020  
               calib_data_set_default_pr@i 006E                 calib_data_set_default_pr@j 006F  
                       __size_of_iic_start 0038                    key_adj_value_fixed@dloc 0071  
                        crc_append@message 006C                     ??_lcd_disp_unit_1st_m3 0020  
                     __size_of_key_polling 005C                          ?___down_pose_size 0001  
                     __size_of_key_process 00A0                          lcd_disp_logo@show 0020  
                       __size_of_m_mem_cpy 006C                __end_of_sample_all_power_on A35A  
                       __size_of_m_mem_set 0022                     ??_event_process_ticker 0021  
                            _key_shift_loc 985A                        ___x_sample_fifo@buf 007A  
                        lcd_show_string@t8 0075                        ___x_sample_fifo@len 007E  
                      ___x_sample_fifo@ret 0085                                 __pbssBANK0 00E7  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                               __pbssBANK5 0500                         ??___down_pose_size 0021  
                   ___enter_menu_set_d@t32 007F                     ___enter_menu_set_h@t32 007F  
                   ___enter_menu_set_d@fps 007D                                 _defalutRtc 01F4  
                      ?_rtcc_reg_wr_enable 0001                     ___enter_menu_set_h@fps 007D  
                 __size_of_sys_ticker_init 0010                          _pdiff_prEepromObj 0029  
                      ___x_sample_fliter@i 008E                      ui_disp_menu_h_adj@fps 008A  
            __size_of_sample_all_power_off 000E                  __end_of_event_process_rtc 9FA8  
                    calib_data_init_pr@t16 0077                 __end_of___up_base_zero_adj A2F2  
      __end_of_ui_disp_menu_calib_diff_adj 661E                _ui_disp_menu_calib_diff_adj 6522  
                      m_flash_write@tmpBuf 007F                            lcd_disp_level@i 0073  
                    calib_data_init_pr@buf 0079            __size_of___up_epr_ilp_scale_adj 0016  
                    calib_data_init_pr@ret 0076                __end_of_at24c02_read_n_byte 4728  
                        ___x_sample_fifo@i 0089                          ___x_sample_fifo@x 007C  
                         _diffPrChipSampCh 00FA                    _sample_call_cal_diff_pr A1C6  
                         ??_m_flash_unlock 0020                __size_of_lcd_disp_chr_loc_0 0090  
              __size_of_lcd_disp_chr_loc_1 0090                __size_of_lcd_disp_chr_loc_2 0090  
              __size_of_lcd_disp_chr_loc_3 0090                __size_of_lcd_disp_chr_loc_4 0090  
              __size_of_lcd_disp_chr_loc_5 0090                __size_of_lcd_disp_chr_loc_6 0090  
              __size_of_lcd_disp_chr_loc_7 0090                          ___x_sample_fliter 2DDA  
                 ui_disp_menu_warn_t_adj@p 007E                           ___up_home_adj@t8 0020  
                  lcd_disp_unit_2nd_m@show 0020                    ads1115_set_pga@pAds1115 0060  
           ___enter_menu_set_base_zero@t32 007F                           ?___x_sample_fifo 007A  
                     _key_process_set_long 7474         __end_of___enter_menu_epr_ilp_scale 73BC  
               ___enter_menu_epr_ilp_scale 7302             ___enter_menu_set_base_zero@fps 007D  
         __size_of___set_short_poly_coefic 0070                                    ?___flge 00B8  
                   ___enter_menu_warn_type 909E         __end_of_ui_disp_menu_epr_calib_adj 70CA  
               _ui_disp_menu_epr_calib_adj 7008                                    ?___lmul 0060  
                                  POSTINC0 000FEE                         ?___x_sample_fliter 007A  
              ?___set_long_bar_level_scale 0001          __end_of_ui_disp_menu_calib_pr_adj 68D8  
                                  ?___wmul 0062          __end_of_ui_disp_menu_bar_full_adj 9D4A  
             __size_of_ui_disp_start_cs600 0098                                  ?___exp_10 0060  
                           ___lmul@product 0068                     ?i2_sys_ticker_irq_hook 0001  
                               _crc_append 8F12                       ??_rtcc_reg_wr_enable 0020  
            __size_of_ui_disp_menu_pos_adj 008E                      ?_sample_in_soc_adc_ch 0001  
                        _ui_disp_menu_home 382A           __size_of_ui_disp_menu_poly_c_adj 0064  
                                  _ALRMRPT 000F5A                       _at24c02_write_n_byte 5BDE  
            __size_of_ui_disp_menu_psw_adj 002A             ___enter_menu_epr_ilp_scale@t32 007E  
                      ??___x_sample_fliter 007E                             ?___up_home_adj 0001  
           __size_of_ads1115_set_data_rate 0026             ___enter_menu_epr_ilp_scale@fps 0082  
                    ?___set_long_work_mode 0001                        ___mflot32_2_int32@i 0070  
                      ___mflot32_2_int32@x 006C              __end_of_ads1115_set_data_rate A04A  
                               _crc_verify 828A           __size_of_ui_disp_menu_warn_t_adj 0130  
         __size_of_ui_disp_menu_warn_v_adj 00E2                                    i1l13041 007E  
                            ?_ads1115_init 0060                         ?_ui_disp_menu_home 0001  
                                  i2l13015 6EF6        __size_of___exit_menu_to_home_unsave 003E  
                  ?___set_short_diff_calib 0001                            _data_sys_cal_v1 3A6E  
                          _data_sys_cal_v2 4E64                                 _lcdTwinkle 0034  
                                ?___xxtofl 0060                    _calib_data_init_diff_pr 5878  
                   ___enter_menu_work_mode A35A                                 _lcd_config 9A8E  
                   ??___set_long_base_zero 0021                          cal_diff_p_to_h@f1 00C8  
                        cal_diff_p_to_h@f2 00C4                                  ?_delay_ms 0064  
                                ?_delay_us 0060                                    _TBLPTRH 000FF7  
                   ??___up_poly_coefic_adj 0021                                    _TBLPTRL 000FF6  
                                  _TBLPTRU 000FF8                        _key_adj_value_float 68D8  
                      _key_adj_value_fixed 661E                    _ads1115_read_conversion 9814  
              __size_of_lcd_disp_level_bar 04D2               __size_of_rtcc_reg_wr_disable 000C  
                                  _RTCVALH 000F5D                                    _RTCVALL 000F5C  
                        __end_of_cal_press 8598                       ___int32_2_mflot32@mf 0079  
                               _m_floatAdj 0035                             ?_key_shift_loc 0060  
                           m_int8_2_hex@t8 0020                                  ?_lcd_init 0001  
                      ??_ui_disp_menu_home 0021                __size_of_lcd_show_string_l0 006E  
              __size_of_lcd_show_string_l1 0042                                  ?_iic_stop 0001  
         __end_of_ui_disp_adj_xfixed_pt_dp 6A8E                          ??_ads1115_set_pga 0020  
                        ??_ads1115_set_mux 0020                    lcd_disp_unit_1st_m@show 0020  
                          ___down_home_adj A1E4                     sample_pr_chip_fast@t16 008B  
          __size_of_event_process_time_out 0002                            _cal_diff_p_to_h 5F08  
                        __end_of_auchCRCHi EEB1                          __end_of_auchCRCLo EDB1  
                      _sample_pr_chip_fast 4A2A                     sample_pr_chip_fast@ret 008A  
                __size_of_key_process_down 015C                          ??_lcd_disp_unit_t 0020  
                       _sample_call_cal_pr A1A8                              ?_ui_disp_menu 0001  
                 _cal_pt100_temperature_in A332                   _cal_pt100_temperature_ex A31E  
                __end_of___x_sample_fliter 309E                            ___down_pr_calib A070  
                   ?_handler_interrupt_low 0001                at24c02_read_n_byte@pAt24c02 0068  
                        _ui_disp_xfloat_pt 5282                                    __Hparam 0000  
                        cal_diff_press@xin 03E0                                    __Lparam 0000  
                   m_interp1_float_fast@in 00C6                      ?_key_process_set_long 0001  
                           lcd_show_dp@loc 0071                       ?_key_adj_value_float 0075  
                     ?_key_adj_value_fixed 006E                             _prChipSampleCh 00F8  
                        __end_of_lcd_bl_on A3F2                                  ?_soc_init 0001  
                      ?_sample_call_cal_pr 0001                      __size_of_lcd_disp_all 0030  
                       ?_ui_disp_xfloat_pt 0076                  _cal_diff_hight_level$5884 00C4  
                _cal_diff_hight_level$5885 00C8                                  ?_rtc_init 0001  
               __end_of_ui_disp_menu_d_adj 9EF8                                    ___aldiv 5AC4  
                          __size_of___flge 0190                          __end_of_iic_start 9BA6  
                                  ___fladd 1168                          ??_m_int16_2_str_4 0020  
                       data_sys_cal_v1@stp 00C2                 __end_of_ui_disp_menu_h_adj 8A28  
                       data_sys_cal_v2@stp 00C2                                    ___fldiv 2352  
         __end_of___enter_menu_calib_press 621A                                    ___awdiv 7188  
                                  ___lbdiv 9778                                    ___flneg 9B36  
                          __size_of___lmul 0076                                    ___awmod 79D0  
                                  ___flmul 1610                      ui_disp_menu_pos_adj@p 0076  
                                  ___fltol 5CF4                          m_flash_erase@addr 0060  
                                  ___lldiv 7246                            __size_of___wmul 0036  
                  __end_of_key_process_set 7C4C                  __end_of_ui_disp_menu_home 3A6E  
                                  ___lwdiv 868C                                    ___lwmod 903C  
                        __end_of_m_mem_cpy 8BDC                          __end_of_m_mem_set A168  
                     ___up_warn_type_adj@p 0060        __end_of___sys_data_save_write_flash 631E  
              ___sys_data_save_write_flash 621A                                  _LCDDATA10 000F70  
                                _LCDDATA11 000F71                                  _LCDDATA12 000F72  
                                _LCDDATA20 000F7A                                  _LCDDATA13 000F73  
                                _LCDDATA21 000F7B                                  _LCDDATA14 000F74  
                                _LCDDATA22 000F7C                                  _LCDDATA15 000F75  
                                _LCDDATA23 000F7D                                  _LCDDATA16 000F76  
                                _LCDDATA17 000F77                                  _LCDDATA18 000F78  
                                _LCDDATA19 000F79                __size_of___up_pose_size_adj 0072  
                          __CFG_STVREN$OFF 000000                       ?_sample_pr_chip_fast 0001  
                               ??___exp_10 0020                                    _pcf8574 0118  
                                  __pcinit 7888                       m_flash_unlock@oldGIE 0020  
                    __size_of_iic_send_ack 0052                  ___set_short_pr_calib@adjv 009D  
                 at24c02_write_n_byte@addr 0068                                    __ramtop 1000  
                    ?_at24c02_write_n_byte 0066                                    __ptext0 8FDA  
                                  __ptext1 7C4C                                    __ptext2 9BDE  
                                  __ptext3 92D6                                    __ptext4 A36C  
                                  __ptext5 A37C                                    __ptext6 9960  
                                  __ptext7 73BC                                    __ptext8 A3C4  
                                  __ptext9 A3D0             __end_of___set_short_diff_calib 2A7C  
                      ??_ui_disp_xfloat_pt 0079                  ___set_short_diff_calib@t8 0095  
                                  _crc_sum 7B12                     ?_ads1115_init_all_chip 0001  
                           ??_ads1115_init 0020                        _sys_ticker_irq_hook A21C  
                      lcd_disp_unit_t@show 0020                          ___int32_2_mflot32 6010  
                 __size_of_lcd_set_com_seg 00C8                     ___up_epr_ilp_scale_adj A2B0  
                                _T1CONbits 000FCD                    ?_sample_call_cal_in_soc 0001  
                    ___mflot32_2_int32@ret 0071                        lcd_set_com_seg@bits 006F  
                 ___up_adj_bar_level_scale A2F2                                 ??___xxtofl 0064  
                     __end_of_at24c02_init 8614                        lcd_set_com_seg@show 0069  
               ___set_short_diff_calib@t16 009B                 ___set_short_diff_calib@t32 0097  
                         ___awmod@dividend 0060                                    _rtHight 00EB  
                       ?___int32_2_mflot32 006D                           ___aldiv@dividend 006C  
                    __size_of_m_int8_2_hex 005A                                  _LCDPSbits 000FAA  
                                  _rtLevel 00FE                 ___set_short_diff_calib@pra 0090  
                     m_interp1_cal_p_t@t16 0096                       m_interp1_cal_p_v@t16 0093  
                               ??_delay_ms 0020              ??___sys_data_save_write_flash 0021  
                               ??_delay_us 0020                      __size_of_lcd_show_chr 0098  
           ui_disp_menu_calib_diff_adj@buf 008A                       ??_sample_call_cal_pr 0020  
                                  _subMenu 0032                       m_interp1_cal_p_t@xin 007C  
                     m_interp1_cal_p_v@xin 007C                      __end_of_lcd_disp_logo 9E9A  
                                  _rtc_set 73BC          __size_of_ui_disp_menu_density_adj 002E  
                    __size_of_m_flash_read 007E                  ?_ui_disp_menu_density_adj 0001  
             ??_ui_disp_menu_work_mode_adj 0076           ads1115_start_conversion@pAds1115 006B  
        __size_of_ads1115_start_conversion 002A           __size_of_cal_additional_pressute 001C  
                               ??_lcd_init 0020                  ?_ads1115_start_conversion 006B  
                           __pintcode_body 6E7C                                 ??_iic_stop 0020  
                             _flashTestbuf F32F                       end_of_initialization 791E  
                          cal_press@tabrow 009B                        ??___int32_2_mflot32 0071  
            ___set_short_diff_calib@gohome 0094                             m_flash_write@i 0079  
                           m_flash_write@j 007E                    __size_of_key_process_up 00AE  
                      ui_disp_xfloat_pt@t8 0084                             ??_ui_disp_menu 0021  
        ui_disp_menu_epr_ilp_scale_adj@buf 008A                               _lcd_disp_all 9E9A  
            __size_of_sample_variable_init 0056                              __Lmediumconst ECB0  
                ??_sample_call_cal_diff_pr 0020                                    int_func 6E7C  
                     ?_sys_ticker_irq_hook 0001                    event_process_ticker@ret 01FF  
                         _inSocAdcSampleCh 00F4                  __end_of_ui_disp_xfloat_pt 53B8  
                  ___set_short_pr_calib@t8 0095                 __size_of_event_process_rtc 002A  
                   __size_of_data_init_all 000E                       _ui_disp_clear_num_dp 9330  
          calib_data_set_default_diff_pr@i 006F            calib_data_set_default_diff_pr@j 006E  
                          ___lldiv@divisor 0064                      __end_of_iic_send_byte 8864  
                    ??_key_adj_value_float 0021                      ??_key_adj_value_fixed 0021  
                          ___lldiv@counter 006C                   __end_of_ads1115_read_reg 4570  
                             _iic_send_ack 95EA               _cal_diff_hight_to_vol_v$5886 03CA  
                               _ticker_dly 9BDE                                 _rtPressure 00E7  
                               ??_soc_init 0020                    ??___set_short_epr_param 0021  
               __end_of_calib_data_init_pr 5878                          ??_sys_ticker_init 0020  
              __end_of_lcd_disp_unit_2nd_m 8E48                           ___aldiv@quotient 0076  
                               ??_rtc_init 0020                __end_of_lcd_disp_unit_1st_m 95EA  
                                  postdec1 000FE5                                    postdec2 000FDD  
                    __end_of_iic_waite_ack 94EC                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                 __end_of___up_density_adj A2DC                          _lcd_disp_dp_loc_0 9E3A  
                        _lcd_disp_dp_loc_1 9E0A                          _lcd_disp_dp_loc_2 9DDA  
                        _lcd_disp_dp_loc_4 9DAA                          _lcd_disp_dp_loc_5 9D7A  
                        _lcd_disp_dp_loc_6 9D4A                    m_interp1_cal_p_v@tabrow 007A  
         __size_of___enter_menu_warn_value 00BE                     _event_process_time_out A3F2  
               __end_of___enter_menu_set_d 8D16                 __end_of___enter_menu_set_h 8CAE  
                    ??_sample_pr_chip_fast 0021         __size_of___enter_menu_poly_coeffic 004E  
                  __end_of_data_sys_cal_v1 3C72                    __end_of_data_sys_cal_v2 4FC8  
                   ??_sample_in_soc_adc_ch 0021                          _lcd_disp_get_code 9162  
                 __size_of_lcd_show_string 006E                               _m_int8_2_hex 92D6  
       __size_of_lcd_disp_unit_temperature 0066                  __end_of___int32_2_mflot32 6116  
                              ?_crc_append 006C                            ??___up_home_adj 0020  
               ?_calib_data_set_default_pr 0001                               _lcd_show_chr 7CE4  
                         _defultSystemData F23F                     ??___set_long_work_mode 0020  
           __end_of_sample_call_cal_in_soc A146                   __end_of_lcd_disp_refresh 9162  
                       ?_lcd_disp_dp_loc_0 0001                         ?_lcd_disp_dp_loc_1 0001  
                       ?_lcd_disp_dp_loc_2 0001                         ?_lcd_disp_dp_loc_4 0001  
                       ?_lcd_disp_dp_loc_5 0001                         ?_lcd_disp_dp_loc_6 0001  
                  ?_ui_disp_menu_bzero_adj 0001                  ??_calib_data_init_diff_pr 0021  
      __size_of_ui_disp_menu_work_mode_adj 0076                __size_of___up_warn_type_adj 0040  
                             _m_flash_read 849E                         ?_lcd_disp_get_code 0001  
                              ?_crc_verify 006C                ui_disp_adj_xfixed_pt_dp@buf 007E  
              ui_disp_adj_xfixed_pt_dp@loc 007A                    ui_disp_adj_xfloat_pt@t8 0089  
                      i2_rtc_alrm_irq_hook A3F6                ui_disp_adj_xfixed_pt_dp@str 0076  
                ??_ads1115_read_conversion 0070                          _m_interp1_cal_p_t 1AB6  
                        _m_interp1_cal_p_v 0784                                ___fladd@grs 00B7  
                   __size_of_data_sys_init 0172                    __size_of_cal_diff_press 0122  
                               crc_sum@len 0066                    __end_of___down_home_adj A200  
                              ?_lcd_config 0001                    ?___enter_menu_bar_scale 0001  
                            ___xxtofl@sign 0068                    __end_of_cal_diff_p_to_h 6010  
           __size_of_in_adc_start_and_read 006A              __end_of_in_adc_start_and_read 8C46  
                       ?_m_interp1_cal_p_t 007A                         ?_m_interp1_cal_p_v 007A  
                          ??_key_shift_loc 0020                        ??_lcd_disp_dp_loc_0 0020  
                      ??_lcd_disp_dp_loc_1 0020                        ??_lcd_disp_dp_loc_2 0020  
                      ??_lcd_disp_dp_loc_4 0020                        ??_lcd_disp_dp_loc_5 0020  
                      ??_lcd_disp_dp_loc_6 0020               ___set_short_warn_type@gohome 01FB  
                    __end_of_m_flash_erase 93E4                       lcd_show_string_l0@t8 0075  
                     lcd_show_string_l1@t8 0075               ___enter_menu_calib_press@t32 0086  
                      ??_lcd_disp_get_code 0020                                ___fldiv@grs 009A  
             ___enter_menu_calib_press@col 0020                                ___fldiv@rem 0094  
              iic_received_byte_if_ack@ack 0066                  ads1115_write_reg@pAds1115 0066  
             ___enter_menu_calib_press@row 0083               ___enter_menu_calib_press@stp 0084  
                     _data_sys_cal_v1$5880 00CE                       _data_sys_cal_v1$5878 00C6  
                     _data_sys_cal_v1$5879 00CA                iic_received_byte_if_ack@ret 0067  
                     _data_sys_cal_v2$5881 00C6                       _data_sys_cal_v2$5882 00CA  
       __size_of_key_process_set_down_long 00C8                      __end_of_m_flash_write 54EE  
       __end_of___exit_menu_to_home_unsave 99DC                 ___exit_menu_to_home_unsave 999E  
                      ___up_diff_calib_adj 9AFE                    __end_of___down_pr_calib A094  
      __size_of___set_long_bar_level_scale 0040                    ??___set_short_pose_size 0021  
                      ??_m_interp1_cal_p_t 007F                        ??_m_interp1_cal_p_v 0080  
                  ??_sample_call_in_ticker 0021                                ___flmul@grs 007C  
                          iic_send_ack@ack 0020                      ??_sys_ticker_irq_hook 000F  
                        _lcd_disp_unit_mpa 8D7C                    ??___set_short_warn_type 00E3  
                 __size_of___x_arrange_str 005E                 __size_of___x_sample_fliter 02C4  
                     ?i2_rtc_alrm_irq_hook 0001                      ?_ui_disp_clear_num_dp 0001  
                        _ads1115_write_reg 6422                         ?_lcd_disp_unit_mpa 0001  
                  ?___set_short_warn_value 0001                    ___set_short_pose_size@p 03CB  
                   ??_key_process_set_long 0021                    ?_ui_disp_menu_pose_size 0001  
                             _globleBuffer 0500                    ___set_short_poly_coefic 8948  
               ??_sample_diff_pr_chip_fast 0021                         ?_ads1115_write_reg 0066  
               ??___enter_menu_set_density 007D                          _PrChipSampleTimer 015E  
                       ___up_adj_work_mode 9C14                  __end_of_lcd_disp_dp_loc_0 9E6A  
                __end_of_lcd_disp_dp_loc_1 9E3A                  __end_of_lcd_disp_dp_loc_2 9E0A  
                __end_of_lcd_disp_dp_loc_4 9DDA                  __end_of_lcd_disp_dp_loc_5 9DAA  
                __end_of_lcd_disp_dp_loc_6 9D7A                         iic_received_byte@i 0065  
         __size_of_cal_diff_hight_to_vol_h 0278           __size_of_cal_diff_hight_to_vol_v 06A8  
                  ?___enter_menu_epr_calib 0001                                _adc_inPt100 016E  
                __end_of_lcd_disp_get_code 91C0                              ??_lcd_show_dp 0021  
                              _adc_exPt100 016A                                _adjLocation 003F  
                    _sample_diff_pr_fliter 8420                       ?___up_diff_calib_adj 0001  
                            ??_in_adc_init 0020                    ??___enter_menu_password 0020  
                      ??_lcd_disp_unit_mpa 0020                 __size_of_ui_disp_menu_home 0244  
                           __end_of___flge 48B8                           ?_key_process_set 0001  
                               m_mem_cpy@d 0060                    ___set_short_warn_type@p 01FC  
                               m_mem_cpy@s 0062                             __end_of___lmul 87F0  
                   ??_at24c02_write_n_byte 0021          __size_of_ui_disp_adj_xfixed_pt_dp 00D8  
           __end_of_ui_disp_menu_bzero_adj 9F54                    _ui_disp_menu_poly_c_adj 8EAE  
                           __end_of___wmul 9C80                  ?_ui_disp_adj_xfixed_pt_dp 0076  
                __size_of___down_dpr_calib 0024                                 m_mem_set@x 0062  
            __size_of_m_interp1_float_fast 0428                         ___set_long_density 968C  
                      ??_ads1115_write_reg 0021               ??___enter_menu_epr_ilp_scale 0020  
                __end_of_m_interp1_cal_p_t 1F2A                  __end_of_m_interp1_cal_p_v 0C96  
                      ?___up_adj_work_mode 0001            __end_of_sample_call_cal_diff_pr A1E4  
        __end_of___enter_menu_poly_coeffic 972A                      _diffPrChipSampleCount 00FB  
                  _ui_disp_menu_warn_t_adj 561E                    _ui_disp_menu_warn_v_adj 6716  
                    at24c02_write_n_byte@i 006D          __end_of_lcd_disp_unit_temperature 8D7C  
                    _diffPrChipSampleTimer 0160                               cal_press@ret 009A  
                             cal_press@xin 009D             __end_of___enter_menu_bar_scale 9A18  
                            _data_init_all A3A8                         lcd_disp_get_code@i 0062  
                        crc_verify@message 006C                        start_initialization 7888  
                          key_shift_loc@t8 0020                        ?___set_long_density 0001  
                   ui_disp_start_cs600@buf 0076                     ui_disp_start_cs600@dly 007C  
           ___set_long_bar_level_scale@stp 00E5                   ?_handler_interrupt_hight 0001  
   __end_of_calib_data_set_default_diff_pr 3E50    __size_of_calib_data_set_default_diff_pr 01DE  
           _calib_data_set_default_diff_pr 3C72                            _LCDDigitalTable EEDC  
           ?___enter_menu_calib_press_diff 0020                          ??_lcd_set_com_seg 006A  
                       ads1115_set_pga@pga 0062                ?___enter_menu_set_base_zero 0001  
                   ___x_sample_fliter@loop 007D          __size_of___enter_menu_calib_press 0104  
                    __end_of_m_mem_cpy_len 9814                  __end_of_lcd_disp_unit_mpa 8DE2  
                ?___enter_menu_calib_press 0020                  ui_disp_adj_xfixed_pt_dp@x 0078  
                   lcd_disp_chr_loc_0@code 0020                 ?___set_short_epr_ilp_scale 0001  
                        m_flash_write@addr 006E                     lcd_disp_chr_loc_1@code 0020  
                   lcd_disp_chr_loc_2@code 0020          __end_of_key_process_set_down_long 6C24  
                   lcd_disp_chr_loc_3@code 0020                     lcd_disp_chr_loc_4@code 0020  
                      _ui_disp_start_cs600 7C4C                     lcd_disp_chr_loc_5@code 0020  
                   lcd_disp_chr_loc_6@code 0020                     lcd_disp_chr_loc_7@code 0020  
                         _key_process_down 5126                       ??___up_adj_work_mode 0020  
                __end_of_ads1115_write_reg 6522                __end_of___up_warn_value_adj A284  
          __end_of_calib_data_init_diff_pr 59A2                         ads1115_set_mux@mux 0062  
                      __size_of_crc_append 0064             __end_of___set_short_warn_value 6CEC  
                    ??i2_rtc_alrm_irq_hook 0001                 __size_of_ui_disp_xfloat_pt 0136  
           __end_of_ui_disp_menu_pose_size 9FFC                          ___mflot32_2_int32 77E0  
            __size_of___set_short_pr_calib 035E                   in_adc_start_and_read@ret 0067  
     ___enter_menu_epr_ilp_scale@__subMenu 007D                       __end_of_ads1115_init 79D0  
                            _data_sys_init 48B8                    ?___enter_menu_warn_type 0001  
                  lcd_disp_level_bar@__bar 0070                        __size_of_crc_verify 008C  
                     ??___set_long_density 0021                         ?___mflot32_2_int32 006C  
           __end_of___enter_menu_epr_calib 77E0                           lcd_show_chr@code 0072  
                 ads1115_read_reg@pAds1115 0068                                ?_ticker_dly 0060  
                      __size_of_lcd_config 0038                           data_sys_cal_v1@f 00D6  
                         data_sys_cal_v2@d 00D2                           data_sys_cal_v1@h 00D2  
                         data_sys_cal_v2@f 00CE                           data_sys_cal_v1@r 00DA  
                __size_of___down_pose_size 0030                       key_waite_release@key 006A  
                      _rtcc_reg_wr_disable A3D0                                   ??___flge 00C0  
                  ??i2_sys_ticker_irq_hook 0001                      ??___up_diff_calib_adj 0021  
                                 ??___lmul 0020                                   ??___wmul 0021  
              ?_ui_disp_menu_epr_calib_adj 0001                __size_of___up_epr_calib_adj 0034  
                       m_interp1_cal_p_t@i 0098                         m_interp1_cal_p_v@i 0099  
                       m_interp1_cal_p_t@x 008E                         m_interp1_cal_p_t@y 008A  
                       m_interp1_cal_p_v@x 008F                         m_interp1_cal_p_v@y 008B  
                              __pdataBANK0 00FF                                __pdataBANK1 01EE  
                 key_adj_value_fixed@value 006E                           __CFG_LPT1OSC$OFF 000000  
                     ?_ui_disp_start_cs600 0001                           ?_data_sys_cal_v1 00C2  
                         ?_data_sys_cal_v2 00C2                        ??___mflot32_2_int32 0020  
               __size_of___int32_2_mflot32 0106                      __size_of_at24c02_init 007C  
                  __size_of_lcd_disp_level 0058                      _ui_disp_adj_xfloat_pt 35D0  
                    _ui_disp_adj_xfixed_pt 6CEC                         ___up_base_zero_adj A2DC  
                  ?___enter_menu_work_mode 0001               __end_of_sample_all_power_off A3A8  
                     __end_of_ui_disp_menu 7738                             ?_data_init_all 0001  
                          _ads1115_set_pga A0DC                            _ads1115_set_mux A100  
            __size_of_cal_diff_hight_level 02BA                   _iic_received_byte_if_ack A188  
                                ___fladd@a 00A8                                  ___fladd@b 00A4  
                        __size_of___exp_10 005C                                _ALRMCFGbits 000F5B  
                      __end_of_lcd_show_dp 8B70                         lcd_show_string@str 0073  
                                ___fldiv@a 008B                                  ___fldiv@b 0087  
                      __end_of_in_adc_init A0DC                              ??_key_polling 0020  
                         _sampBufDiffPr_S1 01CE                                  _pAdjValue 0162  
                         data_sys_init@t16 00DE                              ??_key_process 0021  
                                ___flmul@a 0072                                  ___flmul@b 006E  
                              __pbssCOMRAM 0021                           data_sys_init@buf 00E3  
                          _lcd_disp_unit_t 9542                          ??_lcd_show_string 0021  
                         data_sys_init@ret 00E0                           ?___down_home_adj 0001  
               ___enter_menu_bar_scale@fps 0062                           data_sys_init@stp 00E1  
                  ui_disp_menu_pos_adj@buf 0078                              __pcstackBANK0 0060  
                            __pcstackBANK1 01FB                              __pcstackBANK3 03CA  
                         ?_cal_diff_p_to_h 00C2                                  _adc_iPrEx 0156  
                      ?___up_base_zero_adj 0001         __end_of_ui_disp_menu_work_mode_adj 877A  
               _ui_disp_menu_work_mode_adj 8704                       ?_rtcc_reg_wr_disable 0001  
                  _cal_additional_pressute A200                        _inSocAdcSampleCount 00F5  
                             _stRTCCFGbits 000F5F                             _sensorSimpleEn 00F2  
               ??_cal_pt100_temperature_in 0020                 ??_cal_pt100_temperature_ex 0020  
        ___enter_menu_warn_value@__subMenu 007F                   key_waite_release@timeout 0068  
                      _inSocAdcSampleTimer 015C                          __size_of___xxtofl 01CE  
             ___set_long_bar_level_scale@p 00E3                          __size_of_delay_ms 0026  
                        __size_of_delay_us 0038              __size_of_lcd_disp_unit_2nd_m3 008A  
                      __CFG_CCP2MX$DEFAULT 000000                           ?___down_pr_calib 0001  
                 lcd_disp_unit_2nd_m3@show 0020               __end_of_ui_disp_menu_pos_adj 828A  
                           _key_process_up 75DC              __size_of_lcd_disp_unit_1st_m3 0066  
      sample_function_enable_fi_in_rtc@ret 00E6                  __end_of___mflot32_2_int32 7888  
                  ??_handler_interrupt_low 000F               __end_of_ui_disp_menu_psw_adj 9FD2  
                      ___x_arrange_str@len 0062                            _m_int16_2_str_4 4FC8  
                      ___x_arrange_str@str 0060                          __size_of_lcd_init 000E  
            __size_of_event_process_ticker 000C                                  _cal_press 851C  
                   ??_ui_disp_clear_num_dp 0021                          __size_of_iic_stop 0036  
           __end_of___enter_menu_warn_type 9100                  ??___set_short_poly_coefic 0021  
               __end_of_lcd_disp_chr_loc_0 81FC                 __end_of_lcd_disp_chr_loc_1 816C  
               __end_of_lcd_disp_chr_loc_2 80DC                 __end_of_lcd_disp_chr_loc_3 804C  
               __end_of_lcd_disp_chr_loc_4 7FBC                 __end_of_lcd_disp_chr_loc_5 7F2C  
               __end_of_lcd_disp_chr_loc_6 7E9C                 __end_of_lcd_disp_chr_loc_7 7E0C  
                           ?_data_sys_init 0001         __end_of___set_long_bar_level_scale 9960  
               ___set_long_bar_level_scale 9920                                  _auchCRCHi EDB1  
                                _auchCRCLo ECB1               __size_of_sample_all_power_on 0014  
                        ___x_arrange_str@i 0020                    ads1115_set_mux@pAds1115 0060  
              ?___enter_menu_set_pose_size 0001                               _at24c02_init 8598  
                         ___lwdiv@dividend 0062              ads1115_read_conversion@result 0071  
             ___enter_menu_set_density@t32 0081                       ??___up_base_zero_adj 0021  
                   ?_sample_diff_pr_fliter 008F               ___enter_menu_set_density@fps 007F  
               __size_of_lcd_disp_dp_loc_0 0030                 __size_of_lcd_disp_dp_loc_1 0030  
               __size_of_lcd_disp_dp_loc_2 0030                 __size_of_lcd_disp_dp_loc_4 0030  
               __size_of_lcd_disp_dp_loc_5 0030                 __size_of_lcd_disp_dp_loc_6 0030  
                ??_ui_disp_menu_poly_c_adj 0021                                  __pintcode 0008  
               __size_of_lcd_disp_get_code 005E                              __pmediumconst ECB0  
                  ___enter_menu_warn_value 70CA                          ??___x_arrange_str 0020  
                                 ?___aldiv 006C                                   ?___fladd 00A4  
                                 ?___fldiv 0087                                   ?___awdiv 0060  
                                __ptext100 81FC                                  __ptext101 89B8  
                                 ?___lbdiv 0020                                  __ptext110 9542  
                                __ptext102 9ECA                                   ?___flneg 00A0  
                                __ptext111 8D7C                                  __ptext103 8EAE  
                                __ptext200 8F12                                  __ptext120 6F44  
                                __ptext112 8316                                  __ptext104 382A  
                                __ptext201 7B12                                  __ptext121 7008  
                                __ptext113 8DE2                                  __ptext105 5282  
                                __ptext210 9C80                                  __ptext202 3C72  
                                __ptext130 9330                                  __ptext122 9EF8  
                                __ptext114 8E48                                  __ptext106 989E  
                                __ptext211 A188                                  __ptext203 9C4A  
                                __ptext131 8A96                                  __ptext123 67F8  
                                __ptext115 9596                                  __ptext107 8A28  
                                __ptext220 A3F4                                  __ptext212 95EA  
                                __ptext204 5BDE                                  __ptext140 80DC  
                                __ptext132 7CE4                                  __ptext124 6522  
                                __ptext116 943C                                  __ptext108 868C  
                                __ptext213 8F76                                  __ptext205 A04A  
                                __ptext141 816C                                  __ptext133 9162  
                                __ptext125 9778                                  __ptext117 0C96  
                                __ptext109 8D16                                  __ptext222 A238  
                                __ptext214 9BA6                                  __ptext206 4570  
                                __ptext150 4FC8                                  __ptext142 8B04  
                                __ptext134 7D7C                                  __ptext126 9F26  
                                __ptext118 6010                                  __ptext223 A3F6  
                                __ptext215 8598                                  __ptext207 9B6E  
                                __ptext151 79D0                                  __ptext143 9D4A  
                                __ptext135 7E0C                                  __ptext127 35D0  
                                __ptext119 7246                                  __ptext224 0000  
                                __ptext216 9A54                                  __ptext208 87F0  
                                __ptext160 A1A8                                  __ptext152 9100  
                                __ptext144 9D7A                                  __ptext136 7E9C  
                                __ptext128 9D1A                 ??___up_adj_bar_level_scale 0021  
                                __ptext217 792C                                  __ptext209 9494  
                                __ptext161 A31E                                  __ptext153 91C0  
                                __ptext145 9DAA                                  __ptext137 7F2C  
                                __ptext129 69B6                                  __ptext170 1AB6  
                                __ptext162 851C                                  __ptext154 9E6A  
                                __ptext146 9DDA                                  __ptext138 7FBC  
                                __ptext219 A21C                                  __ptext171 877A  
                                __ptext163 A124                                  __ptext155 6DB4  
                                __ptext147 9E0A                                  __ptext139 804C  
                                __ptext180 1168                                  __ptext172 5AC4  
                                __ptext164 A200                                  __ptext156 7188  
                                __ptext148 9E3A                                  __ptext181 A346  
                                __ptext173 5F08                                  __ptext165 A1C6  
                                __ptext157 9E9A                                  __ptext149 8B70  
                                __ptext190 3A6E                                  __ptext182 A39A  
                                __ptext174 00DC                                  __ptext166 A332  
                                __ptext158 6A8E                                  __ptext191 4022  
                                __ptext183 A3A8                                  __ptext175 3358  
                                __ptext167 59A2                                  __ptext159 94EC  
                                __ptext192 5CF4                                  __ptext184 48B8  
                                __ptext176 1F2A                                  __ptext168 A146  
                                __ptext193 1610                                  __ptext185 53B8  
                                __ptext177 9B36                                  __ptext169 0784  
                                __ptext194 2352                                  __ptext186 849E  
                                __ptext178 309E                                  __ptext195 574E  
                                __ptext187 938A                                  __ptext179 4728  
                                 ?___awmod 0060                                  __ptext196 41F0  
                                __ptext188 A254                                  __ptext197 5878  
                                __ptext189 4E64                                  __ptext198 828A  
                                __ptext199 97C6                                   ?___flmul 006E  
                                 ?___fltol 00B8                  ??_ui_disp_menu_warn_t_adj 0076  
                                 ?___lldiv 0060                    ___mflot32_2_int32@F7710 013E  
                ??_ui_disp_menu_warn_v_adj 008A                    ??_ads1115_init_all_chip 0020  
                    ??_ui_disp_start_cs600 0021                                   ?___lwdiv 0062  
                                 ?___lwmod 0069                          __size_of_soc_init 0010  
               ?_ui_disp_menu_calib_pr_adj 0001             __end_of___enter_menu_work_mode A36C  
                  ?___up_epr_ilp_scale_adj 0001               __size_of_at24c02_read_n_byte 01B8  
                                _lcd_bl_on A3E8                 ?_ui_disp_menu_bar_full_adj 0001  
                              __pintcodelo 0018                          __size_of_rtc_init 003E  
         __end_of_ads1115_start_conversion 9F7E                                  _dlyTicker 015A  
               __size_of_m_interp1_cal_p_t 0474                 __size_of_m_interp1_cal_p_v 0512  
              __size_of_rtcc_reg_wr_enable 000C                                  _iic_start 9B6E  
                                 ?_crc_sum 0060                        ___int32_2_mflot32@x 006D  
                 __size_of___x_sample_fifo 016A                    __end_of_LCDDigitalTable EF06  
                cal_diff_hight_to_vol_h@f1 03D6                  cal_diff_hight_to_vol_h@f2 03CE  
                cal_diff_hight_to_vol_h@v1 03D2                  cal_diff_hight_to_vol_h@v2 03CA  
                            ?___up_psw_adj 0001                            at24c02_init@slv 0062  
                                _m_mem_cpy 8B70                  cal_diff_hight_to_vol_v@f1 03DA  
                                _m_mem_set A146                  cal_diff_hight_to_vol_v@v1 03CE  
                cal_diff_hight_to_vol_v@v2 03D2               cal_additional_pressute@index 0020  
                ___set_short_pose_size@t32 03CD                 __end_of_lcd_disp_level_bar 1168  
                           _cal_diff_press 59A2                  ___set_short_pose_size@stp 03D1  
                       _ui_disp_menu_d_adj 9ECA                      ??_rtcc_reg_wr_disable 0020  
                    _ads1115_set_data_rate A024                 __end_of_lcd_show_string_l0 8A96  
               __end_of_lcd_show_string_l1 98E0                         _ui_disp_menu_h_adj 89B8  
                              _PADCFG1bits 000F54                           m_flash_erase@t32 0064  
                                 ?_rtc_set 0060                      lcd_disp_unit_mpa@show 0020  
             ___set_short_pr_calib@saveFlg 0096                     __end_of_key_process_up 768A  
                      __size_of_ticker_dly 0036                           ___lwdiv@quotient 0067  
                     ads1115_init@pAds1115 0060              __size_of___set_long_base_zero 0058  
                                 _LCDDATA0 000FBB                                   _LCDDATA1 000FBC  
                                 _LCDDATA2 000FBD                                   _LCDDATA3 000FBE  
                                 _LCDDATA4 000FBF                                   _LCDDATA5 000F6B  
                                 _LCDDATA6 000F6C                                   _LCDDATA7 000F6D  
                                 _LCDDATA8 000F6E                                   _LCDDATA9 000F6F  
            __size_of___up_poly_coefic_adj 0016                 __size_of_lcd_disp_unit_mpa 0066  
                    lcd_set_com_seg@offset 006E                  ___set_short_poly_coefic@p 01FC  
                      __end_of_key_polling 927A                       ___mflot32_2_int32@mf 0075  
                      __end_of_key_process 7B12                         lcd_set_com_seg@com 006D  
                          _sys_ticker_init A37C                         lcd_set_com_seg@seg 0068  
                      ?_ui_disp_menu_d_adj 0001                        ?_ui_disp_menu_h_adj 0001  
                                _sampBufPr 01B6                            ___aldiv@divisor 0070  
               __size_of_ads1115_write_reg 0100                   __end_of_defultSystemData F32F  
                               ?_cal_press 0001                           m_flash_read@addr 0060  
                          ___aldiv@counter 0074                             ___wmul@product 0066  
             ??___exit_menu_to_home_unsave 0020           ??_ui_disp_menu_epr_ilp_scale_adj 0021  
          ?_ui_disp_menu_epr_ilp_scale_adj 0001                                  delay_us@i 0062  
                        _iic_received_byte 8F76                             m_mem_cpy_len@d 0060  
                           m_mem_cpy_len@s 0062                                   _IPR1bits 000F9F  
                                 _PIE1bits 000F9D                                   _IPR3bits 000FA5  
                                 _PIE3bits 000FA3           __end_of_sample_diff_pr_chip_fast 4022  
            ui_disp_adj_xfixed_pt_dp@dploc 007B           __end_of___enter_menu_set_density 8948  
            ___set_short_warn_value@gohome 03CA                                _dlyTickerEn 002B  
                  _cal_diff_hight_to_vol_h 3358                    _cal_diff_hight_to_vol_v 00DC  
                       ?_iic_received_byte 0001                                   _PIR1bits 000F9E  
                  ?_event_process_time_out 0001                                   _PIR3bits 000FA4  
                       cal_diff_p_to_h@xin 00C2                          ?_ads1115_read_reg 0068  
                         crc_sum@usDataLen 0062                                   _RCONbits 000FD0  
                         __CFG_WDTPS$32768 000000                 __end_of___up_pose_size_adj 88D6  
                 lcd_disp_unit_1st_m3@show 0020                    __end_of_ads1115_set_pga A100  
                  __end_of_ads1115_set_mux A124             __end_of___up_epr_ilp_scale_adj A2C6  
                                _stSysData 0200             __size_of___set_short_epr_param 0130  
                              _lcd_show_dp 8B04                         ??_ads1115_read_reg 006B  
            __end_of___set_short_epr_param 561E                                _in_adc_init A0B8  
                    ___int32_2_mflot32@t32 0075                          ?___up_density_adj 0001  
                   ?_ui_disp_adj_xfloat_pt 0076                     ?_ui_disp_adj_xfixed_pt 0076  
                 sample_diff_pr_fliter@xin 008F                     ui_disp_adj_xfloat_pt@x 0087  
                     ??_ui_disp_menu_d_adj 0021                           ___down_dpr_calib A094  
                          ??_data_init_all 0021                               ??_crc_append 0070  
                  __end_of_lcd_disp_unit_t 9596                                 ?_lcd_bl_on 0001  
                     ??_ui_disp_menu_h_adj 0021                        ??_iic_received_byte 0020  
                   ui_disp_adj_xfixed_pt@x 0078             ___enter_menu_set_pose_size@fps 0060  
             __end_of_sample_variable_init 9542        __size_of___enter_menu_set_base_zero 0078  
                ___set_short_warn_value@t8 03D1                ??_calib_data_set_default_pr 0068  
                   __end_of_cal_diff_press 5AC4                            m_int8_2_hex@str 0060  
                             _rtExPressure 012B                                 ?_iic_start 0001  
          __end_of___set_short_poly_coefic 89B8                         ??___up_density_adj 0021  
                               _ADCON0bits 000FC2                             ??___up_psw_adj 0021  
                               _ADCON2bits 000FC0                          ___wmul@multiplier 0062  
                            _pAds1115PrObj 0025                          ?_lcd_disp_refresh 0001  
                  __size_of_m_flash_unlock 001A                               ??_crc_verify 0070  
                               ?_m_mem_cpy 0060                                 ?_m_mem_set 0060  
                ??_cal_additional_pressute 0020                           m_int16_2_str_4@x 006A  
                               rtc_set@rtc 0060                                 rtc_set@stp 0062  
            ui_disp_menu_work_mode_adj@buf 0077                               ??_lcd_config 0020  
                       _calib_data_init_pr 574E                         ??_lcd_disp_refresh 0020  
                 ___set_long_base_zero@t32 03CA                   ___set_long_base_zero@stp 03CE  
                  __end_of_m_int16_2_str_4 5126            __end_of_ui_disp_menu_poly_c_adj 8F12  
                ___set_short_warn_type@stp 01FE                __size_of_sample_call_cal_pr 001E  
                       ___enter_menu_set_d 8CAE                         ___enter_menu_set_h 8C46  
                          ?_key_process_up 0001                     ___set_long_density@t32 03CA  
          __end_of_ui_disp_menu_warn_t_adj 574E                                   _HexTable EF06  
          __end_of_ui_disp_menu_warn_v_adj 67F8            ads1115_read_conversion@pAds1115 006E  
 __end_of_sample_function_enable_fi_in_rtc 6B5C  __size_of_sample_function_enable_fi_in_rtc 00CE  
       ??_sample_function_enable_fi_in_rtc 0021          ?_sample_function_enable_fi_in_rtc 0001  
         _sample_function_enable_fi_in_rtc 6A8E                          ___lmul@multiplier 0060  
                              _INTCON2bits 000FF1                           crc_verify@crccal 0072  
                   ___set_long_density@stp 03CE                                  copy_data0 789C  
                    __size_of_ads1115_init 00A4                        ?_calib_data_init_pr 0001  
                  at24c02_read_n_byte@addr 006A                 __size_of___mflot32_2_int32 00A8  
                          ??_data_sys_init 0021                __end_of_key_adj_value_float 69B6  
              __end_of_key_adj_value_fixed 6716                      ui_disp_start_cs600@t8 007D  
                __end_of_iic_received_byte 8FDA                        ?___enter_menu_set_d 0001  
                      ?___enter_menu_set_h 0001                           m_flash_write@t16 0081  
           __size_of___set_short_pose_size 0108                         __end_of_crc_append 8F76  
            __end_of___set_short_pose_size 5F08                           m_flash_write@buf 0072  
                     _sample_all_power_off A39A             __size_of_sample_call_in_ticker 004E  
                         m_flash_write@len 0074                          _rtc_alrm_irq_hook A3F4  
                               _EECON1bits 000FA6              __end_of_sample_call_in_ticker 9778  
         ___enter_menu_epr_calib@__subMenu 007D             __size_of___set_short_warn_type 0080  
           __end_of_event_process_time_out A3F4              __end_of___set_short_warn_type 8420  
                ??___enter_menu_warn_value 007D                __end_of_sample_pr_chip_fast 4B94  
                                 __Hrparam 0000                    m_interp1_float_fast@len 00CA  
                    ui_disp_xfloat_pt@line 0078                    m_interp1_float_fast@tab 00C4  
                       __end_of_crc_verify 8316                            lcd_show_dp@show 0070  
                       ?_rtc_alrm_irq_hook 0001                            lcd_show_chr@chr 0070  
                          lcd_show_chr@loc 0071                        key_waite_release@t8 0020  
                   lcd_disp_level_bar@show 0020                                   __Lrparam 0000  
                           _rtDiffPressure 0152                           ___down_pose_size 9CEA  
                          _sampBufPt100ExA 01C6                            _sampBufPt100ExB 01BE  
                          _sampBufBatInSoc 019E                         __end_of_lcd_config 9AC6  
                    __size_of_ui_disp_menu 00AE                       event_process_rtc@ret 01FF  
                   __size_of_lcd_disp_logo 0030                       ??_calib_data_init_pr 0021  
                         __size_of___aldiv 011A                 __end_of___up_warn_type_adj 9920  
                         __size_of___fladd 04A8                           __size_of___fldiv 03C0  
                         __size_of___awdiv 00BE                             _lcd_disp_level 943C  
                         __size_of___lbdiv 004E                           __size_of___flneg 0038  
                         __size_of___awmod 00A2                           __size_of___flmul 04A6  
                         __size_of___fltol 010C                           __size_of___lldiv 00BC  
                                 ___exp_10 927A             __size_of___enter_menu_password 0016  
                         __size_of___lwdiv 0078              ___enter_menu_poly_coeffic@fps 0063  
                      ??_rtc_alrm_irq_hook 000F                           __size_of___lwmod 0062  
            __end_of___enter_menu_password A31E                   __end_of_key_process_down 5282  
                                 _adc_iRef 0166                       _ui_disp_menu_pos_adj 81FC  
                          _lcd_set_com_seg 6DB4                                   _adc_ibat 0168  
                     ??___enter_menu_set_d 0020                       ??___enter_menu_set_h 0020  
                             _ads1115Chip0 0170                               _ads1115Chip1 02F0  
                          ?_cal_diff_press 0001                                   _adjValue 0039  
                            _sensorPowerOn 002F              __size_of_sample_in_soc_adc_ch 0166  
                     _ui_disp_menu_psw_adj 9FA8                      __end_of___up_home_adj A024  
            ___set_short_epr_ilp_scale@t32 03CB               __size_of_lcd_disp_unit_2nd_m 0066  
             __size_of_lcd_disp_unit_1st_m 0054                                   _calibCol 0030  
                         __size_of_crc_sum 009E              ___set_short_epr_ilp_scale@stp 03CF  
                                 _calibRow 0031              __size_of___set_long_work_mode 0020  
                 _ui_disp_menu_density_adj 9EF8                     ?_ads1115_set_data_rate 0060  
                             _ads1115_init 792C                             key_process@key 03D5  
                                 ___xxtofl 4022                   _ads1115_start_conversion 9F54  
                              _key_polling 921E          ___enter_menu_calib_press_diff@t32 0086  
                  __end_of_sys_ticker_init A38C                                _key_process 7A72  
                            crc_append@crc 0072          ___enter_menu_calib_press_diff@col 0020  
         __end_of_cal_pt100_temperature_in A346           __end_of_cal_pt100_temperature_ex A332  
                                 _delay_ms A04A          ___enter_menu_calib_press_diff@row 0083  
        ___enter_menu_calib_press_diff@stp 0084                                   _delay_us 9BA6  
                   __size_of_iic_send_byte 0074                                   _glTicker 013A  
                          ___lwdiv@divisor 0064                                   _glbEvent 002E  
                          _sampBufRefInSoc 0196                            _rtTemperatureIn 014A  
                          _rtTemperatureEx 0146                            ___lwdiv@counter 0066  
              __end_of_sys_ticker_irq_hook A238        __size_of___enter_menu_set_pose_size 003C  
                                 __ptext10 A38C                                   __ptext11 9A8E  
                                 __ptext20 9AC6                                   __ptext12 A3E8  
                                 __ptext21 8864                                   __ptext13 7A72  
                                 __ptext30 9C14                                   __ptext22 A29A  
                                 __ptext14 963C                                   __ptext31 A2F2  
                                 __ptext23 9FFC                                   __ptext15 921E  
                                 __ptext40 6B5C                                   __ptext32 661E  
                                 __ptext24 A2B0                                   __ptext16 75DC  
                                 __ptext41 A35A                                   __ptext33 903C  
                                 __ptext25 9CB6                                   __ptext17 A26E  
                                 __ptext50 2A7C                                   __ptext42 88D6  
                                 __ptext34 927A                                   __ptext26 9AFE  
                                 __ptext18 98E0                                   __ptext51 6116  
                                 __ptext43 8614                                   __ptext35 7474  
                                 __ptext27 A2C6                                   __ptext19 A284  
                                 __ptext60 752C                                   __ptext52 5E00  
                                 __ptext44 99DC                                   __ptext36 A168  
                                 __ptext28 A2DC                                   __ptext61 621A  
                                 __ptext53 9A18                                   __ptext45 7BB0  
                                 __ptext37 968C                                   __ptext29 68D8  
                                 __ptext70 9CEA                                   __ptext62 7302  
                                 __ptext54 8C46                                   __ptext46 6C24  
                                 __ptext38 93E4                                   __ptext71 A1E4  
                                 __ptext63 2712                                   __ptext55 8CAE  
                                 __ptext47 70CA                                   __ptext39 9920  
                                 __ptext80 A0B8                                   __ptext72 A094  
                                 __ptext64 77E0                                   __ptext56 8948  
                                 __ptext48 83A0                                   __ptext81 3E50  
                                 __ptext73 985A                                   __ptext65 999E  
                                 __ptext57 96DC                                   __ptext49 909E  
                                 __ptext90 43B4                                   __ptext82 8420  
                                 __ptext74 A3F2                                   __ptext66 631E  
                                 __ptext58 54EE                                   __ptext91 4B94  
                                 __ptext83 2DDA                                   __ptext75 A3DC  
                                 __ptext67 A308                                   __ptext59 7738  
                                 __ptext92 9F7E                                   __ptext84 9F54  
                                 __ptext76 972A                                   __ptext68 5126  
                                 __ptext93 768A                                   __ptext85 6422  
                                 __ptext77 4A2A                                   __ptext69 A070  
                                 __ptext94 8704                                   __ptext86 A0DC  
                                 __ptext78 4CFE                                   __ptext95 6716  
                                 __ptext87 A100                                   __ptext79 8BDC  
                                 __ptext96 561E                                   __ptext88 A024  
                                 __ptext97 9FA8                                   __ptext89 9814  
                                 __ptext98 6CEC                                   __ptext99 9FD2  
                        ??___x_sample_fifo 007F                      __end_of_key_shift_loc 989E  
                 ?_sample_call_cal_diff_pr 0001                           __size_of_rtc_set 00B8  
                                 _lcd_init A38C                      _in_adc_start_and_read 8BDC  
                                 _iic_stop 9C80               __end_of_m_interp1_float_fast 2352  
                   __size_of_iic_waite_ack 0058                ??___set_short_epr_ilp_scale 0021  
                              _rtDiffPrBuf 0300                                 _LCDREGbits 000FD2  
                _calib_data_set_default_pr 41F0                            cal_diff_press@i 03E2  
                                 _keyValue 00FC                  __end_of_rtc_alrm_irq_hook A3F6  
              ___set_short_pr_calib@gohome 0094                                ??_cal_press 0020  
                            __size_of_main 0062                      ?_sample_all_power_off 0001  
                ??_cal_diff_hight_to_vol_h 0020                               _ui_disp_menu 768A  
                ??_cal_diff_hight_to_vol_v 0020                            crc_sum@uchCRCHi 006A  
                          crc_sum@uchCRCLo 006B            __end_of_cal_additional_pressute A21C  
                          m_flash_read@t32 006A                                   _passWord 003D  
                          m_flash_read@buf 0064                            m_flash_read@len 0066  
              ___set_short_diff_calib@adjv 009D           __size_of_handler_interrupt_hight 6F3C  
             ?_ui_disp_menu_calib_diff_adj 0001                               ??_ticker_dly 0020  
          ?_calib_data_set_default_diff_pr 0001           ??_calib_data_set_default_diff_pr 0068  
                                 _rtWeight 014E            ??___enter_menu_calib_press_diff 007D  
            __size_of_key_process_set_long 00B8                                   _soc_init A36C  
                             ticker_dly@ms 0060                 ??_iic_received_byte_if_ack 0021  
                    m_interp1_cal_p_t@tmpx 007A                                   _rtVolume 0021  
         __end_of___up_adj_bar_level_scale A308                     __end_of_lcd_disp_level 9494  
                 ??___set_short_diff_calib 008A                      m_interp1_cal_p_v@xout 007E  
                                 _rtc_init 9960                     ads1115_write_reg@value 0069  
                         ?_ads1115_set_pga 0060                     __size_of_m_flash_erase 005A  
                                 int$flags 0040                   ?_calib_data_init_diff_pr 0001  
                         ?_ads1115_set_mux 0060                            _lcd_show_string 8A96  
             ??___set_long_bar_level_scale 0021             __size_ofi2_sys_ticker_irq_hook 001C  
            __end_ofi2_sys_ticker_irq_hook A254                          ___up_pr_calib_adj 9AC6  
                   __size_of_m_flash_write 0136                   ?_ads1115_read_conversion 006E  
                              ??_lcd_bl_on 0020                      ?_ui_disp_menu_pos_adj 0001  
                         ?_lcd_disp_unit_t 0001                      ?_ui_disp_menu_psw_adj 0001  
                              ??_iic_start 0020                         ?___up_pr_calib_adj 0001  
            __size_of_at24c02_write_n_byte 0116               __end_of___set_short_pr_calib 2DDA  
                              delay_ms@dly 0064                        ads1115_init@slvaddr 0062  
                              ??_m_mem_cpy 0020                     at24c02_read_n_byte@buf 006B  
               ?___enter_menu_poly_coeffic 0001                                ??_m_mem_set 0020  
                   at24c02_read_n_byte@len 006D                                delay_us@dly 0060  
                             _x_prDiffData 01E6            __end_of___enter_menu_warn_value 7188  
               ?_lcd_disp_unit_temperature 0001                                 _INTCONbits 000FF2  
                      _sample_all_power_on A346          __size_of_sample_diff_pr_chip_fast 01D2  
       __end_of___enter_menu_set_base_zero 868C                 ___enter_menu_set_base_zero 8614  
                 __size_of_key_process_set 009C          __size_of___enter_menu_set_density 0072  
                ?_sample_diff_pr_chip_fast 0001                       ui_disp_xfloat_pt@buf 007A  
                         m_mem_cpy_len@len 0064                      lcd_disp_level_bar@bar 0071  
           ___set_short_diff_calib@saveFlg 0096                  ?___enter_menu_set_density 0001  
                     ui_disp_xfloat_pt@xpf 0076                       iic_waite_ack@timeout 0020  
                    __CFG_RTCSOSC$T1OSCREF 000000                        ??___up_pr_calib_adj 0021  
                         ?_m_int16_2_str_4 0068                ?_ui_disp_menu_work_mode_adj 0001  
                            key_polling@t8 0067                __end_ofi2_rtc_alrm_irq_hook A3F8  
                            _lcd_disp_logo 9E6A                         __end_of_ticker_dly 9C14  
                 ___set_short_pr_calib@t16 009B                   ___set_short_pr_calib@t32 0097  
                                 intlevel1 0000                                   intlevel2 0000  
                      _at24c02_read_n_byte 4570                       ads1115_read_reg@addr 006A  
                            key_process@tm 03D3                   ___set_short_pr_calib@pra 0090  
               __size_of_iic_received_byte 0064                            ___x_arrange_str 91C0  
             ___set_short_pose_size@gohome 03CA               __end_of_cal_diff_hight_level 3358  
              __size_of___up_adj_work_mode 0036                           ___lwmod@dividend 0069  
               ?_key_process_set_down_long 0001                       _sample_variable_init 94EC  
                         ___lldiv@dividend 0060             __size_of_handler_interrupt_low 00C0  
                  ??_sample_diff_pr_fliter 0020              __end_of_handler_interrupt_low 00D8  
              __end_of___up_diff_calib_adj 9B36                       __end_of___up_psw_adj A29A  
                     ?_sample_all_power_on 0001                                 _OSCCONbits 000FD3  
               __end_of___up_epr_calib_adj 9CEA                __size_of___set_long_density 0050  
                            _iic_send_byte 87F0                      ads1115_write_reg@addr 0068  
                  __end_of_lcd_set_com_seg 6E7C               ui_disp_menu_calib_pr_adj@buf 008A  
                 _ui_disp_adj_xfixed_pt_dp 69B6              ??_ui_disp_menu_calib_diff_adj 0021  
                 ??_sample_call_cal_in_soc 0021               __size_of___up_warn_value_adj 0016  
                __end_of___up_pr_calib_adj 9AFE                             crc_sum@puchMsg 0060  
                          ?_lcd_disp_level 0001               __end_of_lcd_disp_unit_2nd_m3 83A0  
             __end_of_lcd_disp_unit_1st_m3 8EAE                              _iic_waite_ack 9494  
                ___set_short_epr_ilp_scale 752C                       ?_at24c02_read_n_byte 0068  
             ___set_short_epr_param@gohome 03CA                  ___set_short_epr_param@t32 03CB  
              ??_ui_disp_menu_calib_pr_adj 0021                         _lcd_disp_chr_loc_0 816C  
                       _lcd_disp_chr_loc_1 80DC                         _lcd_disp_chr_loc_2 804C  
                       _lcd_disp_chr_loc_3 7FBC                         _lcd_disp_chr_loc_4 7F2C  
                       _lcd_disp_chr_loc_5 7E9C                         _lcd_disp_chr_loc_6 7E0C  
                       _lcd_disp_chr_loc_7 7D7C               __end_of_event_process_ticker A3E8  
                   __size_of_m_mem_cpy_len 004E             __size_of_ads1115_init_all_chip 003A  
             ?___sys_data_save_write_flash 0001                  ___set_short_epr_param@stp 03CF  
              ??_ui_disp_menu_bar_full_adj 0021              __end_of_ads1115_init_all_chip 9A8E  
                           _m_flash_unlock A254            __end_of_cal_diff_hight_to_vol_h 35D0  
          __end_of_cal_diff_hight_to_vol_v 0784                   m_interp1_cal_p_t@tmpxLen 007E  
                               _RTCCFGbits 000F5F                        ads1115_read_reg@t16 006C  
                              crc_append@n 006E                           ___lldiv@quotient 0068  
                          ___lwmod@divisor 006B                              crc_sum@uIndex 0068  
                  ___int32_2_mflot32@F7705 0142                            ___lwmod@counter 006D  
                      ?_lcd_disp_chr_loc_0 0001                        ?_lcd_disp_chr_loc_1 0001  
                      ?_lcd_disp_chr_loc_2 0001                        ?_lcd_disp_chr_loc_3 0001  
                      ?_lcd_disp_chr_loc_4 0001                        ?_lcd_disp_chr_loc_5 0001  
                      ?_lcd_disp_chr_loc_6 0001                        ?_lcd_disp_chr_loc_7 0001  
                 ___enter_menu_calib_press 6116                           ?_sys_ticker_init 0001  
                 __size_of_data_sys_cal_v1 0204                   __size_of_data_sys_cal_v2 0164  
                             ___aldiv@sign 0075                             ?_lcd_disp_logo 0001  
                   ?_in_adc_start_and_read 0064                              _m_flash_erase 938A  
                            ___fladd@signs 00B4                              _m_flash_write 53B8  
                 __end_of___down_dpr_calib A0B8                     ??_sample_all_power_off 0020  
                 ui_disp_adj_xfloat_pt@buf 007D                   ui_disp_adj_xfloat_pt@loc 007A  
               __size_of_rtc_alrm_irq_hook 0002                   ui_disp_adj_xfloat_pt@xpf 0078  
                 ui_disp_adj_xfloat_pt@str 0076                      ?_sample_variable_init 0001  
                            ?_lcd_disp_all 0001                   __size_of___down_home_adj 001C  
       __end_of___enter_menu_set_pose_size 9A54                 ___enter_menu_set_pose_size 9A18  
                             ___fladd@aexp 00B5                               ___fladd@bexp 00B6  
                       _lcd_disp_level_bar 0C96                   __size_of_cal_diff_p_to_h 0108  
                   cal_diff_hight_level@f1 00D0                     cal_diff_hight_level@f2 00CC  
                 ui_disp_adj_xfixed_pt@buf 007D                   ui_disp_adj_xfixed_pt@loc 007A  
                    ??_sample_all_power_on 0020                    __end_of_lcd_show_string 8B04  
                 ui_disp_adj_xfixed_pt@str 0076                         _lcd_show_string_l0 8A28  
                       _lcd_show_string_l1 989E                                crc_verify@n 006E  
            __size_of_ui_disp_clear_num_dp 005A                __end_of_ui_disp_start_cs600 7CE4  
                     ??_lcd_disp_chr_loc_0 0020                       ??_lcd_disp_chr_loc_1 0020  
                     ??_lcd_disp_chr_loc_2 0020                       ??_lcd_disp_chr_loc_3 0020  
                     ??_lcd_disp_chr_loc_4 0020                       ??_lcd_disp_chr_loc_5 0020  
                     ??_lcd_disp_chr_loc_6 0020                       ??_lcd_disp_chr_loc_7 0020  
                           ?_iic_send_byte 0001                   ??_ui_disp_menu_bzero_adj 0021  
                            ?_iic_send_ack 0001                   __size_of___down_pr_calib 0024  
              ui_disp_menu_work_mode_adj@p 0081            __end_of_ads1115_read_conversion 985A  
                  ??_ui_disp_adj_xfloat_pt 007B          __size_of_cal_pt100_temperature_in 0014  
        __size_of_cal_pt100_temperature_ex 0014                    ??_ui_disp_adj_xfixed_pt 007B  
              __size_of___up_base_zero_adj 0016                        ?_lcd_disp_level_bar 0020  
                ?_cal_pt100_temperature_in 0001                  ?_cal_pt100_temperature_ex 0001  
