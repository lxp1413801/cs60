Version 3.2 HI-TECH Software Intermediate Code
"10 src/depend/m_string.h
[v _m_mem_cpy_len `(v ~T0 @X0 0 ef3`*uc`*uc`ui ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 38: typedef signed long int int32_t;
[; ;stdint.h: 45: typedef unsigned char uint8_t;
[; ;stdint.h: 51: typedef unsigned int uint16_t;
[; ;stdint.h: 67: typedef unsigned long int uint32_t;
[; ;stdint.h: 75: typedef signed char int_least8_t;
[; ;stdint.h: 82: typedef signed int int_least16_t;
[; ;stdint.h: 104: typedef signed long int int_least32_t;
[; ;stdint.h: 111: typedef unsigned char uint_least8_t;
[; ;stdint.h: 117: typedef unsigned int uint_least16_t;
[; ;stdint.h: 136: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 145: typedef signed char int_fast8_t;
[; ;stdint.h: 152: typedef signed int int_fast16_t;
[; ;stdint.h: 174: typedef signed long int int_fast32_t;
[; ;stdint.h: 181: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 187: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 206: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 212: typedef int32_t intmax_t;
[; ;stdint.h: 217: typedef uint32_t uintmax_t;
[; ;stdint.h: 222: typedef int16_t intptr_t;
[; ;stdint.h: 227: typedef uint16_t uintptr_t;
[; ;crc16.h: 10: extern uint16_t crc_sum(uint8_t *puchMsg, uint16_t usDataLen);
[; ;crc16.h: 11: extern uint8_t crc_verify(uint8_t* message, uint16_t n);
[; ;crc16.h: 12: extern void crc_append( uint8_t* message, uint16_t n);
[; ;m_string.h: 7: extern const uint8_t HexTable[];
[; ;m_string.h: 8: extern void m_mem_set(uint8_t* buf,uint8_t x,uint8_t len);
[; ;m_string.h: 9: extern void m_mem_cpy(uint8_t* d,uint8_t* s);
[; ;m_string.h: 10: extern void m_mem_cpy_len(uint8_t* d,uint8_t* s,uint16_t len);
[; ;m_string.h: 11: extern uint16_t m_str_match(uint8_t* b,uint8_t* c);
[; ;m_string.h: 12: extern int32_t m_math_pow(int32_t x,uint8_t y);
[; ;m_string.h: 13: extern uint16_t m_str_cmp(uint8_t* d,uint8_t* s);
[; ;m_string.h: 14: extern uint16_t m_str_cmp_len(uint8_t* d,uint8_t* s,uint8_t len);
[; ;m_string.h: 15: extern uint16_t HEX8(uint8_t* hex,uint8_t x);
[; ;m_string.h: 16: extern uint16_t m_str_b2h(uint8_t* h,uint8_t* b,uint16_t len);
[; ;m_string.h: 17: extern uint16_t m_str_h2b(uint8_t* b,uint8_t* h,uint16_t len);
[; ;m_string.h: 20: extern void m_int_2_str(uint8_t* buf,int32_t x,uint8_t len);
[; ;m_string.h: 21: extern uint8_t m_str_head_hide(uint8_t* str,uint8_t loc);
[; ;m_string.h: 23: extern const uint8_t Bcd2HexTable[];
[; ;m_string.h: 29: extern uint32_t swap_uint32(uint32_t x);
[; ;m_string.h: 30: extern uint16_t swap_uint16(uint16_t x);
[; ;m_string.h: 34: extern void int32_array_shift_right(int32_t *p32,uint16_t eoc);
[; ;m_string.h: 36: void m_int8_2_hex(uint8_t* str,uint8_t b);
[; ;m_string.h: 38: extern void m_int16_2_str_4(uint8_t* buf,int16_t x);
"3 src/depend/crc16.c
[v _auchCRCHi `Cuc ~T0 @X0 -> 0 `x e ]
[i _auchCRCHi
:U ..
"5
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"6
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"7
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"8
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
"9
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
"10
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"11
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
"12
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"13
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"14
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
"15
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
"16
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
"17
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"18
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
"19
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"20
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
"21
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"22
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"23
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"24
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"25
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"26
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
"27
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
"28
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"29
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"30
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
"31
-> -> 64 `i `uc
..
]
[; ;crc16.c: 3: const uint8_t auchCRCHi[]=
[; ;crc16.c: 4: {
[; ;crc16.c: 5: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
[; ;crc16.c: 6: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
[; ;crc16.c: 7: 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
[; ;crc16.c: 8: 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
[; ;crc16.c: 9: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
[; ;crc16.c: 10: 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
[; ;crc16.c: 11: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
[; ;crc16.c: 12: 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
[; ;crc16.c: 13: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
[; ;crc16.c: 14: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
[; ;crc16.c: 15: 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
[; ;crc16.c: 16: 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
[; ;crc16.c: 17: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
[; ;crc16.c: 18: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
[; ;crc16.c: 19: 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
[; ;crc16.c: 20: 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
[; ;crc16.c: 21: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
[; ;crc16.c: 22: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
[; ;crc16.c: 23: 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
[; ;crc16.c: 24: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
[; ;crc16.c: 25: 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
[; ;crc16.c: 26: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
[; ;crc16.c: 27: 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
[; ;crc16.c: 28: 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
[; ;crc16.c: 29: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
[; ;crc16.c: 30: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40
[; ;crc16.c: 31: };
"32
[v _auchCRCLo `Cuc ~T0 @X0 -> 0 `x e ]
[i _auchCRCLo
:U ..
"34
-> -> 0 `i `uc
-> -> 192 `i `uc
-> -> 193 `i `uc
-> -> 1 `i `uc
-> -> 195 `i `uc
-> -> 3 `i `uc
-> -> 2 `i `uc
-> -> 194 `i `uc
-> -> 198 `i `uc
-> -> 6 `i `uc
"35
-> -> 7 `i `uc
-> -> 199 `i `uc
-> -> 5 `i `uc
-> -> 197 `i `uc
-> -> 196 `i `uc
-> -> 4 `i `uc
-> -> 204 `i `uc
-> -> 12 `i `uc
-> -> 13 `i `uc
-> -> 205 `i `uc
"36
-> -> 15 `i `uc
-> -> 207 `i `uc
-> -> 206 `i `uc
-> -> 14 `i `uc
-> -> 10 `i `uc
-> -> 202 `i `uc
-> -> 203 `i `uc
-> -> 11 `i `uc
-> -> 201 `i `uc
-> -> 9 `i `uc
"37
-> -> 8 `i `uc
-> -> 200 `i `uc
-> -> 216 `i `uc
-> -> 24 `i `uc
-> -> 25 `i `uc
-> -> 217 `i `uc
-> -> 27 `i `uc
-> -> 219 `i `uc
-> -> 218 `i `uc
-> -> 26 `i `uc
"38
-> -> 30 `i `uc
-> -> 222 `i `uc
-> -> 223 `i `uc
-> -> 31 `i `uc
-> -> 221 `i `uc
-> -> 29 `i `uc
-> -> 28 `i `uc
-> -> 220 `i `uc
-> -> 20 `i `uc
-> -> 212 `i `uc
"39
-> -> 213 `i `uc
-> -> 21 `i `uc
-> -> 215 `i `uc
-> -> 23 `i `uc
-> -> 22 `i `uc
-> -> 214 `i `uc
-> -> 210 `i `uc
-> -> 18 `i `uc
-> -> 19 `i `uc
-> -> 211 `i `uc
"40
-> -> 17 `i `uc
-> -> 209 `i `uc
-> -> 208 `i `uc
-> -> 16 `i `uc
-> -> 240 `i `uc
-> -> 48 `i `uc
-> -> 49 `i `uc
-> -> 241 `i `uc
-> -> 51 `i `uc
-> -> 243 `i `uc
"41
-> -> 242 `i `uc
-> -> 50 `i `uc
-> -> 54 `i `uc
-> -> 246 `i `uc
-> -> 247 `i `uc
-> -> 55 `i `uc
-> -> 245 `i `uc
-> -> 53 `i `uc
-> -> 52 `i `uc
-> -> 244 `i `uc
"42
-> -> 60 `i `uc
-> -> 252 `i `uc
-> -> 253 `i `uc
-> -> 61 `i `uc
-> -> 255 `i `uc
-> -> 63 `i `uc
-> -> 62 `i `uc
-> -> 254 `i `uc
-> -> 250 `i `uc
-> -> 58 `i `uc
"43
-> -> 59 `i `uc
-> -> 251 `i `uc
-> -> 57 `i `uc
-> -> 249 `i `uc
-> -> 248 `i `uc
-> -> 56 `i `uc
-> -> 40 `i `uc
-> -> 232 `i `uc
-> -> 233 `i `uc
-> -> 41 `i `uc
"44
-> -> 235 `i `uc
-> -> 43 `i `uc
-> -> 42 `i `uc
-> -> 234 `i `uc
-> -> 238 `i `uc
-> -> 46 `i `uc
-> -> 47 `i `uc
-> -> 239 `i `uc
-> -> 45 `i `uc
-> -> 237 `i `uc
"45
-> -> 236 `i `uc
-> -> 44 `i `uc
-> -> 228 `i `uc
-> -> 36 `i `uc
-> -> 37 `i `uc
-> -> 229 `i `uc
-> -> 39 `i `uc
-> -> 231 `i `uc
-> -> 230 `i `uc
-> -> 38 `i `uc
"46
-> -> 34 `i `uc
-> -> 226 `i `uc
-> -> 227 `i `uc
-> -> 35 `i `uc
-> -> 225 `i `uc
-> -> 33 `i `uc
-> -> 32 `i `uc
-> -> 224 `i `uc
-> -> 160 `i `uc
-> -> 96 `i `uc
"47
-> -> 97 `i `uc
-> -> 161 `i `uc
-> -> 99 `i `uc
-> -> 163 `i `uc
-> -> 162 `i `uc
-> -> 98 `i `uc
-> -> 102 `i `uc
-> -> 166 `i `uc
-> -> 167 `i `uc
-> -> 103 `i `uc
"48
-> -> 165 `i `uc
-> -> 101 `i `uc
-> -> 100 `i `uc
-> -> 164 `i `uc
-> -> 108 `i `uc
-> -> 172 `i `uc
-> -> 173 `i `uc
-> -> 109 `i `uc
-> -> 175 `i `uc
-> -> 111 `i `uc
"49
-> -> 110 `i `uc
-> -> 174 `i `uc
-> -> 170 `i `uc
-> -> 106 `i `uc
-> -> 107 `i `uc
-> -> 171 `i `uc
-> -> 105 `i `uc
-> -> 169 `i `uc
-> -> 168 `i `uc
-> -> 104 `i `uc
"50
-> -> 120 `i `uc
-> -> 184 `i `uc
-> -> 185 `i `uc
-> -> 121 `i `uc
-> -> 187 `i `uc
-> -> 123 `i `uc
-> -> 122 `i `uc
-> -> 186 `i `uc
-> -> 190 `i `uc
-> -> 126 `i `uc
"51
-> -> 127 `i `uc
-> -> 191 `i `uc
-> -> 125 `i `uc
-> -> 189 `i `uc
-> -> 188 `i `uc
-> -> 124 `i `uc
-> -> 180 `i `uc
-> -> 116 `i `uc
-> -> 117 `i `uc
-> -> 181 `i `uc
"52
-> -> 119 `i `uc
-> -> 183 `i `uc
-> -> 182 `i `uc
-> -> 118 `i `uc
-> -> 114 `i `uc
-> -> 178 `i `uc
-> -> 179 `i `uc
-> -> 115 `i `uc
-> -> 177 `i `uc
-> -> 113 `i `uc
"53
-> -> 112 `i `uc
-> -> 176 `i `uc
-> -> 80 `i `uc
-> -> 144 `i `uc
-> -> 145 `i `uc
-> -> 81 `i `uc
-> -> 147 `i `uc
-> -> 83 `i `uc
-> -> 82 `i `uc
-> -> 146 `i `uc
"54
-> -> 150 `i `uc
-> -> 86 `i `uc
-> -> 87 `i `uc
-> -> 151 `i `uc
-> -> 85 `i `uc
-> -> 149 `i `uc
-> -> 148 `i `uc
-> -> 84 `i `uc
-> -> 156 `i `uc
-> -> 92 `i `uc
"55
-> -> 93 `i `uc
-> -> 157 `i `uc
-> -> 95 `i `uc
-> -> 159 `i `uc
-> -> 158 `i `uc
-> -> 94 `i `uc
-> -> 90 `i `uc
-> -> 154 `i `uc
-> -> 155 `i `uc
-> -> 91 `i `uc
"56
-> -> 153 `i `uc
-> -> 89 `i `uc
-> -> 88 `i `uc
-> -> 152 `i `uc
-> -> 136 `i `uc
-> -> 72 `i `uc
-> -> 73 `i `uc
-> -> 137 `i `uc
-> -> 75 `i `uc
-> -> 139 `i `uc
"57
-> -> 138 `i `uc
-> -> 74 `i `uc
-> -> 78 `i `uc
-> -> 142 `i `uc
-> -> 143 `i `uc
-> -> 79 `i `uc
-> -> 141 `i `uc
-> -> 77 `i `uc
-> -> 76 `i `uc
-> -> 140 `i `uc
"58
-> -> 68 `i `uc
-> -> 132 `i `uc
-> -> 133 `i `uc
-> -> 69 `i `uc
-> -> 135 `i `uc
-> -> 71 `i `uc
-> -> 70 `i `uc
-> -> 134 `i `uc
-> -> 130 `i `uc
-> -> 66 `i `uc
"59
-> -> 67 `i `uc
-> -> 131 `i `uc
-> -> 65 `i `uc
-> -> 129 `i `uc
-> -> 128 `i `uc
"60
-> -> 64 `i `uc
..
]
[; ;crc16.c: 32: const uint8_t auchCRCLo[]=
[; ;crc16.c: 33: {
[; ;crc16.c: 34: 0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06,
[; ;crc16.c: 35: 0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD,
[; ;crc16.c: 36: 0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,
[; ;crc16.c: 37: 0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A,
[; ;crc16.c: 38: 0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4,
[; ;crc16.c: 39: 0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
[; ;crc16.c: 40: 0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3,
[; ;crc16.c: 41: 0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4,
[; ;crc16.c: 42: 0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,
[; ;crc16.c: 43: 0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29,
[; ;crc16.c: 44: 0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED,
[; ;crc16.c: 45: 0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
[; ;crc16.c: 46: 0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60,
[; ;crc16.c: 47: 0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67,
[; ;crc16.c: 48: 0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,
[; ;crc16.c: 49: 0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68,
[; ;crc16.c: 50: 0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E,
[; ;crc16.c: 51: 0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
[; ;crc16.c: 52: 0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71,
[; ;crc16.c: 53: 0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92,
[; ;crc16.c: 54: 0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,
[; ;crc16.c: 55: 0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B,
[; ;crc16.c: 56: 0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B,
[; ;crc16.c: 57: 0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
[; ;crc16.c: 58: 0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42,
[; ;crc16.c: 59: 0x43, 0x83, 0x41, 0x81, 0x80, 0x40
[; ;crc16.c: 60: };
"61
[v _crc_sum `(ui ~T0 @X0 1 ef2`*uc`ui ]
"62
{
[; ;crc16.c: 61: uint16_t crc_sum(uint8_t *puchMsg, uint16_t usDataLen)
[; ;crc16.c: 62: {
[e :U _crc_sum ]
"61
[v _puchMsg `*uc ~T0 @X0 1 r1 ]
[v _usDataLen `ui ~T0 @X0 1 r2 ]
"62
[f ]
"63
[v _len `ui ~T0 @X0 1 a ]
[; ;crc16.c: 63: uint16_t len;
[; ;crc16.c: 64: len=usDataLen;
"64
[e = _len _usDataLen ]
"65
[v _uchCRCHi `uc ~T0 @X0 1 a ]
[; ;crc16.c: 65: uint8_t uchCRCHi = 0xFF ;
[e = _uchCRCHi -> -> 255 `i `uc ]
"66
[v _uchCRCLo `uc ~T0 @X0 1 a ]
[; ;crc16.c: 66: uint8_t uchCRCLo = 0xFF ;
[e = _uchCRCLo -> -> 255 `i `uc ]
"67
[v _uIndex `ui ~T0 @X0 1 a ]
[; ;crc16.c: 67: uint16_t uIndex ;
[; ;crc16.c: 68: while (len--)
"68
[e $U 2  ]
[e :U 3 ]
[; ;crc16.c: 69: {
"69
{
[; ;crc16.c: 70: uIndex = (uchCRCLo ^ *puchMsg++) ;
"70
[e = _uIndex -> ^ -> _uchCRCLo `i -> *U ++ _puchMsg * -> -> 1 `i `x -> -> # *U _puchMsg `i `x `i `ui ]
[; ;crc16.c: 71: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
"71
[e = _uchCRCLo -> ^ -> _uchCRCHi `i -> *U + &U _auchCRCHi * -> _uIndex `ux -> -> # *U &U _auchCRCHi `ui `ux `i `uc ]
[; ;crc16.c: 72: uchCRCHi = auchCRCLo[uIndex] ;
"72
[e = _uchCRCHi *U + &U _auchCRCLo * -> _uIndex `ux -> -> # *U &U _auchCRCLo `ui `ux ]
"73
}
[e :U 2 ]
"68
[e $ != -- _len -> -> 1 `i `ui -> -> 0 `i `ui 3  ]
[e :U 4 ]
[; ;crc16.c: 73: }
[; ;crc16.c: 74: return (uchCRCHi << 8 | uchCRCLo) ;
"74
[e ) -> | << -> _uchCRCHi `i -> 8 `i -> _uchCRCLo `i `ui ]
[e $UE 1  ]
[; ;crc16.c: 75: }
"75
[e :UE 1 ]
}
"76
[v _crc_verify `(uc ~T0 @X0 1 ef2`*uc`ui ]
"77
{
[; ;crc16.c: 76: uint8_t crc_verify( uint8_t* message, uint16_t n)
[; ;crc16.c: 77: {
[e :U _crc_verify ]
"76
[v _message `*uc ~T0 @X0 1 r1 ]
[v _n `ui ~T0 @X0 1 r2 ]
"77
[f ]
"78
[v _expected `ui ~T0 @X0 1 a ]
[v _crccal `ui ~T0 @X0 1 a ]
[; ;crc16.c: 78: uint16_t expected,crccal;
[; ;crc16.c: 81: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
"81
[e ( _m_mem_cpy_len (3 , , -> &U _expected `*uc - + _message * -> _n `ux -> -> # *U _message `ui `ux * -> -> 2 `i `x -> -> # *U + _message * -> _n `ux -> -> # *U _message `ui `ux `i `x -> -> 2 `i `ui ]
[; ;crc16.c: 82: crccal=crc_sum(message,n - 2);
"82
[e = _crccal ( _crc_sum (2 , _message - _n -> -> 2 `i `ui ]
[; ;crc16.c: 83: if(expected!=crccal)return 0;
"83
[e $ ! != _expected _crccal 6  ]
[e ) -> -> 0 `i `uc ]
[e $UE 5  ]
[e :U 6 ]
[; ;crc16.c: 84: return 1;
"84
[e ) -> -> 1 `i `uc ]
[e $UE 5  ]
[; ;crc16.c: 85: }
"85
[e :UE 5 ]
}
"86
[v _crc_append `(v ~T0 @X0 1 ef2`*uc`ui ]
"87
{
[; ;crc16.c: 86: void crc_append(uint8_t* message, uint16_t n)
[; ;crc16.c: 87: {
[e :U _crc_append ]
"86
[v _message `*uc ~T0 @X0 1 r1 ]
[v _n `ui ~T0 @X0 1 r2 ]
"87
[f ]
"88
[v _crc `ui ~T0 @X0 1 a ]
[; ;crc16.c: 88: uint16_t crc;
[; ;crc16.c: 89: crc = crc_sum(message, n);
"89
[e = _crc ( _crc_sum (2 , _message _n ]
[; ;crc16.c: 90: message[n] = (uint8_t)(crc & 0xff);
"90
[e = *U + _message * -> _n `ux -> -> # *U _message `ui `ux -> & _crc -> -> 255 `i `ui `uc ]
[; ;crc16.c: 91: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
"91
[e = *U + _message * -> + _n -> -> 1 `i `ui `ux -> -> # *U _message `ui `ux -> & >> _crc -> 8 `i -> -> 255 `i `ui `uc ]
[; ;crc16.c: 92: }
"92
[e :UE 7 ]
}
