

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 15 17:16:48 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   121                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   127                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   128  0000                     
   129                           ; Version 1.41
   130                           ; Generated 25/01/2017 GMT
   131                           ; 
   132                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F86J93 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataCOMRAM
   165  003372                     __pidataCOMRAM:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _glNoEventTimeOut
   169  003372  1E                 	db	30
   170                           
   171                           	psect	idataBANK0
   172  003358                     __pidataBANK0:
   173                           	opt stack 0
   174                           
   175                           ;initializer for ui_disp_start_cs600@F7622
   176  003358  2D                 	db	45
   177  003359  30                 	db	48
   178  00335A  30                 	db	48
   179  00335B  2D                 	db	45
   180  00335C  00                 	db	0
   181  00335D  00                 	db	0
   182                           
   183                           ;initializer for _fpSysData
   184  00335E  00                 	db	0
   185  00335F  F4                 	db	244
   186  003360  00                 	db	0
   187                           
   188                           	psect	idataBANK1
   189  003361                     __pidataBANK1:
   190                           	opt stack 0
   191                           
   192                           ;initializer for _defalutRtc
   193  003361  17                 	db	23
   194  003362  07                 	db	7
   195  003363  31                 	db	49
   196  003364  23                 	db	35
   197  003365  55                 	db	85
   198  003366  55                 	db	85
   199  003367  02                 	db	2
   200                           
   201                           	psect	mediumconst
   202  00F992                     __pmediumconst:
   203                           	opt stack 0
   204  00F992  00                 	db	0
   205  00F993                     _hKel:
   206                           	opt stack 0
   207  00F993  0000               	dw	0
   208  00F995  0000               	dw	0
   209  00F997  4952               	dw	18770
   210  00F999  399D               	dw	14749
   211  00F99B  4952               	dw	18770
   212  00F99D  3A9D               	dw	15005
   213  00F99F  64C3               	dw	25795
   214  00F9A1  3B2A               	dw	15146
   215  00F9A3  0275               	dw	629
   216  00F9A5  3B9A               	dw	15258
   217  00F9A7  34D7               	dw	13527
   218  00F9A9  3BEF               	dw	15343
   219  00F9AB  64C3               	dw	25795
   220  00F9AD  3C2A               	dw	15402
   221  00F9AF  6042               	dw	24642
   222  00F9B1  3C65               	dw	15461
   223  00F9B3  182B               	dw	6187
   224  00F9B5  3C95               	dw	15509
   225  00F9B7  C711               	dw	50961
   226  00F9B9  3CBA               	dw	15546
   227  00F9BB  6042               	dw	24642
   228  00F9BD  3CE5               	dw	15589
   229  00F9BF  A027               	dw	40999
   230  00F9C1  3D09               	dw	15625
   231  00F9C3  9C78               	dw	40056
   232  00F9C5  3D22               	dw	15650
   233  00F9C7  A512               	dw	42258
   234  00F9C9  3D3D               	dw	15677
   235  00F9CB  511A               	dw	20762
   236  00F9CD  3D5A               	dw	15706
   237  00F9CF  A090               	dw	41104
   238  00F9D1  3D78               	dw	15736
   239  00F9D3  7E28               	dw	32296
   240  00F9D5  3D8C               	dw	15756
   241  00F9D7  7DBF               	dw	32191
   242  00F9D9  3D9D               	dw	15773
   243  00F9DB  1AA0               	dw	6816
   244  00F9DD  3DAF               	dw	15791
   245  00F9DF  BDA5               	dw	48549
   246  00F9E1  3DC1               	dw	15809
   247  00F9E3  FDF4               	dw	65012
   248  00F9E5  3DD4               	dw	15828
   249  00F9E7  0FF9               	dw	4089
   250  00F9E9  3DE9               	dw	15849
   251  00F9EB  BF48               	dw	48968
   252  00F9ED  3DFD               	dw	15869
   253  00F9EF  A027               	dw	40999
   254  00F9F1  3E09               	dw	15881
   255  00F9F3  AF4F               	dw	44879
   256  00F9F5  3E14               	dw	15892
   257  00F9F7  0D1B               	dw	3355
   258  00F9F9  3E20               	dw	15904
   259  00F9FB  9F56               	dw	40790
   260  00F9FD  3E2B               	dw	15915
   261  00F9FF  9A6B               	dw	39531
   262  00FA01  3E37               	dw	15927
   263  00FA03  E426               	dw	58406
   264  00FA05  3E43               	dw	15939
   265  00FA07  624E               	dw	25166
   266  00FA09  3E50               	dw	15952
   267  00FA0B  2F1B               	dw	12059
   268  00FA0D  3E5D               	dw	15965
   269  00FA0F  3055               	dw	12373
   270  00FA11  3E6A               	dw	15978
   271  00FA13  8034               	dw	32820
   272  00FA15  3E77               	dw	15991
   273  00FA17  7525               	dw	29989
   274  00FA19  3E82               	dw	16002
   275  00FA1B  5183               	dw	20867
   276  00FA1D  3E89               	dw	16009
   277  00FA1F  4817               	dw	18455
   278  00FA21  3E90               	dw	16016
   279  00FA23  4BC7               	dw	19399
   280  00FA25  3E97               	dw	16023
   281  00FA27  69AD               	dw	27053
   282  00FA29  3E9E               	dw	16030
   283  00FA2B  A1CB               	dw	41419
   284  00FA2D  3EA5               	dw	16037
   285  00FA2F  E704               	dw	59140
   286  00FA31  3EAC               	dw	16044
   287  00FA33  3958               	dw	14680
   288  00FA35  3EB4               	dw	16052
   289  00FA37  A5E3               	dw	42467
   290  00FA39  3EBB               	dw	16059
   291  00FA3B  126F               	dw	4719
   292  00FA3D  3EC3               	dw	16067
   293  00FA3F  9931               	dw	39217
   294  00FA41  3ECA               	dw	16074
   295  00FA43  1FF3               	dw	8179
   296  00FA45  3ED2               	dw	16082
   297  00FA47  C0EC               	dw	49388
   298  00FA49  3ED9               	dw	16089
   299  00FA4B  54CA               	dw	21706
   300  00FA4D  3EE1               	dw	16097
   301  00FA4F  02DE               	dw	734
   302  00FA51  3EE9               	dw	16105
   303  00FA53  A3D7               	dw	41943
   304  00FA55  3EF0               	dw	16112
   305  00FA57  51EC               	dw	20972
   306  00FA59  3EF8               	dw	16120
   307  00FA5B  0000               	dw	0
   308  00FA5D  3F00               	dw	16128
   309  00FA5F  D70A               	dw	55050
   310  00FA61  3F03               	dw	16131
   311  00FA63  AE14               	dw	44564
   312  00FA65  3F07               	dw	16135
   313  00FA67  7E91               	dw	32401
   314  00FA69  3F0B               	dw	16139
   315  00FA6B  559B               	dw	21915
   316  00FA6D  3F0F               	dw	16143
   317  00FA6F  2618               	dw	9752
   318  00FA71  3F13               	dw	16147
   319  00FA73  F007               	dw	61447
   320  00FA75  3F16               	dw	16150
   321  00FA77  B368               	dw	45928
   322  00FA79  3F1A               	dw	16154
   323  00FA7B  76C9               	dw	30409
   324  00FA7D  3F1E               	dw	16158
   325  00FA7F  2D0E               	dw	11534
   326  00FA81  3F22               	dw	16162
   327  00FA83  E354               	dw	58196
   328  00FA85  3F25               	dw	16165
   329  00FA87  8C7E               	dw	35966
   330  00FA89  3F29               	dw	16169
   331  00FA8B  2F1B               	dw	12059
   332  00FA8D  3F2D               	dw	16173
   333  00FA8F  CB29               	dw	52009
   334  00FA91  3F30               	dw	16176
   335  00FA93  5A1D               	dw	23069
   336  00FA95  3F34               	dw	16180
   337  00FA97  E282               	dw	57986
   338  00FA99  3F37               	dw	16183
   339  00FA9B  573F               	dw	22335
   340  00FA9D  3F3B               	dw	16187
   341  00FA9F  C56D               	dw	50541
   342  00FAA1  3F3E               	dw	16190
   343  00FAA3  1FF3               	dw	8179
   344  00FAA5  3F42               	dw	16194
   345  00FAA7  73EB               	dw	29675
   346  00FAA9  3F45               	dw	16197
   347  00FAAB  B439               	dw	46137
   348  00FAAD  3F48               	dw	16200
   349  00FAAF  E76D               	dw	59245
   350  00FAB1  3F4B               	dw	16203
   351  00FAB3  06F7               	dw	1783
   352  00FAB5  3F4F               	dw	16207
   353  00FAB7  1965               	dw	6501
   354  00FAB9  3F52               	dw	16210
   355  00FABB  182B               	dw	6187
   356  00FABD  3F55               	dw	16213
   357  00FABF  0347               	dw	839
   358  00FAC1  3F58               	dw	16216
   359  00FAC3  D42C               	dw	54316
   360  00FAC5  3F5A               	dw	16218
   361  00FAC7  97F6               	dw	38902
   362  00FAC9  3F5D               	dw	16221
   363  00FACB  4817               	dw	18455
   364  00FACD  3F60               	dw	16224
   365  00FACF  DE01               	dw	56833
   366  00FAD1  3F62               	dw	16226
   367  00FAD3  6042               	dw	24642
   368  00FAD5  3F65               	dw	16229
   369  00FAD7  C84B               	dw	51275
   370  00FAD9  3F67               	dw	16231
   371  00FADB  1CAC               	dw	7340
   372  00FADD  3F6A               	dw	16234
   373  00FADF  5048               	dw	20552
   374  00FAE1  3F6C               	dw	16236
   375  00FAE3  703B               	dw	28731
   376  00FAE5  3F6E               	dw	16238
   377  00FAE7  6F69               	dw	28521
   378  00FAE9  3F70               	dw	16240
   379  00FAEB  5AEE               	dw	23278
   380  00FAED  3F72               	dw	16242
   381  00FAEF  25AF               	dw	9647
   382  00FAF1  3F74               	dw	16244
   383  00FAF3  D639               	dw	54841
   384  00FAF5  3F75               	dw	16245
   385  00FAF7  65FE               	dw	26110
   386  00FAF9  3F77               	dw	16247
   387  00FAFB  D4FE               	dw	54526
   388  00FAFD  3F78               	dw	16248
   389  00FAFF  29C7               	dw	10695
   390  00FB01  3F7A               	dw	16250
   391  00FB03  573F               	dw	22335
   392  00FB05  3F7B               	dw	16251
   393  00FB07  6A7F               	dw	27263
   394  00FB09  3F7C               	dw	16252
   395  00FB0B  566D               	dw	22125
   396  00FB0D  3F7D               	dw	16253
   397  00FB0F  2824               	dw	10276
   398  00FB11  3F7E               	dw	16254
   399  00FB13  CBFB               	dw	52219
   400  00FB15  3F7E               	dw	16254
   401  00FB17  559B               	dw	21915
   402  00FB19  3F7F               	dw	16255
   403  00FB1B  B15B               	dw	45403
   404  00FB1D  3F7F               	dw	16255
   405  00FB1F  EC57               	dw	60503
   406  00FB21  3F7F               	dw	16255
   407  00FB23  0000               	dw	0
   408  00FB25  3F80               	dw	16256
   409  00FB27                     __end_of_hKel:
   410                           	opt stack 0
   411  00FB27                     _hKcy:
   412                           	opt stack 0
   413  00FB27  0000               	dw	0
   414  00FB29  0000               	dw	0
   415  00FB2B  D289               	dw	53897
   416  00FB2D  3ADE               	dw	15070
   417  00FB2F  4952               	dw	18770
   418  00FB31  3B9D               	dw	15261
   419  00FB33  8A72               	dw	35442
   420  00FB35  3C0E               	dw	15374
   421  00FB37  8BAC               	dw	35756
   422  00FB39  3C5B               	dw	15451
   423  00FB3B  30BE               	dw	12478
   424  00FB3D  3C99               	dw	15513
   425  00FB3F  B439               	dw	46137
   426  00FB41  3CC8               	dw	15560
   427  00FB43  5048               	dw	20552
   428  00FB45  3CFC               	dw	15612
   429  00FB47  999A               	dw	39322
   430  00FB49  3D19               	dw	15641
   431  00FB4B  AE7D               	dw	44669
   432  00FB4D  3D36               	dw	15670
   433  00FB4F  FDF4               	dw	65012
   434  00FB51  3D54               	dw	15700
   435  00FB53  F0D8               	dw	61656
   436  00FB55  3D74               	dw	15732
   437  00FB57  4396               	dw	17302
   438  00FB59  3D8B               	dw	15755
   439  00FB5B  779A               	dw	30618
   440  00FB5D  3D9C               	dw	15772
   441  00FB5F  48E9               	dw	18665
   442  00FB61  3DAE               	dw	15790
   443  00FB63  B780               	dw	46976
   444  00FB65  3DC0               	dw	15808
   445  00FB67  8EF3               	dw	36595
   446  00FB69  3DD3               	dw	15827
   447  00FB6B  CF42               	dw	53058
   448  00FB6D  3DE6               	dw	15846
   449  00FB6F  ACDA               	dw	44250
   450  00FB71  3DFA               	dw	15866
   451  00FB73  79A7               	dw	31143
   452  00FB75  3E07               	dw	15879
   453  00FB77  D14E               	dw	53582
   454  00FB79  3E11               	dw	15889
   455  00FB7B  5D64               	dw	23908
   456  00FB7D  3E1C               	dw	15900
   457  00FB7F  03B0               	dw	944
   458  00FB81  3E27               	dw	15911
   459  00FB83  F8A1               	dw	63649
   460  00FB85  3E31               	dw	15921
   461  00FB87  ED91               	dw	60817
   462  00FB89  3E3C               	dw	15932
   463  00FB8B  3127               	dw	12583
   464  00FB8D  3E48               	dw	15944
   465  00FB8F  8EF3               	dw	36595
   466  00FB91  3E53               	dw	15955
   467  00FB93  06F7               	dw	1783
   468  00FB95  3E5F               	dw	15967
   469  00FB97  B368               	dw	45928
   470  00FB99  3E6A               	dw	15978
   471  00FB9B  7A10               	dw	31248
   472  00FB9D  3E76               	dw	15990
   473  00FB9F  2D77               	dw	11639
   474  00FBA1  3E81               	dw	16001
   475  00FBA3  2B02               	dw	11010
   476  00FBA5  3E87               	dw	16007
   477  00FBA7  42C4               	dw	17092
   478  00FBA9  3E8D               	dw	16013
   479  00FBAB  5A86               	dw	23174
   480  00FBAD  3E93               	dw	16019
   481  00FBAF  7F63               	dw	32611
   482  00FBB1  3E99               	dw	16025
   483  00FBB3  B15B               	dw	45403
   484  00FBB5  3E9F               	dw	16031
   485  00FBB7  F06F               	dw	61551
   486  00FBB9  3EA5               	dw	16037
   487  00FBBB  3C9F               	dw	15519
   488  00FBBD  3EAC               	dw	16044
   489  00FBBF  88CE               	dw	35022
   490  00FBC1  3EB2               	dw	16050
   491  00FBC3  E219               	dw	57881
   492  00FBC5  3EB8               	dw	16056
   493  00FBC7  3B64               	dw	15204
   494  00FBC9  3EBF               	dw	16063
   495  00FBCB  A1CB               	dw	41419
   496  00FBCD  3EC5               	dw	16069
   497  00FBCF  154D               	dw	5453
   498  00FBD1  3ECC               	dw	16076
   499  00FBD3  88CE               	dw	35022
   500  00FBD5  3ED2               	dw	16082
   501  00FBD7  FC50               	dw	64592
   502  00FBD9  3ED8               	dw	16088
   503  00FBDB  6FD2               	dw	28626
   504  00FBDD  3EDF               	dw	16095
   505  00FBDF  F06F               	dw	61551
   506  00FBE1  3EE5               	dw	16101
   507  00FBE3  710D               	dw	28941
   508  00FBE5  3EEC               	dw	16108
   509  00FBE7  F1AA               	dw	61866
   510  00FBE9  3EF2               	dw	16114
   511  00FBEB  7F63               	dw	32611
   512  00FBED  3EF9               	dw	16121
   513  00FBEF  0000               	dw	0
   514  00FBF1  3F00               	dw	16128
   515  00FBF3  404F               	dw	16463
   516  00FBF5  3F03               	dw	16131
   517  00FBF7  872B               	dw	34603
   518  00FBF9  3F06               	dw	16134
   519  00FBFB  C77A               	dw	51066
   520  00FBFD  3F09               	dw	16137
   521  00FBFF  07C8               	dw	1992
   522  00FC01  3F0D               	dw	16141
   523  00FC03  4817               	dw	18455
   524  00FC05  3F10               	dw	16144
   525  00FC07  81D8               	dw	33240
   526  00FC09  3F13               	dw	16147
   527  00FC0B  BB99               	dw	48025
   528  00FC0D  3F16               	dw	16150
   529  00FC0F  F55A               	dw	62810
   530  00FC11  3F19               	dw	16153
   531  00FC13  2F1B               	dw	12059
   532  00FC15  3F1D               	dw	16157
   533  00FC17  624E               	dw	25166
   534  00FC19  3F20               	dw	16160
   535  00FC1B  8EF3               	dw	36595
   536  00FC1D  3F23               	dw	16163
   537  00FC1F  BB99               	dw	48025
   538  00FC21  3F26               	dw	16166
   539  00FC23  E1B1               	dw	57777
   540  00FC25  3F29               	dw	16169
   541  00FC27  07C8               	dw	1992
   542  00FC29  3F2D               	dw	16173
   543  00FC2B  2752               	dw	10066
   544  00FC2D  3F30               	dw	16176
   545  00FC2F  404F               	dw	16463
   546  00FC31  3F33               	dw	16179
   547  00FC33  52BD               	dw	21181
   548  00FC35  3F36               	dw	16182
   549  00FC37  5E9E               	dw	24222
   550  00FC39  3F39               	dw	16185
   551  00FC3B  6A7F               	dw	27263
   552  00FC3D  3F3C               	dw	16188
   553  00FC3F  6944               	dw	26948
   554  00FC41  3F3F               	dw	16191
   555  00FC43  617C               	dw	24956
   556  00FC45  3F42               	dw	16194
   557  00FC47  5326               	dw	21286
   558  00FC49  3F45               	dw	16197
   559  00FC4B  3E42               	dw	15938
   560  00FC4D  3F48               	dw	16200
   561  00FC4F  1C43               	dw	7235
   562  00FC51  3F4B               	dw	16203
   563  00FC53  F3B6               	dw	62390
   564  00FC55  3F4D               	dw	16205
   565  00FC57  C49C               	dw	50332
   566  00FC59  3F50               	dw	16208
   567  00FC5B  81D8               	dw	33240
   568  00FC5D  3F53               	dw	16211
   569  00FC5F  3F14               	dw	16148
   570  00FC61  3F56               	dw	16214
   571  00FC63  E8A7               	dw	59559
   572  00FC65  3F58               	dw	16216
   573  00FC67  8BAC               	dw	35756
   574  00FC69  3F5B               	dw	16219
   575  00FC6B  2196               	dw	8598
   576  00FC6D  3F5E               	dw	16222
   577  00FC6F  AA65               	dw	43621
   578  00FC71  3F60               	dw	16224
   579  00FC73  2618               	dw	9752
   580  00FC75  3F63               	dw	16227
   581  00FC77  8E22               	dw	36386
   582  00FC79  3F65               	dw	16229
   583  00FC7B  E910               	dw	59664
   584  00FC7D  3F67               	dw	16231
   585  00FC7F  36E3               	dw	14051
   586  00FC81  3F6A               	dw	16234
   587  00FC83  710D               	dw	28941
   588  00FC85  3F6C               	dw	16236
   589  00FC87  978D               	dw	38797
   590  00FC89  3F6E               	dw	16238
   591  00FC8B  B0F2               	dw	45298
   592  00FC8D  3F70               	dw	16240
   593  00FC8F  B021               	dw	45089
   594  00FC91  3F72               	dw	16242
   595  00FC93  9518               	dw	38168
   596  00FC95  3F74               	dw	16244
   597  00FC97  6666               	dw	26214
   598  00FC99  3F76               	dw	16246
   599  00FC9B  1D7E               	dw	7550
   600  00FC9D  3F78               	dw	16248
   601  00FC9F  BA5E               	dw	47710
   602  00FCA1  3F79               	dw	16249
   603  00FCA3  367A               	dw	13946
   604  00FCA5  3F7B               	dw	16251
   605  00FCA7  91D1               	dw	37329
   606  00FCA9  3F7C               	dw	16252
   607  00FCAB  C5D6               	dw	50646
   608  00FCAD  3F7D               	dw	16253
   609  00FCAF  C56D               	dw	50541
   610  00FCB1  3F7E               	dw	16254
   611  00FCB3  9097               	dw	37015
   612  00FCB5  3F7F               	dw	16255
   613  00FCB7  0000               	dw	0
   614  00FCB9  3F80               	dw	16256
   615  00FCBB                     __end_of_hKcy:
   616                           	opt stack 0
   617  00FCBB                     _auchCRCLo:
   618                           	opt stack 0
   619  00FCBB  00                 	db	0
   620  00FCBC  C0                 	db	192
   621  00FCBD  C1                 	db	193
   622  00FCBE  01                 	db	1
   623  00FCBF  C3                 	db	195
   624  00FCC0  03                 	db	3
   625  00FCC1  02                 	db	2
   626  00FCC2  C2                 	db	194
   627  00FCC3  C6                 	db	198
   628  00FCC4  06                 	db	6
   629  00FCC5  07                 	db	7
   630  00FCC6  C7                 	db	199
   631  00FCC7  05                 	db	5
   632  00FCC8  C5                 	db	197
   633  00FCC9  C4                 	db	196
   634  00FCCA  04                 	db	4
   635  00FCCB  CC                 	db	204
   636  00FCCC  0C                 	db	12
   637  00FCCD  0D                 	db	13
   638  00FCCE  CD                 	db	205
   639  00FCCF  0F                 	db	15
   640  00FCD0  CF                 	db	207
   641  00FCD1  CE                 	db	206
   642  00FCD2  0E                 	db	14
   643  00FCD3  0A                 	db	10
   644  00FCD4  CA                 	db	202
   645  00FCD5  CB                 	db	203
   646  00FCD6  0B                 	db	11
   647  00FCD7  C9                 	db	201
   648  00FCD8  09                 	db	9
   649  00FCD9  08                 	db	8
   650  00FCDA  C8                 	db	200
   651  00FCDB  D8                 	db	216
   652  00FCDC  18                 	db	24
   653  00FCDD  19                 	db	25
   654  00FCDE  D9                 	db	217
   655  00FCDF  1B                 	db	27
   656  00FCE0  DB                 	db	219
   657  00FCE1  DA                 	db	218
   658  00FCE2  1A                 	db	26
   659  00FCE3  1E                 	db	30
   660  00FCE4  DE                 	db	222
   661  00FCE5  DF                 	db	223
   662  00FCE6  1F                 	db	31
   663  00FCE7  DD                 	db	221
   664  00FCE8  1D                 	db	29
   665  00FCE9  1C                 	db	28
   666  00FCEA  DC                 	db	220
   667  00FCEB  14                 	db	20
   668  00FCEC  D4                 	db	212
   669  00FCED  D5                 	db	213
   670  00FCEE  15                 	db	21
   671  00FCEF  D7                 	db	215
   672  00FCF0  17                 	db	23
   673  00FCF1  16                 	db	22
   674  00FCF2  D6                 	db	214
   675  00FCF3  D2                 	db	210
   676  00FCF4  12                 	db	18
   677  00FCF5  13                 	db	19
   678  00FCF6  D3                 	db	211
   679  00FCF7  11                 	db	17
   680  00FCF8  D1                 	db	209
   681  00FCF9  D0                 	db	208
   682  00FCFA  10                 	db	16
   683  00FCFB  F0                 	db	240
   684  00FCFC  30                 	db	48
   685  00FCFD  31                 	db	49
   686  00FCFE  F1                 	db	241
   687  00FCFF  33                 	db	51
   688  00FD00  F3                 	db	243
   689  00FD01  F2                 	db	242
   690  00FD02  32                 	db	50
   691  00FD03  36                 	db	54
   692  00FD04  F6                 	db	246
   693  00FD05  F7                 	db	247
   694  00FD06  37                 	db	55
   695  00FD07  F5                 	db	245
   696  00FD08  35                 	db	53
   697  00FD09  34                 	db	52
   698  00FD0A  F4                 	db	244
   699  00FD0B  3C                 	db	60
   700  00FD0C  FC                 	db	252
   701  00FD0D  FD                 	db	253
   702  00FD0E  3D                 	db	61
   703  00FD0F  FF                 	db	255
   704  00FD10  3F                 	db	63
   705  00FD11  3E                 	db	62
   706  00FD12  FE                 	db	254
   707  00FD13  FA                 	db	250
   708  00FD14  3A                 	db	58
   709  00FD15  3B                 	db	59
   710  00FD16  FB                 	db	251
   711  00FD17  39                 	db	57
   712  00FD18  F9                 	db	249
   713  00FD19  F8                 	db	248
   714  00FD1A  38                 	db	56
   715  00FD1B  28                 	db	40
   716  00FD1C  E8                 	db	232
   717  00FD1D  E9                 	db	233
   718  00FD1E  29                 	db	41
   719  00FD1F  EB                 	db	235
   720  00FD20  2B                 	db	43
   721  00FD21  2A                 	db	42
   722  00FD22  EA                 	db	234
   723  00FD23  EE                 	db	238
   724  00FD24  2E                 	db	46
   725  00FD25  2F                 	db	47
   726  00FD26  EF                 	db	239
   727  00FD27  2D                 	db	45
   728  00FD28  ED                 	db	237
   729  00FD29  EC                 	db	236
   730  00FD2A  2C                 	db	44
   731  00FD2B  E4                 	db	228
   732  00FD2C  24                 	db	36
   733  00FD2D  25                 	db	37
   734  00FD2E  E5                 	db	229
   735  00FD2F  27                 	db	39
   736  00FD30  E7                 	db	231
   737  00FD31  E6                 	db	230
   738  00FD32  26                 	db	38
   739  00FD33  22                 	db	34
   740  00FD34  E2                 	db	226
   741  00FD35  E3                 	db	227
   742  00FD36  23                 	db	35
   743  00FD37  E1                 	db	225
   744  00FD38  21                 	db	33
   745  00FD39  20                 	db	32
   746  00FD3A  E0                 	db	224
   747  00FD3B  A0                 	db	160
   748  00FD3C  60                 	db	96
   749  00FD3D  61                 	db	97
   750  00FD3E  A1                 	db	161
   751  00FD3F  63                 	db	99
   752  00FD40  A3                 	db	163
   753  00FD41  A2                 	db	162
   754  00FD42  62                 	db	98
   755  00FD43  66                 	db	102
   756  00FD44  A6                 	db	166
   757  00FD45  A7                 	db	167
   758  00FD46  67                 	db	103
   759  00FD47  A5                 	db	165
   760  00FD48  65                 	db	101
   761  00FD49  64                 	db	100
   762  00FD4A  A4                 	db	164
   763  00FD4B  6C                 	db	108
   764  00FD4C  AC                 	db	172
   765  00FD4D  AD                 	db	173
   766  00FD4E  6D                 	db	109
   767  00FD4F  AF                 	db	175
   768  00FD50  6F                 	db	111
   769  00FD51  6E                 	db	110
   770  00FD52  AE                 	db	174
   771  00FD53  AA                 	db	170
   772  00FD54  6A                 	db	106
   773  00FD55  6B                 	db	107
   774  00FD56  AB                 	db	171
   775  00FD57  69                 	db	105
   776  00FD58  A9                 	db	169
   777  00FD59  A8                 	db	168
   778  00FD5A  68                 	db	104
   779  00FD5B  78                 	db	120
   780  00FD5C  B8                 	db	184
   781  00FD5D  B9                 	db	185
   782  00FD5E  79                 	db	121
   783  00FD5F  BB                 	db	187
   784  00FD60  7B                 	db	123
   785  00FD61  7A                 	db	122
   786  00FD62  BA                 	db	186
   787  00FD63  BE                 	db	190
   788  00FD64  7E                 	db	126
   789  00FD65  7F                 	db	127
   790  00FD66  BF                 	db	191
   791  00FD67  7D                 	db	125
   792  00FD68  BD                 	db	189
   793  00FD69  BC                 	db	188
   794  00FD6A  7C                 	db	124
   795  00FD6B  B4                 	db	180
   796  00FD6C  74                 	db	116
   797  00FD6D  75                 	db	117
   798  00FD6E  B5                 	db	181
   799  00FD6F  77                 	db	119
   800  00FD70  B7                 	db	183
   801  00FD71  B6                 	db	182
   802  00FD72  76                 	db	118
   803  00FD73  72                 	db	114
   804  00FD74  B2                 	db	178
   805  00FD75  B3                 	db	179
   806  00FD76  73                 	db	115
   807  00FD77  B1                 	db	177
   808  00FD78  71                 	db	113
   809  00FD79  70                 	db	112
   810  00FD7A  B0                 	db	176
   811  00FD7B  50                 	db	80
   812  00FD7C  90                 	db	144
   813  00FD7D  91                 	db	145
   814  00FD7E  51                 	db	81
   815  00FD7F  93                 	db	147
   816  00FD80  53                 	db	83
   817  00FD81  52                 	db	82
   818  00FD82  92                 	db	146
   819  00FD83  96                 	db	150
   820  00FD84  56                 	db	86
   821  00FD85  57                 	db	87
   822  00FD86  97                 	db	151
   823  00FD87  55                 	db	85
   824  00FD88  95                 	db	149
   825  00FD89  94                 	db	148
   826  00FD8A  54                 	db	84
   827  00FD8B  9C                 	db	156
   828  00FD8C  5C                 	db	92
   829  00FD8D  5D                 	db	93
   830  00FD8E  9D                 	db	157
   831  00FD8F  5F                 	db	95
   832  00FD90  9F                 	db	159
   833  00FD91  9E                 	db	158
   834  00FD92  5E                 	db	94
   835  00FD93  5A                 	db	90
   836  00FD94  9A                 	db	154
   837  00FD95  9B                 	db	155
   838  00FD96  5B                 	db	91
   839  00FD97  99                 	db	153
   840  00FD98  59                 	db	89
   841  00FD99  58                 	db	88
   842  00FD9A  98                 	db	152
   843  00FD9B  88                 	db	136
   844  00FD9C  48                 	db	72
   845  00FD9D  49                 	db	73
   846  00FD9E  89                 	db	137
   847  00FD9F  4B                 	db	75
   848  00FDA0  8B                 	db	139
   849  00FDA1  8A                 	db	138
   850  00FDA2  4A                 	db	74
   851  00FDA3  4E                 	db	78
   852  00FDA4  8E                 	db	142
   853  00FDA5  8F                 	db	143
   854  00FDA6  4F                 	db	79
   855  00FDA7  8D                 	db	141
   856  00FDA8  4D                 	db	77
   857  00FDA9  4C                 	db	76
   858  00FDAA  8C                 	db	140
   859  00FDAB  44                 	db	68
   860  00FDAC  84                 	db	132
   861  00FDAD  85                 	db	133
   862  00FDAE  45                 	db	69
   863  00FDAF  87                 	db	135
   864  00FDB0  47                 	db	71
   865  00FDB1  46                 	db	70
   866  00FDB2  86                 	db	134
   867  00FDB3  82                 	db	130
   868  00FDB4  42                 	db	66
   869  00FDB5  43                 	db	67
   870  00FDB6  83                 	db	131
   871  00FDB7  41                 	db	65
   872  00FDB8  81                 	db	129
   873  00FDB9  80                 	db	128
   874  00FDBA  40                 	db	64
   875  00FDBB                     __end_of_auchCRCLo:
   876                           	opt stack 0
   877  00FDBB                     _auchCRCHi:
   878                           	opt stack 0
   879  00FDBB  00                 	db	0
   880  00FDBC  C1                 	db	193
   881  00FDBD  81                 	db	129
   882  00FDBE  40                 	db	64
   883  00FDBF  01                 	db	1
   884  00FDC0  C0                 	db	192
   885  00FDC1  80                 	db	128
   886  00FDC2  41                 	db	65
   887  00FDC3  01                 	db	1
   888  00FDC4  C0                 	db	192
   889  00FDC5  80                 	db	128
   890  00FDC6  41                 	db	65
   891  00FDC7  00                 	db	0
   892  00FDC8  C1                 	db	193
   893  00FDC9  81                 	db	129
   894  00FDCA  40                 	db	64
   895  00FDCB  01                 	db	1
   896  00FDCC  C0                 	db	192
   897  00FDCD  80                 	db	128
   898  00FDCE  41                 	db	65
   899  00FDCF  00                 	db	0
   900  00FDD0  C1                 	db	193
   901  00FDD1  81                 	db	129
   902  00FDD2  40                 	db	64
   903  00FDD3  00                 	db	0
   904  00FDD4  C1                 	db	193
   905  00FDD5  81                 	db	129
   906  00FDD6  40                 	db	64
   907  00FDD7  01                 	db	1
   908  00FDD8  C0                 	db	192
   909  00FDD9  80                 	db	128
   910  00FDDA  41                 	db	65
   911  00FDDB  01                 	db	1
   912  00FDDC  C0                 	db	192
   913  00FDDD  80                 	db	128
   914  00FDDE  41                 	db	65
   915  00FDDF  00                 	db	0
   916  00FDE0  C1                 	db	193
   917  00FDE1  81                 	db	129
   918  00FDE2  40                 	db	64
   919  00FDE3  00                 	db	0
   920  00FDE4  C1                 	db	193
   921  00FDE5  81                 	db	129
   922  00FDE6  40                 	db	64
   923  00FDE7  01                 	db	1
   924  00FDE8  C0                 	db	192
   925  00FDE9  80                 	db	128
   926  00FDEA  41                 	db	65
   927  00FDEB  00                 	db	0
   928  00FDEC  C1                 	db	193
   929  00FDED  81                 	db	129
   930  00FDEE  40                 	db	64
   931  00FDEF  01                 	db	1
   932  00FDF0  C0                 	db	192
   933  00FDF1  80                 	db	128
   934  00FDF2  41                 	db	65
   935  00FDF3  01                 	db	1
   936  00FDF4  C0                 	db	192
   937  00FDF5  80                 	db	128
   938  00FDF6  41                 	db	65
   939  00FDF7  00                 	db	0
   940  00FDF8  C1                 	db	193
   941  00FDF9  81                 	db	129
   942  00FDFA  40                 	db	64
   943  00FDFB  01                 	db	1
   944  00FDFC  C0                 	db	192
   945  00FDFD  80                 	db	128
   946  00FDFE  41                 	db	65
   947  00FDFF  00                 	db	0
   948  00FE00  C1                 	db	193
   949  00FE01  81                 	db	129
   950  00FE02  40                 	db	64
   951  00FE03  00                 	db	0
   952  00FE04  C1                 	db	193
   953  00FE05  81                 	db	129
   954  00FE06  40                 	db	64
   955  00FE07  01                 	db	1
   956  00FE08  C0                 	db	192
   957  00FE09  80                 	db	128
   958  00FE0A  41                 	db	65
   959  00FE0B  00                 	db	0
   960  00FE0C  C1                 	db	193
   961  00FE0D  81                 	db	129
   962  00FE0E  40                 	db	64
   963  00FE0F  01                 	db	1
   964  00FE10  C0                 	db	192
   965  00FE11  80                 	db	128
   966  00FE12  41                 	db	65
   967  00FE13  01                 	db	1
   968  00FE14  C0                 	db	192
   969  00FE15  80                 	db	128
   970  00FE16  41                 	db	65
   971  00FE17  00                 	db	0
   972  00FE18  C1                 	db	193
   973  00FE19  81                 	db	129
   974  00FE1A  40                 	db	64
   975  00FE1B  00                 	db	0
   976  00FE1C  C1                 	db	193
   977  00FE1D  81                 	db	129
   978  00FE1E  40                 	db	64
   979  00FE1F  01                 	db	1
   980  00FE20  C0                 	db	192
   981  00FE21  80                 	db	128
   982  00FE22  41                 	db	65
   983  00FE23  01                 	db	1
   984  00FE24  C0                 	db	192
   985  00FE25  80                 	db	128
   986  00FE26  41                 	db	65
   987  00FE27  00                 	db	0
   988  00FE28  C1                 	db	193
   989  00FE29  81                 	db	129
   990  00FE2A  40                 	db	64
   991  00FE2B  01                 	db	1
   992  00FE2C  C0                 	db	192
   993  00FE2D  80                 	db	128
   994  00FE2E  41                 	db	65
   995  00FE2F  00                 	db	0
   996  00FE30  C1                 	db	193
   997  00FE31  81                 	db	129
   998  00FE32  40                 	db	64
   999  00FE33  00                 	db	0
  1000  00FE34  C1                 	db	193
  1001  00FE35  81                 	db	129
  1002  00FE36  40                 	db	64
  1003  00FE37  01                 	db	1
  1004  00FE38  C0                 	db	192
  1005  00FE39  80                 	db	128
  1006  00FE3A  41                 	db	65
  1007  00FE3B  01                 	db	1
  1008  00FE3C  C0                 	db	192
  1009  00FE3D  80                 	db	128
  1010  00FE3E  41                 	db	65
  1011  00FE3F  00                 	db	0
  1012  00FE40  C1                 	db	193
  1013  00FE41  81                 	db	129
  1014  00FE42  40                 	db	64
  1015  00FE43  00                 	db	0
  1016  00FE44  C1                 	db	193
  1017  00FE45  81                 	db	129
  1018  00FE46  40                 	db	64
  1019  00FE47  01                 	db	1
  1020  00FE48  C0                 	db	192
  1021  00FE49  80                 	db	128
  1022  00FE4A  41                 	db	65
  1023  00FE4B  00                 	db	0
  1024  00FE4C  C1                 	db	193
  1025  00FE4D  81                 	db	129
  1026  00FE4E  40                 	db	64
  1027  00FE4F  01                 	db	1
  1028  00FE50  C0                 	db	192
  1029  00FE51  80                 	db	128
  1030  00FE52  41                 	db	65
  1031  00FE53  01                 	db	1
  1032  00FE54  C0                 	db	192
  1033  00FE55  80                 	db	128
  1034  00FE56  41                 	db	65
  1035  00FE57  00                 	db	0
  1036  00FE58  C1                 	db	193
  1037  00FE59  81                 	db	129
  1038  00FE5A  40                 	db	64
  1039  00FE5B  00                 	db	0
  1040  00FE5C  C1                 	db	193
  1041  00FE5D  81                 	db	129
  1042  00FE5E  40                 	db	64
  1043  00FE5F  01                 	db	1
  1044  00FE60  C0                 	db	192
  1045  00FE61  80                 	db	128
  1046  00FE62  41                 	db	65
  1047  00FE63  01                 	db	1
  1048  00FE64  C0                 	db	192
  1049  00FE65  80                 	db	128
  1050  00FE66  41                 	db	65
  1051  00FE67  00                 	db	0
  1052  00FE68  C1                 	db	193
  1053  00FE69  81                 	db	129
  1054  00FE6A  40                 	db	64
  1055  00FE6B  01                 	db	1
  1056  00FE6C  C0                 	db	192
  1057  00FE6D  80                 	db	128
  1058  00FE6E  41                 	db	65
  1059  00FE6F  00                 	db	0
  1060  00FE70  C1                 	db	193
  1061  00FE71  81                 	db	129
  1062  00FE72  40                 	db	64
  1063  00FE73  00                 	db	0
  1064  00FE74  C1                 	db	193
  1065  00FE75  81                 	db	129
  1066  00FE76  40                 	db	64
  1067  00FE77  01                 	db	1
  1068  00FE78  C0                 	db	192
  1069  00FE79  80                 	db	128
  1070  00FE7A  41                 	db	65
  1071  00FE7B  00                 	db	0
  1072  00FE7C  C1                 	db	193
  1073  00FE7D  81                 	db	129
  1074  00FE7E  40                 	db	64
  1075  00FE7F  01                 	db	1
  1076  00FE80  C0                 	db	192
  1077  00FE81  80                 	db	128
  1078  00FE82  41                 	db	65
  1079  00FE83  01                 	db	1
  1080  00FE84  C0                 	db	192
  1081  00FE85  80                 	db	128
  1082  00FE86  41                 	db	65
  1083  00FE87  00                 	db	0
  1084  00FE88  C1                 	db	193
  1085  00FE89  81                 	db	129
  1086  00FE8A  40                 	db	64
  1087  00FE8B  01                 	db	1
  1088  00FE8C  C0                 	db	192
  1089  00FE8D  80                 	db	128
  1090  00FE8E  41                 	db	65
  1091  00FE8F  00                 	db	0
  1092  00FE90  C1                 	db	193
  1093  00FE91  81                 	db	129
  1094  00FE92  40                 	db	64
  1095  00FE93  00                 	db	0
  1096  00FE94  C1                 	db	193
  1097  00FE95  81                 	db	129
  1098  00FE96  40                 	db	64
  1099  00FE97  01                 	db	1
  1100  00FE98  C0                 	db	192
  1101  00FE99  80                 	db	128
  1102  00FE9A  41                 	db	65
  1103  00FE9B  01                 	db	1
  1104  00FE9C  C0                 	db	192
  1105  00FE9D  80                 	db	128
  1106  00FE9E  41                 	db	65
  1107  00FE9F  00                 	db	0
  1108  00FEA0  C1                 	db	193
  1109  00FEA1  81                 	db	129
  1110  00FEA2  40                 	db	64
  1111  00FEA3  00                 	db	0
  1112  00FEA4  C1                 	db	193
  1113  00FEA5  81                 	db	129
  1114  00FEA6  40                 	db	64
  1115  00FEA7  01                 	db	1
  1116  00FEA8  C0                 	db	192
  1117  00FEA9  80                 	db	128
  1118  00FEAA  41                 	db	65
  1119  00FEAB  00                 	db	0
  1120  00FEAC  C1                 	db	193
  1121  00FEAD  81                 	db	129
  1122  00FEAE  40                 	db	64
  1123  00FEAF  01                 	db	1
  1124  00FEB0  C0                 	db	192
  1125  00FEB1  80                 	db	128
  1126  00FEB2  41                 	db	65
  1127  00FEB3  01                 	db	1
  1128  00FEB4  C0                 	db	192
  1129  00FEB5  80                 	db	128
  1130  00FEB6  41                 	db	65
  1131  00FEB7  00                 	db	0
  1132  00FEB8  C1                 	db	193
  1133  00FEB9  81                 	db	129
  1134  00FEBA  40                 	db	64
  1135  00FEBB                     __end_of_auchCRCHi:
  1136                           	opt stack 0
  1137  00FEBB                     _LCDDigitalIndexTable:
  1138                           	opt stack 0
  1139  00FEBB  30                 	db	48
  1140  00FEBC  31                 	db	49
  1141  00FEBD  32                 	db	50
  1142  00FEBE  33                 	db	51
  1143  00FEBF  34                 	db	52
  1144  00FEC0  35                 	db	53
  1145  00FEC1  36                 	db	54
  1146  00FEC2  37                 	db	55
  1147  00FEC3  38                 	db	56
  1148  00FEC4  39                 	db	57
  1149  00FEC5  61                 	db	97
  1150  00FEC6  62                 	db	98
  1151  00FEC7  63                 	db	99
  1152  00FEC8  64                 	db	100
  1153  00FEC9  65                 	db	101
  1154  00FECA  66                 	db	102
  1155  00FECB  67                 	db	103
  1156  00FECC  68                 	db	104
  1157  00FECD  69                 	db	105
  1158  00FECE  6A                 	db	106
  1159  00FECF  6B                 	db	107
  1160  00FED0  6C                 	db	108
  1161  00FED1  6D                 	db	109
  1162  00FED2  6E                 	db	110
  1163  00FED3  6F                 	db	111
  1164  00FED4  70                 	db	112
  1165  00FED5  71                 	db	113
  1166  00FED6  72                 	db	114
  1167  00FED7  73                 	db	115
  1168  00FED8  74                 	db	116
  1169  00FED9  75                 	db	117
  1170  00FEDA  76                 	db	118
  1171  00FEDB  77                 	db	119
  1172  00FEDC  78                 	db	120
  1173  00FEDD  79                 	db	121
  1174  00FEDE  7A                 	db	122
  1175  00FEDF  2E                 	db	46
  1176  00FEE0  2D                 	db	45
  1177  00FEE1  3A                 	db	58
  1178  00FEE2  20                 	db	32
  1179  00FEE3  00                 	db	0
  1180  00FEE4                     __end_of_LCDDigitalIndexTable:
  1181                           	opt stack 0
  1182  00FEE4                     _LCDDigitalTable:
  1183                           	opt stack 0
  1184  00FEE4  3F                 	db	63
  1185  00FEE5  06                 	db	6
  1186  00FEE6  5B                 	db	91
  1187  00FEE7  4F                 	db	79
  1188  00FEE8  66                 	db	102
  1189  00FEE9  6D                 	db	109
  1190  00FEEA  7D                 	db	125
  1191  00FEEB  07                 	db	7
  1192  00FEEC  7F                 	db	127
  1193  00FEED  6F                 	db	111
  1194  00FEEE  77                 	db	119
  1195  00FEEF  7C                 	db	124
  1196  00FEF0  39                 	db	57
  1197  00FEF1  5E                 	db	94
  1198  00FEF2  79                 	db	121
  1199  00FEF3  71                 	db	113
  1200  00FEF4  6F                 	db	111
  1201  00FEF5  76                 	db	118
  1202  00FEF6  06                 	db	6
  1203  00FEF7  0E                 	db	14
  1204  00FEF8  7A                 	db	122
  1205  00FEF9  38                 	db	56
  1206  00FEFA  00                 	db	0
  1207  00FEFB  37                 	db	55
  1208  00FEFC  5C                 	db	92
  1209  00FEFD  73                 	db	115
  1210  00FEFE  67                 	db	103
  1211  00FEFF  50                 	db	80
  1212  00FF00  6D                 	db	109
  1213  00FF01  78                 	db	120
  1214  00FF02  3E                 	db	62
  1215  00FF03  00                 	db	0
  1216  00FF04  00                 	db	0
  1217  00FF05  00                 	db	0
  1218  00FF06  6E                 	db	110
  1219  00FF07  5B                 	db	91
  1220  00FF08  40                 	db	64
  1221  00FF09  40                 	db	64
  1222  00FF0A  48                 	db	72
  1223  00FF0B  00                 	db	0
  1224  00FF0C                     __end_of_LCDDigitalTable:
  1225                           	opt stack 0
  1226  00FF0C                     _HexTable:
  1227                           	opt stack 0
  1228  00FF0C  30                 	db	48
  1229  00FF0D  31                 	db	49
  1230  00FF0E  32                 	db	50
  1231  00FF0F  33                 	db	51
  1232  00FF10  34                 	db	52
  1233  00FF11  35                 	db	53
  1234  00FF12  36                 	db	54
  1235  00FF13  37                 	db	55
  1236  00FF14  38                 	db	56
  1237  00FF15  39                 	db	57
  1238  00FF16  61                 	db	97
  1239  00FF17  62                 	db	98
  1240  00FF18  63                 	db	99
  1241  00FF19  64                 	db	100
  1242  00FF1A  65                 	db	101
  1243  00FF1B  66                 	db	102
  1244  00FF1C  00                 	db	0
  1245  00FF1D                     __end_of_HexTable:
  1246                           	opt stack 0
  1247  00FF1D                     _defultSystemData:
  1248                           	opt stack 0
  1249  00FF1D  0000               	dw	0
  1250  00FF1F  0000               	dw	0
  1251  00FF21  00                 	db	0
  1252  00FF22  5F                 	db	95
  1253  00FF23  03E8               	dw	1000
  1254  00FF25  2710               	dw	10000
  1255  00FF27  0000               	dw	0
  1256  00FF29  1388               	dw	5000
  1257  00FF2B  0000               	dw	0
  1258  00FF2D  FF38               	dw	65336
  1259  00FF2F  FFFF               	dw	65535
  1260  00FF31  0000               	dw	0
  1261  00FF33  0000               	dw	0
  1262  00FF35  00                 	db	0
  1263  00FF36  00                 	db	0
  1264  00FF37  00                 	db	0
  1265  00FF38  00                 	db	0
  1266  00FF39  00                 	db	0
  1267  00FF3A  00                 	db	0
  1268  00FF3B  00                 	db	0
  1269  00FF3C  00                 	db	0
  1270  00FF3D  00                 	db	0
  1271  00FF3E  00                 	db	0
  1272  00FF3F  00                 	db	0
  1273  00FF40  00                 	db	0
  1274  00FF41  00                 	db	0
  1275  00FF42  00                 	db	0
  1276  00FF43  00                 	db	0
  1277  00FF44  00                 	db	0
  1278  00FF45  00                 	db	0
  1279  00FF46  00                 	db	0
  1280  00FF47  00                 	db	0
  1281  00FF48  00                 	db	0
  1282  00FF49  00                 	db	0
  1283  00FF4A  00                 	db	0
  1284  00FF4B  00                 	db	0
  1285  00FF4C  00                 	db	0
  1286  00FF4D  00                 	db	0
  1287  00FF4E  00                 	db	0
  1288  00FF4F  00                 	db	0
  1289  00FF50  00                 	db	0
  1290  00FF51  00                 	db	0
  1291  00FF52  00                 	db	0
  1292  00FF53  00                 	db	0
  1293  00FF54  00                 	db	0
  1294  00FF55  00                 	db	0
  1295  00FF56  00                 	db	0
  1296  00FF57  00                 	db	0
  1297  00FF58  00                 	db	0
  1298  00FF59  00                 	db	0
  1299  00FF5A  00                 	db	0
  1300  00FF5B  00                 	db	0
  1301  00FF5C  00                 	db	0
  1302  00FF5D  00                 	db	0
  1303  00FF5E  00                 	db	0
  1304  00FF5F  00                 	db	0
  1305  00FF60  00                 	db	0
  1306  00FF61  0000               	dw	0
  1307  00FF63  0000               	dw	0
  1308  00FF65  00                 	db	0
  1309  00FF66  00                 	db	0
  1310  00FF67  00                 	db	0
  1311  00FF68  00                 	db	0
  1312  00FF69  00                 	db	0
  1313  00FF6A  00                 	db	0
  1314  00FF6B  00                 	db	0
  1315  00FF6C  00                 	db	0
  1316  00FF6D  28                 	db	40
  1317  00FF6E  1E                 	db	30
  1318  00FF6F  14                 	db	20
  1319  00FF70  0A                 	db	10
  1320  00FF71  0000               	dw	0
  1321  00FF73  0000               	dw	0
  1322  00FF75  00                 	db	0
  1323  00FF76  00                 	db	0
  1324  00FF77  00                 	db	0
  1325  00FF78  00                 	db	0
  1326  00FF79  03E8               	dw	1000
  1327  00FF7B  0000               	dw	0
  1328  00FF7D  03E8               	dw	1000
  1329  00FF7F  0000               	dw	0
  1330  00FF81  0000               	dw	0
  1331  00FF83  0000               	dw	0
  1332  00FF85  00                 	db	0
  1333  00FF86  00                 	db	0
  1334  00FF87  00                 	db	0
  1335  00FF88  00                 	db	0
  1336  00FF89  03E8               	dw	1000
  1337  00FF8B  0000               	dw	0
  1338  00FF8D  03E8               	dw	1000
  1339  00FF8F  0000               	dw	0
  1340  00FF91  0000               	dw	0
  1341  00FF93  0000               	dw	0
  1342  00FF95  03E8               	dw	1000
  1343  00FF97  0000               	dw	0
  1344  00FF99  0000               	dw	0
  1345  00FF9B  0000               	dw	0
  1346  00FF9D  03E8               	dw	1000
  1347  00FF9F  0000               	dw	0
  1348  00FFA1  0000               	dw	0
  1349  00FFA3                     __end_of_defultSystemData:
  1350                           	opt stack 0
  1351  00FFA3                     _flashTestbuf:
  1352                           	opt stack 0
  1353  00FFA3  30                 	db	48
  1354  00FFA4  31                 	db	49
  1355  00FFA5  32                 	db	50
  1356  00FFA6  33                 	db	51
  1357  00FFA7  34                 	db	52
  1358  00FFA8  35                 	db	53
  1359  00FFA9  36                 	db	54
  1360  00FFAA  37                 	db	55
  1361  00FFAB  38                 	db	56
  1362  00FFAC  39                 	db	57
  1363  00FFAD  30                 	db	48
  1364  00FFAE  31                 	db	49
  1365  00FFAF  32                 	db	50
  1366  00FFB0  33                 	db	51
  1367  00FFB1  34                 	db	52
  1368  00FFB2  35                 	db	53
  1369  00FFB3  36                 	db	54
  1370  00FFB4  37                 	db	55
  1371  00FFB5  38                 	db	56
  1372  00FFB6  39                 	db	57
  1373  00FFB7  30                 	db	48
  1374  00FFB8  31                 	db	49
  1375  00FFB9  32                 	db	50
  1376  00FFBA  33                 	db	51
  1377  00FFBB  34                 	db	52
  1378  00FFBC  35                 	db	53
  1379  00FFBD  36                 	db	54
  1380  00FFBE  37                 	db	55
  1381  00FFBF  38                 	db	56
  1382  00FFC0  39                 	db	57
  1383  00FFC1  30                 	db	48
  1384  00FFC2  31                 	db	49
  1385  00FFC3  32                 	db	50
  1386  00FFC4  33                 	db	51
  1387  00FFC5  34                 	db	52
  1388  00FFC6  35                 	db	53
  1389  00FFC7  36                 	db	54
  1390  00FFC8  37                 	db	55
  1391  00FFC9  38                 	db	56
  1392  00FFCA  39                 	db	57
  1393  00FFCB  30                 	db	48
  1394  00FFCC  31                 	db	49
  1395  00FFCD  32                 	db	50
  1396  00FFCE  33                 	db	51
  1397  00FFCF  34                 	db	52
  1398  00FFD0  35                 	db	53
  1399  00FFD1  36                 	db	54
  1400  00FFD2  37                 	db	55
  1401  00FFD3  38                 	db	56
  1402  00FFD4  39                 	db	57
  1403  00FFD5  30                 	db	48
  1404  00FFD6  31                 	db	49
  1405  00FFD7  32                 	db	50
  1406  00FFD8  33                 	db	51
  1407  00FFD9  34                 	db	52
  1408  00FFDA  35                 	db	53
  1409  00FFDB  36                 	db	54
  1410  00FFDC  37                 	db	55
  1411  00FFDD  38                 	db	56
  1412  00FFDE  39                 	db	57
  1413  00FFDF  30                 	db	48
  1414  00FFE0  31                 	db	49
  1415  00FFE1  32                 	db	50
  1416  00FFE2  33                 	db	51
  1417  00FFE3  00                 	db	0
  1418  00FFE4                     __end_of_flashTestbuf:
  1419                           	opt stack 0
  1420  0000                     _RTCVALH	set	3933
  1421  0000                     _RTCVALL	set	3932
  1422  0000                     _stRTCCFGbits	set	3935
  1423  0000                     _ALRMCFGbits	set	3931
  1424  0000                     _ALRMRPT	set	3930
  1425  0000                     _PADCFG1bits	set	3924
  1426  0000                     _RTCCFGbits	set	3935
  1427  0000                     _PR2	set	4043
  1428  0000                     _T2CON	set	4042
  1429  0000                     _RCONbits	set	4048
  1430  0000                     _T1CONbits	set	4045
  1431  0000                     _IPR3bits	set	4005
  1432  0000                     _PIR3bits	set	4004
  1433  0000                     _PIE3bits	set	4003
  1434  0000                     _INTCON2bits	set	4081
  1435  0000                     _OSCCONbits	set	4051
  1436  0000                     _FSR0H	set	4074
  1437  0000                     _FSR0L	set	4073
  1438  0000                     _TABLAT	set	4085
  1439  0000                     _TBLPTRU	set	4088
  1440  0000                     _TBLPTRH	set	4087
  1441  0000                     _TBLPTRL	set	4086
  1442  0000                     _EECON1bits	set	4006
  1443  0000                     _INTCONbits	set	4082
  1444  0000                     _INTCON	set	4082
  1445  0000                     _LCDCON	set	4008
  1446  0000                     _TRISG	set	3992
  1447  0000                     _LCDSE5	set	4026
  1448  0000                     _LCDSE4	set	4025
  1449  0000                     _LCDSE3	set	4024
  1450  0000                     _LCDSE2	set	4023
  1451  0000                     _LCDSE1	set	4022
  1452  0000                     _LCDSE0	set	4009
  1453  0000                     _LCDPSbits	set	4010
  1454  0000                     _LCDREG	set	4050
  1455  0000                     _LCDDATA23	set	3965
  1456  0000                     _LCDDATA22	set	3964
  1457  0000                     _LCDDATA21	set	3963
  1458  0000                     _LCDDATA20	set	3962
  1459  0000                     _LCDDATA19	set	3961
  1460  0000                     _LCDDATA18	set	3960
  1461  0000                     _LCDDATA17	set	3959
  1462  0000                     _LCDDATA16	set	3958
  1463  0000                     _LCDDATA15	set	3957
  1464  0000                     _LCDDATA14	set	3956
  1465  0000                     _LCDDATA13	set	3955
  1466  0000                     _LCDDATA12	set	3954
  1467  0000                     _LCDDATA11	set	3953
  1468  0000                     _LCDDATA10	set	3952
  1469  0000                     _LCDDATA9	set	3951
  1470  0000                     _LCDDATA8	set	3950
  1471  0000                     _LCDDATA7	set	3949
  1472  0000                     _LCDDATA6	set	3948
  1473  0000                     _LCDDATA5	set	3947
  1474  0000                     _LCDDATA4	set	4031
  1475  0000                     _LCDDATA3	set	4030
  1476  0000                     _LCDDATA2	set	4029
  1477  0000                     _LCDDATA1	set	4028
  1478  0000                     _LCDDATA0	set	4027
  1479  0000                     _PORTB	set	3969
  1480  0000                     _ADRESL	set	4035
  1481  0000                     _ADRESH	set	4036
  1482  0000                     _IPR1bits	set	3999
  1483  0000                     _PIE1bits	set	3997
  1484  0000                     _PIR1bits	set	3998
  1485  0000                     _ADCON0bits	set	4034
  1486  0000                     _ADCON2bits	set	4032
  1487  0000                     _ADCON1	set	4033
  1488  0000                     _PORTC	set	3970
  1489  0000                     _LATC	set	3979
  1490  0000                     _TRISC	set	3988
  1491  0000                     _LATB	set	3978
  1492  0000                     _TRISB	set	3987
  1493  00FFE4                     STR_2:
  1494  00FFE4  20                 	db	32
  1495  00FFE5  20                 	db	32
  1496  00FFE6  20                 	db	32
  1497  00FFE7  20                 	db	32
  1498  00FFE8  20                 	db	32
  1499  00FFE9  20                 	db	32
  1500  00FFEA  20                 	db	32
  1501  00FFEB  20                 	db	32
  1502  00FFEC  00                 	db	0
  1503  00FFED                     STR_1:
  1504  00FFED  63                 	db	99	;'c'
  1505  00FFEE  73                 	db	115	;'s'
  1506  00FFEF  36                 	db	54	;'6'
  1507  00FFF0  36                 	db	54	;'6'
  1508  00FFF1  00                 	db	0
  1509  00FFF2                     STR_3:
  1510  00FFF2  20                 	db	32
  1511  00FFF3  70                 	db	112	;'p'
  1512  00FFF4  73                 	db	115	;'s'
  1513  00FFF5  64                 	db	100	;'d'
  1514  00FFF6  00                 	db	0
  1515                           
  1516                           ; #config settings
  1517  00FFF7  00                 	db	0	; dummy byte at the end
  1518  0000                     
  1519                           	psect	cinit
  1520  0017F0                     __pcinit:
  1521                           	opt stack 0
  1522  0017F0                     start_initialization:
  1523                           	opt stack 0
  1524  0017F0                     __initialization:
  1525                           	opt stack 0
  1526                           
  1527                           ; Initialize objects allocated to BANK1 (7 bytes)
  1528                           ; load TBLPTR registers with __pidataBANK1
  1529  0017F0  0E61               	movlw	low __pidataBANK1
  1530  0017F2  6EF6               	movwf	tblptrl,c
  1531  0017F4  0E33               	movlw	high __pidataBANK1
  1532  0017F6  6EF7               	movwf	tblptrh,c
  1533  0017F8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1534  0017FA  6EF8               	movwf	tblptru,c
  1535  0017FC  EE01  F07B         	lfsr	0,__pdataBANK1
  1536  001800  EE10 F007          	lfsr	1,7
  1537  001804                     copy_data0:
  1538  001804  0009               	tblrd		*+
  1539  001806  CFF5 FFEE          	movff	tablat,postinc0
  1540  00180A  50E5               	movf	postdec1,w,c
  1541  00180C  50E1               	movf	fsr1l,w,c
  1542  00180E  E1FA               	bnz	copy_data0
  1543                           
  1544                           ; Initialize objects allocated to BANK0 (9 bytes)
  1545                           ; load TBLPTR registers with __pidataBANK0
  1546  001810  0E58               	movlw	low __pidataBANK0
  1547  001812  6EF6               	movwf	tblptrl,c
  1548  001814  0E33               	movlw	high __pidataBANK0
  1549  001816  6EF7               	movwf	tblptrh,c
  1550  001818  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1551  00181A  6EF8               	movwf	tblptru,c
  1552  00181C  EE00  F0F7         	lfsr	0,__pdataBANK0
  1553  001820  EE10 F009          	lfsr	1,9
  1554  001824                     copy_data1:
  1555  001824  0009               	tblrd		*+
  1556  001826  CFF5 FFEE          	movff	tablat,postinc0
  1557  00182A  50E5               	movf	postdec1,w,c
  1558  00182C  50E1               	movf	fsr1l,w,c
  1559  00182E  E1FA               	bnz	copy_data1
  1560                           
  1561                           ; Initialize objects allocated to COMRAM (1 bytes)
  1562                           ; load TBLPTR registers with __pidataCOMRAM
  1563  001830  0E72               	movlw	low __pidataCOMRAM
  1564  001832  6EF6               	movwf	tblptrl,c
  1565  001834  0E33               	movlw	high __pidataCOMRAM
  1566  001836  6EF7               	movwf	tblptrh,c
  1567  001838  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1568  00183A  6EF8               	movwf	tblptru,c
  1569  00183C  0009               	tblrd		*+	;fetch initializer
  1570  00183E  CFF5 F03F          	movff	tablat,__pdataCOMRAM
  1571                           
  1572                           ; Clear objects allocated to BANK5 (256 bytes)
  1573  001842  EE05  F000         	lfsr	0,__pbssBANK5
  1574  001846  EE11 F000          	lfsr	1,256
  1575  00184A                     clear_0:
  1576  00184A  6AEE               	clrf	postinc0,c
  1577  00184C  50E5               	movf	postdec1,w,c
  1578  00184E  50E1               	movf	fsr1l,w,c
  1579  001850  E1FC               	bnz	clear_0
  1580  001852  50E2               	movf	fsr1h,w,c
  1581  001854  E1FA               	bnz	clear_0
  1582                           
  1583                           ; Clear objects allocated to BANK4 (256 bytes)
  1584  001856  EE04  F000         	lfsr	0,__pbssBANK4
  1585  00185A  EE11 F000          	lfsr	1,256
  1586  00185E                     clear_1:
  1587  00185E  6AEE               	clrf	postinc0,c
  1588  001860  50E5               	movf	postdec1,w,c
  1589  001862  50E1               	movf	fsr1l,w,c
  1590  001864  E1FC               	bnz	clear_1
  1591  001866  50E2               	movf	fsr1h,w,c
  1592  001868  E1FA               	bnz	clear_1
  1593                           
  1594                           ; Clear objects allocated to BANK3 (162 bytes)
  1595  00186A  EE03  F000         	lfsr	0,__pbssBANK3
  1596  00186E  0EA2               	movlw	162
  1597  001870                     clear_2:
  1598  001870  6AEE               	clrf	postinc0,c
  1599  001872  06E8               	decf	wreg,f,c
  1600  001874  E1FD               	bnz	clear_2
  1601                           
  1602                           ; Clear objects allocated to BANK2 (162 bytes)
  1603  001876  EE02  F000         	lfsr	0,__pbssBANK2
  1604  00187A  0EA2               	movlw	162
  1605  00187C                     clear_3:
  1606  00187C  6AEE               	clrf	postinc0,c
  1607  00187E  06E8               	decf	wreg,f,c
  1608  001880  E1FD               	bnz	clear_3
  1609                           
  1610                           ; Clear objects allocated to BANK1 (94 bytes)
  1611  001882  EE01  F000         	lfsr	0,__pbssBANK1
  1612  001886  0E5E               	movlw	94
  1613  001888                     clear_4:
  1614  001888  6AEE               	clrf	postinc0,c
  1615  00188A  06E8               	decf	wreg,f,c
  1616  00188C  E1FD               	bnz	clear_4
  1617                           
  1618                           ; Clear objects allocated to BANK0 (137 bytes)
  1619  00188E  EE00  F060         	lfsr	0,__pbssBANK0
  1620  001892  0E89               	movlw	137
  1621  001894                     clear_5:
  1622  001894  6AEE               	clrf	postinc0,c
  1623  001896  06E8               	decf	wreg,f,c
  1624  001898  E1FD               	bnz	clear_5
  1625                           
  1626                           ; Clear objects allocated to COMRAM (31 bytes)
  1627  00189A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1628  00189E  0E1F               	movlw	31
  1629  0018A0                     clear_6:
  1630  0018A0  6AEE               	clrf	postinc0,c
  1631  0018A2  06E8               	decf	wreg,f,c
  1632  0018A4  E1FD               	bnz	clear_6
  1633  0018A6                     end_of_initialization:
  1634                           	opt stack 0
  1635  0018A6                     __end_of__initialization:
  1636                           	opt stack 0
  1637  0018A6  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1638  0018A8  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1639  0018AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1640  0018AC  6EF8               	movwf	tblptru,c
  1641  0018AE  0100               	movlb	0
  1642  0018B0  EF30  F017         	goto	_main	;jump to C main() function
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           postdec1	equ	0xFE5
  1650                           fsr1h	equ	0xFE2
  1651                           fsr1l	equ	0xFE1
  1652                           
  1653                           	psect	bssCOMRAM
  1654  000001                     __pbssCOMRAM:
  1655                           	opt stack 0
  1656  000001                     _adjValue:
  1657                           	opt stack 0
  1658  000001                     	ds	4
  1659  000005                     _dlyTicker:
  1660                           	opt stack 0
  1661  000005                     	ds	2
  1662  000007                     _fastSampTimer:
  1663                           	opt stack 0
  1664  000007                     	ds	2
  1665  000009                     _pAds1115DiffPrObj:
  1666                           	opt stack 0
  1667  000009                     	ds	2
  1668  00000B                     _userTicker_ms:
  1669                           	opt stack 0
  1670  00000B                     	ds	2
  1671  00000D                     _p_prEepromObj:
  1672                           	opt stack 0
  1673  00000D                     	ds	2
  1674  00000F                     _pdiff_prEepromObj:
  1675                           	opt stack 0
  1676  00000F                     	ds	2
  1677  000011                     _dlyTickerEn:
  1678                           	opt stack 0
  1679  000011                     	ds	1
  1680  000012                     _st_Bj:
  1681                           	opt stack 0
  1682  000012                     	ds	1
  1683  000013                     _pcf8574Value:
  1684                           	opt stack 0
  1685  000013                     	ds	1
  1686  000014                     _inSocSampleTimer:
  1687                           	opt stack 0
  1688  000014                     	ds	1
  1689  000015                     _slowSampleTimer:
  1690                           	opt stack 0
  1691  000015                     	ds	1
  1692  000016                     _diffSampCh:
  1693                           	opt stack 0
  1694  000016                     	ds	1
  1695  000017                     _diffSampCount_D23:
  1696                           	opt stack 0
  1697  000017                     	ds	1
  1698  000018                     _diffSampCount_D01:
  1699                           	opt stack 0
  1700  000018                     	ds	1
  1701  000019                     _calibCol:
  1702                           	opt stack 0
  1703  000019                     	ds	1
  1704  00001A                     _calibRow:
  1705                           	opt stack 0
  1706  00001A                     	ds	1
  1707  00001B                     _menu:
  1708                           	opt stack 0
  1709  00001B                     	ds	1
  1710  00001C                     _dwm:
  1711                           	opt stack 0
  1712  00001C                     	ds	1
  1713  00001D                     _passWord:
  1714                           	opt stack 0
  1715  00001D                     	ds	2
  1716  00001F                     _adjLocation:
  1717                           	opt stack 0
  1718  00001F                     	ds	1
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1h	equ	0xFE2
  1727                           fsr1l	equ	0xFE1
  1728                           
  1729                           	psect	dataCOMRAM
  1730  00003F                     __pdataCOMRAM:
  1731                           	opt stack 0
  1732  00003F                     _glNoEventTimeOut:
  1733                           	opt stack 0
  1734  00003F                     	ds	1
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1h	equ	0xFE2
  1743                           fsr1l	equ	0xFE1
  1744                           
  1745                           	psect	bssBANK0
  1746  000060                     __pbssBANK0:
  1747                           	opt stack 0
  1748  000060                     _pLCD:
  1749                           	opt stack 0
  1750  000060                     	ds	24
  1751  000078                     _pcf8574:
  1752                           	opt stack 0
  1753  000078                     	ds	11
  1754  000083                     _glRtc:
  1755                           	opt stack 0
  1756  000083                     	ds	7
  1757  00008A                     _glTicker:
  1758                           	opt stack 0
  1759  00008A                     	ds	4
  1760  00008E                     ___mflot32_2_int32@F7613:
  1761                           	opt stack 0
  1762  00008E                     	ds	4
  1763  000092                     ___int32_2_mflot32@F7608:
  1764                           	opt stack 0
  1765  000092                     	ds	4
  1766  000096                     _x_Pemperature:
  1767                           	opt stack 0
  1768  000096                     	ds	4
  1769  00009A                     _x_Pressure:
  1770                           	opt stack 0
  1771  00009A                     	ds	4
  1772  00009E                     _x_Weight:
  1773                           	opt stack 0
  1774  00009E                     	ds	4
  1775  0000A2                     _x_Hight:
  1776                           	opt stack 0
  1777  0000A2                     	ds	4
  1778  0000A6                     _x_DiffPressure:
  1779                           	opt stack 0
  1780  0000A6                     	ds	4
  1781  0000AA                     _sampBufRefInSoc:
  1782                           	opt stack 0
  1783  0000AA                     	ds	2
  1784  0000AC                     _sampBufBatInSoc:
  1785                           	opt stack 0
  1786  0000AC                     	ds	2
  1787  0000AE                     _sampBufExPr1InSoc:
  1788                           	opt stack 0
  1789  0000AE                     	ds	2
  1790  0000B0                     _sampBufExPr0InSoc:
  1791                           	opt stack 0
  1792  0000B0                     	ds	2
  1793  0000B2                     _sampBufDiffPr_S1:
  1794                           	opt stack 0
  1795  0000B2                     	ds	2
  1796  0000B4                     _pAds1115PrObj:
  1797                           	opt stack 0
  1798  0000B4                     	ds	2
  1799  0000B6                     _pAdjValue:
  1800                           	opt stack 0
  1801  0000B6                     	ds	2
  1802  0000B8                     _adc_iRef:
  1803                           	opt stack 0
  1804  0000B8                     	ds	2
  1805  0000BA                     _adc_ibat:
  1806                           	opt stack 0
  1807  0000BA                     	ds	2
  1808  0000BC                     _adc_iPrEx1:
  1809                           	opt stack 0
  1810  0000BC                     	ds	2
  1811  0000BE                     _adc_iPrEx0:
  1812                           	opt stack 0
  1813  0000BE                     	ds	2
  1814  0000C0                     _adc_Pr:
  1815                           	opt stack 0
  1816  0000C0                     	ds	2
  1817  0000C2                     _adc_exPt100Line:
  1818                           	opt stack 0
  1819  0000C2                     	ds	2
  1820  0000C4                     _adc_exPt100:
  1821                           	opt stack 0
  1822  0000C4                     	ds	2
  1823  0000C6                     _adc_diffGnd:
  1824                           	opt stack 0
  1825  0000C6                     	ds	2
  1826  0000C8                     _adc_diffVcc:
  1827                           	opt stack 0
  1828  0000C8                     	ds	2
  1829  0000CA                     _adc_diffBrg:
  1830                           	opt stack 0
  1831  0000CA                     	ds	2
  1832  0000CC                     _adc_diffPr:
  1833                           	opt stack 0
  1834  0000CC                     	ds	2
  1835  0000CE                     _glbEvent:
  1836                           	opt stack 0
  1837  0000CE                     	ds	1
  1838  0000CF                     _commonSampleTimer:
  1839                           	opt stack 0
  1840  0000CF                     	ds	1
  1841  0000D0                     _keyValue:
  1842                           	opt stack 0
  1843  0000D0                     	ds	1
  1844  0000D1                     _sampBufPt100ExB:
  1845                           	opt stack 0
  1846  0000D1                     	ds	8
  1847  0000D9                     _sampBufPt100ExA:
  1848                           	opt stack 0
  1849  0000D9                     	ds	8
  1850  0000E1                     _x_prDiffData:
  1851                           	opt stack 0
  1852  0000E1                     	ds	8
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           
  1863                           	psect	dataBANK0
  1864  0000F7                     __pdataBANK0:
  1865                           	opt stack 0
  1866  0000F7                     ui_disp_start_cs600@F7622:
  1867                           	opt stack 0
  1868  0000F7                     	ds	6
  1869  0000FD                     _fpSysData:
  1870                           	opt stack 0
  1871  0000FD                     	ds	3
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           postdec1	equ	0xFE5
  1879                           fsr1h	equ	0xFE2
  1880                           fsr1l	equ	0xFE1
  1881                           
  1882                           	psect	bssBANK1
  1883  000100                     __pbssBANK1:
  1884                           	opt stack 0
  1885  000100                     _ads1115Chip1:
  1886                           	opt stack 0
  1887  000100                     	ds	16
  1888  000110                     _ads1115Chip0:
  1889                           	opt stack 0
  1890  000110                     	ds	16
  1891  000120                     _sampBufDiffPr_D23:
  1892                           	opt stack 0
  1893  000120                     	ds	16
  1894  000130                     _sampBufDiffPr_D01:
  1895                           	opt stack 0
  1896  000130                     	ds	16
  1897  000140                     _at24c02Ch0:
  1898                           	opt stack 0
  1899  000140                     	ds	11
  1900  00014B                     _at24c02Ch1:
  1901                           	opt stack 0
  1902  00014B                     	ds	11
  1903  000156                     _sampBufPr:
  1904                           	opt stack 0
  1905  000156                     	ds	8
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1h	equ	0xFE2
  1914                           fsr1l	equ	0xFE1
  1915                           
  1916                           	psect	dataBANK1
  1917  00017B                     __pdataBANK1:
  1918                           	opt stack 0
  1919  00017B                     _defalutRtc:
  1920                           	opt stack 0
  1921  00017B                     	ds	7
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           postinc0	equ	0xFEE
  1927                           wreg	equ	0xFE8
  1928                           postdec1	equ	0xFE5
  1929                           fsr1h	equ	0xFE2
  1930                           fsr1l	equ	0xFE1
  1931                           
  1932                           	psect	bssBANK2
  1933  000200                     __pbssBANK2:
  1934                           	opt stack 0
  1935  000200                     _diff_prCalibTabDef:
  1936                           	opt stack 0
  1937  000200                     	ds	162
  1938                           tblptru	equ	0xFF8
  1939                           tblptrh	equ	0xFF7
  1940                           tblptrl	equ	0xFF6
  1941                           tablat	equ	0xFF5
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           postdec1	equ	0xFE5
  1945                           fsr1h	equ	0xFE2
  1946                           fsr1l	equ	0xFE1
  1947                           
  1948                           	psect	bssBANK3
  1949  000300                     __pbssBANK3:
  1950                           	opt stack 0
  1951  000300                     _prCalibTabDef:
  1952                           	opt stack 0
  1953  000300                     	ds	162
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           
  1964                           	psect	bssBANK4
  1965  000400                     __pbssBANK4:
  1966                           	opt stack 0
  1967  000400                     _globleBuffer0:
  1968                           	opt stack 0
  1969  000400                     	ds	256
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           postdec1	equ	0xFE5
  1977                           fsr1h	equ	0xFE2
  1978                           fsr1l	equ	0xFE1
  1979                           
  1980                           	psect	bssBANK5
  1981  000500                     __pbssBANK5:
  1982                           	opt stack 0
  1983  000500                     _globleBuffer1:
  1984                           	opt stack 0
  1985  000500                     	ds	256
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           postinc0	equ	0xFEE
  1991                           wreg	equ	0xFE8
  1992                           postdec1	equ	0xFE5
  1993                           fsr1h	equ	0xFE2
  1994                           fsr1l	equ	0xFE1
  1995                           
  1996                           	psect	cstackBANK1
  1997  00015E                     __pcstackBANK1:
  1998                           	opt stack 0
  1999  00015E                     ?___x_sample_fliter:
  2000                           	opt stack 0
  2001  00015E                     ?___int32_2_mflot32:
  2002                           	opt stack 0
  2003  00015E                     lcd_set_com_seg@com:
  2004                           	opt stack 0
  2005  00015E                     ___lwmod@counter:
  2006                           	opt stack 0
  2007  00015E                     ___x_sample_fliter@buf:
  2008                           	opt stack 0
  2009  00015E                     ___x_sample_fifo@buf:
  2010                           	opt stack 0
  2011  00015E                     sample_in_soc_adc_ch@t16:
  2012                           	opt stack 0
  2013  00015E                     ads1115_read_conversion@result:
  2014                           	opt stack 0
  2015  00015E                     ___int32_2_mflot32@x:
  2016                           	opt stack 0
  2017                           
  2018                           ; 4 bytes @ 0x0
  2019  00015E                     	ds	1
  2020  00015F                     lcd_set_com_seg@offset:
  2021                           	opt stack 0
  2022  00015F                     key_adj_value_fixed_point@value:
  2023                           	opt stack 0
  2024                           
  2025                           ; 2 bytes @ 0x1
  2026  00015F                     	ds	1
  2027  000160                     ___x_sample_fliter@len:
  2028                           	opt stack 0
  2029  000160                     lcd_set_com_seg@bits:
  2030                           	opt stack 0
  2031  000160                     ___x_sample_fifo@x:
  2032                           	opt stack 0
  2033  000160                     sample_in_soc_adc_ch@ret:
  2034                           	opt stack 0
  2035                           
  2036                           ; 4 bytes @ 0x2
  2037  000160                     	ds	1
  2038  000161                     key_adj_value_fixed_point@loc:
  2039                           	opt stack 0
  2040  000161                     ___x_sample_fliter@loop:
  2041                           	opt stack 0
  2042  000161                     lcd_disp_level_bar@__bar:
  2043                           	opt stack 0
  2044  000161                     lcd_show_dp@show:
  2045                           	opt stack 0
  2046  000161                     lcd_show_chr@chr:
  2047                           	opt stack 0
  2048                           
  2049                           ; 1 bytes @ 0x3
  2050  000161                     	ds	1
  2051  000162                     ??___int32_2_mflot32:
  2052  000162                     ??___x_sample_fliter:
  2053  000162                     ___x_sample_fifo@len:
  2054                           	opt stack 0
  2055  000162                     lcd_disp_level_bar@bar:
  2056                           	opt stack 0
  2057  000162                     lcd_show_dp@loc:
  2058                           	opt stack 0
  2059  000162                     lcd_show_chr@loc:
  2060                           	opt stack 0
  2061  000162                     key_adj_value_fixed_point@dloc:
  2062                           	opt stack 0
  2063                           
  2064                           ; 2 bytes @ 0x4
  2065  000162                     	ds	1
  2066  000163                     ??___x_sample_fifo:
  2067  000163                     lcd_disp_level@level:
  2068                           	opt stack 0
  2069  000163                     lcd_show_chr@code:
  2070                           	opt stack 0
  2071                           
  2072                           ; 1 bytes @ 0x5
  2073  000163                     	ds	1
  2074  000164                     sample_in_soc_adc_ch@i:
  2075                           	opt stack 0
  2076  000164                     lcd_disp_level@i:
  2077                           	opt stack 0
  2078  000164                     key_adj_value_fixed_point@t16:
  2079                           	opt stack 0
  2080  000164                     lcd_show_string_l0@str:
  2081                           	opt stack 0
  2082  000164                     lcd_show_string_l1@str:
  2083                           	opt stack 0
  2084  000164                     lcd_show_string@str:
  2085                           	opt stack 0
  2086                           
  2087                           ; 2 bytes @ 0x6
  2088  000164                     	ds	2
  2089  000166                     lcd_show_string_l0@t8:
  2090                           	opt stack 0
  2091  000166                     lcd_show_string_l1@t8:
  2092                           	opt stack 0
  2093  000166                     lcd_show_string@t8:
  2094                           	opt stack 0
  2095  000166                     ___int32_2_mflot32@t32:
  2096                           	opt stack 0
  2097                           
  2098                           ; 4 bytes @ 0x8
  2099  000166                     	ds	1
  2100  000167                     ui_disp_adj_xfixed_pt@str:
  2101                           	opt stack 0
  2102  000167                     ui_disp_start_cs600@buf:
  2103                           	opt stack 0
  2104                           
  2105                           ; 6 bytes @ 0x9
  2106  000167                     	ds	1
  2107  000168                     ___x_sample_fliter@maxLoc:
  2108                           	opt stack 0
  2109                           
  2110                           ; 1 bytes @ 0xA
  2111  000168                     	ds	1
  2112  000169                     ___x_sample_fliter@minLoc:
  2113                           	opt stack 0
  2114  000169                     ui_disp_adj_xfixed_pt@x:
  2115                           	opt stack 0
  2116  000169                     ___x_sample_fifo@ret:
  2117                           	opt stack 0
  2118                           
  2119                           ; 4 bytes @ 0xB
  2120  000169                     	ds	1
  2121  00016A                     ___x_sample_fliter@max:
  2122                           	opt stack 0
  2123  00016A                     ___int32_2_mflot32@mf:
  2124                           	opt stack 0
  2125                           
  2126                           ; 4 bytes @ 0xC
  2127  00016A                     	ds	1
  2128  00016B                     ui_disp_adj_xfixed_pt@loc:
  2129                           	opt stack 0
  2130                           
  2131                           ; 1 bytes @ 0xD
  2132  00016B                     	ds	1
  2133  00016C                     ??_ui_disp_adj_xfixed_pt:
  2134  00016C                     ___x_sample_fliter@min:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0xE
  2138  00016C                     	ds	1
  2139  00016D                     ui_disp_start_cs600@dly:
  2140                           	opt stack 0
  2141  00016D                     ___x_sample_fifo@i:
  2142                           	opt stack 0
  2143                           
  2144                           ; 1 bytes @ 0xF
  2145  00016D                     	ds	1
  2146  00016E                     ui_disp_start_cs600@t8:
  2147                           	opt stack 0
  2148  00016E                     sample_pr_chip_comm@ret:
  2149                           	opt stack 0
  2150  00016E                     ___enter_menu_set_base_zero@fps:
  2151                           	opt stack 0
  2152  00016E                     ___x_sample_fliter@t32:
  2153                           	opt stack 0
  2154  00016E                     ui_disp_adj_xfixed_pt@buf:
  2155                           	opt stack 0
  2156                           
  2157                           ; 10 bytes @ 0x10
  2158  00016E                     	ds	1
  2159  00016F                     sample_pr_chip_comm@t16:
  2160                           	opt stack 0
  2161                           
  2162                           ; 2 bytes @ 0x11
  2163  00016F                     	ds	1
  2164  000170                     ??_key_process_set_down_long:
  2165                           
  2166                           ; 1 bytes @ 0x12
  2167  000170                     	ds	2
  2168  000172                     ___x_sample_fliter@i:
  2169                           	opt stack 0
  2170                           
  2171                           ; 1 bytes @ 0x14
  2172  000172                     	ds	1
  2173  000173                     sample_diff_pr_fliter@xin:
  2174                           	opt stack 0
  2175                           
  2176                           ; 2 bytes @ 0x15
  2177  000173                     	ds	2
  2178  000175                     sample_diff_pr_chip_fast@ret:
  2179                           	opt stack 0
  2180  000175                     sample_diff_pr_chip_slow@ret:
  2181                           	opt stack 0
  2182                           
  2183                           ; 1 bytes @ 0x17
  2184  000175                     	ds	1
  2185  000176                     sample_diff_pr_chip_fast@t16:
  2186                           	opt stack 0
  2187  000176                     sample_diff_pr_chip_slow@t16:
  2188                           	opt stack 0
  2189                           
  2190                           ; 2 bytes @ 0x18
  2191  000176                     	ds	2
  2192  000178                     key_process@tm:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x1A
  2196  000178                     	ds	2
  2197  00017A                     key_process@key:
  2198                           	opt stack 0
  2199                           
  2200                           ; 1 bytes @ 0x1C
  2201  00017A                     	ds	1
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           postinc0	equ	0xFEE
  2207                           wreg	equ	0xFE8
  2208                           postdec1	equ	0xFE5
  2209                           fsr1h	equ	0xFE2
  2210                           fsr1l	equ	0xFE1
  2211                           
  2212                           	psect	cstackBANK0
  2213  0000E9                     __pcstackBANK0:
  2214                           	opt stack 0
  2215  0000E9                     ??___enter_menu_set_density:
  2216  0000E9                     ??___enter_menu_set_pose:
  2217  0000E9                     ?___exp_10:
  2218                           	opt stack 0
  2219  0000E9                     ?___awdiv:
  2220                           	opt stack 0
  2221  0000E9                     ?___awmod:
  2222                           	opt stack 0
  2223  0000E9                     ?___aldiv:
  2224                           	opt stack 0
  2225  0000E9                     ?___lldiv:
  2226                           	opt stack 0
  2227  0000E9                     iic_send_ack@ack:
  2228                           	opt stack 0
  2229  0000E9                     iic_waite_ack@timeout:
  2230                           	opt stack 0
  2231  0000E9                     iic_received_byte@ret:
  2232                           	opt stack 0
  2233  0000E9                     lcd_disp_get_code@chr:
  2234                           	opt stack 0
  2235  0000E9                     lcd_disp_all@x:
  2236                           	opt stack 0
  2237  0000E9                     key_shift_loc_fixed_point@loc:
  2238                           	opt stack 0
  2239  0000E9                     ___x_arrange_str@str:
  2240                           	opt stack 0
  2241  0000E9                     m_mem_cpy@d:
  2242                           	opt stack 0
  2243  0000E9                     m_int8_2_hex@str:
  2244                           	opt stack 0
  2245  0000E9                     ads1115_init@pAds1115:
  2246                           	opt stack 0
  2247  0000E9                     ads1115_set_mux@pAds1115:
  2248                           	opt stack 0
  2249  0000E9                     delay_us@dly:
  2250                           	opt stack 0
  2251  0000E9                     rtc_set@rtc:
  2252                           	opt stack 0
  2253  0000E9                     ticker_dly@ms:
  2254                           	opt stack 0
  2255  0000E9                     ___awdiv@dividend:
  2256                           	opt stack 0
  2257  0000E9                     ___awmod@dividend:
  2258                           	opt stack 0
  2259  0000E9                     ___aldiv@dividend:
  2260                           	opt stack 0
  2261  0000E9                     ___lldiv@dividend:
  2262                           	opt stack 0
  2263                           
  2264                           ; 4 bytes @ 0x0
  2265  0000E9                     	ds	1
  2266  0000EA                     iic_send_byte@x:
  2267                           	opt stack 0
  2268  0000EA                     iic_received_byte@i:
  2269                           	opt stack 0
  2270  0000EA                     lcd_disp_get_code@ret:
  2271                           	opt stack 0
  2272  0000EA                     lcd_disp_all@i:
  2273                           	opt stack 0
  2274  0000EA                     ___enter_menu_set_pose@fps:
  2275                           	opt stack 0
  2276                           
  2277                           ; 2 bytes @ 0x1
  2278  0000EA                     	ds	1
  2279  0000EB                     ___exp_10@n:
  2280                           	opt stack 0
  2281  0000EB                     key_shift_loc_fixed_point@min:
  2282                           	opt stack 0
  2283  0000EB                     ___x_arrange_str@len:
  2284                           	opt stack 0
  2285  0000EB                     m_int8_2_hex@b:
  2286                           	opt stack 0
  2287  0000EB                     ads1115_init@slvaddr:
  2288                           	opt stack 0
  2289  0000EB                     ads1115_set_mux@mux:
  2290                           	opt stack 0
  2291  0000EB                     iic_send_byte@i:
  2292                           	opt stack 0
  2293  0000EB                     iic_received_byte_if_ack@ack:
  2294                           	opt stack 0
  2295  0000EB                     lcd_disp_get_code@i:
  2296                           	opt stack 0
  2297  0000EB                     ___enter_menu_set_density@fps:
  2298                           	opt stack 0
  2299  0000EB                     m_mem_cpy@s:
  2300                           	opt stack 0
  2301  0000EB                     delay_us@i:
  2302                           	opt stack 0
  2303  0000EB                     rtc_set@stp:
  2304                           	opt stack 0
  2305  0000EB                     ___awdiv@divisor:
  2306                           	opt stack 0
  2307  0000EB                     ___awmod@divisor:
  2308                           	opt stack 0
  2309                           
  2310                           ; 2 bytes @ 0x2
  2311  0000EB                     	ds	1
  2312  0000EC                     ??_ads1115_set_mux:
  2313  0000EC                     ?___wmul:
  2314                           	opt stack 0
  2315  0000EC                     ?___lwdiv:
  2316                           	opt stack 0
  2317  0000EC                     key_shift_loc_fixed_point@max:
  2318                           	opt stack 0
  2319  0000EC                     ___x_arrange_str@i:
  2320                           	opt stack 0
  2321  0000EC                     m_int8_2_hex@t8:
  2322                           	opt stack 0
  2323  0000EC                     iic_received_byte_if_ack@ret:
  2324                           	opt stack 0
  2325  0000EC                     ads1115_write_reg@pAds1115:
  2326                           	opt stack 0
  2327  0000EC                     ___wmul@multiplier:
  2328                           	opt stack 0
  2329  0000EC                     ___lwdiv@dividend:
  2330                           	opt stack 0
  2331                           
  2332                           ; 2 bytes @ 0x3
  2333  0000EC                     	ds	1
  2334  0000ED                     ?_in_adc_start_and_read:
  2335                           	opt stack 0
  2336  0000ED                     ?_ads1115_read_reg:
  2337                           	opt stack 0
  2338  0000ED                     key_shift_loc_fixed_point@t8:
  2339                           	opt stack 0
  2340  0000ED                     ___awdiv@counter:
  2341                           	opt stack 0
  2342  0000ED                     ___awmod@counter:
  2343                           	opt stack 0
  2344  0000ED                     ads1115_read_reg@pAds1115:
  2345                           	opt stack 0
  2346  0000ED                     delay_ms@dly:
  2347                           	opt stack 0
  2348  0000ED                     ___aldiv@divisor:
  2349                           	opt stack 0
  2350  0000ED                     ___lldiv@divisor:
  2351                           	opt stack 0
  2352                           
  2353                           ; 4 bytes @ 0x4
  2354  0000ED                     	ds	1
  2355  0000EE                     ads1115_write_reg@addr:
  2356                           	opt stack 0
  2357  0000EE                     ___awdiv@sign:
  2358                           	opt stack 0
  2359  0000EE                     ___awmod@sign:
  2360                           	opt stack 0
  2361  0000EE                     ___wmul@multiplicand:
  2362                           	opt stack 0
  2363  0000EE                     ___lwdiv@divisor:
  2364                           	opt stack 0
  2365                           
  2366                           ; 2 bytes @ 0x5
  2367  0000EE                     	ds	1
  2368  0000EF                     ??_in_adc_start_and_read:
  2369  0000EF                     ads1115_read_reg@addr:
  2370                           	opt stack 0
  2371  0000EF                     key_polling@ktemp:
  2372                           	opt stack 0
  2373  0000EF                     ads1115_write_reg@value:
  2374                           	opt stack 0
  2375  0000EF                     ___awdiv@quotient:
  2376                           	opt stack 0
  2377                           
  2378                           ; 2 bytes @ 0x6
  2379  0000EF                     	ds	1
  2380  0000F0                     ??_ads1115_read_reg:
  2381  0000F0                     in_adc_start_and_read@ch:
  2382                           	opt stack 0
  2383  0000F0                     key_polling@t8:
  2384                           	opt stack 0
  2385  0000F0                     ___lwdiv@counter:
  2386                           	opt stack 0
  2387  0000F0                     ___wmul@product:
  2388                           	opt stack 0
  2389                           
  2390                           ; 2 bytes @ 0x7
  2391  0000F0                     	ds	1
  2392  0000F1                     ?_key_waite_release:
  2393                           	opt stack 0
  2394  0000F1                     lcd_set_com_seg@seg:
  2395                           	opt stack 0
  2396  0000F1                     ___aldiv@counter:
  2397                           	opt stack 0
  2398  0000F1                     key_waite_release@timeout:
  2399                           	opt stack 0
  2400  0000F1                     m_int16_2_str_4@buf:
  2401                           	opt stack 0
  2402  0000F1                     ads1115_read_reg@t16:
  2403                           	opt stack 0
  2404  0000F1                     ads1115_start_conversion@pAds1115:
  2405                           	opt stack 0
  2406  0000F1                     in_adc_start_and_read@ret:
  2407                           	opt stack 0
  2408  0000F1                     ___lwdiv@quotient:
  2409                           	opt stack 0
  2410  0000F1                     ___lldiv@quotient:
  2411                           	opt stack 0
  2412                           
  2413                           ; 4 bytes @ 0x8
  2414  0000F1                     	ds	1
  2415  0000F2                     lcd_set_com_seg@show:
  2416                           	opt stack 0
  2417  0000F2                     ___aldiv@sign:
  2418                           	opt stack 0
  2419                           
  2420                           ; 1 bytes @ 0x9
  2421  0000F2                     	ds	1
  2422  0000F3                     ??_sample_in_soc_adc_ch:
  2423  0000F3                     ??_lcd_set_com_seg:
  2424  0000F3                     ?_ads1115_read_conversion:
  2425                           	opt stack 0
  2426  0000F3                     ?___lwmod:
  2427                           	opt stack 0
  2428  0000F3                     key_waite_release@key:
  2429                           	opt stack 0
  2430  0000F3                     m_int16_2_str_4@x:
  2431                           	opt stack 0
  2432  0000F3                     ads1115_read_conversion@pAds1115:
  2433                           	opt stack 0
  2434  0000F3                     ___lwmod@dividend:
  2435                           	opt stack 0
  2436  0000F3                     ___aldiv@quotient:
  2437                           	opt stack 0
  2438                           
  2439                           ; 4 bytes @ 0xA
  2440  0000F3                     	ds	2
  2441  0000F5                     key_waite_release@t8:
  2442                           	opt stack 0
  2443  0000F5                     ___lldiv@counter:
  2444                           	opt stack 0
  2445  0000F5                     ___lwmod@divisor:
  2446                           	opt stack 0
  2447                           
  2448                           ; 2 bytes @ 0xC
  2449  0000F5                     	ds	1
  2450  0000F6                     lcd_disp_level_bar@show:
  2451                           	opt stack 0
  2452  0000F6                     lcd_disp_chr_loc_0@code:
  2453                           	opt stack 0
  2454  0000F6                     lcd_disp_dp_loc_0@dp:
  2455                           	opt stack 0
  2456  0000F6                     lcd_disp_chr_loc_1@code:
  2457                           	opt stack 0
  2458  0000F6                     lcd_disp_dp_loc_1@dp:
  2459                           	opt stack 0
  2460  0000F6                     lcd_disp_chr_loc_2@code:
  2461                           	opt stack 0
  2462  0000F6                     lcd_disp_dp_loc_2@dp:
  2463                           	opt stack 0
  2464  0000F6                     lcd_disp_chr_loc_3@code:
  2465                           	opt stack 0
  2466  0000F6                     lcd_disp_chr_loc_4@code:
  2467                           	opt stack 0
  2468  0000F6                     lcd_disp_chr_loc_5@code:
  2469                           	opt stack 0
  2470  0000F6                     lcd_disp_chr_loc_6@code:
  2471                           	opt stack 0
  2472  0000F6                     lcd_disp_chr_loc_7@code:
  2473                           	opt stack 0
  2474  0000F6                     lcd_disp_logo@show:
  2475                           	opt stack 0
  2476                           
  2477                           ; 1 bytes @ 0xD
  2478  0000F6                     	ds	1
  2479                           tblptru	equ	0xFF8
  2480                           tblptrh	equ	0xFF7
  2481                           tblptrl	equ	0xFF6
  2482                           tablat	equ	0xFF5
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           postdec1	equ	0xFE5
  2486                           fsr1h	equ	0xFE2
  2487                           fsr1l	equ	0xFE1
  2488                           
  2489                           	psect	cstackCOMRAM
  2490  000020                     __pcstackCOMRAM:
  2491                           	opt stack 0
  2492  000020                     ??_handler_interrupt_hight:
  2493  000020                     
  2494                           ; 2 bytes @ 0x0
  2495  000020                     	ds	14
  2496  00002E                     ??_handler_interrupt_low:
  2497                           
  2498                           ; 1 bytes @ 0xE
  2499  00002E                     	ds	17
  2500  00003F                     tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           postinc0	equ	0xFEE
  2505                           wreg	equ	0xFE8
  2506                           postdec1	equ	0xFE5
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           
  2510                           ; 1 bytes @ 0x1F
  2511 ;;
  2512 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2513 ;;
  2514 ;; *************** function _main *****************
  2515 ;; Defined at:
  2516 ;;		line 5 in file "src/app/main.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  t16             2    0        unsigned int 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  2  609[None  ] int 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels required when called:   15
  2536 ;; This function calls:
  2537 ;;		_ads1115_init_all_chip
  2538 ;;		_event_process
  2539 ;;		_in_adc_init
  2540 ;;		_lcd_disp_level
  2541 ;;		_lcd_init
  2542 ;;		_rtc_set
  2543 ;;		_soc_init
  2544 ;;		_ui_disp_start_cs600
  2545 ;; This function is called by:
  2546 ;;		Startup code after reset
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text0
  2551  002E60                     __ptext0:
  2552                           	opt stack 0
  2553  002E60                     _main:
  2554                           	opt stack 16
  2555                           
  2556                           ;main.c: 7: uint16_t t16;
  2557                           ;main.c: 8: __nop();
  2558                           
  2559                           ;incstack = 0
  2560  002E60  F000               	nop	
  2561                           
  2562                           ;main.c: 10: soc_init();
  2563  002E62  EC7D  F019         	call	_soc_init	;wreg free
  2564                           
  2565                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  2566  002E66  0E7B               	movlw	low _defalutRtc
  2567  002E68  0100               	movlb	0	; () banked
  2568  002E6A  6FE9               	movwf	rtc_set@rtc& (0+255),b
  2569  002E6C  0E01               	movlw	high _defalutRtc
  2570  002E6E  0100               	movlb	0	; () banked
  2571  002E70  6FEA               	movwf	(rtc_set@rtc+1)& (0+255),b
  2572  002E72  EC76  F00D         	call	_rtc_set	;wreg free
  2573                           
  2574                           ;main.c: 12: lcd_init();
  2575  002E76  EC8D  F019         	call	_lcd_init	;wreg free
  2576                           
  2577                           ;main.c: 14: ads1115_init_all_chip();
  2578  002E7A  EC6A  F017         	call	_ads1115_init_all_chip	;wreg free
  2579                           
  2580                           ;main.c: 15: in_adc_init();
  2581  002E7E  EC34  F019         	call	_in_adc_init	;wreg free
  2582                           
  2583                           ;main.c: 17: ui_disp_start_cs600(10);
  2584  002E82  0E0A               	movlw	10
  2585  002E84  EC50  F011         	call	_ui_disp_start_cs600
  2586                           
  2587                           ;main.c: 19: lcd_disp_level(60);
  2588  002E88  0E3C               	movlw	60
  2589  002E8A  EC12  F015         	call	_lcd_disp_level
  2590                           
  2591                           ;main.c: 21: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(0)
      +                          ;;
  2592  002E8E  9893               	bcf	3987,4,c	;volatile
  2593  002E90  888A               	bsf	3978,4,c	;volatile
  2594                           
  2595                           ;main.c: 22: __nop();
  2596  002E92  F000               	nop	
  2597  002E94                     l10434:
  2598                           
  2599                           ;main.c: 24: event_process();
  2600  002E94  EC96  F016         	call	_event_process	;wreg free
  2601  002E98  D7FD               	goto	l10434
  2602  002E9A                     __end_of_main:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           postinc0	equ	0xFEE
  2609                           wreg	equ	0xFE8
  2610                           postdec1	equ	0xFE5
  2611                           fsr1h	equ	0xFE2
  2612                           fsr1l	equ	0xFE1
  2613                           
  2614 ;; *************** function _ui_disp_start_cs600 *****************
  2615 ;; Defined at:
  2616 ;;		line 113 in file "src/api/ui.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  dly             1    wreg     unsigned char 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  dly             1   15[BANK1 ] unsigned char 
  2621 ;;  buf             6    9[BANK1 ] unsigned char [6]
  2622 ;;  t8              1   16[BANK1 ] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;Total ram usage:        8 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    9
  2639 ;; This function calls:
  2640 ;;		_lcd_disp_all
  2641 ;;		_lcd_disp_level
  2642 ;;		_lcd_disp_logo
  2643 ;;		_lcd_disp_refresh
  2644 ;;		_lcd_show_string_l0
  2645 ;;		_lcd_show_string_l1
  2646 ;;		_m_int8_2_hex
  2647 ;;		_ticker_dly
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text1
  2654  0022A0                     __ptext1:
  2655                           	opt stack 0
  2656  0022A0                     _ui_disp_start_cs600:
  2657                           	opt stack 21
  2658                           
  2659                           ;incstack = 0
  2660                           ;ui_disp_start_cs600@dly stored from wreg
  2661  0022A0  0101               	movlb	1	; () banked
  2662  0022A2  6F6D               	movwf	ui_disp_start_cs600@dly& (0+255),b
  2663                           
  2664                           ;ui.c: 115: uint8_t t8;
  2665                           ;ui.c: 116: uint8_t buf[6]="-00-";
  2666  0022A4  EE20  F0F7         	lfsr	2,ui_disp_start_cs600@F7622
  2667  0022A8  EE11  F067         	lfsr	1,ui_disp_start_cs600@buf
  2668  0022AC  0E05               	movlw	5
  2669  0022AE                     u7991:
  2670  0022AE  CFDB FFE3          	movff	plusw2,plusw1
  2671  0022B2  06E8               	decf	wreg,f,c
  2672  0022B4  E2FC               	bc	u7991
  2673                           
  2674                           ;ui.c: 117: lcd_disp_all(0);;
  2675  0022B6  0E00               	movlw	0
  2676  0022B8  EC77  F018         	call	_lcd_disp_all
  2677                           
  2678                           ;ui.c: 118: lcd_show_string_l0((uint8_t*)("cs66"));
  2679  0022BC  0EED               	movlw	low STR_1
  2680  0022BE  0101               	movlb	1	; () banked
  2681  0022C0  6F64               	movwf	lcd_show_string_l0@str& (0+255),b
  2682  0022C2  0EFF               	movlw	high STR_1
  2683  0022C4  0101               	movlb	1	; () banked
  2684  0022C6  6F65               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  2685  0022C8  EC10  F016         	call	_lcd_show_string_l0	;wreg free
  2686                           
  2687                           ;ui.c: 119: lcd_disp_logo(1);
  2688  0022CC  0E01               	movlw	1
  2689  0022CE  ECA3  F017         	call	_lcd_disp_logo
  2690                           
  2691                           ;ui.c: 120: t8=dly;
  2692  0022D2  C16D  F16E         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  2693                           
  2694                           ;ui.c: 121: if(t8<1)t8=1;
  2695  0022D6  0101               	movlb	1	; () banked
  2696  0022D8  516E               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2697  0022DA  0101               	movlb	1	; () banked
  2698  0022DC  A4D8               	btfss	status,2,c
  2699  0022DE  D029               	goto	l10080
  2700                           
  2701                           ; BSR set to: 1
  2702  0022E0  0E01               	movlw	1
  2703  0022E2  0101               	movlb	1	; () banked
  2704  0022E4  6F6E               	movwf	ui_disp_start_cs600@t8& (0+255),b
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;ui.c: 122: while(t8){
  2708  0022E6  D025               	goto	l10080
  2709  0022E8                     l10066:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;ui.c: 123: m_int8_2_hex(buf+1,t8-1);
  2713  0022E8  0E68               	movlw	low (ui_disp_start_cs600@buf+1)
  2714  0022EA  0100               	movlb	0	; () banked
  2715  0022EC  6FE9               	movwf	m_int8_2_hex@str& (0+255),b
  2716  0022EE  0E01               	movlw	high (ui_disp_start_cs600@buf+1)
  2717  0022F0  0100               	movlb	0	; () banked
  2718  0022F2  6FEA               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  2719  0022F4  0101               	movlb	1	; () banked
  2720  0022F6  056E               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  2721  0022F8  0100               	movlb	0	; () banked
  2722  0022FA  6FEB               	movwf	m_int8_2_hex@b& (0+255),b
  2723  0022FC  EC1F  F014         	call	_m_int8_2_hex	;wreg free
  2724                           
  2725                           ;ui.c: 124: buf[4]='\0';
  2726  002300  0E00               	movlw	0
  2727  002302  0101               	movlb	1	; () banked
  2728  002304  6F6B               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;ui.c: 125: lcd_show_string_l1(buf);
  2732  002306  0E67               	movlw	low ui_disp_start_cs600@buf
  2733  002308  0101               	movlb	1	; () banked
  2734  00230A  6F64               	movwf	lcd_show_string_l1@str& (0+255),b
  2735  00230C  0E01               	movlw	high ui_disp_start_cs600@buf
  2736  00230E  0101               	movlb	1	; () banked
  2737  002310  6F65               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  2738  002312  EC54  F016         	call	_lcd_show_string_l1	;wreg free
  2739                           
  2740                           ;ui.c: 126: lcd_disp_level(60);
  2741  002316  0E3C               	movlw	60
  2742  002318  EC12  F015         	call	_lcd_disp_level
  2743                           
  2744                           ;ui.c: 127: lcd_disp_refresh();
  2745  00231C  EC82  F014         	call	_lcd_disp_refresh	;wreg free
  2746                           
  2747                           ;ui.c: 128: ticker_dly(1000);
  2748  002320  0E03               	movlw	3
  2749  002322  0100               	movlb	0	; () banked
  2750  002324  6FEA               	movwf	(ticker_dly@ms+1)& (0+255),b
  2751  002326  0EE8               	movlw	232
  2752  002328  6FE9               	movwf	ticker_dly@ms& (0+255),b
  2753  00232A  EC8F  F018         	call	_ticker_dly	;wreg free
  2754                           
  2755                           ;ui.c: 129: t8--;
  2756  00232E  0101               	movlb	1	; () banked
  2757  002330  076E               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  2758  002332                     l10080:
  2759                           
  2760                           ; BSR set to: 1
  2761  002332  0101               	movlb	1	; () banked
  2762  002334  516E               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  2763  002336  0101               	movlb	1	; () banked
  2764  002338  B4D8               	btfsc	status,2,c
  2765  00233A  0012               	return	
  2766  00233C  D7D5               	goto	l10066
  2767  00233E                     __end_of_ui_disp_start_cs600:
  2768                           	opt stack 0
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           postdec1	equ	0xFE5
  2776                           plusw1	equ	0xFE3
  2777                           fsr1h	equ	0xFE2
  2778                           fsr1l	equ	0xFE1
  2779                           plusw2	equ	0xFDB
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function _ticker_dly *****************
  2783 ;; Defined at:
  2784 ;;		line 46 in file "src/soc/ticker.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  ms              2    0[BANK0 ] unsigned int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;Total ram usage:        2 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    4
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_ui_disp_start_cs600
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text2
  2813  00311E                     __ptext2:
  2814                           	opt stack 0
  2815  00311E                     _ticker_dly:
  2816                           	opt stack 25
  2817                           
  2818                           ;ticker.c: 48: dlyTicker=0;
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;incstack = 0
  2822  00311E  0E00               	movlw	0
  2823  003120  6E06               	movwf	_dlyTicker+1,c
  2824  003122  0E00               	movlw	0
  2825  003124  6E05               	movwf	_dlyTicker,c
  2826                           
  2827                           ;ticker.c: 49: dlyTickerEn=1;
  2828  003126  0E01               	movlw	1
  2829  003128  6E11               	movwf	_dlyTickerEn,c
  2830                           
  2831                           ;ticker.c: 50: while(dlyTicker<ms){
  2832  00312A  D001               	goto	l9844
  2833  00312C                     l1698:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;ticker.c: 51: __nop();
  2837  00312C  F000               	nop	
  2838  00312E                     l9844:
  2839  00312E  0100               	movlb	0	; () banked
  2840  003130  51E9               	movf	ticker_dly@ms& (0+255),w,b
  2841  003132  5C05               	subwf	_dlyTicker,w,c
  2842  003134  0100               	movlb	0	; () banked
  2843  003136  51EA               	movf	(ticker_dly@ms+1)& (0+255),w,b
  2844  003138  5806               	subwfb	_dlyTicker+1,w,c
  2845  00313A  A0D8               	btfss	status,0,c
  2846  00313C  D7F7               	goto	l1698
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;ticker.c: 52: }
  2850                           ;ticker.c: 53: dlyTickerEn=0;
  2851                           
  2852                           ; BSR set to: 0
  2853  00313E  0E00               	movlw	0
  2854  003140  6E11               	movwf	_dlyTickerEn,c
  2855                           
  2856                           ;ticker.c: 54: dlyTicker=0;
  2857  003142  0E00               	movlw	0
  2858  003144  6E06               	movwf	_dlyTicker+1,c
  2859  003146  0E00               	movlw	0
  2860  003148  6E05               	movwf	_dlyTicker,c
  2861                           
  2862                           ; BSR set to: 0
  2863  00314A  0012               	return		;funcret
  2864  00314C                     __end_of_ticker_dly:
  2865                           	opt stack 0
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           postdec1	equ	0xFE5
  2873                           plusw1	equ	0xFE3
  2874                           fsr1h	equ	0xFE2
  2875                           fsr1l	equ	0xFE1
  2876                           plusw2	equ	0xFDB
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _m_int8_2_hex *****************
  2880 ;; Defined at:
  2881 ;;		line 243 in file "src/depend/m_string.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  str             2    0[BANK0 ] PTR unsigned char 
  2884 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  2885 ;;  b               1    2[BANK0 ] unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  t8              1    3[BANK0 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        4 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    4
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_ui_disp_start_cs600
  2908 ;;		_ui_disp_rtc_mm_ss
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text3
  2913  00283E                     __ptext3:
  2914                           	opt stack 0
  2915  00283E                     _m_int8_2_hex:
  2916                           	opt stack 25
  2917                           
  2918                           ;m_string.c: 245: uint8_t t8;
  2919                           ;m_string.c: 246: t8=b;
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;incstack = 0
  2923  00283E  C0EB  F0EC         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2924                           
  2925                           ;m_string.c: 247: t8>>=4;
  2926  002842  0100               	movlb	0	; () banked
  2927  002844  3BEC               	swapf	m_int8_2_hex@t8& (0+255),f,b
  2928  002846  0E0F               	movlw	15
  2929  002848  17EC               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2930                           
  2931                           ;m_string.c: 248: t8 &= 0x0f;
  2932  00284A  0E0F               	movlw	15
  2933  00284C  0100               	movlb	0	; () banked
  2934  00284E  17EC               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;m_string.c: 249: str[0]=HexTable[t8];
  2938  002850  0100               	movlb	0	; () banked
  2939  002852  51EC               	movf	m_int8_2_hex@t8& (0+255),w,b
  2940  002854  0D01               	mullw	1
  2941  002856  0E0C               	movlw	low _HexTable
  2942  002858  24F3               	addwf	prodl,w,c
  2943  00285A  6EF6               	movwf	tblptrl,c
  2944  00285C  0EFF               	movlw	high _HexTable
  2945  00285E  20F4               	addwfc	prodh,w,c
  2946  002860  6EF7               	movwf	tblptrh,c
  2947  002862                     	if	0	;There are less than 3 active tblptr bytes
  2948  002862                     	endif
  2949  002862  C0E9  FFD9         	movff	m_int8_2_hex@str,fsr2l
  2950  002866  C0EA  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  2951  00286A  0008               	tblrd		*
  2952  00286C  CFF5 FFDF          	movff	tablat,indf2
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;m_string.c: 251: t8=b;
  2956  002870  C0EB  F0EC         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;m_string.c: 253: t8 &= 0x0f;
  2960  002874  0E0F               	movlw	15
  2961  002876  0100               	movlb	0	; () banked
  2962  002878  17EC               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2963                           
  2964                           ;m_string.c: 254: str[1]=HexTable[t8];
  2965  00287A  0100               	movlb	0	; () banked
  2966  00287C  51EC               	movf	m_int8_2_hex@t8& (0+255),w,b
  2967  00287E  0D01               	mullw	1
  2968  002880  0E0C               	movlw	low _HexTable
  2969  002882  24F3               	addwf	prodl,w,c
  2970  002884  6EF6               	movwf	tblptrl,c
  2971  002886  0EFF               	movlw	high _HexTable
  2972  002888  20F4               	addwfc	prodh,w,c
  2973  00288A  6EF7               	movwf	tblptrh,c
  2974  00288C                     	if	0	;There are less than 3 active tblptr bytes
  2975  00288C                     	endif
  2976  00288C  0100               	movlb	0	; () banked
  2977  00288E  EE20 F001          	lfsr	2,1
  2978  002892  51E9               	movf	m_int8_2_hex@str& (0+255),w,b
  2979  002894  26D9               	addwf	fsr2l,f,c
  2980  002896  51EA               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  2981  002898  22DA               	addwfc	fsr2h,f,c
  2982  00289A  0008               	tblrd		*
  2983  00289C  CFF5 FFDF          	movff	tablat,indf2
  2984                           
  2985                           ; BSR set to: 0
  2986  0028A0  0012               	return		;funcret
  2987  0028A2                     __end_of_m_int8_2_hex:
  2988                           	opt stack 0
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           prodh	equ	0xFF4
  2994                           prodl	equ	0xFF3
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           postdec1	equ	0xFE5
  2998                           plusw1	equ	0xFE3
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           plusw2	equ	0xFDB
  3003                           fsr2h	equ	0xFDA
  3004                           fsr2l	equ	0xFD9
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function _lcd_show_string_l1 *****************
  3008 ;; Defined at:
  3009 ;;		line 524 in file "src/driver/lcd.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  str             2    6[BANK1 ] PTR unsigned char 
  3012 ;;		 -> ui_disp_start_cs600@buf(6), 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  t8              1    8[BANK1 ] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3024 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;Total ram usage:        3 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    8
  3031 ;; This function calls:
  3032 ;;		_lcd_show_chr
  3033 ;; This function is called by:
  3034 ;;		_ui_disp_start_cs600
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text4
  3039  002CA8                     __ptext4:
  3040                           	opt stack 0
  3041  002CA8                     _lcd_show_string_l1:
  3042                           	opt stack 21
  3043                           
  3044                           ;lcd.c: 526: uint8_t t8=0;
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;incstack = 0
  3048  002CA8  0E00               	movlw	0
  3049  002CAA  0101               	movlb	1	; () banked
  3050  002CAC  6F66               	movwf	lcd_show_string_l1@t8& (0+255),b
  3051                           
  3052                           ;lcd.c: 527: while(*str!='\0' && t8<4){
  3053  002CAE  D011               	goto	l9814
  3054  002CB0                     l9808:
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;lcd.c: 528: lcd_show_chr(t8+4,*str);
  3058  002CB0  C164  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  3059  002CB4  C165  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  3060  002CB8  50DF               	movf	indf2,w,c
  3061  002CBA  0101               	movlb	1	; () banked
  3062  002CBC  6F61               	movwf	lcd_show_chr@chr& (0+255),b
  3063  002CBE  0101               	movlb	1	; () banked
  3064  002CC0  5166               	movf	lcd_show_string_l1@t8& (0+255),w,b
  3065  002CC2  0F04               	addlw	4
  3066  002CC4  EC9F  F011         	call	_lcd_show_chr
  3067                           
  3068                           ;lcd.c: 529: str++;
  3069  002CC8  0101               	movlb	1	; () banked
  3070  002CCA  4B64               	infsnz	lcd_show_string_l1@str& (0+255),f,b
  3071  002CCC  2B65               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
  3072                           
  3073                           ; BSR set to: 1
  3074                           ;lcd.c: 530: t8++;
  3075  002CCE  0101               	movlb	1	; () banked
  3076  002CD0  2B66               	incf	lcd_show_string_l1@t8& (0+255),f,b
  3077  002CD2                     l9814:
  3078                           
  3079                           ; BSR set to: 1
  3080  002CD2  C164  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  3081  002CD6  C165  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  3082  002CDA  50DF               	movf	indf2,w,c
  3083  002CDC  B4D8               	btfsc	status,2,c
  3084  002CDE  0012               	return	
  3085                           
  3086                           ; BSR set to: 1
  3087  002CE0  0E03               	movlw	3
  3088  002CE2  0101               	movlb	1	; () banked
  3089  002CE4  6566               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
  3090  002CE6  D7E4               	goto	l9808
  3091  002CE8  0012               	return	
  3092  002CEA                     __end_of_lcd_show_string_l1:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           prodh	equ	0xFF4
  3099                           prodl	equ	0xFF3
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           postdec1	equ	0xFE5
  3103                           plusw1	equ	0xFE3
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           plusw2	equ	0xFDB
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _lcd_show_string_l0 *****************
  3113 ;; Defined at:
  3114 ;;		line 514 in file "src/driver/lcd.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  str             2    6[BANK1 ] PTR unsigned char 
  3117 ;;		 -> STR_1(5), 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  t8              1    8[BANK1 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3129 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;Total ram usage:        3 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    8
  3136 ;; This function calls:
  3137 ;;		_lcd_show_chr
  3138 ;; This function is called by:
  3139 ;;		_ui_disp_start_cs600
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text5
  3144  002C20                     __ptext5:
  3145                           	opt stack 0
  3146  002C20                     _lcd_show_string_l0:
  3147                           	opt stack 21
  3148                           
  3149                           ;lcd.c: 516: uint8_t t8=0;
  3150                           
  3151                           ; BSR set to: 1
  3152                           ;incstack = 0
  3153  002C20  0E00               	movlw	0
  3154  002C22  0101               	movlb	1	; () banked
  3155  002C24  6F66               	movwf	lcd_show_string_l0@t8& (0+255),b
  3156                           
  3157                           ;lcd.c: 517: while(*str!='\0' && t8<4){
  3158  002C26  D010               	goto	l9786
  3159  002C28                     l9780:
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;lcd.c: 518: lcd_show_chr(t8,*str);
  3163  002C28  C164  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  3164  002C2C  C165  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  3165  002C30                     	if	0	;tblptru may be non-zero
  3166  002C30                     	endif
  3167  002C30                     	if	0	;tblptru may be non-zero
  3168  002C30                     	endif
  3169  002C30  0008               	tblrd		*
  3170  002C32  CFF5 F161          	movff	tablat,lcd_show_chr@chr
  3171  002C36  0101               	movlb	1	; () banked
  3172  002C38  5166               	movf	lcd_show_string_l0@t8& (0+255),w,b
  3173  002C3A  EC9F  F011         	call	_lcd_show_chr
  3174                           
  3175                           ;lcd.c: 519: str++;
  3176  002C3E  0101               	movlb	1	; () banked
  3177  002C40  4B64               	infsnz	lcd_show_string_l0@str& (0+255),f,b
  3178  002C42  2B65               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
  3179                           
  3180                           ; BSR set to: 1
  3181                           ;lcd.c: 520: t8++;
  3182  002C44  0101               	movlb	1	; () banked
  3183  002C46  2B66               	incf	lcd_show_string_l0@t8& (0+255),f,b
  3184  002C48                     l9786:
  3185                           
  3186                           ; BSR set to: 1
  3187  002C48  C164  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  3188  002C4C  C165  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  3189  002C50                     	if	0	;tblptru may be non-zero
  3190  002C50                     	endif
  3191  002C50                     	if	0	;tblptru may be non-zero
  3192  002C50                     	endif
  3193  002C50  0008               	tblrd		*
  3194  002C52  50F5               	movf	tablat,w,c
  3195  002C54  0900               	iorlw	0
  3196  002C56  B4D8               	btfsc	status,2,c
  3197  002C58  0012               	return	
  3198                           
  3199                           ; BSR set to: 1
  3200  002C5A  0E03               	movlw	3
  3201  002C5C  0101               	movlb	1	; () banked
  3202  002C5E  6566               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
  3203  002C60  D7E3               	goto	l9780
  3204  002C62  0012               	return	
  3205  002C64                     __end_of_lcd_show_string_l0:
  3206                           	opt stack 0
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           prodh	equ	0xFF4
  3212                           prodl	equ	0xFF3
  3213                           postinc0	equ	0xFEE
  3214                           wreg	equ	0xFE8
  3215                           postdec1	equ	0xFE5
  3216                           plusw1	equ	0xFE3
  3217                           fsr1h	equ	0xFE2
  3218                           fsr1l	equ	0xFE1
  3219                           indf2	equ	0xFDF
  3220                           plusw2	equ	0xFDB
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8
  3224                           
  3225 ;; *************** function _lcd_disp_logo *****************
  3226 ;; Defined at:
  3227 ;;		line 378 in file "src/driver/lcd.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  show            1    wreg     unsigned char 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  show            1   13[BANK0 ] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;Total ram usage:        1 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    6
  3248 ;; This function calls:
  3249 ;;		_lcd_set_com_seg
  3250 ;; This function is called by:
  3251 ;;		_ui_disp_start_cs600
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text6
  3256  002F46                     __ptext6:
  3257                           	opt stack 0
  3258  002F46                     _lcd_disp_logo:
  3259                           	opt stack 23
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;incstack = 0
  3263                           ;lcd_disp_logo@show stored from wreg
  3264  002F46  0100               	movlb	0	; () banked
  3265  002F48  6FF6               	movwf	lcd_disp_logo@show& (0+255),b
  3266                           
  3267                           ;lcd.c: 380: if(show)
  3268  002F4A  0100               	movlb	0	; () banked
  3269  002F4C  51F6               	movf	lcd_disp_logo@show& (0+255),w,b
  3270  002F4E  0100               	movlb	0	; () banked
  3271  002F50  B4D8               	btfsc	status,2,c
  3272  002F52  D00A               	goto	l9794
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;lcd.c: 381: lcd_set_com_seg(2,13,1);
  3276  002F54  0E0D               	movlw	13
  3277  002F56  0100               	movlb	0	; () banked
  3278  002F58  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3279  002F5A  0E01               	movlw	1
  3280  002F5C  0100               	movlb	0	; () banked
  3281  002F5E  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  3282  002F60  0E02               	movlw	2
  3283  002F62  EC94  F00B         	call	_lcd_set_com_seg
  3284  002F66  0012               	return	
  3285  002F68                     l9794:
  3286                           
  3287                           ;lcd.c: 382: else
  3288                           ;lcd.c: 383: lcd_set_com_seg(2,13,0);
  3289  002F68  0E0D               	movlw	13
  3290  002F6A  0100               	movlb	0	; () banked
  3291  002F6C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3292  002F6E  0E00               	movlw	0
  3293  002F70  0100               	movlb	0	; () banked
  3294  002F72  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  3295  002F74  0E02               	movlw	2
  3296  002F76  EC94  F00B         	call	_lcd_set_com_seg
  3297  002F7A  0012               	return	
  3298  002F7C                     __end_of_lcd_disp_logo:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           postinc0	equ	0xFEE
  3307                           wreg	equ	0xFE8
  3308                           postdec1	equ	0xFE5
  3309                           plusw1	equ	0xFE3
  3310                           fsr1h	equ	0xFE2
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           plusw2	equ	0xFDB
  3314                           fsr2h	equ	0xFDA
  3315                           fsr2l	equ	0xFD9
  3316                           status	equ	0xFD8
  3317                           
  3318 ;; *************** function _lcd_disp_level *****************
  3319 ;; Defined at:
  3320 ;;		line 118 in file "src/driver/lcd.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  level           1    wreg     unsigned char 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  level           1    5[BANK1 ] unsigned char 
  3325 ;;  i               1    6[BANK1 ] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;Total ram usage:        2 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    7
  3342 ;; This function calls:
  3343 ;;		_lcd_disp_level_bar
  3344 ;; This function is called by:
  3345 ;;		_ui_disp_start_cs600
  3346 ;;		_main
  3347 ;;		_ui_disp_rtc_mm_ss
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text7
  3352  002A24                     __ptext7:
  3353                           	opt stack 0
  3354  002A24                     _lcd_disp_level:
  3355                           	opt stack 22
  3356                           
  3357                           ;incstack = 0
  3358                           ;lcd_disp_level@level stored from wreg
  3359  002A24  0101               	movlb	1	; () banked
  3360  002A26  6F63               	movwf	lcd_disp_level@level& (0+255),b
  3361                           
  3362                           ;lcd.c: 120: uint8_t i;
  3363                           ;lcd.c: 121: if(level>=99)level=99;
  3364  002A28  0E62               	movlw	98
  3365  002A2A  0101               	movlb	1	; () banked
  3366  002A2C  6563               	cpfsgt	lcd_disp_level@level& (0+255),b
  3367  002A2E  D003               	goto	l9822
  3368                           
  3369                           ; BSR set to: 1
  3370  002A30  0E63               	movlw	99
  3371  002A32  0101               	movlb	1	; () banked
  3372  002A34  6F63               	movwf	lcd_disp_level@level& (0+255),b
  3373  002A36                     l9822:
  3374                           
  3375                           ; BSR set to: 1
  3376                           ;lcd.c: 122: level/=2;
  3377  002A36  0101               	movlb	1	; () banked
  3378  002A38  90D8               	bcf	status,0,c
  3379  002A3A  3363               	rrcf	lcd_disp_level@level& (0+255),f,b
  3380                           
  3381                           ; BSR set to: 1
  3382                           ;lcd.c: 123: for(i=0;i<level;i++){
  3383  002A3C  0E00               	movlw	0
  3384  002A3E  0101               	movlb	1	; () banked
  3385  002A40  6F64               	movwf	lcd_disp_level@i& (0+255),b
  3386  002A42  D009               	goto	l9830
  3387  002A44                     l9826:
  3388                           
  3389                           ; BSR set to: 1
  3390                           ;lcd.c: 124: lcd_disp_level_bar(i,1);
  3391  002A44  0E01               	movlw	1
  3392  002A46  0100               	movlb	0	; () banked
  3393  002A48  6FF6               	movwf	lcd_disp_level_bar@show& (0+255),b
  3394  002A4A  0101               	movlb	1	; () banked
  3395  002A4C  5164               	movf	lcd_disp_level@i& (0+255),w,b
  3396  002A4E  EC70  F000         	call	_lcd_disp_level_bar
  3397  002A52  0101               	movlb	1	; () banked
  3398  002A54  2B64               	incf	lcd_disp_level@i& (0+255),f,b
  3399  002A56                     l9830:
  3400                           
  3401                           ; BSR set to: 1
  3402  002A56  0101               	movlb	1	; () banked
  3403  002A58  5163               	movf	lcd_disp_level@level& (0+255),w,b
  3404  002A5A  0101               	movlb	1	; () banked
  3405  002A5C  5D64               	subwf	lcd_disp_level@i& (0+255),w,b
  3406  002A5E  A0D8               	btfss	status,0,c
  3407  002A60  D7F1               	goto	l9826
  3408  002A62                     l9832:
  3409                           
  3410                           ; BSR set to: 1
  3411                           ;lcd.c: 125: }
  3412                           ;lcd.c: 126: for(;i<50;i++){
  3413  002A62  0E31               	movlw	49
  3414  002A64  0101               	movlb	1	; () banked
  3415  002A66  6564               	cpfsgt	lcd_disp_level@i& (0+255),b
  3416  002A68  D001               	goto	l9836
  3417  002A6A  0012               	return	
  3418  002A6C                     l9836:
  3419                           
  3420                           ; BSR set to: 1
  3421                           ;lcd.c: 127: lcd_disp_level_bar(i,0);
  3422  002A6C  0E00               	movlw	0
  3423  002A6E  0100               	movlb	0	; () banked
  3424  002A70  6FF6               	movwf	lcd_disp_level_bar@show& (0+255),b
  3425  002A72  0101               	movlb	1	; () banked
  3426  002A74  5164               	movf	lcd_disp_level@i& (0+255),w,b
  3427  002A76  EC70  F000         	call	_lcd_disp_level_bar
  3428  002A7A  0101               	movlb	1	; () banked
  3429  002A7C  2B64               	incf	lcd_disp_level@i& (0+255),f,b
  3430  002A7E  D7F1               	goto	l9832
  3431  002A80                     __end_of_lcd_disp_level:
  3432                           	opt stack 0
  3433                           tblptru	equ	0xFF8
  3434                           tblptrh	equ	0xFF7
  3435                           tblptrl	equ	0xFF6
  3436                           tablat	equ	0xFF5
  3437                           prodh	equ	0xFF4
  3438                           prodl	equ	0xFF3
  3439                           postinc0	equ	0xFEE
  3440                           wreg	equ	0xFE8
  3441                           postdec1	equ	0xFE5
  3442                           plusw1	equ	0xFE3
  3443                           fsr1h	equ	0xFE2
  3444                           fsr1l	equ	0xFE1
  3445                           indf2	equ	0xFDF
  3446                           plusw2	equ	0xFDB
  3447                           fsr2h	equ	0xFDA
  3448                           fsr2l	equ	0xFD9
  3449                           status	equ	0xFD8
  3450                           
  3451 ;; *************** function _lcd_disp_level_bar *****************
  3452 ;; Defined at:
  3453 ;;		line 46 in file "src/driver/lcd.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  bar             1    wreg     unsigned char 
  3456 ;;  show            1   13[BANK0 ] unsigned char 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  bar             1    4[BANK1 ] unsigned char 
  3459 ;;  __bar           1    3[BANK1 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3469 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;Total ram usage:        3 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    6
  3476 ;; This function calls:
  3477 ;;		_lcd_set_com_seg
  3478 ;; This function is called by:
  3479 ;;		_lcd_disp_level
  3480 ;;		_lcd_disp_level_off
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text8
  3485  0000E0                     __ptext8:
  3486                           	opt stack 0
  3487  0000E0                     _lcd_disp_level_bar:
  3488                           	opt stack 22
  3489                           
  3490                           ; BSR set to: 1
  3491                           ;incstack = 0
  3492                           ;lcd_disp_level_bar@bar stored from wreg
  3493  0000E0  0101               	movlb	1	; () banked
  3494  0000E2  6F62               	movwf	lcd_disp_level_bar@bar& (0+255),b
  3495                           
  3496                           ;lcd.c: 49: uint8_t __bar;
  3497                           ;lcd.c: 50: if(bar>49)return;
  3498  0000E4  0E31               	movlw	49
  3499  0000E6  0101               	movlb	1	; () banked
  3500  0000E8  6562               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
  3501  0000EA  D001               	goto	l9642
  3502  0000EC  0012               	return	
  3503  0000EE                     l9642:
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;lcd.c: 51: __bar=49-bar;
  3507  0000EE  0101               	movlb	1	; () banked
  3508  0000F0  5162               	movf	lcd_disp_level_bar@bar& (0+255),w,b
  3509  0000F2  0800               	sublw	0
  3510  0000F4  0F31               	addlw	49
  3511  0000F6  0101               	movlb	1	; () banked
  3512  0000F8  6F61               	movwf	lcd_disp_level_bar@__bar& (0+255),b
  3513                           
  3514                           ;lcd.c: 52: switch(__bar){
  3515  0000FA  D1C2               	goto	l9746
  3516  0000FC                     l9644:
  3517                           
  3518                           ; BSR set to: 1
  3519  0000FC  0E2E               	movlw	46
  3520  0000FE  0100               	movlb	0	; () banked
  3521  000100  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3522  000102  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3523  000106  0E00               	movlw	0
  3524  000108  EC94  F00B         	call	_lcd_set_com_seg
  3525  00010C  0012               	return	
  3526  00010E                     l9646:
  3527  00010E  0E2E               	movlw	46
  3528  000110  0100               	movlb	0	; () banked
  3529  000112  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3530  000114  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3531  000118  0E01               	movlw	1
  3532  00011A  EC94  F00B         	call	_lcd_set_com_seg
  3533  00011E  0012               	return	
  3534  000120                     l9648:
  3535  000120  0E2E               	movlw	46
  3536  000122  0100               	movlb	0	; () banked
  3537  000124  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3538  000126  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3539  00012A  0E02               	movlw	2
  3540  00012C  EC94  F00B         	call	_lcd_set_com_seg
  3541  000130  0012               	return	
  3542  000132                     l9650:
  3543  000132  0E2E               	movlw	46
  3544  000134  0100               	movlb	0	; () banked
  3545  000136  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3546  000138  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3547  00013C  0E03               	movlw	3
  3548  00013E  EC94  F00B         	call	_lcd_set_com_seg
  3549  000142  0012               	return	
  3550  000144                     l9652:
  3551  000144  0E2F               	movlw	47
  3552  000146  0100               	movlb	0	; () banked
  3553  000148  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3554  00014A  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3555  00014E  0E03               	movlw	3
  3556  000150  EC94  F00B         	call	_lcd_set_com_seg
  3557  000154  0012               	return	
  3558  000156                     l9654:
  3559  000156  0E2F               	movlw	47
  3560  000158  0100               	movlb	0	; () banked
  3561  00015A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3562  00015C  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3563  000160  0E02               	movlw	2
  3564  000162  EC94  F00B         	call	_lcd_set_com_seg
  3565  000166  0012               	return	
  3566  000168                     l9656:
  3567  000168  0E2F               	movlw	47
  3568  00016A  0100               	movlb	0	; () banked
  3569  00016C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3570  00016E  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3571  000172  0E01               	movlw	1
  3572  000174  EC94  F00B         	call	_lcd_set_com_seg
  3573  000178  0012               	return	
  3574  00017A                     l9658:
  3575  00017A  0E2F               	movlw	47
  3576  00017C  0100               	movlb	0	; () banked
  3577  00017E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3578  000180  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3579  000184  0E00               	movlw	0
  3580  000186  EC94  F00B         	call	_lcd_set_com_seg
  3581  00018A  0012               	return	
  3582  00018C                     l9660:
  3583  00018C  0E1F               	movlw	31
  3584  00018E  0100               	movlb	0	; () banked
  3585  000190  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3586  000192  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3587  000196  0E00               	movlw	0
  3588  000198  EC94  F00B         	call	_lcd_set_com_seg
  3589  00019C  0012               	return	
  3590  00019E                     l9662:
  3591  00019E  0E1F               	movlw	31
  3592  0001A0  0100               	movlb	0	; () banked
  3593  0001A2  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3594  0001A4  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3595  0001A8  0E01               	movlw	1
  3596  0001AA  EC94  F00B         	call	_lcd_set_com_seg
  3597  0001AE  0012               	return	
  3598  0001B0                     l9664:
  3599  0001B0  0E1F               	movlw	31
  3600  0001B2  0100               	movlb	0	; () banked
  3601  0001B4  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3602  0001B6  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3603  0001BA  0E02               	movlw	2
  3604  0001BC  EC94  F00B         	call	_lcd_set_com_seg
  3605  0001C0  0012               	return	
  3606  0001C2                     l9666:
  3607  0001C2  0E1F               	movlw	31
  3608  0001C4  0100               	movlb	0	; () banked
  3609  0001C6  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3610  0001C8  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3611  0001CC  0E03               	movlw	3
  3612  0001CE  EC94  F00B         	call	_lcd_set_com_seg
  3613  0001D2  0012               	return	
  3614  0001D4                     l9668:
  3615  0001D4  0E00               	movlw	0
  3616  0001D6  0100               	movlb	0	; () banked
  3617  0001D8  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3618  0001DA  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3619  0001DE  0E03               	movlw	3
  3620  0001E0  EC94  F00B         	call	_lcd_set_com_seg
  3621  0001E4  0012               	return	
  3622  0001E6                     l9670:
  3623  0001E6  0E00               	movlw	0
  3624  0001E8  0100               	movlb	0	; () banked
  3625  0001EA  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3626  0001EC  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3627  0001F0  0E02               	movlw	2
  3628  0001F2  EC94  F00B         	call	_lcd_set_com_seg
  3629  0001F6  0012               	return	
  3630  0001F8                     l9672:
  3631  0001F8  0E00               	movlw	0
  3632  0001FA  0100               	movlb	0	; () banked
  3633  0001FC  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3634  0001FE  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3635  000202  0E01               	movlw	1
  3636  000204  EC94  F00B         	call	_lcd_set_com_seg
  3637  000208  0012               	return	
  3638  00020A                     l9674:
  3639  00020A  0E00               	movlw	0
  3640  00020C  0100               	movlb	0	; () banked
  3641  00020E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3642  000210  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3643  000214  0E00               	movlw	0
  3644  000216  EC94  F00B         	call	_lcd_set_com_seg
  3645  00021A  0012               	return	
  3646  00021C                     l9676:
  3647  00021C  0E01               	movlw	1
  3648  00021E  0100               	movlb	0	; () banked
  3649  000220  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3650  000222  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3651  000226  0E00               	movlw	0
  3652  000228  EC94  F00B         	call	_lcd_set_com_seg
  3653  00022C  0012               	return	
  3654  00022E                     l9678:
  3655  00022E  0E01               	movlw	1
  3656  000230  0100               	movlb	0	; () banked
  3657  000232  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3658  000234  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3659  000238  0E01               	movlw	1
  3660  00023A  EC94  F00B         	call	_lcd_set_com_seg
  3661  00023E  0012               	return	
  3662  000240                     l9680:
  3663  000240  0E01               	movlw	1
  3664  000242  0100               	movlb	0	; () banked
  3665  000244  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3666  000246  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3667  00024A  0E02               	movlw	2
  3668  00024C  EC94  F00B         	call	_lcd_set_com_seg
  3669  000250  0012               	return	
  3670  000252                     l9682:
  3671  000252  0E01               	movlw	1
  3672  000254  0100               	movlb	0	; () banked
  3673  000256  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3674  000258  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3675  00025C  0E03               	movlw	3
  3676  00025E  EC94  F00B         	call	_lcd_set_com_seg
  3677  000262  0012               	return	
  3678  000264                     l9684:
  3679  000264  0E02               	movlw	2
  3680  000266  0100               	movlb	0	; () banked
  3681  000268  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3682  00026A  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3683  00026E  0E03               	movlw	3
  3684  000270  EC94  F00B         	call	_lcd_set_com_seg
  3685  000274  0012               	return	
  3686  000276                     l9686:
  3687  000276  0E02               	movlw	2
  3688  000278  0100               	movlb	0	; () banked
  3689  00027A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3690  00027C  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3691  000280  0E02               	movlw	2
  3692  000282  EC94  F00B         	call	_lcd_set_com_seg
  3693  000286  0012               	return	
  3694  000288                     l9688:
  3695  000288  0E02               	movlw	2
  3696  00028A  0100               	movlb	0	; () banked
  3697  00028C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3698  00028E  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3699  000292  0E01               	movlw	1
  3700  000294  EC94  F00B         	call	_lcd_set_com_seg
  3701  000298  0012               	return	
  3702  00029A                     l9690:
  3703  00029A  0E02               	movlw	2
  3704  00029C  0100               	movlb	0	; () banked
  3705  00029E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3706  0002A0  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3707  0002A4  0E00               	movlw	0
  3708  0002A6  EC94  F00B         	call	_lcd_set_com_seg
  3709  0002AA  0012               	return	
  3710  0002AC                     l9692:
  3711  0002AC  0E03               	movlw	3
  3712  0002AE  0100               	movlb	0	; () banked
  3713  0002B0  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3714  0002B2  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3715  0002B6  0E00               	movlw	0
  3716  0002B8  EC94  F00B         	call	_lcd_set_com_seg
  3717  0002BC  0012               	return	
  3718  0002BE                     l9694:
  3719  0002BE  0E03               	movlw	3
  3720  0002C0  0100               	movlb	0	; () banked
  3721  0002C2  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3722  0002C4  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3723  0002C8  0E01               	movlw	1
  3724  0002CA  EC94  F00B         	call	_lcd_set_com_seg
  3725  0002CE  0012               	return	
  3726  0002D0                     l9696:
  3727  0002D0  0E03               	movlw	3
  3728  0002D2  0100               	movlb	0	; () banked
  3729  0002D4  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3730  0002D6  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3731  0002DA  0E02               	movlw	2
  3732  0002DC  EC94  F00B         	call	_lcd_set_com_seg
  3733  0002E0  0012               	return	
  3734  0002E2                     l9698:
  3735  0002E2  0E03               	movlw	3
  3736  0002E4  0100               	movlb	0	; () banked
  3737  0002E6  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3738  0002E8  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3739  0002EC  0E03               	movlw	3
  3740  0002EE  EC94  F00B         	call	_lcd_set_com_seg
  3741  0002F2  0012               	return	
  3742  0002F4                     l9700:
  3743  0002F4  0E04               	movlw	4
  3744  0002F6  0100               	movlb	0	; () banked
  3745  0002F8  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3746  0002FA  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3747  0002FE  0E03               	movlw	3
  3748  000300  EC94  F00B         	call	_lcd_set_com_seg
  3749  000304  0012               	return	
  3750  000306                     l9702:
  3751  000306  0E04               	movlw	4
  3752  000308  0100               	movlb	0	; () banked
  3753  00030A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3754  00030C  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3755  000310  0E02               	movlw	2
  3756  000312  EC94  F00B         	call	_lcd_set_com_seg
  3757  000316  0012               	return	
  3758  000318                     l9704:
  3759  000318  0E04               	movlw	4
  3760  00031A  0100               	movlb	0	; () banked
  3761  00031C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3762  00031E  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3763  000322  0E01               	movlw	1
  3764  000324  EC94  F00B         	call	_lcd_set_com_seg
  3765  000328  0012               	return	
  3766  00032A                     l9706:
  3767  00032A  0E04               	movlw	4
  3768  00032C  0100               	movlb	0	; () banked
  3769  00032E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3770  000330  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3771  000334  0E00               	movlw	0
  3772  000336  EC94  F00B         	call	_lcd_set_com_seg
  3773  00033A  0012               	return	
  3774  00033C                     l9708:
  3775  00033C  0E05               	movlw	5
  3776  00033E  0100               	movlb	0	; () banked
  3777  000340  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3778  000342  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3779  000346  0E00               	movlw	0
  3780  000348  EC94  F00B         	call	_lcd_set_com_seg
  3781  00034C  0012               	return	
  3782  00034E                     l9710:
  3783  00034E  0E05               	movlw	5
  3784  000350  0100               	movlb	0	; () banked
  3785  000352  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3786  000354  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3787  000358  0E01               	movlw	1
  3788  00035A  EC94  F00B         	call	_lcd_set_com_seg
  3789  00035E  0012               	return	
  3790  000360                     l9712:
  3791  000360  0E05               	movlw	5
  3792  000362  0100               	movlb	0	; () banked
  3793  000364  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3794  000366  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3795  00036A  0E02               	movlw	2
  3796  00036C  EC94  F00B         	call	_lcd_set_com_seg
  3797  000370  0012               	return	
  3798  000372                     l9714:
  3799  000372  0E05               	movlw	5
  3800  000374  0100               	movlb	0	; () banked
  3801  000376  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3802  000378  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3803  00037C  0E03               	movlw	3
  3804  00037E  EC94  F00B         	call	_lcd_set_com_seg
  3805  000382  0012               	return	
  3806  000384                     l9716:
  3807  000384  0E06               	movlw	6
  3808  000386  0100               	movlb	0	; () banked
  3809  000388  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3810  00038A  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3811  00038E  0E03               	movlw	3
  3812  000390  EC94  F00B         	call	_lcd_set_com_seg
  3813  000394  0012               	return	
  3814  000396                     l9718:
  3815  000396  0E06               	movlw	6
  3816  000398  0100               	movlb	0	; () banked
  3817  00039A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3818  00039C  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3819  0003A0  0E02               	movlw	2
  3820  0003A2  EC94  F00B         	call	_lcd_set_com_seg
  3821  0003A6  0012               	return	
  3822  0003A8                     l9720:
  3823  0003A8  0E06               	movlw	6
  3824  0003AA  0100               	movlb	0	; () banked
  3825  0003AC  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3826  0003AE  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3827  0003B2  0E01               	movlw	1
  3828  0003B4  EC94  F00B         	call	_lcd_set_com_seg
  3829  0003B8  0012               	return	
  3830  0003BA                     l9722:
  3831  0003BA  0E06               	movlw	6
  3832  0003BC  0100               	movlb	0	; () banked
  3833  0003BE  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3834  0003C0  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3835  0003C4  0E00               	movlw	0
  3836  0003C6  EC94  F00B         	call	_lcd_set_com_seg
  3837  0003CA  0012               	return	
  3838  0003CC                     l9724:
  3839  0003CC  0E07               	movlw	7
  3840  0003CE  0100               	movlb	0	; () banked
  3841  0003D0  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3842  0003D2  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3843  0003D6  0E00               	movlw	0
  3844  0003D8  EC94  F00B         	call	_lcd_set_com_seg
  3845  0003DC  0012               	return	
  3846  0003DE                     l9726:
  3847  0003DE  0E07               	movlw	7
  3848  0003E0  0100               	movlb	0	; () banked
  3849  0003E2  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3850  0003E4  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3851  0003E8  0E01               	movlw	1
  3852  0003EA  EC94  F00B         	call	_lcd_set_com_seg
  3853  0003EE  0012               	return	
  3854  0003F0                     l9728:
  3855  0003F0  0E07               	movlw	7
  3856  0003F2  0100               	movlb	0	; () banked
  3857  0003F4  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3858  0003F6  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3859  0003FA  0E02               	movlw	2
  3860  0003FC  EC94  F00B         	call	_lcd_set_com_seg
  3861  000400  0012               	return	
  3862  000402                     l9730:
  3863  000402  0E07               	movlw	7
  3864  000404  0100               	movlb	0	; () banked
  3865  000406  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3866  000408  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3867  00040C  0E03               	movlw	3
  3868  00040E  EC94  F00B         	call	_lcd_set_com_seg
  3869  000412  0012               	return	
  3870  000414                     l9732:
  3871  000414  0E21               	movlw	33
  3872  000416  0100               	movlb	0	; () banked
  3873  000418  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3874  00041A  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3875  00041E  0E03               	movlw	3
  3876  000420  EC94  F00B         	call	_lcd_set_com_seg
  3877  000424  0012               	return	
  3878  000426                     l9734:
  3879  000426  0E21               	movlw	33
  3880  000428  0100               	movlb	0	; () banked
  3881  00042A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3882  00042C  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3883  000430  0E02               	movlw	2
  3884  000432  EC94  F00B         	call	_lcd_set_com_seg
  3885  000436  0012               	return	
  3886  000438                     l9736:
  3887  000438  0E21               	movlw	33
  3888  00043A  0100               	movlb	0	; () banked
  3889  00043C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3890  00043E  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3891  000442  0E01               	movlw	1
  3892  000444  EC94  F00B         	call	_lcd_set_com_seg
  3893  000448  0012               	return	
  3894  00044A                     l9738:
  3895  00044A  0E21               	movlw	33
  3896  00044C  0100               	movlb	0	; () banked
  3897  00044E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3898  000450  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3899  000454  0E00               	movlw	0
  3900  000456  EC94  F00B         	call	_lcd_set_com_seg
  3901  00045A  0012               	return	
  3902  00045C                     l9740:
  3903  00045C  0E22               	movlw	34
  3904  00045E  0100               	movlb	0	; () banked
  3905  000460  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3906  000462  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3907  000466  0E00               	movlw	0
  3908  000468  EC94  F00B         	call	_lcd_set_com_seg
  3909  00046C  0012               	return	
  3910  00046E                     l9742:
  3911  00046E  0E22               	movlw	34
  3912  000470  0100               	movlb	0	; () banked
  3913  000472  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  3914  000474  C0F6  F0F2         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  3915  000478  0E01               	movlw	1
  3916  00047A  EC94  F00B         	call	_lcd_set_com_seg
  3917                           
  3918                           ;lcd.c: 115: }
  3919  00047E  0012               	return	
  3920  000480                     l9746:
  3921  000480  0101               	movlb	1	; () banked
  3922  000482  5161               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
  3923                           
  3924                           ; Switch size 1, requested type "space"
  3925                           ; Number of cases is 50, Range of values is 0 to 49
  3926                           ; switch strategies available:
  3927                           ; Name         Instructions Cycles
  3928                           ; simple_byte          151    76 (average)
  3929                           ;	Chosen strategy is simple_byte
  3930  000484  0A00               	xorlw	0	; case 0
  3931  000486  B4D8               	btfsc	status,2,c
  3932  000488  D639               	goto	l9644
  3933  00048A  0A01               	xorlw	1	; case 1
  3934  00048C  B4D8               	btfsc	status,2,c
  3935  00048E  D63F               	goto	l9646
  3936  000490  0A03               	xorlw	3	; case 2
  3937  000492  B4D8               	btfsc	status,2,c
  3938  000494  D645               	goto	l9648
  3939  000496  0A01               	xorlw	1	; case 3
  3940  000498  B4D8               	btfsc	status,2,c
  3941  00049A  D64B               	goto	l9650
  3942  00049C  0A07               	xorlw	7	; case 4
  3943  00049E  B4D8               	btfsc	status,2,c
  3944  0004A0  D651               	goto	l9652
  3945  0004A2  0A01               	xorlw	1	; case 5
  3946  0004A4  B4D8               	btfsc	status,2,c
  3947  0004A6  D657               	goto	l9654
  3948  0004A8  0A03               	xorlw	3	; case 6
  3949  0004AA  B4D8               	btfsc	status,2,c
  3950  0004AC  D65D               	goto	l9656
  3951  0004AE  0A01               	xorlw	1	; case 7
  3952  0004B0  B4D8               	btfsc	status,2,c
  3953  0004B2  D663               	goto	l9658
  3954  0004B4  0A0F               	xorlw	15	; case 8
  3955  0004B6  B4D8               	btfsc	status,2,c
  3956  0004B8  D669               	goto	l9660
  3957  0004BA  0A01               	xorlw	1	; case 9
  3958  0004BC  B4D8               	btfsc	status,2,c
  3959  0004BE  D66F               	goto	l9662
  3960  0004C0  0A03               	xorlw	3	; case 10
  3961  0004C2  B4D8               	btfsc	status,2,c
  3962  0004C4  D675               	goto	l9664
  3963  0004C6  0A01               	xorlw	1	; case 11
  3964  0004C8  B4D8               	btfsc	status,2,c
  3965  0004CA  D67B               	goto	l9666
  3966  0004CC  0A07               	xorlw	7	; case 12
  3967  0004CE  B4D8               	btfsc	status,2,c
  3968  0004D0  D681               	goto	l9668
  3969  0004D2  0A01               	xorlw	1	; case 13
  3970  0004D4  B4D8               	btfsc	status,2,c
  3971  0004D6  D687               	goto	l9670
  3972  0004D8  0A03               	xorlw	3	; case 14
  3973  0004DA  B4D8               	btfsc	status,2,c
  3974  0004DC  D68D               	goto	l9672
  3975  0004DE  0A01               	xorlw	1	; case 15
  3976  0004E0  B4D8               	btfsc	status,2,c
  3977  0004E2  D693               	goto	l9674
  3978  0004E4  0A1F               	xorlw	31	; case 16
  3979  0004E6  B4D8               	btfsc	status,2,c
  3980  0004E8  D699               	goto	l9676
  3981  0004EA  0A01               	xorlw	1	; case 17
  3982  0004EC  B4D8               	btfsc	status,2,c
  3983  0004EE  D69F               	goto	l9678
  3984  0004F0  0A03               	xorlw	3	; case 18
  3985  0004F2  B4D8               	btfsc	status,2,c
  3986  0004F4  D6A5               	goto	l9680
  3987  0004F6  0A01               	xorlw	1	; case 19
  3988  0004F8  B4D8               	btfsc	status,2,c
  3989  0004FA  D6AB               	goto	l9682
  3990  0004FC  0A07               	xorlw	7	; case 20
  3991  0004FE  B4D8               	btfsc	status,2,c
  3992  000500  D6B1               	goto	l9684
  3993  000502  0A01               	xorlw	1	; case 21
  3994  000504  B4D8               	btfsc	status,2,c
  3995  000506  D6B7               	goto	l9686
  3996  000508  0A03               	xorlw	3	; case 22
  3997  00050A  B4D8               	btfsc	status,2,c
  3998  00050C  D6BD               	goto	l9688
  3999  00050E  0A01               	xorlw	1	; case 23
  4000  000510  B4D8               	btfsc	status,2,c
  4001  000512  D6C3               	goto	l9690
  4002  000514  0A0F               	xorlw	15	; case 24
  4003  000516  B4D8               	btfsc	status,2,c
  4004  000518  D6C9               	goto	l9692
  4005  00051A  0A01               	xorlw	1	; case 25
  4006  00051C  B4D8               	btfsc	status,2,c
  4007  00051E  D6CF               	goto	l9694
  4008  000520  0A03               	xorlw	3	; case 26
  4009  000522  B4D8               	btfsc	status,2,c
  4010  000524  D6D5               	goto	l9696
  4011  000526  0A01               	xorlw	1	; case 27
  4012  000528  B4D8               	btfsc	status,2,c
  4013  00052A  D6DB               	goto	l9698
  4014  00052C  0A07               	xorlw	7	; case 28
  4015  00052E  B4D8               	btfsc	status,2,c
  4016  000530  D6E1               	goto	l9700
  4017  000532  0A01               	xorlw	1	; case 29
  4018  000534  B4D8               	btfsc	status,2,c
  4019  000536  D6E7               	goto	l9702
  4020  000538  0A03               	xorlw	3	; case 30
  4021  00053A  B4D8               	btfsc	status,2,c
  4022  00053C  D6ED               	goto	l9704
  4023  00053E  0A01               	xorlw	1	; case 31
  4024  000540  B4D8               	btfsc	status,2,c
  4025  000542  D6F3               	goto	l9706
  4026  000544  0A3F               	xorlw	63	; case 32
  4027  000546  B4D8               	btfsc	status,2,c
  4028  000548  D6F9               	goto	l9708
  4029  00054A  0A01               	xorlw	1	; case 33
  4030  00054C  B4D8               	btfsc	status,2,c
  4031  00054E  D6FF               	goto	l9710
  4032  000550  0A03               	xorlw	3	; case 34
  4033  000552  B4D8               	btfsc	status,2,c
  4034  000554  D705               	goto	l9712
  4035  000556  0A01               	xorlw	1	; case 35
  4036  000558  B4D8               	btfsc	status,2,c
  4037  00055A  D70B               	goto	l9714
  4038  00055C  0A07               	xorlw	7	; case 36
  4039  00055E  B4D8               	btfsc	status,2,c
  4040  000560  D711               	goto	l9716
  4041  000562  0A01               	xorlw	1	; case 37
  4042  000564  B4D8               	btfsc	status,2,c
  4043  000566  D717               	goto	l9718
  4044  000568  0A03               	xorlw	3	; case 38
  4045  00056A  B4D8               	btfsc	status,2,c
  4046  00056C  D71D               	goto	l9720
  4047  00056E  0A01               	xorlw	1	; case 39
  4048  000570  B4D8               	btfsc	status,2,c
  4049  000572  D723               	goto	l9722
  4050  000574  0A0F               	xorlw	15	; case 40
  4051  000576  B4D8               	btfsc	status,2,c
  4052  000578  D729               	goto	l9724
  4053  00057A  0A01               	xorlw	1	; case 41
  4054  00057C  B4D8               	btfsc	status,2,c
  4055  00057E  D72F               	goto	l9726
  4056  000580  0A03               	xorlw	3	; case 42
  4057  000582  B4D8               	btfsc	status,2,c
  4058  000584  D735               	goto	l9728
  4059  000586  0A01               	xorlw	1	; case 43
  4060  000588  B4D8               	btfsc	status,2,c
  4061  00058A  D73B               	goto	l9730
  4062  00058C  0A07               	xorlw	7	; case 44
  4063  00058E  B4D8               	btfsc	status,2,c
  4064  000590  D741               	goto	l9732
  4065  000592  0A01               	xorlw	1	; case 45
  4066  000594  B4D8               	btfsc	status,2,c
  4067  000596  D747               	goto	l9734
  4068  000598  0A03               	xorlw	3	; case 46
  4069  00059A  B4D8               	btfsc	status,2,c
  4070  00059C  D74D               	goto	l9736
  4071  00059E  0A01               	xorlw	1	; case 47
  4072  0005A0  B4D8               	btfsc	status,2,c
  4073  0005A2  D753               	goto	l9738
  4074  0005A4  0A1F               	xorlw	31	; case 48
  4075  0005A6  B4D8               	btfsc	status,2,c
  4076  0005A8  D759               	goto	l9740
  4077  0005AA  0A01               	xorlw	1	; case 49
  4078  0005AC  A4D8               	btfss	status,2,c
  4079  0005AE  0012               	return	
  4080  0005B0  D75E               	goto	l9742
  4081  0005B2                     __end_of_lcd_disp_level_bar:
  4082                           	opt stack 0
  4083                           tblptru	equ	0xFF8
  4084                           tblptrh	equ	0xFF7
  4085                           tblptrl	equ	0xFF6
  4086                           tablat	equ	0xFF5
  4087                           prodh	equ	0xFF4
  4088                           prodl	equ	0xFF3
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           postdec1	equ	0xFE5
  4092                           plusw1	equ	0xFE3
  4093                           fsr1h	equ	0xFE2
  4094                           fsr1l	equ	0xFE1
  4095                           indf2	equ	0xFDF
  4096                           plusw2	equ	0xFDB
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _soc_init *****************
  4102 ;; Defined at:
  4103 ;;		line 2 in file "src/soc/soc.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;		None
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;Total ram usage:        0 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    6
  4124 ;; This function calls:
  4125 ;;		_rtc_init
  4126 ;;		_sys_ticker_init
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text9
  4133  0032FA                     __ptext9:
  4134                           	opt stack 0
  4135  0032FA                     _soc_init:
  4136                           	opt stack 24
  4137                           
  4138                           ;soc.c: 5: sys_ticker_init();
  4139                           
  4140                           ;incstack = 0
  4141  0032FA  EC85  F019         	call	_sys_ticker_init	;wreg free
  4142                           
  4143                           ;soc.c: 6: rtc_init();
  4144  0032FE  ECB6  F016         	call	_rtc_init	;wreg free
  4145                           
  4146                           ;soc.c: 8: INTCONbits.PEIE = 1;
  4147  003302  8CF2               	bsf	intcon,6,c	;volatile
  4148                           
  4149                           ;soc.c: 9: INTCONbits.GIE = 1;
  4150  003304  8EF2               	bsf	intcon,7,c	;volatile
  4151                           
  4152                           ;soc.c: 11: RCONbits.IPEN=0;
  4153  003306  9ED0               	bcf	4048,7,c	;volatile
  4154  003308  0012               	return		;funcret
  4155  00330A                     __end_of_soc_init:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           prodh	equ	0xFF4
  4162                           prodl	equ	0xFF3
  4163                           intcon	equ	0xFF2
  4164                           postinc0	equ	0xFEE
  4165                           wreg	equ	0xFE8
  4166                           postdec1	equ	0xFE5
  4167                           plusw1	equ	0xFE3
  4168                           fsr1h	equ	0xFE2
  4169                           fsr1l	equ	0xFE1
  4170                           indf2	equ	0xFDF
  4171                           plusw2	equ	0xFDB
  4172                           fsr2h	equ	0xFDA
  4173                           fsr2l	equ	0xFD9
  4174                           status	equ	0xFD8
  4175                           
  4176 ;; *************** function _sys_ticker_init *****************
  4177 ;; Defined at:
  4178 ;;		line 27 in file "src/soc/ticker.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    4
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_soc_init
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text10
  4207  00330A                     __ptext10:
  4208                           	opt stack 0
  4209  00330A                     _sys_ticker_init:
  4210                           	opt stack 25
  4211                           
  4212                           ;ticker.c: 30: PR2=(uint8_t)((11059200/4/16/16/100));
  4213                           
  4214                           ;incstack = 0
  4215  00330A  0E6C               	movlw	108
  4216  00330C  6ECB               	movwf	4043,c	;volatile
  4217                           
  4218                           ;ticker.c: 31: IPR1bits.TMR2IP=1;
  4219  00330E  829F               	bsf	3999,1,c	;volatile
  4220                           
  4221                           ;ticker.c: 32: PIR1bits.TMR2IF=0;
  4222  003310  929E               	bcf	3998,1,c	;volatile
  4223                           
  4224                           ;ticker.c: 33: PIE1bits.TMR2IE=1;
  4225  003312  829D               	bsf	3997,1,c	;volatile
  4226                           
  4227                           ;ticker.c: 35: T2CON=0x7f;
  4228  003314  0E7F               	movlw	127
  4229  003316  6ECA               	movwf	4042,c	;volatile
  4230  003318  0012               	return		;funcret
  4231  00331A                     __end_of_sys_ticker_init:
  4232                           	opt stack 0
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           intcon	equ	0xFF2
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           postdec1	equ	0xFE5
  4243                           plusw1	equ	0xFE3
  4244                           fsr1h	equ	0xFE2
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           plusw2	equ	0xFDB
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _rtc_init *****************
  4253 ;; Defined at:
  4254 ;;		line 25 in file "src/soc/rtc.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    5
  4275 ;; This function calls:
  4276 ;;		_rtcc_reg_wr_disable
  4277 ;;		_rtcc_reg_wr_enable
  4278 ;; This function is called by:
  4279 ;;		_soc_init
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text11
  4284  002D6C                     __ptext11:
  4285                           	opt stack 0
  4286  002D6C                     _rtc_init:
  4287                           	opt stack 24
  4288                           
  4289                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  4290                           
  4291                           ;incstack = 0
  4292  002D6C  010F               	movlb	15	; () banked
  4293  002D6E  9554               	bcf	84,2,b	;volatile
  4294                           
  4295                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  4296  002D70  010F               	movlb	15	; () banked
  4297  002D72  8354               	bsf	84,1,b	;volatile
  4298                           
  4299                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  4300  002D74  010F               	movlb	15	; () banked
  4301  002D76  955F               	bcf	95,2,b	;volatile
  4302                           
  4303                           ;rtc.c: 31: ALRMRPT=0xff;
  4304  002D78  010F               	movlb	15	; () banked
  4305  002D7A  695A               	setf	90,b	;volatile
  4306                           
  4307                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  4308  002D7C  010F               	movlb	15	; () banked
  4309  002D7E  8F5B               	bsf	91,7,b	;volatile
  4310                           
  4311                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  4312  002D80  010F               	movlb	15	; () banked
  4313  002D82  8D5B               	bsf	91,6,b	;volatile
  4314                           
  4315                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  4316  002D84  010F               	movlb	15	; () banked
  4317  002D86  955B               	bcf	91,2,b	;volatile
  4318  002D88  975B               	bcf	91,3,b	;volatile
  4319  002D8A  995B               	bcf	91,4,b	;volatile
  4320  002D8C  9B5B               	bcf	91,5,b	;volatile
  4321                           
  4322                           ;rtc.c: 37: __nop();
  4323  002D8E  F000               	nop	
  4324                           
  4325                           ;rtc.c: 38: rtcc_reg_wr_enable();
  4326  002D90  EC94  F019         	call	_rtcc_reg_wr_enable	;wreg free
  4327                           
  4328                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  4329  002D94  010F               	movlb	15	; () banked
  4330  002D96  8F5F               	bsf	95,7,b	;volatile
  4331                           
  4332                           ;rtc.c: 42: rtcc_reg_wr_disable();
  4333  002D98  EC9A  F019         	call	_rtcc_reg_wr_disable	;wreg free
  4334                           
  4335                           ;rtc.c: 43: __nop();
  4336  002D9C  F000               	nop	
  4337                           
  4338                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  4339  002D9E  80A5               	bsf	4005,0,c	;volatile
  4340                           
  4341                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  4342  002DA0  90A4               	bcf	4004,0,c	;volatile
  4343                           
  4344                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  4345  002DA2  80A3               	bsf	4003,0,c	;volatile
  4346                           
  4347                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  4348  002DA4  86CD               	bsf	4045,3,c	;volatile
  4349                           
  4350                           ;rtc.c: 51: __nop();
  4351  002DA6  F000               	nop	
  4352  002DA8  0012               	return		;funcret
  4353  002DAA                     __end_of_rtc_init:
  4354                           	opt stack 0
  4355                           tblptru	equ	0xFF8
  4356                           tblptrh	equ	0xFF7
  4357                           tblptrl	equ	0xFF6
  4358                           tablat	equ	0xFF5
  4359                           prodh	equ	0xFF4
  4360                           prodl	equ	0xFF3
  4361                           intcon	equ	0xFF2
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           postdec1	equ	0xFE5
  4365                           plusw1	equ	0xFE3
  4366                           fsr1h	equ	0xFE2
  4367                           fsr1l	equ	0xFE1
  4368                           indf2	equ	0xFDF
  4369                           plusw2	equ	0xFDB
  4370                           fsr2h	equ	0xFDA
  4371                           fsr2l	equ	0xFD9
  4372                           status	equ	0xFD8
  4373                           
  4374 ;; *************** function _rtc_set *****************
  4375 ;; Defined at:
  4376 ;;		line 54 in file "src/soc/rtc.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  4379 ;;		 -> defalutRtc(7), 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  stp             2    2[BANK0 ] PTR struct .
  4382 ;;		 -> defalutRtc(7), 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;Total ram usage:        4 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    5
  4399 ;; This function calls:
  4400 ;;		_rtcc_reg_wr_disable
  4401 ;;		_rtcc_reg_wr_enable
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text12
  4408  001AEC                     __ptext12:
  4409                           	opt stack 0
  4410  001AEC                     _rtc_set:
  4411                           	opt stack 25
  4412                           
  4413                           ;rtc.c: 56: st_RtcDef* stp;
  4414                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  4415                           
  4416                           ;incstack = 0
  4417  001AEC  C0E9  F0EB         	movff	rtc_set@rtc,rtc_set@stp
  4418  001AF0  C0EA  F0EC         	movff	rtc_set@rtc+1,rtc_set@stp+1
  4419                           
  4420                           ;rtc.c: 58: rtcc_reg_wr_enable();
  4421  001AF4  EC94  F019         	call	_rtcc_reg_wr_enable	;wreg free
  4422                           
  4423                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  4424  001AF8  0EFC               	movlw	-4
  4425  001AFA  010F               	movlb	15	; () banked
  4426  001AFC  175F               	andwf	95,f,b	;volatile
  4427                           
  4428                           ; BSR set to: 15
  4429                           ;rtc.c: 61: RTCVALL=stp->second;
  4430  001AFE  0100               	movlb	0	; () banked
  4431  001B00  EE20 F005          	lfsr	2,5
  4432  001B04  51EB               	movf	rtc_set@stp& (0+255),w,b
  4433  001B06  26D9               	addwf	fsr2l,f,c
  4434  001B08  51EC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4435  001B0A  22DA               	addwfc	fsr2h,f,c
  4436  001B0C  50DF               	movf	indf2,w,c
  4437  001B0E  010F               	movlb	15	; () banked
  4438  001B10  6F5C               	movwf	92,b	;volatile
  4439                           
  4440                           ; BSR set to: 15
  4441                           ;rtc.c: 62: RTCVALH=stp->minute;
  4442  001B12  0100               	movlb	0	; () banked
  4443  001B14  EE20 F004          	lfsr	2,4
  4444  001B18  51EB               	movf	rtc_set@stp& (0+255),w,b
  4445  001B1A  26D9               	addwf	fsr2l,f,c
  4446  001B1C  51EC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4447  001B1E  22DA               	addwfc	fsr2h,f,c
  4448  001B20  50DF               	movf	indf2,w,c
  4449  001B22  010F               	movlb	15	; () banked
  4450  001B24  6F5D               	movwf	93,b	;volatile
  4451                           
  4452                           ; BSR set to: 15
  4453                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  4454  001B26  010F               	movlb	15	; () banked
  4455  001B28  515F               	movf	95,w,b	;volatile
  4456  001B2A  0BFC               	andlw	-4
  4457  001B2C  0901               	iorlw	1
  4458  001B2E  6F5F               	movwf	95,b	;volatile
  4459                           
  4460                           ; BSR set to: 15
  4461                           ;rtc.c: 64: RTCVALL=stp->hour;
  4462  001B30  0100               	movlb	0	; () banked
  4463  001B32  EE20 F003          	lfsr	2,3
  4464  001B36  51EB               	movf	rtc_set@stp& (0+255),w,b
  4465  001B38  26D9               	addwf	fsr2l,f,c
  4466  001B3A  51EC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4467  001B3C  22DA               	addwfc	fsr2h,f,c
  4468  001B3E  50DF               	movf	indf2,w,c
  4469  001B40  010F               	movlb	15	; () banked
  4470  001B42  6F5C               	movwf	92,b	;volatile
  4471                           
  4472                           ; BSR set to: 15
  4473                           ;rtc.c: 65: RTCVALH=stp->day;
  4474  001B44  0100               	movlb	0	; () banked
  4475  001B46  EE20 F006          	lfsr	2,6
  4476  001B4A  51EB               	movf	rtc_set@stp& (0+255),w,b
  4477  001B4C  26D9               	addwf	fsr2l,f,c
  4478  001B4E  51EC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4479  001B50  22DA               	addwfc	fsr2h,f,c
  4480  001B52  50DF               	movf	indf2,w,c
  4481  001B54  010F               	movlb	15	; () banked
  4482  001B56  6F5D               	movwf	93,b	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4486  001B58  010F               	movlb	15	; () banked
  4487  001B5A  515F               	movf	95,w,b	;volatile
  4488  001B5C  0BFC               	andlw	-4
  4489  001B5E  0902               	iorlw	2
  4490  001B60  6F5F               	movwf	95,b	;volatile
  4491                           
  4492                           ; BSR set to: 15
  4493                           ;rtc.c: 67: RTCVALL=stp->date;
  4494  001B62  0100               	movlb	0	; () banked
  4495  001B64  EE20 F002          	lfsr	2,2
  4496  001B68  51EB               	movf	rtc_set@stp& (0+255),w,b
  4497  001B6A  26D9               	addwf	fsr2l,f,c
  4498  001B6C  51EC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4499  001B6E  22DA               	addwfc	fsr2h,f,c
  4500  001B70  50DF               	movf	indf2,w,c
  4501  001B72  010F               	movlb	15	; () banked
  4502  001B74  6F5C               	movwf	92,b	;volatile
  4503                           
  4504                           ; BSR set to: 15
  4505                           ;rtc.c: 68: RTCVALH=stp->month;
  4506  001B76  0100               	movlb	0	; () banked
  4507  001B78  EE20 F001          	lfsr	2,1
  4508  001B7C  51EB               	movf	rtc_set@stp& (0+255),w,b
  4509  001B7E  26D9               	addwf	fsr2l,f,c
  4510  001B80  51EC               	movf	(rtc_set@stp+1)& (0+255),w,b
  4511  001B82  22DA               	addwfc	fsr2h,f,c
  4512  001B84  50DF               	movf	indf2,w,c
  4513  001B86  010F               	movlb	15	; () banked
  4514  001B88  6F5D               	movwf	93,b	;volatile
  4515                           
  4516                           ; BSR set to: 15
  4517                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4518  001B8A  0E03               	movlw	3
  4519  001B8C  010F               	movlb	15	; () banked
  4520  001B8E  135F               	iorwf	95,f,b	;volatile
  4521                           
  4522                           ; BSR set to: 15
  4523                           ;rtc.c: 70: RTCVALL=stp->year;
  4524  001B90  C0EB  FFD9         	movff	rtc_set@stp,fsr2l
  4525  001B94  C0EC  FFDA         	movff	rtc_set@stp+1,fsr2h
  4526  001B98  50DF               	movf	indf2,w,c
  4527  001B9A  010F               	movlb	15	; () banked
  4528  001B9C  6F5C               	movwf	92,b	;volatile
  4529                           
  4530                           ; BSR set to: 15
  4531                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4532  001B9E  EC9A  F019         	call	_rtcc_reg_wr_disable	;wreg free
  4533  001BA2  0012               	return		;funcret
  4534  001BA4                     __end_of_rtc_set:
  4535                           	opt stack 0
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           prodh	equ	0xFF4
  4541                           prodl	equ	0xFF3
  4542                           intcon	equ	0xFF2
  4543                           postinc0	equ	0xFEE
  4544                           wreg	equ	0xFE8
  4545                           postdec1	equ	0xFE5
  4546                           plusw1	equ	0xFE3
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           indf2	equ	0xFDF
  4550                           plusw2	equ	0xFDB
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _rtcc_reg_wr_enable *****************
  4556 ;; Defined at:
  4557 ;;		line 9 in file "src/soc/rtc.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		None
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    4
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_rtc_init
  4582 ;;		_rtc_set
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text13
  4587  003328                     __ptext13:
  4588                           	opt stack 0
  4589  003328                     _rtcc_reg_wr_enable:
  4590                           	opt stack 24
  4591                           
  4592                           ;incstack = 0
  4593  003328  0E55               	movlw	85	;# 
  4594  00332A  6EA7               	movwf	4007,c	;# 
  4595  00332C  0EAA               	movlw	170	;# 
  4596  00332E  6EA7               	movwf	4007,c	;# 
  4597  003330  8B5F               	bsf	3935,5,b	;# 
  4598  003332  0012               	return		;funcret
  4599  003334                     __end_of_rtcc_reg_wr_enable:
  4600                           	opt stack 0
  4601                           tblptru	equ	0xFF8
  4602                           tblptrh	equ	0xFF7
  4603                           tblptrl	equ	0xFF6
  4604                           tablat	equ	0xFF5
  4605                           prodh	equ	0xFF4
  4606                           prodl	equ	0xFF3
  4607                           intcon	equ	0xFF2
  4608                           postinc0	equ	0xFEE
  4609                           wreg	equ	0xFE8
  4610                           postdec1	equ	0xFE5
  4611                           plusw1	equ	0xFE3
  4612                           fsr1h	equ	0xFE2
  4613                           fsr1l	equ	0xFE1
  4614                           indf2	equ	0xFDF
  4615                           plusw2	equ	0xFDB
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function _rtcc_reg_wr_disable *****************
  4621 ;; Defined at:
  4622 ;;		line 17 in file "src/soc/rtc.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;		None
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		None
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;Total ram usage:        0 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    4
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_rtc_init
  4647 ;;		_rtc_set
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text14
  4652  003334                     __ptext14:
  4653                           	opt stack 0
  4654  003334                     _rtcc_reg_wr_disable:
  4655                           	opt stack 24
  4656                           
  4657                           ;incstack = 0
  4658  003334  0E55               	movlw	85	;# 
  4659  003336  6EA7               	movwf	4007,c	;# 
  4660  003338  0EAA               	movlw	170	;# 
  4661  00333A  6EA7               	movwf	4007,c	;# 
  4662  00333C  9B5F               	bcf	3935,5,b	;# 
  4663  00333E  0012               	return		;funcret
  4664  003340                     __end_of_rtcc_reg_wr_disable:
  4665                           	opt stack 0
  4666                           tblptru	equ	0xFF8
  4667                           tblptrh	equ	0xFF7
  4668                           tblptrl	equ	0xFF6
  4669                           tablat	equ	0xFF5
  4670                           prodh	equ	0xFF4
  4671                           prodl	equ	0xFF3
  4672                           intcon	equ	0xFF2
  4673                           postinc0	equ	0xFEE
  4674                           wreg	equ	0xFE8
  4675                           postdec1	equ	0xFE5
  4676                           plusw1	equ	0xFE3
  4677                           fsr1h	equ	0xFE2
  4678                           fsr1l	equ	0xFE1
  4679                           indf2	equ	0xFDF
  4680                           plusw2	equ	0xFDB
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _lcd_init *****************
  4686 ;; Defined at:
  4687 ;;		line 628 in file "src/driver/lcd.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;Total ram usage:        0 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    6
  4708 ;; This function calls:
  4709 ;;		_lcd_bl_init
  4710 ;;		_lcd_config
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text15
  4717  00331A                     __ptext15:
  4718                           	opt stack 0
  4719  00331A                     _lcd_init:
  4720                           	opt stack 24
  4721                           
  4722                           ;lcd.c: 630: lcd_config();
  4723                           
  4724                           ;incstack = 0
  4725  00331A  ECA6  F018         	call	_lcd_config	;wreg free
  4726                           
  4727                           ;lcd.c: 631: lcd_bl_init();
  4728  00331E  ECB4  F019         	call	_lcd_bl_init	;wreg free
  4729                           
  4730                           ;lcd.c: 632: LCDCON=0x8f;;
  4731  003322  0E8F               	movlw	143
  4732  003324  6EA8               	movwf	4008,c	;volatile
  4733  003326  0012               	return		;funcret
  4734  003328                     __end_of_lcd_init:
  4735                           	opt stack 0
  4736                           tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           prodh	equ	0xFF4
  4741                           prodl	equ	0xFF3
  4742                           intcon	equ	0xFF2
  4743                           postinc0	equ	0xFEE
  4744                           wreg	equ	0xFE8
  4745                           postdec1	equ	0xFE5
  4746                           plusw1	equ	0xFE3
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           plusw2	equ	0xFDB
  4751                           fsr2h	equ	0xFDA
  4752                           fsr2l	equ	0xFD9
  4753                           status	equ	0xFD8
  4754                           
  4755 ;; *************** function _lcd_config *****************
  4756 ;; Defined at:
  4757 ;;		line 588 in file "src/driver/lcd.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      void 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    5
  4778 ;; This function calls:
  4779 ;;		_lcd_disp_all
  4780 ;; This function is called by:
  4781 ;;		_lcd_init
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text16
  4786  00314C                     __ptext16:
  4787                           	opt stack 0
  4788  00314C                     _lcd_config:
  4789                           	opt stack 24
  4790                           
  4791                           ;lcd.c: 594: LCDREG=0x3f;
  4792                           
  4793                           ;incstack = 0
  4794  00314C  0E3F               	movlw	63
  4795  00314E  6ED2               	movwf	4050,c	;volatile
  4796                           
  4797                           ;lcd.c: 602: LCDPSbits.WFT = 0;
  4798  003150  9EAA               	bcf	4010,7,c	;volatile
  4799                           
  4800                           ;lcd.c: 603: LCDPSbits.BIASMD = 0;
  4801  003152  9CAA               	bcf	4010,6,c	;volatile
  4802                           
  4803                           ;lcd.c: 604: LCDPSbits.LP3 = 0;
  4804  003154  96AA               	bcf	4010,3,c	;volatile
  4805                           
  4806                           ;lcd.c: 605: LCDPSbits.LP2 = 1;
  4807  003156  84AA               	bsf	4010,2,c	;volatile
  4808                           
  4809                           ;lcd.c: 606: LCDPSbits.LP1 = 0;
  4810  003158  92AA               	bcf	4010,1,c	;volatile
  4811                           
  4812                           ;lcd.c: 607: LCDPSbits.LP0 = 0;
  4813  00315A  90AA               	bcf	4010,0,c	;volatile
  4814                           
  4815                           ;lcd.c: 610: LCDSE0 = 0b11111111;
  4816  00315C  68A9               	setf	4009,c	;volatile
  4817                           
  4818                           ;lcd.c: 611: LCDSE1 = 0b11100000;
  4819  00315E  0EE0               	movlw	224
  4820  003160  6EB6               	movwf	4022,c	;volatile
  4821                           
  4822                           ;lcd.c: 612: LCDSE2 = 0b11111000;
  4823  003162  0EF8               	movlw	248
  4824  003164  6EB7               	movwf	4023,c	;volatile
  4825                           
  4826                           ;lcd.c: 613: LCDSE3 = 0b11000011;
  4827  003166  0EC3               	movlw	195
  4828  003168  6EB8               	movwf	4024,c	;volatile
  4829                           
  4830                           ;lcd.c: 614: LCDSE4 = 0b11111110;
  4831  00316A  0EFE               	movlw	254
  4832  00316C  6EB9               	movwf	4025,c	;volatile
  4833                           
  4834                           ;lcd.c: 615: LCDSE5 = 0b11001111;
  4835  00316E  0ECF               	movlw	207
  4836  003170  6EBA               	movwf	4026,c	;volatile
  4837                           
  4838                           ;lcd.c: 618: lcd_disp_all(0x00);;
  4839  003172  0E00               	movlw	0
  4840  003174  EC77  F018         	call	_lcd_disp_all
  4841  003178  0012               	return		;funcret
  4842  00317A                     __end_of_lcd_config:
  4843                           	opt stack 0
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodh	equ	0xFF4
  4849                           prodl	equ	0xFF3
  4850                           intcon	equ	0xFF2
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           plusw1	equ	0xFE3
  4855                           fsr1h	equ	0xFE2
  4856                           fsr1l	equ	0xFE1
  4857                           indf2	equ	0xFDF
  4858                           plusw2	equ	0xFDB
  4859                           fsr2h	equ	0xFDA
  4860                           fsr2l	equ	0xFD9
  4861                           status	equ	0xFD8
  4862                           
  4863 ;; *************** function _lcd_disp_all *****************
  4864 ;; Defined at:
  4865 ;;		line 578 in file "src/driver/lcd.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  x               1    wreg     unsigned char 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  x               1    0[BANK0 ] unsigned char 
  4870 ;;  i               1    1[BANK0 ] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;Total ram usage:        2 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    4
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_ui_disp_start_cs600
  4891 ;;		_lcd_config
  4892 ;;		_ui_disp_all_on
  4893 ;;		_ui_disp_all_off
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text17
  4898  0030EE                     __ptext17:
  4899                           	opt stack 0
  4900  0030EE                     _lcd_disp_all:
  4901                           	opt stack 25
  4902                           
  4903                           ;incstack = 0
  4904                           ;lcd_disp_all@x stored from wreg
  4905  0030EE  0100               	movlb	0	; () banked
  4906  0030F0  6FE9               	movwf	lcd_disp_all@x& (0+255),b
  4907                           
  4908                           ;lcd.c: 580: uint8_t i;
  4909                           ;lcd.c: 581: for(i=0;i<24;i++)
  4910  0030F2  0E00               	movlw	0
  4911  0030F4  0100               	movlb	0	; () banked
  4912  0030F6  6FEA               	movwf	lcd_disp_all@i& (0+255),b
  4913  0030F8                     l9376:
  4914                           
  4915                           ; BSR set to: 0
  4916  0030F8  0E17               	movlw	23
  4917  0030FA  0100               	movlb	0	; () banked
  4918  0030FC  65EA               	cpfsgt	lcd_disp_all@i& (0+255),b
  4919  0030FE  D001               	goto	l9380
  4920  003100  0012               	return	
  4921  003102                     l9380:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;lcd.c: 582: {
  4925                           ;lcd.c: 583: pLCD[i]=x;
  4926  003102  0100               	movlb	0	; () banked
  4927  003104  51EA               	movf	lcd_disp_all@i& (0+255),w,b
  4928  003106  0D01               	mullw	1
  4929  003108  0E60               	movlw	low _pLCD
  4930  00310A  24F3               	addwf	prodl,w,c
  4931  00310C  6ED9               	movwf	fsr2l,c
  4932  00310E  0E00               	movlw	high _pLCD
  4933  003110  20F4               	addwfc	prodh,w,c
  4934  003112  6EDA               	movwf	fsr2h,c
  4935  003114  C0E9  FFDF         	movff	lcd_disp_all@x,indf2
  4936                           
  4937                           ; BSR set to: 0
  4938  003118  0100               	movlb	0	; () banked
  4939  00311A  2BEA               	incf	lcd_disp_all@i& (0+255),f,b
  4940  00311C  D7ED               	goto	l9376
  4941  00311E                     __end_of_lcd_disp_all:
  4942                           	opt stack 0
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           postinc0	equ	0xFEE
  4951                           wreg	equ	0xFE8
  4952                           postdec1	equ	0xFE5
  4953                           plusw1	equ	0xFE3
  4954                           fsr1h	equ	0xFE2
  4955                           fsr1l	equ	0xFE1
  4956                           indf2	equ	0xFDF
  4957                           plusw2	equ	0xFDB
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _lcd_bl_init *****************
  4963 ;; Defined at:
  4964 ;;		line 623 in file "src/driver/lcd.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		status,2, status,0
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;Total ram usage:        0 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    4
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_lcd_init
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text18
  4993  003368                     __ptext18:
  4994                           	opt stack 0
  4995  003368                     _lcd_bl_init:
  4996                           	opt stack 25
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;incstack = 0
  5000                           ;lcd.c: 625: do{TRISG |= (1<<4);}while(0);;
  5001  003368  8898               	bsf	3992,4,c	;volatile
  5002  00336A  0012               	return	
  5003  00336C                     __end_of_lcd_bl_init:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           postdec1	equ	0xFE5
  5015                           plusw1	equ	0xFE3
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           plusw2	equ	0xFDB
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _event_process *****************
  5025 ;; Defined at:
  5026 ;;		line 39 in file "src/app/event.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      char 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:   14
  5047 ;; This function calls:
  5048 ;;		_event_process_rtc
  5049 ;;		_event_process_ticker
  5050 ;;		_event_process_time_out
  5051 ;;		_key_polling
  5052 ;;		_key_process
  5053 ;; This function is called by:
  5054 ;;		_main
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text19
  5059  002D2C                     __ptext19:
  5060                           	opt stack 0
  5061  002D2C                     _event_process:
  5062                           	opt stack 16
  5063                           
  5064                           ;event.c: 41: if(glbEvent & (1<<1)){
  5065                           
  5066                           ;incstack = 0
  5067  002D2C  0100               	movlb	0	; () banked
  5068  002D2E  A3CE               	btfss	_glbEvent& (0+255),1,b	;volatile
  5069  002D30  D004               	goto	l10088
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;event.c: 42: glbEvent &= ~(1<<1);
  5073  002D32  0100               	movlb	0	; () banked
  5074  002D34  93CE               	bcf	_glbEvent& (0+255),1,b	;volatile
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;event.c: 44: event_process_rtc();
  5078  002D36  ECE7  F018         	call	_event_process_rtc	;wreg free
  5079  002D3A                     l10088:
  5080                           
  5081                           ;event.c: 45: }
  5082                           ;event.c: 46: if(glbEvent & (1<<0)){
  5083  002D3A  0100               	movlb	0	; () banked
  5084  002D3C  A1CE               	btfss	_glbEvent& (0+255),0,b	;volatile
  5085  002D3E  D004               	goto	l10094
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;event.c: 47: glbEvent &= ~(1<<0);
  5089  002D40  0100               	movlb	0	; () banked
  5090  002D42  91CE               	bcf	_glbEvent& (0+255),0,b	;volatile
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;event.c: 48: event_process_ticker();
  5094  002D44  ECA6  F019         	call	_event_process_ticker	;wreg free
  5095  002D48                     l10094:
  5096                           
  5097                           ;event.c: 49: }
  5098                           ;event.c: 50: if(glbEvent & (1<<2)){
  5099  002D48  0100               	movlb	0	; () banked
  5100  002D4A  A5CE               	btfss	_glbEvent& (0+255),2,b	;volatile
  5101  002D4C  D004               	goto	l10100
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;event.c: 51: glbEvent &= ~(1<<2);
  5105  002D4E  0100               	movlb	0	; () banked
  5106  002D50  95CE               	bcf	_glbEvent& (0+255),2,b	;volatile
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;event.c: 52: event_process_time_out();
  5110  002D52  ECA0  F019         	call	_event_process_time_out	;wreg free
  5111  002D56                     l10100:
  5112                           
  5113                           ;event.c: 53: }
  5114                           ;event.c: 55: keyValue=key_polling();
  5115  002D56  EC40  F015         	call	_key_polling	;wreg free
  5116  002D5A  0100               	movlb	0	; () banked
  5117  002D5C  6FD0               	movwf	_keyValue& (0+255),b	;volatile
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;event.c: 56: if(keyValue!=(0x0))key_process();
  5121  002D5E  0100               	movlb	0	; () banked
  5122  002D60  51D0               	movf	_keyValue& (0+255),w,b	;volatile
  5123  002D62  B4D8               	btfsc	status,2,c
  5124  002D64  0012               	return	
  5125                           
  5126                           ; BSR set to: 0
  5127  002D66  ECEB  F011         	call	_key_process	;wreg free
  5128  002D6A  0012               	return	
  5129  002D6C                     __end_of_event_process:
  5130                           	opt stack 0
  5131                           tblptru	equ	0xFF8
  5132                           tblptrh	equ	0xFF7
  5133                           tblptrl	equ	0xFF6
  5134                           tablat	equ	0xFF5
  5135                           prodh	equ	0xFF4
  5136                           prodl	equ	0xFF3
  5137                           intcon	equ	0xFF2
  5138                           postinc0	equ	0xFEE
  5139                           wreg	equ	0xFE8
  5140                           postdec1	equ	0xFE5
  5141                           plusw1	equ	0xFE3
  5142                           fsr1h	equ	0xFE2
  5143                           fsr1l	equ	0xFE1
  5144                           indf2	equ	0xFDF
  5145                           plusw2	equ	0xFDB
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function _key_process *****************
  5151 ;; Defined at:
  5152 ;;		line 154 in file "src/api/key_menu.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  tm              2   26[BANK1 ] unsigned int 
  5157 ;;  key             1   28[BANK1 ] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;Total ram usage:        3 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:   13
  5174 ;; This function calls:
  5175 ;;		_key_process_down
  5176 ;;		_key_process_set
  5177 ;;		_key_process_set_down_long
  5178 ;;		_key_process_set_long
  5179 ;;		_key_process_up
  5180 ;;		_key_waite_release
  5181 ;;		_ui_disp_menu
  5182 ;; This function is called by:
  5183 ;;		_event_process
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text20
  5188  0023D6                     __ptext20:
  5189                           	opt stack 0
  5190  0023D6                     _key_process:
  5191                           	opt stack 16
  5192                           
  5193                           ;key_menu.c: 156: uint16_t tm;
  5194                           ;key_menu.c: 157: uint8_t key;
  5195                           ;key_menu.c: 158: tm=key_waite_release(2000,&key);
  5196                           
  5197                           ;incstack = 0
  5198  0023D6  0E07               	movlw	7
  5199  0023D8  0100               	movlb	0	; () banked
  5200  0023DA  6FF2               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5201  0023DC  0ED0               	movlw	208
  5202  0023DE  6FF1               	movwf	key_waite_release@timeout& (0+255),b
  5203  0023E0  0E7A               	movlw	low key_process@key
  5204  0023E2  0100               	movlb	0	; () banked
  5205  0023E4  6FF3               	movwf	key_waite_release@key& (0+255),b
  5206  0023E6  0E01               	movlw	high key_process@key
  5207  0023E8  0100               	movlb	0	; () banked
  5208  0023EA  6FF4               	movwf	(key_waite_release@key+1)& (0+255),b
  5209  0023EC  EC75  F016         	call	_key_waite_release	;wreg free
  5210  0023F0  C0F1  F178         	movff	?_key_waite_release,key_process@tm
  5211  0023F4  C0F2  F179         	movff	?_key_waite_release+1,key_process@tm+1
  5212                           
  5213                           ;key_menu.c: 159: if(tm>=2000){
  5214  0023F8  0ED0               	movlw	208
  5215  0023FA  0101               	movlb	1	; () banked
  5216  0023FC  5D78               	subwf	key_process@tm& (0+255),w,b
  5217  0023FE  0E07               	movlw	7
  5218  002400  0101               	movlb	1	; () banked
  5219  002402  5979               	subwfb	(key_process@tm+1)& (0+255),w,b
  5220  002404  A0D8               	btfss	status,0,c
  5221  002406  D010               	goto	l9764
  5222                           
  5223                           ; BSR set to: 1
  5224                           ;key_menu.c: 161: if(key==(0x01<<0x02)){
  5225  002408  0E04               	movlw	4
  5226  00240A  0101               	movlb	1	; () banked
  5227  00240C  197A               	xorwf	key_process@key& (0+255),w,b
  5228  00240E  A4D8               	btfss	status,2,c
  5229  002410  D003               	goto	l9760
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;key_menu.c: 162: key_process_set_long();
  5233  002412  ECB6  F019         	call	_key_process_set_long	;wreg free
  5234                           
  5235                           ;key_menu.c: 163: }else if(keyValue == ((0x01<<0x02)+(0x01<<0x0))){
  5236  002416  D01D               	goto	l9776
  5237  002418                     l9760:
  5238  002418  0E05               	movlw	5
  5239  00241A  0100               	movlb	0	; () banked
  5240  00241C  19D0               	xorwf	_keyValue& (0+255),w,b	;volatile
  5241  00241E  A4D8               	btfss	status,2,c
  5242  002420  D018               	goto	l9776
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;key_menu.c: 164: key_process_set_down_long();
  5246  002422  EC5A  F00C         	call	_key_process_set_down_long	;wreg free
  5247                           
  5248                           ;key_menu.c: 165: }
  5249                           ;key_menu.c: 166: }else{
  5250  002426  D015               	goto	l9776
  5251  002428                     l9764:
  5252                           
  5253                           ;key_menu.c: 168: if(keyValue == (0x01<<0x0)){
  5254  002428  0100               	movlb	0	; () banked
  5255  00242A  05D0               	decf	_keyValue& (0+255),w,b	;volatile
  5256  00242C  A4D8               	btfss	status,2,c
  5257  00242E  D003               	goto	l9768
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;key_menu.c: 169: key_process_down();
  5261  002430  ECF4  F016         	call	_key_process_down	;wreg free
  5262                           
  5263                           ;key_menu.c: 170: }else if(keyValue == (0x01<<0x01)){
  5264  002434  D00E               	goto	l9776
  5265  002436                     l9768:
  5266  002436  0E02               	movlw	2
  5267  002438  0100               	movlb	0	; () banked
  5268  00243A  19D0               	xorwf	_keyValue& (0+255),w,b	;volatile
  5269  00243C  A4D8               	btfss	status,2,c
  5270  00243E  D003               	goto	l9772
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;key_menu.c: 171: key_process_up();
  5274  002440  EC2A  F018         	call	_key_process_up	;wreg free
  5275                           
  5276                           ;key_menu.c: 172: }else if(keyValue == (0x01<<0x02)){
  5277  002444  D006               	goto	l9776
  5278  002446                     l9772:
  5279  002446  0E04               	movlw	4
  5280  002448  0100               	movlb	0	; () banked
  5281  00244A  19D0               	xorwf	_keyValue& (0+255),w,b	;volatile
  5282  00244C  B4D8               	btfsc	status,2,c
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;key_menu.c: 173: key_process_set();
  5286  00244E  ECBD  F018         	call	_key_process_set	;wreg free
  5287  002452                     l9776:
  5288                           
  5289                           ;key_menu.c: 174: }
  5290                           ;key_menu.c: 175: }
  5291                           ;key_menu.c: 176: ui_disp_menu();
  5292  002452  EC22  F019         	call	_ui_disp_menu	;wreg free
  5293  002456  0012               	return		;funcret
  5294  002458                     __end_of_key_process:
  5295                           	opt stack 0
  5296                           tblptru	equ	0xFF8
  5297                           tblptrh	equ	0xFF7
  5298                           tblptrl	equ	0xFF6
  5299                           tablat	equ	0xFF5
  5300                           prodh	equ	0xFF4
  5301                           prodl	equ	0xFF3
  5302                           intcon	equ	0xFF2
  5303                           postinc0	equ	0xFEE
  5304                           wreg	equ	0xFE8
  5305                           postdec1	equ	0xFE5
  5306                           plusw1	equ	0xFE3
  5307                           fsr1h	equ	0xFE2
  5308                           fsr1l	equ	0xFE1
  5309                           indf2	equ	0xFDF
  5310                           plusw2	equ	0xFDB
  5311                           fsr2h	equ	0xFDA
  5312                           fsr2l	equ	0xFD9
  5313                           status	equ	0xFD8
  5314                           
  5315 ;; *************** function _key_waite_release *****************
  5316 ;; Defined at:
  5317 ;;		line 26 in file "src/api/key_menu.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  timeout         2    8[BANK0 ] unsigned int 
  5320 ;;  key             2   10[BANK0 ] PTR unsigned char 
  5321 ;;		 -> key_process@key(1), 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  t8              1   12[BANK0 ] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2    8[BANK0 ] unsigned int 
  5326 ;; Registers used:
  5327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;Total ram usage:        5 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    7
  5340 ;; This function calls:
  5341 ;;		_key_polling
  5342 ;; This function is called by:
  5343 ;;		_key_process
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text21
  5348  002CEA                     __ptext21:
  5349                           	opt stack 0
  5350  002CEA                     _key_waite_release:
  5351                           	opt stack 21
  5352                           
  5353                           ;key_menu.c: 28: uint8_t t8;
  5354                           ;key_menu.c: 30: userTicker_ms=0;
  5355                           
  5356                           ;incstack = 0
  5357  002CEA  0E00               	movlw	0
  5358  002CEC  6E0C               	movwf	_userTicker_ms+1,c	;volatile
  5359  002CEE  0E00               	movlw	0
  5360  002CF0  6E0B               	movwf	_userTicker_ms,c	;volatile
  5361                           
  5362                           ;key_menu.c: 31: while(userTicker_ms<timeout){
  5363  002CF2  D009               	goto	l9292
  5364  002CF4                     l9286:
  5365                           
  5366                           ;key_menu.c: 32: t8=key_polling();
  5367  002CF4  EC40  F015         	call	_key_polling	;wreg free
  5368  002CF8  0100               	movlb	0	; () banked
  5369  002CFA  6FF5               	movwf	key_waite_release@t8& (0+255),b
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;key_menu.c: 33: if(t8==(0x0))break;
  5373  002CFC  0100               	movlb	0	; () banked
  5374  002CFE  51F5               	movf	key_waite_release@t8& (0+255),w,b
  5375  002D00  0100               	movlb	0	; () banked
  5376  002D02  B4D8               	btfsc	status,2,c
  5377  002D04  D008               	goto	l9294
  5378  002D06                     l9292:
  5379  002D06  0100               	movlb	0	; () banked
  5380  002D08  51F1               	movf	key_waite_release@timeout& (0+255),w,b
  5381  002D0A  5C0B               	subwf	_userTicker_ms,w,c	;volatile
  5382  002D0C  0100               	movlb	0	; () banked
  5383  002D0E  51F2               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  5384  002D10  580C               	subwfb	_userTicker_ms+1,w,c	;volatile
  5385  002D12  A0D8               	btfss	status,0,c
  5386  002D14  D7EF               	goto	l9286
  5387  002D16                     l9294:
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;key_menu.c: 34: }
  5391                           ;key_menu.c: 35: *key=t8;
  5392  002D16  C0F3  FFD9         	movff	key_waite_release@key,fsr2l
  5393  002D1A  C0F4  FFDA         	movff	key_waite_release@key+1,fsr2h
  5394  002D1E  C0F5  FFDF         	movff	key_waite_release@t8,indf2
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;key_menu.c: 36: return userTicker_ms;
  5398  002D22  C00B  F0F1         	movff	_userTicker_ms,?_key_waite_release	;volatile
  5399  002D26  C00C  F0F2         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  5400  002D2A  0012               	return	
  5401  002D2C                     __end_of_key_waite_release:
  5402                           	opt stack 0
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           prodh	equ	0xFF4
  5408                           prodl	equ	0xFF3
  5409                           intcon	equ	0xFF2
  5410                           postinc0	equ	0xFEE
  5411                           wreg	equ	0xFE8
  5412                           postdec1	equ	0xFE5
  5413                           plusw1	equ	0xFE3
  5414                           fsr1h	equ	0xFE2
  5415                           fsr1l	equ	0xFE1
  5416                           indf2	equ	0xFDF
  5417                           plusw2	equ	0xFDB
  5418                           fsr2h	equ	0xFDA
  5419                           fsr2l	equ	0xFD9
  5420                           status	equ	0xFD8
  5421                           
  5422 ;; *************** function _key_polling *****************
  5423 ;; Defined at:
  5424 ;;		line 8 in file "src/driver/key.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  t8              1    7[BANK0 ] unsigned char 
  5429 ;;  ktemp           1    6[BANK0 ] unsigned char 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      unsigned char 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;Total ram usage:        2 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    6
  5446 ;; This function calls:
  5447 ;;		_delay_ms
  5448 ;; This function is called by:
  5449 ;;		_key_waite_release
  5450 ;;		_event_process
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text22
  5455  002A80                     __ptext22:
  5456                           	opt stack 0
  5457  002A80                     _key_polling:
  5458                           	opt stack 21
  5459                           
  5460                           ;key.c: 10: uint8_t ktemp=(0x0);
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;incstack = 0
  5464  002A80  0E00               	movlw	0
  5465  002A82  0100               	movlb	0	; () banked
  5466  002A84  6FEF               	movwf	key_polling@ktemp& (0+255),b
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;key.c: 11: uint8_t t8=0xff;
  5470  002A86  0100               	movlb	0	; () banked
  5471  002A88  69F0               	setf	key_polling@t8& (0+255),b
  5472                           
  5473                           ; BSR set to: 0
  5474                           
  5475                           ; BSR set to: 0
  5476                           
  5477                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  5478  002A8A  0E0E               	movlw	14
  5479  002A8C  1293               	iorwf	3987,f,c	;volatile
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5483                           
  5484                           ; BSR set to: 0
  5485  002A8E  5081               	movf	3969,w,c	;volatile
  5486  002A90  0B0E               	andlw	14
  5487  002A92  0100               	movlb	0	; () banked
  5488  002A94  6FF0               	movwf	key_polling@t8& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  5492  002A96  0100               	movlb	0	; () banked
  5493  002A98  51F0               	movf	key_polling@t8& (0+255),w,b
  5494  002A9A  0B0E               	andlw	14
  5495  002A9C  0A0E               	xorlw	14
  5496  002A9E  B4D8               	btfsc	status,2,c
  5497  002AA0  D01A               	goto	l9146
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;key.c: 16: delay_ms(10);
  5501  002AA2  0E00               	movlw	0
  5502  002AA4  0100               	movlb	0	; () banked
  5503  002AA6  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
  5504  002AA8  0E0A               	movlw	10
  5505  002AAA  6FED               	movwf	delay_ms@dly& (0+255),b
  5506  002AAC  EC0F  F019         	call	_delay_ms	;wreg free
  5507                           
  5508                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5509  002AB0  5081               	movf	3969,w,c	;volatile
  5510  002AB2  0B0E               	andlw	14
  5511  002AB4  0100               	movlb	0	; () banked
  5512  002AB6  6FF0               	movwf	key_polling@t8& (0+255),b
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;key.c: 18: if(!( t8 & (1<<3))){
  5516  002AB8  0100               	movlb	0	; () banked
  5517  002ABA  B7F0               	btfsc	key_polling@t8& (0+255),3,b
  5518  002ABC  D002               	goto	l9138
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;key.c: 19: ktemp |= (0x01<<0x0);
  5522  002ABE  0100               	movlb	0	; () banked
  5523  002AC0  81EF               	bsf	key_polling@ktemp& (0+255),0,b
  5524  002AC2                     l9138:
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;key.c: 20: }
  5528                           ;key.c: 21: if(!( t8 & (1<<2))){
  5529  002AC2  0100               	movlb	0	; () banked
  5530  002AC4  B5F0               	btfsc	key_polling@t8& (0+255),2,b
  5531  002AC6  D002               	goto	l9142
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;key.c: 22: ktemp |= (0x01<<0x01);
  5535  002AC8  0100               	movlb	0	; () banked
  5536  002ACA  83EF               	bsf	key_polling@ktemp& (0+255),1,b
  5537  002ACC                     l9142:
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;key.c: 23: }
  5541                           ;key.c: 24: if(!( t8 & (1<<1))){
  5542  002ACC  0100               	movlb	0	; () banked
  5543  002ACE  B3F0               	btfsc	key_polling@t8& (0+255),1,b
  5544  002AD0  D002               	goto	l9146
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;key.c: 25: ktemp |= (0x01<<0x02);
  5548  002AD2  0100               	movlb	0	; () banked
  5549  002AD4  85EF               	bsf	key_polling@ktemp& (0+255),2,b
  5550  002AD6                     l9146:
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;key.c: 26: }
  5554                           ;key.c: 27: }
  5555                           ;key.c: 29: return ktemp;
  5556  002AD6  0100               	movlb	0	; () banked
  5557  002AD8  51EF               	movf	key_polling@ktemp& (0+255),w,b
  5558  002ADA  0012               	return	
  5559  002ADC                     __end_of_key_polling:
  5560                           	opt stack 0
  5561                           tblptru	equ	0xFF8
  5562                           tblptrh	equ	0xFF7
  5563                           tblptrl	equ	0xFF6
  5564                           tablat	equ	0xFF5
  5565                           prodh	equ	0xFF4
  5566                           prodl	equ	0xFF3
  5567                           intcon	equ	0xFF2
  5568                           postinc0	equ	0xFEE
  5569                           wreg	equ	0xFE8
  5570                           postdec1	equ	0xFE5
  5571                           plusw1	equ	0xFE3
  5572                           fsr1h	equ	0xFE2
  5573                           fsr1l	equ	0xFE1
  5574                           indf2	equ	0xFDF
  5575                           plusw2	equ	0xFDB
  5576                           fsr2h	equ	0xFDA
  5577                           fsr2l	equ	0xFD9
  5578                           status	equ	0xFD8
  5579                           
  5580 ;; *************** function _key_process_up *****************
  5581 ;; Defined at:
  5582 ;;		line 69 in file "src/api/key_menu.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;Total ram usage:        0 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    6
  5603 ;; This function calls:
  5604 ;;		_key_adj_value_fixed_point
  5605 ;; This function is called by:
  5606 ;;		_key_process
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text23
  5611  003054                     __ptext23:
  5612                           	opt stack 0
  5613  003054                     _key_process_up:
  5614                           	opt stack 22
  5615                           
  5616                           ;key_menu.c: 71: switch(menu){
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;incstack = 0
  5620  003054  D00B               	goto	l9314
  5621  003056                     l9310:
  5622  003056  0E1D               	movlw	low _passWord
  5623  003058  0101               	movlb	1	; () banked
  5624  00305A  6F5F               	movwf	key_adj_value_fixed_point@value& (0+255),b
  5625  00305C  0E00               	movlw	high _passWord
  5626  00305E  0101               	movlb	1	; () banked
  5627  003060  6F60               	movwf	(key_adj_value_fixed_point@value+1)& (0+255),b
  5628  003062  C01F  F161         	movff	_adjLocation,key_adj_value_fixed_point@loc	;volatile
  5629  003066  ECB9  F00A         	call	_key_adj_value_fixed_point	;wreg free
  5630                           
  5631                           ;key_menu.c: 77: }
  5632                           
  5633                           ;key_menu.c: 76: default:break;
  5634  00306A  0012               	return	
  5635  00306C                     l9314:
  5636  00306C  501B               	movf	_menu,w,c	;volatile
  5637                           
  5638                           ; Switch size 1, requested type "space"
  5639                           ; Number of cases is 4, Range of values is 0 to 16
  5640                           ; switch strategies available:
  5641                           ; Name         Instructions Cycles
  5642                           ; simple_byte           13     7 (average)
  5643                           ;	Chosen strategy is simple_byte
  5644  00306E  0A00               	xorlw	0	; case 0
  5645  003070  B4D8               	btfsc	status,2,c
  5646  003072  0012               	return	
  5647  003074  0A01               	xorlw	1	; case 1
  5648  003076  B4D8               	btfsc	status,2,c
  5649  003078  0012               	return	
  5650  00307A  0A03               	xorlw	3	; case 2
  5651  00307C  B4D8               	btfsc	status,2,c
  5652  00307E  0012               	return	
  5653  003080  0A12               	xorlw	18	; case 16
  5654  003082  A4D8               	btfss	status,2,c
  5655  003084  0012               	return	
  5656  003086  D7E7               	goto	l9310
  5657  003088                     __end_of_key_process_up:
  5658                           	opt stack 0
  5659                           tblptru	equ	0xFF8
  5660                           tblptrh	equ	0xFF7
  5661                           tblptrl	equ	0xFF6
  5662                           tablat	equ	0xFF5
  5663                           prodh	equ	0xFF4
  5664                           prodl	equ	0xFF3
  5665                           intcon	equ	0xFF2
  5666                           postinc0	equ	0xFEE
  5667                           wreg	equ	0xFE8
  5668                           postdec1	equ	0xFE5
  5669                           plusw1	equ	0xFE3
  5670                           fsr1h	equ	0xFE2
  5671                           fsr1l	equ	0xFE1
  5672                           indf2	equ	0xFDF
  5673                           plusw2	equ	0xFDB
  5674                           fsr2h	equ	0xFDA
  5675                           fsr2l	equ	0xFD9
  5676                           status	equ	0xFD8
  5677                           
  5678 ;; *************** function _key_adj_value_fixed_point *****************
  5679 ;; Defined at:
  5680 ;;		line 58 in file "src/api/key_menu.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  value           2    1[BANK1 ] PTR unsigned int 
  5683 ;;		 -> passWord(2), 
  5684 ;;  loc             1    3[BANK1 ] unsigned char 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  t16             2    6[BANK1 ] unsigned int 
  5687 ;;  dloc            2    4[BANK1 ] unsigned int 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;Total ram usage:        7 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    5
  5704 ;; This function calls:
  5705 ;;		___exp_10
  5706 ;;		___lwdiv
  5707 ;;		___lwmod
  5708 ;;		___wmul
  5709 ;; This function is called by:
  5710 ;;		_key_process_up
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text24
  5715  001572                     __ptext24:
  5716                           	opt stack 0
  5717  001572                     _key_adj_value_fixed_point:
  5718                           	opt stack 22
  5719                           
  5720                           ;key_menu.c: 60: uint16_t dloc;
  5721                           ;key_menu.c: 61: uint16_t t16=*value;
  5722                           
  5723                           ;incstack = 0
  5724  001572  C15F  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  5725  001576  C160  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  5726  00157A  CFDE F164          	movff	postinc2,key_adj_value_fixed_point@t16
  5727  00157E  CFDD F165          	movff	postdec2,key_adj_value_fixed_point@t16+1
  5728                           
  5729                           ;key_menu.c: 62: dloc=(t16/__exp_10(loc))%10;
  5730  001582  0101               	movlb	1	; () banked
  5731  001584  5161               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  5732  001586  ECB3  F014         	call	___exp_10
  5733  00158A  C0E9  F0EE         	movff	?___exp_10,___lwdiv@divisor
  5734  00158E  C0EA  F0EF         	movff	?___exp_10+1,___lwdiv@divisor+1
  5735  001592  C164  F0EC         	movff	key_adj_value_fixed_point@t16,___lwdiv@dividend
  5736  001596  C165  F0ED         	movff	key_adj_value_fixed_point@t16+1,___lwdiv@dividend+1
  5737  00159A  EC6B  F012         	call	___lwdiv	;wreg free
  5738  00159E  C0EC  F0F3         	movff	?___lwdiv,___lwmod@dividend
  5739  0015A2  C0ED  F0F4         	movff	?___lwdiv+1,___lwmod@dividend+1
  5740  0015A6  0E00               	movlw	0
  5741  0015A8  0100               	movlb	0	; () banked
  5742  0015AA  6FF6               	movwf	(___lwmod@divisor+1)& (0+255),b
  5743  0015AC  0E0A               	movlw	10
  5744  0015AE  6FF5               	movwf	___lwmod@divisor& (0+255),b
  5745  0015B0  EC51  F014         	call	___lwmod	;wreg free
  5746  0015B4  C0F3  F162         	movff	?___lwmod,key_adj_value_fixed_point@dloc
  5747  0015B8  C0F4  F163         	movff	?___lwmod+1,key_adj_value_fixed_point@dloc+1
  5748                           
  5749                           ;key_menu.c: 63: t16=t16-dloc*__exp_10(loc);
  5750  0015BC  0101               	movlb	1	; () banked
  5751  0015BE  5161               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  5752  0015C0  ECB3  F014         	call	___exp_10
  5753  0015C4  C0E9  F0EC         	movff	?___exp_10,___wmul@multiplier
  5754  0015C8  C0EA  F0ED         	movff	?___exp_10+1,___wmul@multiplier+1
  5755  0015CC  C162  F0EE         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  5756  0015D0  C163  F0EF         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  5757  0015D4  ECBE  F017         	call	___wmul	;wreg free
  5758  0015D8  0100               	movlb	0	; () banked
  5759  0015DA  1FEC               	comf	?___wmul& (0+255),f,b
  5760  0015DC  0100               	movlb	0	; () banked
  5761  0015DE  1FED               	comf	(?___wmul+1)& (0+255),f,b
  5762  0015E0  0100               	movlb	0	; () banked
  5763  0015E2  4BEC               	infsnz	?___wmul& (0+255),f,b
  5764  0015E4  2BED               	incf	(?___wmul+1)& (0+255),f,b
  5765  0015E6  0101               	movlb	1	; () banked
  5766  0015E8  5164               	movf	key_adj_value_fixed_point@t16& (0+255),w,b
  5767  0015EA  0100               	movlb	0	; () banked
  5768  0015EC  25EC               	addwf	?___wmul& (0+255),w,b
  5769  0015EE  0101               	movlb	1	; () banked
  5770  0015F0  6F64               	movwf	key_adj_value_fixed_point@t16& (0+255),b
  5771  0015F2  0101               	movlb	1	; () banked
  5772  0015F4  5165               	movf	(key_adj_value_fixed_point@t16+1)& (0+255),w,b
  5773  0015F6  0100               	movlb	0	; () banked
  5774  0015F8  21ED               	addwfc	(?___wmul+1)& (0+255),w,b
  5775  0015FA  0101               	movlb	1	; () banked
  5776  0015FC  6F65               	movwf	(key_adj_value_fixed_point@t16+1)& (0+255),b
  5777                           
  5778                           ; BSR set to: 1
  5779                           ;key_menu.c: 64: dloc++;
  5780  0015FE  0101               	movlb	1	; () banked
  5781  001600  4B62               	infsnz	key_adj_value_fixed_point@dloc& (0+255),f,b
  5782  001602  2B63               	incf	(key_adj_value_fixed_point@dloc+1)& (0+255),f,b
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;key_menu.c: 65: if(dloc>9)dloc=0;
  5786  001604  0101               	movlb	1	; () banked
  5787  001606  5163               	movf	(key_adj_value_fixed_point@dloc+1)& (0+255),w,b
  5788  001608  E105               	bnz	u7220
  5789  00160A  0E0A               	movlw	10
  5790  00160C  0101               	movlb	1	; () banked
  5791  00160E  5D62               	subwf	key_adj_value_fixed_point@dloc& (0+255),w,b
  5792  001610  A0D8               	btfss	status,0,c
  5793  001612  D005               	goto	l9176
  5794  001614                     u7220:
  5795                           
  5796                           ; BSR set to: 1
  5797  001614  0E00               	movlw	0
  5798  001616  0101               	movlb	1	; () banked
  5799  001618  6F63               	movwf	(key_adj_value_fixed_point@dloc+1)& (0+255),b
  5800  00161A  0E00               	movlw	0
  5801  00161C  6F62               	movwf	key_adj_value_fixed_point@dloc& (0+255),b
  5802  00161E                     l9176:
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;key_menu.c: 66: t16+=(dloc*__exp_10(loc));
  5806  00161E  0101               	movlb	1	; () banked
  5807  001620  5161               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  5808  001622  ECB3  F014         	call	___exp_10
  5809  001626  C0E9  F0EC         	movff	?___exp_10,___wmul@multiplier
  5810  00162A  C0EA  F0ED         	movff	?___exp_10+1,___wmul@multiplier+1
  5811  00162E  C162  F0EE         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  5812  001632  C163  F0EF         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  5813  001636  ECBE  F017         	call	___wmul	;wreg free
  5814  00163A  0100               	movlb	0	; () banked
  5815  00163C  51EC               	movf	?___wmul& (0+255),w,b
  5816  00163E  0101               	movlb	1	; () banked
  5817  001640  2764               	addwf	key_adj_value_fixed_point@t16& (0+255),f,b
  5818  001642  0100               	movlb	0	; () banked
  5819  001644  51ED               	movf	(?___wmul+1)& (0+255),w,b
  5820  001646  0101               	movlb	1	; () banked
  5821  001648  2365               	addwfc	(key_adj_value_fixed_point@t16+1)& (0+255),f,b
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;key_menu.c: 67: *value=t16;
  5825  00164A  C15F  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  5826  00164E  C160  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  5827  001652  C164  FFDE         	movff	key_adj_value_fixed_point@t16,postinc2
  5828  001656  C165  FFDD         	movff	key_adj_value_fixed_point@t16+1,postdec2
  5829                           
  5830                           ; BSR set to: 1
  5831  00165A  0012               	return		;funcret
  5832  00165C                     __end_of_key_adj_value_fixed_point:
  5833                           	opt stack 0
  5834                           tblptru	equ	0xFF8
  5835                           tblptrh	equ	0xFF7
  5836                           tblptrl	equ	0xFF6
  5837                           tablat	equ	0xFF5
  5838                           prodh	equ	0xFF4
  5839                           prodl	equ	0xFF3
  5840                           intcon	equ	0xFF2
  5841                           postinc0	equ	0xFEE
  5842                           wreg	equ	0xFE8
  5843                           postdec1	equ	0xFE5
  5844                           plusw1	equ	0xFE3
  5845                           fsr1h	equ	0xFE2
  5846                           fsr1l	equ	0xFE1
  5847                           indf2	equ	0xFDF
  5848                           postinc2	equ	0xFDE
  5849                           postdec2	equ	0xFDD
  5850                           plusw2	equ	0xFDB
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           
  5855 ;; *************** function ___wmul *****************
  5856 ;; Defined at:
  5857 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  multiplier      2    3[BANK0 ] unsigned int 
  5860 ;;  multiplicand    2    5[BANK0 ] unsigned int 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  product         2    7[BANK0 ] unsigned int 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  2    3[BANK0 ] unsigned int 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0, prodl, prodh
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;Total ram usage:        6 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    4
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_key_adj_value_fixed_point
  5883 ;;		_calib_data_set_default_diff_pr
  5884 ;;		_calib_data_set_default_pr
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text25
  5889  002F7C                     __ptext25:
  5890                           	opt stack 0
  5891  002F7C                     ___wmul:
  5892                           	opt stack 22
  5893                           
  5894                           ; BSR set to: 1
  5895                           ;incstack = 0
  5896  002F7C  0100               	movlb	0	; () banked
  5897  002F7E  51EC               	movf	___wmul@multiplier& (0+255),w,b
  5898  002F80  0100               	movlb	0	; () banked
  5899  002F82  03EE               	mulwf	___wmul@multiplicand& (0+255),b
  5900  002F84  CFF3 F0F0          	movff	prodl,___wmul@product
  5901  002F88  CFF4 F0F1          	movff	prodh,___wmul@product+1
  5902  002F8C  0100               	movlb	0	; () banked
  5903  002F8E  51EC               	movf	___wmul@multiplier& (0+255),w,b
  5904  002F90  0100               	movlb	0	; () banked
  5905  002F92  03EF               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5906  002F94  50F3               	movf	prodl,w,c
  5907  002F96  0100               	movlb	0	; () banked
  5908  002F98  27F1               	addwf	(___wmul@product+1)& (0+255),f,b
  5909  002F9A  0100               	movlb	0	; () banked
  5910  002F9C  51ED               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5911  002F9E  0100               	movlb	0	; () banked
  5912  002FA0  03EE               	mulwf	___wmul@multiplicand& (0+255),b
  5913  002FA2  50F3               	movf	prodl,w,c
  5914  002FA4  0100               	movlb	0	; () banked
  5915  002FA6  27F1               	addwf	(___wmul@product+1)& (0+255),f,b
  5916                           
  5917                           ; BSR set to: 0
  5918  002FA8  C0F0  F0EC         	movff	___wmul@product,?___wmul
  5919  002FAC  C0F1  F0ED         	movff	___wmul@product+1,?___wmul+1
  5920  002FB0  0012               	return	
  5921  002FB2                     __end_of___wmul:
  5922                           	opt stack 0
  5923                           tblptru	equ	0xFF8
  5924                           tblptrh	equ	0xFF7
  5925                           tblptrl	equ	0xFF6
  5926                           tablat	equ	0xFF5
  5927                           prodh	equ	0xFF4
  5928                           prodl	equ	0xFF3
  5929                           intcon	equ	0xFF2
  5930                           postinc0	equ	0xFEE
  5931                           wreg	equ	0xFE8
  5932                           postdec1	equ	0xFE5
  5933                           plusw1	equ	0xFE3
  5934                           fsr1h	equ	0xFE2
  5935                           fsr1l	equ	0xFE1
  5936                           indf2	equ	0xFDF
  5937                           postinc2	equ	0xFDE
  5938                           postdec2	equ	0xFDD
  5939                           plusw2	equ	0xFDB
  5940                           fsr2h	equ	0xFDA
  5941                           fsr2l	equ	0xFD9
  5942                           status	equ	0xFD8
  5943                           
  5944 ;; *************** function ___lwmod *****************
  5945 ;; Defined at:
  5946 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwmod.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  dividend        2   10[BANK0 ] unsigned int 
  5949 ;;  divisor         2   12[BANK0 ] unsigned int 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  counter         1    0[BANK1 ] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  2   10[BANK0 ] unsigned int 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;Total ram usage:        5 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    4
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_key_adj_value_fixed_point
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text26
  5976  0028A2                     __ptext26:
  5977                           	opt stack 0
  5978  0028A2                     ___lwmod:
  5979                           	opt stack 22
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;incstack = 0
  5983  0028A2  0100               	movlb	0	; () banked
  5984  0028A4  51F5               	movf	___lwmod@divisor& (0+255),w,b
  5985  0028A6  0100               	movlb	0	; () banked
  5986  0028A8  11F6               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5987  0028AA  B4D8               	btfsc	status,2,c
  5988  0028AC  D026               	goto	l2113
  5989                           
  5990                           ; BSR set to: 0
  5991  0028AE  0E01               	movlw	1
  5992  0028B0  0101               	movlb	1	; () banked
  5993  0028B2  6F5E               	movwf	___lwmod@counter& (0+255),b
  5994  0028B4  D006               	goto	l9110
  5995  0028B6                     l9108:
  5996  0028B6  0100               	movlb	0	; () banked
  5997  0028B8  90D8               	bcf	status,0,c
  5998  0028BA  37F5               	rlcf	___lwmod@divisor& (0+255),f,b
  5999  0028BC  37F6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6000  0028BE  0101               	movlb	1	; () banked
  6001  0028C0  2B5E               	incf	___lwmod@counter& (0+255),f,b
  6002  0028C2                     l9110:
  6003                           
  6004                           ; BSR set to: 1
  6005  0028C2  0100               	movlb	0	; () banked
  6006  0028C4  AFF6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6007  0028C6  D7F7               	goto	l9108
  6008  0028C8                     l9112:
  6009  0028C8  0100               	movlb	0	; () banked
  6010  0028CA  51F5               	movf	___lwmod@divisor& (0+255),w,b
  6011  0028CC  0100               	movlb	0	; () banked
  6012  0028CE  5DF3               	subwf	___lwmod@dividend& (0+255),w,b
  6013  0028D0  0100               	movlb	0	; () banked
  6014  0028D2  51F6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6015  0028D4  0100               	movlb	0	; () banked
  6016  0028D6  59F4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6017  0028D8  A0D8               	btfss	status,0,c
  6018  0028DA  D008               	goto	l9116
  6019                           
  6020                           ; BSR set to: 0
  6021  0028DC  0100               	movlb	0	; () banked
  6022  0028DE  51F5               	movf	___lwmod@divisor& (0+255),w,b
  6023  0028E0  0100               	movlb	0	; () banked
  6024  0028E2  5FF3               	subwf	___lwmod@dividend& (0+255),f,b
  6025  0028E4  0100               	movlb	0	; () banked
  6026  0028E6  51F6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6027  0028E8  0100               	movlb	0	; () banked
  6028  0028EA  5BF4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6029  0028EC                     l9116:
  6030                           
  6031                           ; BSR set to: 0
  6032  0028EC  0100               	movlb	0	; () banked
  6033  0028EE  90D8               	bcf	status,0,c
  6034  0028F0  33F6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6035  0028F2  33F5               	rrcf	___lwmod@divisor& (0+255),f,b
  6036                           
  6037                           ; BSR set to: 0
  6038  0028F4  0101               	movlb	1	; () banked
  6039  0028F6  2F5E               	decfsz	___lwmod@counter& (0+255),f,b
  6040  0028F8  D7E7               	goto	l9112
  6041  0028FA                     l2113:
  6042  0028FA  C0F3  F0F3         	movff	___lwmod@dividend,?___lwmod
  6043  0028FE  C0F4  F0F4         	movff	___lwmod@dividend+1,?___lwmod+1
  6044  002902  0012               	return		;funcret
  6045  002904                     __end_of___lwmod:
  6046                           	opt stack 0
  6047                           tblptru	equ	0xFF8
  6048                           tblptrh	equ	0xFF7
  6049                           tblptrl	equ	0xFF6
  6050                           tablat	equ	0xFF5
  6051                           prodh	equ	0xFF4
  6052                           prodl	equ	0xFF3
  6053                           intcon	equ	0xFF2
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           postdec1	equ	0xFE5
  6057                           plusw1	equ	0xFE3
  6058                           fsr1h	equ	0xFE2
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           postinc2	equ	0xFDE
  6062                           postdec2	equ	0xFDD
  6063                           plusw2	equ	0xFDB
  6064                           fsr2h	equ	0xFDA
  6065                           fsr2l	equ	0xFD9
  6066                           status	equ	0xFD8
  6067                           
  6068 ;; *************** function ___lwdiv *****************
  6069 ;; Defined at:
  6070 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  dividend        2    3[BANK0 ] unsigned int 
  6073 ;;  divisor         2    5[BANK0 ] unsigned int 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  quotient        2    8[BANK0 ] unsigned int 
  6076 ;;  counter         1    7[BANK0 ] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  2    3[BANK0 ] unsigned int 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;Total ram usage:        7 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    4
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_key_adj_value_fixed_point
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text27
  6101  0024D6                     __ptext27:
  6102                           	opt stack 0
  6103  0024D6                     ___lwdiv:
  6104                           	opt stack 22
  6105                           
  6106                           ;incstack = 0
  6107  0024D6  0E00               	movlw	0
  6108  0024D8  0100               	movlb	0	; () banked
  6109  0024DA  6FF2               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6110  0024DC  0E00               	movlw	0
  6111  0024DE  6FF1               	movwf	___lwdiv@quotient& (0+255),b
  6112                           
  6113                           ; BSR set to: 0
  6114  0024E0  0100               	movlb	0	; () banked
  6115  0024E2  51EE               	movf	___lwdiv@divisor& (0+255),w,b
  6116  0024E4  0100               	movlb	0	; () banked
  6117  0024E6  11EF               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6118  0024E8  B4D8               	btfsc	status,2,c
  6119  0024EA  D02C               	goto	l2103
  6120                           
  6121                           ; BSR set to: 0
  6122  0024EC  0E01               	movlw	1
  6123  0024EE  0100               	movlb	0	; () banked
  6124  0024F0  6FF0               	movwf	___lwdiv@counter& (0+255),b
  6125  0024F2  D006               	goto	l9090
  6126  0024F4                     l9088:
  6127                           
  6128                           ; BSR set to: 0
  6129  0024F4  0100               	movlb	0	; () banked
  6130  0024F6  90D8               	bcf	status,0,c
  6131  0024F8  37EE               	rlcf	___lwdiv@divisor& (0+255),f,b
  6132  0024FA  37EF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6133  0024FC  0100               	movlb	0	; () banked
  6134  0024FE  2BF0               	incf	___lwdiv@counter& (0+255),f,b
  6135  002500                     l9090:
  6136                           
  6137                           ; BSR set to: 0
  6138  002500  0100               	movlb	0	; () banked
  6139  002502  AFEF               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6140  002504  D7F7               	goto	l9088
  6141  002506                     l9092:
  6142                           
  6143                           ; BSR set to: 0
  6144  002506  0100               	movlb	0	; () banked
  6145  002508  90D8               	bcf	status,0,c
  6146  00250A  37F1               	rlcf	___lwdiv@quotient& (0+255),f,b
  6147  00250C  37F2               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6148                           
  6149                           ; BSR set to: 0
  6150  00250E  0100               	movlb	0	; () banked
  6151  002510  51EE               	movf	___lwdiv@divisor& (0+255),w,b
  6152  002512  0100               	movlb	0	; () banked
  6153  002514  5DEC               	subwf	___lwdiv@dividend& (0+255),w,b
  6154  002516  0100               	movlb	0	; () banked
  6155  002518  51EF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6156  00251A  0100               	movlb	0	; () banked
  6157  00251C  59ED               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6158  00251E  A0D8               	btfss	status,0,c
  6159  002520  D00A               	goto	l9100
  6160                           
  6161                           ; BSR set to: 0
  6162  002522  0100               	movlb	0	; () banked
  6163  002524  51EE               	movf	___lwdiv@divisor& (0+255),w,b
  6164  002526  0100               	movlb	0	; () banked
  6165  002528  5FEC               	subwf	___lwdiv@dividend& (0+255),f,b
  6166  00252A  0100               	movlb	0	; () banked
  6167  00252C  51EF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6168  00252E  0100               	movlb	0	; () banked
  6169  002530  5BED               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6170                           
  6171                           ; BSR set to: 0
  6172  002532  0100               	movlb	0	; () banked
  6173  002534  81F1               	bsf	___lwdiv@quotient& (0+255),0,b
  6174  002536                     l9100:
  6175                           
  6176                           ; BSR set to: 0
  6177  002536  0100               	movlb	0	; () banked
  6178  002538  90D8               	bcf	status,0,c
  6179  00253A  33EF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6180  00253C  33EE               	rrcf	___lwdiv@divisor& (0+255),f,b
  6181                           
  6182                           ; BSR set to: 0
  6183  00253E  0100               	movlb	0	; () banked
  6184  002540  2FF0               	decfsz	___lwdiv@counter& (0+255),f,b
  6185  002542  D7E1               	goto	l9092
  6186  002544                     l2103:
  6187                           
  6188                           ; BSR set to: 0
  6189  002544  C0F1  F0EC         	movff	___lwdiv@quotient,?___lwdiv
  6190  002548  C0F2  F0ED         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6191                           
  6192                           ; BSR set to: 0
  6193  00254C  0012               	return		;funcret
  6194  00254E                     __end_of___lwdiv:
  6195                           	opt stack 0
  6196                           tblptru	equ	0xFF8
  6197                           tblptrh	equ	0xFF7
  6198                           tblptrl	equ	0xFF6
  6199                           tablat	equ	0xFF5
  6200                           prodh	equ	0xFF4
  6201                           prodl	equ	0xFF3
  6202                           intcon	equ	0xFF2
  6203                           postinc0	equ	0xFEE
  6204                           wreg	equ	0xFE8
  6205                           postdec1	equ	0xFE5
  6206                           plusw1	equ	0xFE3
  6207                           fsr1h	equ	0xFE2
  6208                           fsr1l	equ	0xFE1
  6209                           indf2	equ	0xFDF
  6210                           postinc2	equ	0xFDE
  6211                           postdec2	equ	0xFDD
  6212                           plusw2	equ	0xFDB
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           
  6217 ;; *************** function ___exp_10 *****************
  6218 ;; Defined at:
  6219 ;;		line 15 in file "src/api/key_menu.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  n               1    wreg     unsigned char 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  n               1    2[BANK0 ] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  2    0[BANK0 ] unsigned int 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;Total ram usage:        3 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    4
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_key_adj_value_fixed_point
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text28
  6248  002966                     __ptext28:
  6249                           	opt stack 0
  6250  002966                     ___exp_10:
  6251                           	opt stack 22
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;incstack = 0
  6255                           ;___exp_10@n stored from wreg
  6256  002966  0100               	movlb	0	; () banked
  6257  002968  6FEB               	movwf	___exp_10@n& (0+255),b
  6258                           
  6259                           ;key_menu.c: 17: switch(n){
  6260  00296A  D01E               	goto	l8950
  6261  00296C                     l8928:
  6262  00296C  0E00               	movlw	0
  6263  00296E  0100               	movlb	0	; () banked
  6264  002970  6FEA               	movwf	(?___exp_10+1)& (0+255),b
  6265  002972  0E01               	movlw	1
  6266  002974  6FE9               	movwf	?___exp_10& (0+255),b
  6267                           
  6268                           ; BSR set to: 0
  6269  002976  0012               	return	
  6270  002978                     l8932:
  6271                           
  6272                           ; BSR set to: 0
  6273  002978  0E00               	movlw	0
  6274  00297A  0100               	movlb	0	; () banked
  6275  00297C  6FEA               	movwf	(?___exp_10+1)& (0+255),b
  6276  00297E  0E0A               	movlw	10
  6277  002980  6FE9               	movwf	?___exp_10& (0+255),b
  6278                           
  6279                           ; BSR set to: 0
  6280  002982  0012               	return	
  6281  002984                     l8936:
  6282                           
  6283                           ; BSR set to: 0
  6284  002984  0E00               	movlw	0
  6285  002986  0100               	movlb	0	; () banked
  6286  002988  6FEA               	movwf	(?___exp_10+1)& (0+255),b
  6287  00298A  0E64               	movlw	100
  6288  00298C  6FE9               	movwf	?___exp_10& (0+255),b
  6289                           
  6290                           ; BSR set to: 0
  6291  00298E  0012               	return	
  6292  002990                     l8940:
  6293                           
  6294                           ; BSR set to: 0
  6295  002990  0E03               	movlw	3
  6296  002992  0100               	movlb	0	; () banked
  6297  002994  6FEA               	movwf	(?___exp_10+1)& (0+255),b
  6298  002996  0EE8               	movlw	232
  6299  002998  6FE9               	movwf	?___exp_10& (0+255),b
  6300                           
  6301                           ; BSR set to: 0
  6302  00299A  0012               	return	
  6303  00299C                     l8944:
  6304                           
  6305                           ; BSR set to: 0
  6306  00299C  0E27               	movlw	39
  6307  00299E  0100               	movlb	0	; () banked
  6308  0029A0  6FEA               	movwf	(?___exp_10+1)& (0+255),b
  6309  0029A2  0E10               	movlw	16
  6310  0029A4  6FE9               	movwf	?___exp_10& (0+255),b
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;key_menu.c: 23: }
  6314                           
  6315                           ; BSR set to: 0
  6316  0029A6  0012               	return	
  6317  0029A8                     l8950:
  6318  0029A8  0100               	movlb	0	; () banked
  6319  0029AA  51EB               	movf	___exp_10@n& (0+255),w,b
  6320                           
  6321                           ; Switch size 1, requested type "space"
  6322                           ; Number of cases is 4, Range of values is 0 to 4
  6323                           ; switch strategies available:
  6324                           ; Name         Instructions Cycles
  6325                           ; simple_byte           13     7 (average)
  6326                           ;	Chosen strategy is simple_byte
  6327  0029AC  0A00               	xorlw	0	; case 0
  6328  0029AE  B4D8               	btfsc	status,2,c
  6329  0029B0  D7DD               	goto	l8928
  6330  0029B2  0A02               	xorlw	2	; case 2
  6331  0029B4  B4D8               	btfsc	status,2,c
  6332  0029B6  D7E0               	goto	l8932
  6333  0029B8  0A01               	xorlw	1	; case 3
  6334  0029BA  B4D8               	btfsc	status,2,c
  6335  0029BC  D7E3               	goto	l8936
  6336  0029BE  0A07               	xorlw	7	; case 4
  6337  0029C0  B4D8               	btfsc	status,2,c
  6338  0029C2  D7E6               	goto	l8940
  6339  0029C4  D7EB               	goto	l8944
  6340  0029C6                     __end_of___exp_10:
  6341                           	opt stack 0
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           intcon	equ	0xFF2
  6349                           postinc0	equ	0xFEE
  6350                           wreg	equ	0xFE8
  6351                           postdec1	equ	0xFE5
  6352                           plusw1	equ	0xFE3
  6353                           fsr1h	equ	0xFE2
  6354                           fsr1l	equ	0xFE1
  6355                           indf2	equ	0xFDF
  6356                           postinc2	equ	0xFDE
  6357                           postdec2	equ	0xFDD
  6358                           plusw2	equ	0xFDB
  6359                           fsr2h	equ	0xFDA
  6360                           fsr2l	equ	0xFD9
  6361                           status	equ	0xFD8
  6362                           
  6363 ;; *************** function _key_process_set_long *****************
  6364 ;; Defined at:
  6365 ;;		line 139 in file "src/api/key_menu.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;		None
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		None
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;Total ram usage:        0 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    4
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_key_process
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text29
  6394  00336C                     __ptext29:
  6395                           	opt stack 0
  6396  00336C                     _key_process_set_long:
  6397                           	opt stack 24
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;incstack = 0
  6401  00336C  0012               	return		;funcret
  6402  00336E                     __end_of_key_process_set_long:
  6403                           	opt stack 0
  6404                           tblptru	equ	0xFF8
  6405                           tblptrh	equ	0xFF7
  6406                           tblptrl	equ	0xFF6
  6407                           tablat	equ	0xFF5
  6408                           prodh	equ	0xFF4
  6409                           prodl	equ	0xFF3
  6410                           intcon	equ	0xFF2
  6411                           postinc0	equ	0xFEE
  6412                           wreg	equ	0xFE8
  6413                           postdec1	equ	0xFE5
  6414                           plusw1	equ	0xFE3
  6415                           fsr1h	equ	0xFE2
  6416                           fsr1l	equ	0xFE1
  6417                           indf2	equ	0xFDF
  6418                           postinc2	equ	0xFDE
  6419                           postdec2	equ	0xFDD
  6420                           plusw2	equ	0xFDB
  6421                           fsr2h	equ	0xFDA
  6422                           fsr2l	equ	0xFD9
  6423                           status	equ	0xFD8
  6424                           
  6425 ;; *************** function _key_process_set_down_long *****************
  6426 ;; Defined at:
  6427 ;;		line 106 in file "src/api/key_menu.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      void 
  6434 ;; Registers used:
  6435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;Total ram usage:        2 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    7
  6448 ;; This function calls:
  6449 ;;		___enter_menu_set_base_zero
  6450 ;;		___enter_menu_set_density
  6451 ;;		___enter_menu_set_pose
  6452 ;; This function is called by:
  6453 ;;		_key_process
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text30
  6458  0018B4                     __ptext30:
  6459                           	opt stack 0
  6460  0018B4                     _key_process_set_down_long:
  6461                           	opt stack 21
  6462                           
  6463                           ;key_menu.c: 108: if(menu==0x10){
  6464                           
  6465                           ;incstack = 0
  6466  0018B4  0E10               	movlw	16
  6467  0018B6  181B               	xorwf	_menu,w,c	;volatile
  6468  0018B8  A4D8               	btfss	status,2,c
  6469  0018BA  0012               	return	
  6470  0018BC  D02A               	goto	l9352
  6471  0018BE                     l9320:
  6472                           
  6473                           ;key_menu.c: 111: menu=0x20; __enter_menu_set_density(); break;
  6474  0018BE  0E20               	movlw	32
  6475  0018C0  6E1B               	movwf	_menu,c	;volatile
  6476  0018C2  EC44  F018         	call	___enter_menu_set_density	;wreg free
  6477  0018C6  0012               	return	
  6478  0018C8                     l9324:
  6479                           
  6480                           ;key_menu.c: 113: menu=0x30; __enter_menu_set_pose(); break;
  6481  0018C8  0E30               	movlw	48
  6482  0018CA  6E1B               	movwf	_menu,c	;volatile
  6483  0018CC  EC5E  F018         	call	___enter_menu_set_pose	;wreg free
  6484  0018D0  0012               	return	
  6485  0018D2                     l9328:
  6486                           
  6487                           ;key_menu.c: 115: menu=0x40;__enter_menu_set_base_zero(); break;
  6488  0018D2  0E40               	movlw	64
  6489  0018D4  6E1B               	movwf	_menu,c	;volatile
  6490  0018D6  EC9B  F015         	call	___enter_menu_set_base_zero	;wreg free
  6491  0018DA  0012               	return	
  6492  0018DC                     l9332:
  6493                           
  6494                           ;key_menu.c: 117: menu=0x50; break;
  6495  0018DC  0E50               	movlw	80
  6496  0018DE  6E1B               	movwf	_menu,c	;volatile
  6497  0018E0  0012               	return	
  6498  0018E2                     l9334:
  6499                           
  6500                           ;key_menu.c: 119: menu=0x60; break;
  6501  0018E2  0E60               	movlw	96
  6502  0018E4  6E1B               	movwf	_menu,c	;volatile
  6503  0018E6  0012               	return	
  6504  0018E8                     l9336:
  6505                           
  6506                           ;key_menu.c: 121: menu=0x70; break;
  6507  0018E8  0E70               	movlw	112
  6508  0018EA  6E1B               	movwf	_menu,c	;volatile
  6509  0018EC  0012               	return	
  6510  0018EE                     l9338:
  6511                           
  6512                           ;key_menu.c: 123: menu=0x80; break;
  6513  0018EE  0E80               	movlw	128
  6514  0018F0  6E1B               	movwf	_menu,c	;volatile
  6515  0018F2  0012               	return	
  6516  0018F4                     l9340:
  6517                           
  6518                           ;key_menu.c: 125: menu=0x90; break;
  6519  0018F4  0E90               	movlw	144
  6520  0018F6  6E1B               	movwf	_menu,c	;volatile
  6521  0018F8  0012               	return	
  6522  0018FA                     l9342:
  6523                           
  6524                           ;key_menu.c: 127: menu=0xa0; break;
  6525  0018FA  0EA0               	movlw	160
  6526  0018FC  6E1B               	movwf	_menu,c	;volatile
  6527  0018FE  0012               	return	
  6528  001900                     l9344:
  6529                           
  6530                           ;key_menu.c: 129: menu=0xb0; break;
  6531  001900  0EB0               	movlw	176
  6532  001902  6E1B               	movwf	_menu,c	;volatile
  6533  001904  0012               	return	
  6534  001906                     l9346:
  6535                           
  6536                           ;key_menu.c: 131: menu=0xc0; break;
  6537  001906  0EC0               	movlw	192
  6538  001908  6E1B               	movwf	_menu,c	;volatile
  6539  00190A  0012               	return	
  6540  00190C                     l9348:
  6541                           
  6542                           ;key_menu.c: 133: menu=0xf0; break;
  6543  00190C  0EF0               	movlw	240
  6544  00190E  6E1B               	movwf	_menu,c	;volatile
  6545                           
  6546                           ;key_menu.c: 135: }
  6547                           
  6548                           ;key_menu.c: 134: default:break;
  6549  001910  0012               	return	
  6550  001912                     l9352:
  6551  001912  C01D  F170         	movff	_passWord,??_key_process_set_down_long	;volatile
  6552  001916  C01E  F171         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
  6553                           
  6554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6555                           ; Switch size 1, requested type "space"
  6556                           ; Number of cases is 1, Range of values is 0 to 0
  6557                           ; switch strategies available:
  6558                           ; Name         Instructions Cycles
  6559                           ; simple_byte            4     3 (average)
  6560                           ;	Chosen strategy is simple_byte
  6561  00191A  0101               	movlb	1	; () banked
  6562  00191C  5171               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
  6563  00191E  0A00               	xorlw	0	; case 0
  6564  001920  A4D8               	btfss	status,2,c
  6565  001922  0012               	return	
  6566                           
  6567                           ; BSR set to: 1
  6568                           ; Switch size 1, requested type "space"
  6569                           ; Number of cases is 12, Range of values is 6 to 188
  6570                           ; switch strategies available:
  6571                           ; Name         Instructions Cycles
  6572                           ; simple_byte           37    19 (average)
  6573                           ;	Chosen strategy is simple_byte
  6574  001924  0101               	movlb	1	; () banked
  6575  001926  5170               	movf	??_key_process_set_down_long& (0+255),w,b
  6576  001928  0A06               	xorlw	6	; case 6
  6577  00192A  B4D8               	btfsc	status,2,c
  6578  00192C  D7E0               	goto	l9338
  6579  00192E  0A16               	xorlw	22	; case 16
  6580  001930  B4D8               	btfsc	status,2,c
  6581  001932  D7E0               	goto	l9340
  6582  001934  0A02               	xorlw	2	; case 18
  6583  001936  B4D8               	btfsc	status,2,c
  6584  001938  D7E9               	goto	l9348
  6585  00193A  0A36               	xorlw	54	; case 36
  6586  00193C  B4D8               	btfsc	status,2,c
  6587  00193E  D7BF               	goto	l9320
  6588  001940  0A1C               	xorlw	28	; case 56
  6589  001942  B4D8               	btfsc	status,2,c
  6590  001944  D7C6               	goto	l9328
  6591  001946  0A7A               	xorlw	122	; case 66
  6592  001948  B4D8               	btfsc	status,2,c
  6593  00194A  D7BE               	goto	l9324
  6594  00194C  0AC7               	xorlw	199	; case 133
  6595  00194E  B4D8               	btfsc	status,2,c
  6596  001950  D7CB               	goto	l9336
  6597  001952  0A0F               	xorlw	15	; case 138
  6598  001954  B4D8               	btfsc	status,2,c
  6599  001956  D7D1               	goto	l9342
  6600  001958  0A01               	xorlw	1	; case 139
  6601  00195A  B4D8               	btfsc	status,2,c
  6602  00195C  D7D1               	goto	l9344
  6603  00195E  0A23               	xorlw	35	; case 168
  6604  001960  B4D8               	btfsc	status,2,c
  6605  001962  D7BC               	goto	l9332
  6606  001964  0A01               	xorlw	1	; case 169
  6607  001966  B4D8               	btfsc	status,2,c
  6608  001968  D7BC               	goto	l9334
  6609  00196A  0A15               	xorlw	21	; case 188
  6610  00196C  A4D8               	btfss	status,2,c
  6611                           
  6612                           ; BSR set to: 1
  6613  00196E  0012               	return	
  6614  001970  D7CA               	goto	l9346
  6615  001972                     __end_of_key_process_set_down_long:
  6616                           	opt stack 0
  6617                           tblptru	equ	0xFF8
  6618                           tblptrh	equ	0xFF7
  6619                           tblptrl	equ	0xFF6
  6620                           tablat	equ	0xFF5
  6621                           prodh	equ	0xFF4
  6622                           prodl	equ	0xFF3
  6623                           intcon	equ	0xFF2
  6624                           postinc0	equ	0xFEE
  6625                           wreg	equ	0xFE8
  6626                           postdec1	equ	0xFE5
  6627                           plusw1	equ	0xFE3
  6628                           fsr1h	equ	0xFE2
  6629                           fsr1l	equ	0xFE1
  6630                           indf2	equ	0xFDF
  6631                           postinc2	equ	0xFDE
  6632                           postdec2	equ	0xFDD
  6633                           plusw2	equ	0xFDB
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function ___enter_menu_set_pose *****************
  6639 ;; Defined at:
  6640 ;;		line 87 in file "src/api/key_menu.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  fps             2    1[BANK0 ] PTR struct .
  6645 ;;		 -> RAM(3923), 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;Total ram usage:        3 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    4
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_key_process_set_down_long
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text31
  6670  0030BC                     __ptext31:
  6671                           	opt stack 0
  6672  0030BC                     ___enter_menu_set_pose:
  6673                           	opt stack 23
  6674                           
  6675                           ;key_menu.c: 88: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  6676                           
  6677                           ;incstack = 0
  6678  0030BC  0E00               	movlw	0
  6679  0030BE  0100               	movlb	0	; () banked
  6680  0030C0  6FEA               	movwf	___enter_menu_set_pose@fps& (0+255),b
  6681  0030C2  0EF4               	movlw	244
  6682  0030C4  0100               	movlb	0	; () banked
  6683  0030C6  6FEB               	movwf	(___enter_menu_set_pose@fps+1)& (0+255),b
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;key_menu.c: 89: adjValue=(uint8_t)(fps->pos);
  6687  0030C8  0100               	movlb	0	; () banked
  6688  0030CA  EE20 F004          	lfsr	2,4
  6689  0030CE  51EA               	movf	___enter_menu_set_pose@fps& (0+255),w,b
  6690  0030D0  26D9               	addwf	fsr2l,f,c
  6691  0030D2  51EB               	movf	(___enter_menu_set_pose@fps+1)& (0+255),w,b
  6692  0030D4  22DA               	addwfc	fsr2h,f,c
  6693  0030D6  50DF               	movf	indf2,w,c
  6694  0030D8  0100               	movlb	0	; () banked
  6695  0030DA  6FE9               	movwf	??___enter_menu_set_pose& (0+255),b
  6696  0030DC  0100               	movlb	0	; () banked
  6697  0030DE  51E9               	movf	??___enter_menu_set_pose& (0+255),w,b
  6698  0030E0  6E01               	movwf	_adjValue,c	;volatile
  6699  0030E2  6A02               	clrf	_adjValue+1,c	;volatile
  6700  0030E4  6A03               	clrf	_adjValue+2,c	;volatile
  6701  0030E6  6A04               	clrf	_adjValue+3,c	;volatile
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;key_menu.c: 90: adjLocation=0;
  6705  0030E8  0E00               	movlw	0
  6706  0030EA  6E1F               	movwf	_adjLocation,c	;volatile
  6707                           
  6708                           ; BSR set to: 0
  6709  0030EC  0012               	return		;funcret
  6710  0030EE                     __end_of___enter_menu_set_pose:
  6711                           	opt stack 0
  6712                           tblptru	equ	0xFF8
  6713                           tblptrh	equ	0xFF7
  6714                           tblptrl	equ	0xFF6
  6715                           tablat	equ	0xFF5
  6716                           prodh	equ	0xFF4
  6717                           prodl	equ	0xFF3
  6718                           intcon	equ	0xFF2
  6719                           postinc0	equ	0xFEE
  6720                           wreg	equ	0xFE8
  6721                           postdec1	equ	0xFE5
  6722                           plusw1	equ	0xFE3
  6723                           fsr1h	equ	0xFE2
  6724                           fsr1l	equ	0xFE1
  6725                           indf2	equ	0xFDF
  6726                           postinc2	equ	0xFDE
  6727                           postdec2	equ	0xFDD
  6728                           plusw2	equ	0xFDB
  6729                           fsr2h	equ	0xFDA
  6730                           fsr2l	equ	0xFD9
  6731                           status	equ	0xFD8
  6732                           
  6733 ;; *************** function ___enter_menu_set_density *****************
  6734 ;; Defined at:
  6735 ;;		line 81 in file "src/api/key_menu.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;		None
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  fps             2    2[BANK0 ] PTR struct .
  6740 ;;		 -> RAM(3923), 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;Total ram usage:        4 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    4
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_key_process_set_down_long
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text32
  6765  003088                     __ptext32:
  6766                           	opt stack 0
  6767  003088                     ___enter_menu_set_density:
  6768                           	opt stack 23
  6769                           
  6770                           ;key_menu.c: 82: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;incstack = 0
  6774  003088  0E00               	movlw	0
  6775  00308A  0100               	movlb	0	; () banked
  6776  00308C  6FEB               	movwf	___enter_menu_set_density@fps& (0+255),b
  6777  00308E  0EF4               	movlw	244
  6778  003090  0100               	movlb	0	; () banked
  6779  003092  6FEC               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;key_menu.c: 83: adjValue=fps->density;
  6783  003094  0100               	movlb	0	; () banked
  6784  003096  EE20 F006          	lfsr	2,6
  6785  00309A  51EB               	movf	___enter_menu_set_density@fps& (0+255),w,b
  6786  00309C  26D9               	addwf	fsr2l,f,c
  6787  00309E  51EC               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
  6788  0030A0  22DA               	addwfc	fsr2h,f,c
  6789  0030A2  CFDE F0E9          	movff	postinc2,??___enter_menu_set_density
  6790  0030A6  CFDD F0EA          	movff	postdec2,??___enter_menu_set_density+1
  6791  0030AA  C0E9  F001         	movff	??___enter_menu_set_density,_adjValue	;volatile
  6792  0030AE  C0EA  F002         	movff	??___enter_menu_set_density+1,_adjValue+1	;volatile
  6793  0030B2  6A03               	clrf	_adjValue+2,c	;volatile
  6794  0030B4  6A04               	clrf	_adjValue+3,c	;volatile
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;key_menu.c: 84: adjLocation=0;
  6798  0030B6  0E00               	movlw	0
  6799  0030B8  6E1F               	movwf	_adjLocation,c	;volatile
  6800                           
  6801                           ; BSR set to: 0
  6802  0030BA  0012               	return		;funcret
  6803  0030BC                     __end_of___enter_menu_set_density:
  6804                           	opt stack 0
  6805                           tblptru	equ	0xFF8
  6806                           tblptrh	equ	0xFF7
  6807                           tblptrl	equ	0xFF6
  6808                           tablat	equ	0xFF5
  6809                           prodh	equ	0xFF4
  6810                           prodl	equ	0xFF3
  6811                           intcon	equ	0xFF2
  6812                           postinc0	equ	0xFEE
  6813                           wreg	equ	0xFE8
  6814                           postdec1	equ	0xFE5
  6815                           plusw1	equ	0xFE3
  6816                           fsr1h	equ	0xFE2
  6817                           fsr1l	equ	0xFE1
  6818                           indf2	equ	0xFDF
  6819                           postinc2	equ	0xFDE
  6820                           postdec2	equ	0xFDD
  6821                           plusw2	equ	0xFDB
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function ___enter_menu_set_base_zero *****************
  6827 ;; Defined at:
  6828 ;;		line 92 in file "src/api/key_menu.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  fps             2   16[BANK1 ] PTR struct .
  6833 ;;		 -> RAM(3923), 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      void 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;Total ram usage:        2 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    6
  6850 ;; This function calls:
  6851 ;;		___int32_2_mflot32
  6852 ;; This function is called by:
  6853 ;;		_key_process_set_down_long
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text33
  6858  002B36                     __ptext33:
  6859                           	opt stack 0
  6860  002B36                     ___enter_menu_set_base_zero:
  6861                           	opt stack 21
  6862                           
  6863                           ;key_menu.c: 93: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;incstack = 0
  6867  002B36  0E00               	movlw	0
  6868  002B38  0101               	movlb	1	; () banked
  6869  002B3A  6F6E               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
  6870  002B3C  0EF4               	movlw	244
  6871  002B3E  0101               	movlb	1	; () banked
  6872  002B40  6F6F               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
  6873                           
  6874                           ; BSR set to: 1
  6875                           ;key_menu.c: 94: adjValue=(fps->baseZero);
  6876  002B42  0101               	movlb	1	; () banked
  6877  002B44  EE20 F010          	lfsr	2,16
  6878  002B48  516E               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
  6879  002B4A  26D9               	addwf	fsr2l,f,c
  6880  002B4C  516F               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
  6881  002B4E  22DA               	addwfc	fsr2h,f,c
  6882  002B50  CFDE F001          	movff	postinc2,_adjValue	;volatile
  6883  002B54  CFDE F002          	movff	postinc2,_adjValue+1	;volatile
  6884  002B58  CFDE F003          	movff	postinc2,_adjValue+2	;volatile
  6885  002B5C  CFDE F004          	movff	postinc2,_adjValue+3	;volatile
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;key_menu.c: 95: adjValue=__int32_2_mflot32(adjValue);
  6889  002B60  C001  F15E         	movff	_adjValue,___int32_2_mflot32@x	;volatile
  6890  002B64  C002  F15F         	movff	_adjValue+1,___int32_2_mflot32@x+1	;volatile
  6891  002B68  C003  F160         	movff	_adjValue+2,___int32_2_mflot32@x+2	;volatile
  6892  002B6C  C004  F161         	movff	_adjValue+3,___int32_2_mflot32@x+3	;volatile
  6893  002B70  EC36  F009         	call	___int32_2_mflot32	;wreg free
  6894  002B74  C15E  F001         	movff	?___int32_2_mflot32,_adjValue	;volatile
  6895  002B78  C15F  F002         	movff	?___int32_2_mflot32+1,_adjValue+1	;volatile
  6896  002B7C  C160  F003         	movff	?___int32_2_mflot32+2,_adjValue+2	;volatile
  6897  002B80  C161  F004         	movff	?___int32_2_mflot32+3,_adjValue+3	;volatile
  6898                           
  6899                           ;key_menu.c: 96: adjLocation=0;
  6900  002B84  0E00               	movlw	0
  6901  002B86  6E1F               	movwf	_adjLocation,c	;volatile
  6902  002B88  0012               	return		;funcret
  6903  002B8A                     __end_of___enter_menu_set_base_zero:
  6904                           	opt stack 0
  6905                           tblptru	equ	0xFF8
  6906                           tblptrh	equ	0xFF7
  6907                           tblptrl	equ	0xFF6
  6908                           tablat	equ	0xFF5
  6909                           prodh	equ	0xFF4
  6910                           prodl	equ	0xFF3
  6911                           intcon	equ	0xFF2
  6912                           postinc0	equ	0xFEE
  6913                           wreg	equ	0xFE8
  6914                           postdec1	equ	0xFE5
  6915                           plusw1	equ	0xFE3
  6916                           fsr1h	equ	0xFE2
  6917                           fsr1l	equ	0xFE1
  6918                           indf2	equ	0xFDF
  6919                           postinc2	equ	0xFDE
  6920                           postdec2	equ	0xFDD
  6921                           plusw2	equ	0xFDB
  6922                           fsr2h	equ	0xFDA
  6923                           fsr2l	equ	0xFD9
  6924                           status	equ	0xFD8
  6925                           
  6926 ;; *************** function ___int32_2_mflot32 *****************
  6927 ;; Defined at:
  6928 ;;		line 24 in file "src/api/ui.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  x               4    0[BANK1 ] long 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  mf              4   12[BANK1 ] struct .
  6933 ;;  t32             4    8[BANK1 ] unsigned long 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  4    0[BANK1 ] long 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6943 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;Total ram usage:       16 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    5
  6950 ;; This function calls:
  6951 ;;		___lldiv
  6952 ;; This function is called by:
  6953 ;;		___enter_menu_set_base_zero
  6954 ;;		___enter_menu_calib_press_diff
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text34
  6959  00126C                     __ptext34:
  6960                           	opt stack 0
  6961  00126C                     ___int32_2_mflot32:
  6962                           	opt stack 21
  6963                           
  6964                           ;ui.c: 26: st_float32 mf={0};
  6965                           
  6966                           ;incstack = 0
  6967  00126C  C092  F16A         	movff	___int32_2_mflot32@F7608,___int32_2_mflot32@mf
  6968  001270  C093  F16B         	movff	___int32_2_mflot32@F7608+1,___int32_2_mflot32@mf+1
  6969  001274  C094  F16C         	movff	___int32_2_mflot32@F7608+2,___int32_2_mflot32@mf+2
  6970  001278  C095  F16D         	movff	___int32_2_mflot32@F7608+3,___int32_2_mflot32@mf+3
  6971                           
  6972                           ;ui.c: 27: uint32_t t32;
  6973                           ;ui.c: 28: t32=x;
  6974  00127C  C15E  F166         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
  6975  001280  C15F  F167         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
  6976  001284  C160  F168         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
  6977  001288  C161  F169         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
  6978                           
  6979                           ;ui.c: 29: if(x<0){
  6980  00128C  0101               	movlb	1	; () banked
  6981  00128E  AF61               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
  6982  001290  D040               	goto	l8968
  6983                           
  6984                           ; BSR set to: 1
  6985                           ;ui.c: 30: t32 = ((~x) +1);
  6986  001292  C15E  F162         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
  6987  001296  C15F  F163         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
  6988  00129A  C160  F164         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
  6989  00129E  C161  F165         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
  6990  0012A2  0101               	movlb	1	; () banked
  6991  0012A4  1F62               	comf	??___int32_2_mflot32& (0+255),f,b
  6992  0012A6  1F63               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
  6993  0012A8  1F64               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
  6994  0012AA  1F65               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
  6995  0012AC  2B62               	incf	??___int32_2_mflot32& (0+255),f,b
  6996  0012AE  0E00               	movlw	0
  6997  0012B0  2363               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
  6998  0012B2  2364               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
  6999  0012B4  2365               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
  7000  0012B6  C162  F166         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
  7001  0012BA  C163  F167         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
  7002  0012BE  C164  F168         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
  7003  0012C2  C165  F169         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
  7004                           
  7005                           ; BSR set to: 1
  7006                           ;ui.c: 31: mf.stru.sign=1;
  7007  0012C6  0E01               	movlw	1
  7008  0012C8  0101               	movlb	1	; () banked
  7009  0012CA  6F6D               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;ui.c: 32: }
  7013                           ;ui.c: 33: while(t32>9999){
  7014  0012CC  D022               	goto	l8968
  7015  0012CE                     l8960:
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;ui.c: 34: mf.stru.exponent++;
  7019  0012CE  0101               	movlb	1	; () banked
  7020  0012D0  2B6C               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;ui.c: 35: t32/=10;
  7024  0012D2  C166  F0E9         	movff	___int32_2_mflot32@t32,___lldiv@dividend
  7025  0012D6  C167  F0EA         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
  7026  0012DA  C168  F0EB         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
  7027  0012DE  C169  F0EC         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
  7028  0012E2  0E0A               	movlw	10
  7029  0012E4  0100               	movlb	0	; () banked
  7030  0012E6  6FED               	movwf	___lldiv@divisor& (0+255),b
  7031  0012E8  0E00               	movlw	0
  7032  0012EA  6FEE               	movwf	(___lldiv@divisor+1)& (0+255),b
  7033  0012EC  0E00               	movlw	0
  7034  0012EE  6FEF               	movwf	(___lldiv@divisor+2)& (0+255),b
  7035  0012F0  0E00               	movlw	0
  7036  0012F2  6FF0               	movwf	(___lldiv@divisor+3)& (0+255),b
  7037  0012F4  EC18  F00D         	call	___lldiv	;wreg free
  7038  0012F8  C0E9  F166         	movff	?___lldiv,___int32_2_mflot32@t32
  7039  0012FC  C0EA  F167         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
  7040  001300  C0EB  F168         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
  7041  001304  C0EC  F169         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
  7042                           
  7043                           ;ui.c: 36: if( mf.stru.exponent==3)break;
  7044  001308  0E03               	movlw	3
  7045  00130A  0101               	movlb	1	; () banked
  7046  00130C  196C               	xorwf	(___int32_2_mflot32@mf+2)& (0+255),w,b
  7047  00130E  B4D8               	btfsc	status,2,c
  7048  001310  D00D               	goto	l8970
  7049  001312                     l8968:
  7050                           
  7051                           ; BSR set to: 1
  7052  001312  0101               	movlb	1	; () banked
  7053  001314  5169               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
  7054  001316  0101               	movlb	1	; () banked
  7055  001318  1168               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
  7056  00131A  E1D9               	bnz	l8960
  7057  00131C  0E10               	movlw	16
  7058  00131E  0101               	movlb	1	; () banked
  7059  001320  5D66               	subwf	___int32_2_mflot32@t32& (0+255),w,b
  7060  001322  0E27               	movlw	39
  7061  001324  0101               	movlb	1	; () banked
  7062  001326  5967               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
  7063  001328  B0D8               	btfsc	status,0,c
  7064  00132A  D7D1               	goto	l8960
  7065  00132C                     l8970:
  7066                           
  7067                           ; BSR set to: 1
  7068                           ;ui.c: 37: }
  7069                           ;ui.c: 38: if(t32>9999)t32=9999;
  7070  00132C  0101               	movlb	1	; () banked
  7071  00132E  5169               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
  7072  001330  0101               	movlb	1	; () banked
  7073  001332  1168               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
  7074  001334  E108               	bnz	u6850
  7075  001336  0E10               	movlw	16
  7076  001338  0101               	movlb	1	; () banked
  7077  00133A  5D66               	subwf	___int32_2_mflot32@t32& (0+255),w,b
  7078  00133C  0E27               	movlw	39
  7079  00133E  0101               	movlb	1	; () banked
  7080  001340  5967               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
  7081  001342  A0D8               	btfss	status,0,c
  7082  001344  D009               	goto	l8974
  7083  001346                     u6850:
  7084                           
  7085                           ; BSR set to: 1
  7086  001346  0E0F               	movlw	15
  7087  001348  0101               	movlb	1	; () banked
  7088  00134A  6F66               	movwf	___int32_2_mflot32@t32& (0+255),b
  7089  00134C  0E27               	movlw	39
  7090  00134E  6F67               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
  7091  001350  0E00               	movlw	0
  7092  001352  6F68               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
  7093  001354  0E00               	movlw	0
  7094  001356  6F69               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
  7095  001358                     l8974:
  7096                           
  7097                           ; BSR set to: 1
  7098                           ;ui.c: 39: mf.stru.significand=t32;
  7099  001358  C166  F16A         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
  7100  00135C  C167  F16B         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;ui.c: 40: return mf.t32;
  7104  001360  C16A  F15E         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
  7105  001364  C16B  F15F         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
  7106  001368  C16C  F160         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
  7107  00136C  C16D  F161         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
  7108  001370  0012               	return	
  7109  001372                     __end_of___int32_2_mflot32:
  7110                           	opt stack 0
  7111                           tblptru	equ	0xFF8
  7112                           tblptrh	equ	0xFF7
  7113                           tblptrl	equ	0xFF6
  7114                           tablat	equ	0xFF5
  7115                           prodh	equ	0xFF4
  7116                           prodl	equ	0xFF3
  7117                           intcon	equ	0xFF2
  7118                           postinc0	equ	0xFEE
  7119                           wreg	equ	0xFE8
  7120                           postdec1	equ	0xFE5
  7121                           plusw1	equ	0xFE3
  7122                           fsr1h	equ	0xFE2
  7123                           fsr1l	equ	0xFE1
  7124                           indf2	equ	0xFDF
  7125                           postinc2	equ	0xFDE
  7126                           postdec2	equ	0xFDD
  7127                           plusw2	equ	0xFDB
  7128                           fsr2h	equ	0xFDA
  7129                           fsr2l	equ	0xFD9
  7130                           status	equ	0xFD8
  7131                           
  7132 ;; *************** function ___lldiv *****************
  7133 ;; Defined at:
  7134 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lldiv.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  dividend        4    0[BANK0 ] unsigned long 
  7137 ;;  divisor         4    4[BANK0 ] unsigned long 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  quotient        4    8[BANK0 ] unsigned long 
  7140 ;;  counter         1   12[BANK0 ] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  4    0[BANK0 ] unsigned long 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7150 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;Total ram usage:       13 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    4
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		___int32_2_mflot32
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text35
  7165  001A30                     __ptext35:
  7166                           	opt stack 0
  7167  001A30                     ___lldiv:
  7168                           	opt stack 21
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;incstack = 0
  7172  001A30  0E00               	movlw	0
  7173  001A32  0100               	movlb	0	; () banked
  7174  001A34  6FF1               	movwf	___lldiv@quotient& (0+255),b
  7175  001A36  0E00               	movlw	0
  7176  001A38  6FF2               	movwf	(___lldiv@quotient+1)& (0+255),b
  7177  001A3A  0E00               	movlw	0
  7178  001A3C  6FF3               	movwf	(___lldiv@quotient+2)& (0+255),b
  7179  001A3E  0E00               	movlw	0
  7180  001A40  6FF4               	movwf	(___lldiv@quotient+3)& (0+255),b
  7181                           
  7182                           ; BSR set to: 0
  7183  001A42  0100               	movlb	0	; () banked
  7184  001A44  51ED               	movf	___lldiv@divisor& (0+255),w,b
  7185  001A46  0100               	movlb	0	; () banked
  7186  001A48  11EE               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7187  001A4A  0100               	movlb	0	; () banked
  7188  001A4C  11EF               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7189  001A4E  0100               	movlb	0	; () banked
  7190  001A50  11F0               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7191  001A52  B4D8               	btfsc	status,2,c
  7192  001A54  D042               	goto	l2050
  7193                           
  7194                           ; BSR set to: 0
  7195  001A56  0E01               	movlw	1
  7196  001A58  0100               	movlb	0	; () banked
  7197  001A5A  6FF5               	movwf	___lldiv@counter& (0+255),b
  7198  001A5C  D008               	goto	l8912
  7199  001A5E                     l8910:
  7200                           
  7201                           ; BSR set to: 0
  7202  001A5E  0100               	movlb	0	; () banked
  7203  001A60  90D8               	bcf	status,0,c
  7204  001A62  37ED               	rlcf	___lldiv@divisor& (0+255),f,b
  7205  001A64  37EE               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7206  001A66  37EF               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7207  001A68  37F0               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7208  001A6A  0100               	movlb	0	; () banked
  7209  001A6C  2BF5               	incf	___lldiv@counter& (0+255),f,b
  7210  001A6E                     l8912:
  7211                           
  7212                           ; BSR set to: 0
  7213  001A6E  0100               	movlb	0	; () banked
  7214  001A70  AFF0               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7215  001A72  D7F5               	goto	l8910
  7216  001A74                     l8914:
  7217                           
  7218                           ; BSR set to: 0
  7219  001A74  0100               	movlb	0	; () banked
  7220  001A76  90D8               	bcf	status,0,c
  7221  001A78  37F1               	rlcf	___lldiv@quotient& (0+255),f,b
  7222  001A7A  37F2               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7223  001A7C  37F3               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7224  001A7E  37F4               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7225                           
  7226                           ; BSR set to: 0
  7227  001A80  0100               	movlb	0	; () banked
  7228  001A82  51ED               	movf	___lldiv@divisor& (0+255),w,b
  7229  001A84  0100               	movlb	0	; () banked
  7230  001A86  5DE9               	subwf	___lldiv@dividend& (0+255),w,b
  7231  001A88  0100               	movlb	0	; () banked
  7232  001A8A  51EE               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7233  001A8C  0100               	movlb	0	; () banked
  7234  001A8E  59EA               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7235  001A90  0100               	movlb	0	; () banked
  7236  001A92  51EF               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7237  001A94  0100               	movlb	0	; () banked
  7238  001A96  59EB               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7239  001A98  0100               	movlb	0	; () banked
  7240  001A9A  51F0               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7241  001A9C  0100               	movlb	0	; () banked
  7242  001A9E  59EC               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7243  001AA0  A0D8               	btfss	status,0,c
  7244  001AA2  D012               	goto	l8922
  7245                           
  7246                           ; BSR set to: 0
  7247  001AA4  0100               	movlb	0	; () banked
  7248  001AA6  51ED               	movf	___lldiv@divisor& (0+255),w,b
  7249  001AA8  0100               	movlb	0	; () banked
  7250  001AAA  5FE9               	subwf	___lldiv@dividend& (0+255),f,b
  7251  001AAC  0100               	movlb	0	; () banked
  7252  001AAE  51EE               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7253  001AB0  0100               	movlb	0	; () banked
  7254  001AB2  5BEA               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7255  001AB4  0100               	movlb	0	; () banked
  7256  001AB6  51EF               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7257  001AB8  0100               	movlb	0	; () banked
  7258  001ABA  5BEB               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7259  001ABC  0100               	movlb	0	; () banked
  7260  001ABE  51F0               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7261  001AC0  0100               	movlb	0	; () banked
  7262  001AC2  5BEC               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7263                           
  7264                           ; BSR set to: 0
  7265  001AC4  0100               	movlb	0	; () banked
  7266  001AC6  81F1               	bsf	___lldiv@quotient& (0+255),0,b
  7267  001AC8                     l8922:
  7268                           
  7269                           ; BSR set to: 0
  7270  001AC8  0100               	movlb	0	; () banked
  7271  001ACA  90D8               	bcf	status,0,c
  7272  001ACC  33F0               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7273  001ACE  33EF               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7274  001AD0  33EE               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7275  001AD2  33ED               	rrcf	___lldiv@divisor& (0+255),f,b
  7276                           
  7277                           ; BSR set to: 0
  7278  001AD4  0100               	movlb	0	; () banked
  7279  001AD6  2FF5               	decfsz	___lldiv@counter& (0+255),f,b
  7280  001AD8  D7CD               	goto	l8914
  7281  001ADA                     l2050:
  7282                           
  7283                           ; BSR set to: 0
  7284  001ADA  C0F1  F0E9         	movff	___lldiv@quotient,?___lldiv
  7285  001ADE  C0F2  F0EA         	movff	___lldiv@quotient+1,?___lldiv+1
  7286  001AE2  C0F3  F0EB         	movff	___lldiv@quotient+2,?___lldiv+2
  7287  001AE6  C0F4  F0EC         	movff	___lldiv@quotient+3,?___lldiv+3
  7288                           
  7289                           ; BSR set to: 0
  7290  001AEA  0012               	return		;funcret
  7291  001AEC                     __end_of___lldiv:
  7292                           	opt stack 0
  7293                           tblptru	equ	0xFF8
  7294                           tblptrh	equ	0xFF7
  7295                           tblptrl	equ	0xFF6
  7296                           tablat	equ	0xFF5
  7297                           prodh	equ	0xFF4
  7298                           prodl	equ	0xFF3
  7299                           intcon	equ	0xFF2
  7300                           postinc0	equ	0xFEE
  7301                           wreg	equ	0xFE8
  7302                           postdec1	equ	0xFE5
  7303                           plusw1	equ	0xFE3
  7304                           fsr1h	equ	0xFE2
  7305                           fsr1l	equ	0xFE1
  7306                           indf2	equ	0xFDF
  7307                           postinc2	equ	0xFDE
  7308                           postdec2	equ	0xFDD
  7309                           plusw2	equ	0xFDB
  7310                           fsr2h	equ	0xFDA
  7311                           fsr2l	equ	0xFD9
  7312                           status	equ	0xFD8
  7313                           
  7314 ;; *************** function _key_process_set *****************
  7315 ;; Defined at:
  7316 ;;		line 144 in file "src/api/key_menu.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;		None
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;Total ram usage:        0 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    4
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_key_process
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text36
  7345  00317A                     __ptext36:
  7346                           	opt stack 0
  7347  00317A                     _key_process_set:
  7348                           	opt stack 24
  7349                           
  7350                           ;key_menu.c: 146: switch(menu){
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;incstack = 0
  7354  00317A  D009               	goto	l9364
  7355  00317C                     l9360:
  7356                           
  7357                           ;key_menu.c: 148: case 0x01:
  7358                           ;key_menu.c: 149: case 0x02:{passWord=0x00;adjLocation=0x00;menu=0x10;break;}
  7359  00317C  0E00               	movlw	0
  7360  00317E  6E1E               	movwf	_passWord+1,c	;volatile
  7361  003180  0E00               	movlw	0
  7362  003182  6E1D               	movwf	_passWord,c	;volatile
  7363  003184  0E00               	movlw	0
  7364  003186  6E1F               	movwf	_adjLocation,c	;volatile
  7365  003188  0E10               	movlw	16
  7366  00318A  6E1B               	movwf	_menu,c	;volatile
  7367                           
  7368                           ;key_menu.c: 151: }
  7369                           
  7370                           ;key_menu.c: 150: default:break;
  7371  00318C  0012               	return	
  7372  00318E                     l9364:
  7373  00318E  501B               	movf	_menu,w,c	;volatile
  7374                           
  7375                           ; Switch size 1, requested type "space"
  7376                           ; Number of cases is 3, Range of values is 0 to 2
  7377                           ; switch strategies available:
  7378                           ; Name         Instructions Cycles
  7379                           ; simple_byte           10     6 (average)
  7380                           ;	Chosen strategy is simple_byte
  7381  003190  0A00               	xorlw	0	; case 0
  7382  003192  B4D8               	btfsc	status,2,c
  7383  003194  D7F3               	goto	l9360
  7384  003196  0A01               	xorlw	1	; case 1
  7385  003198  B4D8               	btfsc	status,2,c
  7386  00319A  D7F0               	goto	l9360
  7387  00319C  0A03               	xorlw	3	; case 2
  7388  00319E  A4D8               	btfss	status,2,c
  7389  0031A0  0012               	return	
  7390  0031A2  D7EC               	goto	l9360
  7391  0031A4                     __end_of_key_process_set:
  7392                           	opt stack 0
  7393                           tblptru	equ	0xFF8
  7394                           tblptrh	equ	0xFF7
  7395                           tblptrl	equ	0xFF6
  7396                           tablat	equ	0xFF5
  7397                           prodh	equ	0xFF4
  7398                           prodl	equ	0xFF3
  7399                           intcon	equ	0xFF2
  7400                           postinc0	equ	0xFEE
  7401                           wreg	equ	0xFE8
  7402                           postdec1	equ	0xFE5
  7403                           plusw1	equ	0xFE3
  7404                           fsr1h	equ	0xFE2
  7405                           fsr1l	equ	0xFE1
  7406                           indf2	equ	0xFDF
  7407                           postinc2	equ	0xFDE
  7408                           postdec2	equ	0xFDD
  7409                           plusw2	equ	0xFDB
  7410                           fsr2h	equ	0xFDA
  7411                           fsr2l	equ	0xFD9
  7412                           status	equ	0xFD8
  7413                           
  7414 ;; *************** function _key_process_down *****************
  7415 ;; Defined at:
  7416 ;;		line 47 in file "src/api/key_menu.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:        0 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    5
  7437 ;; This function calls:
  7438 ;;		_key_shift_loc_fixed_point
  7439 ;; This function is called by:
  7440 ;;		_key_process
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text37
  7445  002DE8                     __ptext37:
  7446                           	opt stack 0
  7447  002DE8                     _key_process_down:
  7448                           	opt stack 23
  7449                           
  7450                           ;key_menu.c: 49: switch(menu){
  7451                           
  7452                           ;incstack = 0
  7453  002DE8  D00F               	goto	l9306
  7454  002DEA                     l9302:
  7455  002DEA  0E1F               	movlw	low _adjLocation
  7456  002DEC  0100               	movlb	0	; () banked
  7457  002DEE  6FE9               	movwf	key_shift_loc_fixed_point@loc& (0+255),b
  7458  002DF0  0E00               	movlw	high _adjLocation
  7459  002DF2  0100               	movlb	0	; () banked
  7460  002DF4  6FEA               	movwf	(key_shift_loc_fixed_point@loc+1)& (0+255),b
  7461  002DF6  0E00               	movlw	0
  7462  002DF8  0100               	movlb	0	; () banked
  7463  002DFA  6FEB               	movwf	key_shift_loc_fixed_point@min& (0+255),b
  7464  002DFC  0E03               	movlw	3
  7465  002DFE  0100               	movlb	0	; () banked
  7466  002E00  6FEC               	movwf	key_shift_loc_fixed_point@max& (0+255),b
  7467  002E02  EC4D  F017         	call	_key_shift_loc_fixed_point	;wreg free
  7468                           
  7469                           ;key_menu.c: 55: }
  7470                           
  7471                           ;key_menu.c: 54: default:break;
  7472  002E06  0012               	return	
  7473  002E08                     l9306:
  7474  002E08  501B               	movf	_menu,w,c	;volatile
  7475                           
  7476                           ; Switch size 1, requested type "space"
  7477                           ; Number of cases is 4, Range of values is 0 to 16
  7478                           ; switch strategies available:
  7479                           ; Name         Instructions Cycles
  7480                           ; simple_byte           13     7 (average)
  7481                           ;	Chosen strategy is simple_byte
  7482  002E0A  0A00               	xorlw	0	; case 0
  7483  002E0C  B4D8               	btfsc	status,2,c
  7484  002E0E  0012               	return	
  7485  002E10  0A01               	xorlw	1	; case 1
  7486  002E12  B4D8               	btfsc	status,2,c
  7487  002E14  0012               	return	
  7488  002E16  0A03               	xorlw	3	; case 2
  7489  002E18  B4D8               	btfsc	status,2,c
  7490  002E1A  0012               	return	
  7491  002E1C  0A12               	xorlw	18	; case 16
  7492  002E1E  A4D8               	btfss	status,2,c
  7493  002E20  0012               	return	
  7494  002E22  D7E3               	goto	l9302
  7495  002E24                     __end_of_key_process_down:
  7496                           	opt stack 0
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           prodh	equ	0xFF4
  7502                           prodl	equ	0xFF3
  7503                           intcon	equ	0xFF2
  7504                           postinc0	equ	0xFEE
  7505                           wreg	equ	0xFE8
  7506                           postdec1	equ	0xFE5
  7507                           plusw1	equ	0xFE3
  7508                           fsr1h	equ	0xFE2
  7509                           fsr1l	equ	0xFE1
  7510                           indf2	equ	0xFDF
  7511                           postinc2	equ	0xFDE
  7512                           postdec2	equ	0xFDD
  7513                           plusw2	equ	0xFDB
  7514                           fsr2h	equ	0xFDA
  7515                           fsr2l	equ	0xFD9
  7516                           status	equ	0xFD8
  7517                           
  7518 ;; *************** function _key_shift_loc_fixed_point *****************
  7519 ;; Defined at:
  7520 ;;		line 39 in file "src/api/key_menu.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;  loc             2    0[BANK0 ] PTR unsigned char 
  7523 ;;		 -> adjLocation(1), 
  7524 ;;  min             1    2[BANK0 ] unsigned char 
  7525 ;;  max             1    3[BANK0 ] unsigned char 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  t8              1    4[BANK0 ] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7537 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7541 ;;Total ram usage:        5 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    4
  7544 ;; This function calls:
  7545 ;;		Nothing
  7546 ;; This function is called by:
  7547 ;;		_key_process_down
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text38
  7552  002E9A                     __ptext38:
  7553                           	opt stack 0
  7554  002E9A                     _key_shift_loc_fixed_point:
  7555                           	opt stack 23
  7556                           
  7557                           ;key_menu.c: 41: uint8_t t8=*loc;
  7558                           
  7559                           ;incstack = 0
  7560  002E9A  C0E9  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
  7561  002E9E  C0EA  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
  7562  002EA2  50DF               	movf	indf2,w,c
  7563  002EA4  0100               	movlb	0	; () banked
  7564  002EA6  6FED               	movwf	key_shift_loc_fixed_point@t8& (0+255),b
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;key_menu.c: 42: if(min<max)return;
  7568  002EA8  0100               	movlb	0	; () banked
  7569  002EAA  51EC               	movf	key_shift_loc_fixed_point@max& (0+255),w,b
  7570  002EAC  0100               	movlb	0	; () banked
  7571  002EAE  5DEB               	subwf	key_shift_loc_fixed_point@min& (0+255),w,b
  7572  002EB0  A0D8               	btfss	status,0,c
  7573  002EB2  0012               	return	
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;key_menu.c: 43: t8++;
  7577                           
  7578                           ; BSR set to: 0
  7579                           
  7580                           ; BSR set to: 0
  7581  002EB4  0100               	movlb	0	; () banked
  7582  002EB6  2BED               	incf	key_shift_loc_fixed_point@t8& (0+255),f,b
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;key_menu.c: 44: if(t8>max)t8=min;
  7586  002EB8  0100               	movlb	0	; () banked
  7587  002EBA  51ED               	movf	key_shift_loc_fixed_point@t8& (0+255),w,b
  7588  002EBC  0100               	movlb	0	; () banked
  7589  002EBE  5DEC               	subwf	key_shift_loc_fixed_point@max& (0+255),w,b
  7590  002EC0  A0D8               	btfss	status,0,c
  7591                           
  7592                           ; BSR set to: 0
  7593  002EC2  C0EB  F0ED         	movff	key_shift_loc_fixed_point@min,key_shift_loc_fixed_point@t8
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;key_menu.c: 45: *loc=t8;
  7597                           
  7598                           ; BSR set to: 0
  7599  002EC6  C0E9  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
  7600  002ECA  C0EA  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
  7601  002ECE  C0ED  FFDF         	movff	key_shift_loc_fixed_point@t8,indf2
  7602                           
  7603                           ; BSR set to: 0
  7604  002ED2  0012               	return		;funcret
  7605  002ED4                     __end_of_key_shift_loc_fixed_point:
  7606                           	opt stack 0
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           intcon	equ	0xFF2
  7614                           postinc0	equ	0xFEE
  7615                           wreg	equ	0xFE8
  7616                           postdec1	equ	0xFE5
  7617                           plusw1	equ	0xFE3
  7618                           fsr1h	equ	0xFE2
  7619                           fsr1l	equ	0xFE1
  7620                           indf2	equ	0xFDF
  7621                           postinc2	equ	0xFDE
  7622                           postdec2	equ	0xFDD
  7623                           plusw2	equ	0xFDB
  7624                           fsr2h	equ	0xFDA
  7625                           fsr2l	equ	0xFD9
  7626                           status	equ	0xFD8
  7627                           
  7628 ;; *************** function _event_process_time_out *****************
  7629 ;; Defined at:
  7630 ;;		line 32 in file "src/app/event.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;		None
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      char 
  7637 ;; Registers used:
  7638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;Total ram usage:        0 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:   10
  7651 ;; This function calls:
  7652 ;;		_sample_diff_pr_chip_fast
  7653 ;; This function is called by:
  7654 ;;		_event_process
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text39
  7659  003340                     __ptext39:
  7660                           	opt stack 0
  7661  003340                     _event_process_time_out:
  7662                           	opt stack 19
  7663                           
  7664                           ;event.c: 34: if(dwm!=WORK_MODE){
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;incstack = 0
  7668  003340  041C               	decf	_dwm,w,c	;volatile
  7669  003342  B4D8               	btfsc	status,2,c
  7670  003344  0012               	return	
  7671                           
  7672                           ;event.c: 35: sample_diff_pr_chip_fast();
  7673  003346  ECB9  F009         	call	_sample_diff_pr_chip_fast	;wreg free
  7674  00334A  0012               	return	
  7675  00334C                     __end_of_event_process_time_out:
  7676                           	opt stack 0
  7677                           tblptru	equ	0xFF8
  7678                           tblptrh	equ	0xFF7
  7679                           tblptrl	equ	0xFF6
  7680                           tablat	equ	0xFF5
  7681                           prodh	equ	0xFF4
  7682                           prodl	equ	0xFF3
  7683                           intcon	equ	0xFF2
  7684                           postinc0	equ	0xFEE
  7685                           wreg	equ	0xFE8
  7686                           postdec1	equ	0xFE5
  7687                           plusw1	equ	0xFE3
  7688                           fsr1h	equ	0xFE2
  7689                           fsr1l	equ	0xFE1
  7690                           indf2	equ	0xFDF
  7691                           postinc2	equ	0xFDE
  7692                           postdec2	equ	0xFDD
  7693                           plusw2	equ	0xFDB
  7694                           fsr2h	equ	0xFDA
  7695                           fsr2l	equ	0xFD9
  7696                           status	equ	0xFD8
  7697                           
  7698 ;; *************** function _event_process_ticker *****************
  7699 ;; Defined at:
  7700 ;;		line 24 in file "src/app/event.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      char 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:   10
  7721 ;; This function calls:
  7722 ;;		_sample_diff_pr_chip_fast
  7723 ;; This function is called by:
  7724 ;;		_event_process
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text40
  7729  00334C                     __ptext40:
  7730                           	opt stack 0
  7731  00334C                     _event_process_ticker:
  7732                           	opt stack 19
  7733                           
  7734                           ;event.c: 26: if(dwm!=WORK_MODE){
  7735                           
  7736                           ;incstack = 0
  7737  00334C  041C               	decf	_dwm,w,c	;volatile
  7738  00334E  B4D8               	btfsc	status,2,c
  7739  003350  0012               	return	
  7740                           
  7741                           ;event.c: 27: sample_diff_pr_chip_fast();
  7742  003352  ECB9  F009         	call	_sample_diff_pr_chip_fast	;wreg free
  7743  003356  0012               	return	
  7744  003358                     __end_of_event_process_ticker:
  7745                           	opt stack 0
  7746                           tblptru	equ	0xFF8
  7747                           tblptrh	equ	0xFF7
  7748                           tblptrl	equ	0xFF6
  7749                           tablat	equ	0xFF5
  7750                           prodh	equ	0xFF4
  7751                           prodl	equ	0xFF3
  7752                           intcon	equ	0xFF2
  7753                           postinc0	equ	0xFEE
  7754                           wreg	equ	0xFE8
  7755                           postdec1	equ	0xFE5
  7756                           plusw1	equ	0xFE3
  7757                           fsr1h	equ	0xFE2
  7758                           fsr1l	equ	0xFE1
  7759                           indf2	equ	0xFDF
  7760                           postinc2	equ	0xFDE
  7761                           postdec2	equ	0xFDD
  7762                           plusw2	equ	0xFDB
  7763                           fsr2h	equ	0xFDA
  7764                           fsr2l	equ	0xFD9
  7765                           status	equ	0xFD8
  7766                           
  7767 ;; *************** function _sample_diff_pr_chip_fast *****************
  7768 ;; Defined at:
  7769 ;;		line 70 in file "src/api/sample.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  t16             2   24[BANK1 ] int 
  7774 ;;  ret             1   23[BANK1 ] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      unsigned char 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;Total ram usage:        3 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    9
  7791 ;; This function calls:
  7792 ;;		_ads1115_read_conversion
  7793 ;;		_ads1115_set_mux
  7794 ;;		_ads1115_start_conversion
  7795 ;;		_sample_diff_pr_fliter
  7796 ;; This function is called by:
  7797 ;;		_event_process_ticker
  7798 ;;		_event_process_time_out
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text41
  7803  001372                     __ptext41:
  7804                           	opt stack 0
  7805  001372                     _sample_diff_pr_chip_fast:
  7806                           	opt stack 19
  7807                           
  7808                           ;sample.c: 72: uint8_t ret=0;
  7809                           
  7810                           ;incstack = 0
  7811  001372  0E00               	movlw	0
  7812  001374  0101               	movlb	1	; () banked
  7813  001376  6F75               	movwf	sample_diff_pr_chip_fast@ret& (0+255),b
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;sample.c: 73: int16_t t16;
  7817                           ;sample.c: 74: fastSampTimer+=100;
  7818  001378  0E64               	movlw	100
  7819  00137A  2607               	addwf	_fastSampTimer,f,c	;volatile
  7820  00137C  0E00               	movlw	0
  7821  00137E  2208               	addwfc	_fastSampTimer+1,f,c	;volatile
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;sample.c: 75: if(fastSampTimer>(1000/20)){
  7825  001380  5008               	movf	_fastSampTimer+1,w,c	;volatile
  7826  001382  E104               	bnz	u7320
  7827  001384  0E33               	movlw	51
  7828  001386  5C07               	subwf	_fastSampTimer,w,c	;volatile
  7829  001388  A0D8               	btfss	status,0,c
  7830  00138A  0012               	return	
  7831  00138C                     u7320:
  7832                           
  7833                           ; BSR set to: 1
  7834                           ;sample.c: 76: fastSampTimer=0;
  7835  00138C  0E00               	movlw	0
  7836  00138E  6E08               	movwf	_fastSampTimer+1,c	;volatile
  7837  001390  0E00               	movlw	0
  7838  001392  6E07               	movwf	_fastSampTimer,c	;volatile
  7839                           
  7840                           ; BSR set to: 1
  7841                           ;sample.c: 77: t16=ads1115_read_conversion(pAds1115DiffPrObj);
  7842  001394  C009  F0F3         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
  7843  001398  C00A  F0F4         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
  7844  00139C  ECED  F015         	call	_ads1115_read_conversion	;wreg free
  7845  0013A0  C0F3  F176         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_fast@t16
  7846  0013A4  C0F4  F177         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_fast@t16+1
  7847                           
  7848                           ;sample.c: 78: if(diffSampCh==0){
  7849  0013A8  5016               	movf	_diffSampCh,w,c
  7850  0013AA  A4D8               	btfss	status,2,c
  7851  0013AC  D01B               	goto	l9408
  7852                           
  7853                           ;sample.c: 79: if(diffSampCount_D01<20/3){
  7854  0013AE  0E06               	movlw	6
  7855  0013B0  6018               	cpfslt	_diffSampCount_D01,c
  7856  0013B2  D00D               	goto	l9404
  7857                           
  7858                           ;sample.c: 80: sampBufDiffPr_D01[diffSampCount_D01]=t16;
  7859  0013B4  5018               	movf	_diffSampCount_D01,w,c
  7860  0013B6  0D02               	mullw	2
  7861  0013B8  0E30               	movlw	low _sampBufDiffPr_D01
  7862  0013BA  24F3               	addwf	prodl,w,c
  7863  0013BC  6ED9               	movwf	fsr2l,c
  7864  0013BE  0E01               	movlw	high _sampBufDiffPr_D01
  7865  0013C0  20F4               	addwfc	prodh,w,c
  7866  0013C2  6EDA               	movwf	fsr2h,c
  7867  0013C4  C176  FFDE         	movff	sample_diff_pr_chip_fast@t16,postinc2
  7868  0013C8  C177  FFDD         	movff	sample_diff_pr_chip_fast@t16+1,postdec2
  7869                           
  7870                           ;sample.c: 81: diffSampCount_D01++;
  7871  0013CC  2A18               	incf	_diffSampCount_D01,f,c
  7872  0013CE                     l9404:
  7873                           
  7874                           ;sample.c: 82: }
  7875                           ;sample.c: 83: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_2_3);
  7876  0013CE  C009  F0E9         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  7877  0013D2  C00A  F0EA         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  7878  0013D6  0E03               	movlw	3
  7879  0013D8  0100               	movlb	0	; () banked
  7880  0013DA  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
  7881  0013DC  ECFB  F018         	call	_ads1115_set_mux	;wreg free
  7882                           
  7883                           ;sample.c: 84: diffSampCh=1;
  7884  0013E0  0E01               	movlw	1
  7885  0013E2  D02C               	goto	L2
  7886  0013E4                     l9408:
  7887  0013E4  0416               	decf	_diffSampCh,w,c
  7888  0013E6  A4D8               	btfss	status,2,c
  7889  0013E8  D01B               	goto	l475
  7890                           
  7891                           ;sample.c: 86: if(diffSampCount_D23<20/3){
  7892  0013EA  0E06               	movlw	6
  7893  0013EC  6017               	cpfslt	_diffSampCount_D23,c
  7894  0013EE  D00D               	goto	l9416
  7895                           
  7896                           ;sample.c: 87: sampBufDiffPr_D23[diffSampCount_D23]=t16;
  7897  0013F0  5017               	movf	_diffSampCount_D23,w,c
  7898  0013F2  0D02               	mullw	2
  7899  0013F4  0E20               	movlw	low _sampBufDiffPr_D23
  7900  0013F6  24F3               	addwf	prodl,w,c
  7901  0013F8  6ED9               	movwf	fsr2l,c
  7902  0013FA  0E01               	movlw	high _sampBufDiffPr_D23
  7903  0013FC  20F4               	addwfc	prodh,w,c
  7904  0013FE  6EDA               	movwf	fsr2h,c
  7905  001400  C176  FFDE         	movff	sample_diff_pr_chip_fast@t16,postinc2
  7906  001404  C177  FFDD         	movff	sample_diff_pr_chip_fast@t16+1,postdec2
  7907                           
  7908                           ;sample.c: 88: diffSampCount_D23++;
  7909  001408  2A17               	incf	_diffSampCount_D23,f,c
  7910  00140A                     l9416:
  7911                           
  7912                           ;sample.c: 89: }
  7913                           ;sample.c: 90: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_SINGLE_1);
  7914  00140A  C009  F0E9         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  7915  00140E  C00A  F0EA         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  7916  001412  0E05               	movlw	5
  7917  001414  0100               	movlb	0	; () banked
  7918  001416  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
  7919  001418  ECFB  F018         	call	_ads1115_set_mux	;wreg free
  7920                           
  7921                           ;sample.c: 91: diffSampCh=2;
  7922  00141C  0E02               	movlw	2
  7923  00141E  D00E               	goto	L2
  7924  001420                     l475:
  7925                           
  7926                           ;sample.c: 93: sampBufDiffPr_S1=t16;
  7927  001420  C176  F0B2         	movff	sample_diff_pr_chip_fast@t16,_sampBufDiffPr_S1
  7928  001424  C177  F0B3         	movff	sample_diff_pr_chip_fast@t16+1,_sampBufDiffPr_S1+1
  7929                           
  7930                           ;sample.c: 94: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_0_1);
  7931  001428  C009  F0E9         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  7932  00142C  C00A  F0EA         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  7933  001430  0E00               	movlw	0
  7934  001432  0100               	movlb	0	; () banked
  7935  001434  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
  7936  001436  ECFB  F018         	call	_ads1115_set_mux	;wreg free
  7937                           
  7938                           ;sample.c: 95: diffSampCh=0;
  7939  00143A  0E00               	movlw	0
  7940  00143C                     L2:
  7941  00143C  6E16               	movwf	_diffSampCh,c
  7942                           
  7943                           ;sample.c: 96: }
  7944                           ;sample.c: 98: ads1115_start_conversion(pAds1115DiffPrObj);
  7945  00143E  C009  F0F1         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
  7946  001442  C00A  F0F2         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
  7947  001446  ECD2  F018         	call	_ads1115_start_conversion	;wreg free
  7948                           
  7949                           ;sample.c: 100: if((diffSampCount_D01 >= diffSampCount_D23) && (diffSampCount_D01 >= 20/
      +                          3)){
  7950  00144A  5017               	movf	_diffSampCount_D23,w,c
  7951  00144C  5C18               	subwf	_diffSampCount_D01,w,c
  7952  00144E  A0D8               	btfss	status,0,c
  7953  001450  0012               	return	
  7954  001452  0E05               	movlw	5
  7955  001454  6418               	cpfsgt	_diffSampCount_D01,c
  7956  001456  0012               	return	
  7957                           
  7958                           ;sample.c: 101: sample_diff_pr_fliter(&x_prDiffData);
  7959  001458  0EE1               	movlw	low _x_prDiffData
  7960  00145A  0101               	movlb	1	; () banked
  7961  00145C  6F73               	movwf	sample_diff_pr_fliter@xin& (0+255),b
  7962  00145E  0E00               	movlw	high _x_prDiffData
  7963  001460  0101               	movlb	1	; () banked
  7964  001462  6F74               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
  7965  001464  EC2C  F012         	call	_sample_diff_pr_fliter	;wreg free
  7966                           
  7967                           ;sample.c: 102: diffSampCount_D01=diffSampCount_D23=0;
  7968  001468  0E00               	movlw	0
  7969  00146A  6E17               	movwf	_diffSampCount_D23,c
  7970  00146C  C017  F018         	movff	_diffSampCount_D23,_diffSampCount_D01
  7971                           
  7972                           ;sample.c: 103: }
  7973                           ;sample.c: 104: return 1;
  7974                           ;	Return value of _sample_diff_pr_chip_fast is never used
  7975  001470  0012               	return	
  7976  001472                     __end_of_sample_diff_pr_chip_fast:
  7977                           	opt stack 0
  7978                           tblptru	equ	0xFF8
  7979                           tblptrh	equ	0xFF7
  7980                           tblptrl	equ	0xFF6
  7981                           tablat	equ	0xFF5
  7982                           prodh	equ	0xFF4
  7983                           prodl	equ	0xFF3
  7984                           intcon	equ	0xFF2
  7985                           postinc0	equ	0xFEE
  7986                           wreg	equ	0xFE8
  7987                           postdec1	equ	0xFE5
  7988                           plusw1	equ	0xFE3
  7989                           fsr1h	equ	0xFE2
  7990                           fsr1l	equ	0xFE1
  7991                           indf2	equ	0xFDF
  7992                           postinc2	equ	0xFDE
  7993                           postdec2	equ	0xFDD
  7994                           plusw2	equ	0xFDB
  7995                           fsr2h	equ	0xFDA
  7996                           fsr2l	equ	0xFD9
  7997                           status	equ	0xFD8
  7998                           
  7999 ;; *************** function _event_process_rtc *****************
  8000 ;; Defined at:
  8001 ;;		line 6 in file "src/app/event.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;		None
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;		None
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  1    wreg      char 
  8008 ;; Registers used:
  8009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;Total ram usage:        0 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:   13
  8022 ;; This function calls:
  8023 ;;		_sample_diff_pr_chip_slow
  8024 ;;		_sample_in_soc_adc_ch
  8025 ;;		_sample_pr_chip_comm
  8026 ;;		_ui_disp_menu
  8027 ;; This function is called by:
  8028 ;;		_event_process
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text42
  8033  0031CE                     __ptext42:
  8034                           	opt stack 0
  8035  0031CE                     _event_process_rtc:
  8036                           	opt stack 16
  8037                           
  8038                           ;event.c: 8: if(dwm==WORK_MODE){
  8039                           
  8040                           ;incstack = 0
  8041  0031CE  041C               	decf	_dwm,w,c	;volatile
  8042  0031D0  B4D8               	btfsc	status,2,c
  8043                           
  8044                           ;event.c: 9: sample_diff_pr_chip_slow();
  8045  0031D2  EC54  F007         	call	_sample_diff_pr_chip_slow	;wreg free
  8046                           
  8047                           ;event.c: 10: }
  8048                           ;event.c: 11: sample_pr_chip_comm();
  8049  0031D6  EC02  F008         	call	_sample_pr_chip_comm	;wreg free
  8050                           
  8051                           ;event.c: 12: sample_in_soc_adc_ch();
  8052  0031DA  EC08  F004         	call	_sample_in_soc_adc_ch	;wreg free
  8053                           
  8054                           ;event.c: 13: if(glNoEventTimeOut){
  8055  0031DE  503F               	movf	_glNoEventTimeOut,w,c	;volatile
  8056  0031E0  B4D8               	btfsc	status,2,c
  8057  0031E2  D006               	goto	l9864
  8058                           
  8059                           ;event.c: 14: glNoEventTimeOut--;
  8060  0031E4  063F               	decf	_glNoEventTimeOut,f,c	;volatile
  8061                           
  8062                           ;event.c: 15: if(!glNoEventTimeOut){
  8063  0031E6  503F               	movf	_glNoEventTimeOut,w,c	;volatile
  8064  0031E8  A4D8               	btfss	status,2,c
  8065  0031EA  D002               	goto	l9864
  8066                           
  8067                           ;event.c: 16: glbEvent |= (1<<2);
  8068  0031EC  0100               	movlb	0	; () banked
  8069  0031EE  85CE               	bsf	_glbEvent& (0+255),2,b	;volatile
  8070  0031F0                     l9864:
  8071                           
  8072                           ;event.c: 17: }
  8073                           ;event.c: 18: }
  8074                           ;event.c: 20: ui_disp_menu();
  8075  0031F0  EC22  F019         	call	_ui_disp_menu	;wreg free
  8076  0031F4  0012               	return	
  8077  0031F6                     __end_of_event_process_rtc:
  8078                           	opt stack 0
  8079                           tblptru	equ	0xFF8
  8080                           tblptrh	equ	0xFF7
  8081                           tblptrl	equ	0xFF6
  8082                           tablat	equ	0xFF5
  8083                           prodh	equ	0xFF4
  8084                           prodl	equ	0xFF3
  8085                           intcon	equ	0xFF2
  8086                           postinc0	equ	0xFEE
  8087                           wreg	equ	0xFE8
  8088                           postdec1	equ	0xFE5
  8089                           plusw1	equ	0xFE3
  8090                           fsr1h	equ	0xFE2
  8091                           fsr1l	equ	0xFE1
  8092                           indf2	equ	0xFDF
  8093                           postinc2	equ	0xFDE
  8094                           postdec2	equ	0xFDD
  8095                           plusw2	equ	0xFDB
  8096                           fsr2h	equ	0xFDA
  8097                           fsr2l	equ	0xFD9
  8098                           status	equ	0xFD8
  8099                           
  8100 ;; *************** function _ui_disp_menu *****************
  8101 ;; Defined at:
  8102 ;;		line 205 in file "src/api/ui.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:   12
  8123 ;; This function calls:
  8124 ;;		_ui_disp_menu_psw_adj
  8125 ;; This function is called by:
  8126 ;;		_key_process
  8127 ;;		_event_process_rtc
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text43
  8132  003244                     __ptext43:
  8133                           	opt stack 0
  8134  003244                     _ui_disp_menu:
  8135                           	opt stack 16
  8136                           
  8137                           ;ui.c: 207: switch(menu){
  8138                           
  8139                           ;incstack = 0
  8140  003244  D003               	goto	l9372
  8141  003246                     l9368:
  8142  003246  EC56  F019         	call	_ui_disp_menu_psw_adj	;wreg free
  8143                           
  8144                           ;ui.c: 215: }
  8145                           
  8146                           ;ui.c: 213: default:break;
  8147  00324A  0012               	return	
  8148  00324C                     l9372:
  8149  00324C  501B               	movf	_menu,w,c	;volatile
  8150                           
  8151                           ; Switch size 1, requested type "space"
  8152                           ; Number of cases is 4, Range of values is 0 to 16
  8153                           ; switch strategies available:
  8154                           ; Name         Instructions Cycles
  8155                           ; simple_byte           13     7 (average)
  8156                           ;	Chosen strategy is simple_byte
  8157  00324E  0A00               	xorlw	0	; case 0
  8158  003250  B4D8               	btfsc	status,2,c
  8159  003252  0012               	return	
  8160  003254  0A01               	xorlw	1	; case 1
  8161  003256  B4D8               	btfsc	status,2,c
  8162  003258  0012               	return	
  8163  00325A  0A03               	xorlw	3	; case 2
  8164  00325C  B4D8               	btfsc	status,2,c
  8165  00325E  0012               	return	
  8166  003260  0A12               	xorlw	18	; case 16
  8167  003262  A4D8               	btfss	status,2,c
  8168  003264  0012               	return	
  8169  003266  D7EF               	goto	l9368
  8170  003268                     __end_of_ui_disp_menu:
  8171                           	opt stack 0
  8172                           tblptru	equ	0xFF8
  8173                           tblptrh	equ	0xFF7
  8174                           tblptrl	equ	0xFF6
  8175                           tablat	equ	0xFF5
  8176                           prodh	equ	0xFF4
  8177                           prodl	equ	0xFF3
  8178                           intcon	equ	0xFF2
  8179                           postinc0	equ	0xFEE
  8180                           wreg	equ	0xFE8
  8181                           postdec1	equ	0xFE5
  8182                           plusw1	equ	0xFE3
  8183                           fsr1h	equ	0xFE2
  8184                           fsr1l	equ	0xFE1
  8185                           indf2	equ	0xFDF
  8186                           postinc2	equ	0xFDE
  8187                           postdec2	equ	0xFDD
  8188                           plusw2	equ	0xFDB
  8189                           fsr2h	equ	0xFDA
  8190                           fsr2l	equ	0xFD9
  8191                           status	equ	0xFD8
  8192                           
  8193 ;; *************** function _ui_disp_menu_psw_adj *****************
  8194 ;; Defined at:
  8195 ;;		line 200 in file "src/api/ui.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;		None
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;Total ram usage:        0 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:   11
  8216 ;; This function calls:
  8217 ;;		_ui_disp_adj_xfixed_pt
  8218 ;; This function is called by:
  8219 ;;		_ui_disp_menu
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text44
  8224  0032AC                     __ptext44:
  8225                           	opt stack 0
  8226  0032AC                     _ui_disp_menu_psw_adj:
  8227                           	opt stack 16
  8228                           
  8229                           ;ui.c: 202: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
  8230                           
  8231                           ;incstack = 0
  8232  0032AC  0EF2               	movlw	low STR_3
  8233  0032AE  0101               	movlb	1	; () banked
  8234  0032B0  6F67               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
  8235  0032B2  0EFF               	movlw	high STR_3
  8236  0032B4  0101               	movlb	1	; () banked
  8237  0032B6  6F68               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
  8238  0032B8  C01D  F169         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
  8239  0032BC  C01E  F16A         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
  8240  0032C0  C01F  F16B         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
  8241  0032C4  ECD2  F00D         	call	_ui_disp_adj_xfixed_pt	;wreg free
  8242  0032C8  0012               	return		;funcret
  8243  0032CA                     __end_of_ui_disp_menu_psw_adj:
  8244                           	opt stack 0
  8245                           tblptru	equ	0xFF8
  8246                           tblptrh	equ	0xFF7
  8247                           tblptrl	equ	0xFF6
  8248                           tablat	equ	0xFF5
  8249                           prodh	equ	0xFF4
  8250                           prodl	equ	0xFF3
  8251                           intcon	equ	0xFF2
  8252                           postinc0	equ	0xFEE
  8253                           wreg	equ	0xFE8
  8254                           postdec1	equ	0xFE5
  8255                           plusw1	equ	0xFE3
  8256                           fsr1h	equ	0xFE2
  8257                           fsr1l	equ	0xFE1
  8258                           indf2	equ	0xFDF
  8259                           postinc2	equ	0xFDE
  8260                           postdec2	equ	0xFDD
  8261                           plusw2	equ	0xFDB
  8262                           fsr2h	equ	0xFDA
  8263                           fsr2l	equ	0xFD9
  8264                           status	equ	0xFD8
  8265                           
  8266 ;; *************** function _ui_disp_adj_xfixed_pt *****************
  8267 ;; Defined at:
  8268 ;;		line 186 in file "src/api/ui.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  str             2    9[BANK1 ] PTR unsigned char 
  8271 ;;		 -> STR_3(5), 
  8272 ;;  x               2   11[BANK1 ] unsigned int 
  8273 ;;  loc             1   13[BANK1 ] unsigned char 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  buf            10   16[BANK1 ] unsigned char [10]
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8285 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;Total ram usage:       17 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:   10
  8292 ;; This function calls:
  8293 ;;		___x_arrange_str
  8294 ;;		_lcd_disp_refresh
  8295 ;;		_lcd_show_string
  8296 ;;		_m_int16_2_str_4
  8297 ;;		_m_mem_cpy
  8298 ;;		_ui_disp_clear_num_dp
  8299 ;; This function is called by:
  8300 ;;		_ui_disp_menu_psw_adj
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text45
  8305  001BA4                     __ptext45:
  8306                           	opt stack 0
  8307  001BA4                     _ui_disp_adj_xfixed_pt:
  8308                           	opt stack 16
  8309                           
  8310                           ;ui.c: 188: uint8_t buf[10];
  8311                           ;ui.c: 189: ui_disp_clear_num_dp();
  8312                           
  8313                           ;incstack = 0
  8314  001BA4  EC6E  F015         	call	_ui_disp_clear_num_dp	;wreg free
  8315                           
  8316                           ;ui.c: 190: if(x>9999)x=9999;
  8317  001BA8  0E10               	movlw	16
  8318  001BAA  0101               	movlb	1	; () banked
  8319  001BAC  5D69               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
  8320  001BAE  0E27               	movlw	39
  8321  001BB0  0101               	movlb	1	; () banked
  8322  001BB2  596A               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
  8323  001BB4  A0D8               	btfss	status,0,c
  8324  001BB6  D005               	goto	l8986
  8325                           
  8326                           ; BSR set to: 1
  8327  001BB8  0E27               	movlw	39
  8328  001BBA  0101               	movlb	1	; () banked
  8329  001BBC  6F6A               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
  8330  001BBE  0E0F               	movlw	15
  8331  001BC0  6F69               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
  8332  001BC2                     l8986:
  8333                           
  8334                           ; BSR set to: 1
  8335                           ;ui.c: 191: m_mem_cpy(buf,str);
  8336  001BC2  0E6E               	movlw	low ui_disp_adj_xfixed_pt@buf
  8337  001BC4  0100               	movlb	0	; () banked
  8338  001BC6  6FE9               	movwf	m_mem_cpy@d& (0+255),b
  8339  001BC8  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  8340  001BCA  0100               	movlb	0	; () banked
  8341  001BCC  6FEA               	movwf	(m_mem_cpy@d+1)& (0+255),b
  8342  001BCE  C167  F0EB         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
  8343  001BD2  C168  F0EC         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
  8344  001BD6  EC32  F016         	call	_m_mem_cpy	;wreg free
  8345                           
  8346                           ;ui.c: 192: m_int16_2_str_4(buf+4,x);
  8347  001BDA  0E72               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
  8348  001BDC  0100               	movlb	0	; () banked
  8349  001BDE  6FF1               	movwf	m_int16_2_str_4@buf& (0+255),b
  8350  001BE0  0E01               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
  8351  001BE2  0100               	movlb	0	; () banked
  8352  001BE4  6FF2               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
  8353  001BE6  C169  F0F3         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
  8354  001BEA  C16A  F0F4         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
  8355  001BEE  ECA5  F006         	call	_m_int16_2_str_4	;wreg free
  8356                           
  8357                           ;ui.c: 193: __x_arrange_str(buf,8);
  8358  001BF2  0E6E               	movlw	low ui_disp_adj_xfixed_pt@buf
  8359  001BF4  0100               	movlb	0	; () banked
  8360  001BF6  6FE9               	movwf	___x_arrange_str@str& (0+255),b
  8361  001BF8  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  8362  001BFA  0100               	movlb	0	; () banked
  8363  001BFC  6FEA               	movwf	(___x_arrange_str@str+1)& (0+255),b
  8364  001BFE  0E08               	movlw	8
  8365  001C00  0100               	movlb	0	; () banked
  8366  001C02  6FEB               	movwf	___x_arrange_str@len& (0+255),b
  8367  001C04  EC81  F013         	call	___x_arrange_str	;wreg free
  8368                           
  8369                           ;ui.c: 194: if(loc>3)loc=3;
  8370  001C08  0E03               	movlw	3
  8371  001C0A  0101               	movlb	1	; () banked
  8372  001C0C  656B               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
  8373  001C0E  D003               	goto	l8996
  8374                           
  8375                           ; BSR set to: 1
  8376  001C10  0E03               	movlw	3
  8377  001C12  0101               	movlb	1	; () banked
  8378  001C14  6F6B               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
  8379  001C16                     l8996:
  8380                           
  8381                           ; BSR set to: 1
  8382                           ;ui.c: 195: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
  8383  001C16  010F               	movlb	15	; () banked
  8384  001C18  B75F               	btfsc	95,3,b	;volatile
  8385  001C1A  D014               	goto	l9000
  8386                           
  8387                           ; BSR set to: 15
  8388  001C1C  0101               	movlb	1	; () banked
  8389  001C1E  516B               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
  8390  001C20  0101               	movlb	1	; () banked
  8391  001C22  6F6C               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
  8392  001C24  6B6D               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
  8393  001C26  0E04               	movlw	4
  8394  001C28  0101               	movlb	1	; () banked
  8395  001C2A  276C               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
  8396  001C2C  0E00               	movlw	0
  8397  001C2E  236D               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
  8398  001C30  0E6E               	movlw	low ui_disp_adj_xfixed_pt@buf
  8399  001C32  0101               	movlb	1	; () banked
  8400  001C34  256C               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
  8401  001C36  6ED9               	movwf	fsr2l,c
  8402  001C38  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  8403  001C3A  0101               	movlb	1	; () banked
  8404  001C3C  216D               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
  8405  001C3E  6EDA               	movwf	fsr2h,c
  8406  001C40  0E20               	movlw	32
  8407  001C42  6EDF               	movwf	indf2,c
  8408  001C44                     l9000:
  8409                           
  8410                           ;ui.c: 196: lcd_show_string(buf);
  8411  001C44  0E6E               	movlw	low ui_disp_adj_xfixed_pt@buf
  8412  001C46  0101               	movlb	1	; () banked
  8413  001C48  6F64               	movwf	lcd_show_string@str& (0+255),b
  8414  001C4A  0E01               	movlw	high ui_disp_adj_xfixed_pt@buf
  8415  001C4C  0101               	movlb	1	; () banked
  8416  001C4E  6F65               	movwf	(lcd_show_string@str+1)& (0+255),b
  8417  001C50  ECA7  F012         	call	_lcd_show_string	;wreg free
  8418                           
  8419                           ;ui.c: 197: lcd_disp_refresh();
  8420  001C54  EC82  F014         	call	_lcd_disp_refresh	;wreg free
  8421  001C58  0012               	return		;funcret
  8422  001C5A                     __end_of_ui_disp_adj_xfixed_pt:
  8423                           	opt stack 0
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           prodh	equ	0xFF4
  8429                           prodl	equ	0xFF3
  8430                           intcon	equ	0xFF2
  8431                           postinc0	equ	0xFEE
  8432                           wreg	equ	0xFE8
  8433                           postdec1	equ	0xFE5
  8434                           plusw1	equ	0xFE3
  8435                           fsr1h	equ	0xFE2
  8436                           fsr1l	equ	0xFE1
  8437                           indf2	equ	0xFDF
  8438                           postinc2	equ	0xFDE
  8439                           postdec2	equ	0xFDD
  8440                           plusw2	equ	0xFDB
  8441                           fsr2h	equ	0xFDA
  8442                           fsr2l	equ	0xFD9
  8443                           status	equ	0xFD8
  8444                           
  8445 ;; *************** function _ui_disp_clear_num_dp *****************
  8446 ;; Defined at:
  8447 ;;		line 159 in file "src/api/ui.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;		None
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;Total ram usage:        0 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    9
  8468 ;; This function calls:
  8469 ;;		_lcd_show_dp
  8470 ;;		_lcd_show_string
  8471 ;; This function is called by:
  8472 ;;		_ui_disp_adj_xfixed_pt
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text46
  8477  002ADC                     __ptext46:
  8478                           	opt stack 0
  8479  002ADC                     _ui_disp_clear_num_dp:
  8480                           	opt stack 16
  8481                           
  8482                           ;ui.c: 161: lcd_show_string((uint8_t*)"        ");
  8483                           
  8484                           ;incstack = 0
  8485  002ADC  0EE4               	movlw	low STR_2
  8486  002ADE  0101               	movlb	1	; () banked
  8487  002AE0  6F64               	movwf	lcd_show_string@str& (0+255),b
  8488  002AE2  0EFF               	movlw	high STR_2
  8489  002AE4  0101               	movlb	1	; () banked
  8490  002AE6  6F65               	movwf	(lcd_show_string@str+1)& (0+255),b
  8491  002AE8  ECA7  F012         	call	_lcd_show_string	;wreg free
  8492                           
  8493                           ;ui.c: 162: lcd_show_dp(0,0);
  8494  002AEC  0E00               	movlw	0
  8495  002AEE  0101               	movlb	1	; () banked
  8496  002AF0  6F61               	movwf	lcd_show_dp@show& (0+255),b
  8497  002AF2  0E00               	movlw	0
  8498  002AF4  EC15  F013         	call	_lcd_show_dp
  8499                           
  8500                           ;ui.c: 163: lcd_show_dp(1,0);
  8501  002AF8  0E00               	movlw	0
  8502  002AFA  0101               	movlb	1	; () banked
  8503  002AFC  6F61               	movwf	lcd_show_dp@show& (0+255),b
  8504  002AFE  0E01               	movlw	1
  8505  002B00  EC15  F013         	call	_lcd_show_dp
  8506                           
  8507                           ;ui.c: 164: lcd_show_dp(2,0);
  8508  002B04  0E00               	movlw	0
  8509  002B06  0101               	movlb	1	; () banked
  8510  002B08  6F61               	movwf	lcd_show_dp@show& (0+255),b
  8511  002B0A  0E02               	movlw	2
  8512  002B0C  EC15  F013         	call	_lcd_show_dp
  8513                           
  8514                           ;ui.c: 165: lcd_show_dp(4,0);
  8515  002B10  0E00               	movlw	0
  8516  002B12  0101               	movlb	1	; () banked
  8517  002B14  6F61               	movwf	lcd_show_dp@show& (0+255),b
  8518  002B16  0E04               	movlw	4
  8519  002B18  EC15  F013         	call	_lcd_show_dp
  8520                           
  8521                           ;ui.c: 166: lcd_show_dp(5,0);
  8522  002B1C  0E00               	movlw	0
  8523  002B1E  0101               	movlb	1	; () banked
  8524  002B20  6F61               	movwf	lcd_show_dp@show& (0+255),b
  8525  002B22  0E05               	movlw	5
  8526  002B24  EC15  F013         	call	_lcd_show_dp
  8527                           
  8528                           ;ui.c: 167: lcd_show_dp(6,0);
  8529  002B28  0E00               	movlw	0
  8530  002B2A  0101               	movlb	1	; () banked
  8531  002B2C  6F61               	movwf	lcd_show_dp@show& (0+255),b
  8532  002B2E  0E06               	movlw	6
  8533  002B30  EC15  F013         	call	_lcd_show_dp
  8534  002B34  0012               	return		;funcret
  8535  002B36                     __end_of_ui_disp_clear_num_dp:
  8536                           	opt stack 0
  8537                           tblptru	equ	0xFF8
  8538                           tblptrh	equ	0xFF7
  8539                           tblptrl	equ	0xFF6
  8540                           tablat	equ	0xFF5
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           postinc0	equ	0xFEE
  8545                           wreg	equ	0xFE8
  8546                           postdec1	equ	0xFE5
  8547                           plusw1	equ	0xFE3
  8548                           fsr1h	equ	0xFE2
  8549                           fsr1l	equ	0xFE1
  8550                           indf2	equ	0xFDF
  8551                           postinc2	equ	0xFDE
  8552                           postdec2	equ	0xFDD
  8553                           plusw2	equ	0xFDB
  8554                           fsr2h	equ	0xFDA
  8555                           fsr2l	equ	0xFD9
  8556                           status	equ	0xFD8
  8557                           
  8558 ;; *************** function _lcd_show_string *****************
  8559 ;; Defined at:
  8560 ;;		line 534 in file "src/driver/lcd.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  str             2    6[BANK1 ] PTR unsigned char 
  8563 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  t8              1    8[BANK1 ] unsigned char 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8575 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;Total ram usage:        3 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    8
  8582 ;; This function calls:
  8583 ;;		_lcd_show_chr
  8584 ;; This function is called by:
  8585 ;;		_ui_disp_clear_num_dp
  8586 ;;		_ui_disp_adj_xfixed_pt
  8587 ;;		_ui_disp_rtc_mm_ss
  8588 ;;		_ui_disp_adj_xfloat_pt
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text47
  8593  00254E                     __ptext47:
  8594                           	opt stack 0
  8595  00254E                     _lcd_show_string:
  8596                           	opt stack 16
  8597                           
  8598                           ;lcd.c: 536: uint8_t t8=0;
  8599                           
  8600                           ;incstack = 0
  8601  00254E  0E00               	movlw	0
  8602  002550  0101               	movlb	1	; () banked
  8603  002552  6F66               	movwf	lcd_show_string@t8& (0+255),b
  8604                           
  8605                           ;lcd.c: 537: while(*str!='\0' && t8<8){
  8606  002554  D01B               	goto	l8420
  8607  002556                     l8414:
  8608                           
  8609                           ; BSR set to: 1
  8610                           ;lcd.c: 538: lcd_show_chr(t8,*str);
  8611  002556  C164  FFF6         	movff	lcd_show_string@str,tblptrl
  8612  00255A  C165  FFF7         	movff	lcd_show_string@str+1,tblptrh
  8613  00255E  6AF8               	clrf	tblptru,c
  8614  002560  0E0F               	movlw	(high __ramtop+-1)
  8615  002562  64F7               	cpfsgt	tblptrh,c
  8616  002564  D003               	bra	u6487
  8617  002566  0008               	tblrd		*
  8618  002568  50F5               	movf	tablat,w,c
  8619  00256A  D005               	bra	u6480
  8620  00256C                     u6487:
  8621  00256C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8622  002570  CFF7 FFEA          	movff	tblptrh,fsr0h
  8623  002574  50EF               	movf	indf0,w,c
  8624  002576                     u6480:
  8625  002576  0101               	movlb	1	; () banked
  8626  002578  6F61               	movwf	lcd_show_chr@chr& (0+255),b
  8627  00257A  0101               	movlb	1	; () banked
  8628  00257C  5166               	movf	lcd_show_string@t8& (0+255),w,b
  8629  00257E  EC9F  F011         	call	_lcd_show_chr
  8630                           
  8631                           ;lcd.c: 539: str++;
  8632  002582  0101               	movlb	1	; () banked
  8633  002584  4B64               	infsnz	lcd_show_string@str& (0+255),f,b
  8634  002586  2B65               	incf	(lcd_show_string@str+1)& (0+255),f,b
  8635                           
  8636                           ; BSR set to: 1
  8637                           ;lcd.c: 540: t8++;
  8638  002588  0101               	movlb	1	; () banked
  8639  00258A  2B66               	incf	lcd_show_string@t8& (0+255),f,b
  8640  00258C                     l8420:
  8641                           
  8642                           ; BSR set to: 1
  8643  00258C  C164  FFF6         	movff	lcd_show_string@str,tblptrl
  8644  002590  C165  FFF7         	movff	lcd_show_string@str+1,tblptrh
  8645  002594  6AF8               	clrf	tblptru,c
  8646  002596  0E0F               	movlw	(high __ramtop+-1)
  8647  002598  64F7               	cpfsgt	tblptrh,c
  8648  00259A  D003               	bra	u6497
  8649  00259C  0008               	tblrd		*
  8650  00259E  50F5               	movf	tablat,w,c
  8651  0025A0  D005               	bra	u6490
  8652  0025A2                     u6497:
  8653  0025A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  8654  0025A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  8655  0025AA  50EF               	movf	indf0,w,c
  8656  0025AC                     u6490:
  8657  0025AC  0900               	iorlw	0
  8658  0025AE  B4D8               	btfsc	status,2,c
  8659  0025B0  0012               	return	
  8660  0025B2  0E07               	movlw	7
  8661  0025B4  0101               	movlb	1	; () banked
  8662  0025B6  6566               	cpfsgt	lcd_show_string@t8& (0+255),b
  8663  0025B8  D7CE               	goto	l8414
  8664  0025BA  0012               	return	
  8665  0025BC                     __end_of_lcd_show_string:
  8666                           	opt stack 0
  8667                           tblptru	equ	0xFF8
  8668                           tblptrh	equ	0xFF7
  8669                           tblptrl	equ	0xFF6
  8670                           tablat	equ	0xFF5
  8671                           prodh	equ	0xFF4
  8672                           prodl	equ	0xFF3
  8673                           intcon	equ	0xFF2
  8674                           indf0	equ	0xFEF
  8675                           postinc0	equ	0xFEE
  8676                           fsr0h	equ	0xFEA
  8677                           fsr0l	equ	0xFE9
  8678                           wreg	equ	0xFE8
  8679                           postdec1	equ	0xFE5
  8680                           plusw1	equ	0xFE3
  8681                           fsr1h	equ	0xFE2
  8682                           fsr1l	equ	0xFE1
  8683                           indf2	equ	0xFDF
  8684                           postinc2	equ	0xFDE
  8685                           postdec2	equ	0xFDD
  8686                           plusw2	equ	0xFDB
  8687                           fsr2h	equ	0xFDA
  8688                           fsr2l	equ	0xFD9
  8689                           status	equ	0xFD8
  8690                           
  8691 ;; *************** function _lcd_show_chr *****************
  8692 ;; Defined at:
  8693 ;;		line 489 in file "src/driver/lcd.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  loc             1    wreg     unsigned char 
  8696 ;;  chr             1    3[BANK1 ] unsigned char 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  loc             1    4[BANK1 ] unsigned char 
  8699 ;;  code            1    5[BANK1 ] unsigned char 
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  1    wreg      void 
  8702 ;; Registers used:
  8703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8709 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;Total ram usage:        3 bytes
  8714 ;; Hardware stack levels used:    1
  8715 ;; Hardware stack levels required when called:    7
  8716 ;; This function calls:
  8717 ;;		_lcd_disp_chr_loc_0
  8718 ;;		_lcd_disp_chr_loc_1
  8719 ;;		_lcd_disp_chr_loc_2
  8720 ;;		_lcd_disp_chr_loc_3
  8721 ;;		_lcd_disp_chr_loc_4
  8722 ;;		_lcd_disp_chr_loc_5
  8723 ;;		_lcd_disp_chr_loc_6
  8724 ;;		_lcd_disp_chr_loc_7
  8725 ;;		_lcd_disp_get_code
  8726 ;; This function is called by:
  8727 ;;		_lcd_show_string_l0
  8728 ;;		_lcd_show_string_l1
  8729 ;;		_lcd_show_string
  8730 ;;		_lcd_show_chr_lc
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text48
  8735  00233E                     __ptext48:
  8736                           	opt stack 0
  8737  00233E                     _lcd_show_chr:
  8738                           	opt stack 21
  8739                           
  8740                           ;incstack = 0
  8741                           ;lcd_show_chr@loc stored from wreg
  8742  00233E  0101               	movlb	1	; () banked
  8743  002340  6F62               	movwf	lcd_show_chr@loc& (0+255),b
  8744                           
  8745                           ;lcd.c: 491: uint8_t code=lcd_disp_get_code(chr);
  8746  002342  0101               	movlb	1	; () banked
  8747  002344  5161               	movf	lcd_show_chr@chr& (0+255),w,b
  8748  002346  ECE3  F014         	call	_lcd_disp_get_code
  8749  00234A  0101               	movlb	1	; () banked
  8750  00234C  6F63               	movwf	lcd_show_chr@code& (0+255),b
  8751                           
  8752                           ;lcd.c: 492: switch(loc){
  8753  00234E  D028               	goto	l8392
  8754  002350                     l8374:
  8755                           
  8756                           ; BSR set to: 1
  8757  002350  0101               	movlb	1	; () banked
  8758  002352  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8759  002354  EC00  F011         	call	_lcd_disp_chr_loc_0
  8760  002358  0012               	return	
  8761  00235A                     l8376:
  8762  00235A  0101               	movlb	1	; () banked
  8763  00235C  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8764  00235E  ECB0  F010         	call	_lcd_disp_chr_loc_1
  8765  002362  0012               	return	
  8766  002364                     l8378:
  8767  002364  0101               	movlb	1	; () banked
  8768  002366  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8769  002368  EC60  F010         	call	_lcd_disp_chr_loc_2
  8770  00236C  0012               	return	
  8771  00236E                     l8380:
  8772  00236E  0101               	movlb	1	; () banked
  8773  002370  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8774  002372  EC10  F010         	call	_lcd_disp_chr_loc_3
  8775  002376  0012               	return	
  8776  002378                     l8382:
  8777  002378  0101               	movlb	1	; () banked
  8778  00237A  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8779  00237C  ECC0  F00F         	call	_lcd_disp_chr_loc_4
  8780  002380  0012               	return	
  8781  002382                     l8384:
  8782  002382  0101               	movlb	1	; () banked
  8783  002384  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8784  002386  EC70  F00F         	call	_lcd_disp_chr_loc_5
  8785  00238A  0012               	return	
  8786  00238C                     l8386:
  8787  00238C  0101               	movlb	1	; () banked
  8788  00238E  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8789  002390  EC20  F00F         	call	_lcd_disp_chr_loc_6
  8790  002394  0012               	return	
  8791  002396                     l8388:
  8792  002396  0101               	movlb	1	; () banked
  8793  002398  5163               	movf	lcd_show_chr@code& (0+255),w,b
  8794  00239A  ECD0  F00E         	call	_lcd_disp_chr_loc_7
  8795                           
  8796                           ;lcd.c: 502: }
  8797                           
  8798                           ;lcd.c: 501: default:break;
  8799  00239E  0012               	return	
  8800  0023A0                     l8392:
  8801  0023A0  0101               	movlb	1	; () banked
  8802  0023A2  5162               	movf	lcd_show_chr@loc& (0+255),w,b
  8803                           
  8804                           ; Switch size 1, requested type "space"
  8805                           ; Number of cases is 8, Range of values is 0 to 7
  8806                           ; switch strategies available:
  8807                           ; Name         Instructions Cycles
  8808                           ; simple_byte           25    13 (average)
  8809                           ;	Chosen strategy is simple_byte
  8810  0023A4  0A00               	xorlw	0	; case 0
  8811  0023A6  B4D8               	btfsc	status,2,c
  8812  0023A8  D7D3               	goto	l8374
  8813  0023AA  0A01               	xorlw	1	; case 1
  8814  0023AC  B4D8               	btfsc	status,2,c
  8815  0023AE  D7D5               	goto	l8376
  8816  0023B0  0A03               	xorlw	3	; case 2
  8817  0023B2  B4D8               	btfsc	status,2,c
  8818  0023B4  D7D7               	goto	l8378
  8819  0023B6  0A01               	xorlw	1	; case 3
  8820  0023B8  B4D8               	btfsc	status,2,c
  8821  0023BA  D7D9               	goto	l8380
  8822  0023BC  0A07               	xorlw	7	; case 4
  8823  0023BE  B4D8               	btfsc	status,2,c
  8824  0023C0  D7DB               	goto	l8382
  8825  0023C2  0A01               	xorlw	1	; case 5
  8826  0023C4  B4D8               	btfsc	status,2,c
  8827  0023C6  D7DD               	goto	l8384
  8828  0023C8  0A03               	xorlw	3	; case 6
  8829  0023CA  B4D8               	btfsc	status,2,c
  8830  0023CC  D7DF               	goto	l8386
  8831  0023CE  0A01               	xorlw	1	; case 7
  8832  0023D0  A4D8               	btfss	status,2,c
  8833  0023D2  0012               	return	
  8834  0023D4  D7E0               	goto	l8388
  8835  0023D6                     __end_of_lcd_show_chr:
  8836                           	opt stack 0
  8837                           tblptru	equ	0xFF8
  8838                           tblptrh	equ	0xFF7
  8839                           tblptrl	equ	0xFF6
  8840                           tablat	equ	0xFF5
  8841                           prodh	equ	0xFF4
  8842                           prodl	equ	0xFF3
  8843                           intcon	equ	0xFF2
  8844                           indf0	equ	0xFEF
  8845                           postinc0	equ	0xFEE
  8846                           fsr0h	equ	0xFEA
  8847                           fsr0l	equ	0xFE9
  8848                           wreg	equ	0xFE8
  8849                           postdec1	equ	0xFE5
  8850                           plusw1	equ	0xFE3
  8851                           fsr1h	equ	0xFE2
  8852                           fsr1l	equ	0xFE1
  8853                           indf2	equ	0xFDF
  8854                           postinc2	equ	0xFDE
  8855                           postdec2	equ	0xFDD
  8856                           plusw2	equ	0xFDB
  8857                           fsr2h	equ	0xFDA
  8858                           fsr2l	equ	0xFD9
  8859                           status	equ	0xFD8
  8860                           
  8861 ;; *************** function _lcd_disp_get_code *****************
  8862 ;; Defined at:
  8863 ;;		line 461 in file "src/driver/lcd.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  chr             1    wreg     unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  chr             1    0[BANK0 ] unsigned char 
  8868 ;;  i               1    2[BANK0 ] unsigned char 
  8869 ;;  ret             1    1[BANK0 ] unsigned char 
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      unsigned char 
  8872 ;; Registers used:
  8873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8880 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;Total ram usage:        3 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; Hardware stack levels required when called:    4
  8886 ;; This function calls:
  8887 ;;		Nothing
  8888 ;; This function is called by:
  8889 ;;		_lcd_show_chr
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text49
  8894  0029C6                     __ptext49:
  8895                           	opt stack 0
  8896  0029C6                     _lcd_disp_get_code:
  8897                           	opt stack 23
  8898                           
  8899                           ;incstack = 0
  8900                           ;lcd_disp_get_code@chr stored from wreg
  8901  0029C6  0100               	movlb	0	; () banked
  8902  0029C8  6FE9               	movwf	lcd_disp_get_code@chr& (0+255),b
  8903                           
  8904                           ;lcd.c: 463: uint8_t i;
  8905                           ;lcd.c: 464: uint8_t ret;
  8906                           ;lcd.c: 465: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
  8907  0029CA  0E00               	movlw	0
  8908  0029CC  0100               	movlb	0	; () banked
  8909  0029CE  6FEB               	movwf	lcd_disp_get_code@i& (0+255),b
  8910  0029D0                     l8284:
  8911                           
  8912                           ; BSR set to: 0
  8913  0029D0  0E28               	movlw	40
  8914  0029D2  0100               	movlb	0	; () banked
  8915  0029D4  65EB               	cpfsgt	lcd_disp_get_code@i& (0+255),b
  8916  0029D6  D001               	goto	l8288
  8917  0029D8  D012               	goto	l8296
  8918  0029DA                     l8288:
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;lcd.c: 466: if(chr==LCDDigitalIndexTable[i])break;
  8922  0029DA  0100               	movlb	0	; () banked
  8923  0029DC  51EB               	movf	lcd_disp_get_code@i& (0+255),w,b
  8924  0029DE  0D01               	mullw	1
  8925  0029E0  0EBB               	movlw	low _LCDDigitalIndexTable
  8926  0029E2  24F3               	addwf	prodl,w,c
  8927  0029E4  6EF6               	movwf	tblptrl,c
  8928  0029E6  0EFE               	movlw	high _LCDDigitalIndexTable
  8929  0029E8  20F4               	addwfc	prodh,w,c
  8930  0029EA  6EF7               	movwf	tblptrh,c
  8931  0029EC                     	if	0	;There are less than 3 active tblptr bytes
  8932  0029EC                     	endif
  8933  0029EC  0008               	tblrd		*
  8934  0029EE  50F5               	movf	tablat,w,c
  8935  0029F0  0100               	movlb	0	; () banked
  8936  0029F2  19E9               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
  8937  0029F4  B4D8               	btfsc	status,2,c
  8938  0029F6  D003               	goto	l8296
  8939                           
  8940                           ; BSR set to: 0
  8941                           
  8942                           ; BSR set to: 0
  8943                           
  8944                           ; BSR set to: 0
  8945  0029F8  0100               	movlb	0	; () banked
  8946  0029FA  2BEB               	incf	lcd_disp_get_code@i& (0+255),f,b
  8947  0029FC  D7E9               	goto	l8284
  8948  0029FE                     l8296:
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;lcd.c: 467: }
  8952                           ;lcd.c: 468: if(i<sizeof(LCDDigitalIndexTable)){
  8953  0029FE  0E29               	movlw	41
  8954  002A00  0100               	movlb	0	; () banked
  8955  002A02  61EB               	cpfslt	lcd_disp_get_code@i& (0+255),b
  8956  002A04  D00C               	goto	l8300
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;lcd.c: 469: ret= LCDDigitalTable[i];
  8960  002A06  0100               	movlb	0	; () banked
  8961  002A08  51EB               	movf	lcd_disp_get_code@i& (0+255),w,b
  8962  002A0A  0D01               	mullw	1
  8963  002A0C  0EE4               	movlw	low _LCDDigitalTable
  8964  002A0E  24F3               	addwf	prodl,w,c
  8965  002A10  6EF6               	movwf	tblptrl,c
  8966  002A12  0EFE               	movlw	high _LCDDigitalTable
  8967  002A14  20F4               	addwfc	prodh,w,c
  8968  002A16  6EF7               	movwf	tblptrh,c
  8969  002A18                     	if	0	;There are less than 3 active tblptr bytes
  8970  002A18                     	endif
  8971  002A18  0008               	tblrd		*
  8972  002A1A  CFF5 F0EA          	movff	tablat,lcd_disp_get_code@ret
  8973  002A1E                     l8300:
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;lcd.c: 470: }
  8977                           ;lcd.c: 471: return ret;
  8978  002A1E  0100               	movlb	0	; () banked
  8979  002A20  51EA               	movf	lcd_disp_get_code@ret& (0+255),w,b
  8980  002A22  0012               	return	
  8981  002A24                     __end_of_lcd_disp_get_code:
  8982                           	opt stack 0
  8983                           tblptru	equ	0xFF8
  8984                           tblptrh	equ	0xFF7
  8985                           tblptrl	equ	0xFF6
  8986                           tablat	equ	0xFF5
  8987                           prodh	equ	0xFF4
  8988                           prodl	equ	0xFF3
  8989                           intcon	equ	0xFF2
  8990                           indf0	equ	0xFEF
  8991                           postinc0	equ	0xFEE
  8992                           fsr0h	equ	0xFEA
  8993                           fsr0l	equ	0xFE9
  8994                           wreg	equ	0xFE8
  8995                           postdec1	equ	0xFE5
  8996                           plusw1	equ	0xFE3
  8997                           fsr1h	equ	0xFE2
  8998                           fsr1l	equ	0xFE1
  8999                           indf2	equ	0xFDF
  9000                           postinc2	equ	0xFDE
  9001                           postdec2	equ	0xFDD
  9002                           plusw2	equ	0xFDB
  9003                           fsr2h	equ	0xFDA
  9004                           fsr2l	equ	0xFD9
  9005                           status	equ	0xFD8
  9006                           
  9007 ;; *************** function _lcd_disp_chr_loc_7 *****************
  9008 ;; Defined at:
  9009 ;;		line 353 in file "src/driver/lcd.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  code            1    wreg     unsigned char 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  code            1   13[BANK0 ] unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;Total ram usage:        1 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    6
  9030 ;; This function calls:
  9031 ;;		_lcd_set_com_seg
  9032 ;; This function is called by:
  9033 ;;		_lcd_show_chr
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	text50
  9038  001DA0                     __ptext50:
  9039                           	opt stack 0
  9040  001DA0                     _lcd_disp_chr_loc_7:
  9041                           	opt stack 21
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;incstack = 0
  9045                           ;lcd_disp_chr_loc_7@code stored from wreg
  9046  001DA0  0100               	movlb	0	; () banked
  9047  001DA2  6FF6               	movwf	lcd_disp_chr_loc_7@code& (0+255),b
  9048                           
  9049                           ;lcd.c: 355: lcd_set_com_seg(0,19,code&0x08);
  9050  001DA4  0E13               	movlw	19
  9051  001DA6  0100               	movlb	0	; () banked
  9052  001DA8  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9053  001DAA  0100               	movlb	0	; () banked
  9054  001DAC  51F6               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  9055  001DAE  0B08               	andlw	8
  9056  001DB0  0100               	movlb	0	; () banked
  9057  001DB2  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9058  001DB4  0E00               	movlw	0
  9059  001DB6  EC94  F00B         	call	_lcd_set_com_seg
  9060                           
  9061                           ;lcd.c: 356: lcd_set_com_seg(1,19,code&0x10);
  9062  001DBA  0E13               	movlw	19
  9063  001DBC  0100               	movlb	0	; () banked
  9064  001DBE  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9065  001DC0  0100               	movlb	0	; () banked
  9066  001DC2  51F6               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  9067  001DC4  0B10               	andlw	16
  9068  001DC6  0100               	movlb	0	; () banked
  9069  001DC8  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9070  001DCA  0E01               	movlw	1
  9071  001DCC  EC94  F00B         	call	_lcd_set_com_seg
  9072                           
  9073                           ;lcd.c: 357: lcd_set_com_seg(2,19,code&0x20);
  9074  001DD0  0E13               	movlw	19
  9075  001DD2  0100               	movlb	0	; () banked
  9076  001DD4  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9077  001DD6  0100               	movlb	0	; () banked
  9078  001DD8  51F6               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  9079  001DDA  0B20               	andlw	32
  9080  001DDC  0100               	movlb	0	; () banked
  9081  001DDE  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9082  001DE0  0E02               	movlw	2
  9083  001DE2  EC94  F00B         	call	_lcd_set_com_seg
  9084                           
  9085                           ;lcd.c: 358: lcd_set_com_seg(3,19,code&0x01);
  9086  001DE6  0E13               	movlw	19
  9087  001DE8  0100               	movlb	0	; () banked
  9088  001DEA  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9089  001DEC  0100               	movlb	0	; () banked
  9090  001DEE  51F6               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  9091  001DF0  0B01               	andlw	1
  9092  001DF2  0100               	movlb	0	; () banked
  9093  001DF4  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9094  001DF6  0E03               	movlw	3
  9095  001DF8  EC94  F00B         	call	_lcd_set_com_seg
  9096                           
  9097                           ;lcd.c: 360: lcd_set_com_seg(1,40,code&0x04);
  9098  001DFC  0E28               	movlw	40
  9099  001DFE  0100               	movlb	0	; () banked
  9100  001E00  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9101  001E02  0100               	movlb	0	; () banked
  9102  001E04  51F6               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  9103  001E06  0B04               	andlw	4
  9104  001E08  0100               	movlb	0	; () banked
  9105  001E0A  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9106  001E0C  0E01               	movlw	1
  9107  001E0E  EC94  F00B         	call	_lcd_set_com_seg
  9108                           
  9109                           ;lcd.c: 361: lcd_set_com_seg(2,40,code&0x40);
  9110  001E12  0E28               	movlw	40
  9111  001E14  0100               	movlb	0	; () banked
  9112  001E16  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9113  001E18  0100               	movlb	0	; () banked
  9114  001E1A  51F6               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  9115  001E1C  0B40               	andlw	64
  9116  001E1E  0100               	movlb	0	; () banked
  9117  001E20  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9118  001E22  0E02               	movlw	2
  9119  001E24  EC94  F00B         	call	_lcd_set_com_seg
  9120                           
  9121                           ;lcd.c: 362: lcd_set_com_seg(3,40,code&0x02);
  9122  001E28  0E28               	movlw	40
  9123  001E2A  0100               	movlb	0	; () banked
  9124  001E2C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9125  001E2E  0100               	movlb	0	; () banked
  9126  001E30  51F6               	movf	lcd_disp_chr_loc_7@code& (0+255),w,b
  9127  001E32  0B02               	andlw	2
  9128  001E34  0100               	movlb	0	; () banked
  9129  001E36  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9130  001E38  0E03               	movlw	3
  9131  001E3A  EC94  F00B         	call	_lcd_set_com_seg
  9132  001E3E  0012               	return		;funcret
  9133  001E40                     __end_of_lcd_disp_chr_loc_7:
  9134                           	opt stack 0
  9135                           tblptru	equ	0xFF8
  9136                           tblptrh	equ	0xFF7
  9137                           tblptrl	equ	0xFF6
  9138                           tablat	equ	0xFF5
  9139                           prodh	equ	0xFF4
  9140                           prodl	equ	0xFF3
  9141                           intcon	equ	0xFF2
  9142                           indf0	equ	0xFEF
  9143                           postinc0	equ	0xFEE
  9144                           fsr0h	equ	0xFEA
  9145                           fsr0l	equ	0xFE9
  9146                           wreg	equ	0xFE8
  9147                           postdec1	equ	0xFE5
  9148                           plusw1	equ	0xFE3
  9149                           fsr1h	equ	0xFE2
  9150                           fsr1l	equ	0xFE1
  9151                           indf2	equ	0xFDF
  9152                           postinc2	equ	0xFDE
  9153                           postdec2	equ	0xFDD
  9154                           plusw2	equ	0xFDB
  9155                           fsr2h	equ	0xFDA
  9156                           fsr2l	equ	0xFD9
  9157                           status	equ	0xFD8
  9158                           
  9159 ;; *************** function _lcd_disp_chr_loc_6 *****************
  9160 ;; Defined at:
  9161 ;;		line 334 in file "src/driver/lcd.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  code            1    wreg     unsigned char 
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;  code            1   13[BANK0 ] unsigned char 
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      void 
  9168 ;; Registers used:
  9169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;Total ram usage:        1 bytes
  9180 ;; Hardware stack levels used:    1
  9181 ;; Hardware stack levels required when called:    6
  9182 ;; This function calls:
  9183 ;;		_lcd_set_com_seg
  9184 ;; This function is called by:
  9185 ;;		_lcd_show_chr
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text51
  9190  001E40                     __ptext51:
  9191                           	opt stack 0
  9192  001E40                     _lcd_disp_chr_loc_6:
  9193                           	opt stack 21
  9194                           
  9195                           ;incstack = 0
  9196                           ;lcd_disp_chr_loc_6@code stored from wreg
  9197  001E40  0100               	movlb	0	; () banked
  9198  001E42  6FF6               	movwf	lcd_disp_chr_loc_6@code& (0+255),b
  9199                           
  9200                           ;lcd.c: 336: lcd_set_com_seg(0,14,code&0x08);
  9201  001E44  0E0E               	movlw	14
  9202  001E46  0100               	movlb	0	; () banked
  9203  001E48  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9204  001E4A  0100               	movlb	0	; () banked
  9205  001E4C  51F6               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  9206  001E4E  0B08               	andlw	8
  9207  001E50  0100               	movlb	0	; () banked
  9208  001E52  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9209  001E54  0E00               	movlw	0
  9210  001E56  EC94  F00B         	call	_lcd_set_com_seg
  9211                           
  9212                           ;lcd.c: 337: lcd_set_com_seg(1,14,code&0x10);
  9213  001E5A  0E0E               	movlw	14
  9214  001E5C  0100               	movlb	0	; () banked
  9215  001E5E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9216  001E60  0100               	movlb	0	; () banked
  9217  001E62  51F6               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  9218  001E64  0B10               	andlw	16
  9219  001E66  0100               	movlb	0	; () banked
  9220  001E68  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9221  001E6A  0E01               	movlw	1
  9222  001E6C  EC94  F00B         	call	_lcd_set_com_seg
  9223                           
  9224                           ;lcd.c: 338: lcd_set_com_seg(2,14,code&0x20);
  9225  001E70  0E0E               	movlw	14
  9226  001E72  0100               	movlb	0	; () banked
  9227  001E74  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9228  001E76  0100               	movlb	0	; () banked
  9229  001E78  51F6               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  9230  001E7A  0B20               	andlw	32
  9231  001E7C  0100               	movlb	0	; () banked
  9232  001E7E  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9233  001E80  0E02               	movlw	2
  9234  001E82  EC94  F00B         	call	_lcd_set_com_seg
  9235                           
  9236                           ;lcd.c: 339: lcd_set_com_seg(3,14,code&0x01);
  9237  001E86  0E0E               	movlw	14
  9238  001E88  0100               	movlb	0	; () banked
  9239  001E8A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9240  001E8C  0100               	movlb	0	; () banked
  9241  001E8E  51F6               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  9242  001E90  0B01               	andlw	1
  9243  001E92  0100               	movlb	0	; () banked
  9244  001E94  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9245  001E96  0E03               	movlw	3
  9246  001E98  EC94  F00B         	call	_lcd_set_com_seg
  9247                           
  9248                           ;lcd.c: 341: lcd_set_com_seg(1,15,code&0x04);
  9249  001E9C  0E0F               	movlw	15
  9250  001E9E  0100               	movlb	0	; () banked
  9251  001EA0  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9252  001EA2  0100               	movlb	0	; () banked
  9253  001EA4  51F6               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  9254  001EA6  0B04               	andlw	4
  9255  001EA8  0100               	movlb	0	; () banked
  9256  001EAA  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9257  001EAC  0E01               	movlw	1
  9258  001EAE  EC94  F00B         	call	_lcd_set_com_seg
  9259                           
  9260                           ;lcd.c: 342: lcd_set_com_seg(2,15,code&0x40);
  9261  001EB2  0E0F               	movlw	15
  9262  001EB4  0100               	movlb	0	; () banked
  9263  001EB6  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9264  001EB8  0100               	movlb	0	; () banked
  9265  001EBA  51F6               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  9266  001EBC  0B40               	andlw	64
  9267  001EBE  0100               	movlb	0	; () banked
  9268  001EC0  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9269  001EC2  0E02               	movlw	2
  9270  001EC4  EC94  F00B         	call	_lcd_set_com_seg
  9271                           
  9272                           ;lcd.c: 343: lcd_set_com_seg(3,15,code&0x02);
  9273  001EC8  0E0F               	movlw	15
  9274  001ECA  0100               	movlb	0	; () banked
  9275  001ECC  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9276  001ECE  0100               	movlb	0	; () banked
  9277  001ED0  51F6               	movf	lcd_disp_chr_loc_6@code& (0+255),w,b
  9278  001ED2  0B02               	andlw	2
  9279  001ED4  0100               	movlb	0	; () banked
  9280  001ED6  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9281  001ED8  0E03               	movlw	3
  9282  001EDA  EC94  F00B         	call	_lcd_set_com_seg
  9283  001EDE  0012               	return		;funcret
  9284  001EE0                     __end_of_lcd_disp_chr_loc_6:
  9285                           	opt stack 0
  9286                           tblptru	equ	0xFF8
  9287                           tblptrh	equ	0xFF7
  9288                           tblptrl	equ	0xFF6
  9289                           tablat	equ	0xFF5
  9290                           prodh	equ	0xFF4
  9291                           prodl	equ	0xFF3
  9292                           intcon	equ	0xFF2
  9293                           indf0	equ	0xFEF
  9294                           postinc0	equ	0xFEE
  9295                           fsr0h	equ	0xFEA
  9296                           fsr0l	equ	0xFE9
  9297                           wreg	equ	0xFE8
  9298                           postdec1	equ	0xFE5
  9299                           plusw1	equ	0xFE3
  9300                           fsr1h	equ	0xFE2
  9301                           fsr1l	equ	0xFE1
  9302                           indf2	equ	0xFDF
  9303                           postinc2	equ	0xFDE
  9304                           postdec2	equ	0xFDD
  9305                           plusw2	equ	0xFDB
  9306                           fsr2h	equ	0xFDA
  9307                           fsr2l	equ	0xFD9
  9308                           status	equ	0xFD8
  9309                           
  9310 ;; *************** function _lcd_disp_chr_loc_5 *****************
  9311 ;; Defined at:
  9312 ;;		line 315 in file "src/driver/lcd.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  code            1    wreg     unsigned char 
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  code            1   13[BANK0 ] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;Total ram usage:        1 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:    6
  9333 ;; This function calls:
  9334 ;;		_lcd_set_com_seg
  9335 ;; This function is called by:
  9336 ;;		_lcd_show_chr
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text52
  9341  001EE0                     __ptext52:
  9342                           	opt stack 0
  9343  001EE0                     _lcd_disp_chr_loc_5:
  9344                           	opt stack 21
  9345                           
  9346                           ;incstack = 0
  9347                           ;lcd_disp_chr_loc_5@code stored from wreg
  9348  001EE0  0100               	movlb	0	; () banked
  9349  001EE2  6FF6               	movwf	lcd_disp_chr_loc_5@code& (0+255),b
  9350                           
  9351                           ;lcd.c: 317: lcd_set_com_seg(0,38,code&0x08);
  9352  001EE4  0E26               	movlw	38
  9353  001EE6  0100               	movlb	0	; () banked
  9354  001EE8  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9355  001EEA  0100               	movlb	0	; () banked
  9356  001EEC  51F6               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  9357  001EEE  0B08               	andlw	8
  9358  001EF0  0100               	movlb	0	; () banked
  9359  001EF2  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9360  001EF4  0E00               	movlw	0
  9361  001EF6  EC94  F00B         	call	_lcd_set_com_seg
  9362                           
  9363                           ;lcd.c: 318: lcd_set_com_seg(1,38,code&0x10);
  9364  001EFA  0E26               	movlw	38
  9365  001EFC  0100               	movlb	0	; () banked
  9366  001EFE  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9367  001F00  0100               	movlb	0	; () banked
  9368  001F02  51F6               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  9369  001F04  0B10               	andlw	16
  9370  001F06  0100               	movlb	0	; () banked
  9371  001F08  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9372  001F0A  0E01               	movlw	1
  9373  001F0C  EC94  F00B         	call	_lcd_set_com_seg
  9374                           
  9375                           ;lcd.c: 319: lcd_set_com_seg(2,38,code&0x20);
  9376  001F10  0E26               	movlw	38
  9377  001F12  0100               	movlb	0	; () banked
  9378  001F14  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9379  001F16  0100               	movlb	0	; () banked
  9380  001F18  51F6               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  9381  001F1A  0B20               	andlw	32
  9382  001F1C  0100               	movlb	0	; () banked
  9383  001F1E  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9384  001F20  0E02               	movlw	2
  9385  001F22  EC94  F00B         	call	_lcd_set_com_seg
  9386                           
  9387                           ;lcd.c: 320: lcd_set_com_seg(3,38,code&0x01);
  9388  001F26  0E26               	movlw	38
  9389  001F28  0100               	movlb	0	; () banked
  9390  001F2A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9391  001F2C  0100               	movlb	0	; () banked
  9392  001F2E  51F6               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  9393  001F30  0B01               	andlw	1
  9394  001F32  0100               	movlb	0	; () banked
  9395  001F34  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9396  001F36  0E03               	movlw	3
  9397  001F38  EC94  F00B         	call	_lcd_set_com_seg
  9398                           
  9399                           ;lcd.c: 322: lcd_set_com_seg(1,39,code&0x04);
  9400  001F3C  0E27               	movlw	39
  9401  001F3E  0100               	movlb	0	; () banked
  9402  001F40  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9403  001F42  0100               	movlb	0	; () banked
  9404  001F44  51F6               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  9405  001F46  0B04               	andlw	4
  9406  001F48  0100               	movlb	0	; () banked
  9407  001F4A  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9408  001F4C  0E01               	movlw	1
  9409  001F4E  EC94  F00B         	call	_lcd_set_com_seg
  9410                           
  9411                           ;lcd.c: 323: lcd_set_com_seg(2,39,code&0x40);
  9412  001F52  0E27               	movlw	39
  9413  001F54  0100               	movlb	0	; () banked
  9414  001F56  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9415  001F58  0100               	movlb	0	; () banked
  9416  001F5A  51F6               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  9417  001F5C  0B40               	andlw	64
  9418  001F5E  0100               	movlb	0	; () banked
  9419  001F60  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9420  001F62  0E02               	movlw	2
  9421  001F64  EC94  F00B         	call	_lcd_set_com_seg
  9422                           
  9423                           ;lcd.c: 324: lcd_set_com_seg(3,39,code&0x02);
  9424  001F68  0E27               	movlw	39
  9425  001F6A  0100               	movlb	0	; () banked
  9426  001F6C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9427  001F6E  0100               	movlb	0	; () banked
  9428  001F70  51F6               	movf	lcd_disp_chr_loc_5@code& (0+255),w,b
  9429  001F72  0B02               	andlw	2
  9430  001F74  0100               	movlb	0	; () banked
  9431  001F76  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9432  001F78  0E03               	movlw	3
  9433  001F7A  EC94  F00B         	call	_lcd_set_com_seg
  9434  001F7E  0012               	return		;funcret
  9435  001F80                     __end_of_lcd_disp_chr_loc_5:
  9436                           	opt stack 0
  9437                           tblptru	equ	0xFF8
  9438                           tblptrh	equ	0xFF7
  9439                           tblptrl	equ	0xFF6
  9440                           tablat	equ	0xFF5
  9441                           prodh	equ	0xFF4
  9442                           prodl	equ	0xFF3
  9443                           intcon	equ	0xFF2
  9444                           indf0	equ	0xFEF
  9445                           postinc0	equ	0xFEE
  9446                           fsr0h	equ	0xFEA
  9447                           fsr0l	equ	0xFE9
  9448                           wreg	equ	0xFE8
  9449                           postdec1	equ	0xFE5
  9450                           plusw1	equ	0xFE3
  9451                           fsr1h	equ	0xFE2
  9452                           fsr1l	equ	0xFE1
  9453                           indf2	equ	0xFDF
  9454                           postinc2	equ	0xFDE
  9455                           postdec2	equ	0xFDD
  9456                           plusw2	equ	0xFDB
  9457                           fsr2h	equ	0xFDA
  9458                           fsr2l	equ	0xFD9
  9459                           status	equ	0xFD8
  9460                           
  9461 ;; *************** function _lcd_disp_chr_loc_4 *****************
  9462 ;; Defined at:
  9463 ;;		line 296 in file "src/driver/lcd.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  code            1    wreg     unsigned char 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;  code            1   13[BANK0 ] unsigned char 
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      void 
  9470 ;; Registers used:
  9471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9480 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;Total ram usage:        1 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    6
  9484 ;; This function calls:
  9485 ;;		_lcd_set_com_seg
  9486 ;; This function is called by:
  9487 ;;		_lcd_show_chr
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text53
  9492  001F80                     __ptext53:
  9493                           	opt stack 0
  9494  001F80                     _lcd_disp_chr_loc_4:
  9495                           	opt stack 21
  9496                           
  9497                           ;incstack = 0
  9498                           ;lcd_disp_chr_loc_4@code stored from wreg
  9499  001F80  0100               	movlb	0	; () banked
  9500  001F82  6FF6               	movwf	lcd_disp_chr_loc_4@code& (0+255),b
  9501                           
  9502                           ;lcd.c: 298: lcd_set_com_seg(0,36,code&0x08);
  9503  001F84  0E24               	movlw	36
  9504  001F86  0100               	movlb	0	; () banked
  9505  001F88  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9506  001F8A  0100               	movlb	0	; () banked
  9507  001F8C  51F6               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  9508  001F8E  0B08               	andlw	8
  9509  001F90  0100               	movlb	0	; () banked
  9510  001F92  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9511  001F94  0E00               	movlw	0
  9512  001F96  EC94  F00B         	call	_lcd_set_com_seg
  9513                           
  9514                           ;lcd.c: 299: lcd_set_com_seg(1,36,code&0x10);
  9515  001F9A  0E24               	movlw	36
  9516  001F9C  0100               	movlb	0	; () banked
  9517  001F9E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9518  001FA0  0100               	movlb	0	; () banked
  9519  001FA2  51F6               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  9520  001FA4  0B10               	andlw	16
  9521  001FA6  0100               	movlb	0	; () banked
  9522  001FA8  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9523  001FAA  0E01               	movlw	1
  9524  001FAC  EC94  F00B         	call	_lcd_set_com_seg
  9525                           
  9526                           ;lcd.c: 300: lcd_set_com_seg(2,36,code&0x20);
  9527  001FB0  0E24               	movlw	36
  9528  001FB2  0100               	movlb	0	; () banked
  9529  001FB4  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9530  001FB6  0100               	movlb	0	; () banked
  9531  001FB8  51F6               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  9532  001FBA  0B20               	andlw	32
  9533  001FBC  0100               	movlb	0	; () banked
  9534  001FBE  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9535  001FC0  0E02               	movlw	2
  9536  001FC2  EC94  F00B         	call	_lcd_set_com_seg
  9537                           
  9538                           ;lcd.c: 301: lcd_set_com_seg(3,36,code&0x01);
  9539  001FC6  0E24               	movlw	36
  9540  001FC8  0100               	movlb	0	; () banked
  9541  001FCA  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9542  001FCC  0100               	movlb	0	; () banked
  9543  001FCE  51F6               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  9544  001FD0  0B01               	andlw	1
  9545  001FD2  0100               	movlb	0	; () banked
  9546  001FD4  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9547  001FD6  0E03               	movlw	3
  9548  001FD8  EC94  F00B         	call	_lcd_set_com_seg
  9549                           
  9550                           ;lcd.c: 303: lcd_set_com_seg(1,37,code&0x04);
  9551  001FDC  0E25               	movlw	37
  9552  001FDE  0100               	movlb	0	; () banked
  9553  001FE0  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9554  001FE2  0100               	movlb	0	; () banked
  9555  001FE4  51F6               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  9556  001FE6  0B04               	andlw	4
  9557  001FE8  0100               	movlb	0	; () banked
  9558  001FEA  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9559  001FEC  0E01               	movlw	1
  9560  001FEE  EC94  F00B         	call	_lcd_set_com_seg
  9561                           
  9562                           ;lcd.c: 304: lcd_set_com_seg(2,37,code&0x40);
  9563  001FF2  0E25               	movlw	37
  9564  001FF4  0100               	movlb	0	; () banked
  9565  001FF6  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9566  001FF8  0100               	movlb	0	; () banked
  9567  001FFA  51F6               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  9568  001FFC  0B40               	andlw	64
  9569  001FFE  0100               	movlb	0	; () banked
  9570  002000  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9571  002002  0E02               	movlw	2
  9572  002004  EC94  F00B         	call	_lcd_set_com_seg
  9573                           
  9574                           ;lcd.c: 305: lcd_set_com_seg(3,37,code&0x02);
  9575  002008  0E25               	movlw	37
  9576  00200A  0100               	movlb	0	; () banked
  9577  00200C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9578  00200E  0100               	movlb	0	; () banked
  9579  002010  51F6               	movf	lcd_disp_chr_loc_4@code& (0+255),w,b
  9580  002012  0B02               	andlw	2
  9581  002014  0100               	movlb	0	; () banked
  9582  002016  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9583  002018  0E03               	movlw	3
  9584  00201A  EC94  F00B         	call	_lcd_set_com_seg
  9585  00201E  0012               	return		;funcret
  9586  002020                     __end_of_lcd_disp_chr_loc_4:
  9587                           	opt stack 0
  9588                           tblptru	equ	0xFF8
  9589                           tblptrh	equ	0xFF7
  9590                           tblptrl	equ	0xFF6
  9591                           tablat	equ	0xFF5
  9592                           prodh	equ	0xFF4
  9593                           prodl	equ	0xFF3
  9594                           intcon	equ	0xFF2
  9595                           indf0	equ	0xFEF
  9596                           postinc0	equ	0xFEE
  9597                           fsr0h	equ	0xFEA
  9598                           fsr0l	equ	0xFE9
  9599                           wreg	equ	0xFE8
  9600                           postdec1	equ	0xFE5
  9601                           plusw1	equ	0xFE3
  9602                           fsr1h	equ	0xFE2
  9603                           fsr1l	equ	0xFE1
  9604                           indf2	equ	0xFDF
  9605                           postinc2	equ	0xFDE
  9606                           postdec2	equ	0xFDD
  9607                           plusw2	equ	0xFDB
  9608                           fsr2h	equ	0xFDA
  9609                           fsr2l	equ	0xFD9
  9610                           status	equ	0xFD8
  9611                           
  9612 ;; *************** function _lcd_disp_chr_loc_3 *****************
  9613 ;; Defined at:
  9614 ;;		line 284 in file "src/driver/lcd.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  code            1    wreg     unsigned char 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  code            1   13[BANK0 ] unsigned char 
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9631 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9632 ;;Total ram usage:        1 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; Hardware stack levels required when called:    6
  9635 ;; This function calls:
  9636 ;;		_lcd_set_com_seg
  9637 ;; This function is called by:
  9638 ;;		_lcd_show_chr
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text54
  9643  002020                     __ptext54:
  9644                           	opt stack 0
  9645  002020                     _lcd_disp_chr_loc_3:
  9646                           	opt stack 21
  9647                           
  9648                           ;incstack = 0
  9649                           ;lcd_disp_chr_loc_3@code stored from wreg
  9650  002020  0100               	movlb	0	; () banked
  9651  002022  6FF6               	movwf	lcd_disp_chr_loc_3@code& (0+255),b
  9652                           
  9653                           ;lcd.c: 286: lcd_set_com_seg(0,43,code&0x01);
  9654  002024  0E2B               	movlw	43
  9655  002026  0100               	movlb	0	; () banked
  9656  002028  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9657  00202A  0100               	movlb	0	; () banked
  9658  00202C  51F6               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  9659  00202E  0B01               	andlw	1
  9660  002030  0100               	movlb	0	; () banked
  9661  002032  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9662  002034  0E00               	movlw	0
  9663  002036  EC94  F00B         	call	_lcd_set_com_seg
  9664                           
  9665                           ;lcd.c: 287: lcd_set_com_seg(1,43,code&0x20);
  9666  00203A  0E2B               	movlw	43
  9667  00203C  0100               	movlb	0	; () banked
  9668  00203E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9669  002040  0100               	movlb	0	; () banked
  9670  002042  51F6               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  9671  002044  0B20               	andlw	32
  9672  002046  0100               	movlb	0	; () banked
  9673  002048  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9674  00204A  0E01               	movlw	1
  9675  00204C  EC94  F00B         	call	_lcd_set_com_seg
  9676                           
  9677                           ;lcd.c: 288: lcd_set_com_seg(2,43,code&0x10);
  9678  002050  0E2B               	movlw	43
  9679  002052  0100               	movlb	0	; () banked
  9680  002054  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9681  002056  0100               	movlb	0	; () banked
  9682  002058  51F6               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  9683  00205A  0B10               	andlw	16
  9684  00205C  0100               	movlb	0	; () banked
  9685  00205E  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9686  002060  0E02               	movlw	2
  9687  002062  EC94  F00B         	call	_lcd_set_com_seg
  9688                           
  9689                           ;lcd.c: 289: lcd_set_com_seg(3,43,code&0x08);
  9690  002066  0E2B               	movlw	43
  9691  002068  0100               	movlb	0	; () banked
  9692  00206A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9693  00206C  0100               	movlb	0	; () banked
  9694  00206E  51F6               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  9695  002070  0B08               	andlw	8
  9696  002072  0100               	movlb	0	; () banked
  9697  002074  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9698  002076  0E03               	movlw	3
  9699  002078  EC94  F00B         	call	_lcd_set_com_seg
  9700                           
  9701                           ;lcd.c: 291: lcd_set_com_seg(0,42,code&0x02);
  9702  00207C  0E2A               	movlw	42
  9703  00207E  0100               	movlb	0	; () banked
  9704  002080  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9705  002082  0100               	movlb	0	; () banked
  9706  002084  51F6               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  9707  002086  0B02               	andlw	2
  9708  002088  0100               	movlb	0	; () banked
  9709  00208A  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9710  00208C  0E00               	movlw	0
  9711  00208E  EC94  F00B         	call	_lcd_set_com_seg
  9712                           
  9713                           ;lcd.c: 292: lcd_set_com_seg(1,42,code&0x40);
  9714  002092  0E2A               	movlw	42
  9715  002094  0100               	movlb	0	; () banked
  9716  002096  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9717  002098  0100               	movlb	0	; () banked
  9718  00209A  51F6               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  9719  00209C  0B40               	andlw	64
  9720  00209E  0100               	movlb	0	; () banked
  9721  0020A0  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9722  0020A2  0E01               	movlw	1
  9723  0020A4  EC94  F00B         	call	_lcd_set_com_seg
  9724                           
  9725                           ;lcd.c: 293: lcd_set_com_seg(2,42,code&0x04);
  9726  0020A8  0E2A               	movlw	42
  9727  0020AA  0100               	movlb	0	; () banked
  9728  0020AC  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9729  0020AE  0100               	movlb	0	; () banked
  9730  0020B0  51F6               	movf	lcd_disp_chr_loc_3@code& (0+255),w,b
  9731  0020B2  0B04               	andlw	4
  9732  0020B4  0100               	movlb	0	; () banked
  9733  0020B6  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9734  0020B8  0E02               	movlw	2
  9735  0020BA  EC94  F00B         	call	_lcd_set_com_seg
  9736  0020BE  0012               	return		;funcret
  9737  0020C0                     __end_of_lcd_disp_chr_loc_3:
  9738                           	opt stack 0
  9739                           tblptru	equ	0xFF8
  9740                           tblptrh	equ	0xFF7
  9741                           tblptrl	equ	0xFF6
  9742                           tablat	equ	0xFF5
  9743                           prodh	equ	0xFF4
  9744                           prodl	equ	0xFF3
  9745                           intcon	equ	0xFF2
  9746                           indf0	equ	0xFEF
  9747                           postinc0	equ	0xFEE
  9748                           fsr0h	equ	0xFEA
  9749                           fsr0l	equ	0xFE9
  9750                           wreg	equ	0xFE8
  9751                           postdec1	equ	0xFE5
  9752                           plusw1	equ	0xFE3
  9753                           fsr1h	equ	0xFE2
  9754                           fsr1l	equ	0xFE1
  9755                           indf2	equ	0xFDF
  9756                           postinc2	equ	0xFDE
  9757                           postdec2	equ	0xFDD
  9758                           plusw2	equ	0xFDB
  9759                           fsr2h	equ	0xFDA
  9760                           fsr2l	equ	0xFD9
  9761                           status	equ	0xFD8
  9762                           
  9763 ;; *************** function _lcd_disp_chr_loc_2 *****************
  9764 ;; Defined at:
  9765 ;;		line 265 in file "src/driver/lcd.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  code            1    wreg     unsigned char 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;  code            1   13[BANK0 ] unsigned char 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;Total ram usage:        1 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    6
  9786 ;; This function calls:
  9787 ;;		_lcd_set_com_seg
  9788 ;; This function is called by:
  9789 ;;		_lcd_show_chr
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text55
  9794  0020C0                     __ptext55:
  9795                           	opt stack 0
  9796  0020C0                     _lcd_disp_chr_loc_2:
  9797                           	opt stack 21
  9798                           
  9799                           ;incstack = 0
  9800                           ;lcd_disp_chr_loc_2@code stored from wreg
  9801  0020C0  0100               	movlb	0	; () banked
  9802  0020C2  6FF6               	movwf	lcd_disp_chr_loc_2@code& (0+255),b
  9803                           
  9804                           ;lcd.c: 267: lcd_set_com_seg(0,21,code&0x01);
  9805  0020C4  0E15               	movlw	21
  9806  0020C6  0100               	movlb	0	; () banked
  9807  0020C8  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9808  0020CA  0100               	movlb	0	; () banked
  9809  0020CC  51F6               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  9810  0020CE  0B01               	andlw	1
  9811  0020D0  0100               	movlb	0	; () banked
  9812  0020D2  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9813  0020D4  0E00               	movlw	0
  9814  0020D6  EC94  F00B         	call	_lcd_set_com_seg
  9815                           
  9816                           ;lcd.c: 268: lcd_set_com_seg(1,21,code&0x20);
  9817  0020DA  0E15               	movlw	21
  9818  0020DC  0100               	movlb	0	; () banked
  9819  0020DE  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9820  0020E0  0100               	movlb	0	; () banked
  9821  0020E2  51F6               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  9822  0020E4  0B20               	andlw	32
  9823  0020E6  0100               	movlb	0	; () banked
  9824  0020E8  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9825  0020EA  0E01               	movlw	1
  9826  0020EC  EC94  F00B         	call	_lcd_set_com_seg
  9827                           
  9828                           ;lcd.c: 269: lcd_set_com_seg(2,21,code&0x10);
  9829  0020F0  0E15               	movlw	21
  9830  0020F2  0100               	movlb	0	; () banked
  9831  0020F4  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9832  0020F6  0100               	movlb	0	; () banked
  9833  0020F8  51F6               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  9834  0020FA  0B10               	andlw	16
  9835  0020FC  0100               	movlb	0	; () banked
  9836  0020FE  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9837  002100  0E02               	movlw	2
  9838  002102  EC94  F00B         	call	_lcd_set_com_seg
  9839                           
  9840                           ;lcd.c: 270: lcd_set_com_seg(3,21,code&0x08);
  9841  002106  0E15               	movlw	21
  9842  002108  0100               	movlb	0	; () banked
  9843  00210A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9844  00210C  0100               	movlb	0	; () banked
  9845  00210E  51F6               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  9846  002110  0B08               	andlw	8
  9847  002112  0100               	movlb	0	; () banked
  9848  002114  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9849  002116  0E03               	movlw	3
  9850  002118  EC94  F00B         	call	_lcd_set_com_seg
  9851                           
  9852                           ;lcd.c: 272: lcd_set_com_seg(0,20,code&0x02);
  9853  00211C  0E14               	movlw	20
  9854  00211E  0100               	movlb	0	; () banked
  9855  002120  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9856  002122  0100               	movlb	0	; () banked
  9857  002124  51F6               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  9858  002126  0B02               	andlw	2
  9859  002128  0100               	movlb	0	; () banked
  9860  00212A  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9861  00212C  0E00               	movlw	0
  9862  00212E  EC94  F00B         	call	_lcd_set_com_seg
  9863                           
  9864                           ;lcd.c: 273: lcd_set_com_seg(1,20,code&0x40);
  9865  002132  0E14               	movlw	20
  9866  002134  0100               	movlb	0	; () banked
  9867  002136  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9868  002138  0100               	movlb	0	; () banked
  9869  00213A  51F6               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  9870  00213C  0B40               	andlw	64
  9871  00213E  0100               	movlb	0	; () banked
  9872  002140  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9873  002142  0E01               	movlw	1
  9874  002144  EC94  F00B         	call	_lcd_set_com_seg
  9875                           
  9876                           ;lcd.c: 274: lcd_set_com_seg(2,20,code&0x04);
  9877  002148  0E14               	movlw	20
  9878  00214A  0100               	movlb	0	; () banked
  9879  00214C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9880  00214E  0100               	movlb	0	; () banked
  9881  002150  51F6               	movf	lcd_disp_chr_loc_2@code& (0+255),w,b
  9882  002152  0B04               	andlw	4
  9883  002154  0100               	movlb	0	; () banked
  9884  002156  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9885  002158  0E02               	movlw	2
  9886  00215A  EC94  F00B         	call	_lcd_set_com_seg
  9887  00215E  0012               	return		;funcret
  9888  002160                     __end_of_lcd_disp_chr_loc_2:
  9889                           	opt stack 0
  9890                           tblptru	equ	0xFF8
  9891                           tblptrh	equ	0xFF7
  9892                           tblptrl	equ	0xFF6
  9893                           tablat	equ	0xFF5
  9894                           prodh	equ	0xFF4
  9895                           prodl	equ	0xFF3
  9896                           intcon	equ	0xFF2
  9897                           indf0	equ	0xFEF
  9898                           postinc0	equ	0xFEE
  9899                           fsr0h	equ	0xFEA
  9900                           fsr0l	equ	0xFE9
  9901                           wreg	equ	0xFE8
  9902                           postdec1	equ	0xFE5
  9903                           plusw1	equ	0xFE3
  9904                           fsr1h	equ	0xFE2
  9905                           fsr1l	equ	0xFE1
  9906                           indf2	equ	0xFDF
  9907                           postinc2	equ	0xFDE
  9908                           postdec2	equ	0xFDD
  9909                           plusw2	equ	0xFDB
  9910                           fsr2h	equ	0xFDA
  9911                           fsr2l	equ	0xFD9
  9912                           status	equ	0xFD8
  9913                           
  9914 ;; *************** function _lcd_disp_chr_loc_1 *****************
  9915 ;; Defined at:
  9916 ;;		line 246 in file "src/driver/lcd.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  code            1    wreg     unsigned char 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;  code            1   13[BANK0 ] unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;Total ram usage:        1 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    6
  9937 ;; This function calls:
  9938 ;;		_lcd_set_com_seg
  9939 ;; This function is called by:
  9940 ;;		_lcd_show_chr
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text56
  9945  002160                     __ptext56:
  9946                           	opt stack 0
  9947  002160                     _lcd_disp_chr_loc_1:
  9948                           	opt stack 21
  9949                           
  9950                           ;incstack = 0
  9951                           ;lcd_disp_chr_loc_1@code stored from wreg
  9952  002160  0100               	movlb	0	; () banked
  9953  002162  6FF6               	movwf	lcd_disp_chr_loc_1@code& (0+255),b
  9954                           
  9955                           ;lcd.c: 248: lcd_set_com_seg(0,23,code&0x01);
  9956  002164  0E17               	movlw	23
  9957  002166  0100               	movlb	0	; () banked
  9958  002168  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9959  00216A  0100               	movlb	0	; () banked
  9960  00216C  51F6               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  9961  00216E  0B01               	andlw	1
  9962  002170  0100               	movlb	0	; () banked
  9963  002172  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9964  002174  0E00               	movlw	0
  9965  002176  EC94  F00B         	call	_lcd_set_com_seg
  9966                           
  9967                           ;lcd.c: 249: lcd_set_com_seg(1,23,code&0x20);
  9968  00217A  0E17               	movlw	23
  9969  00217C  0100               	movlb	0	; () banked
  9970  00217E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9971  002180  0100               	movlb	0	; () banked
  9972  002182  51F6               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  9973  002184  0B20               	andlw	32
  9974  002186  0100               	movlb	0	; () banked
  9975  002188  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9976  00218A  0E01               	movlw	1
  9977  00218C  EC94  F00B         	call	_lcd_set_com_seg
  9978                           
  9979                           ;lcd.c: 250: lcd_set_com_seg(2,23,code&0x10);
  9980  002190  0E17               	movlw	23
  9981  002192  0100               	movlb	0	; () banked
  9982  002194  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9983  002196  0100               	movlb	0	; () banked
  9984  002198  51F6               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  9985  00219A  0B10               	andlw	16
  9986  00219C  0100               	movlb	0	; () banked
  9987  00219E  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
  9988  0021A0  0E02               	movlw	2
  9989  0021A2  EC94  F00B         	call	_lcd_set_com_seg
  9990                           
  9991                           ;lcd.c: 251: lcd_set_com_seg(3,23,code&0x08);
  9992  0021A6  0E17               	movlw	23
  9993  0021A8  0100               	movlb	0	; () banked
  9994  0021AA  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
  9995  0021AC  0100               	movlb	0	; () banked
  9996  0021AE  51F6               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
  9997  0021B0  0B08               	andlw	8
  9998  0021B2  0100               	movlb	0	; () banked
  9999  0021B4  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10000  0021B6  0E03               	movlw	3
 10001  0021B8  EC94  F00B         	call	_lcd_set_com_seg
 10002                           
 10003                           ;lcd.c: 253: lcd_set_com_seg(0,22,code&0x02);
 10004  0021BC  0E16               	movlw	22
 10005  0021BE  0100               	movlb	0	; () banked
 10006  0021C0  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10007  0021C2  0100               	movlb	0	; () banked
 10008  0021C4  51F6               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
 10009  0021C6  0B02               	andlw	2
 10010  0021C8  0100               	movlb	0	; () banked
 10011  0021CA  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10012  0021CC  0E00               	movlw	0
 10013  0021CE  EC94  F00B         	call	_lcd_set_com_seg
 10014                           
 10015                           ;lcd.c: 254: lcd_set_com_seg(1,22,code&0x40);
 10016  0021D2  0E16               	movlw	22
 10017  0021D4  0100               	movlb	0	; () banked
 10018  0021D6  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10019  0021D8  0100               	movlb	0	; () banked
 10020  0021DA  51F6               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
 10021  0021DC  0B40               	andlw	64
 10022  0021DE  0100               	movlb	0	; () banked
 10023  0021E0  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10024  0021E2  0E01               	movlw	1
 10025  0021E4  EC94  F00B         	call	_lcd_set_com_seg
 10026                           
 10027                           ;lcd.c: 255: lcd_set_com_seg(2,22,code&0x04);
 10028  0021E8  0E16               	movlw	22
 10029  0021EA  0100               	movlb	0	; () banked
 10030  0021EC  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10031  0021EE  0100               	movlb	0	; () banked
 10032  0021F0  51F6               	movf	lcd_disp_chr_loc_1@code& (0+255),w,b
 10033  0021F2  0B04               	andlw	4
 10034  0021F4  0100               	movlb	0	; () banked
 10035  0021F6  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10036  0021F8  0E02               	movlw	2
 10037  0021FA  EC94  F00B         	call	_lcd_set_com_seg
 10038  0021FE  0012               	return		;funcret
 10039  002200                     __end_of_lcd_disp_chr_loc_1:
 10040                           	opt stack 0
 10041                           tblptru	equ	0xFF8
 10042                           tblptrh	equ	0xFF7
 10043                           tblptrl	equ	0xFF6
 10044                           tablat	equ	0xFF5
 10045                           prodh	equ	0xFF4
 10046                           prodl	equ	0xFF3
 10047                           intcon	equ	0xFF2
 10048                           indf0	equ	0xFEF
 10049                           postinc0	equ	0xFEE
 10050                           fsr0h	equ	0xFEA
 10051                           fsr0l	equ	0xFE9
 10052                           wreg	equ	0xFE8
 10053                           postdec1	equ	0xFE5
 10054                           plusw1	equ	0xFE3
 10055                           fsr1h	equ	0xFE2
 10056                           fsr1l	equ	0xFE1
 10057                           indf2	equ	0xFDF
 10058                           postinc2	equ	0xFDE
 10059                           postdec2	equ	0xFDD
 10060                           plusw2	equ	0xFDB
 10061                           fsr2h	equ	0xFDA
 10062                           fsr2l	equ	0xFD9
 10063                           status	equ	0xFD8
 10064                           
 10065 ;; *************** function _lcd_disp_chr_loc_0 *****************
 10066 ;; Defined at:
 10067 ;;		line 226 in file "src/driver/lcd.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  code            1    wreg     unsigned char 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;  code            1   13[BANK0 ] unsigned char 
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10085 ;;Total ram usage:        1 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    6
 10088 ;; This function calls:
 10089 ;;		_lcd_set_com_seg
 10090 ;; This function is called by:
 10091 ;;		_lcd_show_chr
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text57
 10096  002200                     __ptext57:
 10097                           	opt stack 0
 10098  002200                     _lcd_disp_chr_loc_0:
 10099                           	opt stack 21
 10100                           
 10101                           ;incstack = 0
 10102                           ;lcd_disp_chr_loc_0@code stored from wreg
 10103  002200  0100               	movlb	0	; () banked
 10104  002202  6FF6               	movwf	lcd_disp_chr_loc_0@code& (0+255),b
 10105                           
 10106                           ;lcd.c: 228: lcd_set_com_seg(0,25,code&0x01);
 10107  002204  0E19               	movlw	25
 10108  002206  0100               	movlb	0	; () banked
 10109  002208  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10110  00220A  0100               	movlb	0	; () banked
 10111  00220C  51F6               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
 10112  00220E  0B01               	andlw	1
 10113  002210  0100               	movlb	0	; () banked
 10114  002212  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10115  002214  0E00               	movlw	0
 10116  002216  EC94  F00B         	call	_lcd_set_com_seg
 10117                           
 10118                           ;lcd.c: 229: lcd_set_com_seg(1,25,code&0x20);
 10119  00221A  0E19               	movlw	25
 10120  00221C  0100               	movlb	0	; () banked
 10121  00221E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10122  002220  0100               	movlb	0	; () banked
 10123  002222  51F6               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
 10124  002224  0B20               	andlw	32
 10125  002226  0100               	movlb	0	; () banked
 10126  002228  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10127  00222A  0E01               	movlw	1
 10128  00222C  EC94  F00B         	call	_lcd_set_com_seg
 10129                           
 10130                           ;lcd.c: 230: lcd_set_com_seg(2,25,code&0x10);
 10131  002230  0E19               	movlw	25
 10132  002232  0100               	movlb	0	; () banked
 10133  002234  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10134  002236  0100               	movlb	0	; () banked
 10135  002238  51F6               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
 10136  00223A  0B10               	andlw	16
 10137  00223C  0100               	movlb	0	; () banked
 10138  00223E  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10139  002240  0E02               	movlw	2
 10140  002242  EC94  F00B         	call	_lcd_set_com_seg
 10141                           
 10142                           ;lcd.c: 231: lcd_set_com_seg(3,25,code&0x08);
 10143  002246  0E19               	movlw	25
 10144  002248  0100               	movlb	0	; () banked
 10145  00224A  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10146  00224C  0100               	movlb	0	; () banked
 10147  00224E  51F6               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
 10148  002250  0B08               	andlw	8
 10149  002252  0100               	movlb	0	; () banked
 10150  002254  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10151  002256  0E03               	movlw	3
 10152  002258  EC94  F00B         	call	_lcd_set_com_seg
 10153                           
 10154                           ;lcd.c: 233: lcd_set_com_seg(0,24,code&0x02);
 10155  00225C  0E18               	movlw	24
 10156  00225E  0100               	movlb	0	; () banked
 10157  002260  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10158  002262  0100               	movlb	0	; () banked
 10159  002264  51F6               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
 10160  002266  0B02               	andlw	2
 10161  002268  0100               	movlb	0	; () banked
 10162  00226A  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10163  00226C  0E00               	movlw	0
 10164  00226E  EC94  F00B         	call	_lcd_set_com_seg
 10165                           
 10166                           ;lcd.c: 234: lcd_set_com_seg(1,24,code&0x40);
 10167  002272  0E18               	movlw	24
 10168  002274  0100               	movlb	0	; () banked
 10169  002276  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10170  002278  0100               	movlb	0	; () banked
 10171  00227A  51F6               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
 10172  00227C  0B40               	andlw	64
 10173  00227E  0100               	movlb	0	; () banked
 10174  002280  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10175  002282  0E01               	movlw	1
 10176  002284  EC94  F00B         	call	_lcd_set_com_seg
 10177                           
 10178                           ;lcd.c: 235: lcd_set_com_seg(2,24,code&0x04);
 10179  002288  0E18               	movlw	24
 10180  00228A  0100               	movlb	0	; () banked
 10181  00228C  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10182  00228E  0100               	movlb	0	; () banked
 10183  002290  51F6               	movf	lcd_disp_chr_loc_0@code& (0+255),w,b
 10184  002292  0B04               	andlw	4
 10185  002294  0100               	movlb	0	; () banked
 10186  002296  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10187  002298  0E02               	movlw	2
 10188  00229A  EC94  F00B         	call	_lcd_set_com_seg
 10189  00229E  0012               	return		;funcret
 10190  0022A0                     __end_of_lcd_disp_chr_loc_0:
 10191                           	opt stack 0
 10192                           tblptru	equ	0xFF8
 10193                           tblptrh	equ	0xFF7
 10194                           tblptrl	equ	0xFF6
 10195                           tablat	equ	0xFF5
 10196                           prodh	equ	0xFF4
 10197                           prodl	equ	0xFF3
 10198                           intcon	equ	0xFF2
 10199                           indf0	equ	0xFEF
 10200                           postinc0	equ	0xFEE
 10201                           fsr0h	equ	0xFEA
 10202                           fsr0l	equ	0xFE9
 10203                           wreg	equ	0xFE8
 10204                           postdec1	equ	0xFE5
 10205                           plusw1	equ	0xFE3
 10206                           fsr1h	equ	0xFE2
 10207                           fsr1l	equ	0xFE1
 10208                           indf2	equ	0xFDF
 10209                           postinc2	equ	0xFDE
 10210                           postdec2	equ	0xFDD
 10211                           plusw2	equ	0xFDB
 10212                           fsr2h	equ	0xFDA
 10213                           fsr2l	equ	0xFD9
 10214                           status	equ	0xFD8
 10215                           
 10216 ;; *************** function _lcd_show_dp *****************
 10217 ;; Defined at:
 10218 ;;		line 474 in file "src/driver/lcd.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;  loc             1    wreg     unsigned char 
 10221 ;;  show            1    3[BANK1 ] unsigned char 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;  loc             1    4[BANK1 ] unsigned char 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  1    wreg      void 
 10226 ;; Registers used:
 10227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10233 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;Total ram usage:        2 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    7
 10240 ;; This function calls:
 10241 ;;		_lcd_disp_dp_loc_0
 10242 ;;		_lcd_disp_dp_loc_1
 10243 ;;		_lcd_disp_dp_loc_2
 10244 ;; This function is called by:
 10245 ;;		_ui_disp_clear_num_dp
 10246 ;;		_ui_disp_rtc_mm_ss
 10247 ;;		_ui_disp_adj_xfloat_pt
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text58
 10252  00262A                     __ptext58:
 10253                           	opt stack 0
 10254  00262A                     _lcd_show_dp:
 10255                           	opt stack 17
 10256                           
 10257                           ;incstack = 0
 10258                           ;lcd_show_dp@loc stored from wreg
 10259  00262A  0101               	movlb	1	; () banked
 10260  00262C  6F62               	movwf	lcd_show_dp@loc& (0+255),b
 10261                           
 10262                           ;lcd.c: 476: switch(loc){
 10263  00262E  D01E               	goto	l8410
 10264  002630                     l8396:
 10265  002630  0101               	movlb	1	; () banked
 10266  002632  5161               	movf	lcd_show_dp@show& (0+255),w,b
 10267  002634  EC0F  F018         	call	_lcd_disp_dp_loc_0
 10268  002638  0012               	return	
 10269  00263A                     l8398:
 10270  00263A  0101               	movlb	1	; () banked
 10271  00263C  5161               	movf	lcd_show_dp@show& (0+255),w,b
 10272  00263E  ECF4  F017         	call	_lcd_disp_dp_loc_1
 10273  002642  0012               	return	
 10274  002644                     l8400:
 10275  002644  0101               	movlb	1	; () banked
 10276  002646  5161               	movf	lcd_show_dp@show& (0+255),w,b
 10277  002648  ECD9  F017         	call	_lcd_disp_dp_loc_2
 10278  00264C  0012               	return	
 10279  00264E                     l8402:
 10280  00264E  0101               	movlb	1	; () banked
 10281  002650  5161               	movf	lcd_show_dp@show& (0+255),w,b
 10282  002652  EC0F  F018         	call	_lcd_disp_dp_loc_0
 10283  002656  0012               	return	
 10284  002658                     l8404:
 10285  002658  0101               	movlb	1	; () banked
 10286  00265A  5161               	movf	lcd_show_dp@show& (0+255),w,b
 10287  00265C  ECF4  F017         	call	_lcd_disp_dp_loc_1
 10288  002660  0012               	return	
 10289  002662                     l8406:
 10290  002662  0101               	movlb	1	; () banked
 10291  002664  5161               	movf	lcd_show_dp@show& (0+255),w,b
 10292  002666  ECD9  F017         	call	_lcd_disp_dp_loc_2
 10293                           
 10294                           ;lcd.c: 486: }
 10295                           
 10296                           ;lcd.c: 485: default:break;
 10297  00266A  0012               	return	
 10298  00266C                     l8410:
 10299  00266C  0101               	movlb	1	; () banked
 10300  00266E  5162               	movf	lcd_show_dp@loc& (0+255),w,b
 10301                           
 10302                           ; Switch size 1, requested type "space"
 10303                           ; Number of cases is 6, Range of values is 0 to 6
 10304                           ; switch strategies available:
 10305                           ; Name         Instructions Cycles
 10306                           ; simple_byte           19    10 (average)
 10307                           ;	Chosen strategy is simple_byte
 10308  002670  0A00               	xorlw	0	; case 0
 10309  002672  B4D8               	btfsc	status,2,c
 10310  002674  D7DD               	goto	l8396
 10311  002676  0A01               	xorlw	1	; case 1
 10312  002678  B4D8               	btfsc	status,2,c
 10313  00267A  D7DF               	goto	l8398
 10314  00267C  0A03               	xorlw	3	; case 2
 10315  00267E  B4D8               	btfsc	status,2,c
 10316  002680  D7E1               	goto	l8400
 10317  002682  0A06               	xorlw	6	; case 4
 10318  002684  B4D8               	btfsc	status,2,c
 10319  002686  D7E3               	goto	l8402
 10320  002688  0A01               	xorlw	1	; case 5
 10321  00268A  B4D8               	btfsc	status,2,c
 10322  00268C  D7E5               	goto	l8404
 10323  00268E  0A03               	xorlw	3	; case 6
 10324  002690  A4D8               	btfss	status,2,c
 10325  002692  0012               	return	
 10326  002694  D7E6               	goto	l8406
 10327  002696                     __end_of_lcd_show_dp:
 10328                           	opt stack 0
 10329                           tblptru	equ	0xFF8
 10330                           tblptrh	equ	0xFF7
 10331                           tblptrl	equ	0xFF6
 10332                           tablat	equ	0xFF5
 10333                           prodh	equ	0xFF4
 10334                           prodl	equ	0xFF3
 10335                           intcon	equ	0xFF2
 10336                           indf0	equ	0xFEF
 10337                           postinc0	equ	0xFEE
 10338                           fsr0h	equ	0xFEA
 10339                           fsr0l	equ	0xFE9
 10340                           wreg	equ	0xFE8
 10341                           postdec1	equ	0xFE5
 10342                           plusw1	equ	0xFE3
 10343                           fsr1h	equ	0xFE2
 10344                           fsr1l	equ	0xFE1
 10345                           indf2	equ	0xFDF
 10346                           postinc2	equ	0xFDE
 10347                           postdec2	equ	0xFDD
 10348                           plusw2	equ	0xFDB
 10349                           fsr2h	equ	0xFDA
 10350                           fsr2l	equ	0xFD9
 10351                           status	equ	0xFD8
 10352                           
 10353 ;; *************** function _lcd_disp_dp_loc_2 *****************
 10354 ;; Defined at:
 10355 ;;		line 276 in file "src/driver/lcd.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  dp              1    wreg     unsigned char 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  dp              1   13[BANK0 ] unsigned char 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      void 
 10362 ;; Registers used:
 10363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/0
 10366 ;;		On exit  : 0/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10373 ;;Total ram usage:        1 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    6
 10376 ;; This function calls:
 10377 ;;		_lcd_set_com_seg
 10378 ;; This function is called by:
 10379 ;;		_lcd_show_dp
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text59
 10384  002FB2                     __ptext59:
 10385                           	opt stack 0
 10386  002FB2                     _lcd_disp_dp_loc_2:
 10387                           	opt stack 17
 10388                           
 10389                           ;incstack = 0
 10390                           ;lcd_disp_dp_loc_2@dp stored from wreg
 10391  002FB2  0100               	movlb	0	; () banked
 10392  002FB4  6FF6               	movwf	lcd_disp_dp_loc_2@dp& (0+255),b
 10393                           
 10394                           ;lcd.c: 278: if(dp)
 10395  002FB6  0100               	movlb	0	; () banked
 10396  002FB8  51F6               	movf	lcd_disp_dp_loc_2@dp& (0+255),w,b
 10397  002FBA  0100               	movlb	0	; () banked
 10398  002FBC  B4D8               	btfsc	status,2,c
 10399  002FBE  D00A               	goto	l8370
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;lcd.c: 279: lcd_set_com_seg(3,20,0x80);
 10403  002FC0  0E14               	movlw	20
 10404  002FC2  0100               	movlb	0	; () banked
 10405  002FC4  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10406  002FC6  0E80               	movlw	128
 10407  002FC8  0100               	movlb	0	; () banked
 10408  002FCA  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10409  002FCC  0E03               	movlw	3
 10410  002FCE  EC94  F00B         	call	_lcd_set_com_seg
 10411  002FD2  0012               	return	
 10412  002FD4                     l8370:
 10413                           
 10414                           ;lcd.c: 280: else
 10415                           ;lcd.c: 281: lcd_set_com_seg(3,20,0);
 10416  002FD4  0E14               	movlw	20
 10417  002FD6  0100               	movlb	0	; () banked
 10418  002FD8  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10419  002FDA  0E00               	movlw	0
 10420  002FDC  0100               	movlb	0	; () banked
 10421  002FDE  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10422  002FE0  0E03               	movlw	3
 10423  002FE2  EC94  F00B         	call	_lcd_set_com_seg
 10424  002FE6  0012               	return	
 10425  002FE8                     __end_of_lcd_disp_dp_loc_2:
 10426                           	opt stack 0
 10427                           tblptru	equ	0xFF8
 10428                           tblptrh	equ	0xFF7
 10429                           tblptrl	equ	0xFF6
 10430                           tablat	equ	0xFF5
 10431                           prodh	equ	0xFF4
 10432                           prodl	equ	0xFF3
 10433                           intcon	equ	0xFF2
 10434                           indf0	equ	0xFEF
 10435                           postinc0	equ	0xFEE
 10436                           fsr0h	equ	0xFEA
 10437                           fsr0l	equ	0xFE9
 10438                           wreg	equ	0xFE8
 10439                           postdec1	equ	0xFE5
 10440                           plusw1	equ	0xFE3
 10441                           fsr1h	equ	0xFE2
 10442                           fsr1l	equ	0xFE1
 10443                           indf2	equ	0xFDF
 10444                           postinc2	equ	0xFDE
 10445                           postdec2	equ	0xFDD
 10446                           plusw2	equ	0xFDB
 10447                           fsr2h	equ	0xFDA
 10448                           fsr2l	equ	0xFD9
 10449                           status	equ	0xFD8
 10450                           
 10451 ;; *************** function _lcd_disp_dp_loc_1 *****************
 10452 ;; Defined at:
 10453 ;;		line 257 in file "src/driver/lcd.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  dp              1    wreg     unsigned char 
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;  dp              1   13[BANK0 ] unsigned char 
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      void 
 10460 ;; Registers used:
 10461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;Total ram usage:        1 bytes
 10472 ;; Hardware stack levels used:    1
 10473 ;; Hardware stack levels required when called:    6
 10474 ;; This function calls:
 10475 ;;		_lcd_set_com_seg
 10476 ;; This function is called by:
 10477 ;;		_lcd_show_dp
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text60
 10482  002FE8                     __ptext60:
 10483                           	opt stack 0
 10484  002FE8                     _lcd_disp_dp_loc_1:
 10485                           	opt stack 17
 10486                           
 10487                           ;incstack = 0
 10488                           ;lcd_disp_dp_loc_1@dp stored from wreg
 10489  002FE8  0100               	movlb	0	; () banked
 10490  002FEA  6FF6               	movwf	lcd_disp_dp_loc_1@dp& (0+255),b
 10491                           
 10492                           ;lcd.c: 259: if(dp)
 10493  002FEC  0100               	movlb	0	; () banked
 10494  002FEE  51F6               	movf	lcd_disp_dp_loc_1@dp& (0+255),w,b
 10495  002FF0  0100               	movlb	0	; () banked
 10496  002FF2  B4D8               	btfsc	status,2,c
 10497  002FF4  D00A               	goto	l8364
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;lcd.c: 260: lcd_set_com_seg(3,22,0x80);
 10501  002FF6  0E16               	movlw	22
 10502  002FF8  0100               	movlb	0	; () banked
 10503  002FFA  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10504  002FFC  0E80               	movlw	128
 10505  002FFE  0100               	movlb	0	; () banked
 10506  003000  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10507  003002  0E03               	movlw	3
 10508  003004  EC94  F00B         	call	_lcd_set_com_seg
 10509  003008  0012               	return	
 10510  00300A                     l8364:
 10511                           
 10512                           ;lcd.c: 261: else
 10513                           ;lcd.c: 262: lcd_set_com_seg(3,22,0);
 10514  00300A  0E16               	movlw	22
 10515  00300C  0100               	movlb	0	; () banked
 10516  00300E  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10517  003010  0E00               	movlw	0
 10518  003012  0100               	movlb	0	; () banked
 10519  003014  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10520  003016  0E03               	movlw	3
 10521  003018  EC94  F00B         	call	_lcd_set_com_seg
 10522  00301C  0012               	return	
 10523  00301E                     __end_of_lcd_disp_dp_loc_1:
 10524                           	opt stack 0
 10525                           tblptru	equ	0xFF8
 10526                           tblptrh	equ	0xFF7
 10527                           tblptrl	equ	0xFF6
 10528                           tablat	equ	0xFF5
 10529                           prodh	equ	0xFF4
 10530                           prodl	equ	0xFF3
 10531                           intcon	equ	0xFF2
 10532                           indf0	equ	0xFEF
 10533                           postinc0	equ	0xFEE
 10534                           fsr0h	equ	0xFEA
 10535                           fsr0l	equ	0xFE9
 10536                           wreg	equ	0xFE8
 10537                           postdec1	equ	0xFE5
 10538                           plusw1	equ	0xFE3
 10539                           fsr1h	equ	0xFE2
 10540                           fsr1l	equ	0xFE1
 10541                           indf2	equ	0xFDF
 10542                           postinc2	equ	0xFDE
 10543                           postdec2	equ	0xFDD
 10544                           plusw2	equ	0xFDB
 10545                           fsr2h	equ	0xFDA
 10546                           fsr2l	equ	0xFD9
 10547                           status	equ	0xFD8
 10548                           
 10549 ;; *************** function _lcd_disp_dp_loc_0 *****************
 10550 ;; Defined at:
 10551 ;;		line 238 in file "src/driver/lcd.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  dp              1    wreg     unsigned char 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  dp              1   13[BANK0 ] unsigned char 
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      void 
 10558 ;; Registers used:
 10559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;Total ram usage:        1 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    6
 10572 ;; This function calls:
 10573 ;;		_lcd_set_com_seg
 10574 ;; This function is called by:
 10575 ;;		_lcd_show_dp
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           	psect	text61
 10580  00301E                     __ptext61:
 10581                           	opt stack 0
 10582  00301E                     _lcd_disp_dp_loc_0:
 10583                           	opt stack 17
 10584                           
 10585                           ;incstack = 0
 10586                           ;lcd_disp_dp_loc_0@dp stored from wreg
 10587  00301E  0100               	movlb	0	; () banked
 10588  003020  6FF6               	movwf	lcd_disp_dp_loc_0@dp& (0+255),b
 10589                           
 10590                           ;lcd.c: 240: if(dp)
 10591  003022  0100               	movlb	0	; () banked
 10592  003024  51F6               	movf	lcd_disp_dp_loc_0@dp& (0+255),w,b
 10593  003026  0100               	movlb	0	; () banked
 10594  003028  B4D8               	btfsc	status,2,c
 10595  00302A  D00A               	goto	l8358
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;lcd.c: 241: lcd_set_com_seg(3,24,0x80);
 10599  00302C  0E18               	movlw	24
 10600  00302E  0100               	movlb	0	; () banked
 10601  003030  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10602  003032  0E80               	movlw	128
 10603  003034  0100               	movlb	0	; () banked
 10604  003036  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10605  003038  0E03               	movlw	3
 10606  00303A  EC94  F00B         	call	_lcd_set_com_seg
 10607  00303E  0012               	return	
 10608  003040                     l8358:
 10609                           
 10610                           ;lcd.c: 242: else
 10611                           ;lcd.c: 243: lcd_set_com_seg(3,24,0);
 10612  003040  0E18               	movlw	24
 10613  003042  0100               	movlb	0	; () banked
 10614  003044  6FF1               	movwf	lcd_set_com_seg@seg& (0+255),b
 10615  003046  0E00               	movlw	0
 10616  003048  0100               	movlb	0	; () banked
 10617  00304A  6FF2               	movwf	lcd_set_com_seg@show& (0+255),b
 10618  00304C  0E03               	movlw	3
 10619  00304E  EC94  F00B         	call	_lcd_set_com_seg
 10620  003052  0012               	return	
 10621  003054                     __end_of_lcd_disp_dp_loc_0:
 10622                           	opt stack 0
 10623                           tblptru	equ	0xFF8
 10624                           tblptrh	equ	0xFF7
 10625                           tblptrl	equ	0xFF6
 10626                           tablat	equ	0xFF5
 10627                           prodh	equ	0xFF4
 10628                           prodl	equ	0xFF3
 10629                           intcon	equ	0xFF2
 10630                           indf0	equ	0xFEF
 10631                           postinc0	equ	0xFEE
 10632                           fsr0h	equ	0xFEA
 10633                           fsr0l	equ	0xFE9
 10634                           wreg	equ	0xFE8
 10635                           postdec1	equ	0xFE5
 10636                           plusw1	equ	0xFE3
 10637                           fsr1h	equ	0xFE2
 10638                           fsr1l	equ	0xFE1
 10639                           indf2	equ	0xFDF
 10640                           postinc2	equ	0xFDE
 10641                           postdec2	equ	0xFDD
 10642                           plusw2	equ	0xFDB
 10643                           fsr2h	equ	0xFDA
 10644                           fsr2l	equ	0xFD9
 10645                           status	equ	0xFD8
 10646                           
 10647 ;; *************** function _lcd_set_com_seg *****************
 10648 ;; Defined at:
 10649 ;;		line 32 in file "src/driver/lcd.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  com             1    wreg     unsigned char 
 10652 ;;  seg             1    8[BANK0 ] unsigned char 
 10653 ;;  show            1    9[BANK0 ] unsigned char 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;  com             1    0[BANK1 ] unsigned char 
 10656 ;;  bits            1    2[BANK1 ] unsigned char 
 10657 ;;  offset          1    1[BANK1 ] unsigned char 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;Total ram usage:        8 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    5
 10674 ;; This function calls:
 10675 ;;		___awdiv
 10676 ;; This function is called by:
 10677 ;;		_lcd_disp_level_bar
 10678 ;;		_lcd_disp_chr_loc_0
 10679 ;;		_lcd_disp_dp_loc_0
 10680 ;;		_lcd_disp_chr_loc_1
 10681 ;;		_lcd_disp_dp_loc_1
 10682 ;;		_lcd_disp_chr_loc_2
 10683 ;;		_lcd_disp_dp_loc_2
 10684 ;;		_lcd_disp_chr_loc_3
 10685 ;;		_lcd_disp_chr_loc_4
 10686 ;;		_lcd_disp_chr_loc_5
 10687 ;;		_lcd_disp_chr_loc_6
 10688 ;;		_lcd_disp_chr_loc_7
 10689 ;;		_lcd_disp_logo
 10690 ;;		_lcd_disp_battary_bar
 10691 ;;		_lcd_disp_rf_bar
 10692 ;;		_lcd_disp_light_bar
 10693 ;;		_lcd_disp_dp_loc_4
 10694 ;;		_lcd_disp_dp_loc_5
 10695 ;;		_lcd_disp_dp_loc_6
 10696 ;;		_lcd_disp_unit_t
 10697 ;;		_lcd_disp_unit_1st_m
 10698 ;;		_lcd_disp_unit_1st_m3
 10699 ;;		_lcd_disp_unit_temperature
 10700 ;;		_lcd_disp_unit_2nd_m
 10701 ;;		_lcd_disp_unit_2nd_m3
 10702 ;;		_lcd_disp_unit_mpa
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text62
 10707  001728                     __ptext62:
 10708                           	opt stack 0
 10709  001728                     _lcd_set_com_seg:
 10710                           	opt stack 21
 10711                           
 10712                           ;incstack = 0
 10713                           ;lcd_set_com_seg@com stored from wreg
 10714  001728  0101               	movlb	1	; () banked
 10715  00172A  6F5E               	movwf	lcd_set_com_seg@com& (0+255),b
 10716                           
 10717                           ;lcd.c: 34: uint8_t offset;
 10718                           ;lcd.c: 35: uint8_t bits;
 10719                           ;lcd.c: 36: if(com>3)return;
 10720  00172C  0E03               	movlw	3
 10721  00172E  0101               	movlb	1	; () banked
 10722  001730  655E               	cpfsgt	lcd_set_com_seg@com& (0+255),b
 10723  001732  D001               	goto	l8252
 10724  001734  0012               	return	
 10725  001736                     l8252:
 10726                           
 10727                           ; BSR set to: 1
 10728                           ;lcd.c: 37: if(seg>47)return;
 10729  001736  0E2F               	movlw	47
 10730  001738  0100               	movlb	0	; () banked
 10731  00173A  65F1               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
 10732  00173C  D001               	goto	l8256
 10733  00173E  0012               	return	
 10734  001740                     l8256:
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;lcd.c: 38: offset=com*6 + seg/8;
 10738  001740  C0F1  F0E9         	movff	lcd_set_com_seg@seg,___awdiv@dividend
 10739  001744  0100               	movlb	0	; () banked
 10740  001746  6BEA               	clrf	(___awdiv@dividend+1)& (0+255),b
 10741  001748  0E00               	movlw	0
 10742  00174A  0100               	movlb	0	; () banked
 10743  00174C  6FEC               	movwf	(___awdiv@divisor+1)& (0+255),b
 10744  00174E  0E08               	movlw	8
 10745  001750  6FEB               	movwf	___awdiv@divisor& (0+255),b
 10746  001752  ECB9  F00C         	call	___awdiv	;wreg free
 10747  001756  0101               	movlb	1	; () banked
 10748  001758  515E               	movf	lcd_set_com_seg@com& (0+255),w,b
 10749  00175A  0D06               	mullw	6
 10750  00175C  50F3               	movf	prodl,w,c
 10751  00175E  0100               	movlb	0	; () banked
 10752  001760  25E9               	addwf	?___awdiv& (0+255),w,b
 10753  001762  0101               	movlb	1	; () banked
 10754  001764  6F5F               	movwf	lcd_set_com_seg@offset& (0+255),b
 10755                           
 10756                           ; BSR set to: 1
 10757                           ;lcd.c: 39: bits=seg%8;
 10758  001766  0100               	movlb	0	; () banked
 10759  001768  51F1               	movf	lcd_set_com_seg@seg& (0+255),w,b
 10760  00176A  0B07               	andlw	7
 10761  00176C  0101               	movlb	1	; () banked
 10762  00176E  6F60               	movwf	lcd_set_com_seg@bits& (0+255),b
 10763                           
 10764                           ; BSR set to: 1
 10765                           ;lcd.c: 40: if(show){
 10766  001770  0100               	movlb	0	; () banked
 10767  001772  51F2               	movf	lcd_set_com_seg@show& (0+255),w,b
 10768  001774  0100               	movlb	0	; () banked
 10769  001776  B4D8               	btfsc	status,2,c
 10770  001778  D01B               	goto	l8264
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;lcd.c: 41: pLCD[offset] |= (1<<bits);
 10774  00177A  C160  F0F3         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 10775  00177E  0E01               	movlw	1
 10776  001780  0100               	movlb	0	; () banked
 10777  001782  6FF4               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 10778  001784  0100               	movlb	0	; () banked
 10779  001786  2BF3               	incf	??_lcd_set_com_seg& (0+255),f,b
 10780  001788  D003               	goto	u6394
 10781  00178A                     u6395:
 10782  00178A  0100               	movlb	0	; () banked
 10783  00178C  90D8               	bcf	status,0,c
 10784  00178E  37F4               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 10785  001790                     u6394:
 10786  001790  0100               	movlb	0	; () banked
 10787  001792  2FF3               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 10788  001794  D7FA               	goto	u6395
 10789  001796  0101               	movlb	1	; () banked
 10790  001798  515F               	movf	lcd_set_com_seg@offset& (0+255),w,b
 10791  00179A  0D01               	mullw	1
 10792  00179C  0E60               	movlw	low _pLCD
 10793  00179E  24F3               	addwf	prodl,w,c
 10794  0017A0  6ED9               	movwf	fsr2l,c
 10795  0017A2  0E00               	movlw	high _pLCD
 10796  0017A4  20F4               	addwfc	prodh,w,c
 10797  0017A6  6EDA               	movwf	fsr2h,c
 10798  0017A8  0100               	movlb	0	; () banked
 10799  0017AA  51F4               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 10800  0017AC  12DF               	iorwf	indf2,f,c
 10801                           
 10802                           ;lcd.c: 42: }else{
 10803  0017AE  0012               	return	
 10804  0017B0                     l8264:
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;lcd.c: 43: pLCD[offset] &= ~(1<<bits);
 10808  0017B0  C160  F0F3         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 10809  0017B4  0E01               	movlw	1
 10810  0017B6  0100               	movlb	0	; () banked
 10811  0017B8  6FF4               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 10812  0017BA  0100               	movlb	0	; () banked
 10813  0017BC  2BF3               	incf	??_lcd_set_com_seg& (0+255),f,b
 10814  0017BE  D003               	goto	u6404
 10815  0017C0                     u6405:
 10816  0017C0  0100               	movlb	0	; () banked
 10817  0017C2  90D8               	bcf	status,0,c
 10818  0017C4  37F4               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 10819  0017C6                     u6404:
 10820  0017C6  0100               	movlb	0	; () banked
 10821  0017C8  2FF3               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 10822  0017CA  D7FA               	goto	u6405
 10823  0017CC  0100               	movlb	0	; () banked
 10824  0017CE  51F4               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 10825  0017D0  0AFF               	xorlw	255
 10826  0017D2  0100               	movlb	0	; () banked
 10827  0017D4  6FF5               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
 10828  0017D6  0101               	movlb	1	; () banked
 10829  0017D8  515F               	movf	lcd_set_com_seg@offset& (0+255),w,b
 10830  0017DA  0D01               	mullw	1
 10831  0017DC  0E60               	movlw	low _pLCD
 10832  0017DE  24F3               	addwf	prodl,w,c
 10833  0017E0  6ED9               	movwf	fsr2l,c
 10834  0017E2  0E00               	movlw	high _pLCD
 10835  0017E4  20F4               	addwfc	prodh,w,c
 10836  0017E6  6EDA               	movwf	fsr2h,c
 10837  0017E8  0100               	movlb	0	; () banked
 10838  0017EA  51F5               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
 10839  0017EC  16DF               	andwf	indf2,f,c
 10840  0017EE  0012               	return	
 10841  0017F0                     __end_of_lcd_set_com_seg:
 10842                           	opt stack 0
 10843                           tblptru	equ	0xFF8
 10844                           tblptrh	equ	0xFF7
 10845                           tblptrl	equ	0xFF6
 10846                           tablat	equ	0xFF5
 10847                           prodh	equ	0xFF4
 10848                           prodl	equ	0xFF3
 10849                           intcon	equ	0xFF2
 10850                           indf0	equ	0xFEF
 10851                           postinc0	equ	0xFEE
 10852                           fsr0h	equ	0xFEA
 10853                           fsr0l	equ	0xFE9
 10854                           wreg	equ	0xFE8
 10855                           postdec1	equ	0xFE5
 10856                           plusw1	equ	0xFE3
 10857                           fsr1h	equ	0xFE2
 10858                           fsr1l	equ	0xFE1
 10859                           indf2	equ	0xFDF
 10860                           postinc2	equ	0xFDE
 10861                           postdec2	equ	0xFDD
 10862                           plusw2	equ	0xFDB
 10863                           fsr2h	equ	0xFDA
 10864                           fsr2l	equ	0xFD9
 10865                           status	equ	0xFD8
 10866                           
 10867 ;; *************** function _m_mem_cpy *****************
 10868 ;; Defined at:
 10869 ;;		line 51 in file "src/depend/m_string.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;  d               2    0[BANK0 ] PTR unsigned char 
 10872 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 10873 ;;  s               2    2[BANK0 ] PTR unsigned char 
 10874 ;;		 -> STR_3(5), 
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;		None
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  1    wreg      void 
 10879 ;; Registers used:
 10880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/0
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10886 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10890 ;;Total ram usage:        4 bytes
 10891 ;; Hardware stack levels used:    1
 10892 ;; Hardware stack levels required when called:    4
 10893 ;; This function calls:
 10894 ;;		Nothing
 10895 ;; This function is called by:
 10896 ;;		_ui_disp_adj_xfixed_pt
 10897 ;;		_ui_disp_adj_xfloat_pt
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	text63
 10902  002C64                     __ptext63:
 10903                           	opt stack 0
 10904  002C64                     _m_mem_cpy:
 10905                           	opt stack 21
 10906                           
 10907                           ;m_string.c: 53: while(*s!='\0')
 10908                           
 10909                           ;incstack = 0
 10910  002C64  D011               	goto	l8704
 10911  002C66                     l8698:
 10912                           
 10913                           ;m_string.c: 54: {
 10914                           ;m_string.c: 55: *d++=*s++;
 10915  002C66  C0EB  FFF6         	movff	m_mem_cpy@s,tblptrl
 10916  002C6A  C0EC  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 10917  002C6E                     	if	0	;tblptru may be non-zero
 10918  002C6E                     	endif
 10919  002C6E                     	if	0	;tblptru may be non-zero
 10920  002C6E                     	endif
 10921  002C6E  C0E9  FFD9         	movff	m_mem_cpy@d,fsr2l
 10922  002C72  C0EA  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 10923  002C76  0008               	tblrd		*
 10924  002C78  CFF5 FFDF          	movff	tablat,indf2
 10925  002C7C  0100               	movlb	0	; () banked
 10926  002C7E  4BEB               	infsnz	m_mem_cpy@s& (0+255),f,b
 10927  002C80  2BEC               	incf	(m_mem_cpy@s+1)& (0+255),f,b
 10928                           
 10929                           ; BSR set to: 0
 10930  002C82  0100               	movlb	0	; () banked
 10931  002C84  4BE9               	infsnz	m_mem_cpy@d& (0+255),f,b
 10932  002C86  2BEA               	incf	(m_mem_cpy@d+1)& (0+255),f,b
 10933  002C88                     l8704:
 10934  002C88  C0EB  FFF6         	movff	m_mem_cpy@s,tblptrl
 10935  002C8C  C0EC  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 10936  002C90                     	if	0	;tblptru may be non-zero
 10937  002C90                     	endif
 10938  002C90                     	if	0	;tblptru may be non-zero
 10939  002C90                     	endif
 10940  002C90  0008               	tblrd		*
 10941  002C92  50F5               	movf	tablat,w,c
 10942  002C94  0900               	iorlw	0
 10943  002C96  A4D8               	btfss	status,2,c
 10944  002C98  D7E6               	goto	l8698
 10945                           
 10946                           ;m_string.c: 56: }
 10947                           ;m_string.c: 57: *d='\0';
 10948  002C9A  C0E9  FFD9         	movff	m_mem_cpy@d,fsr2l
 10949  002C9E  C0EA  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 10950  002CA2  0E00               	movlw	0
 10951  002CA4  6EDF               	movwf	indf2,c
 10952  002CA6  0012               	return		;funcret
 10953  002CA8                     __end_of_m_mem_cpy:
 10954                           	opt stack 0
 10955                           tblptru	equ	0xFF8
 10956                           tblptrh	equ	0xFF7
 10957                           tblptrl	equ	0xFF6
 10958                           tablat	equ	0xFF5
 10959                           prodh	equ	0xFF4
 10960                           prodl	equ	0xFF3
 10961                           intcon	equ	0xFF2
 10962                           indf0	equ	0xFEF
 10963                           postinc0	equ	0xFEE
 10964                           fsr0h	equ	0xFEA
 10965                           fsr0l	equ	0xFE9
 10966                           wreg	equ	0xFE8
 10967                           postdec1	equ	0xFE5
 10968                           plusw1	equ	0xFE3
 10969                           fsr1h	equ	0xFE2
 10970                           fsr1l	equ	0xFE1
 10971                           indf2	equ	0xFDF
 10972                           postinc2	equ	0xFDE
 10973                           postdec2	equ	0xFDD
 10974                           plusw2	equ	0xFDB
 10975                           fsr2h	equ	0xFDA
 10976                           fsr2l	equ	0xFD9
 10977                           status	equ	0xFD8
 10978                           
 10979 ;; *************** function _m_int16_2_str_4 *****************
 10980 ;; Defined at:
 10981 ;;		line 260 in file "src/depend/m_string.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;  buf             2    8[BANK0 ] PTR unsigned char 
 10984 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 10985 ;;  x               2   10[BANK0 ] int 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;		None
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      void 
 10990 ;; Registers used:
 10991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11000 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11001 ;;Total ram usage:        4 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    5
 11004 ;; This function calls:
 11005 ;;		___awdiv
 11006 ;;		___awmod
 11007 ;; This function is called by:
 11008 ;;		_ui_disp_adj_xfixed_pt
 11009 ;;		_ui_disp_adj_xfloat_pt
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text64
 11014  000D4A                     __ptext64:
 11015                           	opt stack 0
 11016  000D4A                     _m_int16_2_str_4:
 11017                           	opt stack 20
 11018                           
 11019                           ;m_string.c: 262: if(x>9999)x=9999;
 11020                           
 11021                           ;incstack = 0
 11022  000D4A  0100               	movlb	0	; () banked
 11023  000D4C  BFF4               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
 11024  000D4E  D00D               	goto	l8712
 11025  000D50  0E10               	movlw	16
 11026  000D52  0100               	movlb	0	; () banked
 11027  000D54  5DF3               	subwf	m_int16_2_str_4@x& (0+255),w,b
 11028  000D56  0E27               	movlw	39
 11029  000D58  0100               	movlb	0	; () banked
 11030  000D5A  59F4               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
 11031  000D5C  A0D8               	btfss	status,0,c
 11032  000D5E  D005               	goto	l8712
 11033                           
 11034                           ; BSR set to: 0
 11035  000D60  0E27               	movlw	39
 11036  000D62  0100               	movlb	0	; () banked
 11037  000D64  6FF4               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
 11038  000D66  0E0F               	movlw	15
 11039  000D68  6FF3               	movwf	m_int16_2_str_4@x& (0+255),b
 11040  000D6A                     l8712:
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;m_string.c: 263: buf[3]=HexTable[x%10];
 11044  000D6A  C0F3  F0E9         	movff	m_int16_2_str_4@x,___awmod@dividend
 11045  000D6E  C0F4  F0EA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11046  000D72  0E00               	movlw	0
 11047  000D74  0100               	movlb	0	; () banked
 11048  000D76  6FEC               	movwf	(___awmod@divisor+1)& (0+255),b
 11049  000D78  0E0A               	movlw	10
 11050  000D7A  6FEB               	movwf	___awmod@divisor& (0+255),b
 11051  000D7C  EC7F  F00E         	call	___awmod	;wreg free
 11052  000D80  0E0C               	movlw	low _HexTable
 11053  000D82  0100               	movlb	0	; () banked
 11054  000D84  25E9               	addwf	?___awmod& (0+255),w,b
 11055  000D86  6EF6               	movwf	tblptrl,c
 11056  000D88  0EFF               	movlw	high _HexTable
 11057  000D8A  0100               	movlb	0	; () banked
 11058  000D8C  21EA               	addwfc	(?___awmod+1)& (0+255),w,b
 11059  000D8E  6EF7               	movwf	tblptrh,c
 11060  000D90                     	if	0	;There are less than 3 active tblptr bytes
 11061  000D90                     	endif
 11062  000D90  0100               	movlb	0	; () banked
 11063  000D92  EE20 F003          	lfsr	2,3
 11064  000D96  51F1               	movf	m_int16_2_str_4@buf& (0+255),w,b
 11065  000D98  26D9               	addwf	fsr2l,f,c
 11066  000D9A  51F2               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 11067  000D9C  22DA               	addwfc	fsr2h,f,c
 11068  000D9E  0008               	tblrd		*
 11069  000DA0  CFF5 FFDF          	movff	tablat,indf2
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;m_string.c: 264: x/=10;
 11073  000DA4  C0F3  F0E9         	movff	m_int16_2_str_4@x,___awdiv@dividend
 11074  000DA8  C0F4  F0EA         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 11075  000DAC  0E00               	movlw	0
 11076  000DAE  0100               	movlb	0	; () banked
 11077  000DB0  6FEC               	movwf	(___awdiv@divisor+1)& (0+255),b
 11078  000DB2  0E0A               	movlw	10
 11079  000DB4  6FEB               	movwf	___awdiv@divisor& (0+255),b
 11080  000DB6  ECB9  F00C         	call	___awdiv	;wreg free
 11081  000DBA  C0E9  F0F3         	movff	?___awdiv,m_int16_2_str_4@x
 11082  000DBE  C0EA  F0F4         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 11083                           
 11084                           ;m_string.c: 265: buf[2]=HexTable[x%10];
 11085  000DC2  C0F3  F0E9         	movff	m_int16_2_str_4@x,___awmod@dividend
 11086  000DC6  C0F4  F0EA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11087  000DCA  0E00               	movlw	0
 11088  000DCC  0100               	movlb	0	; () banked
 11089  000DCE  6FEC               	movwf	(___awmod@divisor+1)& (0+255),b
 11090  000DD0  0E0A               	movlw	10
 11091  000DD2  6FEB               	movwf	___awmod@divisor& (0+255),b
 11092  000DD4  EC7F  F00E         	call	___awmod	;wreg free
 11093  000DD8  0E0C               	movlw	low _HexTable
 11094  000DDA  0100               	movlb	0	; () banked
 11095  000DDC  25E9               	addwf	?___awmod& (0+255),w,b
 11096  000DDE  6EF6               	movwf	tblptrl,c
 11097  000DE0  0EFF               	movlw	high _HexTable
 11098  000DE2  0100               	movlb	0	; () banked
 11099  000DE4  21EA               	addwfc	(?___awmod+1)& (0+255),w,b
 11100  000DE6  6EF7               	movwf	tblptrh,c
 11101  000DE8                     	if	0	;There are less than 3 active tblptr bytes
 11102  000DE8                     	endif
 11103  000DE8  0100               	movlb	0	; () banked
 11104  000DEA  EE20 F002          	lfsr	2,2
 11105  000DEE  51F1               	movf	m_int16_2_str_4@buf& (0+255),w,b
 11106  000DF0  26D9               	addwf	fsr2l,f,c
 11107  000DF2  51F2               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 11108  000DF4  22DA               	addwfc	fsr2h,f,c
 11109  000DF6  0008               	tblrd		*
 11110  000DF8  CFF5 FFDF          	movff	tablat,indf2
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;m_string.c: 266: x/=10;
 11114  000DFC  C0F3  F0E9         	movff	m_int16_2_str_4@x,___awdiv@dividend
 11115  000E00  C0F4  F0EA         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 11116  000E04  0E00               	movlw	0
 11117  000E06  0100               	movlb	0	; () banked
 11118  000E08  6FEC               	movwf	(___awdiv@divisor+1)& (0+255),b
 11119  000E0A  0E0A               	movlw	10
 11120  000E0C  6FEB               	movwf	___awdiv@divisor& (0+255),b
 11121  000E0E  ECB9  F00C         	call	___awdiv	;wreg free
 11122  000E12  C0E9  F0F3         	movff	?___awdiv,m_int16_2_str_4@x
 11123  000E16  C0EA  F0F4         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 11124                           
 11125                           ;m_string.c: 267: buf[1]=HexTable[x%10];
 11126  000E1A  C0F3  F0E9         	movff	m_int16_2_str_4@x,___awmod@dividend
 11127  000E1E  C0F4  F0EA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11128  000E22  0E00               	movlw	0
 11129  000E24  0100               	movlb	0	; () banked
 11130  000E26  6FEC               	movwf	(___awmod@divisor+1)& (0+255),b
 11131  000E28  0E0A               	movlw	10
 11132  000E2A  6FEB               	movwf	___awmod@divisor& (0+255),b
 11133  000E2C  EC7F  F00E         	call	___awmod	;wreg free
 11134  000E30  0E0C               	movlw	low _HexTable
 11135  000E32  0100               	movlb	0	; () banked
 11136  000E34  25E9               	addwf	?___awmod& (0+255),w,b
 11137  000E36  6EF6               	movwf	tblptrl,c
 11138  000E38  0EFF               	movlw	high _HexTable
 11139  000E3A  0100               	movlb	0	; () banked
 11140  000E3C  21EA               	addwfc	(?___awmod+1)& (0+255),w,b
 11141  000E3E  6EF7               	movwf	tblptrh,c
 11142  000E40                     	if	0	;There are less than 3 active tblptr bytes
 11143  000E40                     	endif
 11144  000E40  0100               	movlb	0	; () banked
 11145  000E42  EE20 F001          	lfsr	2,1
 11146  000E46  51F1               	movf	m_int16_2_str_4@buf& (0+255),w,b
 11147  000E48  26D9               	addwf	fsr2l,f,c
 11148  000E4A  51F2               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 11149  000E4C  22DA               	addwfc	fsr2h,f,c
 11150  000E4E  0008               	tblrd		*
 11151  000E50  CFF5 FFDF          	movff	tablat,indf2
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;m_string.c: 268: x/=10;
 11155  000E54  C0F3  F0E9         	movff	m_int16_2_str_4@x,___awdiv@dividend
 11156  000E58  C0F4  F0EA         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 11157  000E5C  0E00               	movlw	0
 11158  000E5E  0100               	movlb	0	; () banked
 11159  000E60  6FEC               	movwf	(___awdiv@divisor+1)& (0+255),b
 11160  000E62  0E0A               	movlw	10
 11161  000E64  6FEB               	movwf	___awdiv@divisor& (0+255),b
 11162  000E66  ECB9  F00C         	call	___awdiv	;wreg free
 11163  000E6A  C0E9  F0F3         	movff	?___awdiv,m_int16_2_str_4@x
 11164  000E6E  C0EA  F0F4         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 11165                           
 11166                           ;m_string.c: 269: buf[0]=HexTable[x%10];
 11167  000E72  C0F3  F0E9         	movff	m_int16_2_str_4@x,___awmod@dividend
 11168  000E76  C0F4  F0EA         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11169  000E7A  0E00               	movlw	0
 11170  000E7C  0100               	movlb	0	; () banked
 11171  000E7E  6FEC               	movwf	(___awmod@divisor+1)& (0+255),b
 11172  000E80  0E0A               	movlw	10
 11173  000E82  6FEB               	movwf	___awmod@divisor& (0+255),b
 11174  000E84  EC7F  F00E         	call	___awmod	;wreg free
 11175  000E88  0E0C               	movlw	low _HexTable
 11176  000E8A  0100               	movlb	0	; () banked
 11177  000E8C  25E9               	addwf	?___awmod& (0+255),w,b
 11178  000E8E  6EF6               	movwf	tblptrl,c
 11179  000E90  0EFF               	movlw	high _HexTable
 11180  000E92  0100               	movlb	0	; () banked
 11181  000E94  21EA               	addwfc	(?___awmod+1)& (0+255),w,b
 11182  000E96  6EF7               	movwf	tblptrh,c
 11183  000E98                     	if	0	;There are less than 3 active tblptr bytes
 11184  000E98                     	endif
 11185  000E98  C0F1  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
 11186  000E9C  C0F2  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
 11187  000EA0  0008               	tblrd		*
 11188  000EA2  CFF5 FFDF          	movff	tablat,indf2
 11189                           
 11190                           ; BSR set to: 0
 11191  000EA6  0012               	return		;funcret
 11192  000EA8                     __end_of_m_int16_2_str_4:
 11193                           	opt stack 0
 11194                           tblptru	equ	0xFF8
 11195                           tblptrh	equ	0xFF7
 11196                           tblptrl	equ	0xFF6
 11197                           tablat	equ	0xFF5
 11198                           prodh	equ	0xFF4
 11199                           prodl	equ	0xFF3
 11200                           intcon	equ	0xFF2
 11201                           indf0	equ	0xFEF
 11202                           postinc0	equ	0xFEE
 11203                           fsr0h	equ	0xFEA
 11204                           fsr0l	equ	0xFE9
 11205                           wreg	equ	0xFE8
 11206                           postdec1	equ	0xFE5
 11207                           plusw1	equ	0xFE3
 11208                           fsr1h	equ	0xFE2
 11209                           fsr1l	equ	0xFE1
 11210                           indf2	equ	0xFDF
 11211                           postinc2	equ	0xFDE
 11212                           postdec2	equ	0xFDD
 11213                           plusw2	equ	0xFDB
 11214                           fsr2h	equ	0xFDA
 11215                           fsr2l	equ	0xFD9
 11216                           status	equ	0xFD8
 11217                           
 11218 ;; *************** function ___awmod *****************
 11219 ;; Defined at:
 11220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awmod.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;  dividend        2    0[BANK0 ] int 
 11223 ;;  divisor         2    2[BANK0 ] int 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  sign            1    5[BANK0 ] unsigned char 
 11226 ;;  counter         1    4[BANK0 ] unsigned char 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  2    0[BANK0 ] int 
 11229 ;; Registers used:
 11230 ;;		wreg, status,2, status,0
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11236 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11239 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11240 ;;Total ram usage:        6 bytes
 11241 ;; Hardware stack levels used:    1
 11242 ;; Hardware stack levels required when called:    4
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_m_int16_2_str_4
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           	psect	text65
 11251  001CFE                     __ptext65:
 11252                           	opt stack 0
 11253  001CFE                     ___awmod:
 11254                           	opt stack 20
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;incstack = 0
 11258  001CFE  0E00               	movlw	0
 11259  001D00  0100               	movlb	0	; () banked
 11260  001D02  6FEE               	movwf	___awmod@sign& (0+255),b
 11261                           
 11262                           ; BSR set to: 0
 11263  001D04  0100               	movlb	0	; () banked
 11264  001D06  AFEA               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11265  001D08  D008               	goto	l8640
 11266                           
 11267                           ; BSR set to: 0
 11268  001D0A  0100               	movlb	0	; () banked
 11269  001D0C  6DE9               	negf	___awmod@dividend& (0+255),b
 11270  001D0E  1FEA               	comf	(___awmod@dividend+1)& (0+255),f,b
 11271  001D10  B0D8               	btfsc	status,0,c
 11272  001D12  2BEA               	incf	(___awmod@dividend+1)& (0+255),f,b
 11273                           
 11274                           ; BSR set to: 0
 11275  001D14  0E01               	movlw	1
 11276  001D16  0100               	movlb	0	; () banked
 11277  001D18  6FEE               	movwf	___awmod@sign& (0+255),b
 11278  001D1A                     l8640:
 11279                           
 11280                           ; BSR set to: 0
 11281  001D1A  0100               	movlb	0	; () banked
 11282  001D1C  AFEC               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11283  001D1E  D005               	goto	l8644
 11284                           
 11285                           ; BSR set to: 0
 11286  001D20  0100               	movlb	0	; () banked
 11287  001D22  6DEB               	negf	___awmod@divisor& (0+255),b
 11288  001D24  1FEC               	comf	(___awmod@divisor+1)& (0+255),f,b
 11289  001D26  B0D8               	btfsc	status,0,c
 11290  001D28  2BEC               	incf	(___awmod@divisor+1)& (0+255),f,b
 11291  001D2A                     l8644:
 11292                           
 11293                           ; BSR set to: 0
 11294  001D2A  0100               	movlb	0	; () banked
 11295  001D2C  51EB               	movf	___awmod@divisor& (0+255),w,b
 11296  001D2E  0100               	movlb	0	; () banked
 11297  001D30  11EC               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11298  001D32  B4D8               	btfsc	status,2,c
 11299  001D34  D026               	goto	l8660
 11300                           
 11301                           ; BSR set to: 0
 11302  001D36  0E01               	movlw	1
 11303  001D38  0100               	movlb	0	; () banked
 11304  001D3A  6FED               	movwf	___awmod@counter& (0+255),b
 11305  001D3C  D006               	goto	l8650
 11306  001D3E                     l8648:
 11307                           
 11308                           ; BSR set to: 0
 11309  001D3E  0100               	movlb	0	; () banked
 11310  001D40  90D8               	bcf	status,0,c
 11311  001D42  37EB               	rlcf	___awmod@divisor& (0+255),f,b
 11312  001D44  37EC               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11313  001D46  0100               	movlb	0	; () banked
 11314  001D48  2BED               	incf	___awmod@counter& (0+255),f,b
 11315  001D4A                     l8650:
 11316                           
 11317                           ; BSR set to: 0
 11318  001D4A  0100               	movlb	0	; () banked
 11319  001D4C  AFEC               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11320  001D4E  D7F7               	goto	l8648
 11321  001D50                     l8652:
 11322                           
 11323                           ; BSR set to: 0
 11324  001D50  0100               	movlb	0	; () banked
 11325  001D52  51EB               	movf	___awmod@divisor& (0+255),w,b
 11326  001D54  0100               	movlb	0	; () banked
 11327  001D56  5DE9               	subwf	___awmod@dividend& (0+255),w,b
 11328  001D58  0100               	movlb	0	; () banked
 11329  001D5A  51EC               	movf	(___awmod@divisor+1)& (0+255),w,b
 11330  001D5C  0100               	movlb	0	; () banked
 11331  001D5E  59EA               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11332  001D60  A0D8               	btfss	status,0,c
 11333  001D62  D008               	goto	l8656
 11334                           
 11335                           ; BSR set to: 0
 11336  001D64  0100               	movlb	0	; () banked
 11337  001D66  51EB               	movf	___awmod@divisor& (0+255),w,b
 11338  001D68  0100               	movlb	0	; () banked
 11339  001D6A  5FE9               	subwf	___awmod@dividend& (0+255),f,b
 11340  001D6C  0100               	movlb	0	; () banked
 11341  001D6E  51EC               	movf	(___awmod@divisor+1)& (0+255),w,b
 11342  001D70  0100               	movlb	0	; () banked
 11343  001D72  5BEA               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11344  001D74                     l8656:
 11345                           
 11346                           ; BSR set to: 0
 11347  001D74  0100               	movlb	0	; () banked
 11348  001D76  90D8               	bcf	status,0,c
 11349  001D78  33EC               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11350  001D7A  33EB               	rrcf	___awmod@divisor& (0+255),f,b
 11351                           
 11352                           ; BSR set to: 0
 11353  001D7C  0100               	movlb	0	; () banked
 11354  001D7E  2FED               	decfsz	___awmod@counter& (0+255),f,b
 11355  001D80  D7E7               	goto	l8652
 11356  001D82                     l8660:
 11357                           
 11358                           ; BSR set to: 0
 11359  001D82  0100               	movlb	0	; () banked
 11360  001D84  51EE               	movf	___awmod@sign& (0+255),w,b
 11361  001D86  0100               	movlb	0	; () banked
 11362  001D88  B4D8               	btfsc	status,2,c
 11363  001D8A  D005               	goto	l8664
 11364                           
 11365                           ; BSR set to: 0
 11366  001D8C  0100               	movlb	0	; () banked
 11367  001D8E  6DE9               	negf	___awmod@dividend& (0+255),b
 11368  001D90  1FEA               	comf	(___awmod@dividend+1)& (0+255),f,b
 11369  001D92  B0D8               	btfsc	status,0,c
 11370  001D94  2BEA               	incf	(___awmod@dividend+1)& (0+255),f,b
 11371  001D96                     l8664:
 11372                           
 11373                           ; BSR set to: 0
 11374  001D96  C0E9  F0E9         	movff	___awmod@dividend,?___awmod
 11375  001D9A  C0EA  F0EA         	movff	___awmod@dividend+1,?___awmod+1
 11376  001D9E  0012               	return	
 11377  001DA0                     __end_of___awmod:
 11378                           	opt stack 0
 11379                           tblptru	equ	0xFF8
 11380                           tblptrh	equ	0xFF7
 11381                           tblptrl	equ	0xFF6
 11382                           tablat	equ	0xFF5
 11383                           prodh	equ	0xFF4
 11384                           prodl	equ	0xFF3
 11385                           intcon	equ	0xFF2
 11386                           indf0	equ	0xFEF
 11387                           postinc0	equ	0xFEE
 11388                           fsr0h	equ	0xFEA
 11389                           fsr0l	equ	0xFE9
 11390                           wreg	equ	0xFE8
 11391                           postdec1	equ	0xFE5
 11392                           plusw1	equ	0xFE3
 11393                           fsr1h	equ	0xFE2
 11394                           fsr1l	equ	0xFE1
 11395                           indf2	equ	0xFDF
 11396                           postinc2	equ	0xFDE
 11397                           postdec2	equ	0xFDD
 11398                           plusw2	equ	0xFDB
 11399                           fsr2h	equ	0xFDA
 11400                           fsr2l	equ	0xFD9
 11401                           status	equ	0xFD8
 11402                           
 11403 ;; *************** function ___awdiv *****************
 11404 ;; Defined at:
 11405 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  dividend        2    0[BANK0 ] int 
 11408 ;;  divisor         2    2[BANK0 ] int 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  quotient        2    6[BANK0 ] int 
 11411 ;;  sign            1    5[BANK0 ] unsigned char 
 11412 ;;  counter         1    4[BANK0 ] unsigned char 
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  2    0[BANK0 ] int 
 11415 ;; Registers used:
 11416 ;;		wreg, status,2, status,0
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11426 ;;Total ram usage:        8 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    4
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_m_int16_2_str_4
 11433 ;;		_lcd_set_com_seg
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           	psect	text66
 11438  001972                     __ptext66:
 11439                           	opt stack 0
 11440  001972                     ___awdiv:
 11441                           	opt stack 21
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;incstack = 0
 11445  001972  0E00               	movlw	0
 11446  001974  0100               	movlb	0	; () banked
 11447  001976  6FEE               	movwf	___awdiv@sign& (0+255),b
 11448                           
 11449                           ; BSR set to: 0
 11450  001978  0100               	movlb	0	; () banked
 11451  00197A  AFEC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11452  00197C  D008               	goto	l8212
 11453                           
 11454                           ; BSR set to: 0
 11455  00197E  0100               	movlb	0	; () banked
 11456  001980  6DEB               	negf	___awdiv@divisor& (0+255),b
 11457  001982  1FEC               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11458  001984  B0D8               	btfsc	status,0,c
 11459  001986  2BEC               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11460                           
 11461                           ; BSR set to: 0
 11462  001988  0E01               	movlw	1
 11463  00198A  0100               	movlb	0	; () banked
 11464  00198C  6FEE               	movwf	___awdiv@sign& (0+255),b
 11465  00198E                     l8212:
 11466                           
 11467                           ; BSR set to: 0
 11468  00198E  0100               	movlb	0	; () banked
 11469  001990  AFEA               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11470  001992  D008               	goto	l8218
 11471                           
 11472                           ; BSR set to: 0
 11473  001994  0100               	movlb	0	; () banked
 11474  001996  6DE9               	negf	___awdiv@dividend& (0+255),b
 11475  001998  1FEA               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11476  00199A  B0D8               	btfsc	status,0,c
 11477  00199C  2BEA               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11478                           
 11479                           ; BSR set to: 0
 11480  00199E  0E01               	movlw	1
 11481  0019A0  0100               	movlb	0	; () banked
 11482  0019A2  1BEE               	xorwf	___awdiv@sign& (0+255),f,b
 11483  0019A4                     l8218:
 11484                           
 11485                           ; BSR set to: 0
 11486  0019A4  0E00               	movlw	0
 11487  0019A6  0100               	movlb	0	; () banked
 11488  0019A8  6FF0               	movwf	(___awdiv@quotient+1)& (0+255),b
 11489  0019AA  0E00               	movlw	0
 11490  0019AC  6FEF               	movwf	___awdiv@quotient& (0+255),b
 11491                           
 11492                           ; BSR set to: 0
 11493  0019AE  0100               	movlb	0	; () banked
 11494  0019B0  51EB               	movf	___awdiv@divisor& (0+255),w,b
 11495  0019B2  0100               	movlb	0	; () banked
 11496  0019B4  11EC               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11497  0019B6  B4D8               	btfsc	status,2,c
 11498  0019B8  D02C               	goto	l8240
 11499                           
 11500                           ; BSR set to: 0
 11501  0019BA  0E01               	movlw	1
 11502  0019BC  0100               	movlb	0	; () banked
 11503  0019BE  6FED               	movwf	___awdiv@counter& (0+255),b
 11504  0019C0  D006               	goto	l8226
 11505  0019C2                     l8224:
 11506                           
 11507                           ; BSR set to: 0
 11508  0019C2  0100               	movlb	0	; () banked
 11509  0019C4  90D8               	bcf	status,0,c
 11510  0019C6  37EB               	rlcf	___awdiv@divisor& (0+255),f,b
 11511  0019C8  37EC               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11512  0019CA  0100               	movlb	0	; () banked
 11513  0019CC  2BED               	incf	___awdiv@counter& (0+255),f,b
 11514  0019CE                     l8226:
 11515                           
 11516                           ; BSR set to: 0
 11517  0019CE  0100               	movlb	0	; () banked
 11518  0019D0  AFEC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11519  0019D2  D7F7               	goto	l8224
 11520  0019D4                     l8228:
 11521                           
 11522                           ; BSR set to: 0
 11523  0019D4  0100               	movlb	0	; () banked
 11524  0019D6  90D8               	bcf	status,0,c
 11525  0019D8  37EF               	rlcf	___awdiv@quotient& (0+255),f,b
 11526  0019DA  37F0               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11527                           
 11528                           ; BSR set to: 0
 11529  0019DC  0100               	movlb	0	; () banked
 11530  0019DE  51EB               	movf	___awdiv@divisor& (0+255),w,b
 11531  0019E0  0100               	movlb	0	; () banked
 11532  0019E2  5DE9               	subwf	___awdiv@dividend& (0+255),w,b
 11533  0019E4  0100               	movlb	0	; () banked
 11534  0019E6  51EC               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11535  0019E8  0100               	movlb	0	; () banked
 11536  0019EA  59EA               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11537  0019EC  A0D8               	btfss	status,0,c
 11538  0019EE  D00A               	goto	l8236
 11539                           
 11540                           ; BSR set to: 0
 11541  0019F0  0100               	movlb	0	; () banked
 11542  0019F2  51EB               	movf	___awdiv@divisor& (0+255),w,b
 11543  0019F4  0100               	movlb	0	; () banked
 11544  0019F6  5FE9               	subwf	___awdiv@dividend& (0+255),f,b
 11545  0019F8  0100               	movlb	0	; () banked
 11546  0019FA  51EC               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11547  0019FC  0100               	movlb	0	; () banked
 11548  0019FE  5BEA               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11549                           
 11550                           ; BSR set to: 0
 11551  001A00  0100               	movlb	0	; () banked
 11552  001A02  81EF               	bsf	___awdiv@quotient& (0+255),0,b
 11553  001A04                     l8236:
 11554                           
 11555                           ; BSR set to: 0
 11556  001A04  0100               	movlb	0	; () banked
 11557  001A06  90D8               	bcf	status,0,c
 11558  001A08  33EC               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11559  001A0A  33EB               	rrcf	___awdiv@divisor& (0+255),f,b
 11560                           
 11561                           ; BSR set to: 0
 11562  001A0C  0100               	movlb	0	; () banked
 11563  001A0E  2FED               	decfsz	___awdiv@counter& (0+255),f,b
 11564  001A10  D7E1               	goto	l8228
 11565  001A12                     l8240:
 11566                           
 11567                           ; BSR set to: 0
 11568  001A12  0100               	movlb	0	; () banked
 11569  001A14  51EE               	movf	___awdiv@sign& (0+255),w,b
 11570  001A16  0100               	movlb	0	; () banked
 11571  001A18  B4D8               	btfsc	status,2,c
 11572  001A1A  D005               	goto	l8244
 11573                           
 11574                           ; BSR set to: 0
 11575  001A1C  0100               	movlb	0	; () banked
 11576  001A1E  6DEF               	negf	___awdiv@quotient& (0+255),b
 11577  001A20  1FF0               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11578  001A22  B0D8               	btfsc	status,0,c
 11579  001A24  2BF0               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11580  001A26                     l8244:
 11581                           
 11582                           ; BSR set to: 0
 11583  001A26  C0EF  F0E9         	movff	___awdiv@quotient,?___awdiv
 11584  001A2A  C0F0  F0EA         	movff	___awdiv@quotient+1,?___awdiv+1
 11585  001A2E  0012               	return	
 11586  001A30                     __end_of___awdiv:
 11587                           	opt stack 0
 11588                           tblptru	equ	0xFF8
 11589                           tblptrh	equ	0xFF7
 11590                           tblptrl	equ	0xFF6
 11591                           tablat	equ	0xFF5
 11592                           prodh	equ	0xFF4
 11593                           prodl	equ	0xFF3
 11594                           intcon	equ	0xFF2
 11595                           indf0	equ	0xFEF
 11596                           postinc0	equ	0xFEE
 11597                           fsr0h	equ	0xFEA
 11598                           fsr0l	equ	0xFE9
 11599                           wreg	equ	0xFE8
 11600                           postdec1	equ	0xFE5
 11601                           plusw1	equ	0xFE3
 11602                           fsr1h	equ	0xFE2
 11603                           fsr1l	equ	0xFE1
 11604                           indf2	equ	0xFDF
 11605                           postinc2	equ	0xFDE
 11606                           postdec2	equ	0xFDD
 11607                           plusw2	equ	0xFDB
 11608                           fsr2h	equ	0xFDA
 11609                           fsr2l	equ	0xFD9
 11610                           status	equ	0xFD8
 11611                           
 11612 ;; *************** function _lcd_disp_refresh *****************
 11613 ;; Defined at:
 11614 ;;		line 547 in file "src/driver/lcd.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;		None
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;		None
 11619 ;; Return value:  Size  Location     Type
 11620 ;;                  1    wreg      void 
 11621 ;; Registers used:
 11622 ;;		None
 11623 ;; Tracked objects:
 11624 ;;		On entry : 0/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;Total ram usage:        0 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:    4
 11635 ;; This function calls:
 11636 ;;		Nothing
 11637 ;; This function is called by:
 11638 ;;		_ui_disp_start_cs600
 11639 ;;		_ui_disp_adj_xfixed_pt
 11640 ;;		_ui_disp_all_on
 11641 ;;		_ui_disp_all_off
 11642 ;;		_ui_disp_rtc_mm_ss
 11643 ;;		_ui_disp_adj_xfloat_pt
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text67
 11648  002904                     __ptext67:
 11649                           	opt stack 0
 11650  002904                     _lcd_disp_refresh:
 11651                           	opt stack 25
 11652                           
 11653                           ;lcd.c: 550: LCDDATA0=pLCD[0];
 11654                           
 11655                           ; BSR set to: 0
 11656                           ;incstack = 0
 11657  002904  C060  FFBB         	movff	_pLCD,4027	;volatile
 11658                           
 11659                           ;lcd.c: 551: LCDDATA1=pLCD[1];
 11660  002908  C061  FFBC         	movff	_pLCD+1,4028	;volatile
 11661                           
 11662                           ;lcd.c: 552: LCDDATA2=pLCD[2];
 11663  00290C  C062  FFBD         	movff	_pLCD+2,4029	;volatile
 11664                           
 11665                           ;lcd.c: 553: LCDDATA3=pLCD[3];
 11666  002910  C063  FFBE         	movff	_pLCD+3,4030	;volatile
 11667                           
 11668                           ;lcd.c: 554: LCDDATA4=pLCD[4];
 11669  002914  C064  FFBF         	movff	_pLCD+4,4031	;volatile
 11670                           
 11671                           ;lcd.c: 555: LCDDATA5=pLCD[5];
 11672  002918  C065  FF6B         	movff	_pLCD+5,3947	;volatile
 11673                           
 11674                           ;lcd.c: 556: LCDDATA6=pLCD[6];
 11675  00291C  C066  FF6C         	movff	_pLCD+6,3948	;volatile
 11676                           
 11677                           ;lcd.c: 557: LCDDATA7=pLCD[7];
 11678  002920  C067  FF6D         	movff	_pLCD+7,3949	;volatile
 11679                           
 11680                           ;lcd.c: 558: LCDDATA8=pLCD[8];
 11681  002924  C068  FF6E         	movff	_pLCD+8,3950	;volatile
 11682                           
 11683                           ;lcd.c: 559: LCDDATA9=pLCD[9];
 11684  002928  C069  FF6F         	movff	_pLCD+9,3951	;volatile
 11685                           
 11686                           ;lcd.c: 561: LCDDATA10=pLCD[10];
 11687  00292C  C06A  FF70         	movff	_pLCD+10,3952	;volatile
 11688                           
 11689                           ;lcd.c: 562: LCDDATA11=pLCD[11];
 11690  002930  C06B  FF71         	movff	_pLCD+11,3953	;volatile
 11691                           
 11692                           ;lcd.c: 563: LCDDATA12=pLCD[12];
 11693  002934  C06C  FF72         	movff	_pLCD+12,3954	;volatile
 11694                           
 11695                           ;lcd.c: 564: LCDDATA13=pLCD[13];
 11696  002938  C06D  FF73         	movff	_pLCD+13,3955	;volatile
 11697                           
 11698                           ;lcd.c: 565: LCDDATA14=pLCD[14];
 11699  00293C  C06E  FF74         	movff	_pLCD+14,3956	;volatile
 11700                           
 11701                           ;lcd.c: 566: LCDDATA15=pLCD[15];
 11702  002940  C06F  FF75         	movff	_pLCD+15,3957	;volatile
 11703                           
 11704                           ;lcd.c: 567: LCDDATA16=pLCD[16];
 11705  002944  C070  FF76         	movff	_pLCD+16,3958	;volatile
 11706                           
 11707                           ;lcd.c: 568: LCDDATA17=pLCD[17];
 11708  002948  C071  FF77         	movff	_pLCD+17,3959	;volatile
 11709                           
 11710                           ;lcd.c: 569: LCDDATA18=pLCD[18];
 11711  00294C  C072  FF78         	movff	_pLCD+18,3960	;volatile
 11712                           
 11713                           ;lcd.c: 570: LCDDATA19=pLCD[19];
 11714  002950  C073  FF79         	movff	_pLCD+19,3961	;volatile
 11715                           
 11716                           ;lcd.c: 572: LCDDATA20=pLCD[20];
 11717  002954  C074  FF7A         	movff	_pLCD+20,3962	;volatile
 11718                           
 11719                           ;lcd.c: 573: LCDDATA21=pLCD[21];
 11720  002958  C075  FF7B         	movff	_pLCD+21,3963	;volatile
 11721                           
 11722                           ;lcd.c: 574: LCDDATA22=pLCD[22];
 11723  00295C  C076  FF7C         	movff	_pLCD+22,3964	;volatile
 11724                           
 11725                           ;lcd.c: 575: LCDDATA23=pLCD[23];
 11726  002960  C077  FF7D         	movff	_pLCD+23,3965	;volatile
 11727  002964  0012               	return		;funcret
 11728  002966                     __end_of_lcd_disp_refresh:
 11729                           	opt stack 0
 11730                           tblptru	equ	0xFF8
 11731                           tblptrh	equ	0xFF7
 11732                           tblptrl	equ	0xFF6
 11733                           tablat	equ	0xFF5
 11734                           prodh	equ	0xFF4
 11735                           prodl	equ	0xFF3
 11736                           intcon	equ	0xFF2
 11737                           indf0	equ	0xFEF
 11738                           postinc0	equ	0xFEE
 11739                           fsr0h	equ	0xFEA
 11740                           fsr0l	equ	0xFE9
 11741                           wreg	equ	0xFE8
 11742                           postdec1	equ	0xFE5
 11743                           plusw1	equ	0xFE3
 11744                           fsr1h	equ	0xFE2
 11745                           fsr1l	equ	0xFE1
 11746                           indf2	equ	0xFDF
 11747                           postinc2	equ	0xFDE
 11748                           postdec2	equ	0xFDD
 11749                           plusw2	equ	0xFDB
 11750                           fsr2h	equ	0xFDA
 11751                           fsr2l	equ	0xFD9
 11752                           status	equ	0xFD8
 11753                           
 11754 ;; *************** function ___x_arrange_str *****************
 11755 ;; Defined at:
 11756 ;;		line 9 in file "src/api/ui.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;  str             2    0[BANK0 ] PTR unsigned char 
 11759 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 11760 ;;  len             1    2[BANK0 ] unsigned char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  i               1    3[BANK0 ] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      void 
 11765 ;; Registers used:
 11766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11772 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;Total ram usage:        4 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:    4
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_ui_disp_adj_xfixed_pt
 11783 ;;		_ui_disp_adj_xfloat_pt
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text68
 11788  002702                     __ptext68:
 11789                           	opt stack 0
 11790  002702                     ___x_arrange_str:
 11791                           	opt stack 21
 11792                           
 11793                           ;ui.c: 11: uint8_t i;
 11794                           ;ui.c: 12: for(i=0;i<len;i++){
 11795                           
 11796                           ;incstack = 0
 11797  002702  0E00               	movlw	0
 11798  002704  0100               	movlb	0	; () banked
 11799  002706  6FEC               	movwf	___x_arrange_str@i& (0+255),b
 11800  002708  D01D               	goto	l8676
 11801  00270A                     l8670:
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;ui.c: 13: if(str[i]=='\0')str[i]=' ';
 11805  00270A  0100               	movlb	0	; () banked
 11806  00270C  51EC               	movf	___x_arrange_str@i& (0+255),w,b
 11807  00270E  0D01               	mullw	1
 11808  002710  50F3               	movf	prodl,w,c
 11809  002712  0100               	movlb	0	; () banked
 11810  002714  25E9               	addwf	___x_arrange_str@str& (0+255),w,b
 11811  002716  6ED9               	movwf	fsr2l,c
 11812  002718  50F4               	movf	prodh,w,c
 11813  00271A  0100               	movlb	0	; () banked
 11814  00271C  21EA               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 11815  00271E  6EDA               	movwf	fsr2h,c
 11816  002720  50DF               	movf	indf2,w,c
 11817  002722  A4D8               	btfss	status,2,c
 11818  002724  D00D               	goto	l8674
 11819                           
 11820                           ; BSR set to: 0
 11821  002726  0100               	movlb	0	; () banked
 11822  002728  51EC               	movf	___x_arrange_str@i& (0+255),w,b
 11823  00272A  0D01               	mullw	1
 11824  00272C  50F3               	movf	prodl,w,c
 11825  00272E  0100               	movlb	0	; () banked
 11826  002730  25E9               	addwf	___x_arrange_str@str& (0+255),w,b
 11827  002732  6ED9               	movwf	fsr2l,c
 11828  002734  50F4               	movf	prodh,w,c
 11829  002736  0100               	movlb	0	; () banked
 11830  002738  21EA               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 11831  00273A  6EDA               	movwf	fsr2h,c
 11832  00273C  0E20               	movlw	32
 11833  00273E  6EDF               	movwf	indf2,c
 11834  002740                     l8674:
 11835                           
 11836                           ; BSR set to: 0
 11837  002740  0100               	movlb	0	; () banked
 11838  002742  2BEC               	incf	___x_arrange_str@i& (0+255),f,b
 11839  002744                     l8676:
 11840                           
 11841                           ; BSR set to: 0
 11842  002744  0100               	movlb	0	; () banked
 11843  002746  51EB               	movf	___x_arrange_str@len& (0+255),w,b
 11844  002748  0100               	movlb	0	; () banked
 11845  00274A  5DEC               	subwf	___x_arrange_str@i& (0+255),w,b
 11846  00274C  A0D8               	btfss	status,0,c
 11847  00274E  D7DD               	goto	l8670
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;ui.c: 14: }
 11851                           ;ui.c: 15: str[i]='\0';
 11852                           
 11853                           ; BSR set to: 0
 11854  002750  0100               	movlb	0	; () banked
 11855  002752  51EC               	movf	___x_arrange_str@i& (0+255),w,b
 11856  002754  0D01               	mullw	1
 11857  002756  50F3               	movf	prodl,w,c
 11858  002758  0100               	movlb	0	; () banked
 11859  00275A  25E9               	addwf	___x_arrange_str@str& (0+255),w,b
 11860  00275C  6ED9               	movwf	fsr2l,c
 11861  00275E  50F4               	movf	prodh,w,c
 11862  002760  0100               	movlb	0	; () banked
 11863  002762  21EA               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 11864  002764  6EDA               	movwf	fsr2h,c
 11865  002766  0E00               	movlw	0
 11866  002768  6EDF               	movwf	indf2,c
 11867                           
 11868                           ; BSR set to: 0
 11869  00276A  0012               	return		;funcret
 11870  00276C                     __end_of___x_arrange_str:
 11871                           	opt stack 0
 11872                           tblptru	equ	0xFF8
 11873                           tblptrh	equ	0xFF7
 11874                           tblptrl	equ	0xFF6
 11875                           tablat	equ	0xFF5
 11876                           prodh	equ	0xFF4
 11877                           prodl	equ	0xFF3
 11878                           intcon	equ	0xFF2
 11879                           indf0	equ	0xFEF
 11880                           postinc0	equ	0xFEE
 11881                           fsr0h	equ	0xFEA
 11882                           fsr0l	equ	0xFE9
 11883                           wreg	equ	0xFE8
 11884                           postdec1	equ	0xFE5
 11885                           plusw1	equ	0xFE3
 11886                           fsr1h	equ	0xFE2
 11887                           fsr1l	equ	0xFE1
 11888                           indf2	equ	0xFDF
 11889                           postinc2	equ	0xFDE
 11890                           postdec2	equ	0xFDD
 11891                           plusw2	equ	0xFDB
 11892                           fsr2h	equ	0xFDA
 11893                           fsr2l	equ	0xFD9
 11894                           status	equ	0xFD8
 11895                           
 11896 ;; *************** function _sample_pr_chip_comm *****************
 11897 ;; Defined at:
 11898 ;;		line 151 in file "src/api/sample.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;		None
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;  t16             2   17[BANK1 ] int 
 11903 ;;  ret             1   16[BANK1 ] unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      unsigned char 
 11906 ;; Registers used:
 11907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11917 ;;Total ram usage:        3 bytes
 11918 ;; Hardware stack levels used:    1
 11919 ;; Hardware stack levels required when called:    9
 11920 ;; This function calls:
 11921 ;;		___x_sample_fifo
 11922 ;;		_ads1115_read_conversion
 11923 ;;		_ads1115_set_mux
 11924 ;;		_ads1115_start_conversion
 11925 ;;		_delay_ms
 11926 ;; This function is called by:
 11927 ;;		_event_process_rtc
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           	psect	text69
 11932  001004                     __ptext69:
 11933                           	opt stack 0
 11934  001004                     _sample_pr_chip_comm:
 11935                           	opt stack 19
 11936                           
 11937                           ;sample.c: 153: uint8_t ret=0;
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;incstack = 0
 11941  001004  0E00               	movlw	0
 11942  001006  0101               	movlb	1	; () banked
 11943  001008  6F6E               	movwf	sample_pr_chip_comm@ret& (0+255),b
 11944                           
 11945                           ; BSR set to: 1
 11946                           ;sample.c: 154: int16_t t16;
 11947                           ;sample.c: 155: commonSampleTimer++;
 11948  00100A  0100               	movlb	0	; () banked
 11949  00100C  2BCF               	incf	_commonSampleTimer& (0+255),f,b	;volatile
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;sample.c: 156: if(commonSampleTimer>=60){
 11953  00100E  0E3B               	movlw	59
 11954  001010  0100               	movlb	0	; () banked
 11955  001012  65CF               	cpfsgt	_commonSampleTimer& (0+255),b	;volatile
 11956  001014  0012               	return	
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;sample.c: 157: commonSampleTimer=0;
 11960  001016  0E00               	movlw	0
 11961  001018  0100               	movlb	0	; () banked
 11962  00101A  6FCF               	movwf	_commonSampleTimer& (0+255),b	;volatile
 11963                           
 11964                           ; BSR set to: 0
 11965                           
 11966                           ; BSR set to: 0
 11967                           
 11968                           ; BSR set to: 0
 11969                           
 11970                           ;sample.c: 158: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while
      +                          (0);;
 11971  00101C  9893               	bcf	3987,4,c	;volatile
 11972                           
 11973                           ; BSR set to: 0
 11974                           
 11975                           ; BSR set to: 0
 11976                           
 11977                           ; BSR set to: 0
 11978  00101E  888A               	bsf	3978,4,c	;volatile
 11979                           
 11980                           ; BSR set to: 0
 11981                           
 11982                           ; BSR set to: 0
 11983                           
 11984                           ; BSR set to: 0
 11985                           
 11986                           ;sample.c: 159: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC |= (1<<5);}while(0);; }while
      +                          (0);;
 11987                           
 11988                           ; BSR set to: 0
 11989                           
 11990                           ; BSR set to: 0
 11991  001020  9A94               	bcf	3988,5,c	;volatile
 11992                           
 11993                           ; BSR set to: 0
 11994                           
 11995                           ; BSR set to: 0
 11996                           
 11997                           ; BSR set to: 0
 11998  001022  8A8B               	bsf	3979,5,c	;volatile
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;sample.c: 160: delay_ms(20);
 12002                           
 12003                           ; BSR set to: 0
 12004                           
 12005                           ; BSR set to: 0
 12006  001024  0E00               	movlw	0
 12007  001026  0100               	movlb	0	; () banked
 12008  001028  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 12009  00102A  0E14               	movlw	20
 12010  00102C  6FED               	movwf	delay_ms@dly& (0+255),b
 12011  00102E  EC0F  F019         	call	_delay_ms	;wreg free
 12012                           
 12013                           ;sample.c: 161: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_SINGLE_0);
 12014  001032  C0B4  F0E9         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 12015  001036  C0B5  F0EA         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 12016  00103A  0E04               	movlw	4
 12017  00103C  0100               	movlb	0	; () banked
 12018  00103E  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
 12019  001040  ECFB  F018         	call	_ads1115_set_mux	;wreg free
 12020                           
 12021                           ;sample.c: 162: ads1115_start_conversion(pAds1115PrObj);
 12022  001044  C0B4  F0F1         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 12023  001048  C0B5  F0F2         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 12024  00104C  ECD2  F018         	call	_ads1115_start_conversion	;wreg free
 12025                           
 12026                           ;sample.c: 163: delay_ms(20);
 12027  001050  0E00               	movlw	0
 12028  001052  0100               	movlb	0	; () banked
 12029  001054  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 12030  001056  0E14               	movlw	20
 12031  001058  6FED               	movwf	delay_ms@dly& (0+255),b
 12032  00105A  EC0F  F019         	call	_delay_ms	;wreg free
 12033                           
 12034                           ;sample.c: 164: t16=ads1115_read_conversion(pAds1115PrObj);
 12035  00105E  C0B4  F0F3         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 12036  001062  C0B5  F0F4         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 12037  001066  ECED  F015         	call	_ads1115_read_conversion	;wreg free
 12038  00106A  C0F3  F16F         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 12039  00106E  C0F4  F170         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 12040                           
 12041                           ;sample.c: 165: __x_sample_fifo(sampBufPt100ExA,t16,sizeof(sampBufPt100ExA)/sizeof(int16
      +                          _t));
 12042  001072  0ED9               	movlw	low _sampBufPt100ExA
 12043  001074  0101               	movlb	1	; () banked
 12044  001076  6F5E               	movwf	___x_sample_fifo@buf& (0+255),b
 12045  001078  0E00               	movlw	high _sampBufPt100ExA
 12046  00107A  0101               	movlb	1	; () banked
 12047  00107C  6F5F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 12048  00107E  C16F  F160         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 12049  001082  C170  F161         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 12050  001086  0E04               	movlw	4
 12051  001088  0101               	movlb	1	; () banked
 12052  00108A  6F62               	movwf	___x_sample_fifo@len& (0+255),b
 12053  00108C  ECF4  F005         	call	___x_sample_fifo	;wreg free
 12054                           
 12055                           ;sample.c: 168: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_SINGLE_0);
 12056  001090  C0B4  F0E9         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 12057  001094  C0B5  F0EA         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 12058  001098  0E04               	movlw	4
 12059  00109A  0100               	movlb	0	; () banked
 12060  00109C  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
 12061  00109E  ECFB  F018         	call	_ads1115_set_mux	;wreg free
 12062                           
 12063                           ;sample.c: 169: ads1115_start_conversion(pAds1115PrObj);
 12064  0010A2  C0B4  F0F1         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 12065  0010A6  C0B5  F0F2         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 12066  0010AA  ECD2  F018         	call	_ads1115_start_conversion	;wreg free
 12067                           
 12068                           ;sample.c: 170: delay_ms(20);
 12069  0010AE  0E00               	movlw	0
 12070  0010B0  0100               	movlb	0	; () banked
 12071  0010B2  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 12072  0010B4  0E14               	movlw	20
 12073  0010B6  6FED               	movwf	delay_ms@dly& (0+255),b
 12074  0010B8  EC0F  F019         	call	_delay_ms	;wreg free
 12075                           
 12076                           ;sample.c: 171: t16=ads1115_read_conversion(pAds1115PrObj);
 12077  0010BC  C0B4  F0F3         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 12078  0010C0  C0B5  F0F4         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 12079  0010C4  ECED  F015         	call	_ads1115_read_conversion	;wreg free
 12080  0010C8  C0F3  F16F         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 12081  0010CC  C0F4  F170         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 12082                           
 12083                           ;sample.c: 172: __x_sample_fifo(sampBufPt100ExB,t16,sizeof(sampBufPt100ExB)/sizeof(int16
      +                          _t));
 12084  0010D0  0ED1               	movlw	low _sampBufPt100ExB
 12085  0010D2  0101               	movlb	1	; () banked
 12086  0010D4  6F5E               	movwf	___x_sample_fifo@buf& (0+255),b
 12087  0010D6  0E00               	movlw	high _sampBufPt100ExB
 12088  0010D8  0101               	movlb	1	; () banked
 12089  0010DA  6F5F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 12090  0010DC  C16F  F160         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 12091  0010E0  C170  F161         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 12092  0010E4  0E04               	movlw	4
 12093  0010E6  0101               	movlb	1	; () banked
 12094  0010E8  6F62               	movwf	___x_sample_fifo@len& (0+255),b
 12095  0010EA  ECF4  F005         	call	___x_sample_fifo	;wreg free
 12096                           
 12097                           ;sample.c: 175: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_DIFF_2_3);
 12098  0010EE  C0B4  F0E9         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 12099  0010F2  C0B5  F0EA         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 12100  0010F6  0E03               	movlw	3
 12101  0010F8  0100               	movlb	0	; () banked
 12102  0010FA  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
 12103  0010FC  ECFB  F018         	call	_ads1115_set_mux	;wreg free
 12104                           
 12105                           ;sample.c: 176: ads1115_start_conversion(pAds1115PrObj);
 12106  001100  C0B4  F0F1         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 12107  001104  C0B5  F0F2         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 12108  001108  ECD2  F018         	call	_ads1115_start_conversion	;wreg free
 12109                           
 12110                           ;sample.c: 177: delay_ms(20);
 12111  00110C  0E00               	movlw	0
 12112  00110E  0100               	movlb	0	; () banked
 12113  001110  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 12114  001112  0E14               	movlw	20
 12115  001114  6FED               	movwf	delay_ms@dly& (0+255),b
 12116  001116  EC0F  F019         	call	_delay_ms	;wreg free
 12117                           
 12118                           ;sample.c: 178: t16=ads1115_read_conversion(pAds1115PrObj);
 12119  00111A  C0B4  F0F3         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 12120  00111E  C0B5  F0F4         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 12121  001122  ECED  F015         	call	_ads1115_read_conversion	;wreg free
 12122  001126  C0F3  F16F         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 12123  00112A  C0F4  F170         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 12124                           
 12125                           ;sample.c: 179: __x_sample_fifo(sampBufPr,t16,sizeof(sampBufPr)/sizeof(int16_t));
 12126  00112E  0E56               	movlw	low _sampBufPr
 12127  001130  0101               	movlb	1	; () banked
 12128  001132  6F5E               	movwf	___x_sample_fifo@buf& (0+255),b
 12129  001134  0E01               	movlw	high _sampBufPr
 12130  001136  0101               	movlb	1	; () banked
 12131  001138  6F5F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 12132  00113A  C16F  F160         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 12133  00113E  C170  F161         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 12134  001142  0E04               	movlw	4
 12135  001144  0101               	movlb	1	; () banked
 12136  001146  6F62               	movwf	___x_sample_fifo@len& (0+255),b
 12137  001148  ECF4  F005         	call	___x_sample_fifo	;wreg free
 12138                           
 12139                           ;sample.c: 181: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 12140  00114C  9A94               	bcf	3988,5,c	;volatile
 12141  00114E  9A8B               	bcf	3979,5,c	;volatile
 12142                           
 12143                           ;sample.c: 182: return 1;
 12144                           ;	Return value of _sample_pr_chip_comm is never used
 12145  001150  0012               	return	
 12146  001152                     __end_of_sample_pr_chip_comm:
 12147                           	opt stack 0
 12148                           tblptru	equ	0xFF8
 12149                           tblptrh	equ	0xFF7
 12150                           tblptrl	equ	0xFF6
 12151                           tablat	equ	0xFF5
 12152                           prodh	equ	0xFF4
 12153                           prodl	equ	0xFF3
 12154                           intcon	equ	0xFF2
 12155                           indf0	equ	0xFEF
 12156                           postinc0	equ	0xFEE
 12157                           fsr0h	equ	0xFEA
 12158                           fsr0l	equ	0xFE9
 12159                           wreg	equ	0xFE8
 12160                           postdec1	equ	0xFE5
 12161                           plusw1	equ	0xFE3
 12162                           fsr1h	equ	0xFE2
 12163                           fsr1l	equ	0xFE1
 12164                           indf2	equ	0xFDF
 12165                           postinc2	equ	0xFDE
 12166                           postdec2	equ	0xFDD
 12167                           plusw2	equ	0xFDB
 12168                           fsr2h	equ	0xFDA
 12169                           fsr2l	equ	0xFD9
 12170                           status	equ	0xFD8
 12171                           
 12172 ;; *************** function ___x_sample_fifo *****************
 12173 ;; Defined at:
 12174 ;;		line 49 in file "src/api/sample.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  buf             2    0[BANK1 ] PTR int 
 12177 ;;		 -> sampBufPr(8), sampBufPt100ExB(8), sampBufPt100ExA(8), 
 12178 ;;  x               2    2[BANK1 ] int 
 12179 ;;  len             1    4[BANK1 ] unsigned char 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  ret             4   11[BANK1 ] long 
 12182 ;;  i               1   15[BANK1 ] unsigned char 
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  2    0[BANK1 ] int 
 12185 ;; Registers used:
 12186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12192 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;Total ram usage:       16 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:    5
 12199 ;; This function calls:
 12200 ;;		___aldiv
 12201 ;; This function is called by:
 12202 ;;		_sample_pr_chip_comm
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text70
 12207  000BE8                     __ptext70:
 12208                           	opt stack 0
 12209  000BE8                     ___x_sample_fifo:
 12210                           	opt stack 22
 12211                           
 12212                           ;sample.c: 51: int32_t ret=0;
 12213                           
 12214                           ;incstack = 0
 12215  000BE8  0E00               	movlw	0
 12216  000BEA  0101               	movlb	1	; () banked
 12217  000BEC  6F69               	movwf	___x_sample_fifo@ret& (0+255),b
 12218  000BEE  0E00               	movlw	0
 12219  000BF0  6F6A               	movwf	(___x_sample_fifo@ret+1)& (0+255),b
 12220  000BF2  0E00               	movlw	0
 12221  000BF4  6F6B               	movwf	(___x_sample_fifo@ret+2)& (0+255),b
 12222  000BF6  0E00               	movlw	0
 12223  000BF8  6F6C               	movwf	(___x_sample_fifo@ret+3)& (0+255),b
 12224                           
 12225                           ; BSR set to: 1
 12226                           ;sample.c: 52: uint8_t i;
 12227                           ;sample.c: 53: for(i=len-1;i>0;i--){
 12228  000BFA  0101               	movlb	1	; () banked
 12229  000BFC  0562               	decf	___x_sample_fifo@len& (0+255),w,b
 12230  000BFE  0101               	movlb	1	; () banked
 12231  000C00  6F6D               	movwf	___x_sample_fifo@i& (0+255),b
 12232  000C02                     l9206:
 12233                           
 12234                           ; BSR set to: 1
 12235  000C02  0101               	movlb	1	; () banked
 12236  000C04  516D               	movf	___x_sample_fifo@i& (0+255),w,b
 12237  000C06  0101               	movlb	1	; () banked
 12238  000C08  B4D8               	btfsc	status,2,c
 12239  000C0A  D05C               	goto	l9218
 12240                           
 12241                           ; BSR set to: 1
 12242                           ;sample.c: 54: buf[i]=buf[i-1];
 12243                           
 12244                           ; BSR set to: 1
 12245                           
 12246                           ; BSR set to: 1
 12247  000C0C  0EFE               	movlw	254
 12248  000C0E  0101               	movlb	1	; () banked
 12249  000C10  6F63               	movwf	??___x_sample_fifo& (0+255),b
 12250  000C12  0EFF               	movlw	255
 12251  000C14  0101               	movlb	1	; () banked
 12252  000C16  6F64               	movwf	(??___x_sample_fifo+1)& (0+255),b
 12253  000C18  0101               	movlb	1	; () banked
 12254  000C1A  516D               	movf	___x_sample_fifo@i& (0+255),w,b
 12255  000C1C  0101               	movlb	1	; () banked
 12256  000C1E  6F65               	movwf	(??___x_sample_fifo+2)& (0+255),b
 12257  000C20  6B66               	clrf	(??___x_sample_fifo+3)& (0+255),b
 12258  000C22  90D8               	bcf	status,0,c
 12259  000C24  0101               	movlb	1	; () banked
 12260  000C26  3765               	rlcf	(??___x_sample_fifo+2)& (0+255),f,b
 12261  000C28  3766               	rlcf	(??___x_sample_fifo+3)& (0+255),f,b
 12262  000C2A  0101               	movlb	1	; () banked
 12263  000C2C  5163               	movf	??___x_sample_fifo& (0+255),w,b
 12264  000C2E  0101               	movlb	1	; () banked
 12265  000C30  2765               	addwf	(??___x_sample_fifo+2)& (0+255),f,b
 12266  000C32  0101               	movlb	1	; () banked
 12267  000C34  5164               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 12268  000C36  0101               	movlb	1	; () banked
 12269  000C38  2366               	addwfc	(??___x_sample_fifo+3)& (0+255),f,b
 12270  000C3A  0101               	movlb	1	; () banked
 12271  000C3C  5165               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 12272  000C3E  0101               	movlb	1	; () banked
 12273  000C40  255E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 12274  000C42  6ED9               	movwf	fsr2l,c
 12275  000C44  0101               	movlb	1	; () banked
 12276  000C46  5166               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 12277  000C48  0101               	movlb	1	; () banked
 12278  000C4A  215F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 12279  000C4C  6EDA               	movwf	fsr2h,c
 12280  000C4E  0101               	movlb	1	; () banked
 12281  000C50  516D               	movf	___x_sample_fifo@i& (0+255),w,b
 12282  000C52  0D02               	mullw	2
 12283  000C54  50F3               	movf	prodl,w,c
 12284  000C56  0101               	movlb	1	; () banked
 12285  000C58  255E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 12286  000C5A  6EE1               	movwf	fsr1l,c
 12287  000C5C  50F4               	movf	prodh,w,c
 12288  000C5E  0101               	movlb	1	; () banked
 12289  000C60  215F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 12290  000C62  6EE2               	movwf	fsr1h,c
 12291  000C64  CFDE FFE6          	movff	postinc2,postinc1
 12292  000C68  CFDD FFE5          	movff	postdec2,postdec1
 12293                           
 12294                           ; BSR set to: 1
 12295                           ;sample.c: 55: ret+=buf[i];
 12296  000C6C  0101               	movlb	1	; () banked
 12297  000C6E  516D               	movf	___x_sample_fifo@i& (0+255),w,b
 12298  000C70  0D02               	mullw	2
 12299  000C72  50F3               	movf	prodl,w,c
 12300  000C74  0101               	movlb	1	; () banked
 12301  000C76  255E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 12302  000C78  6ED9               	movwf	fsr2l,c
 12303  000C7A  50F4               	movf	prodh,w,c
 12304  000C7C  0101               	movlb	1	; () banked
 12305  000C7E  215F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 12306  000C80  6EDA               	movwf	fsr2h,c
 12307  000C82  CFDE F163          	movff	postinc2,??___x_sample_fifo
 12308  000C86  CFDD F164          	movff	postdec2,??___x_sample_fifo+1
 12309  000C8A  C163  F165         	movff	??___x_sample_fifo,??___x_sample_fifo+2
 12310  000C8E  C164  F166         	movff	??___x_sample_fifo+1,??___x_sample_fifo+3
 12311  000C92  0E00               	movlw	0
 12312  000C94  0101               	movlb	1	; () banked
 12313  000C96  BF66               	btfsc	(??___x_sample_fifo+3)& (0+255),7,b
 12314  000C98  0EFF               	movlw	255
 12315  000C9A  6F67               	movwf	(??___x_sample_fifo+4)& (0+255),b
 12316  000C9C  6F68               	movwf	(??___x_sample_fifo+5)& (0+255),b
 12317  000C9E  0101               	movlb	1	; () banked
 12318  000CA0  5165               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 12319  000CA2  0101               	movlb	1	; () banked
 12320  000CA4  2769               	addwf	___x_sample_fifo@ret& (0+255),f,b
 12321  000CA6  0101               	movlb	1	; () banked
 12322  000CA8  5166               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 12323  000CAA  0101               	movlb	1	; () banked
 12324  000CAC  236A               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 12325  000CAE  0101               	movlb	1	; () banked
 12326  000CB0  5167               	movf	(??___x_sample_fifo+4)& (0+255),w,b
 12327  000CB2  0101               	movlb	1	; () banked
 12328  000CB4  236B               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 12329  000CB6  0101               	movlb	1	; () banked
 12330  000CB8  5168               	movf	(??___x_sample_fifo+5)& (0+255),w,b
 12331  000CBA  0101               	movlb	1	; () banked
 12332  000CBC  236C               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 12333                           
 12334                           ; BSR set to: 1
 12335  000CBE  0101               	movlb	1	; () banked
 12336  000CC0  076D               	decf	___x_sample_fifo@i& (0+255),f,b
 12337  000CC2  D79F               	goto	l9206
 12338  000CC4                     l9218:
 12339                           
 12340                           ; BSR set to: 1
 12341                           ;sample.c: 56: }
 12342                           ;sample.c: 57: buf[i]=x;
 12343  000CC4  0101               	movlb	1	; () banked
 12344  000CC6  516D               	movf	___x_sample_fifo@i& (0+255),w,b
 12345  000CC8  0D02               	mullw	2
 12346  000CCA  50F3               	movf	prodl,w,c
 12347  000CCC  0101               	movlb	1	; () banked
 12348  000CCE  255E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 12349  000CD0  6ED9               	movwf	fsr2l,c
 12350  000CD2  50F4               	movf	prodh,w,c
 12351  000CD4  0101               	movlb	1	; () banked
 12352  000CD6  215F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 12353  000CD8  6EDA               	movwf	fsr2h,c
 12354  000CDA  C160  FFDE         	movff	___x_sample_fifo@x,postinc2
 12355  000CDE  C161  FFDD         	movff	___x_sample_fifo@x+1,postdec2
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;sample.c: 58: ret+=x;
 12359  000CE2  C160  F163         	movff	___x_sample_fifo@x,??___x_sample_fifo
 12360  000CE6  C161  F164         	movff	___x_sample_fifo@x+1,??___x_sample_fifo+1
 12361  000CEA  0E00               	movlw	0
 12362  000CEC  0101               	movlb	1	; () banked
 12363  000CEE  BF64               	btfsc	(??___x_sample_fifo+1)& (0+255),7,b
 12364  000CF0  0EFF               	movlw	255
 12365  000CF2  6F65               	movwf	(??___x_sample_fifo+2)& (0+255),b
 12366  000CF4  6F66               	movwf	(??___x_sample_fifo+3)& (0+255),b
 12367  000CF6  0101               	movlb	1	; () banked
 12368  000CF8  5163               	movf	??___x_sample_fifo& (0+255),w,b
 12369  000CFA  0101               	movlb	1	; () banked
 12370  000CFC  2769               	addwf	___x_sample_fifo@ret& (0+255),f,b
 12371  000CFE  0101               	movlb	1	; () banked
 12372  000D00  5164               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 12373  000D02  0101               	movlb	1	; () banked
 12374  000D04  236A               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 12375  000D06  0101               	movlb	1	; () banked
 12376  000D08  5165               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 12377  000D0A  0101               	movlb	1	; () banked
 12378  000D0C  236B               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 12379  000D0E  0101               	movlb	1	; () banked
 12380  000D10  5166               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 12381  000D12  0101               	movlb	1	; () banked
 12382  000D14  236C               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 12383                           
 12384                           ; BSR set to: 1
 12385                           ;sample.c: 59: ret/=len;
 12386  000D16  C169  F0E9         	movff	___x_sample_fifo@ret,___aldiv@dividend
 12387  000D1A  C16A  F0EA         	movff	___x_sample_fifo@ret+1,___aldiv@dividend+1
 12388  000D1E  C16B  F0EB         	movff	___x_sample_fifo@ret+2,___aldiv@dividend+2
 12389  000D22  C16C  F0EC         	movff	___x_sample_fifo@ret+3,___aldiv@dividend+3
 12390  000D26  0101               	movlb	1	; () banked
 12391  000D28  5162               	movf	___x_sample_fifo@len& (0+255),w,b
 12392  000D2A  0100               	movlb	0	; () banked
 12393  000D2C  6FED               	movwf	___aldiv@divisor& (0+255),b
 12394  000D2E  6BEE               	clrf	(___aldiv@divisor+1)& (0+255),b
 12395  000D30  6BEF               	clrf	(___aldiv@divisor+2)& (0+255),b
 12396  000D32  6BF0               	clrf	(___aldiv@divisor+3)& (0+255),b
 12397  000D34  ECA9  F008         	call	___aldiv	;wreg free
 12398  000D38  C0E9  F169         	movff	?___aldiv,___x_sample_fifo@ret
 12399  000D3C  C0EA  F16A         	movff	?___aldiv+1,___x_sample_fifo@ret+1
 12400  000D40  C0EB  F16B         	movff	?___aldiv+2,___x_sample_fifo@ret+2
 12401  000D44  C0EC  F16C         	movff	?___aldiv+3,___x_sample_fifo@ret+3
 12402  000D48  0012               	return	
 12403  000D4A                     __end_of___x_sample_fifo:
 12404                           	opt stack 0
 12405                           tblptru	equ	0xFF8
 12406                           tblptrh	equ	0xFF7
 12407                           tblptrl	equ	0xFF6
 12408                           tablat	equ	0xFF5
 12409                           prodh	equ	0xFF4
 12410                           prodl	equ	0xFF3
 12411                           intcon	equ	0xFF2
 12412                           indf0	equ	0xFEF
 12413                           postinc0	equ	0xFEE
 12414                           fsr0h	equ	0xFEA
 12415                           fsr0l	equ	0xFE9
 12416                           wreg	equ	0xFE8
 12417                           postinc1	equ	0xFE6
 12418                           postdec1	equ	0xFE5
 12419                           plusw1	equ	0xFE3
 12420                           fsr1h	equ	0xFE2
 12421                           fsr1l	equ	0xFE1
 12422                           indf2	equ	0xFDF
 12423                           postinc2	equ	0xFDE
 12424                           postdec2	equ	0xFDD
 12425                           plusw2	equ	0xFDB
 12426                           fsr2h	equ	0xFDA
 12427                           fsr2l	equ	0xFD9
 12428                           status	equ	0xFD8
 12429                           
 12430 ;; *************** function _sample_in_soc_adc_ch *****************
 12431 ;; Defined at:
 12432 ;;		line 187 in file "src/api/sample.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;  ret             4    2[BANK1 ] unsigned long 
 12437 ;;  t16             2    0[BANK1 ] unsigned int 
 12438 ;;  i               1    6[BANK1 ] unsigned char 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      unsigned char 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Totals:         0       4       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;Total ram usage:       11 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    6
 12455 ;; This function calls:
 12456 ;;		_in_adc_init
 12457 ;;		_in_adc_start_and_read
 12458 ;; This function is called by:
 12459 ;;		_event_process_rtc
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text71
 12464  000810                     __ptext71:
 12465                           	opt stack 0
 12466  000810                     _sample_in_soc_adc_ch:
 12467                           	opt stack 22
 12468                           
 12469                           ;sample.c: 189: uint8_t i;
 12470                           ;sample.c: 190: uint16_t t16;
 12471                           ;sample.c: 191: uint32_t ret=0;
 12472                           
 12473                           ;incstack = 0
 12474  000810  0E00               	movlw	0
 12475  000812  0101               	movlb	1	; () banked
 12476  000814  6F60               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12477  000816  0E00               	movlw	0
 12478  000818  6F61               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12479  00081A  0E00               	movlw	0
 12480  00081C  6F62               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12481  00081E  0E00               	movlw	0
 12482  000820  6F63               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12483                           
 12484                           ; BSR set to: 1
 12485                           ;sample.c: 192: inSocSampleTimer++;
 12486  000822  2A14               	incf	_inSocSampleTimer,f,c	;volatile
 12487                           
 12488                           ; BSR set to: 1
 12489                           ;sample.c: 193: if(inSocSampleTimer>=60){
 12490  000824  0E3B               	movlw	59
 12491  000826  6414               	cpfsgt	_inSocSampleTimer,c	;volatile
 12492  000828  0012               	return	
 12493                           
 12494                           ; BSR set to: 1
 12495                           ;sample.c: 194: inSocSampleTimer=0;
 12496  00082A  0E00               	movlw	0
 12497  00082C  6E14               	movwf	_inSocSampleTimer,c	;volatile
 12498                           
 12499                           ; BSR set to: 1
 12500                           ;sample.c: 196: in_adc_init();
 12501  00082E  EC34  F019         	call	_in_adc_init	;wreg free
 12502                           
 12503                           ;sample.c: 197: ret=0;
 12504  000832  0E00               	movlw	0
 12505  000834  0101               	movlb	1	; () banked
 12506  000836  6F60               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12507  000838  0E00               	movlw	0
 12508  00083A  6F61               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12509  00083C  0E00               	movlw	0
 12510  00083E  6F62               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12511  000840  0E00               	movlw	0
 12512  000842  6F63               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12513                           
 12514                           ; BSR set to: 1
 12515                           ;sample.c: 198: for(i=0;i<4;i++){
 12516  000844  0E00               	movlw	0
 12517  000846  0101               	movlb	1	; () banked
 12518  000848  6F64               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 12519  00084A                     l9574:
 12520                           
 12521                           ; BSR set to: 1
 12522  00084A  0E03               	movlw	3
 12523  00084C  0101               	movlb	1	; () banked
 12524  00084E  6564               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 12525  000850  D001               	goto	l9578
 12526  000852  D018               	goto	l9586
 12527  000854                     l9578:
 12528                           
 12529                           ; BSR set to: 1
 12530                           ;sample.c: 199: t16=in_adc_start_and_read(2);
 12531  000854  0E02               	movlw	2
 12532  000856  ECDE  F012         	call	_in_adc_start_and_read
 12533  00085A  C0ED  F15E         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 12534  00085E  C0EE  F15F         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 12535                           
 12536                           ;sample.c: 200: ret+=t16;
 12537  000862  0101               	movlb	1	; () banked
 12538  000864  515E               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 12539  000866  0101               	movlb	1	; () banked
 12540  000868  2760               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 12541  00086A  0101               	movlb	1	; () banked
 12542  00086C  515F               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 12543  00086E  0101               	movlb	1	; () banked
 12544  000870  2361               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 12545  000872  0E00               	movlw	0
 12546  000874  0101               	movlb	1	; () banked
 12547  000876  2362               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 12548  000878  0E00               	movlw	0
 12549  00087A  0101               	movlb	1	; () banked
 12550  00087C  2363               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 12551                           
 12552                           ; BSR set to: 1
 12553  00087E  0101               	movlb	1	; () banked
 12554  000880  2B64               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 12555  000882  D7E3               	goto	l9574
 12556  000884                     l9586:
 12557                           
 12558                           ; BSR set to: 1
 12559                           ;sample.c: 201: }
 12560                           ;sample.c: 202: sampBufExPr0InSoc=(uint16_t)(ret/4);
 12561  000884  C160  F0F3         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 12562  000888  C161  F0F4         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 12563  00088C  C162  F0F5         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 12564  000890  C163  F0F6         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 12565  000894  0E03               	movlw	3
 12566  000896  D006               	goto	u7480
 12567  000898                     u7485:
 12568  000898  0100               	movlb	0	; () banked
 12569  00089A  90D8               	bcf	status,0,c
 12570  00089C  33F6               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 12571  00089E  33F5               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 12572  0008A0  33F4               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 12573  0008A2  33F3               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 12574  0008A4                     u7480:
 12575  0008A4  2EE8               	decfsz	wreg,f,c
 12576  0008A6  D7F8               	goto	u7485
 12577  0008A8  C0F3  F0B0         	movff	??_sample_in_soc_adc_ch,_sampBufExPr0InSoc
 12578  0008AC  C0F4  F0B1         	movff	??_sample_in_soc_adc_ch+1,_sampBufExPr0InSoc+1
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;sample.c: 204: ret=0;
 12582  0008B0  0E00               	movlw	0
 12583  0008B2  0101               	movlb	1	; () banked
 12584  0008B4  6F60               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12585  0008B6  0E00               	movlw	0
 12586  0008B8  6F61               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12587  0008BA  0E00               	movlw	0
 12588  0008BC  6F62               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12589  0008BE  0E00               	movlw	0
 12590  0008C0  6F63               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12591                           
 12592                           ; BSR set to: 1
 12593                           ;sample.c: 205: for(i=0;i<4;i++){
 12594  0008C2  0E00               	movlw	0
 12595  0008C4  0101               	movlb	1	; () banked
 12596  0008C6  6F64               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 12597  0008C8  0E03               	movlw	3
 12598  0008CA  0101               	movlb	1	; () banked
 12599  0008CC  6564               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 12600  0008CE  D001               	goto	l9594
 12601  0008D0  D018               	goto	l9602
 12602  0008D2                     l9594:
 12603                           
 12604                           ; BSR set to: 1
 12605                           ;sample.c: 206: t16=in_adc_start_and_read(1);
 12606  0008D2  0E01               	movlw	1
 12607  0008D4  ECDE  F012         	call	_in_adc_start_and_read
 12608  0008D8  C0ED  F15E         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 12609  0008DC  C0EE  F15F         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 12610                           
 12611                           ;sample.c: 207: ret+=t16;
 12612  0008E0  0101               	movlb	1	; () banked
 12613  0008E2  515E               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 12614  0008E4  0101               	movlb	1	; () banked
 12615  0008E6  2760               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 12616  0008E8  0101               	movlb	1	; () banked
 12617  0008EA  515F               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 12618  0008EC  0101               	movlb	1	; () banked
 12619  0008EE  2361               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 12620  0008F0  0E00               	movlw	0
 12621  0008F2  0101               	movlb	1	; () banked
 12622  0008F4  2362               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 12623  0008F6  0E00               	movlw	0
 12624  0008F8  0101               	movlb	1	; () banked
 12625  0008FA  2363               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 12626                           
 12627                           ; BSR set to: 1
 12628  0008FC  0101               	movlb	1	; () banked
 12629  0008FE  2B64               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 12630  000900  D7E3               	goto	L3
 12631  000902                     l9602:
 12632                           
 12633                           ; BSR set to: 1
 12634                           ;sample.c: 208: }
 12635                           ;sample.c: 209: sampBufExPr1InSoc=(uint16_t)(ret/4);
 12636  000902  C160  F0F3         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 12637  000906  C161  F0F4         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 12638  00090A  C162  F0F5         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 12639  00090E  C163  F0F6         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 12640  000912  0E03               	movlw	3
 12641  000914  D006               	goto	u7510
 12642  000916                     u7515:
 12643  000916  0100               	movlb	0	; () banked
 12644  000918  90D8               	bcf	status,0,c
 12645  00091A  33F6               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 12646  00091C  33F5               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 12647  00091E  33F4               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 12648  000920  33F3               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 12649  000922                     u7510:
 12650  000922  2EE8               	decfsz	wreg,f,c
 12651  000924  D7F8               	goto	u7515
 12652  000926  C0F3  F0AE         	movff	??_sample_in_soc_adc_ch,_sampBufExPr1InSoc
 12653  00092A  C0F4  F0AF         	movff	??_sample_in_soc_adc_ch+1,_sampBufExPr1InSoc+1
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;sample.c: 211: ret=0;
 12657  00092E  0E00               	movlw	0
 12658  000930  0101               	movlb	1	; () banked
 12659  000932  6F60               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12660  000934  0E00               	movlw	0
 12661  000936  6F61               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12662  000938  0E00               	movlw	0
 12663  00093A  6F62               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12664  00093C  0E00               	movlw	0
 12665  00093E  6F63               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12666                           
 12667                           ; BSR set to: 1
 12668                           ;sample.c: 212: for(i=0;i<4;i++){
 12669  000940  0E00               	movlw	0
 12670  000942  0101               	movlb	1	; () banked
 12671  000944  6F64               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 12672  000946  0E03               	movlw	3
 12673  000948  0101               	movlb	1	; () banked
 12674  00094A  6564               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 12675  00094C  D001               	goto	l9610
 12676  00094E  D018               	goto	l9618
 12677  000950                     l9610:
 12678                           
 12679                           ; BSR set to: 1
 12680                           ;sample.c: 213: t16=in_adc_start_and_read(0);
 12681  000950  0E00               	movlw	0
 12682  000952  ECDE  F012         	call	_in_adc_start_and_read
 12683  000956  C0ED  F15E         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 12684  00095A  C0EE  F15F         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 12685                           
 12686                           ;sample.c: 214: ret+=t16;
 12687  00095E  0101               	movlb	1	; () banked
 12688  000960  515E               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 12689  000962  0101               	movlb	1	; () banked
 12690  000964  2760               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 12691  000966  0101               	movlb	1	; () banked
 12692  000968  515F               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 12693  00096A  0101               	movlb	1	; () banked
 12694  00096C  2361               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 12695  00096E  0E00               	movlw	0
 12696  000970  0101               	movlb	1	; () banked
 12697  000972  2362               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 12698  000974  0E00               	movlw	0
 12699  000976  0101               	movlb	1	; () banked
 12700  000978  2363               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 12701                           
 12702                           ; BSR set to: 1
 12703  00097A  0101               	movlb	1	; () banked
 12704  00097C  2B64               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 12705  00097E  D7E3               	goto	L4
 12706  000980                     l9618:
 12707                           
 12708                           ; BSR set to: 1
 12709                           ;sample.c: 215: }
 12710                           ;sample.c: 216: sampBufBatInSoc=(uint16_t)(ret/4);
 12711  000980  C160  F0F3         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 12712  000984  C161  F0F4         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 12713  000988  C162  F0F5         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 12714  00098C  C163  F0F6         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 12715  000990  0E03               	movlw	3
 12716  000992  D006               	goto	u7540
 12717  000994                     u7545:
 12718  000994  0100               	movlb	0	; () banked
 12719  000996  90D8               	bcf	status,0,c
 12720  000998  33F6               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 12721  00099A  33F5               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 12722  00099C  33F4               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 12723  00099E  33F3               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 12724  0009A0                     u7540:
 12725  0009A0  2EE8               	decfsz	wreg,f,c
 12726  0009A2  D7F8               	goto	u7545
 12727  0009A4  C0F3  F0AC         	movff	??_sample_in_soc_adc_ch,_sampBufBatInSoc
 12728  0009A8  C0F4  F0AD         	movff	??_sample_in_soc_adc_ch+1,_sampBufBatInSoc+1
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;sample.c: 218: ret=0;
 12732  0009AC  0E00               	movlw	0
 12733  0009AE  0101               	movlb	1	; () banked
 12734  0009B0  6F60               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12735  0009B2  0E00               	movlw	0
 12736  0009B4  6F61               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12737  0009B6  0E00               	movlw	0
 12738  0009B8  6F62               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12739  0009BA  0E00               	movlw	0
 12740  0009BC  6F63               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12741                           
 12742                           ; BSR set to: 1
 12743                           ;sample.c: 219: for(i=0;i<4;i++){
 12744  0009BE  0E00               	movlw	0
 12745  0009C0  0101               	movlb	1	; () banked
 12746  0009C2  6F64               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 12747  0009C4  0E03               	movlw	3
 12748  0009C6  0101               	movlb	1	; () banked
 12749  0009C8  6564               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 12750  0009CA  D001               	goto	l9626
 12751  0009CC  D018               	goto	l9634
 12752  0009CE                     l9626:
 12753                           
 12754                           ; BSR set to: 1
 12755                           ;sample.c: 220: t16=in_adc_start_and_read(3);
 12756  0009CE  0E03               	movlw	3
 12757  0009D0  ECDE  F012         	call	_in_adc_start_and_read
 12758  0009D4  C0ED  F15E         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 12759  0009D8  C0EE  F15F         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 12760                           
 12761                           ;sample.c: 221: ret+=t16;
 12762  0009DC  0101               	movlb	1	; () banked
 12763  0009DE  515E               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 12764  0009E0  0101               	movlb	1	; () banked
 12765  0009E2  2760               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 12766  0009E4  0101               	movlb	1	; () banked
 12767  0009E6  515F               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 12768  0009E8  0101               	movlb	1	; () banked
 12769  0009EA  2361               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 12770  0009EC  0E00               	movlw	0
 12771  0009EE  0101               	movlb	1	; () banked
 12772  0009F0  2362               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 12773  0009F2  0E00               	movlw	0
 12774  0009F4  0101               	movlb	1	; () banked
 12775  0009F6  2363               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 12776                           
 12777                           ; BSR set to: 1
 12778  0009F8  0101               	movlb	1	; () banked
 12779  0009FA  2B64               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 12780  0009FC  D7E3               	goto	L5
 12781  0009FE                     l9634:
 12782                           
 12783                           ; BSR set to: 1
 12784                           ;sample.c: 222: }
 12785                           ;sample.c: 223: sampBufRefInSoc=(uint16_t)(ret/4);
 12786  0009FE  C160  F0F3         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 12787  000A02  C161  F0F4         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 12788  000A06  C162  F0F5         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 12789  000A0A  C163  F0F6         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 12790  000A0E  0E03               	movlw	3
 12791  000A10  D006               	goto	u7570
 12792  000A12                     u7575:
 12793  000A12  0100               	movlb	0	; () banked
 12794  000A14  90D8               	bcf	status,0,c
 12795  000A16  33F6               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 12796  000A18  33F5               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 12797  000A1A  33F4               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 12798  000A1C  33F3               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 12799  000A1E                     u7570:
 12800  000A1E  2EE8               	decfsz	wreg,f,c
 12801  000A20  D7F8               	goto	u7575
 12802  000A22  C0F3  F0AA         	movff	??_sample_in_soc_adc_ch,_sampBufRefInSoc
 12803  000A26  C0F4  F0AB         	movff	??_sample_in_soc_adc_ch+1,_sampBufRefInSoc+1
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;sample.c: 224: return 1;
 12807                           ;	Return value of _sample_in_soc_adc_ch is never used
 12808  000A2A  0012               	return	
 12809  000A2C                     __end_of_sample_in_soc_adc_ch:
 12810                           	opt stack 0
 12811                           tblptru	equ	0xFF8
 12812                           tblptrh	equ	0xFF7
 12813                           tblptrl	equ	0xFF6
 12814                           tablat	equ	0xFF5
 12815                           prodh	equ	0xFF4
 12816                           prodl	equ	0xFF3
 12817                           intcon	equ	0xFF2
 12818                           indf0	equ	0xFEF
 12819                           postinc0	equ	0xFEE
 12820                           fsr0h	equ	0xFEA
 12821                           fsr0l	equ	0xFE9
 12822                           wreg	equ	0xFE8
 12823                           postinc1	equ	0xFE6
 12824                           postdec1	equ	0xFE5
 12825                           plusw1	equ	0xFE3
 12826                           fsr1h	equ	0xFE2
 12827                           fsr1l	equ	0xFE1
 12828                           indf2	equ	0xFDF
 12829                           postinc2	equ	0xFDE
 12830                           postdec2	equ	0xFDD
 12831                           plusw2	equ	0xFDB
 12832                           fsr2h	equ	0xFDA
 12833                           fsr2l	equ	0xFD9
 12834                           status	equ	0xFD8
 12835                           
 12836 ;; *************** function _in_adc_start_and_read *****************
 12837 ;; Defined at:
 12838 ;;		line 21 in file "src/driver/in_adc.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;  ch              1    wreg     unsigned char 
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;  ch              1    7[BANK0 ] unsigned char 
 12843 ;;  ret             2    8[BANK0 ] unsigned int 
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  2    4[BANK0 ] unsigned int 
 12846 ;; Registers used:
 12847 ;;		wreg, status,2, status,0, cstack
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/0
 12850 ;;		On exit  : 0/0
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12857 ;;Total ram usage:        6 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; Hardware stack levels required when called:    5
 12860 ;; This function calls:
 12861 ;;		_delay_us
 12862 ;; This function is called by:
 12863 ;;		_sample_in_soc_adc_ch
 12864 ;; This function uses a non-reentrant model
 12865 ;;
 12866                           
 12867                           	psect	text72
 12868  0025BC                     __ptext72:
 12869                           	opt stack 0
 12870  0025BC                     _in_adc_start_and_read:
 12871                           	opt stack 22
 12872                           
 12873                           ;incstack = 0
 12874                           ;in_adc_start_and_read@ch stored from wreg
 12875  0025BC  0100               	movlb	0	; () banked
 12876  0025BE  6FF0               	movwf	in_adc_start_and_read@ch& (0+255),b
 12877                           
 12878                           ;in_adc.c: 23: uint16_t ret=0;
 12879  0025C0  0E00               	movlw	0
 12880  0025C2  0100               	movlb	0	; () banked
 12881  0025C4  6FF2               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 12882  0025C6  0E00               	movlw	0
 12883  0025C8  6FF1               	movwf	in_adc_start_and_read@ret& (0+255),b
 12884                           
 12885                           ; BSR set to: 0
 12886                           
 12887                           ; BSR set to: 0
 12888                           
 12889                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 12890  0025CA  80C2               	bsf	4034,0,c	;volatile
 12891                           
 12892                           ; BSR set to: 0
 12893                           
 12894                           ; BSR set to: 0
 12895                           
 12896                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 12897                           
 12898                           ; BSR set to: 0
 12899  0025CC  C0F0  F0EF         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 12900  0025D0  0100               	movlb	0	; () banked
 12901  0025D2  47EF               	rlncf	??_in_adc_start_and_read& (0+255),f,b
 12902  0025D4  47EF               	rlncf	??_in_adc_start_and_read& (0+255),f,b
 12903  0025D6  50C2               	movf	4034,w,c	;volatile
 12904  0025D8  0100               	movlb	0	; () banked
 12905  0025DA  19EF               	xorwf	??_in_adc_start_and_read& (0+255),w,b
 12906  0025DC  0BC3               	andlw	-61
 12907  0025DE  19EF               	xorwf	??_in_adc_start_and_read& (0+255),w,b
 12908  0025E0  6EC2               	movwf	4034,c	;volatile
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;in_adc.c: 26: delay_us(2);
 12912                           
 12913                           ; BSR set to: 0
 12914  0025E2  0E00               	movlw	0
 12915  0025E4  0100               	movlb	0	; () banked
 12916  0025E6  6FEA               	movwf	(delay_us@dly+1)& (0+255),b
 12917  0025E8  0E02               	movlw	2
 12918  0025EA  6FE9               	movwf	delay_us@dly& (0+255),b
 12919  0025EC  EC87  F017         	call	_delay_us	;wreg free
 12920                           
 12921                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 12922  0025F0  82C2               	bsf	4034,1,c	;volatile
 12923                           
 12924                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 12925  0025F2  D001               	goto	l1061
 12926  0025F4                     l1062:
 12927  0025F4  F000               	nop	
 12928  0025F6                     l1061:
 12929  0025F6  B2C2               	btfsc	4034,1,c	;volatile
 12930  0025F8  D7FD               	goto	l1062
 12931                           
 12932                           ;in_adc.c: 30: ret=ADRESH;
 12933  0025FA  CFC4 F0F1          	movff	4036,in_adc_start_and_read@ret	;volatile
 12934  0025FE  0100               	movlb	0	; () banked
 12935  002600  6BF2               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;in_adc.c: 31: ret<<=8;
 12939  002602  0100               	movlb	0	; () banked
 12940  002604  51F1               	movf	in_adc_start_and_read@ret& (0+255),w,b
 12941  002606  6FF2               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 12942  002608  6BF1               	clrf	in_adc_start_and_read@ret& (0+255),b
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;in_adc.c: 32: ret |= ADRESL;
 12946  00260A  50C3               	movf	4035,w,c	;volatile
 12947  00260C  0100               	movlb	0	; () banked
 12948  00260E  13F1               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;in_adc.c: 33: delay_us(2);
 12952  002610  0E00               	movlw	0
 12953  002612  0100               	movlb	0	; () banked
 12954  002614  6FEA               	movwf	(delay_us@dly+1)& (0+255),b
 12955  002616  0E02               	movlw	2
 12956  002618  6FE9               	movwf	delay_us@dly& (0+255),b
 12957  00261A  EC87  F017         	call	_delay_us	;wreg free
 12958                           
 12959                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 12960  00261E  90C2               	bcf	4034,0,c	;volatile
 12961                           
 12962                           ;in_adc.c: 35: return ret;
 12963  002620  C0F1  F0ED         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 12964  002624  C0F2  F0EE         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 12965  002628  0012               	return	
 12966  00262A                     __end_of_in_adc_start_and_read:
 12967                           	opt stack 0
 12968                           tblptru	equ	0xFF8
 12969                           tblptrh	equ	0xFF7
 12970                           tblptrl	equ	0xFF6
 12971                           tablat	equ	0xFF5
 12972                           prodh	equ	0xFF4
 12973                           prodl	equ	0xFF3
 12974                           intcon	equ	0xFF2
 12975                           indf0	equ	0xFEF
 12976                           postinc0	equ	0xFEE
 12977                           fsr0h	equ	0xFEA
 12978                           fsr0l	equ	0xFE9
 12979                           wreg	equ	0xFE8
 12980                           postinc1	equ	0xFE6
 12981                           postdec1	equ	0xFE5
 12982                           plusw1	equ	0xFE3
 12983                           fsr1h	equ	0xFE2
 12984                           fsr1l	equ	0xFE1
 12985                           indf2	equ	0xFDF
 12986                           postinc2	equ	0xFDE
 12987                           postdec2	equ	0xFDD
 12988                           plusw2	equ	0xFDB
 12989                           fsr2h	equ	0xFDA
 12990                           fsr2l	equ	0xFD9
 12991                           status	equ	0xFD8
 12992                           
 12993 ;; *************** function _in_adc_init *****************
 12994 ;; Defined at:
 12995 ;;		line 9 in file "src/driver/in_adc.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;		None
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;		None
 13000 ;; Return value:  Size  Location     Type
 13001 ;;                  1    wreg      void 
 13002 ;; Registers used:
 13003 ;;		wreg, status,2
 13004 ;; Tracked objects:
 13005 ;;		On entry : 0/0
 13006 ;;		On exit  : 0/0
 13007 ;;		Unchanged: 0/0
 13008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13013 ;;Total ram usage:        0 bytes
 13014 ;; Hardware stack levels used:    1
 13015 ;; Hardware stack levels required when called:    4
 13016 ;; This function calls:
 13017 ;;		Nothing
 13018 ;; This function is called by:
 13019 ;;		_sample_in_soc_adc_ch
 13020 ;;		_main
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           	psect	text73
 13025  003268                     __ptext73:
 13026                           	opt stack 0
 13027  003268                     _in_adc_init:
 13028                           	opt stack 26
 13029                           
 13030                           ;in_adc.c: 11: ADCON1=0b00001101;
 13031                           
 13032                           ;incstack = 0
 13033  003268  0E0D               	movlw	13
 13034  00326A  6EC1               	movwf	4033,c	;volatile
 13035                           
 13036                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 13037  00326C  8EC0               	bsf	4032,7,c	;volatile
 13038                           
 13039                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 13040  00326E  86C0               	bsf	4032,3,c	;volatile
 13041  003270  88C0               	bsf	4032,4,c	;volatile
 13042  003272  8AC0               	bsf	4032,5,c	;volatile
 13043                           
 13044                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 13045  003274  80C0               	bsf	4032,0,c	;volatile
 13046  003276  82C0               	bsf	4032,1,c	;volatile
 13047  003278  84C0               	bsf	4032,2,c	;volatile
 13048                           
 13049                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 13050  00327A  8EC2               	bsf	4034,7,c	;volatile
 13051                           
 13052                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 13053  00327C  50C2               	movf	4034,w,c	;volatile
 13054  00327E  0BC3               	andlw	-61
 13055  003280  090C               	iorlw	12
 13056  003282  6EC2               	movwf	4034,c	;volatile
 13057                           
 13058                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 13059  003284  9C9E               	bcf	3998,6,c	;volatile
 13060                           
 13061                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 13062  003286  9C9D               	bcf	3997,6,c	;volatile
 13063                           
 13064                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 13065  003288  9C9F               	bcf	3999,6,c	;volatile
 13066  00328A  0012               	return		;funcret
 13067  00328C                     __end_of_in_adc_init:
 13068                           	opt stack 0
 13069                           tblptru	equ	0xFF8
 13070                           tblptrh	equ	0xFF7
 13071                           tblptrl	equ	0xFF6
 13072                           tablat	equ	0xFF5
 13073                           prodh	equ	0xFF4
 13074                           prodl	equ	0xFF3
 13075                           intcon	equ	0xFF2
 13076                           indf0	equ	0xFEF
 13077                           postinc0	equ	0xFEE
 13078                           fsr0h	equ	0xFEA
 13079                           fsr0l	equ	0xFE9
 13080                           wreg	equ	0xFE8
 13081                           postinc1	equ	0xFE6
 13082                           postdec1	equ	0xFE5
 13083                           plusw1	equ	0xFE3
 13084                           fsr1h	equ	0xFE2
 13085                           fsr1l	equ	0xFE1
 13086                           indf2	equ	0xFDF
 13087                           postinc2	equ	0xFDE
 13088                           postdec2	equ	0xFDD
 13089                           plusw2	equ	0xFDB
 13090                           fsr2h	equ	0xFDA
 13091                           fsr2l	equ	0xFD9
 13092                           status	equ	0xFD8
 13093                           
 13094 ;; *************** function _sample_diff_pr_chip_slow *****************
 13095 ;; Defined at:
 13096 ;;		line 109 in file "src/api/sample.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;  t16             2   24[BANK1 ] int 
 13101 ;;  ret             1   23[BANK1 ] unsigned char 
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      unsigned char 
 13104 ;; Registers used:
 13105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;Total ram usage:        3 bytes
 13116 ;; Hardware stack levels used:    1
 13117 ;; Hardware stack levels required when called:    9
 13118 ;; This function calls:
 13119 ;;		_ads1115_read_conversion
 13120 ;;		_ads1115_set_mux
 13121 ;;		_ads1115_start_conversion
 13122 ;;		_delay_ms
 13123 ;;		_sample_diff_pr_fliter
 13124 ;; This function is called by:
 13125 ;;		_event_process_rtc
 13126 ;; This function uses a non-reentrant model
 13127 ;;
 13128                           
 13129                           	psect	text74
 13130  000EA8                     __ptext74:
 13131                           	opt stack 0
 13132  000EA8                     _sample_diff_pr_chip_slow:
 13133                           	opt stack 19
 13134                           
 13135                           ;sample.c: 111: uint8_t ret=0;
 13136                           
 13137                           ;incstack = 0
 13138  000EA8  0E00               	movlw	0
 13139  000EAA  0101               	movlb	1	; () banked
 13140  000EAC  6F75               	movwf	sample_diff_pr_chip_slow@ret& (0+255),b
 13141                           
 13142                           ; BSR set to: 1
 13143                           ;sample.c: 112: int16_t t16;
 13144                           ;sample.c: 113: slowSampleTimer++;
 13145  000EAE  2A15               	incf	_slowSampleTimer,f,c	;volatile
 13146                           
 13147                           ; BSR set to: 1
 13148                           ;sample.c: 114: if(slowSampleTimer>=60){
 13149  000EB0  0E3B               	movlw	59
 13150  000EB2  6415               	cpfsgt	_slowSampleTimer,c	;volatile
 13151  000EB4  0012               	return	
 13152                           
 13153                           ; BSR set to: 1
 13154                           ;sample.c: 115: slowSampleTimer=0;
 13155  000EB6  0E00               	movlw	0
 13156  000EB8  6E15               	movwf	_slowSampleTimer,c	;volatile
 13157                           
 13158                           ; BSR set to: 1
 13159                           
 13160                           ; BSR set to: 1
 13161                           
 13162                           ; BSR set to: 1
 13163                           
 13164                           ;sample.c: 116: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while
      +                          (0);;
 13165  000EBA  9893               	bcf	3987,4,c	;volatile
 13166                           
 13167                           ; BSR set to: 1
 13168                           
 13169                           ; BSR set to: 1
 13170                           
 13171                           ; BSR set to: 1
 13172  000EBC  888A               	bsf	3978,4,c	;volatile
 13173                           
 13174                           ; BSR set to: 1
 13175                           
 13176                           ; BSR set to: 1
 13177                           
 13178                           ; BSR set to: 1
 13179                           
 13180                           ;sample.c: 117: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC |= (1<<5);}while(0);; }while
      +                          (0);;
 13181                           
 13182                           ; BSR set to: 1
 13183                           
 13184                           ; BSR set to: 1
 13185  000EBE  9A94               	bcf	3988,5,c	;volatile
 13186                           
 13187                           ; BSR set to: 1
 13188                           
 13189                           ; BSR set to: 1
 13190                           
 13191                           ; BSR set to: 1
 13192  000EC0  8A8B               	bsf	3979,5,c	;volatile
 13193                           
 13194                           ; BSR set to: 1
 13195                           ;sample.c: 118: delay_ms(20);
 13196                           
 13197                           ; BSR set to: 1
 13198                           
 13199                           ; BSR set to: 1
 13200  000EC2  0E00               	movlw	0
 13201  000EC4  0100               	movlb	0	; () banked
 13202  000EC6  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 13203  000EC8  0E14               	movlw	20
 13204  000ECA  6FED               	movwf	delay_ms@dly& (0+255),b
 13205  000ECC  EC0F  F019         	call	_delay_ms	;wreg free
 13206                           
 13207                           ;sample.c: 119: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_0_1);
 13208  000ED0  C009  F0E9         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 13209  000ED4  C00A  F0EA         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 13210  000ED8  0E00               	movlw	0
 13211  000EDA  0100               	movlb	0	; () banked
 13212  000EDC  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
 13213  000EDE  ECFB  F018         	call	_ads1115_set_mux	;wreg free
 13214                           
 13215                           ;sample.c: 120: ads1115_start_conversion(pAds1115DiffPrObj);
 13216  000EE2  C009  F0F1         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 13217  000EE6  C00A  F0F2         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 13218  000EEA  ECD2  F018         	call	_ads1115_start_conversion	;wreg free
 13219                           
 13220                           ;sample.c: 121: delay_ms(20);
 13221  000EEE  0E00               	movlw	0
 13222  000EF0  0100               	movlb	0	; () banked
 13223  000EF2  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 13224  000EF4  0E14               	movlw	20
 13225  000EF6  6FED               	movwf	delay_ms@dly& (0+255),b
 13226  000EF8  EC0F  F019         	call	_delay_ms	;wreg free
 13227                           
 13228                           ;sample.c: 122: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 13229  000EFC  C009  F0F3         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 13230  000F00  C00A  F0F4         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 13231  000F04  ECED  F015         	call	_ads1115_read_conversion	;wreg free
 13232  000F08  C0F3  F176         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 13233  000F0C  C0F4  F177         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 13234                           
 13235                           ;sample.c: 123: if(diffSampCount_D01<20/3){
 13236  000F10  0E06               	movlw	6
 13237  000F12  6018               	cpfslt	_diffSampCount_D01,c
 13238  000F14  D00D               	goto	l9468
 13239                           
 13240                           ;sample.c: 124: sampBufDiffPr_D01[diffSampCount_D01]=t16;
 13241  000F16  5018               	movf	_diffSampCount_D01,w,c
 13242  000F18  0D02               	mullw	2
 13243  000F1A  0E30               	movlw	low _sampBufDiffPr_D01
 13244  000F1C  24F3               	addwf	prodl,w,c
 13245  000F1E  6ED9               	movwf	fsr2l,c
 13246  000F20  0E01               	movlw	high _sampBufDiffPr_D01
 13247  000F22  20F4               	addwfc	prodh,w,c
 13248  000F24  6EDA               	movwf	fsr2h,c
 13249  000F26  C176  FFDE         	movff	sample_diff_pr_chip_slow@t16,postinc2
 13250  000F2A  C177  FFDD         	movff	sample_diff_pr_chip_slow@t16+1,postdec2
 13251                           
 13252                           ;sample.c: 125: diffSampCount_D01++;
 13253  000F2E  2A18               	incf	_diffSampCount_D01,f,c
 13254  000F30                     l9468:
 13255                           
 13256                           ;sample.c: 126: }
 13257                           ;sample.c: 127: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_2_3);
 13258  000F30  C009  F0E9         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 13259  000F34  C00A  F0EA         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 13260  000F38  0E03               	movlw	3
 13261  000F3A  0100               	movlb	0	; () banked
 13262  000F3C  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
 13263  000F3E  ECFB  F018         	call	_ads1115_set_mux	;wreg free
 13264                           
 13265                           ;sample.c: 128: ads1115_start_conversion(pAds1115DiffPrObj);
 13266  000F42  C009  F0F1         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 13267  000F46  C00A  F0F2         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 13268  000F4A  ECD2  F018         	call	_ads1115_start_conversion	;wreg free
 13269                           
 13270                           ;sample.c: 129: delay_ms(20);
 13271  000F4E  0E00               	movlw	0
 13272  000F50  0100               	movlb	0	; () banked
 13273  000F52  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 13274  000F54  0E14               	movlw	20
 13275  000F56  6FED               	movwf	delay_ms@dly& (0+255),b
 13276  000F58  EC0F  F019         	call	_delay_ms	;wreg free
 13277                           
 13278                           ;sample.c: 130: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 13279  000F5C  C009  F0F3         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 13280  000F60  C00A  F0F4         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 13281  000F64  ECED  F015         	call	_ads1115_read_conversion	;wreg free
 13282  000F68  C0F3  F176         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 13283  000F6C  C0F4  F177         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 13284                           
 13285                           ;sample.c: 131: if(diffSampCount_D23<20/3){
 13286  000F70  0E06               	movlw	6
 13287  000F72  6017               	cpfslt	_diffSampCount_D23,c
 13288  000F74  D00D               	goto	l9482
 13289                           
 13290                           ;sample.c: 132: sampBufDiffPr_D23[diffSampCount_D23]=t16;
 13291  000F76  5017               	movf	_diffSampCount_D23,w,c
 13292  000F78  0D02               	mullw	2
 13293  000F7A  0E20               	movlw	low _sampBufDiffPr_D23
 13294  000F7C  24F3               	addwf	prodl,w,c
 13295  000F7E  6ED9               	movwf	fsr2l,c
 13296  000F80  0E01               	movlw	high _sampBufDiffPr_D23
 13297  000F82  20F4               	addwfc	prodh,w,c
 13298  000F84  6EDA               	movwf	fsr2h,c
 13299  000F86  C176  FFDE         	movff	sample_diff_pr_chip_slow@t16,postinc2
 13300  000F8A  C177  FFDD         	movff	sample_diff_pr_chip_slow@t16+1,postdec2
 13301                           
 13302                           ;sample.c: 133: diffSampCount_D23++;
 13303  000F8E  2A17               	incf	_diffSampCount_D23,f,c
 13304  000F90                     l9482:
 13305                           
 13306                           ;sample.c: 134: }
 13307                           ;sample.c: 135: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_SINGLE_1);
 13308  000F90  C009  F0E9         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 13309  000F94  C00A  F0EA         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 13310  000F98  0E05               	movlw	5
 13311  000F9A  0100               	movlb	0	; () banked
 13312  000F9C  6FEB               	movwf	ads1115_set_mux@mux& (0+255),b
 13313  000F9E  ECFB  F018         	call	_ads1115_set_mux	;wreg free
 13314                           
 13315                           ;sample.c: 136: ads1115_start_conversion(pAds1115DiffPrObj);
 13316  000FA2  C009  F0F1         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 13317  000FA6  C00A  F0F2         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 13318  000FAA  ECD2  F018         	call	_ads1115_start_conversion	;wreg free
 13319                           
 13320                           ;sample.c: 137: delay_ms(20);
 13321  000FAE  0E00               	movlw	0
 13322  000FB0  0100               	movlb	0	; () banked
 13323  000FB2  6FEE               	movwf	(delay_ms@dly+1)& (0+255),b
 13324  000FB4  0E14               	movlw	20
 13325  000FB6  6FED               	movwf	delay_ms@dly& (0+255),b
 13326  000FB8  EC0F  F019         	call	_delay_ms	;wreg free
 13327                           
 13328                           ;sample.c: 138: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 13329  000FBC  C009  F0F3         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 13330  000FC0  C00A  F0F4         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 13331  000FC4  ECED  F015         	call	_ads1115_read_conversion	;wreg free
 13332  000FC8  C0F3  F176         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 13333  000FCC  C0F4  F177         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 13334                           
 13335                           ;sample.c: 139: sampBufDiffPr_S1=t16;
 13336  000FD0  C176  F0B2         	movff	sample_diff_pr_chip_slow@t16,_sampBufDiffPr_S1
 13337  000FD4  C177  F0B3         	movff	sample_diff_pr_chip_slow@t16+1,_sampBufDiffPr_S1+1
 13338                           
 13339                           ;sample.c: 140: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 13340  000FD8  9A94               	bcf	3988,5,c	;volatile
 13341  000FDA  9A8B               	bcf	3979,5,c	;volatile
 13342                           
 13343                           ;sample.c: 142: if((diffSampCount_D01 >= diffSampCount_D23) && (diffSampCount_D01 >= 20/
      +                          3)){
 13344  000FDC  5017               	movf	_diffSampCount_D23,w,c
 13345  000FDE  5C18               	subwf	_diffSampCount_D01,w,c
 13346  000FE0  A0D8               	btfss	status,0,c
 13347  000FE2  0012               	return	
 13348  000FE4  0E05               	movlw	5
 13349  000FE6  6418               	cpfsgt	_diffSampCount_D01,c
 13350  000FE8  0012               	return	
 13351                           
 13352                           ;sample.c: 143: sample_diff_pr_fliter(&x_prDiffData);
 13353  000FEA  0EE1               	movlw	low _x_prDiffData
 13354  000FEC  0101               	movlb	1	; () banked
 13355  000FEE  6F73               	movwf	sample_diff_pr_fliter@xin& (0+255),b
 13356  000FF0  0E00               	movlw	high _x_prDiffData
 13357  000FF2  0101               	movlb	1	; () banked
 13358  000FF4  6F74               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
 13359  000FF6  EC2C  F012         	call	_sample_diff_pr_fliter	;wreg free
 13360                           
 13361                           ;sample.c: 144: diffSampCount_D01=diffSampCount_D23=0;
 13362  000FFA  0E00               	movlw	0
 13363  000FFC  6E17               	movwf	_diffSampCount_D23,c
 13364  000FFE  C017  F018         	movff	_diffSampCount_D23,_diffSampCount_D01
 13365                           
 13366                           ;sample.c: 145: }
 13367                           ;sample.c: 146: return 1;
 13368                           ;	Return value of _sample_diff_pr_chip_slow is never used
 13369  001002  0012               	return	
 13370  001004                     __end_of_sample_diff_pr_chip_slow:
 13371                           	opt stack 0
 13372                           tblptru	equ	0xFF8
 13373                           tblptrh	equ	0xFF7
 13374                           tblptrl	equ	0xFF6
 13375                           tablat	equ	0xFF5
 13376                           prodh	equ	0xFF4
 13377                           prodl	equ	0xFF3
 13378                           intcon	equ	0xFF2
 13379                           indf0	equ	0xFEF
 13380                           postinc0	equ	0xFEE
 13381                           fsr0h	equ	0xFEA
 13382                           fsr0l	equ	0xFE9
 13383                           wreg	equ	0xFE8
 13384                           postinc1	equ	0xFE6
 13385                           postdec1	equ	0xFE5
 13386                           plusw1	equ	0xFE3
 13387                           fsr1h	equ	0xFE2
 13388                           fsr1l	equ	0xFE1
 13389                           indf2	equ	0xFDF
 13390                           postinc2	equ	0xFDE
 13391                           postdec2	equ	0xFDD
 13392                           plusw2	equ	0xFDB
 13393                           fsr2h	equ	0xFDA
 13394                           fsr2l	equ	0xFD9
 13395                           status	equ	0xFD8
 13396                           
 13397 ;; *************** function _sample_diff_pr_fliter *****************
 13398 ;; Defined at:
 13399 ;;		line 62 in file "src/api/sample.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;  xin             2   21[BANK1 ] PTR struct .
 13402 ;;		 -> x_prDiffData(8), 
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;		None
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  1    wreg      unsigned char 
 13407 ;; Registers used:
 13408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13414 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13417 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;Total ram usage:        2 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; Hardware stack levels required when called:    6
 13421 ;; This function calls:
 13422 ;;		___x_sample_fliter
 13423 ;; This function is called by:
 13424 ;;		_sample_diff_pr_chip_fast
 13425 ;;		_sample_diff_pr_chip_slow
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           	psect	text75
 13430  002458                     __ptext75:
 13431                           	opt stack 0
 13432  002458                     _sample_diff_pr_fliter:
 13433                           	opt stack 21
 13434                           
 13435                           ;sample.c: 64: xin->tAdcValue=__x_sample_fliter(sampBufDiffPr_D01,20/3,4);
 13436                           
 13437                           ;incstack = 0
 13438  002458  0E30               	movlw	low _sampBufDiffPr_D01
 13439  00245A  0101               	movlb	1	; () banked
 13440  00245C  6F5E               	movwf	___x_sample_fliter@buf& (0+255),b
 13441  00245E  0E01               	movlw	high _sampBufDiffPr_D01
 13442  002460  0101               	movlb	1	; () banked
 13443  002462  6F5F               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 13444  002464  0E06               	movlw	6
 13445  002466  0101               	movlb	1	; () banked
 13446  002468  6F60               	movwf	___x_sample_fliter@len& (0+255),b
 13447  00246A  0E04               	movlw	4
 13448  00246C  0101               	movlb	1	; () banked
 13449  00246E  6F61               	movwf	___x_sample_fliter@loop& (0+255),b
 13450  002470  ECD9  F002         	call	___x_sample_fliter	;wreg free
 13451  002474  0101               	movlb	1	; () banked
 13452  002476  EE20 F006          	lfsr	2,6
 13453  00247A  5173               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 13454  00247C  26D9               	addwf	fsr2l,f,c
 13455  00247E  5174               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 13456  002480  22DA               	addwfc	fsr2h,f,c
 13457  002482  0101               	movlb	1	; () banked
 13458  002484  C15E  FFDE         	movff	?___x_sample_fliter,postinc2
 13459  002488  0101               	movlb	1	; () banked
 13460  00248A  C15F  FFDD         	movff	?___x_sample_fliter+1,postdec2
 13461                           
 13462                           ;sample.c: 65: xin->pAdcValue=__x_sample_fliter(sampBufDiffPr_D23,20/3,4);
 13463  00248E  0E20               	movlw	low _sampBufDiffPr_D23
 13464  002490  0101               	movlb	1	; () banked
 13465  002492  6F5E               	movwf	___x_sample_fliter@buf& (0+255),b
 13466  002494  0E01               	movlw	high _sampBufDiffPr_D23
 13467  002496  0101               	movlb	1	; () banked
 13468  002498  6F5F               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 13469  00249A  0E06               	movlw	6
 13470  00249C  0101               	movlb	1	; () banked
 13471  00249E  6F60               	movwf	___x_sample_fliter@len& (0+255),b
 13472  0024A0  0E04               	movlw	4
 13473  0024A2  0101               	movlb	1	; () banked
 13474  0024A4  6F61               	movwf	___x_sample_fliter@loop& (0+255),b
 13475  0024A6  ECD9  F002         	call	___x_sample_fliter	;wreg free
 13476  0024AA  0101               	movlb	1	; () banked
 13477  0024AC  EE20 F004          	lfsr	2,4
 13478  0024B0  5173               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 13479  0024B2  26D9               	addwf	fsr2l,f,c
 13480  0024B4  5174               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 13481  0024B6  22DA               	addwfc	fsr2h,f,c
 13482  0024B8  0101               	movlb	1	; () banked
 13483  0024BA  C15E  FFDE         	movff	?___x_sample_fliter,postinc2
 13484  0024BE  0101               	movlb	1	; () banked
 13485  0024C0  C15F  FFDD         	movff	?___x_sample_fliter+1,postdec2
 13486                           
 13487                           ; BSR set to: 1
 13488                           ;sample.c: 66: xin->pValue=0;
 13489  0024C4  C173  FFD9         	movff	sample_diff_pr_fliter@xin,fsr2l
 13490  0024C8  C174  FFDA         	movff	sample_diff_pr_fliter@xin+1,fsr2h
 13491  0024CC  6ADE               	clrf	postinc2,c
 13492  0024CE  6ADE               	clrf	postinc2,c
 13493  0024D0  6ADE               	clrf	postinc2,c
 13494  0024D2  6ADD               	clrf	postdec2,c
 13495  0024D4  0012               	return	
 13496  0024D6                     __end_of_sample_diff_pr_fliter:
 13497                           	opt stack 0
 13498                           tblptru	equ	0xFF8
 13499                           tblptrh	equ	0xFF7
 13500                           tblptrl	equ	0xFF6
 13501                           tablat	equ	0xFF5
 13502                           prodh	equ	0xFF4
 13503                           prodl	equ	0xFF3
 13504                           intcon	equ	0xFF2
 13505                           indf0	equ	0xFEF
 13506                           postinc0	equ	0xFEE
 13507                           fsr0h	equ	0xFEA
 13508                           fsr0l	equ	0xFE9
 13509                           wreg	equ	0xFE8
 13510                           postinc1	equ	0xFE6
 13511                           postdec1	equ	0xFE5
 13512                           plusw1	equ	0xFE3
 13513                           fsr1h	equ	0xFE2
 13514                           fsr1l	equ	0xFE1
 13515                           indf2	equ	0xFDF
 13516                           postinc2	equ	0xFDE
 13517                           postdec2	equ	0xFDD
 13518                           plusw2	equ	0xFDB
 13519                           fsr2h	equ	0xFDA
 13520                           fsr2l	equ	0xFD9
 13521                           status	equ	0xFD8
 13522                           
 13523 ;; *************** function ___x_sample_fliter *****************
 13524 ;; Defined at:
 13525 ;;		line 26 in file "src/api/sample.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;  buf             2    0[BANK1 ] PTR int 
 13528 ;;		 -> sampBufDiffPr_D23(16), sampBufDiffPr_D01(16), 
 13529 ;;  len             1    2[BANK1 ] unsigned char 
 13530 ;;  loop            1    3[BANK1 ] unsigned char 
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;  t32             4   16[BANK1 ] long 
 13533 ;;  min             2   14[BANK1 ] int 
 13534 ;;  max             2   12[BANK1 ] int 
 13535 ;;  i               1   20[BANK1 ] unsigned char 
 13536 ;;  minLoc          1   11[BANK1 ] unsigned char 
 13537 ;;  maxLoc          1   10[BANK1 ] unsigned char 
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  2    0[BANK1 ] int 
 13540 ;; Registers used:
 13541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13547 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;Total ram usage:       21 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:    5
 13554 ;; This function calls:
 13555 ;;		___aldiv
 13556 ;; This function is called by:
 13557 ;;		_sample_diff_pr_fliter
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561                           	psect	text76
 13562  0005B2                     __ptext76:
 13563                           	opt stack 0
 13564  0005B2                     ___x_sample_fliter:
 13565                           	opt stack 21
 13566                           
 13567                           ;sample.c: 28: int16_t max,min;
 13568                           ;sample.c: 29: uint8_t i,maxLoc,minLoc;
 13569                           ;sample.c: 30: int32_t t32=0;
 13570                           
 13571                           ; BSR set to: 1
 13572                           ;incstack = 0
 13573  0005B2  0E00               	movlw	0
 13574  0005B4  0101               	movlb	1	; () banked
 13575  0005B6  6F6E               	movwf	___x_sample_fliter@t32& (0+255),b
 13576  0005B8  0E00               	movlw	0
 13577  0005BA  6F6F               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 13578  0005BC  0E00               	movlw	0
 13579  0005BE  6F70               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 13580  0005C0  0E00               	movlw	0
 13581  0005C2  6F71               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 13582                           
 13583                           ; BSR set to: 1
 13584                           ;sample.c: 31: if(len<3)return 0;
 13585  0005C4  0E03               	movlw	3
 13586  0005C6  0101               	movlb	1	; () banked
 13587  0005C8  6160               	cpfslt	___x_sample_fliter@len& (0+255),b
 13588  0005CA  D118               	goto	l9042
 13589                           
 13590                           ; BSR set to: 1
 13591  0005CC  0E00               	movlw	0
 13592  0005CE  0101               	movlb	1	; () banked
 13593  0005D0  6F5F               	movwf	(?___x_sample_fliter+1)& (0+255),b
 13594  0005D2  0E00               	movlw	0
 13595  0005D4  6F5E               	movwf	?___x_sample_fliter& (0+255),b
 13596                           
 13597                           ; BSR set to: 1
 13598  0005D6  0012               	return	
 13599  0005D8                     l9012:
 13600                           
 13601                           ; BSR set to: 1
 13602                           ;sample.c: 33: min=max=buf[0];
 13603  0005D8  C15E  FFD9         	movff	___x_sample_fliter@buf,fsr2l
 13604  0005DC  C15F  FFDA         	movff	___x_sample_fliter@buf+1,fsr2h
 13605  0005E0  CFDE F16A          	movff	postinc2,___x_sample_fliter@max
 13606  0005E4  CFDD F16B          	movff	postdec2,___x_sample_fliter@max+1
 13607  0005E8  C16A  F16C         	movff	___x_sample_fliter@max,___x_sample_fliter@min
 13608  0005EC  C16B  F16D         	movff	___x_sample_fliter@max+1,___x_sample_fliter@min+1
 13609                           
 13610                           ; BSR set to: 1
 13611                           ;sample.c: 34: t32=0;
 13612  0005F0  0E00               	movlw	0
 13613  0005F2  0101               	movlb	1	; () banked
 13614  0005F4  6F6E               	movwf	___x_sample_fliter@t32& (0+255),b
 13615  0005F6  0E00               	movlw	0
 13616  0005F8  6F6F               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 13617  0005FA  0E00               	movlw	0
 13618  0005FC  6F70               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 13619  0005FE  0E00               	movlw	0
 13620  000600  6F71               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 13621                           
 13622                           ; BSR set to: 1
 13623                           ;sample.c: 35: for(i=0;i<len;i++){
 13624  000602  0E00               	movlw	0
 13625  000604  0101               	movlb	1	; () banked
 13626  000606  6F72               	movwf	___x_sample_fliter@i& (0+255),b
 13627  000608  D07F               	goto	l9030
 13628  00060A                     l9018:
 13629                           
 13630                           ; BSR set to: 1
 13631                           ;sample.c: 36: if(min>buf[i]){min=buf[i];minLoc=i;}
 13632  00060A  0101               	movlb	1	; () banked
 13633  00060C  5172               	movf	___x_sample_fliter@i& (0+255),w,b
 13634  00060E  0D02               	mullw	2
 13635  000610  50F3               	movf	prodl,w,c
 13636  000612  0101               	movlb	1	; () banked
 13637  000614  255E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13638  000616  6ED9               	movwf	fsr2l,c
 13639  000618  50F4               	movf	prodh,w,c
 13640  00061A  0101               	movlb	1	; () banked
 13641  00061C  215F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13642  00061E  6EDA               	movwf	fsr2h,c
 13643  000620  0101               	movlb	1	; () banked
 13644  000622  516C               	movf	___x_sample_fliter@min& (0+255),w,b
 13645  000624  5CDE               	subwf	postinc2,w,c
 13646  000626  50DE               	movf	postinc2,w,c
 13647  000628  0A80               	xorlw	128
 13648  00062A  0101               	movlb	1	; () banked
 13649  00062C  6F64               	movwf	(??___x_sample_fliter+2)& (0+255),b
 13650  00062E  0101               	movlb	1	; () banked
 13651  000630  516D               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 13652  000632  0A80               	xorlw	128
 13653  000634  0101               	movlb	1	; () banked
 13654  000636  5964               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 13655  000638  B0D8               	btfsc	status,0,c
 13656  00063A  D011               	goto	l457
 13657                           
 13658                           ; BSR set to: 1
 13659  00063C  0101               	movlb	1	; () banked
 13660  00063E  5172               	movf	___x_sample_fliter@i& (0+255),w,b
 13661  000640  0D02               	mullw	2
 13662  000642  50F3               	movf	prodl,w,c
 13663  000644  0101               	movlb	1	; () banked
 13664  000646  255E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13665  000648  6ED9               	movwf	fsr2l,c
 13666  00064A  50F4               	movf	prodh,w,c
 13667  00064C  0101               	movlb	1	; () banked
 13668  00064E  215F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13669  000650  6EDA               	movwf	fsr2h,c
 13670  000652  CFDE F16C          	movff	postinc2,___x_sample_fliter@min
 13671  000656  CFDD F16D          	movff	postdec2,___x_sample_fliter@min+1
 13672                           
 13673                           ; BSR set to: 1
 13674  00065A  C172  F169         	movff	___x_sample_fliter@i,___x_sample_fliter@minLoc
 13675  00065E                     l457:
 13676                           
 13677                           ; BSR set to: 1
 13678                           ;sample.c: 37: if(max<buf[i]){max=buf[i];maxLoc=i;}
 13679  00065E  0101               	movlb	1	; () banked
 13680  000660  5172               	movf	___x_sample_fliter@i& (0+255),w,b
 13681  000662  0D02               	mullw	2
 13682  000664  50F3               	movf	prodl,w,c
 13683  000666  0101               	movlb	1	; () banked
 13684  000668  255E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13685  00066A  6ED9               	movwf	fsr2l,c
 13686  00066C  50F4               	movf	prodh,w,c
 13687  00066E  0101               	movlb	1	; () banked
 13688  000670  215F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13689  000672  6EDA               	movwf	fsr2h,c
 13690  000674  50DE               	movf	postinc2,w,c
 13691  000676  0101               	movlb	1	; () banked
 13692  000678  5D6A               	subwf	___x_sample_fliter@max& (0+255),w,b
 13693  00067A  0101               	movlb	1	; () banked
 13694  00067C  516B               	movf	(___x_sample_fliter@max+1)& (0+255),w,b
 13695  00067E  0A80               	xorlw	128
 13696  000680  0101               	movlb	1	; () banked
 13697  000682  6F64               	movwf	(??___x_sample_fliter+2)& (0+255),b
 13698  000684  50DE               	movf	postinc2,w,c
 13699  000686  0A80               	xorlw	128
 13700  000688  0101               	movlb	1	; () banked
 13701  00068A  5964               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 13702  00068C  B0D8               	btfsc	status,0,c
 13703  00068E  D011               	goto	l458
 13704                           
 13705                           ; BSR set to: 1
 13706  000690  0101               	movlb	1	; () banked
 13707  000692  5172               	movf	___x_sample_fliter@i& (0+255),w,b
 13708  000694  0D02               	mullw	2
 13709  000696  50F3               	movf	prodl,w,c
 13710  000698  0101               	movlb	1	; () banked
 13711  00069A  255E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13712  00069C  6ED9               	movwf	fsr2l,c
 13713  00069E  50F4               	movf	prodh,w,c
 13714  0006A0  0101               	movlb	1	; () banked
 13715  0006A2  215F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13716  0006A4  6EDA               	movwf	fsr2h,c
 13717  0006A6  CFDE F16A          	movff	postinc2,___x_sample_fliter@max
 13718  0006AA  CFDD F16B          	movff	postdec2,___x_sample_fliter@max+1
 13719                           
 13720                           ; BSR set to: 1
 13721  0006AE  C172  F168         	movff	___x_sample_fliter@i,___x_sample_fliter@maxLoc
 13722  0006B2                     l458:
 13723                           
 13724                           ; BSR set to: 1
 13725                           ;sample.c: 38: t32+=buf[i];
 13726  0006B2  0101               	movlb	1	; () banked
 13727  0006B4  5172               	movf	___x_sample_fliter@i& (0+255),w,b
 13728  0006B6  0D02               	mullw	2
 13729  0006B8  50F3               	movf	prodl,w,c
 13730  0006BA  0101               	movlb	1	; () banked
 13731  0006BC  255E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13732  0006BE  6ED9               	movwf	fsr2l,c
 13733  0006C0  50F4               	movf	prodh,w,c
 13734  0006C2  0101               	movlb	1	; () banked
 13735  0006C4  215F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13736  0006C6  6EDA               	movwf	fsr2h,c
 13737  0006C8  CFDE F162          	movff	postinc2,??___x_sample_fliter
 13738  0006CC  CFDD F163          	movff	postdec2,??___x_sample_fliter+1
 13739  0006D0  C162  F164         	movff	??___x_sample_fliter,??___x_sample_fliter+2
 13740  0006D4  C163  F165         	movff	??___x_sample_fliter+1,??___x_sample_fliter+3
 13741  0006D8  0E00               	movlw	0
 13742  0006DA  0101               	movlb	1	; () banked
 13743  0006DC  BF65               	btfsc	(??___x_sample_fliter+3)& (0+255),7,b
 13744  0006DE  0EFF               	movlw	255
 13745  0006E0  6F66               	movwf	(??___x_sample_fliter+4)& (0+255),b
 13746  0006E2  6F67               	movwf	(??___x_sample_fliter+5)& (0+255),b
 13747  0006E4  0101               	movlb	1	; () banked
 13748  0006E6  5164               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 13749  0006E8  0101               	movlb	1	; () banked
 13750  0006EA  276E               	addwf	___x_sample_fliter@t32& (0+255),f,b
 13751  0006EC  0101               	movlb	1	; () banked
 13752  0006EE  5165               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 13753  0006F0  0101               	movlb	1	; () banked
 13754  0006F2  236F               	addwfc	(___x_sample_fliter@t32+1)& (0+255),f,b
 13755  0006F4  0101               	movlb	1	; () banked
 13756  0006F6  5166               	movf	(??___x_sample_fliter+4)& (0+255),w,b
 13757  0006F8  0101               	movlb	1	; () banked
 13758  0006FA  2370               	addwfc	(___x_sample_fliter@t32+2)& (0+255),f,b
 13759  0006FC  0101               	movlb	1	; () banked
 13760  0006FE  5167               	movf	(??___x_sample_fliter+5)& (0+255),w,b
 13761  000700  0101               	movlb	1	; () banked
 13762  000702  2371               	addwfc	(___x_sample_fliter@t32+3)& (0+255),f,b
 13763                           
 13764                           ; BSR set to: 1
 13765  000704  0101               	movlb	1	; () banked
 13766  000706  2B72               	incf	___x_sample_fliter@i& (0+255),f,b
 13767  000708                     l9030:
 13768                           
 13769                           ; BSR set to: 1
 13770  000708  0101               	movlb	1	; () banked
 13771  00070A  5160               	movf	___x_sample_fliter@len& (0+255),w,b
 13772  00070C  0101               	movlb	1	; () banked
 13773  00070E  5D72               	subwf	___x_sample_fliter@i& (0+255),w,b
 13774  000710  A0D8               	btfss	status,0,c
 13775  000712  D77B               	goto	l9018
 13776                           
 13777                           ; BSR set to: 1
 13778                           ;sample.c: 39: }
 13779                           ;sample.c: 40: t32-=(max+min);
 13780                           
 13781                           ; BSR set to: 1
 13782  000714  0101               	movlb	1	; () banked
 13783  000716  516C               	movf	___x_sample_fliter@min& (0+255),w,b
 13784  000718  0101               	movlb	1	; () banked
 13785  00071A  256A               	addwf	___x_sample_fliter@max& (0+255),w,b
 13786  00071C  0101               	movlb	1	; () banked
 13787  00071E  6F62               	movwf	??___x_sample_fliter& (0+255),b
 13788  000720  0101               	movlb	1	; () banked
 13789  000722  516D               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 13790  000724  0101               	movlb	1	; () banked
 13791  000726  216B               	addwfc	(___x_sample_fliter@max+1)& (0+255),w,b
 13792  000728  0101               	movlb	1	; () banked
 13793  00072A  6F63               	movwf	(??___x_sample_fliter+1)& (0+255),b
 13794  00072C  0101               	movlb	1	; () banked
 13795  00072E  6B64               	clrf	(??___x_sample_fliter+2)& (0+255),b
 13796  000730  0101               	movlb	1	; () banked
 13797  000732  BF63               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 13798  000734  0764               	decf	(??___x_sample_fliter+2)& (0+255),f,b
 13799  000736  0101               	movlb	1	; () banked
 13800  000738  5164               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 13801  00073A  0101               	movlb	1	; () banked
 13802  00073C  6F65               	movwf	(??___x_sample_fliter+3)& (0+255),b
 13803  00073E  0101               	movlb	1	; () banked
 13804  000740  5162               	movf	??___x_sample_fliter& (0+255),w,b
 13805  000742  0101               	movlb	1	; () banked
 13806  000744  5F6E               	subwf	___x_sample_fliter@t32& (0+255),f,b
 13807  000746  0101               	movlb	1	; () banked
 13808  000748  5163               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 13809  00074A  0101               	movlb	1	; () banked
 13810  00074C  5B6F               	subwfb	(___x_sample_fliter@t32+1)& (0+255),f,b
 13811  00074E  0101               	movlb	1	; () banked
 13812  000750  5164               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 13813  000752  0101               	movlb	1	; () banked
 13814  000754  5B70               	subwfb	(___x_sample_fliter@t32+2)& (0+255),f,b
 13815  000756  0101               	movlb	1	; () banked
 13816  000758  5165               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 13817  00075A  0101               	movlb	1	; () banked
 13818  00075C  5B71               	subwfb	(___x_sample_fliter@t32+3)& (0+255),f,b
 13819                           
 13820                           ; BSR set to: 1
 13821                           ;sample.c: 41: t32=t32/(len-2);
 13822  00075E  C16E  F0E9         	movff	___x_sample_fliter@t32,___aldiv@dividend
 13823  000762  C16F  F0EA         	movff	___x_sample_fliter@t32+1,___aldiv@dividend+1
 13824  000766  C170  F0EB         	movff	___x_sample_fliter@t32+2,___aldiv@dividend+2
 13825  00076A  C171  F0EC         	movff	___x_sample_fliter@t32+3,___aldiv@dividend+3
 13826  00076E  0EFE               	movlw	254
 13827  000770  0101               	movlb	1	; () banked
 13828  000772  6F62               	movwf	??___x_sample_fliter& (0+255),b
 13829  000774  0EFF               	movlw	255
 13830  000776  0101               	movlb	1	; () banked
 13831  000778  6F63               	movwf	(??___x_sample_fliter+1)& (0+255),b
 13832  00077A  0101               	movlb	1	; () banked
 13833  00077C  5160               	movf	___x_sample_fliter@len& (0+255),w,b
 13834  00077E  0101               	movlb	1	; () banked
 13835  000780  6F64               	movwf	(??___x_sample_fliter+2)& (0+255),b
 13836  000782  6B65               	clrf	(??___x_sample_fliter+3)& (0+255),b
 13837  000784  0101               	movlb	1	; () banked
 13838  000786  5162               	movf	??___x_sample_fliter& (0+255),w,b
 13839  000788  0101               	movlb	1	; () banked
 13840  00078A  2764               	addwf	(??___x_sample_fliter+2)& (0+255),f,b
 13841  00078C  0101               	movlb	1	; () banked
 13842  00078E  5163               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 13843  000790  0101               	movlb	1	; () banked
 13844  000792  2365               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 13845  000794  C164  F0ED         	movff	??___x_sample_fliter+2,___aldiv@divisor
 13846  000798  C165  F0EE         	movff	??___x_sample_fliter+3,___aldiv@divisor+1
 13847  00079C  0100               	movlb	0	; () banked
 13848  00079E  0E00               	movlw	0
 13849  0007A0  BFEE               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
 13850  0007A2  0EFF               	movlw	-1
 13851  0007A4  6FEF               	movwf	(___aldiv@divisor+2)& (0+255),b
 13852  0007A6  6FF0               	movwf	(___aldiv@divisor+3)& (0+255),b
 13853  0007A8  ECA9  F008         	call	___aldiv	;wreg free
 13854  0007AC  C0E9  F16E         	movff	?___aldiv,___x_sample_fliter@t32
 13855  0007B0  C0EA  F16F         	movff	?___aldiv+1,___x_sample_fliter@t32+1
 13856  0007B4  C0EB  F170         	movff	?___aldiv+2,___x_sample_fliter@t32+2
 13857  0007B8  C0EC  F171         	movff	?___aldiv+3,___x_sample_fliter@t32+3
 13858                           
 13859                           ;sample.c: 42: buf[minLoc]=(int16_t)t32;
 13860  0007BC  0101               	movlb	1	; () banked
 13861  0007BE  5169               	movf	___x_sample_fliter@minLoc& (0+255),w,b
 13862  0007C0  0D02               	mullw	2
 13863  0007C2  50F3               	movf	prodl,w,c
 13864  0007C4  0101               	movlb	1	; () banked
 13865  0007C6  255E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13866  0007C8  6ED9               	movwf	fsr2l,c
 13867  0007CA  50F4               	movf	prodh,w,c
 13868  0007CC  0101               	movlb	1	; () banked
 13869  0007CE  215F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13870  0007D0  6EDA               	movwf	fsr2h,c
 13871  0007D2  C16E  FFDE         	movff	___x_sample_fliter@t32,postinc2
 13872  0007D6  C16F  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 13873                           
 13874                           ; BSR set to: 1
 13875                           ;sample.c: 43: buf[maxLoc]=(int16_t)t32;
 13876  0007DA  0101               	movlb	1	; () banked
 13877  0007DC  5168               	movf	___x_sample_fliter@maxLoc& (0+255),w,b
 13878  0007DE  0D02               	mullw	2
 13879  0007E0  50F3               	movf	prodl,w,c
 13880  0007E2  0101               	movlb	1	; () banked
 13881  0007E4  255E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13882  0007E6  6ED9               	movwf	fsr2l,c
 13883  0007E8  50F4               	movf	prodh,w,c
 13884  0007EA  0101               	movlb	1	; () banked
 13885  0007EC  215F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13886  0007EE  6EDA               	movwf	fsr2h,c
 13887  0007F0  C16E  FFDE         	movff	___x_sample_fliter@t32,postinc2
 13888  0007F4  C16F  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;sample.c: 44: loop--;
 13892  0007F8  0101               	movlb	1	; () banked
 13893  0007FA  0761               	decf	___x_sample_fliter@loop& (0+255),f,b
 13894  0007FC                     l9042:
 13895                           
 13896                           ; BSR set to: 1
 13897  0007FC  0101               	movlb	1	; () banked
 13898  0007FE  5161               	movf	___x_sample_fliter@loop& (0+255),w,b
 13899  000800  0101               	movlb	1	; () banked
 13900  000802  A4D8               	btfss	status,2,c
 13901  000804  D6E9               	goto	l9012
 13902                           
 13903                           ; BSR set to: 1
 13904                           ;sample.c: 45: }
 13905                           ;sample.c: 46: return (int16_t)t32;
 13906  000806  C16E  F15E         	movff	___x_sample_fliter@t32,?___x_sample_fliter
 13907  00080A  C16F  F15F         	movff	___x_sample_fliter@t32+1,?___x_sample_fliter+1
 13908                           
 13909                           ; BSR set to: 1
 13910  00080E  0012               	return		;funcret
 13911  000810                     __end_of___x_sample_fliter:
 13912                           	opt stack 0
 13913                           tblptru	equ	0xFF8
 13914                           tblptrh	equ	0xFF7
 13915                           tblptrl	equ	0xFF6
 13916                           tablat	equ	0xFF5
 13917                           prodh	equ	0xFF4
 13918                           prodl	equ	0xFF3
 13919                           intcon	equ	0xFF2
 13920                           indf0	equ	0xFEF
 13921                           postinc0	equ	0xFEE
 13922                           fsr0h	equ	0xFEA
 13923                           fsr0l	equ	0xFE9
 13924                           wreg	equ	0xFE8
 13925                           postinc1	equ	0xFE6
 13926                           postdec1	equ	0xFE5
 13927                           plusw1	equ	0xFE3
 13928                           fsr1h	equ	0xFE2
 13929                           fsr1l	equ	0xFE1
 13930                           indf2	equ	0xFDF
 13931                           postinc2	equ	0xFDE
 13932                           postdec2	equ	0xFDD
 13933                           plusw2	equ	0xFDB
 13934                           fsr2h	equ	0xFDA
 13935                           fsr2l	equ	0xFD9
 13936                           status	equ	0xFD8
 13937                           
 13938 ;; *************** function ___aldiv *****************
 13939 ;; Defined at:
 13940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\aldiv.c"
 13941 ;; Parameters:    Size  Location     Type
 13942 ;;  dividend        4    0[BANK0 ] long 
 13943 ;;  divisor         4    4[BANK0 ] long 
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;  quotient        4   10[BANK0 ] long 
 13946 ;;  sign            1    9[BANK0 ] unsigned char 
 13947 ;;  counter         1    8[BANK0 ] unsigned char 
 13948 ;; Return value:  Size  Location     Type
 13949 ;;                  4    0[BANK0 ] long 
 13950 ;; Registers used:
 13951 ;;		wreg, status,2, status,0
 13952 ;; Tracked objects:
 13953 ;;		On entry : 0/0
 13954 ;;		On exit  : 0/0
 13955 ;;		Unchanged: 0/0
 13956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13958 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13960 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13961 ;;Total ram usage:       14 bytes
 13962 ;; Hardware stack levels used:    1
 13963 ;; Hardware stack levels required when called:    4
 13964 ;; This function calls:
 13965 ;;		Nothing
 13966 ;; This function is called by:
 13967 ;;		___x_sample_fliter
 13968 ;;		___x_sample_fifo
 13969 ;;		_m_interp1_cal_p_v
 13970 ;;		_m_interp1_cal_p_t
 13971 ;;		_cal_pt100_temperature
 13972 ;;		_m_int_2_str
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           	psect	text77
 13977  001152                     __ptext77:
 13978                           	opt stack 0
 13979  001152                     ___aldiv:
 13980                           	opt stack 21
 13981                           
 13982                           ; BSR set to: 1
 13983                           ;incstack = 0
 13984  001152  0E00               	movlw	0
 13985  001154  0100               	movlb	0	; () banked
 13986  001156  6FF2               	movwf	___aldiv@sign& (0+255),b
 13987                           
 13988                           ; BSR set to: 0
 13989  001158  0100               	movlb	0	; () banked
 13990  00115A  AFF0               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 13991  00115C  D00C               	goto	l8868
 13992                           
 13993                           ; BSR set to: 0
 13994  00115E  0100               	movlb	0	; () banked
 13995  001160  1FF0               	comf	(___aldiv@divisor+3)& (0+255),f,b
 13996  001162  1FEF               	comf	(___aldiv@divisor+2)& (0+255),f,b
 13997  001164  1FEE               	comf	(___aldiv@divisor+1)& (0+255),f,b
 13998  001166  6DED               	negf	___aldiv@divisor& (0+255),b
 13999  001168  0E00               	movlw	0
 14000  00116A  23EE               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 14001  00116C  23EF               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 14002  00116E  23F0               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 14003                           
 14004                           ; BSR set to: 0
 14005  001170  0E01               	movlw	1
 14006  001172  0100               	movlb	0	; () banked
 14007  001174  6FF2               	movwf	___aldiv@sign& (0+255),b
 14008  001176                     l8868:
 14009                           
 14010                           ; BSR set to: 0
 14011  001176  0100               	movlb	0	; () banked
 14012  001178  AFEC               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 14013  00117A  D00C               	goto	l8874
 14014                           
 14015                           ; BSR set to: 0
 14016  00117C  0100               	movlb	0	; () banked
 14017  00117E  1FEC               	comf	(___aldiv@dividend+3)& (0+255),f,b
 14018  001180  1FEB               	comf	(___aldiv@dividend+2)& (0+255),f,b
 14019  001182  1FEA               	comf	(___aldiv@dividend+1)& (0+255),f,b
 14020  001184  6DE9               	negf	___aldiv@dividend& (0+255),b
 14021  001186  0E00               	movlw	0
 14022  001188  23EA               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 14023  00118A  23EB               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 14024  00118C  23EC               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 14025                           
 14026                           ; BSR set to: 0
 14027  00118E  0E01               	movlw	1
 14028  001190  0100               	movlb	0	; () banked
 14029  001192  1BF2               	xorwf	___aldiv@sign& (0+255),f,b
 14030  001194                     l8874:
 14031                           
 14032                           ; BSR set to: 0
 14033  001194  0E00               	movlw	0
 14034  001196  0100               	movlb	0	; () banked
 14035  001198  6FF3               	movwf	___aldiv@quotient& (0+255),b
 14036  00119A  0E00               	movlw	0
 14037  00119C  6FF4               	movwf	(___aldiv@quotient+1)& (0+255),b
 14038  00119E  0E00               	movlw	0
 14039  0011A0  6FF5               	movwf	(___aldiv@quotient+2)& (0+255),b
 14040  0011A2  0E00               	movlw	0
 14041  0011A4  6FF6               	movwf	(___aldiv@quotient+3)& (0+255),b
 14042                           
 14043                           ; BSR set to: 0
 14044  0011A6  0100               	movlb	0	; () banked
 14045  0011A8  51ED               	movf	___aldiv@divisor& (0+255),w,b
 14046  0011AA  0100               	movlb	0	; () banked
 14047  0011AC  11EE               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 14048  0011AE  0100               	movlb	0	; () banked
 14049  0011B0  11EF               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 14050  0011B2  0100               	movlb	0	; () banked
 14051  0011B4  11F0               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 14052  0011B6  B4D8               	btfsc	status,2,c
 14053  0011B8  D042               	goto	l8896
 14054                           
 14055                           ; BSR set to: 0
 14056  0011BA  0E01               	movlw	1
 14057  0011BC  0100               	movlb	0	; () banked
 14058  0011BE  6FF1               	movwf	___aldiv@counter& (0+255),b
 14059  0011C0  D008               	goto	l8882
 14060  0011C2                     l8880:
 14061                           
 14062                           ; BSR set to: 0
 14063  0011C2  0100               	movlb	0	; () banked
 14064  0011C4  90D8               	bcf	status,0,c
 14065  0011C6  37ED               	rlcf	___aldiv@divisor& (0+255),f,b
 14066  0011C8  37EE               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 14067  0011CA  37EF               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 14068  0011CC  37F0               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 14069  0011CE  0100               	movlb	0	; () banked
 14070  0011D0  2BF1               	incf	___aldiv@counter& (0+255),f,b
 14071  0011D2                     l8882:
 14072                           
 14073                           ; BSR set to: 0
 14074  0011D2  0100               	movlb	0	; () banked
 14075  0011D4  AFF0               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 14076  0011D6  D7F5               	goto	l8880
 14077  0011D8                     l8884:
 14078                           
 14079                           ; BSR set to: 0
 14080  0011D8  0100               	movlb	0	; () banked
 14081  0011DA  90D8               	bcf	status,0,c
 14082  0011DC  37F3               	rlcf	___aldiv@quotient& (0+255),f,b
 14083  0011DE  37F4               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 14084  0011E0  37F5               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 14085  0011E2  37F6               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 14086                           
 14087                           ; BSR set to: 0
 14088  0011E4  0100               	movlb	0	; () banked
 14089  0011E6  51ED               	movf	___aldiv@divisor& (0+255),w,b
 14090  0011E8  0100               	movlb	0	; () banked
 14091  0011EA  5DE9               	subwf	___aldiv@dividend& (0+255),w,b
 14092  0011EC  0100               	movlb	0	; () banked
 14093  0011EE  51EE               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14094  0011F0  0100               	movlb	0	; () banked
 14095  0011F2  59EA               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 14096  0011F4  0100               	movlb	0	; () banked
 14097  0011F6  51EF               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14098  0011F8  0100               	movlb	0	; () banked
 14099  0011FA  59EB               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 14100  0011FC  0100               	movlb	0	; () banked
 14101  0011FE  51F0               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14102  001200  0100               	movlb	0	; () banked
 14103  001202  59EC               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 14104  001204  A0D8               	btfss	status,0,c
 14105  001206  D012               	goto	l8892
 14106                           
 14107                           ; BSR set to: 0
 14108  001208  0100               	movlb	0	; () banked
 14109  00120A  51ED               	movf	___aldiv@divisor& (0+255),w,b
 14110  00120C  0100               	movlb	0	; () banked
 14111  00120E  5FE9               	subwf	___aldiv@dividend& (0+255),f,b
 14112  001210  0100               	movlb	0	; () banked
 14113  001212  51EE               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14114  001214  0100               	movlb	0	; () banked
 14115  001216  5BEA               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 14116  001218  0100               	movlb	0	; () banked
 14117  00121A  51EF               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14118  00121C  0100               	movlb	0	; () banked
 14119  00121E  5BEB               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 14120  001220  0100               	movlb	0	; () banked
 14121  001222  51F0               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14122  001224  0100               	movlb	0	; () banked
 14123  001226  5BEC               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 14124                           
 14125                           ; BSR set to: 0
 14126  001228  0100               	movlb	0	; () banked
 14127  00122A  81F3               	bsf	___aldiv@quotient& (0+255),0,b
 14128  00122C                     l8892:
 14129                           
 14130                           ; BSR set to: 0
 14131  00122C  0100               	movlb	0	; () banked
 14132  00122E  90D8               	bcf	status,0,c
 14133  001230  33F0               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 14134  001232  33EF               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 14135  001234  33EE               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 14136  001236  33ED               	rrcf	___aldiv@divisor& (0+255),f,b
 14137                           
 14138                           ; BSR set to: 0
 14139  001238  0100               	movlb	0	; () banked
 14140  00123A  2FF1               	decfsz	___aldiv@counter& (0+255),f,b
 14141  00123C  D7CD               	goto	l8884
 14142  00123E                     l8896:
 14143                           
 14144                           ; BSR set to: 0
 14145  00123E  0100               	movlb	0	; () banked
 14146  001240  51F2               	movf	___aldiv@sign& (0+255),w,b
 14147  001242  0100               	movlb	0	; () banked
 14148  001244  B4D8               	btfsc	status,2,c
 14149  001246  D009               	goto	l8900
 14150                           
 14151                           ; BSR set to: 0
 14152  001248  0100               	movlb	0	; () banked
 14153  00124A  1FF6               	comf	(___aldiv@quotient+3)& (0+255),f,b
 14154  00124C  1FF5               	comf	(___aldiv@quotient+2)& (0+255),f,b
 14155  00124E  1FF4               	comf	(___aldiv@quotient+1)& (0+255),f,b
 14156  001250  6DF3               	negf	___aldiv@quotient& (0+255),b
 14157  001252  0E00               	movlw	0
 14158  001254  23F4               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 14159  001256  23F5               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 14160  001258  23F6               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 14161  00125A                     l8900:
 14162                           
 14163                           ; BSR set to: 0
 14164  00125A  C0F3  F0E9         	movff	___aldiv@quotient,?___aldiv
 14165  00125E  C0F4  F0EA         	movff	___aldiv@quotient+1,?___aldiv+1
 14166  001262  C0F5  F0EB         	movff	___aldiv@quotient+2,?___aldiv+2
 14167  001266  C0F6  F0EC         	movff	___aldiv@quotient+3,?___aldiv+3
 14168  00126A  0012               	return	
 14169  00126C                     __end_of___aldiv:
 14170                           	opt stack 0
 14171                           tblptru	equ	0xFF8
 14172                           tblptrh	equ	0xFF7
 14173                           tblptrl	equ	0xFF6
 14174                           tablat	equ	0xFF5
 14175                           prodh	equ	0xFF4
 14176                           prodl	equ	0xFF3
 14177                           intcon	equ	0xFF2
 14178                           indf0	equ	0xFEF
 14179                           postinc0	equ	0xFEE
 14180                           fsr0h	equ	0xFEA
 14181                           fsr0l	equ	0xFE9
 14182                           wreg	equ	0xFE8
 14183                           postinc1	equ	0xFE6
 14184                           postdec1	equ	0xFE5
 14185                           plusw1	equ	0xFE3
 14186                           fsr1h	equ	0xFE2
 14187                           fsr1l	equ	0xFE1
 14188                           indf2	equ	0xFDF
 14189                           postinc2	equ	0xFDE
 14190                           postdec2	equ	0xFDD
 14191                           plusw2	equ	0xFDB
 14192                           fsr2h	equ	0xFDA
 14193                           fsr2l	equ	0xFD9
 14194                           status	equ	0xFD8
 14195                           
 14196 ;; *************** function _delay_ms *****************
 14197 ;; Defined at:
 14198 ;;		line 97 in file "src/soc/clock.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;  dly             2    4[BANK0 ] unsigned int 
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1    wreg      void 
 14205 ;; Registers used:
 14206 ;;		wreg, status,2, status,0, cstack
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14216 ;;Total ram usage:        2 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:    5
 14219 ;; This function calls:
 14220 ;;		_delay_us
 14221 ;; This function is called by:
 14222 ;;		_sample_diff_pr_chip_slow
 14223 ;;		_sample_pr_chip_comm
 14224 ;;		_key_polling
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           	psect	text78
 14229  00321E                     __ptext78:
 14230                           	opt stack 0
 14231  00321E                     _delay_ms:
 14232                           	opt stack 21
 14233                           
 14234                           ;clock.c: 99: while(dly>0){
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;incstack = 0
 14238  00321E  D00B               	goto	l9050
 14239  003220                     l9046:
 14240                           
 14241                           ;clock.c: 100: delay_us(1000);
 14242  003220  0E03               	movlw	3
 14243  003222  0100               	movlb	0	; () banked
 14244  003224  6FEA               	movwf	(delay_us@dly+1)& (0+255),b
 14245  003226  0EE8               	movlw	232
 14246  003228  6FE9               	movwf	delay_us@dly& (0+255),b
 14247  00322A  EC87  F017         	call	_delay_us	;wreg free
 14248                           
 14249                           ;clock.c: 101: dly--;
 14250  00322E  0100               	movlb	0	; () banked
 14251  003230  07ED               	decf	delay_ms@dly& (0+255),f,b
 14252  003232  A0D8               	btfss	status,0,c
 14253  003234  07EE               	decf	(delay_ms@dly+1)& (0+255),f,b
 14254  003236                     l9050:
 14255  003236  0100               	movlb	0	; () banked
 14256  003238  51ED               	movf	delay_ms@dly& (0+255),w,b
 14257  00323A  0100               	movlb	0	; () banked
 14258  00323C  11EE               	iorwf	(delay_ms@dly+1)& (0+255),w,b
 14259  00323E  B4D8               	btfsc	status,2,c
 14260  003240  0012               	return	
 14261  003242  D7EE               	goto	l9046
 14262  003244                     __end_of_delay_ms:
 14263                           	opt stack 0
 14264                           tblptru	equ	0xFF8
 14265                           tblptrh	equ	0xFF7
 14266                           tblptrl	equ	0xFF6
 14267                           tablat	equ	0xFF5
 14268                           prodh	equ	0xFF4
 14269                           prodl	equ	0xFF3
 14270                           intcon	equ	0xFF2
 14271                           indf0	equ	0xFEF
 14272                           postinc0	equ	0xFEE
 14273                           fsr0h	equ	0xFEA
 14274                           fsr0l	equ	0xFE9
 14275                           wreg	equ	0xFE8
 14276                           postinc1	equ	0xFE6
 14277                           postdec1	equ	0xFE5
 14278                           plusw1	equ	0xFE3
 14279                           fsr1h	equ	0xFE2
 14280                           fsr1l	equ	0xFE1
 14281                           indf2	equ	0xFDF
 14282                           postinc2	equ	0xFDE
 14283                           postdec2	equ	0xFDD
 14284                           plusw2	equ	0xFDB
 14285                           fsr2h	equ	0xFDA
 14286                           fsr2l	equ	0xFD9
 14287                           status	equ	0xFD8
 14288                           
 14289 ;; *************** function _delay_us *****************
 14290 ;; Defined at:
 14291 ;;		line 82 in file "src/soc/clock.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;  dly             2    0[BANK0 ] unsigned int 
 14294 ;; Auto vars:     Size  Location     Type
 14295 ;;  i               2    2[BANK0 ] unsigned int 
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  1    wreg      void 
 14298 ;; Registers used:
 14299 ;;		wreg, status,2, status,0
 14300 ;; Tracked objects:
 14301 ;;		On entry : 0/0
 14302 ;;		On exit  : 0/0
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14308 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14309 ;;Total ram usage:        4 bytes
 14310 ;; Hardware stack levels used:    1
 14311 ;; Hardware stack levels required when called:    4
 14312 ;; This function calls:
 14313 ;;		Nothing
 14314 ;; This function is called by:
 14315 ;;		_in_adc_start_and_read
 14316 ;;		_delay_ms
 14317 ;; This function uses a non-reentrant model
 14318 ;;
 14319                           
 14320                           	psect	text79
 14321  002F0E                     __ptext79:
 14322                           	opt stack 0
 14323  002F0E                     _delay_us:
 14324                           	opt stack 21
 14325                           
 14326                           ;clock.c: 84: uint16_t i;
 14327                           ;clock.c: 85: for(i=0;i<dly;i++){
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;incstack = 0
 14331  002F0E  0E00               	movlw	0
 14332  002F10  0100               	movlb	0	; () banked
 14333  002F12  6FEC               	movwf	(delay_us@i+1)& (0+255),b
 14334  002F14  0E00               	movlw	0
 14335  002F16  6FEB               	movwf	delay_us@i& (0+255),b
 14336  002F18  D00B               	goto	l8858
 14337  002F1A                     l1546:
 14338                           
 14339                           ; BSR set to: 0
 14340                           ;clock.c: 86: __nop();
 14341  002F1A  F000               	nop	
 14342                           
 14343                           ;clock.c: 87: __nop();
 14344  002F1C  F000               	nop	
 14345                           
 14346                           ;clock.c: 88: __nop();
 14347  002F1E  F000               	nop	
 14348                           
 14349                           ;clock.c: 89: __nop();
 14350  002F20  F000               	nop	
 14351                           
 14352                           ;clock.c: 91: __nop();
 14353  002F22  F000               	nop	
 14354                           
 14355                           ;clock.c: 92: __nop();
 14356  002F24  F000               	nop	
 14357                           
 14358                           ;clock.c: 93: __nop();
 14359  002F26  F000               	nop	
 14360                           
 14361                           ;clock.c: 94: __nop();
 14362  002F28  F000               	nop	
 14363  002F2A  0100               	movlb	0	; () banked
 14364  002F2C  4BEB               	infsnz	delay_us@i& (0+255),f,b
 14365  002F2E  2BEC               	incf	(delay_us@i+1)& (0+255),f,b
 14366  002F30                     l8858:
 14367                           
 14368                           ; BSR set to: 0
 14369  002F30  0100               	movlb	0	; () banked
 14370  002F32  51E9               	movf	delay_us@dly& (0+255),w,b
 14371  002F34  0100               	movlb	0	; () banked
 14372  002F36  5DEB               	subwf	delay_us@i& (0+255),w,b
 14373  002F38  0100               	movlb	0	; () banked
 14374  002F3A  51EA               	movf	(delay_us@dly+1)& (0+255),w,b
 14375  002F3C  0100               	movlb	0	; () banked
 14376  002F3E  59EC               	subwfb	(delay_us@i+1)& (0+255),w,b
 14377  002F40  B0D8               	btfsc	status,0,c
 14378  002F42  0012               	return	
 14379  002F44  D7EA               	goto	l1546
 14380  002F46                     __end_of_delay_us:
 14381                           	opt stack 0
 14382                           tblptru	equ	0xFF8
 14383                           tblptrh	equ	0xFF7
 14384                           tblptrl	equ	0xFF6
 14385                           tablat	equ	0xFF5
 14386                           prodh	equ	0xFF4
 14387                           prodl	equ	0xFF3
 14388                           intcon	equ	0xFF2
 14389                           indf0	equ	0xFEF
 14390                           postinc0	equ	0xFEE
 14391                           fsr0h	equ	0xFEA
 14392                           fsr0l	equ	0xFE9
 14393                           wreg	equ	0xFE8
 14394                           postinc1	equ	0xFE6
 14395                           postdec1	equ	0xFE5
 14396                           plusw1	equ	0xFE3
 14397                           fsr1h	equ	0xFE2
 14398                           fsr1l	equ	0xFE1
 14399                           indf2	equ	0xFDF
 14400                           postinc2	equ	0xFDE
 14401                           postdec2	equ	0xFDD
 14402                           plusw2	equ	0xFDB
 14403                           fsr2h	equ	0xFDA
 14404                           fsr2l	equ	0xFD9
 14405                           status	equ	0xFD8
 14406                           
 14407 ;; *************** function _ads1115_start_conversion *****************
 14408 ;; Defined at:
 14409 ;;		line 122 in file "src/driver/ads1115.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;  pAds1115        2    8[BANK0 ] PTR struct .
 14412 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;		None
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      void 
 14417 ;; Registers used:
 14418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14428 ;;Total ram usage:        2 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:    8
 14431 ;; This function calls:
 14432 ;;		_ads1115_write_reg
 14433 ;; This function is called by:
 14434 ;;		_sample_diff_pr_chip_fast
 14435 ;;		_sample_diff_pr_chip_slow
 14436 ;;		_sample_pr_chip_comm
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text80
 14441  0031A4                     __ptext80:
 14442                           	opt stack 0
 14443  0031A4                     _ads1115_start_conversion:
 14444                           	opt stack 19
 14445                           
 14446                           ;ads1115.c: 124: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;incstack = 0
 14450  0031A4  C0F1  F0EC         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 14451  0031A8  C0F2  F0ED         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 14452  0031AC  0E01               	movlw	1
 14453  0031AE  0100               	movlb	0	; () banked
 14454  0031B0  6FEE               	movwf	ads1115_write_reg@addr& (0+255),b
 14455  0031B2  0100               	movlb	0	; () banked
 14456  0031B4  EE20 F002          	lfsr	2,2
 14457  0031B8  51F1               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 14458  0031BA  26D9               	addwf	fsr2l,f,c
 14459  0031BC  51F2               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 14460  0031BE  22DA               	addwfc	fsr2h,f,c
 14461  0031C0  CFDE F0EF          	movff	postinc2,ads1115_write_reg@value
 14462  0031C4  CFDD F0F0          	movff	postdec2,ads1115_write_reg@value+1
 14463  0031C8  EC39  F00A         	call	_ads1115_write_reg	;wreg free
 14464  0031CC  0012               	return		;funcret
 14465  0031CE                     __end_of_ads1115_start_conversion:
 14466                           	opt stack 0
 14467                           tblptru	equ	0xFF8
 14468                           tblptrh	equ	0xFF7
 14469                           tblptrl	equ	0xFF6
 14470                           tablat	equ	0xFF5
 14471                           prodh	equ	0xFF4
 14472                           prodl	equ	0xFF3
 14473                           intcon	equ	0xFF2
 14474                           indf0	equ	0xFEF
 14475                           postinc0	equ	0xFEE
 14476                           fsr0h	equ	0xFEA
 14477                           fsr0l	equ	0xFE9
 14478                           wreg	equ	0xFE8
 14479                           postinc1	equ	0xFE6
 14480                           postdec1	equ	0xFE5
 14481                           plusw1	equ	0xFE3
 14482                           fsr1h	equ	0xFE2
 14483                           fsr1l	equ	0xFE1
 14484                           indf2	equ	0xFDF
 14485                           postinc2	equ	0xFDE
 14486                           postdec2	equ	0xFDD
 14487                           plusw2	equ	0xFDB
 14488                           fsr2h	equ	0xFDA
 14489                           fsr2l	equ	0xFD9
 14490                           status	equ	0xFD8
 14491                           
 14492 ;; *************** function _ads1115_write_reg *****************
 14493 ;; Defined at:
 14494 ;;		line 17 in file "src/driver/ads1115.c"
 14495 ;; Parameters:    Size  Location     Type
 14496 ;;  pAds1115        2    3[BANK0 ] PTR struct .
 14497 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14498 ;;  addr            1    5[BANK0 ] unsigned char 
 14499 ;;  value           2    6[BANK0 ] unsigned int 
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;		None
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  1    wreg      void 
 14504 ;; Registers used:
 14505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14506 ;; Tracked objects:
 14507 ;;		On entry : 0/0
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14511 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14514 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14515 ;;Total ram usage:        5 bytes
 14516 ;; Hardware stack levels used:    1
 14517 ;; Hardware stack levels required when called:    7
 14518 ;; This function calls:
 14519 ;;		_iic_send_byte
 14520 ;;		_iic_start
 14521 ;;		_iic_stop
 14522 ;; This function is called by:
 14523 ;;		_ads1115_start_conversion
 14524 ;;		_ads1115_set_threshold_lo
 14525 ;;		_ads1115_set_threshold_hi
 14526 ;; This function uses a non-reentrant model
 14527 ;;
 14528                           
 14529                           	psect	text81
 14530  001472                     __ptext81:
 14531                           	opt stack 0
 14532  001472                     _ads1115_write_reg:
 14533                           	opt stack 19
 14534                           
 14535                           ;ads1115.c: 19: pAds1115->iic_start();
 14536                           
 14537                           ;incstack = 0
 14538  001472  0100               	movlb	0	; () banked
 14539  001474  EE20 F006          	lfsr	2,6
 14540  001478  51EC               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14541  00147A  26D9               	addwf	fsr2l,f,c
 14542  00147C  51ED               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14543  00147E  22DA               	addwfc	fsr2h,f,c
 14544  001480  D801               	call	u6958
 14545  001482  D00A               	goto	u6959
 14546  001484                     u6958:
 14547  001484  0005               	push	
 14548  001486  6EFA               	movwf	pclath,c
 14549  001488  50DE               	movf	postinc2,w,c
 14550  00148A  6EFD               	movwf	tosl,c
 14551  00148C  50DE               	movf	postinc2,w,c
 14552  00148E  6EFE               	movwf	tosh,c
 14553  001490  50F8               	movf	tblptru,w,c
 14554  001492  6EFF               	movwf	tosu,c
 14555  001494  50FA               	movf	pclath,w,c
 14556  001496  0012               	return		;indir
 14557  001498                     u6959:
 14558                           
 14559                           ;ads1115.c: 21: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 14560  001498  0100               	movlb	0	; () banked
 14561  00149A  EE20 F00A          	lfsr	2,10
 14562  00149E  51EC               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14563  0014A0  26D9               	addwf	fsr2l,f,c
 14564  0014A2  51ED               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14565  0014A4  22DA               	addwfc	fsr2h,f,c
 14566  0014A6  D801               	call	u6968
 14567  0014A8  D012               	goto	u6969
 14568  0014AA                     u6968:
 14569  0014AA  0005               	push	
 14570  0014AC  6EFA               	movwf	pclath,c
 14571  0014AE  50DE               	movf	postinc2,w,c
 14572  0014B0  6EFD               	movwf	tosl,c
 14573  0014B2  50DE               	movf	postinc2,w,c
 14574  0014B4  6EFE               	movwf	tosh,c
 14575  0014B6  50F8               	movf	tblptru,w,c
 14576  0014B8  6EFF               	movwf	tosu,c
 14577  0014BA  50FA               	movf	pclath,w,c
 14578  0014BC  0100               	movlb	0	; () banked
 14579  0014BE  EE20 F001          	lfsr	2,1
 14580  0014C2  51EC               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14581  0014C4  26D9               	addwf	fsr2l,f,c
 14582  0014C6  51ED               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14583  0014C8  22DA               	addwfc	fsr2h,f,c
 14584  0014CA  50DF               	movf	indf2,w,c
 14585  0014CC  0012               	return		;indir
 14586  0014CE                     u6969:
 14587                           
 14588                           ;ads1115.c: 22: pAds1115->iic_send_byte(addr);
 14589  0014CE  0100               	movlb	0	; () banked
 14590  0014D0  EE20 F00A          	lfsr	2,10
 14591  0014D4  51EC               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14592  0014D6  26D9               	addwf	fsr2l,f,c
 14593  0014D8  51ED               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14594  0014DA  22DA               	addwfc	fsr2h,f,c
 14595  0014DC  D801               	call	u6978
 14596  0014DE  D00C               	goto	u6979
 14597  0014E0                     u6978:
 14598  0014E0  0005               	push	
 14599  0014E2  6EFA               	movwf	pclath,c
 14600  0014E4  50DE               	movf	postinc2,w,c
 14601  0014E6  6EFD               	movwf	tosl,c
 14602  0014E8  50DE               	movf	postinc2,w,c
 14603  0014EA  6EFE               	movwf	tosh,c
 14604  0014EC  50F8               	movf	tblptru,w,c
 14605  0014EE  6EFF               	movwf	tosu,c
 14606  0014F0  50FA               	movf	pclath,w,c
 14607  0014F2  0100               	movlb	0	; () banked
 14608  0014F4  51EE               	movf	ads1115_write_reg@addr& (0+255),w,b
 14609  0014F6  0012               	return		;indir
 14610  0014F8                     u6979:
 14611                           
 14612                           ;ads1115.c: 24: pAds1115->iic_send_byte((uint8_t)(value>>8));
 14613  0014F8  0100               	movlb	0	; () banked
 14614  0014FA  EE20 F00A          	lfsr	2,10
 14615  0014FE  51EC               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14616  001500  26D9               	addwf	fsr2l,f,c
 14617  001502  51ED               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14618  001504  22DA               	addwfc	fsr2h,f,c
 14619  001506  D801               	call	u6988
 14620  001508  D00C               	goto	u6989
 14621  00150A                     u6988:
 14622  00150A  0005               	push	
 14623  00150C  6EFA               	movwf	pclath,c
 14624  00150E  50DE               	movf	postinc2,w,c
 14625  001510  6EFD               	movwf	tosl,c
 14626  001512  50DE               	movf	postinc2,w,c
 14627  001514  6EFE               	movwf	tosh,c
 14628  001516  50F8               	movf	tblptru,w,c
 14629  001518  6EFF               	movwf	tosu,c
 14630  00151A  50FA               	movf	pclath,w,c
 14631  00151C  0100               	movlb	0	; () banked
 14632  00151E  51F0               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 14633  001520  0012               	return		;indir
 14634  001522                     u6989:
 14635                           
 14636                           ;ads1115.c: 25: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 14637  001522  0100               	movlb	0	; () banked
 14638  001524  EE20 F00A          	lfsr	2,10
 14639  001528  51EC               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14640  00152A  26D9               	addwf	fsr2l,f,c
 14641  00152C  51ED               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14642  00152E  22DA               	addwfc	fsr2h,f,c
 14643  001530  D801               	call	u6998
 14644  001532  D00C               	goto	u6999
 14645  001534                     u6998:
 14646  001534  0005               	push	
 14647  001536  6EFA               	movwf	pclath,c
 14648  001538  50DE               	movf	postinc2,w,c
 14649  00153A  6EFD               	movwf	tosl,c
 14650  00153C  50DE               	movf	postinc2,w,c
 14651  00153E  6EFE               	movwf	tosh,c
 14652  001540  50F8               	movf	tblptru,w,c
 14653  001542  6EFF               	movwf	tosu,c
 14654  001544  50FA               	movf	pclath,w,c
 14655  001546  0100               	movlb	0	; () banked
 14656  001548  51EF               	movf	ads1115_write_reg@value& (0+255),w,b
 14657  00154A  0012               	return		;indir
 14658  00154C                     u6999:
 14659                           
 14660                           ;ads1115.c: 26: pAds1115->iic_stop();
 14661  00154C  0100               	movlb	0	; () banked
 14662  00154E  EE20 F008          	lfsr	2,8
 14663  001552  51EC               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14664  001554  26D9               	addwf	fsr2l,f,c
 14665  001556  51ED               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14666  001558  22DA               	addwfc	fsr2h,f,c
 14667  00155A  D801               	call	u7008
 14668  00155C  0012               	return	
 14669  00155E                     u7008:
 14670  00155E  0005               	push	
 14671  001560  6EFA               	movwf	pclath,c
 14672  001562  50DE               	movf	postinc2,w,c
 14673  001564  6EFD               	movwf	tosl,c
 14674  001566  50DE               	movf	postinc2,w,c
 14675  001568  6EFE               	movwf	tosh,c
 14676  00156A  50F8               	movf	tblptru,w,c
 14677  00156C  6EFF               	movwf	tosu,c
 14678  00156E  50FA               	movf	pclath,w,c
 14679  001570  0012               	return		;indir
 14680  001572                     __end_of_ads1115_write_reg:
 14681                           	opt stack 0
 14682                           tosu	equ	0xFFF
 14683                           tosh	equ	0xFFE
 14684                           tosl	equ	0xFFD
 14685                           pclath	equ	0xFFA
 14686                           tblptru	equ	0xFF8
 14687                           tblptrh	equ	0xFF7
 14688                           tblptrl	equ	0xFF6
 14689                           tablat	equ	0xFF5
 14690                           prodh	equ	0xFF4
 14691                           prodl	equ	0xFF3
 14692                           intcon	equ	0xFF2
 14693                           indf0	equ	0xFEF
 14694                           postinc0	equ	0xFEE
 14695                           fsr0h	equ	0xFEA
 14696                           fsr0l	equ	0xFE9
 14697                           wreg	equ	0xFE8
 14698                           postinc1	equ	0xFE6
 14699                           postdec1	equ	0xFE5
 14700                           plusw1	equ	0xFE3
 14701                           fsr1h	equ	0xFE2
 14702                           fsr1l	equ	0xFE1
 14703                           indf2	equ	0xFDF
 14704                           postinc2	equ	0xFDE
 14705                           postdec2	equ	0xFDD
 14706                           plusw2	equ	0xFDB
 14707                           fsr2h	equ	0xFDA
 14708                           fsr2l	equ	0xFD9
 14709                           status	equ	0xFD8
 14710                           
 14711 ;; *************** function _ads1115_set_mux *****************
 14712 ;; Defined at:
 14713 ;;		line 54 in file "src/driver/ads1115.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 14716 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14717 ;;  mux             1    2[BANK0 ] enum E6976
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;		None
 14720 ;; Return value:  Size  Location     Type
 14721 ;;                  1    wreg      void 
 14722 ;; Registers used:
 14723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14724 ;; Tracked objects:
 14725 ;;		On entry : 0/0
 14726 ;;		On exit  : 0/0
 14727 ;;		Unchanged: 0/0
 14728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14729 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14731 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14733 ;;Total ram usage:        4 bytes
 14734 ;; Hardware stack levels used:    1
 14735 ;; Hardware stack levels required when called:    4
 14736 ;; This function calls:
 14737 ;;		Nothing
 14738 ;; This function is called by:
 14739 ;;		_sample_diff_pr_chip_fast
 14740 ;;		_sample_diff_pr_chip_slow
 14741 ;;		_sample_pr_chip_comm
 14742 ;; This function uses a non-reentrant model
 14743 ;;
 14744                           
 14745                           	psect	text82
 14746  0031F6                     __ptext82:
 14747                           	opt stack 0
 14748  0031F6                     _ads1115_set_mux:
 14749                           	opt stack 23
 14750                           
 14751                           ;ads1115.c: 56: pAds1115->config.bits.MUX=mux;
 14752                           
 14753                           ;incstack = 0
 14754  0031F6  C0EB  F0EC         	movff	ads1115_set_mux@mux,??_ads1115_set_mux
 14755  0031FA  0100               	movlb	0	; () banked
 14756  0031FC  EE20 F003          	lfsr	2,3
 14757  003200  51E9               	movf	ads1115_set_mux@pAds1115& (0+255),w,b
 14758  003202  26D9               	addwf	fsr2l,f,c
 14759  003204  51EA               	movf	(ads1115_set_mux@pAds1115+1)& (0+255),w,b
 14760  003206  22DA               	addwfc	fsr2h,f,c
 14761  003208  0100               	movlb	0	; () banked
 14762  00320A  3BEC               	swapf	??_ads1115_set_mux& (0+255),f,b
 14763  00320C  0100               	movlb	0	; () banked
 14764  00320E  50DF               	movf	223,w,c
 14765  003210  0100               	movlb	0	; () banked
 14766  003212  19EC               	xorwf	??_ads1115_set_mux& (0+255),w,b
 14767  003214  0B8F               	andlw	-113
 14768  003216  19EC               	xorwf	??_ads1115_set_mux& (0+255),w,b
 14769  003218  0100               	movlb	0	; () banked
 14770  00321A  6EDF               	movwf	223,c
 14771                           
 14772                           ; BSR set to: 0
 14773  00321C  0012               	return		;funcret
 14774  00321E                     __end_of_ads1115_set_mux:
 14775                           	opt stack 0
 14776                           tosu	equ	0xFFF
 14777                           tosh	equ	0xFFE
 14778                           tosl	equ	0xFFD
 14779                           pclath	equ	0xFFA
 14780                           tblptru	equ	0xFF8
 14781                           tblptrh	equ	0xFF7
 14782                           tblptrl	equ	0xFF6
 14783                           tablat	equ	0xFF5
 14784                           prodh	equ	0xFF4
 14785                           prodl	equ	0xFF3
 14786                           intcon	equ	0xFF2
 14787                           indf0	equ	0xFEF
 14788                           postinc0	equ	0xFEE
 14789                           fsr0h	equ	0xFEA
 14790                           fsr0l	equ	0xFE9
 14791                           wreg	equ	0xFE8
 14792                           postinc1	equ	0xFE6
 14793                           postdec1	equ	0xFE5
 14794                           plusw1	equ	0xFE3
 14795                           fsr1h	equ	0xFE2
 14796                           fsr1l	equ	0xFE1
 14797                           indf2	equ	0xFDF
 14798                           postinc2	equ	0xFDE
 14799                           postdec2	equ	0xFDD
 14800                           plusw2	equ	0xFDB
 14801                           fsr2h	equ	0xFDA
 14802                           fsr2l	equ	0xFD9
 14803                           status	equ	0xFD8
 14804                           
 14805 ;; *************** function _ads1115_read_conversion *****************
 14806 ;; Defined at:
 14807 ;;		line 127 in file "src/driver/ads1115.c"
 14808 ;; Parameters:    Size  Location     Type
 14809 ;;  pAds1115        2   10[BANK0 ] PTR struct .
 14810 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;  result          2    0[BANK1 ] unsigned int 
 14813 ;; Return value:  Size  Location     Type
 14814 ;;                  2   10[BANK0 ] unsigned int 
 14815 ;; Registers used:
 14816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14817 ;; Tracked objects:
 14818 ;;		On entry : 0/0
 14819 ;;		On exit  : 0/0
 14820 ;;		Unchanged: 0/0
 14821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14823 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14825 ;;      Totals:         0       3       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14826 ;;Total ram usage:        5 bytes
 14827 ;; Hardware stack levels used:    1
 14828 ;; Hardware stack levels required when called:    8
 14829 ;; This function calls:
 14830 ;;		_ads1115_read_reg
 14831 ;; This function is called by:
 14832 ;;		_sample_diff_pr_chip_fast
 14833 ;;		_sample_diff_pr_chip_slow
 14834 ;;		_sample_pr_chip_comm
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           	psect	text83
 14839  002BDA                     __ptext83:
 14840                           	opt stack 0
 14841  002BDA                     _ads1115_read_conversion:
 14842                           	opt stack 19
 14843                           
 14844                           ;ads1115.c: 129: uint16_t result;
 14845                           ;ads1115.c: 130: result=ads1115_read_reg(pAds1115,(0x00));
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;incstack = 0
 14849  002BDA  C0F3  F0ED         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 14850  002BDE  C0F4  F0EE         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 14851  002BE2  0E00               	movlw	0
 14852  002BE4  0100               	movlb	0	; () banked
 14853  002BE6  6FEF               	movwf	ads1115_read_reg@addr& (0+255),b
 14854  002BE8  EC16  F005         	call	_ads1115_read_reg
 14855  002BEC  C0ED  F15E         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 14856  002BF0  C0EE  F15F         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 14857                           
 14858                           ;ads1115.c: 131: if(pAds1115->chip<ADS1113){
 14859  002BF4  C0F3  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 14860  002BF8  C0F4  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 14861  002BFC  0E03               	movlw	3
 14862  002BFE  60DF               	cpfslt	indf2,c
 14863  002C00  D00A               	goto	l9238
 14864                           
 14865                           ;ads1115.c: 132: result >>= 4;
 14866  002C02  0101               	movlb	1	; () banked
 14867  002C04  3B5E               	swapf	ads1115_read_conversion@result& (0+255),f,b
 14868  002C06  3B5F               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 14869  002C08  0E0F               	movlw	15
 14870  002C0A  175E               	andwf	ads1115_read_conversion@result& (0+255),f,b
 14871  002C0C  515F               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 14872  002C0E  0BF0               	andlw	240
 14873  002C10  135E               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 14874  002C12  0E0F               	movlw	15
 14875  002C14  175F               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 14876  002C16                     l9238:
 14877                           
 14878                           ;ads1115.c: 133: }
 14879                           ;ads1115.c: 134: return result;
 14880  002C16  C15E  F0F3         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 14881  002C1A  C15F  F0F4         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 14882  002C1E  0012               	return	
 14883  002C20                     __end_of_ads1115_read_conversion:
 14884                           	opt stack 0
 14885                           tosu	equ	0xFFF
 14886                           tosh	equ	0xFFE
 14887                           tosl	equ	0xFFD
 14888                           pclath	equ	0xFFA
 14889                           tblptru	equ	0xFF8
 14890                           tblptrh	equ	0xFF7
 14891                           tblptrl	equ	0xFF6
 14892                           tablat	equ	0xFF5
 14893                           prodh	equ	0xFF4
 14894                           prodl	equ	0xFF3
 14895                           intcon	equ	0xFF2
 14896                           indf0	equ	0xFEF
 14897                           postinc0	equ	0xFEE
 14898                           fsr0h	equ	0xFEA
 14899                           fsr0l	equ	0xFE9
 14900                           wreg	equ	0xFE8
 14901                           postinc1	equ	0xFE6
 14902                           postdec1	equ	0xFE5
 14903                           plusw1	equ	0xFE3
 14904                           fsr1h	equ	0xFE2
 14905                           fsr1l	equ	0xFE1
 14906                           indf2	equ	0xFDF
 14907                           postinc2	equ	0xFDE
 14908                           postdec2	equ	0xFDD
 14909                           plusw2	equ	0xFDB
 14910                           fsr2h	equ	0xFDA
 14911                           fsr2l	equ	0xFD9
 14912                           status	equ	0xFD8
 14913                           
 14914 ;; *************** function _ads1115_read_reg *****************
 14915 ;; Defined at:
 14916 ;;		line 29 in file "src/driver/ads1115.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  pAds1115        2    4[BANK0 ] PTR struct .
 14919 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14920 ;;  addr            1    6[BANK0 ] unsigned char 
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;  t16             2    8[BANK0 ] unsigned int 
 14923 ;; Return value:  Size  Location     Type
 14924 ;;                  2    4[BANK0 ] unsigned int 
 14925 ;; Registers used:
 14926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14932 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14935 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14936 ;;Total ram usage:        6 bytes
 14937 ;; Hardware stack levels used:    1
 14938 ;; Hardware stack levels required when called:    7
 14939 ;; This function calls:
 14940 ;;		_iic_received_byte_if_ack
 14941 ;;		_iic_send_byte
 14942 ;;		_iic_start
 14943 ;;		_iic_stop
 14944 ;; This function is called by:
 14945 ;;		_ads1115_read_conversion
 14946 ;; This function uses a non-reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text84
 14950  000A2C                     __ptext84:
 14951                           	opt stack 0
 14952  000A2C                     _ads1115_read_reg:
 14953                           	opt stack 19
 14954                           
 14955                           ;ads1115.c: 31: uint16_t t16=0;
 14956                           
 14957                           ;incstack = 0
 14958  000A2C  0E00               	movlw	0
 14959  000A2E  0100               	movlb	0	; () banked
 14960  000A30  6FF2               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 14961  000A32  0E00               	movlw	0
 14962  000A34  6FF1               	movwf	ads1115_read_reg@t16& (0+255),b
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;ads1115.c: 32: pAds1115->iic_start();
 14966  000A36  0100               	movlb	0	; () banked
 14967  000A38  EE20 F006          	lfsr	2,6
 14968  000A3C  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 14969  000A3E  26D9               	addwf	fsr2l,f,c
 14970  000A40  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 14971  000A42  22DA               	addwfc	fsr2h,f,c
 14972  000A44  D801               	call	u7018
 14973  000A46  D00A               	goto	l9058
 14974  000A48                     u7018:
 14975  000A48  0005               	push	
 14976  000A4A  6EFA               	movwf	pclath,c
 14977  000A4C  50DE               	movf	postinc2,w,c
 14978  000A4E  6EFD               	movwf	tosl,c
 14979  000A50  50DE               	movf	postinc2,w,c
 14980  000A52  6EFE               	movwf	tosh,c
 14981  000A54  50F8               	movf	tblptru,w,c
 14982  000A56  6EFF               	movwf	tosu,c
 14983  000A58  50FA               	movf	pclath,w,c
 14984  000A5A  0012               	return		;indir
 14985  000A5C                     l9058:
 14986                           
 14987                           ;ads1115.c: 34: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 14988  000A5C  0100               	movlb	0	; () banked
 14989  000A5E  EE20 F00A          	lfsr	2,10
 14990  000A62  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 14991  000A64  26D9               	addwf	fsr2l,f,c
 14992  000A66  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 14993  000A68  22DA               	addwfc	fsr2h,f,c
 14994  000A6A  D801               	call	u7028
 14995  000A6C  D012               	goto	l9060
 14996  000A6E                     u7028:
 14997  000A6E  0005               	push	
 14998  000A70  6EFA               	movwf	pclath,c
 14999  000A72  50DE               	movf	postinc2,w,c
 15000  000A74  6EFD               	movwf	tosl,c
 15001  000A76  50DE               	movf	postinc2,w,c
 15002  000A78  6EFE               	movwf	tosh,c
 15003  000A7A  50F8               	movf	tblptru,w,c
 15004  000A7C  6EFF               	movwf	tosu,c
 15005  000A7E  50FA               	movf	pclath,w,c
 15006  000A80  0100               	movlb	0	; () banked
 15007  000A82  EE20 F001          	lfsr	2,1
 15008  000A86  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15009  000A88  26D9               	addwf	fsr2l,f,c
 15010  000A8A  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15011  000A8C  22DA               	addwfc	fsr2h,f,c
 15012  000A8E  50DF               	movf	indf2,w,c
 15013  000A90  0012               	return		;indir
 15014  000A92                     l9060:
 15015                           
 15016                           ;ads1115.c: 35: pAds1115->iic_send_byte(addr);
 15017  000A92  0100               	movlb	0	; () banked
 15018  000A94  EE20 F00A          	lfsr	2,10
 15019  000A98  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15020  000A9A  26D9               	addwf	fsr2l,f,c
 15021  000A9C  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15022  000A9E  22DA               	addwfc	fsr2h,f,c
 15023  000AA0  D801               	call	u7038
 15024  000AA2  D00C               	goto	l9062
 15025  000AA4                     u7038:
 15026  000AA4  0005               	push	
 15027  000AA6  6EFA               	movwf	pclath,c
 15028  000AA8  50DE               	movf	postinc2,w,c
 15029  000AAA  6EFD               	movwf	tosl,c
 15030  000AAC  50DE               	movf	postinc2,w,c
 15031  000AAE  6EFE               	movwf	tosh,c
 15032  000AB0  50F8               	movf	tblptru,w,c
 15033  000AB2  6EFF               	movwf	tosu,c
 15034  000AB4  50FA               	movf	pclath,w,c
 15035  000AB6  0100               	movlb	0	; () banked
 15036  000AB8  51EF               	movf	ads1115_read_reg@addr& (0+255),w,b
 15037  000ABA  0012               	return		;indir
 15038  000ABC                     l9062:
 15039                           
 15040                           ;ads1115.c: 36: pAds1115->iic_stop();
 15041  000ABC  0100               	movlb	0	; () banked
 15042  000ABE  EE20 F008          	lfsr	2,8
 15043  000AC2  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15044  000AC4  26D9               	addwf	fsr2l,f,c
 15045  000AC6  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15046  000AC8  22DA               	addwfc	fsr2h,f,c
 15047  000ACA  D801               	call	u7048
 15048  000ACC  D00A               	goto	l9064
 15049  000ACE                     u7048:
 15050  000ACE  0005               	push	
 15051  000AD0  6EFA               	movwf	pclath,c
 15052  000AD2  50DE               	movf	postinc2,w,c
 15053  000AD4  6EFD               	movwf	tosl,c
 15054  000AD6  50DE               	movf	postinc2,w,c
 15055  000AD8  6EFE               	movwf	tosh,c
 15056  000ADA  50F8               	movf	tblptru,w,c
 15057  000ADC  6EFF               	movwf	tosu,c
 15058  000ADE  50FA               	movf	pclath,w,c
 15059  000AE0  0012               	return		;indir
 15060  000AE2                     l9064:
 15061                           
 15062                           ;ads1115.c: 38: pAds1115->iic_start();
 15063  000AE2  0100               	movlb	0	; () banked
 15064  000AE4  EE20 F006          	lfsr	2,6
 15065  000AE8  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15066  000AEA  26D9               	addwf	fsr2l,f,c
 15067  000AEC  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15068  000AEE  22DA               	addwfc	fsr2h,f,c
 15069  000AF0  D801               	call	u7058
 15070  000AF2  D00A               	goto	l9066
 15071  000AF4                     u7058:
 15072  000AF4  0005               	push	
 15073  000AF6  6EFA               	movwf	pclath,c
 15074  000AF8  50DE               	movf	postinc2,w,c
 15075  000AFA  6EFD               	movwf	tosl,c
 15076  000AFC  50DE               	movf	postinc2,w,c
 15077  000AFE  6EFE               	movwf	tosh,c
 15078  000B00  50F8               	movf	tblptru,w,c
 15079  000B02  6EFF               	movwf	tosu,c
 15080  000B04  50FA               	movf	pclath,w,c
 15081  000B06  0012               	return		;indir
 15082  000B08                     l9066:
 15083                           
 15084                           ;ads1115.c: 39: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 15085  000B08  0100               	movlb	0	; () banked
 15086  000B0A  EE20 F00A          	lfsr	2,10
 15087  000B0E  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15088  000B10  26D9               	addwf	fsr2l,f,c
 15089  000B12  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15090  000B14  22DA               	addwfc	fsr2h,f,c
 15091  000B16  D801               	call	u7068
 15092  000B18  D016               	goto	l9068
 15093  000B1A                     u7068:
 15094  000B1A  0005               	push	
 15095  000B1C  6EFA               	movwf	pclath,c
 15096  000B1E  50DE               	movf	postinc2,w,c
 15097  000B20  6EFD               	movwf	tosl,c
 15098  000B22  50DE               	movf	postinc2,w,c
 15099  000B24  6EFE               	movwf	tosh,c
 15100  000B26  50F8               	movf	tblptru,w,c
 15101  000B28  6EFF               	movwf	tosu,c
 15102  000B2A  50FA               	movf	pclath,w,c
 15103  000B2C  0100               	movlb	0	; () banked
 15104  000B2E  EE20 F001          	lfsr	2,1
 15105  000B32  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15106  000B34  26D9               	addwf	fsr2l,f,c
 15107  000B36  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15108  000B38  22DA               	addwfc	fsr2h,f,c
 15109  000B3A  50DF               	movf	indf2,w,c
 15110  000B3C  0100               	movlb	0	; () banked
 15111  000B3E  6FF0               	movwf	??_ads1115_read_reg& (0+255),b
 15112  000B40  0100               	movlb	0	; () banked
 15113  000B42  29F0               	incf	??_ads1115_read_reg& (0+255),w,b
 15114  000B44  0012               	return		;indir
 15115  000B46                     l9068:
 15116                           
 15117                           ;ads1115.c: 40: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 15118  000B46  0100               	movlb	0	; () banked
 15119  000B48  EE20 F00E          	lfsr	2,14
 15120  000B4C  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15121  000B4E  26D9               	addwf	fsr2l,f,c
 15122  000B50  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15123  000B52  22DA               	addwfc	fsr2h,f,c
 15124  000B54  D801               	call	u7078
 15125  000B56  D00B               	goto	u7079
 15126  000B58                     u7078:
 15127  000B58  0005               	push	
 15128  000B5A  6EFA               	movwf	pclath,c
 15129  000B5C  50DE               	movf	postinc2,w,c
 15130  000B5E  6EFD               	movwf	tosl,c
 15131  000B60  50DE               	movf	postinc2,w,c
 15132  000B62  6EFE               	movwf	tosh,c
 15133  000B64  50F8               	movf	tblptru,w,c
 15134  000B66  6EFF               	movwf	tosu,c
 15135  000B68  50FA               	movf	pclath,w,c
 15136  000B6A  0E00               	movlw	0
 15137  000B6C  0012               	return		;indir
 15138  000B6E                     u7079:
 15139  000B6E  0100               	movlb	0	; () banked
 15140  000B70  6FF0               	movwf	??_ads1115_read_reg& (0+255),b
 15141  000B72  0100               	movlb	0	; () banked
 15142  000B74  51F0               	movf	??_ads1115_read_reg& (0+255),w,b
 15143  000B76  0100               	movlb	0	; () banked
 15144  000B78  6FF1               	movwf	ads1115_read_reg@t16& (0+255),b
 15145  000B7A  6BF2               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 15146                           
 15147                           ; BSR set to: 0
 15148                           ;ads1115.c: 41: t16<<=8;
 15149  000B7C  0100               	movlb	0	; () banked
 15150  000B7E  51F1               	movf	ads1115_read_reg@t16& (0+255),w,b
 15151  000B80  6FF2               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 15152  000B82  6BF1               	clrf	ads1115_read_reg@t16& (0+255),b
 15153                           
 15154                           ;ads1115.c: 42: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 15155  000B84  0100               	movlb	0	; () banked
 15156  000B86  EE20 F00E          	lfsr	2,14
 15157  000B8A  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15158  000B8C  26D9               	addwf	fsr2l,f,c
 15159  000B8E  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15160  000B90  22DA               	addwfc	fsr2h,f,c
 15161  000B92  D801               	call	u7088
 15162  000B94  D00B               	goto	u7089
 15163  000B96                     u7088:
 15164  000B96  0005               	push	
 15165  000B98  6EFA               	movwf	pclath,c
 15166  000B9A  50DE               	movf	postinc2,w,c
 15167  000B9C  6EFD               	movwf	tosl,c
 15168  000B9E  50DE               	movf	postinc2,w,c
 15169  000BA0  6EFE               	movwf	tosh,c
 15170  000BA2  50F8               	movf	tblptru,w,c
 15171  000BA4  6EFF               	movwf	tosu,c
 15172  000BA6  50FA               	movf	pclath,w,c
 15173  000BA8  0E00               	movlw	0
 15174  000BAA  0012               	return		;indir
 15175  000BAC                     u7089:
 15176  000BAC  0100               	movlb	0	; () banked
 15177  000BAE  6FF0               	movwf	??_ads1115_read_reg& (0+255),b
 15178  000BB0  0100               	movlb	0	; () banked
 15179  000BB2  51F0               	movf	??_ads1115_read_reg& (0+255),w,b
 15180  000BB4  0100               	movlb	0	; () banked
 15181  000BB6  13F1               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 15182                           
 15183                           ;ads1115.c: 44: pAds1115->iic_stop();
 15184  000BB8  0100               	movlb	0	; () banked
 15185  000BBA  EE20 F008          	lfsr	2,8
 15186  000BBE  51ED               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15187  000BC0  26D9               	addwf	fsr2l,f,c
 15188  000BC2  51EE               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15189  000BC4  22DA               	addwfc	fsr2h,f,c
 15190  000BC6  D801               	call	u7098
 15191  000BC8  D00A               	goto	l9072
 15192  000BCA                     u7098:
 15193  000BCA  0005               	push	
 15194  000BCC  6EFA               	movwf	pclath,c
 15195  000BCE  50DE               	movf	postinc2,w,c
 15196  000BD0  6EFD               	movwf	tosl,c
 15197  000BD2  50DE               	movf	postinc2,w,c
 15198  000BD4  6EFE               	movwf	tosh,c
 15199  000BD6  50F8               	movf	tblptru,w,c
 15200  000BD8  6EFF               	movwf	tosu,c
 15201  000BDA  50FA               	movf	pclath,w,c
 15202  000BDC  0012               	return		;indir
 15203  000BDE                     l9072:
 15204                           
 15205                           ;ads1115.c: 45: return t16;
 15206  000BDE  C0F1  F0ED         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 15207  000BE2  C0F2  F0EE         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 15208  000BE6  0012               	return	
 15209  000BE8                     __end_of_ads1115_read_reg:
 15210                           	opt stack 0
 15211                           tosu	equ	0xFFF
 15212                           tosh	equ	0xFFE
 15213                           tosl	equ	0xFFD
 15214                           pclath	equ	0xFFA
 15215                           tblptru	equ	0xFF8
 15216                           tblptrh	equ	0xFF7
 15217                           tblptrl	equ	0xFF6
 15218                           tablat	equ	0xFF5
 15219                           prodh	equ	0xFF4
 15220                           prodl	equ	0xFF3
 15221                           intcon	equ	0xFF2
 15222                           indf0	equ	0xFEF
 15223                           postinc0	equ	0xFEE
 15224                           fsr0h	equ	0xFEA
 15225                           fsr0l	equ	0xFE9
 15226                           wreg	equ	0xFE8
 15227                           postinc1	equ	0xFE6
 15228                           postdec1	equ	0xFE5
 15229                           plusw1	equ	0xFE3
 15230                           fsr1h	equ	0xFE2
 15231                           fsr1l	equ	0xFE1
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           postdec2	equ	0xFDD
 15235                           plusw2	equ	0xFDB
 15236                           fsr2h	equ	0xFDA
 15237                           fsr2l	equ	0xFD9
 15238                           status	equ	0xFD8
 15239                           
 15240 ;; *************** function _iic_start *****************
 15241 ;; Defined at:
 15242 ;;		line 18 in file "src/driver/i2c.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;		None
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;		None
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      void 
 15249 ;; Registers used:
 15250 ;;		status,2, status,0
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15260 ;;Total ram usage:        0 bytes
 15261 ;; Hardware stack levels used:    1
 15262 ;; Hardware stack levels required when called:    4
 15263 ;; This function calls:
 15264 ;;		Nothing
 15265 ;; This function is called by:
 15266 ;;		_ads1115_init
 15267 ;;		_at24c02_init
 15268 ;;		_pcf8574_init
 15269 ;;		_ads1115_write_reg
 15270 ;;		_ads1115_read_reg
 15271 ;;		_pcf8574_write_singel
 15272 ;;		_at24c02_read_n_byte
 15273 ;;		_at24c02_write_n_byte
 15274 ;;		_ad421_write_via_pcf8574
 15275 ;; This function uses a non-reentrant model
 15276 ;;
 15277                           
 15278                           	psect	text85
 15279  002DAA                     __ptext85:
 15280                           	opt stack 0
 15281  002DAA                     _iic_start:
 15282                           	opt stack 21
 15283                           
 15284                           ;incstack = 0
 15285                           ;i2c.c: 20: do{TRISC &= ~(1<<3);}while(0);;;
 15286  002DAA  9694               	bcf	3988,3,c	;volatile
 15287                           
 15288                           ;i2c.c: 21: do{TRISC &= ~(1<<4);}while(0);;;
 15289  002DAC  9894               	bcf	3988,4,c	;volatile
 15290                           
 15291                           ;i2c.c: 23: do{LATC |= (1<<4);}while(0);;;
 15292  002DAE  888B               	bsf	3979,4,c	;volatile
 15293                           
 15294                           ;i2c.c: 24: do{LATC |= (1<<3);}while(0);;;
 15295  002DB0  868B               	bsf	3979,3,c	;volatile
 15296                           
 15297                           ;i2c.c: 25: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15298  002DB2  F000               	nop	
 15299  002DB4  F000               	nop	
 15300  002DB6  F000               	nop	
 15301  002DB8  F000               	nop	
 15302  002DBA  F000               	nop	
 15303  002DBC  F000               	nop	
 15304  002DBE  F000               	nop	
 15305  002DC0  F000               	nop	
 15306  002DC2  F000               	nop	
 15307  002DC4  F000               	nop	
 15308  002DC6  F000               	nop	
 15309  002DC8  F000               	nop	
 15310                           
 15311                           ;i2c.c: 26: do{LATC &= ~(1<<4);}while(0);;;
 15312  002DCA  988B               	bcf	3979,4,c	;volatile
 15313                           
 15314                           ;i2c.c: 27: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15315  002DCC  F000               	nop	
 15316  002DCE  F000               	nop	
 15317  002DD0  F000               	nop	
 15318  002DD2  F000               	nop	
 15319  002DD4  F000               	nop	
 15320  002DD6  F000               	nop	
 15321  002DD8  F000               	nop	
 15322  002DDA  F000               	nop	
 15323  002DDC  F000               	nop	
 15324  002DDE  F000               	nop	
 15325  002DE0  F000               	nop	
 15326  002DE2  F000               	nop	
 15327                           
 15328                           ;i2c.c: 28: do{LATC &= ~(1<<3);}while(0);;;
 15329  002DE4  968B               	bcf	3979,3,c	;volatile
 15330  002DE6  0012               	return	
 15331  002DE8                     __end_of_iic_start:
 15332                           	opt stack 0
 15333                           tosu	equ	0xFFF
 15334                           tosh	equ	0xFFE
 15335                           tosl	equ	0xFFD
 15336                           pclath	equ	0xFFA
 15337                           tblptru	equ	0xFF8
 15338                           tblptrh	equ	0xFF7
 15339                           tblptrl	equ	0xFF6
 15340                           tablat	equ	0xFF5
 15341                           prodh	equ	0xFF4
 15342                           prodl	equ	0xFF3
 15343                           intcon	equ	0xFF2
 15344                           indf0	equ	0xFEF
 15345                           postinc0	equ	0xFEE
 15346                           fsr0h	equ	0xFEA
 15347                           fsr0l	equ	0xFE9
 15348                           wreg	equ	0xFE8
 15349                           postinc1	equ	0xFE6
 15350                           postdec1	equ	0xFE5
 15351                           plusw1	equ	0xFE3
 15352                           fsr1h	equ	0xFE2
 15353                           fsr1l	equ	0xFE1
 15354                           indf2	equ	0xFDF
 15355                           postinc2	equ	0xFDE
 15356                           postdec2	equ	0xFDD
 15357                           plusw2	equ	0xFDB
 15358                           fsr2h	equ	0xFDA
 15359                           fsr2l	equ	0xFD9
 15360                           status	equ	0xFD8
 15361                           
 15362 ;; *************** function _iic_send_byte *****************
 15363 ;; Defined at:
 15364 ;;		line 80 in file "src/driver/i2c.c"
 15365 ;; Parameters:    Size  Location     Type
 15366 ;;  x               1    wreg     unsigned char 
 15367 ;; Auto vars:     Size  Location     Type
 15368 ;;  x               1    1[BANK0 ] unsigned char 
 15369 ;;  i               1    2[BANK0 ] unsigned char 
 15370 ;; Return value:  Size  Location     Type
 15371 ;;                  1    wreg      unsigned char 
 15372 ;; Registers used:
 15373 ;;		wreg, status,2, status,0, cstack
 15374 ;; Tracked objects:
 15375 ;;		On entry : 0/0
 15376 ;;		On exit  : 0/0
 15377 ;;		Unchanged: 0/0
 15378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15383 ;;Total ram usage:        2 bytes
 15384 ;; Hardware stack levels used:    1
 15385 ;; Hardware stack levels required when called:    6
 15386 ;; This function calls:
 15387 ;;		_iic_waite_ack
 15388 ;; This function is called by:
 15389 ;;		_ads1115_init
 15390 ;;		_at24c02_init
 15391 ;;		_pcf8574_init
 15392 ;;		_ads1115_write_reg
 15393 ;;		_ads1115_read_reg
 15394 ;;		_pcf8574_write_singel
 15395 ;;		_at24c02_read_n_byte
 15396 ;;		_at24c02_write_n_byte
 15397 ;;		_ad421_write_via_pcf8574
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           
 15401                           	psect	text86
 15402  002696                     __ptext86:
 15403                           	opt stack 0
 15404  002696                     _iic_send_byte:
 15405                           	opt stack 19
 15406                           
 15407                           ;incstack = 0
 15408                           ;iic_send_byte@x stored from wreg
 15409  002696  0100               	movlb	0	; () banked
 15410  002698  6FEA               	movwf	iic_send_byte@x& (0+255),b
 15411                           
 15412                           ;i2c.c: 82: uint8_t i;
 15413                           ;i2c.c: 83: do{TRISC &= ~(1<<3);}while(0);;;
 15414  00269A  9694               	bcf	3988,3,c	;volatile
 15415                           
 15416                           ;i2c.c: 84: do{TRISC &= ~(1<<4);}while(0);;;
 15417  00269C  9894               	bcf	3988,4,c	;volatile
 15418                           
 15419                           ;i2c.c: 85: do{LATC &= ~(1<<3);}while(0);;;
 15420  00269E  968B               	bcf	3979,3,c	;volatile
 15421                           
 15422                           ;i2c.c: 86: for(i=0;i<8;i++){
 15423  0026A0  0E00               	movlw	0
 15424  0026A2  0100               	movlb	0	; () banked
 15425  0026A4  6FEB               	movwf	iic_send_byte@i& (0+255),b
 15426  0026A6                     l8780:
 15427                           
 15428                           ; BSR set to: 0
 15429  0026A6  0E07               	movlw	7
 15430  0026A8  0100               	movlb	0	; () banked
 15431  0026AA  65EB               	cpfsgt	iic_send_byte@i& (0+255),b
 15432  0026AC  D001               	goto	l950
 15433  0026AE  D026               	goto	l8840
 15434  0026B0                     l950:
 15435                           
 15436                           ; BSR set to: 0
 15437                           ;i2c.c: 87: if(x&0x80){
 15438  0026B0  0100               	movlb	0	; () banked
 15439  0026B2  AFEA               	btfss	iic_send_byte@x& (0+255),7,b
 15440  0026B4  D002               	goto	l8786
 15441                           
 15442                           ; BSR set to: 0
 15443                           
 15444                           ; BSR set to: 0
 15445                           
 15446                           ;i2c.c: 88: do{LATC |= (1<<4);}while(0);;;
 15447  0026B6  888B               	bsf	3979,4,c	;volatile
 15448                           
 15449                           ; BSR set to: 0
 15450                           ;i2c.c: 89: }
 15451  0026B8  D001               	goto	l958
 15452  0026BA                     l8786:
 15453                           
 15454                           ; BSR set to: 0
 15455  0026BA  988B               	bcf	3979,4,c	;volatile
 15456  0026BC                     l958:
 15457                           
 15458                           ; BSR set to: 0
 15459  0026BC  868B               	bsf	3979,3,c	;volatile
 15460                           
 15461                           ; BSR set to: 0
 15462                           
 15463                           ; BSR set to: 0
 15464                           
 15465                           ;i2c.c: 94: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15466                           
 15467                           ; BSR set to: 0
 15468  0026BE  F000               	nop	
 15469  0026C0  F000               	nop	
 15470  0026C2  F000               	nop	
 15471  0026C4  F000               	nop	
 15472  0026C6  F000               	nop	
 15473  0026C8  F000               	nop	
 15474  0026CA  F000               	nop	
 15475  0026CC  F000               	nop	
 15476  0026CE  F000               	nop	
 15477  0026D0  F000               	nop	
 15478  0026D2  F000               	nop	
 15479  0026D4  F000               	nop	
 15480                           
 15481                           ;i2c.c: 95: do{LATC &= ~(1<<3);}while(0);;;
 15482  0026D6  968B               	bcf	3979,3,c	;volatile
 15483                           
 15484                           ;i2c.c: 96: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15485  0026D8  F000               	nop	
 15486  0026DA  F000               	nop	
 15487  0026DC  F000               	nop	
 15488  0026DE  F000               	nop	
 15489  0026E0  F000               	nop	
 15490  0026E2  F000               	nop	
 15491  0026E4  F000               	nop	
 15492  0026E6  F000               	nop	
 15493  0026E8  F000               	nop	
 15494  0026EA  F000               	nop	
 15495  0026EC  F000               	nop	
 15496  0026EE  F000               	nop	
 15497                           
 15498                           ;i2c.c: 97: x<<=1;
 15499  0026F0  0100               	movlb	0	; () banked
 15500  0026F2  90D8               	bcf	status,0,c
 15501  0026F4  37EA               	rlcf	iic_send_byte@x& (0+255),f,b
 15502                           
 15503                           ; BSR set to: 0
 15504  0026F6  0100               	movlb	0	; () banked
 15505  0026F8  2BEB               	incf	iic_send_byte@i& (0+255),f,b
 15506  0026FA  D7D5               	goto	l8780
 15507  0026FC                     l8840:
 15508                           
 15509                           ; BSR set to: 0
 15510                           ;i2c.c: 98: }
 15511                           ;i2c.c: 99: return iic_waite_ack();
 15512                           ;	Return value of _iic_send_byte is never used
 15513  0026FC  ECEB  F013         	call	_iic_waite_ack
 15514  002700  0012               	return	
 15515  002702                     __end_of_iic_send_byte:
 15516                           	opt stack 0
 15517                           tosu	equ	0xFFF
 15518                           tosh	equ	0xFFE
 15519                           tosl	equ	0xFFD
 15520                           pclath	equ	0xFFA
 15521                           tblptru	equ	0xFF8
 15522                           tblptrh	equ	0xFF7
 15523                           tblptrl	equ	0xFF6
 15524                           tablat	equ	0xFF5
 15525                           prodh	equ	0xFF4
 15526                           prodl	equ	0xFF3
 15527                           intcon	equ	0xFF2
 15528                           indf0	equ	0xFEF
 15529                           postinc0	equ	0xFEE
 15530                           fsr0h	equ	0xFEA
 15531                           fsr0l	equ	0xFE9
 15532                           wreg	equ	0xFE8
 15533                           postinc1	equ	0xFE6
 15534                           postdec1	equ	0xFE5
 15535                           plusw1	equ	0xFE3
 15536                           fsr1h	equ	0xFE2
 15537                           fsr1l	equ	0xFE1
 15538                           indf2	equ	0xFDF
 15539                           postinc2	equ	0xFDE
 15540                           postdec2	equ	0xFDD
 15541                           plusw2	equ	0xFDB
 15542                           fsr2h	equ	0xFDA
 15543                           fsr2l	equ	0xFD9
 15544                           status	equ	0xFD8
 15545                           
 15546 ;; *************** function _iic_waite_ack *****************
 15547 ;; Defined at:
 15548 ;;		line 60 in file "src/driver/i2c.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;		None
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;  timeout         1    0[BANK0 ] unsigned char 
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  1    wreg      unsigned char 
 15555 ;; Registers used:
 15556 ;;		wreg, status,2, status,0, cstack
 15557 ;; Tracked objects:
 15558 ;;		On entry : 0/0
 15559 ;;		On exit  : 0/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15565 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;Total ram usage:        1 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; Hardware stack levels required when called:    5
 15569 ;; This function calls:
 15570 ;;		_iic_stop
 15571 ;; This function is called by:
 15572 ;;		_ads1115_init
 15573 ;;		_iic_send_byte
 15574 ;;		_at24c02_init
 15575 ;;		_pcf8574_init
 15576 ;; This function uses a non-reentrant model
 15577 ;;
 15578                           
 15579                           	psect	text87
 15580  0027D6                     __ptext87:
 15581                           	opt stack 0
 15582  0027D6                     _iic_waite_ack:
 15583                           	opt stack 19
 15584                           
 15585                           ;i2c.c: 62: uint8_t timeout=200;
 15586                           
 15587                           ;incstack = 0
 15588  0027D6  0EC8               	movlw	200
 15589  0027D8  0100               	movlb	0	; () banked
 15590  0027DA  6FE9               	movwf	iic_waite_ack@timeout& (0+255),b
 15591                           
 15592                           ; BSR set to: 0
 15593                           
 15594                           ; BSR set to: 0
 15595                           
 15596                           ;i2c.c: 63: do{TRISC &= ~(1<<3);}while(0);;;
 15597  0027DC  9694               	bcf	3988,3,c	;volatile
 15598                           
 15599                           ; BSR set to: 0
 15600                           
 15601                           ; BSR set to: 0
 15602                           
 15603                           ;i2c.c: 64: do{TRISC |= (1<<4);}while(0);;;
 15604                           
 15605                           ; BSR set to: 0
 15606  0027DE  8894               	bsf	3988,4,c	;volatile
 15607                           
 15608                           ; BSR set to: 0
 15609                           
 15610                           ; BSR set to: 0
 15611                           
 15612                           ;i2c.c: 65: do{LATC &= ~(1<<3);}while(0);;;
 15613                           
 15614                           ; BSR set to: 0
 15615  0027E0  968B               	bcf	3979,3,c	;volatile
 15616                           
 15617                           ; BSR set to: 0
 15618                           
 15619                           ; BSR set to: 0
 15620                           
 15621                           ;i2c.c: 66: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15622                           
 15623                           ; BSR set to: 0
 15624  0027E2  F000               	nop	
 15625  0027E4  F000               	nop	
 15626  0027E6  F000               	nop	
 15627  0027E8  F000               	nop	
 15628  0027EA  F000               	nop	
 15629  0027EC  F000               	nop	
 15630  0027EE  F000               	nop	
 15631  0027F0  F000               	nop	
 15632  0027F2  F000               	nop	
 15633  0027F4  F000               	nop	
 15634  0027F6  F000               	nop	
 15635  0027F8  F000               	nop	
 15636                           
 15637                           ;i2c.c: 67: do{LATC |= (1<<3);}while(0);;;
 15638  0027FA  868B               	bsf	3979,3,c	;volatile
 15639                           
 15640                           ;i2c.c: 68: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15641  0027FC  F000               	nop	
 15642  0027FE  F000               	nop	
 15643  002800  F000               	nop	
 15644  002802  F000               	nop	
 15645  002804  F000               	nop	
 15646  002806  F000               	nop	
 15647  002808  F000               	nop	
 15648  00280A  F000               	nop	
 15649  00280C  F000               	nop	
 15650  00280E  F000               	nop	
 15651  002810  F000               	nop	
 15652  002812  F000               	nop	
 15653                           
 15654                           ;i2c.c: 69: while(timeout--){
 15655  002814  D002               	goto	l8540
 15656  002816                     l935:
 15657                           
 15658                           ; BSR set to: 0
 15659                           ;i2c.c: 70: if(!(PORTC & (1<<4)))break;
 15660  002816  A882               	btfss	3970,4,c	;volatile
 15661  002818  D006               	goto	l8542
 15662  00281A                     l8540:
 15663  00281A  0100               	movlb	0	; () banked
 15664  00281C  07E9               	decf	iic_waite_ack@timeout& (0+255),f,b
 15665  00281E  0100               	movlb	0	; () banked
 15666  002820  29E9               	incf	iic_waite_ack@timeout& (0+255),w,b
 15667  002822  A4D8               	btfss	status,2,c
 15668  002824  D7F8               	goto	l935
 15669  002826                     l8542:
 15670                           
 15671                           ; BSR set to: 0
 15672                           ;i2c.c: 71: }
 15673                           ;i2c.c: 72: if(!timeout){
 15674  002826  0100               	movlb	0	; () banked
 15675  002828  51E9               	movf	iic_waite_ack@timeout& (0+255),w,b
 15676  00282A  0100               	movlb	0	; () banked
 15677  00282C  A4D8               	btfss	status,2,c
 15678  00282E  D004               	goto	l8550
 15679                           
 15680                           ; BSR set to: 0
 15681                           ;i2c.c: 73: iic_stop();
 15682  002830  EC12  F017         	call	_iic_stop	;wreg free
 15683                           
 15684                           ;i2c.c: 74: return 0;
 15685  002834  0E00               	movlw	0
 15686  002836  0012               	return	
 15687  002838                     l8550:
 15688  002838  968B               	bcf	3979,3,c	;volatile
 15689                           
 15690                           ;i2c.c: 77: return 1;
 15691  00283A  0E01               	movlw	1
 15692  00283C  0012               	return	
 15693  00283E                     __end_of_iic_waite_ack:
 15694                           	opt stack 0
 15695                           tosu	equ	0xFFF
 15696                           tosh	equ	0xFFE
 15697                           tosl	equ	0xFFD
 15698                           pclath	equ	0xFFA
 15699                           tblptru	equ	0xFF8
 15700                           tblptrh	equ	0xFF7
 15701                           tblptrl	equ	0xFF6
 15702                           tablat	equ	0xFF5
 15703                           prodh	equ	0xFF4
 15704                           prodl	equ	0xFF3
 15705                           intcon	equ	0xFF2
 15706                           indf0	equ	0xFEF
 15707                           postinc0	equ	0xFEE
 15708                           fsr0h	equ	0xFEA
 15709                           fsr0l	equ	0xFE9
 15710                           wreg	equ	0xFE8
 15711                           postinc1	equ	0xFE6
 15712                           postdec1	equ	0xFE5
 15713                           plusw1	equ	0xFE3
 15714                           fsr1h	equ	0xFE2
 15715                           fsr1l	equ	0xFE1
 15716                           indf2	equ	0xFDF
 15717                           postinc2	equ	0xFDE
 15718                           postdec2	equ	0xFDD
 15719                           plusw2	equ	0xFDB
 15720                           fsr2h	equ	0xFDA
 15721                           fsr2l	equ	0xFD9
 15722                           status	equ	0xFD8
 15723                           
 15724 ;; *************** function _iic_stop *****************
 15725 ;; Defined at:
 15726 ;;		line 32 in file "src/driver/i2c.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;		None
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;		None
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  1    wreg      void 
 15733 ;; Registers used:
 15734 ;;		status,2, status,0
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/0
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15744 ;;Total ram usage:        0 bytes
 15745 ;; Hardware stack levels used:    1
 15746 ;; Hardware stack levels required when called:    4
 15747 ;; This function calls:
 15748 ;;		Nothing
 15749 ;; This function is called by:
 15750 ;;		_ads1115_init
 15751 ;;		_iic_waite_ack
 15752 ;;		_at24c02_init
 15753 ;;		_pcf8574_init
 15754 ;;		_ads1115_write_reg
 15755 ;;		_ads1115_read_reg
 15756 ;;		_pcf8574_write_singel
 15757 ;;		_at24c02_read_n_byte
 15758 ;;		_at24c02_write_n_byte
 15759 ;;		_ad421_write_via_pcf8574
 15760 ;; This function uses a non-reentrant model
 15761 ;;
 15762                           
 15763                           	psect	text88
 15764  002E24                     __ptext88:
 15765                           	opt stack 0
 15766  002E24                     _iic_stop:
 15767                           	opt stack 21
 15768                           
 15769                           ;incstack = 0
 15770                           ;i2c.c: 34: do{TRISC &= ~(1<<3);}while(0);;;
 15771  002E24  9694               	bcf	3988,3,c	;volatile
 15772                           
 15773                           ;i2c.c: 35: do{TRISC &= ~(1<<4);}while(0);;;
 15774  002E26  9894               	bcf	3988,4,c	;volatile
 15775                           
 15776                           ;i2c.c: 36: do{LATC &= ~(1<<4);}while(0);;;
 15777  002E28  988B               	bcf	3979,4,c	;volatile
 15778                           
 15779                           ;i2c.c: 37: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15780  002E2A  F000               	nop	
 15781  002E2C  F000               	nop	
 15782  002E2E  F000               	nop	
 15783  002E30  F000               	nop	
 15784  002E32  F000               	nop	
 15785  002E34  F000               	nop	
 15786  002E36  F000               	nop	
 15787  002E38  F000               	nop	
 15788  002E3A  F000               	nop	
 15789  002E3C  F000               	nop	
 15790  002E3E  F000               	nop	
 15791  002E40  F000               	nop	
 15792                           
 15793                           ;i2c.c: 38: do{LATC |= (1<<3);}while(0);;;
 15794  002E42  868B               	bsf	3979,3,c	;volatile
 15795                           
 15796                           ;i2c.c: 39: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 15797  002E44  F000               	nop	
 15798  002E46  F000               	nop	
 15799  002E48  F000               	nop	
 15800  002E4A  F000               	nop	
 15801  002E4C  F000               	nop	
 15802  002E4E  F000               	nop	
 15803  002E50  F000               	nop	
 15804  002E52  F000               	nop	
 15805  002E54  F000               	nop	
 15806  002E56  F000               	nop	
 15807  002E58  F000               	nop	
 15808  002E5A  F000               	nop	
 15809                           
 15810                           ;i2c.c: 40: do{LATC |= (1<<4);}while(0);;;
 15811  002E5C  888B               	bsf	3979,4,c	;volatile
 15812  002E5E  0012               	return	
 15813  002E60                     __end_of_iic_stop:
 15814                           	opt stack 0
 15815                           tosu	equ	0xFFF
 15816                           tosh	equ	0xFFE
 15817                           tosl	equ	0xFFD
 15818                           pclath	equ	0xFFA
 15819                           tblptru	equ	0xFF8
 15820                           tblptrh	equ	0xFF7
 15821                           tblptrl	equ	0xFF6
 15822                           tablat	equ	0xFF5
 15823                           prodh	equ	0xFF4
 15824                           prodl	equ	0xFF3
 15825                           intcon	equ	0xFF2
 15826                           indf0	equ	0xFEF
 15827                           postinc0	equ	0xFEE
 15828                           fsr0h	equ	0xFEA
 15829                           fsr0l	equ	0xFE9
 15830                           wreg	equ	0xFE8
 15831                           postinc1	equ	0xFE6
 15832                           postdec1	equ	0xFE5
 15833                           plusw1	equ	0xFE3
 15834                           fsr1h	equ	0xFE2
 15835                           fsr1l	equ	0xFE1
 15836                           indf2	equ	0xFDF
 15837                           postinc2	equ	0xFDE
 15838                           postdec2	equ	0xFDD
 15839                           plusw2	equ	0xFDB
 15840                           fsr2h	equ	0xFDA
 15841                           fsr2l	equ	0xFD9
 15842                           status	equ	0xFD8
 15843                           
 15844 ;; *************** function _iic_received_byte_if_ack *****************
 15845 ;; Defined at:
 15846 ;;		line 121 in file "src/driver/i2c.c"
 15847 ;; Parameters:    Size  Location     Type
 15848 ;;  ack             1    wreg     unsigned char 
 15849 ;; Auto vars:     Size  Location     Type
 15850 ;;  ack             1    2[BANK0 ] unsigned char 
 15851 ;;  ret             1    3[BANK0 ] unsigned char 
 15852 ;; Return value:  Size  Location     Type
 15853 ;;                  1    wreg      unsigned char 
 15854 ;; Registers used:
 15855 ;;		wreg, status,2, status,0, cstack
 15856 ;; Tracked objects:
 15857 ;;		On entry : 0/0
 15858 ;;		On exit  : 0/0
 15859 ;;		Unchanged: 0/0
 15860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15862 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15864 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15865 ;;Total ram usage:        2 bytes
 15866 ;; Hardware stack levels used:    1
 15867 ;; Hardware stack levels required when called:    5
 15868 ;; This function calls:
 15869 ;;		_iic_received_byte
 15870 ;;		_iic_send_ack
 15871 ;; This function is called by:
 15872 ;;		_ads1115_init
 15873 ;;		_at24c02_init
 15874 ;;		_pcf8574_init
 15875 ;;		_ads1115_read_reg
 15876 ;;		_at24c02_read_n_byte
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           	psect	text89
 15881  00328C                     __ptext89:
 15882                           	opt stack 0
 15883  00328C                     _iic_received_byte_if_ack:
 15884                           	opt stack 20
 15885                           
 15886                           ;incstack = 0
 15887                           ;iic_received_byte_if_ack@ack stored from wreg
 15888  00328C  0100               	movlb	0	; () banked
 15889  00328E  6FEB               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 15890                           
 15891                           ;i2c.c: 123: uint8_t ret=0;
 15892  003290  0E00               	movlw	0
 15893  003292  0100               	movlb	0	; () banked
 15894  003294  6FEC               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 15895                           
 15896                           ; BSR set to: 0
 15897                           ;i2c.c: 124: ret=iic_received_byte();
 15898  003296  ECB6  F013         	call	_iic_received_byte	;wreg free
 15899  00329A  0100               	movlb	0	; () banked
 15900  00329C  6FEC               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;i2c.c: 125: iic_send_ack(ack);
 15904  00329E  0100               	movlb	0	; () banked
 15905  0032A0  51EB               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 15906  0032A2  ECC5  F015         	call	_iic_send_ack
 15907                           
 15908                           ;i2c.c: 126: return ret;
 15909  0032A6  0100               	movlb	0	; () banked
 15910  0032A8  51EC               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 15911  0032AA  0012               	return	
 15912  0032AC                     __end_of_iic_received_byte_if_ack:
 15913                           	opt stack 0
 15914                           tosu	equ	0xFFF
 15915                           tosh	equ	0xFFE
 15916                           tosl	equ	0xFFD
 15917                           pclath	equ	0xFFA
 15918                           tblptru	equ	0xFF8
 15919                           tblptrh	equ	0xFF7
 15920                           tblptrl	equ	0xFF6
 15921                           tablat	equ	0xFF5
 15922                           prodh	equ	0xFF4
 15923                           prodl	equ	0xFF3
 15924                           intcon	equ	0xFF2
 15925                           indf0	equ	0xFEF
 15926                           postinc0	equ	0xFEE
 15927                           fsr0h	equ	0xFEA
 15928                           fsr0l	equ	0xFE9
 15929                           wreg	equ	0xFE8
 15930                           postinc1	equ	0xFE6
 15931                           postdec1	equ	0xFE5
 15932                           plusw1	equ	0xFE3
 15933                           fsr1h	equ	0xFE2
 15934                           fsr1l	equ	0xFE1
 15935                           indf2	equ	0xFDF
 15936                           postinc2	equ	0xFDE
 15937                           postdec2	equ	0xFDD
 15938                           plusw2	equ	0xFDB
 15939                           fsr2h	equ	0xFDA
 15940                           fsr2l	equ	0xFD9
 15941                           status	equ	0xFD8
 15942                           
 15943 ;; *************** function _iic_send_ack *****************
 15944 ;; Defined at:
 15945 ;;		line 44 in file "src/driver/i2c.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;  ack             1    wreg     char 
 15948 ;; Auto vars:     Size  Location     Type
 15949 ;;  ack             1    0[BANK0 ] char 
 15950 ;; Return value:  Size  Location     Type
 15951 ;;                  1    wreg      void 
 15952 ;; Registers used:
 15953 ;;		wreg, status,2, status,0
 15954 ;; Tracked objects:
 15955 ;;		On entry : 0/0
 15956 ;;		On exit  : 0/0
 15957 ;;		Unchanged: 0/0
 15958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15963 ;;Total ram usage:        1 bytes
 15964 ;; Hardware stack levels used:    1
 15965 ;; Hardware stack levels required when called:    4
 15966 ;; This function calls:
 15967 ;;		Nothing
 15968 ;; This function is called by:
 15969 ;;		_iic_received_byte_if_ack
 15970 ;; This function uses a non-reentrant model
 15971 ;;
 15972                           
 15973                           	psect	text90
 15974  002B8A                     __ptext90:
 15975                           	opt stack 0
 15976  002B8A                     _iic_send_ack:
 15977                           	opt stack 20
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;incstack = 0
 15981                           ;iic_send_ack@ack stored from wreg
 15982  002B8A  0100               	movlb	0	; () banked
 15983  002B8C  6FE9               	movwf	iic_send_ack@ack& (0+255),b
 15984                           
 15985                           ;i2c.c: 46: do{TRISC &= ~(1<<3);}while(0);;;
 15986  002B8E  9694               	bcf	3988,3,c	;volatile
 15987                           
 15988                           ;i2c.c: 47: do{TRISC &= ~(1<<4);}while(0);;;
 15989  002B90  9894               	bcf	3988,4,c	;volatile
 15990                           
 15991                           ;i2c.c: 48: do{LATC &= ~(1<<3);}while(0);;;
 15992  002B92  968B               	bcf	3979,3,c	;volatile
 15993                           
 15994                           ;i2c.c: 49: if(ack){
 15995  002B94  0100               	movlb	0	; () banked
 15996  002B96  51E9               	movf	iic_send_ack@ack& (0+255),w,b
 15997  002B98  0100               	movlb	0	; () banked
 15998  002B9A  B4D8               	btfsc	status,2,c
 15999  002B9C  D002               	goto	l8430
 16000                           
 16001                           ; BSR set to: 0
 16002                           
 16003                           ; BSR set to: 0
 16004                           
 16005                           ;i2c.c: 50: do{LATC |= (1<<4);}while(0);;;
 16006  002B9E  888B               	bsf	3979,4,c	;volatile
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;i2c.c: 51: }else{
 16010  002BA0  D001               	goto	l8432
 16011  002BA2                     l8430:
 16012                           
 16013                           ; BSR set to: 0
 16014  002BA2  988B               	bcf	3979,4,c	;volatile
 16015  002BA4                     l8432:
 16016                           
 16017                           ; BSR set to: 0
 16018  002BA4  F000               	nop	
 16019  002BA6  F000               	nop	
 16020  002BA8  F000               	nop	
 16021  002BAA  F000               	nop	
 16022  002BAC  F000               	nop	
 16023  002BAE  F000               	nop	
 16024  002BB0  F000               	nop	
 16025  002BB2  F000               	nop	
 16026  002BB4  F000               	nop	
 16027  002BB6  F000               	nop	
 16028  002BB8  F000               	nop	
 16029  002BBA  F000               	nop	
 16030                           
 16031                           ;i2c.c: 55: do{LATC |= (1<<3);}while(0);;;
 16032  002BBC  868B               	bsf	3979,3,c	;volatile
 16033                           
 16034                           ;i2c.c: 56: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 16035  002BBE  F000               	nop	
 16036  002BC0  F000               	nop	
 16037  002BC2  F000               	nop	
 16038  002BC4  F000               	nop	
 16039  002BC6  F000               	nop	
 16040  002BC8  F000               	nop	
 16041  002BCA  F000               	nop	
 16042  002BCC  F000               	nop	
 16043  002BCE  F000               	nop	
 16044  002BD0  F000               	nop	
 16045  002BD2  F000               	nop	
 16046  002BD4  F000               	nop	
 16047                           
 16048                           ;i2c.c: 57: do{LATC &= ~(1<<3);}while(0);;;
 16049  002BD6  968B               	bcf	3979,3,c	;volatile
 16050  002BD8  0012               	return	
 16051  002BDA                     __end_of_iic_send_ack:
 16052                           	opt stack 0
 16053                           tosu	equ	0xFFF
 16054                           tosh	equ	0xFFE
 16055                           tosl	equ	0xFFD
 16056                           pclath	equ	0xFFA
 16057                           tblptru	equ	0xFF8
 16058                           tblptrh	equ	0xFF7
 16059                           tblptrl	equ	0xFF6
 16060                           tablat	equ	0xFF5
 16061                           prodh	equ	0xFF4
 16062                           prodl	equ	0xFF3
 16063                           intcon	equ	0xFF2
 16064                           indf0	equ	0xFEF
 16065                           postinc0	equ	0xFEE
 16066                           fsr0h	equ	0xFEA
 16067                           fsr0l	equ	0xFE9
 16068                           wreg	equ	0xFE8
 16069                           postinc1	equ	0xFE6
 16070                           postdec1	equ	0xFE5
 16071                           plusw1	equ	0xFE3
 16072                           fsr1h	equ	0xFE2
 16073                           fsr1l	equ	0xFE1
 16074                           indf2	equ	0xFDF
 16075                           postinc2	equ	0xFDE
 16076                           postdec2	equ	0xFDD
 16077                           plusw2	equ	0xFDB
 16078                           fsr2h	equ	0xFDA
 16079                           fsr2l	equ	0xFD9
 16080                           status	equ	0xFD8
 16081                           
 16082 ;; *************** function _iic_received_byte *****************
 16083 ;; Defined at:
 16084 ;;		line 102 in file "src/driver/i2c.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;		None
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;  i               1    1[BANK0 ] unsigned char 
 16089 ;;  ret             1    0[BANK0 ] unsigned char 
 16090 ;; Return value:  Size  Location     Type
 16091 ;;                  1    wreg      unsigned char 
 16092 ;; Registers used:
 16093 ;;		wreg, status,2, status,0
 16094 ;; Tracked objects:
 16095 ;;		On entry : 0/0
 16096 ;;		On exit  : 0/0
 16097 ;;		Unchanged: 0/0
 16098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16100 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16102 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16103 ;;Total ram usage:        2 bytes
 16104 ;; Hardware stack levels used:    1
 16105 ;; Hardware stack levels required when called:    4
 16106 ;; This function calls:
 16107 ;;		Nothing
 16108 ;; This function is called by:
 16109 ;;		_iic_received_byte_if_ack
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           	psect	text91
 16114  00276C                     __ptext91:
 16115                           	opt stack 0
 16116  00276C                     _iic_received_byte:
 16117                           	opt stack 20
 16118                           
 16119                           ;i2c.c: 104: uint8_t i;
 16120                           ;i2c.c: 105: uint8_t ret=0;
 16121                           
 16122                           ;incstack = 0
 16123  00276C  0E00               	movlw	0
 16124  00276E  0100               	movlb	0	; () banked
 16125  002770  6FE9               	movwf	iic_received_byte@ret& (0+255),b
 16126                           
 16127                           ; BSR set to: 0
 16128                           
 16129                           ; BSR set to: 0
 16130                           
 16131                           ;i2c.c: 106: do{TRISC &= ~(1<<3);}while(0);;;
 16132  002772  9694               	bcf	3988,3,c	;volatile
 16133                           
 16134                           ; BSR set to: 0
 16135                           
 16136                           ; BSR set to: 0
 16137                           
 16138                           ;i2c.c: 107: do{TRISC |= (1<<4);}while(0);;;
 16139                           
 16140                           ; BSR set to: 0
 16141  002774  8894               	bsf	3988,4,c	;volatile
 16142                           
 16143                           ; BSR set to: 0
 16144                           ;i2c.c: 108: for(i=0;i<8;i++){
 16145  002776  0E00               	movlw	0
 16146  002778  0100               	movlb	0	; () banked
 16147  00277A  6FEA               	movwf	iic_received_byte@i& (0+255),b
 16148  00277C                     l8562:
 16149                           
 16150                           ; BSR set to: 0
 16151  00277C  0E07               	movlw	7
 16152  00277E  0100               	movlb	0	; () banked
 16153  002780  65EA               	cpfsgt	iic_received_byte@i& (0+255),b
 16154  002782  D001               	goto	l8566
 16155  002784  D024               	goto	l8626
 16156  002786                     l8566:
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;i2c.c: 109: ret<<=1;
 16160  002786  0100               	movlb	0	; () banked
 16161  002788  90D8               	bcf	status,0,c
 16162  00278A  37E9               	rlcf	iic_received_byte@ret& (0+255),f,b
 16163                           
 16164                           ; BSR set to: 0
 16165                           
 16166                           ; BSR set to: 0
 16167                           
 16168                           ;i2c.c: 110: do{LATC &= ~(1<<3);}while(0);;;
 16169  00278C  968B               	bcf	3979,3,c	;volatile
 16170                           
 16171                           ; BSR set to: 0
 16172                           
 16173                           ; BSR set to: 0
 16174                           
 16175                           ;i2c.c: 111: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 16176                           
 16177                           ; BSR set to: 0
 16178  00278E  F000               	nop	
 16179  002790  F000               	nop	
 16180  002792  F000               	nop	
 16181  002794  F000               	nop	
 16182  002796  F000               	nop	
 16183  002798  F000               	nop	
 16184  00279A  F000               	nop	
 16185  00279C  F000               	nop	
 16186  00279E  F000               	nop	
 16187  0027A0  F000               	nop	
 16188  0027A2  F000               	nop	
 16189  0027A4  F000               	nop	
 16190                           
 16191                           ;i2c.c: 112: do{LATC |= (1<<3);}while(0);;;
 16192  0027A6  868B               	bsf	3979,3,c	;volatile
 16193                           
 16194                           ;i2c.c: 113: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 16195  0027A8  F000               	nop	
 16196  0027AA  F000               	nop	
 16197  0027AC  F000               	nop	
 16198  0027AE  F000               	nop	
 16199  0027B0  F000               	nop	
 16200  0027B2  F000               	nop	
 16201  0027B4  F000               	nop	
 16202  0027B6  F000               	nop	
 16203  0027B8  F000               	nop	
 16204  0027BA  F000               	nop	
 16205  0027BC  F000               	nop	
 16206  0027BE  F000               	nop	
 16207                           
 16208                           ;i2c.c: 114: if((PORTC & (1<<4))){
 16209  0027C0  A882               	btfss	3970,4,c	;volatile
 16210  0027C2  D002               	goto	l983
 16211                           
 16212                           ;i2c.c: 115: ret|=1;
 16213  0027C4  0100               	movlb	0	; () banked
 16214  0027C6  81E9               	bsf	iic_received_byte@ret& (0+255),0,b
 16215  0027C8                     l983:
 16216  0027C8  0100               	movlb	0	; () banked
 16217  0027CA  2BEA               	incf	iic_received_byte@i& (0+255),f,b
 16218  0027CC  D7D7               	goto	l8562
 16219  0027CE                     l8626:
 16220                           
 16221                           ; BSR set to: 0
 16222  0027CE  968B               	bcf	3979,3,c	;volatile
 16223                           
 16224                           ; BSR set to: 0
 16225                           ;i2c.c: 119: return ret;
 16226                           
 16227                           ; BSR set to: 0
 16228  0027D0  0100               	movlb	0	; () banked
 16229  0027D2  51E9               	movf	iic_received_byte@ret& (0+255),w,b
 16230  0027D4  0012               	return	
 16231  0027D6                     __end_of_iic_received_byte:
 16232                           	opt stack 0
 16233                           tosu	equ	0xFFF
 16234                           tosh	equ	0xFFE
 16235                           tosl	equ	0xFFD
 16236                           pclath	equ	0xFFA
 16237                           tblptru	equ	0xFF8
 16238                           tblptrh	equ	0xFF7
 16239                           tblptrl	equ	0xFF6
 16240                           tablat	equ	0xFF5
 16241                           prodh	equ	0xFF4
 16242                           prodl	equ	0xFF3
 16243                           intcon	equ	0xFF2
 16244                           indf0	equ	0xFEF
 16245                           postinc0	equ	0xFEE
 16246                           fsr0h	equ	0xFEA
 16247                           fsr0l	equ	0xFE9
 16248                           wreg	equ	0xFE8
 16249                           postinc1	equ	0xFE6
 16250                           postdec1	equ	0xFE5
 16251                           plusw1	equ	0xFE3
 16252                           fsr1h	equ	0xFE2
 16253                           fsr1l	equ	0xFE1
 16254                           indf2	equ	0xFDF
 16255                           postinc2	equ	0xFDE
 16256                           postdec2	equ	0xFDD
 16257                           plusw2	equ	0xFDB
 16258                           fsr2h	equ	0xFDA
 16259                           fsr2l	equ	0xFD9
 16260                           status	equ	0xFD8
 16261                           
 16262 ;; *************** function _ads1115_init_all_chip *****************
 16263 ;; Defined at:
 16264 ;;		line 112 in file "src/driver/ads1115.c"
 16265 ;; Parameters:    Size  Location     Type
 16266 ;;		None
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;		None
 16269 ;; Return value:  Size  Location     Type
 16270 ;;                  1    wreg      void 
 16271 ;; Registers used:
 16272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16273 ;; Tracked objects:
 16274 ;;		On entry : 0/0
 16275 ;;		On exit  : 0/0
 16276 ;;		Unchanged: 0/0
 16277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16282 ;;Total ram usage:        0 bytes
 16283 ;; Hardware stack levels used:    1
 16284 ;; Hardware stack levels required when called:    5
 16285 ;; This function calls:
 16286 ;;		_ads1115_init
 16287 ;; This function is called by:
 16288 ;;		_main
 16289 ;; This function uses a non-reentrant model
 16290 ;;
 16291                           
 16292                           	psect	text92
 16293  002ED4                     __ptext92:
 16294                           	opt stack 0
 16295  002ED4                     _ads1115_init_all_chip:
 16296                           	opt stack 25
 16297                           
 16298                           ;ads1115.c: 115: pAds1115PrObj= &ads1115Chip0;
 16299                           
 16300                           ; BSR set to: 0
 16301                           ;incstack = 0
 16302  002ED4  0E10               	movlw	low _ads1115Chip0
 16303  002ED6  0100               	movlb	0	; () banked
 16304  002ED8  6FB4               	movwf	_pAds1115PrObj& (0+255),b
 16305  002EDA  0E01               	movlw	high _ads1115Chip0
 16306  002EDC  0100               	movlb	0	; () banked
 16307  002EDE  6FB5               	movwf	(_pAds1115PrObj+1)& (0+255),b
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;ads1115.c: 116: ads1115_init(pAds1115PrObj,(0x90));
 16311  002EE0  C0B4  F0E9         	movff	_pAds1115PrObj,ads1115_init@pAds1115
 16312  002EE4  C0B5  F0EA         	movff	_pAds1115PrObj+1,ads1115_init@pAds1115+1
 16313  002EE8  0E90               	movlw	144
 16314  002EEA  0100               	movlb	0	; () banked
 16315  002EEC  6FEB               	movwf	ads1115_init@slvaddr& (0+255),b
 16316  002EEE  EC2D  F00E         	call	_ads1115_init	;wreg free
 16317                           
 16318                           ;ads1115.c: 118: pAds1115DiffPrObj=&ads1115Chip1;
 16319  002EF2  0E00               	movlw	low _ads1115Chip1
 16320  002EF4  6E09               	movwf	_pAds1115DiffPrObj,c
 16321  002EF6  0E01               	movlw	high _ads1115Chip1
 16322  002EF8  6E0A               	movwf	_pAds1115DiffPrObj+1,c
 16323                           
 16324                           ;ads1115.c: 119: ads1115_init(pAds1115DiffPrObj,(0x92));
 16325  002EFA  C009  F0E9         	movff	_pAds1115DiffPrObj,ads1115_init@pAds1115
 16326  002EFE  C00A  F0EA         	movff	_pAds1115DiffPrObj+1,ads1115_init@pAds1115+1
 16327  002F02  0E92               	movlw	146
 16328  002F04  0100               	movlb	0	; () banked
 16329  002F06  6FEB               	movwf	ads1115_init@slvaddr& (0+255),b
 16330  002F08  EC2D  F00E         	call	_ads1115_init	;wreg free
 16331  002F0C  0012               	return		;funcret
 16332  002F0E                     __end_of_ads1115_init_all_chip:
 16333                           	opt stack 0
 16334                           tosu	equ	0xFFF
 16335                           tosh	equ	0xFFE
 16336                           tosl	equ	0xFFD
 16337                           pclath	equ	0xFFA
 16338                           tblptru	equ	0xFF8
 16339                           tblptrh	equ	0xFF7
 16340                           tblptrl	equ	0xFF6
 16341                           tablat	equ	0xFF5
 16342                           prodh	equ	0xFF4
 16343                           prodl	equ	0xFF3
 16344                           intcon	equ	0xFF2
 16345                           indf0	equ	0xFEF
 16346                           postinc0	equ	0xFEE
 16347                           fsr0h	equ	0xFEA
 16348                           fsr0l	equ	0xFE9
 16349                           wreg	equ	0xFE8
 16350                           postinc1	equ	0xFE6
 16351                           postdec1	equ	0xFE5
 16352                           plusw1	equ	0xFE3
 16353                           fsr1h	equ	0xFE2
 16354                           fsr1l	equ	0xFE1
 16355                           indf2	equ	0xFDF
 16356                           postinc2	equ	0xFDE
 16357                           postdec2	equ	0xFDD
 16358                           plusw2	equ	0xFDB
 16359                           fsr2h	equ	0xFDA
 16360                           fsr2l	equ	0xFD9
 16361                           status	equ	0xFD8
 16362                           
 16363 ;; *************** function _ads1115_init *****************
 16364 ;; Defined at:
 16365 ;;		line 5 in file "src/driver/ads1115.c"
 16366 ;; Parameters:    Size  Location     Type
 16367 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16368 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16369 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;		None
 16372 ;; Return value:  Size  Location     Type
 16373 ;;                  1    wreg      void 
 16374 ;; Registers used:
 16375 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16376 ;; Tracked objects:
 16377 ;;		On entry : 0/0
 16378 ;;		On exit  : 0/0
 16379 ;;		Unchanged: 0/0
 16380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16381 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16385 ;;Total ram usage:        3 bytes
 16386 ;; Hardware stack levels used:    1
 16387 ;; Hardware stack levels required when called:    4
 16388 ;; This function calls:
 16389 ;;		Nothing
 16390 ;; This function is called by:
 16391 ;;		_ads1115_init_all_chip
 16392 ;; This function uses a non-reentrant model
 16393 ;;
 16394                           
 16395                           	psect	text93
 16396  001C5A                     __ptext93:
 16397                           	opt stack 0
 16398  001C5A                     _ads1115_init:
 16399                           	opt stack 25
 16400                           
 16401                           ;ads1115.c: 7: pAds1115->chip=ADS1115;
 16402                           
 16403                           ;incstack = 0
 16404  001C5A  C0E9  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 16405  001C5E  C0EA  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 16406  001C62  0E05               	movlw	5
 16407  001C64  6EDF               	movwf	indf2,c
 16408                           
 16409                           ;ads1115.c: 8: pAds1115->slaveAddr=slvaddr;
 16410  001C66  0100               	movlb	0	; () banked
 16411  001C68  EE20 F001          	lfsr	2,1
 16412  001C6C  51E9               	movf	ads1115_init@pAds1115& (0+255),w,b
 16413  001C6E  26D9               	addwf	fsr2l,f,c
 16414  001C70  51EA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 16415  001C72  22DA               	addwfc	fsr2h,f,c
 16416  001C74  C0EB  FFDF         	movff	ads1115_init@slvaddr,indf2
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;ads1115.c: 9: pAds1115->config.data=0x8583;;
 16420  001C78  0100               	movlb	0	; () banked
 16421  001C7A  EE20 F002          	lfsr	2,2
 16422  001C7E  51E9               	movf	ads1115_init@pAds1115& (0+255),w,b
 16423  001C80  26D9               	addwf	fsr2l,f,c
 16424  001C82  51EA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 16425  001C84  22DA               	addwfc	fsr2h,f,c
 16426  001C86  0E83               	movlw	131
 16427  001C88  6EDE               	movwf	postinc2,c
 16428  001C8A  0E85               	movlw	133
 16429  001C8C  6EDD               	movwf	postdec2,c
 16430                           
 16431                           ; BSR set to: 0
 16432                           ;ads1115.c: 10: pAds1115->iic_start=iic_start;
 16433  001C8E  0100               	movlb	0	; () banked
 16434  001C90  EE20 F006          	lfsr	2,6
 16435  001C94  51E9               	movf	ads1115_init@pAds1115& (0+255),w,b
 16436  001C96  26D9               	addwf	fsr2l,f,c
 16437  001C98  51EA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 16438  001C9A  22DA               	addwfc	fsr2h,f,c
 16439  001C9C  0EAA               	movlw	low _iic_start
 16440  001C9E  6EDE               	movwf	postinc2,c
 16441  001CA0  0E2D               	movlw	high _iic_start
 16442  001CA2  6EDD               	movwf	postdec2,c
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;ads1115.c: 11: pAds1115->iic_stop=iic_stop;
 16446  001CA4  0100               	movlb	0	; () banked
 16447  001CA6  EE20 F008          	lfsr	2,8
 16448  001CAA  51E9               	movf	ads1115_init@pAds1115& (0+255),w,b
 16449  001CAC  26D9               	addwf	fsr2l,f,c
 16450  001CAE  51EA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 16451  001CB0  22DA               	addwfc	fsr2h,f,c
 16452  001CB2  0E24               	movlw	low _iic_stop
 16453  001CB4  6EDE               	movwf	postinc2,c
 16454  001CB6  0E2E               	movlw	high _iic_stop
 16455  001CB8  6EDD               	movwf	postdec2,c
 16456                           
 16457                           ; BSR set to: 0
 16458                           ;ads1115.c: 12: pAds1115->iic_send_byte=iic_send_byte;
 16459  001CBA  0100               	movlb	0	; () banked
 16460  001CBC  EE20 F00A          	lfsr	2,10
 16461  001CC0  51E9               	movf	ads1115_init@pAds1115& (0+255),w,b
 16462  001CC2  26D9               	addwf	fsr2l,f,c
 16463  001CC4  51EA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 16464  001CC6  22DA               	addwfc	fsr2h,f,c
 16465  001CC8  0E96               	movlw	low _iic_send_byte
 16466  001CCA  6EDE               	movwf	postinc2,c
 16467  001CCC  0E26               	movlw	high _iic_send_byte
 16468  001CCE  6EDD               	movwf	postdec2,c
 16469                           
 16470                           ; BSR set to: 0
 16471                           ;ads1115.c: 13: pAds1115->iic_waite_ack=iic_waite_ack;
 16472  001CD0  0100               	movlb	0	; () banked
 16473  001CD2  EE20 F00C          	lfsr	2,12
 16474  001CD6  51E9               	movf	ads1115_init@pAds1115& (0+255),w,b
 16475  001CD8  26D9               	addwf	fsr2l,f,c
 16476  001CDA  51EA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 16477  001CDC  22DA               	addwfc	fsr2h,f,c
 16478  001CDE  0ED6               	movlw	low _iic_waite_ack
 16479  001CE0  6EDE               	movwf	postinc2,c
 16480  001CE2  0E27               	movlw	high _iic_waite_ack
 16481  001CE4  6EDD               	movwf	postdec2,c
 16482                           
 16483                           ; BSR set to: 0
 16484                           ;ads1115.c: 14: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 16485  001CE6  0100               	movlb	0	; () banked
 16486  001CE8  EE20 F00E          	lfsr	2,14
 16487  001CEC  51E9               	movf	ads1115_init@pAds1115& (0+255),w,b
 16488  001CEE  26D9               	addwf	fsr2l,f,c
 16489  001CF0  51EA               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 16490  001CF2  22DA               	addwfc	fsr2h,f,c
 16491  001CF4  0E8C               	movlw	low _iic_received_byte_if_ack
 16492  001CF6  6EDE               	movwf	postinc2,c
 16493  001CF8  0E32               	movlw	high _iic_received_byte_if_ack
 16494  001CFA  6EDD               	movwf	postdec2,c
 16495                           
 16496                           ; BSR set to: 0
 16497  001CFC  0012               	return		;funcret
 16498  001CFE                     __end_of_ads1115_init:
 16499                           	opt stack 0
 16500                           tosu	equ	0xFFF
 16501                           tosh	equ	0xFFE
 16502                           tosl	equ	0xFFD
 16503                           pclath	equ	0xFFA
 16504                           tblptru	equ	0xFF8
 16505                           tblptrh	equ	0xFF7
 16506                           tblptrl	equ	0xFF6
 16507                           tablat	equ	0xFF5
 16508                           prodh	equ	0xFF4
 16509                           prodl	equ	0xFF3
 16510                           intcon	equ	0xFF2
 16511                           indf0	equ	0xFEF
 16512                           postinc0	equ	0xFEE
 16513                           fsr0h	equ	0xFEA
 16514                           fsr0l	equ	0xFE9
 16515                           wreg	equ	0xFE8
 16516                           postinc1	equ	0xFE6
 16517                           postdec1	equ	0xFE5
 16518                           plusw1	equ	0xFE3
 16519                           fsr1h	equ	0xFE2
 16520                           fsr1l	equ	0xFE1
 16521                           indf2	equ	0xFDF
 16522                           postinc2	equ	0xFDE
 16523                           postdec2	equ	0xFDD
 16524                           plusw2	equ	0xFDB
 16525                           fsr2h	equ	0xFDA
 16526                           fsr2l	equ	0xFD9
 16527                           status	equ	0xFD8
 16528                           
 16529 ;; *************** function _handler_interrupt_low *****************
 16530 ;; Defined at:
 16531 ;;		line 38 in file "src/soc/int.c"
 16532 ;; Parameters:    Size  Location     Type
 16533 ;;		None
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;		None
 16536 ;; Return value:  Size  Location     Type
 16537 ;;                  1    wreg      void 
 16538 ;; Registers used:
 16539 ;;		wreg, status,2, status,0, cstack
 16540 ;; Tracked objects:
 16541 ;;		On entry : 0/0
 16542 ;;		On exit  : 0/0
 16543 ;;		Unchanged: 0/0
 16544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16547 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16548 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16549 ;;Total ram usage:       17 bytes
 16550 ;; Hardware stack levels used:    1
 16551 ;; Hardware stack levels required when called:    3
 16552 ;; This function calls:
 16553 ;;		_rtc_alrm_irq_hook
 16554 ;;		_sys_ticker_irq_hook
 16555 ;; This function is called by:
 16556 ;;		Interrupt level 1
 16557 ;; This function uses a non-reentrant model
 16558 ;;
 16559                           
 16560                           	psect	intcodelo
 16561  000018                     __pintcodelo:
 16562                           	opt stack 0
 16563  000018                     _handler_interrupt_low:
 16564                           	opt stack 16
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;incstack = 0
 16568  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16569  00001A  CFD8 F02E          	movff	status,??_handler_interrupt_low
 16570  00001E  CFE8 F02F          	movff	wreg,??_handler_interrupt_low+1
 16571  000022  CFE0 F030          	movff	bsr,??_handler_interrupt_low+2
 16572  000026  CFFA F031          	movff	pclath,??_handler_interrupt_low+3
 16573  00002A  CFFB F032          	movff	pclatu,??_handler_interrupt_low+4
 16574  00002E  CFE9 F033          	movff	fsr0l,??_handler_interrupt_low+5
 16575  000032  CFEA F034          	movff	fsr0h,??_handler_interrupt_low+6
 16576  000036  CFE1 F035          	movff	fsr1l,??_handler_interrupt_low+7
 16577  00003A  CFE2 F036          	movff	fsr1h,??_handler_interrupt_low+8
 16578  00003E  CFD9 F037          	movff	fsr2l,??_handler_interrupt_low+9
 16579  000042  CFDA F038          	movff	fsr2h,??_handler_interrupt_low+10
 16580  000046  CFF3 F039          	movff	prodl,??_handler_interrupt_low+11
 16581  00004A  CFF4 F03A          	movff	prodh,??_handler_interrupt_low+12
 16582  00004E  CFF6 F03B          	movff	tblptrl,??_handler_interrupt_low+13
 16583  000052  CFF7 F03C          	movff	tblptrh,??_handler_interrupt_low+14
 16584  000056  CFF8 F03D          	movff	tblptru,??_handler_interrupt_low+15
 16585  00005A  CFF5 F03E          	movff	tablat,??_handler_interrupt_low+16
 16586                           
 16587                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 16588  00005E  B29D               	btfsc	3997,1,c	;volatile
 16589  000060  A29E               	btfss	3998,1,c	;volatile
 16590  000062  D00E               	goto	i1l8172
 16591  000064  B29F               	btfsc	3999,1,c	;volatile
 16592  000066  D00C               	goto	i1l8172
 16593                           
 16594                           ;int.c: 41: PIR1bits.TMR2IF=0;
 16595  000068  929E               	bcf	3998,1,c	;volatile
 16596                           
 16597                           ;int.c: 42: glTicker++;
 16598  00006A  0E01               	movlw	1
 16599  00006C  0100               	movlb	0	; () banked
 16600  00006E  278A               	addwf	_glTicker& (0+255),f,b	;volatile
 16601  000070  0E00               	movlw	0
 16602  000072  238B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 16603  000074  238C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 16604  000076  238D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 16605                           
 16606                           ; BSR set to: 0
 16607                           ;int.c: 43: glbEvent |= (1<<0);
 16608  000078  0100               	movlb	0	; () banked
 16609  00007A  81CE               	bsf	_glbEvent& (0+255),0,b	;volatile
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;int.c: 44: sys_ticker_irq_hook();
 16613  00007C  EC65  F019         	call	_sys_ticker_irq_hook	;wreg free
 16614  000080                     i1l8172:
 16615                           
 16616                           ;int.c: 45: }
 16617                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 16618  000080  B0A3               	btfsc	4003,0,c	;volatile
 16619  000082  A0A4               	btfss	4004,0,c	;volatile
 16620  000084  D007               	goto	i1l1594
 16621  000086  B0A5               	btfsc	4005,0,c	;volatile
 16622  000088  D005               	goto	i1l1594
 16623                           
 16624                           ;int.c: 47: PIR3bits.RTCCIF=0;
 16625  00008A  90A4               	bcf	4004,0,c	;volatile
 16626                           
 16627                           ;int.c: 48: glbEvent |= (1<<1);
 16628  00008C  0100               	movlb	0	; () banked
 16629  00008E  83CE               	bsf	_glbEvent& (0+255),1,b	;volatile
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;int.c: 49: rtc_alrm_irq_hook();
 16633  000090  ECB7  F019         	call	_rtc_alrm_irq_hook	;wreg free
 16634  000094                     i1l1594:
 16635  000094  C03E  FFF5         	movff	??_handler_interrupt_low+16,tablat
 16636  000098  C03D  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 16637  00009C  C03C  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 16638  0000A0  C03B  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 16639  0000A4  C03A  FFF4         	movff	??_handler_interrupt_low+12,prodh
 16640  0000A8  C039  FFF3         	movff	??_handler_interrupt_low+11,prodl
 16641  0000AC  C038  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 16642  0000B0  C037  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 16643  0000B4  C036  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 16644  0000B8  C035  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 16645  0000BC  C034  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 16646  0000C0  C033  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 16647  0000C4  C032  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 16648  0000C8  C031  FFFA         	movff	??_handler_interrupt_low+3,pclath
 16649  0000CC  C030  FFE0         	movff	??_handler_interrupt_low+2,bsr
 16650  0000D0  C02F  FFE8         	movff	??_handler_interrupt_low+1,wreg
 16651  0000D4  C02E  FFD8         	movff	??_handler_interrupt_low,status
 16652  0000D8  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16653  0000DA  0010               	retfie	
 16654  0000DC                     __end_of_handler_interrupt_low:
 16655                           	opt stack 0
 16656                           tosu	equ	0xFFF
 16657                           tosh	equ	0xFFE
 16658                           tosl	equ	0xFFD
 16659                           pclatu	equ	0xFFB
 16660                           pclath	equ	0xFFA
 16661                           tblptru	equ	0xFF8
 16662                           tblptrh	equ	0xFF7
 16663                           tblptrl	equ	0xFF6
 16664                           tablat	equ	0xFF5
 16665                           prodh	equ	0xFF4
 16666                           prodl	equ	0xFF3
 16667                           intcon	equ	0xFF2
 16668                           indf0	equ	0xFEF
 16669                           postinc0	equ	0xFEE
 16670                           fsr0h	equ	0xFEA
 16671                           fsr0l	equ	0xFE9
 16672                           wreg	equ	0xFE8
 16673                           postinc1	equ	0xFE6
 16674                           postdec1	equ	0xFE5
 16675                           plusw1	equ	0xFE3
 16676                           fsr1h	equ	0xFE2
 16677                           fsr1l	equ	0xFE1
 16678                           bsr	equ	0xFE0
 16679                           indf2	equ	0xFDF
 16680                           postinc2	equ	0xFDE
 16681                           postdec2	equ	0xFDD
 16682                           plusw2	equ	0xFDB
 16683                           fsr2h	equ	0xFDA
 16684                           fsr2l	equ	0xFD9
 16685                           status	equ	0xFD8
 16686                           
 16687 ;; *************** function _sys_ticker_irq_hook *****************
 16688 ;; Defined at:
 16689 ;;		line 38 in file "src/soc/ticker.c"
 16690 ;; Parameters:    Size  Location     Type
 16691 ;;		None
 16692 ;; Auto vars:     Size  Location     Type
 16693 ;;		None
 16694 ;; Return value:  Size  Location     Type
 16695 ;;                  1    wreg      void 
 16696 ;; Registers used:
 16697 ;;		wreg, status,2, status,0
 16698 ;; Tracked objects:
 16699 ;;		On entry : 0/0
 16700 ;;		On exit  : 0/0
 16701 ;;		Unchanged: 0/0
 16702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16707 ;;Total ram usage:        0 bytes
 16708 ;; Hardware stack levels used:    1
 16709 ;; Hardware stack levels required when called:    2
 16710 ;; This function calls:
 16711 ;;		Nothing
 16712 ;; This function is called by:
 16713 ;;		_handler_interrupt_low
 16714 ;; This function uses a non-reentrant model
 16715 ;;
 16716                           
 16717                           	psect	text95
 16718  0032CA                     __ptext95:
 16719                           	opt stack 0
 16720  0032CA                     _sys_ticker_irq_hook:
 16721                           	opt stack 16
 16722                           
 16723                           ;ticker.c: 40: if(dlyTickerEn){
 16724                           
 16725                           ;incstack = 0
 16726  0032CA  5011               	movf	_dlyTickerEn,w,c
 16727  0032CC  B4D8               	btfsc	status,2,c
 16728  0032CE  D004               	goto	i1l1693
 16729                           
 16730                           ;ticker.c: 41: dlyTicker+=10;
 16731  0032D0  0E0A               	movlw	10
 16732  0032D2  2605               	addwf	_dlyTicker,f,c
 16733  0032D4  0E00               	movlw	0
 16734  0032D6  2206               	addwfc	_dlyTicker+1,f,c
 16735  0032D8                     i1l1693:
 16736                           
 16737                           ;ticker.c: 42: }
 16738                           ;ticker.c: 43: userTicker_ms+=10;
 16739  0032D8  0E0A               	movlw	10
 16740  0032DA  260B               	addwf	_userTicker_ms,f,c	;volatile
 16741  0032DC  0E00               	movlw	0
 16742  0032DE  220C               	addwfc	_userTicker_ms+1,f,c	;volatile
 16743  0032E0  0012               	return		;funcret
 16744  0032E2                     __end_of_sys_ticker_irq_hook:
 16745                           	opt stack 0
 16746                           tosu	equ	0xFFF
 16747                           tosh	equ	0xFFE
 16748                           tosl	equ	0xFFD
 16749                           pclatu	equ	0xFFB
 16750                           pclath	equ	0xFFA
 16751                           tblptru	equ	0xFF8
 16752                           tblptrh	equ	0xFF7
 16753                           tblptrl	equ	0xFF6
 16754                           tablat	equ	0xFF5
 16755                           prodh	equ	0xFF4
 16756                           prodl	equ	0xFF3
 16757                           intcon	equ	0xFF2
 16758                           indf0	equ	0xFEF
 16759                           postinc0	equ	0xFEE
 16760                           fsr0h	equ	0xFEA
 16761                           fsr0l	equ	0xFE9
 16762                           wreg	equ	0xFE8
 16763                           postinc1	equ	0xFE6
 16764                           postdec1	equ	0xFE5
 16765                           plusw1	equ	0xFE3
 16766                           fsr1h	equ	0xFE2
 16767                           fsr1l	equ	0xFE1
 16768                           bsr	equ	0xFE0
 16769                           indf2	equ	0xFDF
 16770                           postinc2	equ	0xFDE
 16771                           postdec2	equ	0xFDD
 16772                           plusw2	equ	0xFDB
 16773                           fsr2h	equ	0xFDA
 16774                           fsr2l	equ	0xFD9
 16775                           status	equ	0xFD8
 16776                           
 16777 ;; *************** function _rtc_alrm_irq_hook *****************
 16778 ;; Defined at:
 16779 ;;		line 103 in file "src/soc/rtc.c"
 16780 ;; Parameters:    Size  Location     Type
 16781 ;;		None
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;		None
 16784 ;; Return value:  Size  Location     Type
 16785 ;;                  1    wreg      void 
 16786 ;; Registers used:
 16787 ;;		None
 16788 ;; Tracked objects:
 16789 ;;		On entry : 0/0
 16790 ;;		On exit  : 0/0
 16791 ;;		Unchanged: 0/0
 16792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16797 ;;Total ram usage:        0 bytes
 16798 ;; Hardware stack levels used:    1
 16799 ;; Hardware stack levels required when called:    2
 16800 ;; This function calls:
 16801 ;;		Nothing
 16802 ;; This function is called by:
 16803 ;;		_handler_interrupt_low
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           	psect	text96
 16808  00336E                     __ptext96:
 16809                           	opt stack 0
 16810  00336E                     _rtc_alrm_irq_hook:
 16811                           	opt stack 16
 16812                           
 16813                           ;incstack = 0
 16814  00336E  0012               	return		;funcret
 16815  003370                     __end_of_rtc_alrm_irq_hook:
 16816                           	opt stack 0
 16817                           tosu	equ	0xFFF
 16818                           tosh	equ	0xFFE
 16819                           tosl	equ	0xFFD
 16820                           pclatu	equ	0xFFB
 16821                           pclath	equ	0xFFA
 16822                           tblptru	equ	0xFF8
 16823                           tblptrh	equ	0xFF7
 16824                           tblptrl	equ	0xFF6
 16825                           tablat	equ	0xFF5
 16826                           prodh	equ	0xFF4
 16827                           prodl	equ	0xFF3
 16828                           intcon	equ	0xFF2
 16829                           indf0	equ	0xFEF
 16830                           postinc0	equ	0xFEE
 16831                           fsr0h	equ	0xFEA
 16832                           fsr0l	equ	0xFE9
 16833                           wreg	equ	0xFE8
 16834                           postinc1	equ	0xFE6
 16835                           postdec1	equ	0xFE5
 16836                           plusw1	equ	0xFE3
 16837                           fsr1h	equ	0xFE2
 16838                           fsr1l	equ	0xFE1
 16839                           bsr	equ	0xFE0
 16840                           indf2	equ	0xFDF
 16841                           postinc2	equ	0xFDE
 16842                           postdec2	equ	0xFDD
 16843                           plusw2	equ	0xFDB
 16844                           fsr2h	equ	0xFDA
 16845                           fsr2l	equ	0xFD9
 16846                           status	equ	0xFD8
 16847                           
 16848 ;; *************** function _handler_interrupt_hight *****************
 16849 ;; Defined at:
 16850 ;;		line 9 in file "src/soc/int.c"
 16851 ;; Parameters:    Size  Location     Type
 16852 ;;		None
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;		None
 16855 ;; Return value:  Size  Location     Type
 16856 ;;                  1    wreg      void 
 16857 ;; Registers used:
 16858 ;;		wreg, status,2, status,0, cstack
 16859 ;; Tracked objects:
 16860 ;;		On entry : 0/0
 16861 ;;		On exit  : 0/0
 16862 ;;		Unchanged: 0/0
 16863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16866 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16867 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16868 ;;Total ram usage:       14 bytes
 16869 ;; Hardware stack levels used:    1
 16870 ;; Hardware stack levels required when called:    1
 16871 ;; This function calls:
 16872 ;;		i2_rtc_alrm_irq_hook
 16873 ;;		i2_sys_ticker_irq_hook
 16874 ;; This function is called by:
 16875 ;;		Interrupt level 2
 16876 ;; This function uses a non-reentrant model
 16877 ;;
 16878                           
 16879                           	psect	intcode
 16880  000008                     __pintcode:
 16881                           	opt stack 0
 16882  000008                     _handler_interrupt_hight:
 16883                           	opt stack 16
 16884                           
 16885                           ;incstack = 0
 16886  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16887  00000A  EF2E  F00B         	goto	int_func
 16888                           tosu	equ	0xFFF
 16889                           tosh	equ	0xFFE
 16890                           tosl	equ	0xFFD
 16891                           pclatu	equ	0xFFB
 16892                           pclath	equ	0xFFA
 16893                           tblptru	equ	0xFF8
 16894                           tblptrh	equ	0xFF7
 16895                           tblptrl	equ	0xFF6
 16896                           tablat	equ	0xFF5
 16897                           prodh	equ	0xFF4
 16898                           prodl	equ	0xFF3
 16899                           intcon	equ	0xFF2
 16900                           indf0	equ	0xFEF
 16901                           postinc0	equ	0xFEE
 16902                           fsr0h	equ	0xFEA
 16903                           fsr0l	equ	0xFE9
 16904                           wreg	equ	0xFE8
 16905                           postinc1	equ	0xFE6
 16906                           postdec1	equ	0xFE5
 16907                           plusw1	equ	0xFE3
 16908                           fsr1h	equ	0xFE2
 16909                           fsr1l	equ	0xFE1
 16910                           bsr	equ	0xFE0
 16911                           indf2	equ	0xFDF
 16912                           postinc2	equ	0xFDE
 16913                           postdec2	equ	0xFDD
 16914                           plusw2	equ	0xFDB
 16915                           fsr2h	equ	0xFDA
 16916                           fsr2l	equ	0xFD9
 16917                           status	equ	0xFD8
 16918                           
 16919                           	psect	intcode_body
 16920  00165C                     __pintcode_body:
 16921                           	opt stack 16
 16922  00165C                     int_func:
 16923                           	opt stack 16
 16924  00165C  CFFA F020          	movff	pclath,??_handler_interrupt_hight
 16925  001660  CFFB F021          	movff	pclatu,??_handler_interrupt_hight+1
 16926  001664  CFE9 F022          	movff	fsr0l,??_handler_interrupt_hight+2
 16927  001668  CFEA F023          	movff	fsr0h,??_handler_interrupt_hight+3
 16928  00166C  CFE1 F024          	movff	fsr1l,??_handler_interrupt_hight+4
 16929  001670  CFE2 F025          	movff	fsr1h,??_handler_interrupt_hight+5
 16930  001674  CFD9 F026          	movff	fsr2l,??_handler_interrupt_hight+6
 16931  001678  CFDA F027          	movff	fsr2h,??_handler_interrupt_hight+7
 16932  00167C  CFF3 F028          	movff	prodl,??_handler_interrupt_hight+8
 16933  001680  CFF4 F029          	movff	prodh,??_handler_interrupt_hight+9
 16934  001684  CFF6 F02A          	movff	tblptrl,??_handler_interrupt_hight+10
 16935  001688  CFF7 F02B          	movff	tblptrh,??_handler_interrupt_hight+11
 16936  00168C  CFF8 F02C          	movff	tblptru,??_handler_interrupt_hight+12
 16937  001690  CFF5 F02D          	movff	tablat,??_handler_interrupt_hight+13
 16938                           
 16939                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 16940  001694  BAF2               	btfsc	intcon,5,c	;volatile
 16941  001696  A4F2               	btfss	intcon,2,c	;volatile
 16942  001698  D002               	goto	i2l1583
 16943  00169A  B4F1               	btfsc	intcon2,2,c	;volatile
 16944                           
 16945                           ;int.c: 13: __nop();
 16946  00169C  F000               	nop	
 16947  00169E                     i2l1583:
 16948                           
 16949                           ;int.c: 14: }
 16950                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 16951  00169E  BCF2               	btfsc	intcon,6,c	;volatile
 16952  0016A0  A89D               	btfss	3997,4,c	;volatile
 16953  0016A2  D001               	goto	i2l1584
 16954  0016A4  509E               	movf	3998,w,c	;volatile
 16955  0016A6                     i2l1584:
 16956                           
 16957                           ;int.c: 17: }
 16958                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 16959  0016A6  BCF2               	btfsc	intcon,6,c	;volatile
 16960  0016A8  AA9D               	btfss	3997,5,c	;volatile
 16961  0016AA  D001               	goto	i2l1585
 16962  0016AC  509E               	movf	3998,w,c	;volatile
 16963  0016AE                     i2l1585:
 16964                           
 16965                           ;int.c: 20: }
 16966                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 16967  0016AE  BCF2               	btfsc	intcon,6,c	;volatile
 16968  0016B0  A09D               	btfss	3997,0,c	;volatile
 16969  0016B2  D001               	goto	i2l1586
 16970  0016B4  509E               	movf	3998,w,c	;volatile
 16971  0016B6                     i2l1586:
 16972                           
 16973                           ;int.c: 23: }
 16974                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 16975  0016B6  B29D               	btfsc	3997,1,c	;volatile
 16976  0016B8  A29E               	btfss	3998,1,c	;volatile
 16977  0016BA  D00E               	goto	i2l8146
 16978  0016BC  A29F               	btfss	3999,1,c	;volatile
 16979  0016BE  D00C               	goto	i2l8146
 16980                           
 16981                           ;int.c: 26: PIR1bits.TMR2IF=0;
 16982  0016C0  929E               	bcf	3998,1,c	;volatile
 16983                           
 16984                           ;int.c: 27: glTicker++;
 16985  0016C2  0E01               	movlw	1
 16986  0016C4  0100               	movlb	0	; () banked
 16987  0016C6  278A               	addwf	_glTicker& (0+255),f,b	;volatile
 16988  0016C8  0E00               	movlw	0
 16989  0016CA  238B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 16990  0016CC  238C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 16991  0016CE  238D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 16992                           
 16993                           ; BSR set to: 0
 16994                           ;int.c: 28: glbEvent |= (1<<0);
 16995  0016D0  0100               	movlb	0	; () banked
 16996  0016D2  81CE               	bsf	_glbEvent& (0+255),0,b	;volatile
 16997                           
 16998                           ; BSR set to: 0
 16999                           ;int.c: 29: sys_ticker_irq_hook();
 17000  0016D4  EC71  F019         	call	i2_sys_ticker_irq_hook	;wreg free
 17001  0016D8                     i2l8146:
 17002                           
 17003                           ;int.c: 30: }
 17004                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 17005  0016D8  B0A3               	btfsc	4003,0,c	;volatile
 17006  0016DA  A0A4               	btfss	4004,0,c	;volatile
 17007  0016DC  D007               	goto	i2l1589
 17008  0016DE  A0A5               	btfss	4005,0,c	;volatile
 17009  0016E0  D005               	goto	i2l1589
 17010                           
 17011                           ;int.c: 32: PIR3bits.RTCCIF=0;
 17012  0016E2  90A4               	bcf	4004,0,c	;volatile
 17013                           
 17014                           ;int.c: 33: glbEvent |= (1<<1);
 17015  0016E4  0100               	movlb	0	; () banked
 17016  0016E6  83CE               	bsf	_glbEvent& (0+255),1,b	;volatile
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;int.c: 34: rtc_alrm_irq_hook();
 17020  0016E8  ECB8  F019         	call	i2_rtc_alrm_irq_hook	;wreg free
 17021  0016EC                     i2l1589:
 17022  0016EC  C02D  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 17023  0016F0  C02C  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 17024  0016F4  C02B  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 17025  0016F8  C02A  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 17026  0016FC  C029  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 17027  001700  C028  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 17028  001704  C027  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 17029  001708  C026  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 17030  00170C  C025  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 17031  001710  C024  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 17032  001714  C023  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 17033  001718  C022  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 17034  00171C  C021  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 17035  001720  C020  FFFA         	movff	??_handler_interrupt_hight,pclath
 17036  001724  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17037  001726  0011               	retfie		f
 17038  001728                     __end_of_handler_interrupt_hight:
 17039                           	opt stack 0
 17040                           tosu	equ	0xFFF
 17041                           tosh	equ	0xFFE
 17042                           tosl	equ	0xFFD
 17043                           pclatu	equ	0xFFB
 17044                           pclath	equ	0xFFA
 17045                           tblptru	equ	0xFF8
 17046                           tblptrh	equ	0xFF7
 17047                           tblptrl	equ	0xFF6
 17048                           tablat	equ	0xFF5
 17049                           prodh	equ	0xFF4
 17050                           prodl	equ	0xFF3
 17051                           intcon	equ	0xFF2
 17052                           intcon2	equ	0xFF1
 17053                           indf0	equ	0xFEF
 17054                           postinc0	equ	0xFEE
 17055                           fsr0h	equ	0xFEA
 17056                           fsr0l	equ	0xFE9
 17057                           wreg	equ	0xFE8
 17058                           postinc1	equ	0xFE6
 17059                           postdec1	equ	0xFE5
 17060                           plusw1	equ	0xFE3
 17061                           fsr1h	equ	0xFE2
 17062                           fsr1l	equ	0xFE1
 17063                           bsr	equ	0xFE0
 17064                           indf2	equ	0xFDF
 17065                           postinc2	equ	0xFDE
 17066                           postdec2	equ	0xFDD
 17067                           plusw2	equ	0xFDB
 17068                           fsr2h	equ	0xFDA
 17069                           fsr2l	equ	0xFD9
 17070                           status	equ	0xFD8
 17071                           
 17072 ;; *************** function i2_sys_ticker_irq_hook *****************
 17073 ;; Defined at:
 17074 ;;		line 38 in file "src/soc/ticker.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;		None
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      void 
 17081 ;; Registers used:
 17082 ;;		wreg, status,2, status,0
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17092 ;;Total ram usage:        0 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_handler_interrupt_hight
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           	psect	text98
 17102  0032E2                     __ptext98:
 17103                           	opt stack 0
 17104  0032E2                     i2_sys_ticker_irq_hook:
 17105                           	opt stack 16
 17106                           
 17107                           ;ticker.c: 40: if(dlyTickerEn){
 17108                           
 17109                           ;incstack = 0
 17110  0032E2  5011               	movf	_dlyTickerEn,w,c
 17111  0032E4  B4D8               	btfsc	status,2,c
 17112  0032E6  D004               	goto	i2l1693
 17113                           
 17114                           ;ticker.c: 41: dlyTicker+=10;
 17115  0032E8  0E0A               	movlw	10
 17116  0032EA  2605               	addwf	_dlyTicker,f,c
 17117  0032EC  0E00               	movlw	0
 17118  0032EE  2206               	addwfc	_dlyTicker+1,f,c
 17119  0032F0                     i2l1693:
 17120                           
 17121                           ;ticker.c: 42: }
 17122                           ;ticker.c: 43: userTicker_ms+=10;
 17123  0032F0  0E0A               	movlw	10
 17124  0032F2  260B               	addwf	_userTicker_ms,f,c	;volatile
 17125  0032F4  0E00               	movlw	0
 17126  0032F6  220C               	addwfc	_userTicker_ms+1,f,c	;volatile
 17127  0032F8  0012               	return		;funcret
 17128  0032FA                     __end_ofi2_sys_ticker_irq_hook:
 17129                           	opt stack 0
 17130                           tosu	equ	0xFFF
 17131                           tosh	equ	0xFFE
 17132                           tosl	equ	0xFFD
 17133                           pclatu	equ	0xFFB
 17134                           pclath	equ	0xFFA
 17135                           tblptru	equ	0xFF8
 17136                           tblptrh	equ	0xFF7
 17137                           tblptrl	equ	0xFF6
 17138                           tablat	equ	0xFF5
 17139                           prodh	equ	0xFF4
 17140                           prodl	equ	0xFF3
 17141                           intcon	equ	0xFF2
 17142                           intcon2	equ	0xFF1
 17143                           indf0	equ	0xFEF
 17144                           postinc0	equ	0xFEE
 17145                           fsr0h	equ	0xFEA
 17146                           fsr0l	equ	0xFE9
 17147                           wreg	equ	0xFE8
 17148                           postinc1	equ	0xFE6
 17149                           postdec1	equ	0xFE5
 17150                           plusw1	equ	0xFE3
 17151                           fsr1h	equ	0xFE2
 17152                           fsr1l	equ	0xFE1
 17153                           bsr	equ	0xFE0
 17154                           indf2	equ	0xFDF
 17155                           postinc2	equ	0xFDE
 17156                           postdec2	equ	0xFDD
 17157                           plusw2	equ	0xFDB
 17158                           fsr2h	equ	0xFDA
 17159                           fsr2l	equ	0xFD9
 17160                           status	equ	0xFD8
 17161                           
 17162 ;; *************** function i2_rtc_alrm_irq_hook *****************
 17163 ;; Defined at:
 17164 ;;		line 103 in file "src/soc/rtc.c"
 17165 ;; Parameters:    Size  Location     Type
 17166 ;;		None
 17167 ;; Auto vars:     Size  Location     Type
 17168 ;;		None
 17169 ;; Return value:  Size  Location     Type
 17170 ;;                  1    wreg      void 
 17171 ;; Registers used:
 17172 ;;		None
 17173 ;; Tracked objects:
 17174 ;;		On entry : 0/0
 17175 ;;		On exit  : 0/0
 17176 ;;		Unchanged: 0/0
 17177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17182 ;;Total ram usage:        0 bytes
 17183 ;; Hardware stack levels used:    1
 17184 ;; This function calls:
 17185 ;;		Nothing
 17186 ;; This function is called by:
 17187 ;;		_handler_interrupt_hight
 17188 ;; This function uses a non-reentrant model
 17189 ;;
 17190                           
 17191                           	psect	text99
 17192  003370                     __ptext99:
 17193                           	opt stack 0
 17194  003370                     i2_rtc_alrm_irq_hook:
 17195                           	opt stack 16
 17196                           
 17197                           ;incstack = 0
 17198  003370  0012               	return		;funcret
 17199  003372                     __end_ofi2_rtc_alrm_irq_hook:
 17200                           	opt stack 0
 17201                           tosu	equ	0xFFF
 17202                           tosh	equ	0xFFE
 17203                           tosl	equ	0xFFD
 17204                           pclatu	equ	0xFFB
 17205                           pclath	equ	0xFFA
 17206                           tblptru	equ	0xFF8
 17207                           tblptrh	equ	0xFF7
 17208                           tblptrl	equ	0xFF6
 17209                           tablat	equ	0xFF5
 17210                           prodh	equ	0xFF4
 17211                           prodl	equ	0xFF3
 17212                           intcon	equ	0xFF2
 17213                           intcon2	equ	0xFF1
 17214                           indf0	equ	0xFEF
 17215                           postinc0	equ	0xFEE
 17216                           fsr0h	equ	0xFEA
 17217                           fsr0l	equ	0xFE9
 17218                           wreg	equ	0xFE8
 17219                           postinc1	equ	0xFE6
 17220                           postdec1	equ	0xFE5
 17221                           plusw1	equ	0xFE3
 17222                           fsr1h	equ	0xFE2
 17223                           fsr1l	equ	0xFE1
 17224                           bsr	equ	0xFE0
 17225                           indf2	equ	0xFDF
 17226                           postinc2	equ	0xFDE
 17227                           postdec2	equ	0xFDD
 17228                           plusw2	equ	0xFDB
 17229                           fsr2h	equ	0xFDA
 17230                           fsr2l	equ	0xFD9
 17231                           status	equ	0xFD8
 17232                           tosu	equ	0xFFF
 17233                           tosh	equ	0xFFE
 17234                           tosl	equ	0xFFD
 17235                           pclatu	equ	0xFFB
 17236                           pclath	equ	0xFFA
 17237                           tblptru	equ	0xFF8
 17238                           tblptrh	equ	0xFF7
 17239                           tblptrl	equ	0xFF6
 17240                           tablat	equ	0xFF5
 17241                           prodh	equ	0xFF4
 17242                           prodl	equ	0xFF3
 17243                           intcon	equ	0xFF2
 17244                           intcon2	equ	0xFF1
 17245                           indf0	equ	0xFEF
 17246                           postinc0	equ	0xFEE
 17247                           fsr0h	equ	0xFEA
 17248                           fsr0l	equ	0xFE9
 17249                           wreg	equ	0xFE8
 17250                           postinc1	equ	0xFE6
 17251                           postdec1	equ	0xFE5
 17252                           plusw1	equ	0xFE3
 17253                           fsr1h	equ	0xFE2
 17254                           fsr1l	equ	0xFE1
 17255                           bsr	equ	0xFE0
 17256                           indf2	equ	0xFDF
 17257                           postinc2	equ	0xFDE
 17258                           postdec2	equ	0xFDD
 17259                           plusw2	equ	0xFDB
 17260                           fsr2h	equ	0xFDA
 17261                           fsr2l	equ	0xFD9
 17262                           status	equ	0xFD8
 17263                           
 17264                           	psect	text100
 17265  000000                     __ptext100:
 17266                           	opt stack 0
 17267                           tosu	equ	0xFFF
 17268                           tosh	equ	0xFFE
 17269                           tosl	equ	0xFFD
 17270                           pclatu	equ	0xFFB
 17271                           pclath	equ	0xFFA
 17272                           tblptru	equ	0xFF8
 17273                           tblptrh	equ	0xFF7
 17274                           tblptrl	equ	0xFF6
 17275                           tablat	equ	0xFF5
 17276                           prodh	equ	0xFF4
 17277                           prodl	equ	0xFF3
 17278                           intcon	equ	0xFF2
 17279                           intcon2	equ	0xFF1
 17280                           indf0	equ	0xFEF
 17281                           postinc0	equ	0xFEE
 17282                           fsr0h	equ	0xFEA
 17283                           fsr0l	equ	0xFE9
 17284                           wreg	equ	0xFE8
 17285                           postinc1	equ	0xFE6
 17286                           postdec1	equ	0xFE5
 17287                           plusw1	equ	0xFE3
 17288                           fsr1h	equ	0xFE2
 17289                           fsr1l	equ	0xFE1
 17290                           bsr	equ	0xFE0
 17291                           indf2	equ	0xFDF
 17292                           postinc2	equ	0xFDE
 17293                           postdec2	equ	0xFDD
 17294                           plusw2	equ	0xFDB
 17295                           fsr2h	equ	0xFDA
 17296                           fsr2l	equ	0xFD9
 17297                           status	equ	0xFD8
 17298                           
 17299                           	psect	rparam
 17300  0000                     tosu	equ	0xFFF
 17301                           tosh	equ	0xFFE
 17302                           tosl	equ	0xFFD
 17303                           pclatu	equ	0xFFB
 17304                           pclath	equ	0xFFA
 17305                           tblptru	equ	0xFF8
 17306                           tblptrh	equ	0xFF7
 17307                           tblptrl	equ	0xFF6
 17308                           tablat	equ	0xFF5
 17309                           prodh	equ	0xFF4
 17310                           prodl	equ	0xFF3
 17311                           intcon	equ	0xFF2
 17312                           intcon2	equ	0xFF1
 17313                           indf0	equ	0xFEF
 17314                           postinc0	equ	0xFEE
 17315                           fsr0h	equ	0xFEA
 17316                           fsr0l	equ	0xFE9
 17317                           wreg	equ	0xFE8
 17318                           postinc1	equ	0xFE6
 17319                           postdec1	equ	0xFE5
 17320                           plusw1	equ	0xFE3
 17321                           fsr1h	equ	0xFE2
 17322                           fsr1l	equ	0xFE1
 17323                           bsr	equ	0xFE0
 17324                           indf2	equ	0xFDF
 17325                           postinc2	equ	0xFDE
 17326                           postdec2	equ	0xFDD
 17327                           plusw2	equ	0xFDB
 17328                           fsr2h	equ	0xFDA
 17329                           fsr2l	equ	0xFD9
 17330                           status	equ	0xFD8
 17331                           
 17332                           	psect	temp
 17333  000040                     btemp:
 17334                           	opt stack 0
 17335  000040                     	ds	1
 17336  0000                     int$flags	set	btemp
 17337                           tosu	equ	0xFFF
 17338                           tosh	equ	0xFFE
 17339                           tosl	equ	0xFFD
 17340                           pclatu	equ	0xFFB
 17341                           pclath	equ	0xFFA
 17342                           tblptru	equ	0xFF8
 17343                           tblptrh	equ	0xFF7
 17344                           tblptrl	equ	0xFF6
 17345                           tablat	equ	0xFF5
 17346                           prodh	equ	0xFF4
 17347                           prodl	equ	0xFF3
 17348                           intcon	equ	0xFF2
 17349                           intcon2	equ	0xFF1
 17350                           indf0	equ	0xFEF
 17351                           postinc0	equ	0xFEE
 17352                           fsr0h	equ	0xFEA
 17353                           fsr0l	equ	0xFE9
 17354                           wreg	equ	0xFE8
 17355                           postinc1	equ	0xFE6
 17356                           postdec1	equ	0xFE5
 17357                           plusw1	equ	0xFE3
 17358                           fsr1h	equ	0xFE2
 17359                           fsr1l	equ	0xFE1
 17360                           bsr	equ	0xFE0
 17361                           indf2	equ	0xFDF
 17362                           postinc2	equ	0xFDE
 17363                           postdec2	equ	0xFDD
 17364                           plusw2	equ	0xFDB
 17365                           fsr2h	equ	0xFDA
 17366                           fsr2l	equ	0xFD9
 17367                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    1617
    Data        17
    BSS         1098
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      63
    BANK0           160     14     160
    BANK1           256     29     130
    BANK2           256      0     162
    BANK3           256      0     162
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(COMRAM[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 6
		 -> ui_disp_start_cs600@buf(BANK1[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115DiffPrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115DiffPrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115DiffPrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115DiffPrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115PrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115PrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115PrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115PrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S776$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S776$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S776$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S776$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S776$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(COMRAM[10]), ui_disp_start_cs600@buf(BANK1[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    pAds1115PrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK1[16]), NULL(NULL[0]), 

    sample_diff_pr_fliter@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK0[8]), 

    __x_sample_fifo@buf	PTR int  size(2) Largest target is 8
		 -> sampBufPr(BANK1[8]), sampBufPt100ExB(BANK0[8]), sampBufPt100ExA(BANK0[8]), 

    __x_sample_fliter@buf	PTR int  size(2) Largest target is 16
		 -> sampBufDiffPr_D23(BANK1[16]), sampBufDiffPr_D01(BANK1[16]), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK1[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_pose@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    key_adj_value_fixed_point@value	PTR unsigned int  size(2) Largest target is 2
		 -> passWord(COMRAM[2]), 

    key_shift_loc_fixed_point@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK1[1]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), NULL(NULL[0]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    fpSysData	PTR const struct . size(3) Largest target is 65527
		 -> ROM(CODE[65527]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S58$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S58$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S58$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S58$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S58$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _ui_disp_start_cs600->_lcd_disp_logo
    _lcd_disp_logo->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_config->_lcd_disp_all
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _key_adj_value_fixed_point->___lwmod
    ___wmul->___exp_10
    ___lwmod->___lwdiv
    ___lwdiv->___exp_10
    ___int32_2_mflot32->___lldiv
    _key_process_down->_key_shift_loc_fixed_point
    _event_process_rtc->_sample_in_soc_adc_ch
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _m_int16_2_str_4->___awdiv
    ___x_sample_fifo->___aldiv
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _in_adc_start_and_read->_delay_us
    ___x_sample_fliter->___aldiv
    _delay_ms->_delay_us
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_received_byte
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _lcd_disp_logo->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _event_process->_key_process
    _key_process_up->_key_adj_value_fixed_point
    _key_adj_value_fixed_point->___lwmod
    _key_process_set_down_long->___enter_menu_set_base_zero
    ___enter_menu_set_base_zero->___int32_2_mflot32
    _event_process_time_out->_sample_diff_pr_chip_fast
    _event_process_ticker->_sample_diff_pr_chip_fast
    _sample_diff_pr_chip_fast->_sample_diff_pr_fliter
    _event_process_rtc->_sample_diff_pr_chip_slow
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _sample_pr_chip_comm->___x_sample_fifo
    _sample_diff_pr_chip_slow->_sample_diff_pr_fliter
    _sample_diff_pr_fliter->___x_sample_fliter

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1707915
              _ads1115_init_all_chip
                      _event_process
                        _in_adc_init
                     _lcd_disp_level
                           _lcd_init
                            _rtc_set
                           _soc_init
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  522158
                                              9 BANK1      8     8      0
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  230706
                                              6 BANK1      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  230706
                                              6 BANK1      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   28512
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_level                                       2     2      0   30629
                                              5 BANK1      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_level_bar                                   3     2      1   30397
                                             13 BANK0      1     0      1
                                              3 BANK1      2     2      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                        _lcd_bl_init
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _event_process                                        0     0      0 1154018
                  _event_process_rtc
               _event_process_ticker
             _event_process_time_out
                        _key_polling
                        _key_process
 ---------------------------------------------------------------------------------
 (2) _key_process                                          3     3      0  559866
                                             26 BANK1      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (3) _key_waite_release                                    5     1      4    1665
                                              8 BANK0      5     1      4
                        _key_polling
 ---------------------------------------------------------------------------------
 (4) _key_polling                                          2     2      0    1358
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _key_process_up                                       0     0      0    3075
          _key_adj_value_fixed_point
 ---------------------------------------------------------------------------------
 (4) _key_adj_value_fixed_point                            7     4      3    3075
                                              1 BANK1      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1672
                                              3 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                             10 BANK0      4     0      4
                                              0 BANK1      1     1      0
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     421
                                              3 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___exp_10                                             3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _key_process_set_long                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _key_process_set_down_long                            2     2      0    1077
                                             18 BANK1      2     2      0
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
              ___enter_menu_set_pose
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_pose                                3     3      0      34
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_density                             4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_base_zero                           2     2      0    1009
                                             16 BANK1      2     2      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (5) ___int32_2_mflot32                                   16    12      4     975
                                              0 BANK1     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _key_process_set                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _key_process_down                                     0     0      0     527
          _key_shift_loc_fixed_point
 ---------------------------------------------------------------------------------
 (4) _key_shift_loc_fixed_point                            5     1      4     527
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _event_process_time_out                               0     0      0    9128
           _sample_diff_pr_chip_fast
 ---------------------------------------------------------------------------------
 (2) _event_process_ticker                                 0     0      0    9128
           _sample_diff_pr_chip_fast
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_fast                             3     3      0    9128
                                             23 BANK1      3     3      0
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (2) _event_process_rtc                                    0     0      0  574538
           _sample_diff_pr_chip_slow
               _sample_in_soc_adc_ch
                _sample_pr_chip_comm
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu                                         0     0      0  553420
               _ui_disp_menu_psw_adj
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_psw_adj                                 0     0      0  553420
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (5) _ui_disp_adj_xfixed_pt                               17    12      5  553420
                                              9 BANK1     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (6) _ui_disp_clear_num_dp                                 0     0      0  317629
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (7) _lcd_show_string                                      3     1      2  230976
                                              6 BANK1      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  230483
                                              3 BANK1      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   28698
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (7) _lcd_show_dp                                          2     1      1   86653
                                              3 BANK1      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_2                                    1     1      0   28512
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_1                                    1     1      0   28512
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_0                                    1     1      0   28512
                                             13 BANK0      1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   28481
                                              8 BANK0      5     3      2
                                              0 BANK1      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) _m_mem_cpy                                            4     0      4     490
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _m_int16_2_str_4                                      4     0      4    3062
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1153
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___x_arrange_str                                      4     1      3     614
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _sample_pr_chip_comm                                  3     3      0    9831
                                             16 BANK1      3     3      0
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) ___x_sample_fifo                                     16    11      5    3185
                                              0 BANK1     16    11      5
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) _sample_in_soc_adc_ch                                11    11      0     971
                                             10 BANK0      4     4      0
                                              0 BANK1      7     7      0
                        _in_adc_init
              _in_adc_start_and_read
 ---------------------------------------------------------------------------------
 (4) _in_adc_start_and_read                                6     4      2     412
                                              4 BANK0      6     4      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_slow                             3     3      0   10316
                                             23 BANK1      3     3      0
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
                           _delay_ms
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (4) _sample_diff_pr_fliter                                2     0      2    3670
                                             21 BANK1      2     0      2
                  ___x_sample_fliter
 ---------------------------------------------------------------------------------
 (5) ___x_sample_fliter                                   21    17      4    3397
                                              0 BANK1     21    17      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8    1885
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (5) _delay_ms                                             2     0      2    1182
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (6) _delay_us                                             4     2      2     338
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _ads1115_start_conversion                             2     0      2    1979
                                              8 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_write_reg                                    5     0      5    1287
                                              3 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_mux                                      4     1      3    1682
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_read_conversion                              5     3      2    1698
                                             10 BANK0      3     1      2
                                              0 BANK1      2     2      0
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_read_reg                                     6     3      3     969
                                              4 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (6) _iic_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iic_send_byte                                        2     2      0     167
                                              1 BANK0      2     2      0
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (7) _iic_waite_ack                                        1     1      0      65
                                              0 BANK0      1     1      0
                           _iic_stop
 ---------------------------------------------------------------------------------
 (6) _iic_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iic_received_byte_if_ack                             2     2      0     207
                                              2 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (7) _iic_send_ack                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _iic_received_byte                                    2     2      0     108
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (13) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (15) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _event_process
     _event_process_rtc
       _sample_diff_pr_chip_slow
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _delay_ms
           _delay_us
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
       _sample_in_soc_adc_ch
         _in_adc_init
         _in_adc_start_and_read
           _delay_us
       _sample_pr_chip_comm
         ___x_sample_fifo
           ___aldiv
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _delay_ms
           _delay_us
       _ui_disp_menu
         _ui_disp_menu_psw_adj
           _ui_disp_adj_xfixed_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
             _ui_disp_clear_num_dp
               _lcd_show_dp
                 _lcd_disp_dp_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_2
                   _lcd_set_com_seg
                     ___awdiv
               _lcd_show_string
                 _lcd_show_chr
                   _lcd_disp_chr_loc_0
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_1
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_2
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_3
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_4
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_5
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_6
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_7
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_get_code
     _event_process_ticker
       _sample_diff_pr_chip_fast
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
     _event_process_time_out
       _sample_diff_pr_chip_fast
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
     _key_polling
       _delay_ms
         _delay_us
     _key_process
       _key_process_down
         _key_shift_loc_fixed_point
       _key_process_set
       _key_process_set_down_long
         ___enter_menu_set_base_zero
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_density
         ___enter_menu_set_pose
       _key_process_set_long
       _key_process_up
         _key_adj_value_fixed_point
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       _key_waite_release
         _key_polling
           _delay_ms
             _delay_us
       _ui_disp_menu
         _ui_disp_menu_psw_adj
           _ui_disp_adj_xfixed_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
             _ui_disp_clear_num_dp
               _lcd_show_dp
                 _lcd_disp_dp_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_2
                   _lcd_set_com_seg
                     ___awdiv
               _lcd_show_string
                 _lcd_show_chr
                   _lcd_disp_chr_loc_0
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_1
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_2
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_3
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_4
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_5
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_6
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_7
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_get_code
   _in_adc_init
   _lcd_disp_level
     _lcd_disp_level_bar
       _lcd_set_com_seg
         ___awdiv
   _lcd_init
     _lcd_bl_init
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A2      11       63.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A2       9       63.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D      82       7       50.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4A5      12        0.0%
DATA                 0      0     4A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 15 17:16:48 2017

              lcd_show_string_l0@str 0164                       ?_iic_waite_ack 0020  
              lcd_show_string_l1@str 0164                         ?_lcd_show_dp 0161  
                ?_lcd_show_string_l0 0164                  ?_lcd_show_string_l1 0164  
         __end_of_rtcc_reg_wr_enable 3334                         ?_in_adc_init 0020  
                      ?_m_int8_2_hex 00E9               ??_ui_disp_menu_psw_adj 003F  
                       ___awdiv@sign 00EE                                   bsr 000FE0  
                      ?_lcd_show_chr 0161                  ___wmul@multiplicand 00EE  
        __end_of_rtcc_reg_wr_disable 3340                    _pAds1115DiffPrObj 0009  
                       __CFG_CP0$OFF 000000                          __CFG_OSC$HS 000000  
                                l457 065E                                  l458 06B2  
                                l475 1420                                  l950 26B0  
                                l935 2816                                  l958 26BC  
                                l983 27C8                                  _PR2 000FCB  
                   ??_key_process_up 003F                                  _dwm 001C  
                       ___awmod@sign 00EE                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
          __size_of_ads1115_read_reg 01BC              __end_of___x_arrange_str 276C  
               ??_lcd_disp_level_bar 003F           ?_key_shift_loc_fixed_point 00E9  
               ??_lcd_show_string_l0 003F                 ??_lcd_show_string_l1 003F  
                 m_int16_2_str_4@buf 00F1                                 l1061 25F6  
                               l1062 25F4                                 l2103 2544  
                               l2113 28FA                                 l2050 1ADA  
                               l1546 2F1A                                 l1698 312C  
                               l9000 1C44                                 l9012 05D8  
                               l8212 198E                                 l8300 2A1E  
                               l9100 2536                                 l9030 0708  
                               l9110 28C2                                 l8224 19C2  
                               l8240 1A12                                 l8400 2644  
                               l9112 28C8                                 l9050 3236  
                               l9018 060A                                 l9042 07FC  
                               l8226 19CE                                 l8218 19A4  
                               l8402 264E                                 l8410 266C  
                               l9060 0A92                                 l8244 1A26  
                               l8236 1A04                                 l8228 19D4  
                               l8252 1736                                 l8404 2658  
                               l8420 258C                                 l9116 28EC  
                               l9108 28B6                                 l8430 2BA2  
                               l9062 0ABC                                 l9046 3220  
                               l9206 0C02                                 l8406 2662  
                               l8414 2556                                 l9302 2DEA  
                               l9310 3056                                 l9142 2ACC  
                               l8432 2BA4                                 l9072 0BDE  
                               l9064 0AE2                                 l8264 17B0  
                               l8256 1740                                 l9320 18BE  
                               l9066 0B08                                 l9058 0A5C  
                               l9218 0CC4                                 l8370 2FD4  
                               l9306 2E08                                 l9090 2500  
                               l9314 306C                                 l9138 2AC2  
                               l9146 2AD6                                 l8540 281A  
                               l9068 0B46                                 l8364 300A  
                               l8284 29D0                                 l8380 236E  
                               l9404 13CE                                 l9340 18F4  
                               l9332 18DC                                 l9324 18C8  
                               l9092 2506                                 l8550 2838  
                               l8542 2826                                 l9238 2C16  
                               l8358 3040                                 l8382 2378  
                               l8374 2350                                 l9342 18FA  
                               l9334 18E2                                 l8640 1D1A  
                               l8712 0D6A                                 l8704 2C88  
                               l8296 29FE                                 l8288 29DA  
                               l8384 2382                                 l8376 235A  
                               l8392 23A0                                 l9416 140A  
                               l9408 13E4                                 l9360 317C  
                               l9344 1900                                 l9336 18E8  
                               l9328 18D2                                 l9352 1912  
                               l9088 24F4                                 l9176 161E  
                               l8626 27CE                                 l8562 277C  
                               l9610 0950                                 l9602 0902  
                               l8650 1D4A                                 l8386 238C  
                               l8378 2364                                 l9346 1906  
                               l9338 18EE                                 l8900 125A  
                               l8652 1D50                                 l8660 1D82  
                               l8644 1D2A                                 l8396 2630  
                               l8388 2396                                 l9372 324C  
                               l9364 318E                                 l9348 190C  
                               l9292 2D06                                 l9380 3102  
                               l9700 02F4                                 l8566 2786  
                               l8670 270A                                 l8398 263A  
                               l8910 1A5E                                 l9294 2D16  
                               l9286 2CF4                                 l9710 034E  
                               l9702 0306                                 l8840 26FC  
                               l8664 1D96                                 l8656 1D74  
                               l8648 1D3E                                 l9368 3246  
                               l8912 1A6E                                 l9376 30F8  
                               l9720 03A8                                 l9712 0360  
                               l9704 0318                                 l9482 0F90  
                               l9634 09FE                                 l9626 09CE  
                               l9618 0980                                 l8674 2740  
                               l8922 1AC8                                 l8914 1A74  
                               l9730 0402                                 l9722 03BA  
                               l9714 0372                                 l9706 032A  
                               l9650 0132                                 l9642 00EE  
                               l8780 26A6                                 l9468 0F30  
                               l8676 2744                                 l8940 2990  
                               l8932 2978                                 l9740 045C  
                               l9732 0414                                 l9724 03CC  
                               l9716 0384                                 l9708 033C  
                               l9660 018C                                 l9652 0144  
                               l9644 00FC                                 l9574 084A  
                               l8950 29A8                                 l9742 046E  
                               l9734 0426                                 l9726 03DE  
                               l9718 0396                                 l9670 01E6  
                               l9662 019E                                 l9654 0156  
                               l9646 010E                                 l9830 2A56  
                               l9822 2A36                                 l9814 2CD2  
                               l8880 11C2                                 l8960 12CE  
                               l8944 299C                                 l8936 2984  
                               l8928 296C                                 l9760 2418  
                               l9736 0438                                 l9728 03F0  
                               l9680 0240                                 l9672 01F8  
                               l9664 01B0                                 l9656 0168  
                               l9648 0120                                 l9832 2A62  
                               l9808 2CB0                                 l8786 26BA  
                               l8858 2F30                                 l8882 11D2  
                               l8874 1194                                 l9594 08D2  
                               l9586 0884                                 l9578 0854  
                               l8698 2C66                                 l8970 132C  
                               l9738 044A                                 l9690 029A  
                               l9682 0252                                 l9674 020A  
                               l9666 01C2                                 l9658 017A  
                               l9746 0480                                 l9826 2A44  
                               l8892 122C                                 l8884 11D8  
                               l8868 1176                                 l9772 2446  
                               l9764 2428                                 l9692 02AC  
                               l9684 0264                                 l9676 021C  
                               l9668 01D4                                 l9836 2A6C  
                               l9780 2C28                                 l9844 312E  
                               l8974 1358                                 l9694 02BE  
                               l9686 0276                                 l9678 022E  
                               STR_1 FFED                                 l8896 123E  
                               l9864 31F0                                 l8968 1312  
                               l9768 2436                                 l9776 2452  
                               l9696 02D0                                 l9688 0288  
                               STR_2 FFE4                                 STR_3 FFF2  
                               l8986 1BC2                                 l9698 02E2  
                               l9794 2F68                                 l9786 2C48  
                               l8996 1C16                                 _LATB 000F8A  
                               _LATC 000F8B                                 u7008 155E  
                               u7018 0A48                                 u7028 0A6E  
                               u6404 17C6                                 u7220 1614  
                               u6405 17C0                                 u7038 0AA4  
                               u7048 0ACE                                 u7320 138C  
                               u7058 0AF4                                 u7068 0B1A  
                               u7078 0B58                                 u7510 0922  
                               u7079 0B6E                                 u7088 0B96  
                               u6480 2576                                 u7089 0BAC  
                               u7098 0BCA                                 u6394 1790  
                               u6490 25AC                                 u7515 0916  
                               u6395 178A                                 u7540 09A0  
                               u6487 256C                                 u7480 08A4  
                               u7545 0994                                 u6497 25A2  
                               u7570 0A1E                                 u6850 1346  
                               u7485 0898                                 u7575 0A12  
                               u6958 1484                                 u6959 1498  
                               u6968 14AA                                 u6969 14CE  
                               u6978 14E0                                 u6979 14F8  
                               u6988 150A                                 u6989 1522  
                               u6998 1534                                 u6999 154C  
                               u7991 22AE                       ??_lcd_disp_all 003F  
                  ??_key_process_set 003F                                 _pLCD 0060  
                               _hKel F993         __end_of_LCDDigitalIndexTable FEE4  
                               _hKcy FB27            __size_of_lcd_disp_refresh 0062  
                               _main 2E60                                 _menu 001B  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0040              _handler_interrupt_hight 0008  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00DC                       ??_iic_send_ack 003F  
                      _globleBuffer0 0400                        _globleBuffer1 0500  
                      __CFG_IESO$OFF 000000          key_shift_loc_fixed_point@t8 00ED  
                  _key_waite_release 2CEA     __end_of_iic_received_byte_if_ack 32AC  
                       ___param_bank 000000                     ?_lcd_set_com_seg 00F1  
                 ?_key_waite_release 00F1                                EECON2 000FA7  
                     ??_m_int8_2_hex 003F           ??_ads1115_start_conversion 003F  
                     ??_lcd_show_chr 003F                        lcd_disp_all@i 00EA  
                      lcd_disp_all@x 00E9                      ___x_sample_fifo 0BE8  
                              l10100 2D56                                l10080 2332  
                              l10066 22E8                                l10094 2D48  
                              RTCCFG 000F5F                                l10088 2D3A  
                              l10434 2E94                      __end_of___aldiv 126C  
                              ?_main 0020                    ?_key_process_down 0020  
                    __end_of___awdiv 1A30                      __end_of___awmod 1DA0  
                    __end_of___lldiv 1AEC                  ??_key_waite_release 003F  
                    ___awdiv@divisor 00EB                                _T2CON 000FCA  
                              _FSR0H 000FEA                                _FSR0L 000FE9  
                    __end_of___lwdiv 254E                      __end_of___lwmod 2904  
                    ___awdiv@counter 00ED                                _PORTB 000F81  
                              _PORTC 000F82            _key_adj_value_fixed_point 1572  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISG 000F98                   ??_key_process_down 003F  
                    ??_lcd_disp_logo 003F                         ?_key_polling 0020  
                lcd_disp_dp_loc_0@dp 00F6                  lcd_disp_dp_loc_1@dp 00F6  
                lcd_disp_dp_loc_2@dp 00F6                         ?_key_process 0020  
                     __CFG_FCMEN$OFF 000000                                _glRtc 0083  
        sample_diff_pr_chip_fast@t16 0176                                _st_Bj 0012  
        sample_diff_pr_chip_fast@ret 0175                       __CFG_T1DIG$OFF 000000  
       ??___enter_menu_set_base_zero 003F                                pclath 000FFA  
                              tablat 000FF5         __end_of_sample_in_soc_adc_ch 0A2C  
                    __end_of_rtc_set 1BA4                                plusw1 000FE3  
                              plusw2 000FDB                 _event_process_ticker 334C  
                              status 000FD8                      ??_iic_send_byte 003F  
                 _diff_prCalibTabDef 0200            __end_of_key_waite_release 2D2C  
                   ?_lcd_show_string 0164                      ??_iic_waite_ack 003F  
                   __end_of_HexTable FF1D                      __initialization 17F0  
                       __end_of_hKel FB27                         __end_of_hKcy FCBB  
                       __end_of_main 2E9A                        _prCalibTabDef 0300  
                   _glNoEventTimeOut 003F                 iic_received_byte@ret 00E9  
        sample_diff_pr_chip_slow@t16 0176          sample_diff_pr_chip_slow@ret 0175  
       __size_of_sample_pr_chip_comm 014E              sample_in_soc_adc_ch@t16 015E  
                      _userTicker_ms 000B              sample_in_soc_adc_ch@ret 0160  
                             ??_main 003F                        __activetblptr 000002  
                         _at24c02Ch0 0140                           _at24c02Ch1 014B  
              ___enter_menu_set_pose 30BC         __end_of_key_process_set_long 336E  
             __size_of_event_process 0040                     ?___x_arrange_str 00E9  
                             _ADCON1 000FC1     __size_of_ads1115_read_conversion 0046  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                   __end_of___exp_10 29C6                     ___awdiv@dividend 00E9  
                             _LCDCON 000FA8                               _LCDSE0 000FA9  
                             _LCDSE1 000FB6                               _LCDSE2 000FB7  
                             _LCDSE3 000FB8                               _LCDSE4 000FB9  
                             _LCDSE5 000FBA                               _LCDREG 000FD2  
          ??_handler_interrupt_hight 0020                               i1l1594 0094  
                             i1l1693 32D8                       __CFG_WDTEN$OFF 000000  
                             i2l1583 169E                               i2l1584 16A6  
                             i2l1585 16AE                               i2l1586 16B6  
                             i1l8172 0080                               i2l1693 32F0  
                             i2l1589 16EC                               _INTCON 000FF2  
                             i2l8146 16D8                               _TABLAT 000FF5  
              ?_event_process_ticker 0020          ??_key_process_set_down_long 0170  
                      m_int8_2_hex@b 00EB         __size_of_sys_ticker_irq_hook 0018  
                   ??_lcd_disp_level 003F                       _x_DiffPressure 00A6  
          ___enter_menu_set_pose@fps 00EA                     __end_of_delay_ms 3244  
                   __end_of_delay_us 2F46       __size_of_sample_diff_pr_fliter 007E  
               __size_of_lcd_bl_init 0004        __end_of_sample_diff_pr_fliter 24D6  
                     __CFG_XINST$OFF 000000              __end_of___x_sample_fifo 0D4A  
                   __end_of_lcd_init 3328                     __end_of_iic_stop 2E60  
                             _adc_Pr 00C0                            ??___aldiv 003F  
                             ___wmul 2F7C                            ??___awdiv 003F  
                          ??___awmod 003F                 __end_of_flashTestbuf FFE4  
                          ??___lldiv 003F                            ??___lwdiv 003F  
                          ??___lwmod 003F                  lcd_disp_level@level 0163  
                             clear_0 184A                               clear_1 185E  
                             clear_2 1870                               clear_3 187C  
                             clear_4 1888                               clear_5 1894  
                             clear_6 18A0                     ___awdiv@quotient 00EF  
                    ___awmod@divisor 00EB                 __size_of_lcd_show_dp 006C  
               __end_of_lcd_disp_all 311E                      ___awmod@counter 00ED  
               __size_of_in_adc_init 0024                i2_sys_ticker_irq_hook 32E2  
               _LCDDigitalIndexTable FEBB              ??_in_adc_start_and_read 00EF  
                       __pdataCOMRAM 003F             __size_of_ads1115_set_mux 0028  
                   key_polling@ktemp 00EF                     __end_of_soc_init 330A  
               __end_of_iic_send_ack 2BDA                     _ads1115_read_reg 0A2C  
                       __mediumconst F992                     __end_of_rtc_init 2DAA  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8    __size_of_iic_received_byte_if_ack 0020  
               lcd_disp_get_code@chr 00E9                 lcd_disp_get_code@ret 00EA  
          ?_iic_received_byte_if_ack 0020                            ??_rtc_set 003F  
           ui_disp_start_cs600@F7622 00F7             ??_event_process_time_out 003F  
               __end_of_m_int8_2_hex 28A2                 __end_of_lcd_show_chr 23D6  
                       _pcf8574Value 0013                     _lcd_disp_refresh 2904  
                         __accesstop 0060              __end_of__initialization 18A6  
                  _sampBufDiffPr_D01 0130                    _sampBufDiffPr_D23 0120  
                         ___exp_10@n 00EB             __size_of_m_int16_2_str_4 015E  
         __size_of_key_waite_release 0042         __size_ofi2_rtc_alrm_irq_hook 0002  
                      ___rparam_used 000001                _handler_interrupt_low 0018  
                  _event_process_rtc 31CE                           _adc_iPrEx0 00BE  
                         _adc_iPrEx1 00BC                        _p_prEepromObj 000D  
                      _event_process 2D2C                       iic_send_byte@i 00EB  
                     iic_send_byte@x 00EA                    _sampBufExPr0InSoc 00B0  
                     __pcstackCOMRAM 0020                    _sampBufExPr1InSoc 00AE  
                         _adc_diffPr 00CC                         __pidataBANK0 3358  
                       __pidataBANK1 3361                   ?_event_process_rtc 0020  
     __size_of_ui_disp_adj_xfixed_pt 00B6        __end_of_ui_disp_adj_xfixed_pt 1C5A  
    __end_of_handler_interrupt_hight 1728            _key_process_set_down_long 18B4  
              ___x_sample_fliter@t32 016E             _sample_diff_pr_chip_fast 1372  
              ___x_sample_fliter@buf 015E             ___enter_menu_set_density 3088  
              ___x_sample_fliter@len 0160                 _sample_in_soc_adc_ch 0810  
              ___x_sample_fliter@max 016A                ___x_sample_fliter@min 016C  
              sample_in_soc_adc_ch@i 0164             _sample_diff_pr_chip_slow 0EA8  
                ??_event_process_rtc 003F         __end_of_ui_disp_clear_num_dp 2B36  
             ?___enter_menu_set_pose 0020                      _key_process_set 317A  
              _ads1115_init_all_chip 2ED4             ___x_sample_fliter@maxLoc 0168  
            in_adc_start_and_read@ch 00F0             ___x_sample_fliter@minLoc 0169  
                 _rtcc_reg_wr_enable 3328                   __size_of_iic_start 003E  
               __size_of_key_polling 005C                 __size_of_key_process 0082  
        ??_key_shift_loc_fixed_point 003F                    lcd_disp_logo@show 00F6  
                 __size_of_m_mem_cpy 0044               ??_event_process_ticker 003F  
                ___x_sample_fifo@buf 015E                    lcd_show_string@t8 0166  
                ___x_sample_fifo@len 0162                  ___x_sample_fifo@ret 0169  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                         __pbssBANK4 0400                           __pbssBANK5 0500  
 __size_of_key_adj_value_fixed_point 00EA                           _defalutRtc 017B  
                ?_rtcc_reg_wr_enable 0020             __size_of_sys_ticker_init 0010  
                  _pdiff_prEepromObj 000F                           _diffSampCh 0016  
                ___x_sample_fliter@i 0172            __end_of_event_process_rtc 31F6  
                    lcd_disp_level@i 0164                    ___x_sample_fifo@i 016D  
                  ___x_sample_fifo@x 0160                       ?_event_process 0020  
        __size_of_lcd_disp_chr_loc_0 00A0          __size_of_lcd_disp_chr_loc_1 00A0  
        __size_of_lcd_disp_chr_loc_2 00A0          __size_of_lcd_disp_chr_loc_3 00A0  
        __size_of_lcd_disp_chr_loc_4 00A0          __size_of_lcd_disp_chr_loc_5 00A0  
        __size_of_lcd_disp_chr_loc_6 00A0          __size_of_lcd_disp_chr_loc_7 00A0  
                  ___x_sample_fliter 05B2                     ?___x_sample_fifo 015E  
               _key_process_set_long 336C       ___enter_menu_set_base_zero@fps 016E  
                      _x_Pemperature 0096                   ?___x_sample_fliter 015E  
                            ?___wmul 00EC         __size_of_ui_disp_start_cs600 009E  
                          ?___exp_10 00E9               ?i2_sys_ticker_irq_hook 0020  
               ??_rtcc_reg_wr_enable 003F                ?_sample_in_soc_adc_ch 0020  
                            _ALRMRPT 000F5A        __size_of_ui_disp_menu_psw_adj 001E  
                ??___x_sample_fliter 0162                        ?_ads1115_init 00E9  
                         _lcd_config 314C                            ?_delay_ms 00ED  
                          ?_delay_us 00E9                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
            _ads1115_read_conversion 2BDA          __size_of_lcd_disp_level_bar 04D2  
       __size_of_rtcc_reg_wr_disable 000C                              _RTCVALH 000F5D  
                            _RTCVALL 000F5C                 ___int32_2_mflot32@mf 016A  
                     m_int8_2_hex@t8 00EC                            ?_lcd_init 0020  
        __size_of_lcd_show_string_l0 0044          __size_of_lcd_show_string_l1 0042  
                          ?_iic_stop 0020                    ??_ads1115_set_mux 00EC  
    __size_of_event_process_time_out 000C                    __end_of_auchCRCHi FEBB  
                  __end_of_auchCRCLo FDBB                  _sample_pr_chip_comm 1004  
             sample_pr_chip_comm@t16 016F            __size_of_key_process_down 003C  
             sample_pr_chip_comm@ret 016E                        ?_ui_disp_menu 0020  
  __end_of_key_adj_value_fixed_point 165C            __end_of___x_sample_fliter 0810  
             ?_handler_interrupt_low 0020                              __Hparam 0000  
                            __Lparam 0000                ?_key_process_set_long 0020  
                     lcd_show_dp@loc 0162                            ?_soc_init 0020  
              __size_of_lcd_disp_all 0030                            ?_rtc_init 0020  
          _key_shift_loc_fixed_point 2E9A                              ___aldiv 1152  
                  __end_of_iic_start 2DE8                    ??_m_int16_2_str_4 003F  
                            ___awdiv 1972                              ___awmod 1CFE  
                            ___lldiv 1A30                      __size_of___wmul 0036  
            __end_of_key_process_set 31A4                              ___lwdiv 24D6  
                            ___lwmod 28A2                    __end_of_m_mem_cpy 2CA8  
                          _LCDDATA10 000F70                            _LCDDATA11 000F71  
                          _LCDDATA12 000F72                            _LCDDATA20 000F7A  
                          _LCDDATA13 000F73                            _LCDDATA21 000F7B  
                          _LCDDATA14 000F74                            _LCDDATA22 000F7C  
                          _LCDDATA15 000F75                            _LCDDATA23 000F7D  
                          _LCDDATA16 000F76                            _LCDDATA17 000F77  
                          _LCDDATA18 000F78                            _LCDDATA19 000F79  
                    __CFG_STVREN$OFF 000000                           ??___exp_10 003F  
               ?_sample_pr_chip_comm 0020                              _pcf8574 0078  
                            __pcinit 17F0                __size_of_iic_send_ack 0050  
                            __ramtop 1000                              __ptext0 2E60  
                            __ptext1 22A0                              __ptext2 311E  
                            __ptext3 283E                              __ptext4 2CA8  
                            __ptext5 2C20                              __ptext6 2F46  
                            __ptext7 2A24                              __ptext8 00E0  
                            __ptext9 32FA               ?_ads1115_init_all_chip 0020  
                     ??_ads1115_init 003F                  _sys_ticker_irq_hook 32CA  
                  ___int32_2_mflot32 126C             __size_of_lcd_set_com_seg 00C8  
                          _T1CONbits 000FCD                              _x_Hight 00A2  
                lcd_set_com_seg@bits 0160                  lcd_set_com_seg@show 00F2  
                   ___awmod@dividend 00E9                           _x_Pressure 009A  
                 ?___int32_2_mflot32 015E                     ___aldiv@dividend 00E9  
              __size_of_m_int8_2_hex 0064                            _LCDPSbits 000FAA  
                         ??_delay_ms 003F                           ??_delay_us 003F  
              __size_of_lcd_show_chr 0098                __end_of_lcd_disp_logo 2F7C  
                            _rtc_set 1AEC        key_adj_value_fixed_point@dloc 0162  
   ads1115_start_conversion@pAds1115 00F1    __size_of_ads1115_start_conversion 002A  
                         ??_lcd_init 003F            ?_ads1115_start_conversion 00F1  
                     __pintcode_body 165C                           ??_iic_stop 003F  
                       _flashTestbuf FFA3                 end_of_initialization 18A6  
                ??___int32_2_mflot32 0162              __size_of_key_process_up 0034  
                     ??_ui_disp_menu 003F                         _lcd_disp_all 30EE  
                      __Lmediumconst F992                              int_func 165C  
               ?_sys_ticker_irq_hook 0020                      ??_event_process 003F  
         __size_of_event_process_rtc 0028                 _ui_disp_clear_num_dp 2ADC  
                    ___lldiv@divisor 00ED                __end_of_iic_send_byte 2702  
                    ___lldiv@counter 00F5             __end_of_ads1115_read_reg 0BE8  
                       _iic_send_ack 2B8A                           _ticker_dly 311E  
                         ??_soc_init 003F                    ??_sys_ticker_init 003F  
                   ___aldiv@quotient 00F3       key_adj_value_fixed_point@value 015F  
                         ??_rtc_init 003F                              postdec1 000FE5  
                            postdec2 000FDD                __end_of_iic_waite_ack 283E  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                    _lcd_disp_dp_loc_0 301E  
                  _lcd_disp_dp_loc_1 2FE8                    _lcd_disp_dp_loc_2 2FB2  
             _event_process_time_out 3340                ??_sample_pr_chip_comm 003F  
             ??_sample_in_soc_adc_ch 00F3                    _lcd_disp_get_code 29C6  
           __size_of_lcd_show_string 006E                         _m_int8_2_hex 283E  
          __end_of___int32_2_mflot32 1372                         _lcd_show_chr 233E  
                   _defultSystemData FF1D             __end_of_lcd_disp_refresh 2966  
                 ?_lcd_disp_dp_loc_0 0020                   ?_lcd_disp_dp_loc_1 0020  
                 ?_lcd_disp_dp_loc_2 0020                   ?_lcd_disp_get_code 0020  
                i2_rtc_alrm_irq_hook 3370            ??_ads1115_read_conversion 00F5  
                        ?_lcd_config 0020       __size_of_in_adc_start_and_read 006E  
      __end_of_in_adc_start_and_read 262A                  ??_lcd_disp_dp_loc_0 003F  
                ??_lcd_disp_dp_loc_1 003F                  ??_lcd_disp_dp_loc_2 003F  
               lcd_show_string_l0@t8 0166                 lcd_show_string_l1@t8 0166  
                ??_lcd_disp_get_code 003F          iic_received_byte_if_ack@ack 00EB  
          ads1115_write_reg@pAds1115 00EC          iic_received_byte_if_ack@ret 00EC  
 __size_of_key_process_set_down_long 00BE                      iic_send_ack@ack 00E9  
              ??_sys_ticker_irq_hook 002E                        ??_lcd_bl_init 003F  
           __size_of___x_arrange_str 006A           __size_of___x_sample_fliter 025E  
               ?i2_rtc_alrm_irq_hook 0020                ?_ui_disp_clear_num_dp 0020  
                  _ads1115_write_reg 1472               ??_key_process_set_long 003F  
         ??_sample_diff_pr_chip_fast 003F                   ?_ads1115_write_reg 00EC  
         ??___enter_menu_set_density 00E9           ??_sample_diff_pr_chip_slow 003F  
          __end_of_lcd_disp_dp_loc_0 3054            __end_of_lcd_disp_dp_loc_1 301E  
          __end_of_lcd_disp_dp_loc_2 2FE8                   iic_received_byte@i 00EA  
          __end_of_lcd_disp_get_code 2A24                          _adc_diffBrg 00CA  
                        _adc_diffGnd 00C6                          _adc_diffVcc 00C8  
                      ??_lcd_show_dp 003F                          _adc_exPt100 00C4  
                        _adjLocation 001F                _sample_diff_pr_fliter 2458  
                      ??_in_adc_init 003F                     ?_key_process_set 0020  
                         m_mem_cpy@d 00E9                           m_mem_cpy@s 00EB  
            ??___enter_menu_set_pose 00E9                       __end_of___wmul 2FB2  
                      __pidataCOMRAM 3372                  ??_ads1115_write_reg 003F  
                 lcd_disp_get_code@i 00EB                  start_initialization 17F0  
             ui_disp_start_cs600@buf 0167               ui_disp_start_cs600@dly 016D  
           ?_handler_interrupt_hight 0020                      _LCDDigitalTable FEE4  
                  ??_lcd_set_com_seg 00F3          ?___enter_menu_set_base_zero 0020  
             ___x_sample_fliter@loop 0161               lcd_disp_chr_loc_0@code 00F6  
             lcd_disp_chr_loc_1@code 00F6               lcd_disp_chr_loc_2@code 00F6  
  __end_of_key_process_set_down_long 1972               lcd_disp_chr_loc_3@code 00F6  
             lcd_disp_chr_loc_4@code 00F6                  _ui_disp_start_cs600 22A0  
             lcd_disp_chr_loc_5@code 00F6               lcd_disp_chr_loc_6@code 00F6  
             lcd_disp_chr_loc_7@code 00F6                     _key_process_down 2DE8  
          __end_of_ads1115_write_reg 1572                   ads1115_set_mux@mux 00EB  
              ??i2_rtc_alrm_irq_hook 0020             in_adc_start_and_read@ret 00F1  
               __end_of_ads1115_init 1CFE              lcd_disp_level_bar@__bar 0161  
                   lcd_show_chr@code 0163             ads1115_read_reg@pAds1115 00ED  
                        ?_ticker_dly 00E9                  __size_of_lcd_config 002E  
               key_waite_release@key 00F3                  _rtcc_reg_wr_disable 3334  
                __end_of_lcd_bl_init 336C              ??i2_sys_ticker_irq_hook 0020  
                           ??___wmul 003F                          __pdataBANK0 00F7  
                        __pdataBANK1 017B                     __CFG_LPT1OSC$OFF 000000  
               ?_ui_disp_start_cs600 0020           __size_of___int32_2_mflot32 0106  
            __size_of_lcd_disp_level 005C                      _adc_exPt100Line 00C2  
              _ui_disp_adj_xfixed_pt 1BA4                 __end_of_ui_disp_menu 3268  
                    _ads1115_set_mux 31F6             _iic_received_byte_if_ack 328C  
                  __size_of___exp_10 0060                          _ALRMCFGbits 000F5B  
                __end_of_lcd_show_dp 2696                   lcd_show_string@str 0164  
                __end_of_in_adc_init 328C   __size_of_key_shift_loc_fixed_point 003A  
                      ??_key_polling 003F                     _sampBufDiffPr_S1 00B2  
                          _pAdjValue 00B6                        ??_key_process 003F  
                        __pbssCOMRAM 0001                    ??_lcd_show_string 003F  
                      __pcstackBANK0 00E9                        __pcstackBANK1 015E  
               ?_rtcc_reg_wr_disable 0020                         _stRTCCFGbits 000F5F  
           key_waite_release@timeout 00F1                    __size_of_delay_ms 0026  
                  __size_of_delay_us 0038                  __CFG_CCP2MX$DEFAULT 000000  
                     _key_process_up 3054              ??_handler_interrupt_low 002E  
       __end_of_ui_disp_menu_psw_adj 32CA                  ___x_arrange_str@len 00EB  
                    _m_int16_2_str_4 0D4A                  ___x_arrange_str@str 00E9  
                  __size_of_lcd_init 000E        __size_of_event_process_ticker 000C  
             ??_ui_disp_clear_num_dp 003F                    __size_of_iic_stop 003C  
         __end_of_lcd_disp_chr_loc_0 22A0           __end_of_lcd_disp_chr_loc_1 2200  
         __end_of_lcd_disp_chr_loc_2 2160           __end_of_lcd_disp_chr_loc_3 20C0  
         __end_of_lcd_disp_chr_loc_4 2020           __end_of_lcd_disp_chr_loc_5 1F80  
         __end_of_lcd_disp_chr_loc_6 1EE0           __end_of_lcd_disp_chr_loc_7 1E40  
                          _auchCRCHi FDBB                            _auchCRCLo FCBB  
                  ___x_arrange_str@i 00EC              ads1115_set_mux@pAds1115 00E9  
                   ___lwdiv@dividend 00EC        ads1115_read_conversion@result 015E  
             ?_sample_diff_pr_fliter 0173         ___enter_menu_set_density@fps 00EB  
         __size_of_lcd_disp_dp_loc_0 0036           __size_of_lcd_disp_dp_loc_1 0036  
         __size_of_lcd_disp_dp_loc_2 0036                            __pintcode 0008  
         __size_of_lcd_disp_get_code 005E                        __pmediumconst F992  
                  ??___x_arrange_str 003F                             ?___aldiv 00E9  
                           ?___awdiv 00E9                            __ptext100 0000  
                           ?___awmod 00E9                             ?___lldiv 00E9  
            ___mflot32_2_int32@F7613 008E              ??_ads1115_init_all_chip 003F  
              ??_ui_disp_start_cs600 003F                             ?___lwdiv 00EC  
                           ?___lwmod 00F3                            _fpSysData 00FD  
                  __size_of_soc_init 0010                          __pintcodelo 0018  
                  __size_of_rtc_init 003E     __end_of_ads1115_start_conversion 31CE  
                          _dlyTicker 0005          __size_of_rtcc_reg_wr_enable 000C  
                          _iic_start 2DAA                  ___int32_2_mflot32@x 015E  
           __size_of___x_sample_fifo 0162              __end_of_LCDDigitalTable FF0C  
                          _m_mem_cpy 2C64           __end_of_lcd_disp_level_bar 05B2  
              ??_rtcc_reg_wr_disable 003F           __end_of_lcd_show_string_l0 2C64  
         __end_of_lcd_show_string_l1 2CEA    __end_of_key_shift_loc_fixed_point 2ED4  
                        _PADCFG1bits 000F54                             ?_rtc_set 00E9  
             __end_of_key_process_up 3088                  __size_of_ticker_dly 002E  
                   ___lwdiv@quotient 00F1                 ads1115_init@pAds1115 00E9  
                           _LCDDATA0 000FBB                             _LCDDATA1 000FBC  
                           _LCDDATA2 000FBD                             _LCDDATA3 000FBE  
                           _LCDDATA4 000FBF                             _LCDDATA5 000F6B  
                           _LCDDATA6 000F6C                             _LCDDATA7 000F6D  
                           _LCDDATA8 000F6E                             _LCDDATA9 000F6F  
              lcd_set_com_seg@offset 015F                  __end_of_key_polling 2ADC  
                __end_of_key_process 2458                   lcd_set_com_seg@com 015E  
                    _sys_ticker_init 330A                   lcd_set_com_seg@seg 00F1  
                          _sampBufPr 0156                      ___aldiv@divisor 00ED  
         __size_of_ads1115_write_reg 0100             __end_of_defultSystemData FFA3  
       key_adj_value_fixed_point@t16 0164         key_shift_loc_fixed_point@max 00EC  
       key_shift_loc_fixed_point@loc 00E9         key_shift_loc_fixed_point@min 00EB  
                    ___aldiv@counter 00F1         key_adj_value_fixed_point@loc 0161  
                     ___wmul@product 00F0                          _lcd_bl_init 3368  
                          delay_us@i 00EB                    _iic_received_byte 276C  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
                           _IPR3bits 000FA5                             _PIE3bits 000FA3  
         ?_key_adj_value_fixed_point 015F     __end_of_sample_diff_pr_chip_fast 1472  
   __end_of___enter_menu_set_density 30BC     __end_of_sample_diff_pr_chip_slow 1004  
                        _dlyTickerEn 0011                   ?_iic_received_byte 0020  
                           _PIR1bits 000F9E              ?_event_process_time_out 0020  
                           _PIR3bits 000FA4                    ?_ads1115_read_reg 00ED  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
            __end_of_ads1115_set_mux 321E                          _lcd_show_dp 262A  
                 ??_ads1115_read_reg 00F0                          _in_adc_init 3268  
              ___int32_2_mflot32@t32 0166               ?_ui_disp_adj_xfixed_pt 0167  
           sample_diff_pr_fliter@xin 0173                  ??_iic_received_byte 003F  
             ui_disp_adj_xfixed_pt@x 0169  __size_of___enter_menu_set_base_zero 0054  
                    m_int8_2_hex@str 00E9                           ?_iic_start 0020  
                         _ADCON0bits 000FC2                           _ADCON2bits 000FC0  
                  ___wmul@multiplier 00EC                        _pAds1115PrObj 00B4  
                  ?_lcd_disp_refresh 0020                           ?_m_mem_cpy 00E9  
                   m_int16_2_str_4@x 00F3                           rtc_set@rtc 00E9  
                         rtc_set@stp 00EB                         ??_lcd_config 003F  
                 ??_lcd_disp_refresh 003F                        _fastSampTimer 0007  
            __end_of_m_int16_2_str_4 0EA8                      ?_key_process_up 0020  
                           _HexTable FF0C      ads1115_read_conversion@pAds1115 00F3  
                        _INTCON2bits 000FF1                            copy_data0 1804  
                          copy_data1 1824                __size_of_ads1115_init 00A4  
              ui_disp_start_cs600@t8 016E            __end_of_iic_received_byte 27D6  
                  _rtc_alrm_irq_hook 336E                           _EECON1bits 000FA6  
     __end_of_event_process_time_out 334C                __end_of_event_process 2D6C  
                           __Hrparam 0000          __end_of_sample_pr_chip_comm 1152  
                    lcd_show_dp@show 0161                   ?_rtc_alrm_irq_hook 0020  
                    lcd_show_chr@chr 0161                      lcd_show_chr@loc 0162  
                key_waite_release@t8 00F5               lcd_disp_level_bar@show 00F6  
                           __Lrparam 0000                      _sampBufPt100ExA 00D9  
                    _sampBufPt100ExB 00D1                      _sampBufBatInSoc 00AC  
                 __end_of_lcd_config 317A                __size_of_ui_disp_menu 0024  
             __size_of_lcd_disp_logo 0036                     __size_of___aldiv 011A  
                   __size_of___awdiv 00BE                       _lcd_disp_level 2A24  
                   __size_of___awmod 00A2                     __size_of___lldiv 00BC  
                           ___exp_10 2966                     __size_of___lwdiv 0078  
                ??_rtc_alrm_irq_hook 002E                     __size_of___lwmod 0062  
           __end_of_key_process_down 2E24                             _adc_iRef 00B8  
                    _lcd_set_com_seg 1728                             _adc_ibat 00BA  
                       _ads1115Chip0 0110                         _ads1115Chip1 0100  
                           _adjValue 0001       __size_of___enter_menu_set_pose 0032  
      __size_of_sample_in_soc_adc_ch 021C                 _ui_disp_menu_psw_adj 32AC  
      __end_of___enter_menu_set_pose 30EE                             _calibCol 0019  
                           _calibRow 001A                         _ads1115_init 1C5A  
                     key_process@key 017A             _ads1115_start_conversion 31A4  
                        _key_polling 2A80              __end_of_sys_ticker_init 331A  
                        _key_process 23D6                             _delay_ms 321E  
                           _delay_us 2F0E               __size_of_iic_send_byte 006C  
                           _glTicker 008A                      ___lwdiv@divisor 00EE  
                           _glbEvent 00CE                      _sampBufRefInSoc 00AA  
                    ___lwdiv@counter 00F0          __end_of_sys_ticker_irq_hook 32E2  
                           __ptext10 330A                             __ptext11 2D6C  
                           __ptext20 23D6                             __ptext12 1AEC  
                           __ptext21 2CEA                             __ptext13 3328  
                           __ptext30 18B4                             __ptext22 2A80  
                           __ptext14 3334                             __ptext31 30BC  
                           __ptext23 3054                             __ptext15 331A  
                           __ptext40 334C                             __ptext32 3088  
                           __ptext24 1572                             __ptext16 314C  
                           __ptext41 1372                             __ptext33 2B36  
                           __ptext25 2F7C                             __ptext17 30EE  
                           __ptext50 1DA0                             __ptext42 31CE  
                           __ptext34 126C                             __ptext26 28A2  
                           __ptext18 3368                             __ptext51 1E40  
                           __ptext43 3244                             __ptext35 1A30  
                           __ptext27 24D6                             __ptext19 2D2C  
                           __ptext60 2FE8                             __ptext52 1EE0  
                           __ptext44 32AC                             __ptext36 317A  
                           __ptext28 2966                             __ptext61 301E  
                           __ptext53 1F80                             __ptext45 1BA4  
                           __ptext37 2DE8                             __ptext29 336C  
                           __ptext70 0BE8                             __ptext62 1728  
                           __ptext54 2020                             __ptext46 2ADC  
                           __ptext38 2E9A                             __ptext71 0810  
                           __ptext63 2C64                             __ptext55 20C0  
                           __ptext47 254E                             __ptext39 3340  
                           __ptext80 31A4                             __ptext72 25BC  
                           __ptext64 0D4A                             __ptext56 2160  
                           __ptext48 233E                             __ptext81 1472  
                           __ptext73 3268                             __ptext65 1CFE  
                           __ptext57 2200                             __ptext49 29C6  
                           __ptext90 2B8A                             __ptext82 31F6  
                           __ptext74 0EA8                             __ptext66 1972  
                           __ptext58 262A                             __ptext91 276C  
                           __ptext83 2BDA                             __ptext75 2458  
                           __ptext67 2904                             __ptext59 2FB2  
                           __ptext92 2ED4                             __ptext84 0A2C  
                           __ptext76 05B2                             __ptext68 2702  
                           __ptext93 1C5A                             __ptext85 2DAA  
                           __ptext77 1152                             __ptext69 1004  
                           __ptext86 2696                             __ptext78 321E  
                           __ptext95 32CA                             __ptext87 27D6  
                           __ptext79 2F0E                             __ptext96 336E  
                           __ptext88 2E24                             __ptext89 328C  
                           __ptext98 32E2                             __ptext99 3370  
                  ??___x_sample_fifo 0163                     _inSocSampleTimer 0014  
                   __size_of_rtc_set 00B8                             _lcd_init 331A  
              _in_adc_start_and_read 25BC                             _iic_stop 2E24  
             __size_of_iic_waite_ack 0068                             _keyValue 00D0  
          __end_of_rtc_alrm_irq_hook 3370                        __size_of_main 003A  
                       _ui_disp_menu 3244                             _x_Weight 009E  
                           _passWord 001D     __size_of_handler_interrupt_hight 1720  
                       ??_ticker_dly 003F        __size_of_key_process_set_long 0002  
                           _soc_init 32FA                         ticker_dly@ms 00E9  
         ??_iic_received_byte_if_ack 003F               __end_of_lcd_disp_level 2A80  
                           _rtc_init 2D6C               ads1115_write_reg@value 00EF  
                           int$flags 0040                     ?_ads1115_set_mux 00E9  
                    _lcd_show_string 254E       __size_ofi2_sys_ticker_irq_hook 0018  
      __end_ofi2_sys_ticker_irq_hook 32FA             ?_ads1115_read_conversion 00F3  
                  _commonSampleTimer 00CF                ?_ui_disp_menu_psw_adj 0020  
                        ??_iic_start 003F                          delay_ms@dly 00ED  
                ads1115_init@slvaddr 00EB                          ??_m_mem_cpy 003F  
                        delay_us@dly 00E9                         _x_prDiffData 00E1  
                         _INTCONbits 000FF2    __size_of_sample_diff_pr_chip_fast 0100  
 __end_of___enter_menu_set_base_zero 2B8A           ___enter_menu_set_base_zero 2B36  
           __size_of_key_process_set 002A    __size_of___enter_menu_set_density 0034  
          ?_sample_diff_pr_chip_fast 0020    __size_of_sample_diff_pr_chip_slow 015C  
              lcd_disp_level_bar@bar 0162            ?___enter_menu_set_density 0020  
          ?_sample_diff_pr_chip_slow 0020                 iic_waite_ack@timeout 00E9  
              __CFG_RTCSOSC$T1OSCREF 000000                     ?_m_int16_2_str_4 00F1  
                      key_polling@t8 00F0          __end_ofi2_rtc_alrm_irq_hook 3372  
                      _lcd_disp_logo 2F46                   __end_of_ticker_dly 314C  
                           intlevel1 0000                             intlevel2 0000  
               ads1115_read_reg@addr 00EF                        key_process@tm 0178  
         __size_of_iic_received_byte 006A                      ___x_arrange_str 2702  
                   ___lwmod@dividend 00F3                      _slowSampleTimer 0015  
         ?_key_process_set_down_long 0020                     ___lldiv@dividend 00E9  
     __size_of_handler_interrupt_low 00C4              ??_sample_diff_pr_fliter 003F  
      __end_of_handler_interrupt_low 00DC                           _OSCCONbits 000FD3  
                      _iic_send_byte 2696                ads1115_write_reg@addr 00EE  
            __end_of_lcd_set_com_seg 17F0                      ?_lcd_disp_level 0020  
                  _diffSampCount_D01 0018                    _diffSampCount_D23 0017  
                      _iic_waite_ack 27D6                   _lcd_disp_chr_loc_0 2200  
                 _lcd_disp_chr_loc_1 2160                   _lcd_disp_chr_loc_2 20C0  
                 _lcd_disp_chr_loc_3 2020                   _lcd_disp_chr_loc_4 1F80  
                 _lcd_disp_chr_loc_5 1EE0                   _lcd_disp_chr_loc_6 1E40  
                 _lcd_disp_chr_loc_7 1DA0         __end_of_event_process_ticker 3358  
     __size_of_ads1115_init_all_chip 003A        __end_of_ads1115_init_all_chip 2F0E  
                         _RTCCFGbits 000F5F                  ads1115_read_reg@t16 00F1  
                   ___lldiv@quotient 00F1                      ___lwmod@divisor 00F5  
            ___int32_2_mflot32@F7608 0092                      ___lwmod@counter 015E  
                ?_lcd_disp_chr_loc_0 0020                  ?_lcd_disp_chr_loc_1 0020  
                ?_lcd_disp_chr_loc_2 0020                  ?_lcd_disp_chr_loc_3 0020  
                ?_lcd_disp_chr_loc_4 0020                  ?_lcd_disp_chr_loc_5 0020  
                ?_lcd_disp_chr_loc_6 0020                  ?_lcd_disp_chr_loc_7 0020  
                   ?_sys_ticker_init 0020                         ___aldiv@sign 00F2  
                     ?_lcd_disp_logo 0020               ?_in_adc_start_and_read 00ED  
         __size_of_rtc_alrm_irq_hook 0002                        ?_lcd_disp_all 0020  
                 _lcd_disp_level_bar 00E0                         ?_lcd_bl_init 0020  
           ui_disp_adj_xfixed_pt@buf 016E             ui_disp_adj_xfixed_pt@loc 016B  
            __end_of_lcd_show_string 25BC             ui_disp_adj_xfixed_pt@str 0167  
                 _lcd_show_string_l0 2C20                   _lcd_show_string_l1 2CA8  
      __size_of_ui_disp_clear_num_dp 005A          __end_of_ui_disp_start_cs600 233E  
               ??_lcd_disp_chr_loc_0 003F                 ??_lcd_disp_chr_loc_1 003F  
               ??_lcd_disp_chr_loc_2 003F                 ??_lcd_disp_chr_loc_3 003F  
               ??_lcd_disp_chr_loc_4 003F                 ??_lcd_disp_chr_loc_5 003F  
               ??_lcd_disp_chr_loc_6 003F                 ??_lcd_disp_chr_loc_7 003F  
                     ?_iic_send_byte 0020          ??_key_adj_value_fixed_point 003F  
                      ?_iic_send_ack 0020      __end_of_ads1115_read_conversion 2C20  
            ??_ui_disp_adj_xfixed_pt 016C                  ?_lcd_disp_level_bar 00F6  
