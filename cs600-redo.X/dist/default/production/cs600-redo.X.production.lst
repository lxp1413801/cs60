

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Sep 26 21:27:03 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1,group=1
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=1
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1,group=1
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1,group=1
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1,group=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	text212,global,reloc=2,class=CODE,delta=1
   235                           	psect	text213,global,reloc=2,class=CODE,delta=1
   236                           	psect	text214,global,reloc=2,class=CODE,delta=1
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1
   238                           	psect	text216,global,reloc=2,class=CODE,delta=1
   239                           	psect	text217,global,reloc=2,class=CODE,delta=1
   240                           	psect	text218,global,reloc=2,class=CODE,delta=1
   241                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   242                           	psect	text220,global,reloc=2,class=CODE,delta=1
   243                           	psect	text221,global,reloc=2,class=CODE,delta=1
   244                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   245                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   249                           	psect	text225,global,reloc=2,class=CODE,delta=1
   250                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   251                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   252  0000                     
   253                           ; Version 1.41
   254                           ; Generated 25/01/2017 GMT
   255                           ; 
   256                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   257                           ; All rights reserved.
   258                           ; 
   259                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   260                           ; 
   261                           ; Redistribution and use in source and binary forms, with or without modification, are
   262                           ; permitted provided that the following conditions are met:
   263                           ; 
   264                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   265                           ;        conditions and the following disclaimer.
   266                           ; 
   267                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   268                           ;        of conditions and the following disclaimer in the documentation and/or other
   269                           ;        materials provided with the distribution.
   270                           ; 
   271                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   272                           ;        software without specific prior written permission.
   273                           ; 
   274                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   275                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   276                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   277                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   278                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   279                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   280                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   281                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   282                           ; 
   283                           ; 
   284                           ; Code-generator required, PIC18F86J93 Definitions
   285                           ; 
   286                           ; SFR Addresses
   287  0000                     
   288                           	psect	idataBANK0
   289  00A3C0                     __pidataBANK0:
   290                           	opt stack 0
   291                           
   292                           ;initializer for _glNoEventTimeOut
   293  00A3C0  1E                 	db	30
   294                           
   295                           	psect	idataBANK1
   296  00A376                     __pidataBANK1:
   297                           	opt stack 0
   298                           
   299                           ;initializer for ui_disp_start_cs600@F7726
   300  00A376  2D                 	db	45
   301  00A377  30                 	db	48
   302  00A378  30                 	db	48
   303  00A379  2D                 	db	45
   304  00A37A  00                 	db	0
   305  00A37B  00                 	db	0
   306                           
   307                           ;initializer for _defalutRtc
   308  00A37C  17                 	db	23
   309  00A37D  07                 	db	7
   310  00A37E  31                 	db	49
   311  00A37F  23                 	db	35
   312  00A380  55                 	db	85
   313  00A381  55                 	db	85
   314  00A382  02                 	db	2
   315                           
   316                           	psect	mediumconst
   317  00ECB6                     __pmediumconst:
   318                           	opt stack 0
   319  00ECB6  00                 	db	0
   320  00ECB7                     _auchCRCLo:
   321                           	opt stack 0
   322  00ECB7  00                 	db	0
   323  00ECB8  C0                 	db	192
   324  00ECB9  C1                 	db	193
   325  00ECBA  01                 	db	1
   326  00ECBB  C3                 	db	195
   327  00ECBC  03                 	db	3
   328  00ECBD  02                 	db	2
   329  00ECBE  C2                 	db	194
   330  00ECBF  C6                 	db	198
   331  00ECC0  06                 	db	6
   332  00ECC1  07                 	db	7
   333  00ECC2  C7                 	db	199
   334  00ECC3  05                 	db	5
   335  00ECC4  C5                 	db	197
   336  00ECC5  C4                 	db	196
   337  00ECC6  04                 	db	4
   338  00ECC7  CC                 	db	204
   339  00ECC8  0C                 	db	12
   340  00ECC9  0D                 	db	13
   341  00ECCA  CD                 	db	205
   342  00ECCB  0F                 	db	15
   343  00ECCC  CF                 	db	207
   344  00ECCD  CE                 	db	206
   345  00ECCE  0E                 	db	14
   346  00ECCF  0A                 	db	10
   347  00ECD0  CA                 	db	202
   348  00ECD1  CB                 	db	203
   349  00ECD2  0B                 	db	11
   350  00ECD3  C9                 	db	201
   351  00ECD4  09                 	db	9
   352  00ECD5  08                 	db	8
   353  00ECD6  C8                 	db	200
   354  00ECD7  D8                 	db	216
   355  00ECD8  18                 	db	24
   356  00ECD9  19                 	db	25
   357  00ECDA  D9                 	db	217
   358  00ECDB  1B                 	db	27
   359  00ECDC  DB                 	db	219
   360  00ECDD  DA                 	db	218
   361  00ECDE  1A                 	db	26
   362  00ECDF  1E                 	db	30
   363  00ECE0  DE                 	db	222
   364  00ECE1  DF                 	db	223
   365  00ECE2  1F                 	db	31
   366  00ECE3  DD                 	db	221
   367  00ECE4  1D                 	db	29
   368  00ECE5  1C                 	db	28
   369  00ECE6  DC                 	db	220
   370  00ECE7  14                 	db	20
   371  00ECE8  D4                 	db	212
   372  00ECE9  D5                 	db	213
   373  00ECEA  15                 	db	21
   374  00ECEB  D7                 	db	215
   375  00ECEC  17                 	db	23
   376  00ECED  16                 	db	22
   377  00ECEE  D6                 	db	214
   378  00ECEF  D2                 	db	210
   379  00ECF0  12                 	db	18
   380  00ECF1  13                 	db	19
   381  00ECF2  D3                 	db	211
   382  00ECF3  11                 	db	17
   383  00ECF4  D1                 	db	209
   384  00ECF5  D0                 	db	208
   385  00ECF6  10                 	db	16
   386  00ECF7  F0                 	db	240
   387  00ECF8  30                 	db	48
   388  00ECF9  31                 	db	49
   389  00ECFA  F1                 	db	241
   390  00ECFB  33                 	db	51
   391  00ECFC  F3                 	db	243
   392  00ECFD  F2                 	db	242
   393  00ECFE  32                 	db	50
   394  00ECFF  36                 	db	54
   395  00ED00  F6                 	db	246
   396  00ED01  F7                 	db	247
   397  00ED02  37                 	db	55
   398  00ED03  F5                 	db	245
   399  00ED04  35                 	db	53
   400  00ED05  34                 	db	52
   401  00ED06  F4                 	db	244
   402  00ED07  3C                 	db	60
   403  00ED08  FC                 	db	252
   404  00ED09  FD                 	db	253
   405  00ED0A  3D                 	db	61
   406  00ED0B  FF                 	db	255
   407  00ED0C  3F                 	db	63
   408  00ED0D  3E                 	db	62
   409  00ED0E  FE                 	db	254
   410  00ED0F  FA                 	db	250
   411  00ED10  3A                 	db	58
   412  00ED11  3B                 	db	59
   413  00ED12  FB                 	db	251
   414  00ED13  39                 	db	57
   415  00ED14  F9                 	db	249
   416  00ED15  F8                 	db	248
   417  00ED16  38                 	db	56
   418  00ED17  28                 	db	40
   419  00ED18  E8                 	db	232
   420  00ED19  E9                 	db	233
   421  00ED1A  29                 	db	41
   422  00ED1B  EB                 	db	235
   423  00ED1C  2B                 	db	43
   424  00ED1D  2A                 	db	42
   425  00ED1E  EA                 	db	234
   426  00ED1F  EE                 	db	238
   427  00ED20  2E                 	db	46
   428  00ED21  2F                 	db	47
   429  00ED22  EF                 	db	239
   430  00ED23  2D                 	db	45
   431  00ED24  ED                 	db	237
   432  00ED25  EC                 	db	236
   433  00ED26  2C                 	db	44
   434  00ED27  E4                 	db	228
   435  00ED28  24                 	db	36
   436  00ED29  25                 	db	37
   437  00ED2A  E5                 	db	229
   438  00ED2B  27                 	db	39
   439  00ED2C  E7                 	db	231
   440  00ED2D  E6                 	db	230
   441  00ED2E  26                 	db	38
   442  00ED2F  22                 	db	34
   443  00ED30  E2                 	db	226
   444  00ED31  E3                 	db	227
   445  00ED32  23                 	db	35
   446  00ED33  E1                 	db	225
   447  00ED34  21                 	db	33
   448  00ED35  20                 	db	32
   449  00ED36  E0                 	db	224
   450  00ED37  A0                 	db	160
   451  00ED38  60                 	db	96
   452  00ED39  61                 	db	97
   453  00ED3A  A1                 	db	161
   454  00ED3B  63                 	db	99
   455  00ED3C  A3                 	db	163
   456  00ED3D  A2                 	db	162
   457  00ED3E  62                 	db	98
   458  00ED3F  66                 	db	102
   459  00ED40  A6                 	db	166
   460  00ED41  A7                 	db	167
   461  00ED42  67                 	db	103
   462  00ED43  A5                 	db	165
   463  00ED44  65                 	db	101
   464  00ED45  64                 	db	100
   465  00ED46  A4                 	db	164
   466  00ED47  6C                 	db	108
   467  00ED48  AC                 	db	172
   468  00ED49  AD                 	db	173
   469  00ED4A  6D                 	db	109
   470  00ED4B  AF                 	db	175
   471  00ED4C  6F                 	db	111
   472  00ED4D  6E                 	db	110
   473  00ED4E  AE                 	db	174
   474  00ED4F  AA                 	db	170
   475  00ED50  6A                 	db	106
   476  00ED51  6B                 	db	107
   477  00ED52  AB                 	db	171
   478  00ED53  69                 	db	105
   479  00ED54  A9                 	db	169
   480  00ED55  A8                 	db	168
   481  00ED56  68                 	db	104
   482  00ED57  78                 	db	120
   483  00ED58  B8                 	db	184
   484  00ED59  B9                 	db	185
   485  00ED5A  79                 	db	121
   486  00ED5B  BB                 	db	187
   487  00ED5C  7B                 	db	123
   488  00ED5D  7A                 	db	122
   489  00ED5E  BA                 	db	186
   490  00ED5F  BE                 	db	190
   491  00ED60  7E                 	db	126
   492  00ED61  7F                 	db	127
   493  00ED62  BF                 	db	191
   494  00ED63  7D                 	db	125
   495  00ED64  BD                 	db	189
   496  00ED65  BC                 	db	188
   497  00ED66  7C                 	db	124
   498  00ED67  B4                 	db	180
   499  00ED68  74                 	db	116
   500  00ED69  75                 	db	117
   501  00ED6A  B5                 	db	181
   502  00ED6B  77                 	db	119
   503  00ED6C  B7                 	db	183
   504  00ED6D  B6                 	db	182
   505  00ED6E  76                 	db	118
   506  00ED6F  72                 	db	114
   507  00ED70  B2                 	db	178
   508  00ED71  B3                 	db	179
   509  00ED72  73                 	db	115
   510  00ED73  B1                 	db	177
   511  00ED74  71                 	db	113
   512  00ED75  70                 	db	112
   513  00ED76  B0                 	db	176
   514  00ED77  50                 	db	80
   515  00ED78  90                 	db	144
   516  00ED79  91                 	db	145
   517  00ED7A  51                 	db	81
   518  00ED7B  93                 	db	147
   519  00ED7C  53                 	db	83
   520  00ED7D  52                 	db	82
   521  00ED7E  92                 	db	146
   522  00ED7F  96                 	db	150
   523  00ED80  56                 	db	86
   524  00ED81  57                 	db	87
   525  00ED82  97                 	db	151
   526  00ED83  55                 	db	85
   527  00ED84  95                 	db	149
   528  00ED85  94                 	db	148
   529  00ED86  54                 	db	84
   530  00ED87  9C                 	db	156
   531  00ED88  5C                 	db	92
   532  00ED89  5D                 	db	93
   533  00ED8A  9D                 	db	157
   534  00ED8B  5F                 	db	95
   535  00ED8C  9F                 	db	159
   536  00ED8D  9E                 	db	158
   537  00ED8E  5E                 	db	94
   538  00ED8F  5A                 	db	90
   539  00ED90  9A                 	db	154
   540  00ED91  9B                 	db	155
   541  00ED92  5B                 	db	91
   542  00ED93  99                 	db	153
   543  00ED94  59                 	db	89
   544  00ED95  58                 	db	88
   545  00ED96  98                 	db	152
   546  00ED97  88                 	db	136
   547  00ED98  48                 	db	72
   548  00ED99  49                 	db	73
   549  00ED9A  89                 	db	137
   550  00ED9B  4B                 	db	75
   551  00ED9C  8B                 	db	139
   552  00ED9D  8A                 	db	138
   553  00ED9E  4A                 	db	74
   554  00ED9F  4E                 	db	78
   555  00EDA0  8E                 	db	142
   556  00EDA1  8F                 	db	143
   557  00EDA2  4F                 	db	79
   558  00EDA3  8D                 	db	141
   559  00EDA4  4D                 	db	77
   560  00EDA5  4C                 	db	76
   561  00EDA6  8C                 	db	140
   562  00EDA7  44                 	db	68
   563  00EDA8  84                 	db	132
   564  00EDA9  85                 	db	133
   565  00EDAA  45                 	db	69
   566  00EDAB  87                 	db	135
   567  00EDAC  47                 	db	71
   568  00EDAD  46                 	db	70
   569  00EDAE  86                 	db	134
   570  00EDAF  82                 	db	130
   571  00EDB0  42                 	db	66
   572  00EDB1  43                 	db	67
   573  00EDB2  83                 	db	131
   574  00EDB3  41                 	db	65
   575  00EDB4  81                 	db	129
   576  00EDB5  80                 	db	128
   577  00EDB6  40                 	db	64
   578  00EDB7                     __end_of_auchCRCLo:
   579                           	opt stack 0
   580  00EDB7                     _auchCRCHi:
   581                           	opt stack 0
   582  00EDB7  00                 	db	0
   583  00EDB8  C1                 	db	193
   584  00EDB9  81                 	db	129
   585  00EDBA  40                 	db	64
   586  00EDBB  01                 	db	1
   587  00EDBC  C0                 	db	192
   588  00EDBD  80                 	db	128
   589  00EDBE  41                 	db	65
   590  00EDBF  01                 	db	1
   591  00EDC0  C0                 	db	192
   592  00EDC1  80                 	db	128
   593  00EDC2  41                 	db	65
   594  00EDC3  00                 	db	0
   595  00EDC4  C1                 	db	193
   596  00EDC5  81                 	db	129
   597  00EDC6  40                 	db	64
   598  00EDC7  01                 	db	1
   599  00EDC8  C0                 	db	192
   600  00EDC9  80                 	db	128
   601  00EDCA  41                 	db	65
   602  00EDCB  00                 	db	0
   603  00EDCC  C1                 	db	193
   604  00EDCD  81                 	db	129
   605  00EDCE  40                 	db	64
   606  00EDCF  00                 	db	0
   607  00EDD0  C1                 	db	193
   608  00EDD1  81                 	db	129
   609  00EDD2  40                 	db	64
   610  00EDD3  01                 	db	1
   611  00EDD4  C0                 	db	192
   612  00EDD5  80                 	db	128
   613  00EDD6  41                 	db	65
   614  00EDD7  01                 	db	1
   615  00EDD8  C0                 	db	192
   616  00EDD9  80                 	db	128
   617  00EDDA  41                 	db	65
   618  00EDDB  00                 	db	0
   619  00EDDC  C1                 	db	193
   620  00EDDD  81                 	db	129
   621  00EDDE  40                 	db	64
   622  00EDDF  00                 	db	0
   623  00EDE0  C1                 	db	193
   624  00EDE1  81                 	db	129
   625  00EDE2  40                 	db	64
   626  00EDE3  01                 	db	1
   627  00EDE4  C0                 	db	192
   628  00EDE5  80                 	db	128
   629  00EDE6  41                 	db	65
   630  00EDE7  00                 	db	0
   631  00EDE8  C1                 	db	193
   632  00EDE9  81                 	db	129
   633  00EDEA  40                 	db	64
   634  00EDEB  01                 	db	1
   635  00EDEC  C0                 	db	192
   636  00EDED  80                 	db	128
   637  00EDEE  41                 	db	65
   638  00EDEF  01                 	db	1
   639  00EDF0  C0                 	db	192
   640  00EDF1  80                 	db	128
   641  00EDF2  41                 	db	65
   642  00EDF3  00                 	db	0
   643  00EDF4  C1                 	db	193
   644  00EDF5  81                 	db	129
   645  00EDF6  40                 	db	64
   646  00EDF7  01                 	db	1
   647  00EDF8  C0                 	db	192
   648  00EDF9  80                 	db	128
   649  00EDFA  41                 	db	65
   650  00EDFB  00                 	db	0
   651  00EDFC  C1                 	db	193
   652  00EDFD  81                 	db	129
   653  00EDFE  40                 	db	64
   654  00EDFF  00                 	db	0
   655  00EE00  C1                 	db	193
   656  00EE01  81                 	db	129
   657  00EE02  40                 	db	64
   658  00EE03  01                 	db	1
   659  00EE04  C0                 	db	192
   660  00EE05  80                 	db	128
   661  00EE06  41                 	db	65
   662  00EE07  00                 	db	0
   663  00EE08  C1                 	db	193
   664  00EE09  81                 	db	129
   665  00EE0A  40                 	db	64
   666  00EE0B  01                 	db	1
   667  00EE0C  C0                 	db	192
   668  00EE0D  80                 	db	128
   669  00EE0E  41                 	db	65
   670  00EE0F  01                 	db	1
   671  00EE10  C0                 	db	192
   672  00EE11  80                 	db	128
   673  00EE12  41                 	db	65
   674  00EE13  00                 	db	0
   675  00EE14  C1                 	db	193
   676  00EE15  81                 	db	129
   677  00EE16  40                 	db	64
   678  00EE17  00                 	db	0
   679  00EE18  C1                 	db	193
   680  00EE19  81                 	db	129
   681  00EE1A  40                 	db	64
   682  00EE1B  01                 	db	1
   683  00EE1C  C0                 	db	192
   684  00EE1D  80                 	db	128
   685  00EE1E  41                 	db	65
   686  00EE1F  01                 	db	1
   687  00EE20  C0                 	db	192
   688  00EE21  80                 	db	128
   689  00EE22  41                 	db	65
   690  00EE23  00                 	db	0
   691  00EE24  C1                 	db	193
   692  00EE25  81                 	db	129
   693  00EE26  40                 	db	64
   694  00EE27  01                 	db	1
   695  00EE28  C0                 	db	192
   696  00EE29  80                 	db	128
   697  00EE2A  41                 	db	65
   698  00EE2B  00                 	db	0
   699  00EE2C  C1                 	db	193
   700  00EE2D  81                 	db	129
   701  00EE2E  40                 	db	64
   702  00EE2F  00                 	db	0
   703  00EE30  C1                 	db	193
   704  00EE31  81                 	db	129
   705  00EE32  40                 	db	64
   706  00EE33  01                 	db	1
   707  00EE34  C0                 	db	192
   708  00EE35  80                 	db	128
   709  00EE36  41                 	db	65
   710  00EE37  01                 	db	1
   711  00EE38  C0                 	db	192
   712  00EE39  80                 	db	128
   713  00EE3A  41                 	db	65
   714  00EE3B  00                 	db	0
   715  00EE3C  C1                 	db	193
   716  00EE3D  81                 	db	129
   717  00EE3E  40                 	db	64
   718  00EE3F  00                 	db	0
   719  00EE40  C1                 	db	193
   720  00EE41  81                 	db	129
   721  00EE42  40                 	db	64
   722  00EE43  01                 	db	1
   723  00EE44  C0                 	db	192
   724  00EE45  80                 	db	128
   725  00EE46  41                 	db	65
   726  00EE47  00                 	db	0
   727  00EE48  C1                 	db	193
   728  00EE49  81                 	db	129
   729  00EE4A  40                 	db	64
   730  00EE4B  01                 	db	1
   731  00EE4C  C0                 	db	192
   732  00EE4D  80                 	db	128
   733  00EE4E  41                 	db	65
   734  00EE4F  01                 	db	1
   735  00EE50  C0                 	db	192
   736  00EE51  80                 	db	128
   737  00EE52  41                 	db	65
   738  00EE53  00                 	db	0
   739  00EE54  C1                 	db	193
   740  00EE55  81                 	db	129
   741  00EE56  40                 	db	64
   742  00EE57  00                 	db	0
   743  00EE58  C1                 	db	193
   744  00EE59  81                 	db	129
   745  00EE5A  40                 	db	64
   746  00EE5B  01                 	db	1
   747  00EE5C  C0                 	db	192
   748  00EE5D  80                 	db	128
   749  00EE5E  41                 	db	65
   750  00EE5F  01                 	db	1
   751  00EE60  C0                 	db	192
   752  00EE61  80                 	db	128
   753  00EE62  41                 	db	65
   754  00EE63  00                 	db	0
   755  00EE64  C1                 	db	193
   756  00EE65  81                 	db	129
   757  00EE66  40                 	db	64
   758  00EE67  01                 	db	1
   759  00EE68  C0                 	db	192
   760  00EE69  80                 	db	128
   761  00EE6A  41                 	db	65
   762  00EE6B  00                 	db	0
   763  00EE6C  C1                 	db	193
   764  00EE6D  81                 	db	129
   765  00EE6E  40                 	db	64
   766  00EE6F  00                 	db	0
   767  00EE70  C1                 	db	193
   768  00EE71  81                 	db	129
   769  00EE72  40                 	db	64
   770  00EE73  01                 	db	1
   771  00EE74  C0                 	db	192
   772  00EE75  80                 	db	128
   773  00EE76  41                 	db	65
   774  00EE77  00                 	db	0
   775  00EE78  C1                 	db	193
   776  00EE79  81                 	db	129
   777  00EE7A  40                 	db	64
   778  00EE7B  01                 	db	1
   779  00EE7C  C0                 	db	192
   780  00EE7D  80                 	db	128
   781  00EE7E  41                 	db	65
   782  00EE7F  01                 	db	1
   783  00EE80  C0                 	db	192
   784  00EE81  80                 	db	128
   785  00EE82  41                 	db	65
   786  00EE83  00                 	db	0
   787  00EE84  C1                 	db	193
   788  00EE85  81                 	db	129
   789  00EE86  40                 	db	64
   790  00EE87  01                 	db	1
   791  00EE88  C0                 	db	192
   792  00EE89  80                 	db	128
   793  00EE8A  41                 	db	65
   794  00EE8B  00                 	db	0
   795  00EE8C  C1                 	db	193
   796  00EE8D  81                 	db	129
   797  00EE8E  40                 	db	64
   798  00EE8F  00                 	db	0
   799  00EE90  C1                 	db	193
   800  00EE91  81                 	db	129
   801  00EE92  40                 	db	64
   802  00EE93  01                 	db	1
   803  00EE94  C0                 	db	192
   804  00EE95  80                 	db	128
   805  00EE96  41                 	db	65
   806  00EE97  01                 	db	1
   807  00EE98  C0                 	db	192
   808  00EE99  80                 	db	128
   809  00EE9A  41                 	db	65
   810  00EE9B  00                 	db	0
   811  00EE9C  C1                 	db	193
   812  00EE9D  81                 	db	129
   813  00EE9E  40                 	db	64
   814  00EE9F  00                 	db	0
   815  00EEA0  C1                 	db	193
   816  00EEA1  81                 	db	129
   817  00EEA2  40                 	db	64
   818  00EEA3  01                 	db	1
   819  00EEA4  C0                 	db	192
   820  00EEA5  80                 	db	128
   821  00EEA6  41                 	db	65
   822  00EEA7  00                 	db	0
   823  00EEA8  C1                 	db	193
   824  00EEA9  81                 	db	129
   825  00EEAA  40                 	db	64
   826  00EEAB  01                 	db	1
   827  00EEAC  C0                 	db	192
   828  00EEAD  80                 	db	128
   829  00EEAE  41                 	db	65
   830  00EEAF  01                 	db	1
   831  00EEB0  C0                 	db	192
   832  00EEB1  80                 	db	128
   833  00EEB2  41                 	db	65
   834  00EEB3  00                 	db	0
   835  00EEB4  C1                 	db	193
   836  00EEB5  81                 	db	129
   837  00EEB6  40                 	db	64
   838  00EEB7                     __end_of_auchCRCHi:
   839                           	opt stack 0
   840  00EEB7                     _LCDDigitalIndexTable:
   841                           	opt stack 0
   842  00EEB7  30                 	db	48
   843  00EEB8  31                 	db	49
   844  00EEB9  32                 	db	50
   845  00EEBA  33                 	db	51
   846  00EEBB  34                 	db	52
   847  00EEBC  35                 	db	53
   848  00EEBD  36                 	db	54
   849  00EEBE  37                 	db	55
   850  00EEBF  38                 	db	56
   851  00EEC0  39                 	db	57
   852  00EEC1  61                 	db	97
   853  00EEC2  62                 	db	98
   854  00EEC3  63                 	db	99
   855  00EEC4  64                 	db	100
   856  00EEC5  65                 	db	101
   857  00EEC6  66                 	db	102
   858  00EEC7  67                 	db	103
   859  00EEC8  68                 	db	104
   860  00EEC9  69                 	db	105
   861  00EECA  6A                 	db	106
   862  00EECB  6B                 	db	107
   863  00EECC  6C                 	db	108
   864  00EECD  6D                 	db	109
   865  00EECE  6E                 	db	110
   866  00EECF  6F                 	db	111
   867  00EED0  70                 	db	112
   868  00EED1  71                 	db	113
   869  00EED2  72                 	db	114
   870  00EED3  73                 	db	115
   871  00EED4  74                 	db	116
   872  00EED5  75                 	db	117
   873  00EED6  76                 	db	118
   874  00EED7  77                 	db	119
   875  00EED8  78                 	db	120
   876  00EED9  79                 	db	121
   877  00EEDA  7A                 	db	122
   878  00EEDB  2E                 	db	46
   879  00EEDC  2D                 	db	45
   880  00EEDD  3A                 	db	58
   881  00EEDE  20                 	db	32
   882  00EEDF  47                 	db	71
   883  00EEE0  48                 	db	72
   884  00EEE1  00                 	db	0
   885  00EEE2                     __end_of_LCDDigitalIndexTable:
   886                           	opt stack 0
   887  00EEE2                     _LCDDigitalTable:
   888                           	opt stack 0
   889  00EEE2  3F                 	db	63
   890  00EEE3  06                 	db	6
   891  00EEE4  5B                 	db	91
   892  00EEE5  4F                 	db	79
   893  00EEE6  66                 	db	102
   894  00EEE7  6D                 	db	109
   895  00EEE8  7D                 	db	125
   896  00EEE9  07                 	db	7
   897  00EEEA  7F                 	db	127
   898  00EEEB  6F                 	db	111
   899  00EEEC  77                 	db	119
   900  00EEED  7C                 	db	124
   901  00EEEE  39                 	db	57
   902  00EEEF  5E                 	db	94
   903  00EEF0  79                 	db	121
   904  00EEF1  71                 	db	113
   905  00EEF2  6F                 	db	111
   906  00EEF3  74                 	db	116
   907  00EEF4  06                 	db	6
   908  00EEF5  0E                 	db	14
   909  00EEF6  7A                 	db	122
   910  00EEF7  38                 	db	56
   911  00EEF8  00                 	db	0
   912  00EEF9  37                 	db	55
   913  00EEFA  5C                 	db	92
   914  00EEFB  73                 	db	115
   915  00EEFC  67                 	db	103
   916  00EEFD  50                 	db	80
   917  00EEFE  6D                 	db	109
   918  00EEFF  78                 	db	120
   919  00EF00  3E                 	db	62
   920  00EF01  00                 	db	0
   921  00EF02  00                 	db	0
   922  00EF03  00                 	db	0
   923  00EF04  6E                 	db	110
   924  00EF05  5B                 	db	91
   925  00EF06  40                 	db	64
   926  00EF07  40                 	db	64
   927  00EF08  48                 	db	72
   928  00EF09  00                 	db	0
   929  00EF0A  3D                 	db	61
   930  00EF0B  76                 	db	118
   931  00EF0C                     __end_of_LCDDigitalTable:
   932                           	opt stack 0
   933  00EF0C                     _HexTable:
   934                           	opt stack 0
   935  00EF0C  30                 	db	48
   936  00EF0D  31                 	db	49
   937  00EF0E  32                 	db	50
   938  00EF0F  33                 	db	51
   939  00EF10  34                 	db	52
   940  00EF11  35                 	db	53
   941  00EF12  36                 	db	54
   942  00EF13  37                 	db	55
   943  00EF14  38                 	db	56
   944  00EF15  39                 	db	57
   945  00EF16  61                 	db	97
   946  00EF17  62                 	db	98
   947  00EF18  63                 	db	99
   948  00EF19  64                 	db	100
   949  00EF1A  65                 	db	101
   950  00EF1B  66                 	db	102
   951  00EF1C  00                 	db	0
   952  00EF1D                     __end_of_HexTable:
   953                           	opt stack 0
   954  00EF1D                     _hKel:
   955                           	opt stack 0
   956  00EF1D  0000               	dw	0
   957  00EF1F  0000               	dw	0
   958  00EF21  4952               	dw	18770
   959  00EF23  399D               	dw	14749
   960  00EF25  4952               	dw	18770
   961  00EF27  3A9D               	dw	15005
   962  00EF29  64C3               	dw	25795
   963  00EF2B  3B2A               	dw	15146
   964  00EF2D  0275               	dw	629
   965  00EF2F  3B9A               	dw	15258
   966  00EF31  34D7               	dw	13527
   967  00EF33  3BEF               	dw	15343
   968  00EF35  64C3               	dw	25795
   969  00EF37  3C2A               	dw	15402
   970  00EF39  6042               	dw	24642
   971  00EF3B  3C65               	dw	15461
   972  00EF3D  182B               	dw	6187
   973  00EF3F  3C95               	dw	15509
   974  00EF41  C711               	dw	50961
   975  00EF43  3CBA               	dw	15546
   976  00EF45  6042               	dw	24642
   977  00EF47  3CE5               	dw	15589
   978  00EF49  A027               	dw	40999
   979  00EF4B  3D09               	dw	15625
   980  00EF4D  9C78               	dw	40056
   981  00EF4F  3D22               	dw	15650
   982  00EF51  A512               	dw	42258
   983  00EF53  3D3D               	dw	15677
   984  00EF55  511A               	dw	20762
   985  00EF57  3D5A               	dw	15706
   986  00EF59  A090               	dw	41104
   987  00EF5B  3D78               	dw	15736
   988  00EF5D  7E28               	dw	32296
   989  00EF5F  3D8C               	dw	15756
   990  00EF61  7DBF               	dw	32191
   991  00EF63  3D9D               	dw	15773
   992  00EF65  1AA0               	dw	6816
   993  00EF67  3DAF               	dw	15791
   994  00EF69  BDA5               	dw	48549
   995  00EF6B  3DC1               	dw	15809
   996  00EF6D  FDF4               	dw	65012
   997  00EF6F  3DD4               	dw	15828
   998  00EF71  0FF9               	dw	4089
   999  00EF73  3DE9               	dw	15849
  1000  00EF75  BF48               	dw	48968
  1001  00EF77  3DFD               	dw	15869
  1002  00EF79  A027               	dw	40999
  1003  00EF7B  3E09               	dw	15881
  1004  00EF7D  AF4F               	dw	44879
  1005  00EF7F  3E14               	dw	15892
  1006  00EF81  0D1B               	dw	3355
  1007  00EF83  3E20               	dw	15904
  1008  00EF85  9F56               	dw	40790
  1009  00EF87  3E2B               	dw	15915
  1010  00EF89  9A6B               	dw	39531
  1011  00EF8B  3E37               	dw	15927
  1012  00EF8D  E426               	dw	58406
  1013  00EF8F  3E43               	dw	15939
  1014  00EF91  624E               	dw	25166
  1015  00EF93  3E50               	dw	15952
  1016  00EF95  2F1B               	dw	12059
  1017  00EF97  3E5D               	dw	15965
  1018  00EF99  3055               	dw	12373
  1019  00EF9B  3E6A               	dw	15978
  1020  00EF9D  8034               	dw	32820
  1021  00EF9F  3E77               	dw	15991
  1022  00EFA1  7525               	dw	29989
  1023  00EFA3  3E82               	dw	16002
  1024  00EFA5  5183               	dw	20867
  1025  00EFA7  3E89               	dw	16009
  1026  00EFA9  4817               	dw	18455
  1027  00EFAB  3E90               	dw	16016
  1028  00EFAD  4BC7               	dw	19399
  1029  00EFAF  3E97               	dw	16023
  1030  00EFB1  69AD               	dw	27053
  1031  00EFB3  3E9E               	dw	16030
  1032  00EFB5  A1CB               	dw	41419
  1033  00EFB7  3EA5               	dw	16037
  1034  00EFB9  E704               	dw	59140
  1035  00EFBB  3EAC               	dw	16044
  1036  00EFBD  3958               	dw	14680
  1037  00EFBF  3EB4               	dw	16052
  1038  00EFC1  A5E3               	dw	42467
  1039  00EFC3  3EBB               	dw	16059
  1040  00EFC5  126F               	dw	4719
  1041  00EFC7  3EC3               	dw	16067
  1042  00EFC9  9931               	dw	39217
  1043  00EFCB  3ECA               	dw	16074
  1044  00EFCD  1FF3               	dw	8179
  1045  00EFCF  3ED2               	dw	16082
  1046  00EFD1  C0EC               	dw	49388
  1047  00EFD3  3ED9               	dw	16089
  1048  00EFD5  54CA               	dw	21706
  1049  00EFD7  3EE1               	dw	16097
  1050  00EFD9  02DE               	dw	734
  1051  00EFDB  3EE9               	dw	16105
  1052  00EFDD  A3D7               	dw	41943
  1053  00EFDF  3EF0               	dw	16112
  1054  00EFE1  51EC               	dw	20972
  1055  00EFE3  3EF8               	dw	16120
  1056  00EFE5  0000               	dw	0
  1057  00EFE7  3F00               	dw	16128
  1058  00EFE9  D70A               	dw	55050
  1059  00EFEB  3F03               	dw	16131
  1060  00EFED  AE14               	dw	44564
  1061  00EFEF  3F07               	dw	16135
  1062  00EFF1  7E91               	dw	32401
  1063  00EFF3  3F0B               	dw	16139
  1064  00EFF5  559B               	dw	21915
  1065  00EFF7  3F0F               	dw	16143
  1066  00EFF9  2618               	dw	9752
  1067  00EFFB  3F13               	dw	16147
  1068  00EFFD  F007               	dw	61447
  1069  00EFFF  3F16               	dw	16150
  1070  00F001  B368               	dw	45928
  1071  00F003  3F1A               	dw	16154
  1072  00F005  76C9               	dw	30409
  1073  00F007  3F1E               	dw	16158
  1074  00F009  2D0E               	dw	11534
  1075  00F00B  3F22               	dw	16162
  1076  00F00D  E354               	dw	58196
  1077  00F00F  3F25               	dw	16165
  1078  00F011  8C7E               	dw	35966
  1079  00F013  3F29               	dw	16169
  1080  00F015  2F1B               	dw	12059
  1081  00F017  3F2D               	dw	16173
  1082  00F019  CB29               	dw	52009
  1083  00F01B  3F30               	dw	16176
  1084  00F01D  5A1D               	dw	23069
  1085  00F01F  3F34               	dw	16180
  1086  00F021  E282               	dw	57986
  1087  00F023  3F37               	dw	16183
  1088  00F025  573F               	dw	22335
  1089  00F027  3F3B               	dw	16187
  1090  00F029  C56D               	dw	50541
  1091  00F02B  3F3E               	dw	16190
  1092  00F02D  1FF3               	dw	8179
  1093  00F02F  3F42               	dw	16194
  1094  00F031  73EB               	dw	29675
  1095  00F033  3F45               	dw	16197
  1096  00F035  B439               	dw	46137
  1097  00F037  3F48               	dw	16200
  1098  00F039  E76D               	dw	59245
  1099  00F03B  3F4B               	dw	16203
  1100  00F03D  06F7               	dw	1783
  1101  00F03F  3F4F               	dw	16207
  1102  00F041  1965               	dw	6501
  1103  00F043  3F52               	dw	16210
  1104  00F045  182B               	dw	6187
  1105  00F047  3F55               	dw	16213
  1106  00F049  0347               	dw	839
  1107  00F04B  3F58               	dw	16216
  1108  00F04D  D42C               	dw	54316
  1109  00F04F  3F5A               	dw	16218
  1110  00F051  97F6               	dw	38902
  1111  00F053  3F5D               	dw	16221
  1112  00F055  4817               	dw	18455
  1113  00F057  3F60               	dw	16224
  1114  00F059  DE01               	dw	56833
  1115  00F05B  3F62               	dw	16226
  1116  00F05D  6042               	dw	24642
  1117  00F05F  3F65               	dw	16229
  1118  00F061  C84B               	dw	51275
  1119  00F063  3F67               	dw	16231
  1120  00F065  1CAC               	dw	7340
  1121  00F067  3F6A               	dw	16234
  1122  00F069  5048               	dw	20552
  1123  00F06B  3F6C               	dw	16236
  1124  00F06D  703B               	dw	28731
  1125  00F06F  3F6E               	dw	16238
  1126  00F071  6F69               	dw	28521
  1127  00F073  3F70               	dw	16240
  1128  00F075  5AEE               	dw	23278
  1129  00F077  3F72               	dw	16242
  1130  00F079  25AF               	dw	9647
  1131  00F07B  3F74               	dw	16244
  1132  00F07D  D639               	dw	54841
  1133  00F07F  3F75               	dw	16245
  1134  00F081  65FE               	dw	26110
  1135  00F083  3F77               	dw	16247
  1136  00F085  D4FE               	dw	54526
  1137  00F087  3F78               	dw	16248
  1138  00F089  29C7               	dw	10695
  1139  00F08B  3F7A               	dw	16250
  1140  00F08D  573F               	dw	22335
  1141  00F08F  3F7B               	dw	16251
  1142  00F091  6A7F               	dw	27263
  1143  00F093  3F7C               	dw	16252
  1144  00F095  566D               	dw	22125
  1145  00F097  3F7D               	dw	16253
  1146  00F099  2824               	dw	10276
  1147  00F09B  3F7E               	dw	16254
  1148  00F09D  CBFB               	dw	52219
  1149  00F09F  3F7E               	dw	16254
  1150  00F0A1  559B               	dw	21915
  1151  00F0A3  3F7F               	dw	16255
  1152  00F0A5  B15B               	dw	45403
  1153  00F0A7  3F7F               	dw	16255
  1154  00F0A9  EC57               	dw	60503
  1155  00F0AB  3F7F               	dw	16255
  1156  00F0AD  0000               	dw	0
  1157  00F0AF  3F80               	dw	16256
  1158  00F0B1                     __end_of_hKel:
  1159                           	opt stack 0
  1160  00F0B1                     _hKcy:
  1161                           	opt stack 0
  1162  00F0B1  0000               	dw	0
  1163  00F0B3  0000               	dw	0
  1164  00F0B5  D289               	dw	53897
  1165  00F0B7  3ADE               	dw	15070
  1166  00F0B9  4952               	dw	18770
  1167  00F0BB  3B9D               	dw	15261
  1168  00F0BD  8A72               	dw	35442
  1169  00F0BF  3C0E               	dw	15374
  1170  00F0C1  8BAC               	dw	35756
  1171  00F0C3  3C5B               	dw	15451
  1172  00F0C5  30BE               	dw	12478
  1173  00F0C7  3C99               	dw	15513
  1174  00F0C9  B439               	dw	46137
  1175  00F0CB  3CC8               	dw	15560
  1176  00F0CD  5048               	dw	20552
  1177  00F0CF  3CFC               	dw	15612
  1178  00F0D1  999A               	dw	39322
  1179  00F0D3  3D19               	dw	15641
  1180  00F0D5  AE7D               	dw	44669
  1181  00F0D7  3D36               	dw	15670
  1182  00F0D9  FDF4               	dw	65012
  1183  00F0DB  3D54               	dw	15700
  1184  00F0DD  F0D8               	dw	61656
  1185  00F0DF  3D74               	dw	15732
  1186  00F0E1  4396               	dw	17302
  1187  00F0E3  3D8B               	dw	15755
  1188  00F0E5  779A               	dw	30618
  1189  00F0E7  3D9C               	dw	15772
  1190  00F0E9  48E9               	dw	18665
  1191  00F0EB  3DAE               	dw	15790
  1192  00F0ED  B780               	dw	46976
  1193  00F0EF  3DC0               	dw	15808
  1194  00F0F1  8EF3               	dw	36595
  1195  00F0F3  3DD3               	dw	15827
  1196  00F0F5  CF42               	dw	53058
  1197  00F0F7  3DE6               	dw	15846
  1198  00F0F9  ACDA               	dw	44250
  1199  00F0FB  3DFA               	dw	15866
  1200  00F0FD  79A7               	dw	31143
  1201  00F0FF  3E07               	dw	15879
  1202  00F101  D14E               	dw	53582
  1203  00F103  3E11               	dw	15889
  1204  00F105  5D64               	dw	23908
  1205  00F107  3E1C               	dw	15900
  1206  00F109  03B0               	dw	944
  1207  00F10B  3E27               	dw	15911
  1208  00F10D  F8A1               	dw	63649
  1209  00F10F  3E31               	dw	15921
  1210  00F111  ED91               	dw	60817
  1211  00F113  3E3C               	dw	15932
  1212  00F115  3127               	dw	12583
  1213  00F117  3E48               	dw	15944
  1214  00F119  8EF3               	dw	36595
  1215  00F11B  3E53               	dw	15955
  1216  00F11D  06F7               	dw	1783
  1217  00F11F  3E5F               	dw	15967
  1218  00F121  B368               	dw	45928
  1219  00F123  3E6A               	dw	15978
  1220  00F125  7A10               	dw	31248
  1221  00F127  3E76               	dw	15990
  1222  00F129  2D77               	dw	11639
  1223  00F12B  3E81               	dw	16001
  1224  00F12D  2B02               	dw	11010
  1225  00F12F  3E87               	dw	16007
  1226  00F131  42C4               	dw	17092
  1227  00F133  3E8D               	dw	16013
  1228  00F135  5A86               	dw	23174
  1229  00F137  3E93               	dw	16019
  1230  00F139  7F63               	dw	32611
  1231  00F13B  3E99               	dw	16025
  1232  00F13D  B15B               	dw	45403
  1233  00F13F  3E9F               	dw	16031
  1234  00F141  F06F               	dw	61551
  1235  00F143  3EA5               	dw	16037
  1236  00F145  3C9F               	dw	15519
  1237  00F147  3EAC               	dw	16044
  1238  00F149  88CE               	dw	35022
  1239  00F14B  3EB2               	dw	16050
  1240  00F14D  E219               	dw	57881
  1241  00F14F  3EB8               	dw	16056
  1242  00F151  3B64               	dw	15204
  1243  00F153  3EBF               	dw	16063
  1244  00F155  A1CB               	dw	41419
  1245  00F157  3EC5               	dw	16069
  1246  00F159  154D               	dw	5453
  1247  00F15B  3ECC               	dw	16076
  1248  00F15D  88CE               	dw	35022
  1249  00F15F  3ED2               	dw	16082
  1250  00F161  FC50               	dw	64592
  1251  00F163  3ED8               	dw	16088
  1252  00F165  6FD2               	dw	28626
  1253  00F167  3EDF               	dw	16095
  1254  00F169  F06F               	dw	61551
  1255  00F16B  3EE5               	dw	16101
  1256  00F16D  710D               	dw	28941
  1257  00F16F  3EEC               	dw	16108
  1258  00F171  F1AA               	dw	61866
  1259  00F173  3EF2               	dw	16114
  1260  00F175  7F63               	dw	32611
  1261  00F177  3EF9               	dw	16121
  1262  00F179  0000               	dw	0
  1263  00F17B  3F00               	dw	16128
  1264  00F17D  404F               	dw	16463
  1265  00F17F  3F03               	dw	16131
  1266  00F181  872B               	dw	34603
  1267  00F183  3F06               	dw	16134
  1268  00F185  C77A               	dw	51066
  1269  00F187  3F09               	dw	16137
  1270  00F189  07C8               	dw	1992
  1271  00F18B  3F0D               	dw	16141
  1272  00F18D  4817               	dw	18455
  1273  00F18F  3F10               	dw	16144
  1274  00F191  81D8               	dw	33240
  1275  00F193  3F13               	dw	16147
  1276  00F195  BB99               	dw	48025
  1277  00F197  3F16               	dw	16150
  1278  00F199  F55A               	dw	62810
  1279  00F19B  3F19               	dw	16153
  1280  00F19D  2F1B               	dw	12059
  1281  00F19F  3F1D               	dw	16157
  1282  00F1A1  624E               	dw	25166
  1283  00F1A3  3F20               	dw	16160
  1284  00F1A5  8EF3               	dw	36595
  1285  00F1A7  3F23               	dw	16163
  1286  00F1A9  BB99               	dw	48025
  1287  00F1AB  3F26               	dw	16166
  1288  00F1AD  E1B1               	dw	57777
  1289  00F1AF  3F29               	dw	16169
  1290  00F1B1  07C8               	dw	1992
  1291  00F1B3  3F2D               	dw	16173
  1292  00F1B5  2752               	dw	10066
  1293  00F1B7  3F30               	dw	16176
  1294  00F1B9  404F               	dw	16463
  1295  00F1BB  3F33               	dw	16179
  1296  00F1BD  52BD               	dw	21181
  1297  00F1BF  3F36               	dw	16182
  1298  00F1C1  5E9E               	dw	24222
  1299  00F1C3  3F39               	dw	16185
  1300  00F1C5  6A7F               	dw	27263
  1301  00F1C7  3F3C               	dw	16188
  1302  00F1C9  6944               	dw	26948
  1303  00F1CB  3F3F               	dw	16191
  1304  00F1CD  617C               	dw	24956
  1305  00F1CF  3F42               	dw	16194
  1306  00F1D1  5326               	dw	21286
  1307  00F1D3  3F45               	dw	16197
  1308  00F1D5  3E42               	dw	15938
  1309  00F1D7  3F48               	dw	16200
  1310  00F1D9  1C43               	dw	7235
  1311  00F1DB  3F4B               	dw	16203
  1312  00F1DD  F3B6               	dw	62390
  1313  00F1DF  3F4D               	dw	16205
  1314  00F1E1  C49C               	dw	50332
  1315  00F1E3  3F50               	dw	16208
  1316  00F1E5  81D8               	dw	33240
  1317  00F1E7  3F53               	dw	16211
  1318  00F1E9  3F14               	dw	16148
  1319  00F1EB  3F56               	dw	16214
  1320  00F1ED  E8A7               	dw	59559
  1321  00F1EF  3F58               	dw	16216
  1322  00F1F1  8BAC               	dw	35756
  1323  00F1F3  3F5B               	dw	16219
  1324  00F1F5  2196               	dw	8598
  1325  00F1F7  3F5E               	dw	16222
  1326  00F1F9  AA65               	dw	43621
  1327  00F1FB  3F60               	dw	16224
  1328  00F1FD  2618               	dw	9752
  1329  00F1FF  3F63               	dw	16227
  1330  00F201  8E22               	dw	36386
  1331  00F203  3F65               	dw	16229
  1332  00F205  E910               	dw	59664
  1333  00F207  3F67               	dw	16231
  1334  00F209  36E3               	dw	14051
  1335  00F20B  3F6A               	dw	16234
  1336  00F20D  710D               	dw	28941
  1337  00F20F  3F6C               	dw	16236
  1338  00F211  978D               	dw	38797
  1339  00F213  3F6E               	dw	16238
  1340  00F215  B0F2               	dw	45298
  1341  00F217  3F70               	dw	16240
  1342  00F219  B021               	dw	45089
  1343  00F21B  3F72               	dw	16242
  1344  00F21D  9518               	dw	38168
  1345  00F21F  3F74               	dw	16244
  1346  00F221  6666               	dw	26214
  1347  00F223  3F76               	dw	16246
  1348  00F225  1D7E               	dw	7550
  1349  00F227  3F78               	dw	16248
  1350  00F229  BA5E               	dw	47710
  1351  00F22B  3F79               	dw	16249
  1352  00F22D  367A               	dw	13946
  1353  00F22F  3F7B               	dw	16251
  1354  00F231  91D1               	dw	37329
  1355  00F233  3F7C               	dw	16252
  1356  00F235  C5D6               	dw	50646
  1357  00F237  3F7D               	dw	16253
  1358  00F239  C56D               	dw	50541
  1359  00F23B  3F7E               	dw	16254
  1360  00F23D  9097               	dw	37015
  1361  00F23F  3F7F               	dw	16255
  1362  00F241  0000               	dw	0
  1363  00F243  3F80               	dw	16256
  1364  00F245                     __end_of_hKcy:
  1365                           	opt stack 0
  1366  00F245                     _defultSystemData:
  1367                           	opt stack 0
  1368  00F245  04D2               	dw	1234
  1369  00F247  0000               	dw	0
  1370  00F249  00                 	db	0
  1371  00F24A  5F                 	db	95
  1372  00F24B  03E8               	dw	1000
  1373  00F24D  3A98               	dw	15000
  1374  00F24F  0000               	dw	0
  1375  00F251  0BB8               	dw	3000
  1376  00F253  0000               	dw	0
  1377  00F255  0000               	dw	0
  1378  00F257  0000               	dw	0
  1379  00F259  0000               	dw	0
  1380  00F25B  0000               	dw	0
  1381  00F25D  FF38               	dw	65336
  1382  00F25F  FFFF               	dw	65535
  1383  00F261  0000               	dw	0
  1384  00F263  0000               	dw	0
  1385  00F265  0000               	dw	0
  1386  00F267  0000               	dw	0
  1387  00F269  2710               	dw	10000
  1388  00F26B  0000               	dw	0
  1389  00F26D  2710               	dw	10000
  1390  00F26F  0000               	dw	0
  1391  00F271  0000               	dw	0
  1392  00F273  0000               	dw	0
  1393  00F275  0000               	dw	0
  1394  00F277  0000               	dw	0
  1395  00F279  2710               	dw	10000
  1396  00F27B  0000               	dw	0
  1397  00F27D  2710               	dw	10000
  1398  00F27F  0000               	dw	0
  1399  00F281  0000               	dw	0
  1400  00F283  0000               	dw	0
  1401  00F285  00                 	db	0
  1402  00F286  00                 	db	0
  1403  00F287  00                 	db	0
  1404  00F288  00                 	db	0
  1405  00F289  00                 	db	0
  1406  00F28A  00                 	db	0
  1407  00F28B  00                 	db	0
  1408  00F28C  00                 	db	0
  1409  00F28D  00                 	db	0
  1410  00F28E  00                 	db	0
  1411  00F28F  00                 	db	0
  1412  00F290  00                 	db	0
  1413  00F291  00                 	db	0
  1414  00F292  00                 	db	0
  1415  00F293  00                 	db	0
  1416  00F294  00                 	db	0
  1417  00F295  00                 	db	0
  1418  00F296  00                 	db	0
  1419  00F297  00                 	db	0
  1420  00F298  00                 	db	0
  1421  00F299  00                 	db	0
  1422  00F29A  00                 	db	0
  1423  00F29B  00                 	db	0
  1424  00F29C  00                 	db	0
  1425  00F29D  00                 	db	0
  1426  00F29E  00                 	db	0
  1427  00F29F  00                 	db	0
  1428  00F2A0  00                 	db	0
  1429  00F2A1  00                 	db	0
  1430  00F2A2  00                 	db	0
  1431  00F2A3  00                 	db	0
  1432  00F2A4  00                 	db	0
  1433  00F2A5  00                 	db	0
  1434  00F2A6  00                 	db	0
  1435  00F2A7  00                 	db	0
  1436  00F2A8  00                 	db	0
  1437  00F2A9  00                 	db	0
  1438  00F2AA  00                 	db	0
  1439  00F2AB  00                 	db	0
  1440  00F2AC  00                 	db	0
  1441  00F2AD  00                 	db	0
  1442  00F2AE  00                 	db	0
  1443  00F2AF  00                 	db	0
  1444  00F2B0  00                 	db	0
  1445  00F2B1  0000               	dw	0
  1446  00F2B3  0000               	dw	0
  1447  00F2B5  00                 	db	0
  1448  00F2B6  00                 	db	0
  1449  00F2B7  00                 	db	0
  1450  00F2B8  00                 	db	0
  1451  00F2B9  00                 	db	0
  1452  00F2BA  00                 	db	0
  1453  00F2BB  00                 	db	0
  1454  00F2BC  00                 	db	0
  1455  00F2BD  00                 	db	0
  1456  00F2BE  00                 	db	0
  1457  00F2BF  00                 	db	0
  1458  00F2C0  00                 	db	0
  1459  00F2C1  00                 	db	0
  1460  00F2C2  00                 	db	0
  1461  00F2C3  00                 	db	0
  1462  00F2C4  00                 	db	0
  1463  00F2C5  00                 	db	0
  1464  00F2C6  00                 	db	0
  1465  00F2C7  00                 	db	0
  1466  00F2C8  00                 	db	0
  1467  00F2C9  0190               	dw	400
  1468  00F2CB  012C               	dw	300
  1469  00F2CD  00C8               	dw	200
  1470  00F2CF  0064               	dw	100
  1471  00F2D1  0000               	dw	0
  1472  00F2D3  0000               	dw	0
  1473  00F2D5  0000               	dw	0
  1474  00F2D7  00                 	db	0
  1475  00F2D8  00                 	db	0
  1476  00F2D9  2710               	dw	10000
  1477  00F2DB  0000               	dw	0
  1478  00F2DD  2710               	dw	10000
  1479  00F2DF  00                 	db	0
  1480  00F2E0  00                 	db	0
  1481  00F2E1  0000               	dw	0
  1482  00F2E3  0000               	dw	0
  1483  00F2E5  0000               	dw	0
  1484  00F2E7  00                 	db	0
  1485  00F2E8  00                 	db	0
  1486  00F2E9  2710               	dw	10000
  1487  00F2EB  0000               	dw	0
  1488  00F2ED  2710               	dw	10000
  1489  00F2EF  00                 	db	0
  1490  00F2F0  00                 	db	0
  1491  00F2F1  0000               	dw	0
  1492  00F2F3  0000               	dw	0
  1493  00F2F5  0000               	dw	0
  1494  00F2F7  00                 	db	0
  1495  00F2F8  00                 	db	0
  1496  00F2F9  2710               	dw	10000
  1497  00F2FB  0000               	dw	0
  1498  00F2FD  2710               	dw	10000
  1499  00F2FF  00                 	db	0
  1500  00F300  00                 	db	0
  1501  00F301  0000               	dw	0
  1502  00F303  0000               	dw	0
  1503  00F305  0000               	dw	0
  1504  00F307  00                 	db	0
  1505  00F308  00                 	db	0
  1506  00F309  2710               	dw	10000
  1507  00F30B  0000               	dw	0
  1508  00F30D  2710               	dw	10000
  1509  00F30F  00                 	db	0
  1510  00F310  00                 	db	0
  1511  00F311  03E8               	dw	1000
  1512  00F313  0000               	dw	0
  1513  00F315  07D0               	dw	2000
  1514  00F317  0000               	dw	0
  1515  00F319  03E8               	dw	1000
  1516  00F31B  0000               	dw	0
  1517  00F31D  07D0               	dw	2000
  1518  00F31F  0000               	dw	0
  1519  00F321  03E8               	dw	1000
  1520  00F323  0000               	dw	0
  1521  00F325  07D0               	dw	2000
  1522  00F327  0000               	dw	0
  1523  00F329  03E8               	dw	1000
  1524  00F32B  0000               	dw	0
  1525  00F32D  07D0               	dw	2000
  1526  00F32F  0000               	dw	0
  1527  00F331  03B6               	dw	950
  1528  00F333  0000               	dw	0
  1529  00F335                     __end_of_defultSystemData:
  1530                           	opt stack 0
  1531  00F335                     _flashTestbuf:
  1532                           	opt stack 0
  1533  00F335  30                 	db	48
  1534  00F336  31                 	db	49
  1535  00F337  32                 	db	50
  1536  00F338  33                 	db	51
  1537  00F339  34                 	db	52
  1538  00F33A  35                 	db	53
  1539  00F33B  36                 	db	54
  1540  00F33C  37                 	db	55
  1541  00F33D  38                 	db	56
  1542  00F33E  39                 	db	57
  1543  00F33F  30                 	db	48
  1544  00F340  31                 	db	49
  1545  00F341  32                 	db	50
  1546  00F342  33                 	db	51
  1547  00F343  34                 	db	52
  1548  00F344  35                 	db	53
  1549  00F345  36                 	db	54
  1550  00F346  37                 	db	55
  1551  00F347  38                 	db	56
  1552  00F348  39                 	db	57
  1553  00F349  30                 	db	48
  1554  00F34A  31                 	db	49
  1555  00F34B  32                 	db	50
  1556  00F34C  33                 	db	51
  1557  00F34D  34                 	db	52
  1558  00F34E  35                 	db	53
  1559  00F34F  36                 	db	54
  1560  00F350  37                 	db	55
  1561  00F351  38                 	db	56
  1562  00F352  39                 	db	57
  1563  00F353  30                 	db	48
  1564  00F354  31                 	db	49
  1565  00F355  32                 	db	50
  1566  00F356  33                 	db	51
  1567  00F357  34                 	db	52
  1568  00F358  35                 	db	53
  1569  00F359  36                 	db	54
  1570  00F35A  37                 	db	55
  1571  00F35B  38                 	db	56
  1572  00F35C  39                 	db	57
  1573  00F35D  30                 	db	48
  1574  00F35E  31                 	db	49
  1575  00F35F  32                 	db	50
  1576  00F360  33                 	db	51
  1577  00F361  34                 	db	52
  1578  00F362  35                 	db	53
  1579  00F363  36                 	db	54
  1580  00F364  37                 	db	55
  1581  00F365  38                 	db	56
  1582  00F366  39                 	db	57
  1583  00F367  30                 	db	48
  1584  00F368  31                 	db	49
  1585  00F369  32                 	db	50
  1586  00F36A  33                 	db	51
  1587  00F36B  34                 	db	52
  1588  00F36C  35                 	db	53
  1589  00F36D  36                 	db	54
  1590  00F36E  37                 	db	55
  1591  00F36F  38                 	db	56
  1592  00F370  39                 	db	57
  1593  00F371  30                 	db	48
  1594  00F372  31                 	db	49
  1595  00F373  32                 	db	50
  1596  00F374  33                 	db	51
  1597  00F375  00                 	db	0
  1598  00F376                     __end_of_flashTestbuf:
  1599                           	opt stack 0
  1600  0000                     _RTCVALH	set	3933
  1601  0000                     _RTCVALL	set	3932
  1602  0000                     _stRTCCFGbits	set	3935
  1603  0000                     _ALRMCFGbits	set	3931
  1604  0000                     _ALRMRPT	set	3930
  1605  0000                     _PADCFG1bits	set	3924
  1606  0000                     _RTCCFGbits	set	3935
  1607  0000                     _PR2	set	4043
  1608  0000                     _T2CON	set	4042
  1609  0000                     _RCONbits	set	4048
  1610  0000                     _T1CONbits	set	4045
  1611  0000                     _IPR3bits	set	4005
  1612  0000                     _PIR3bits	set	4004
  1613  0000                     _PIE3bits	set	4003
  1614  0000                     _INTCON2bits	set	4081
  1615  0000                     _OSCCONbits	set	4051
  1616  0000                     _FSR0H	set	4074
  1617  0000                     _FSR0L	set	4073
  1618  0000                     _TABLAT	set	4085
  1619  0000                     _TBLPTRU	set	4088
  1620  0000                     _TBLPTRH	set	4087
  1621  0000                     _TBLPTRL	set	4086
  1622  0000                     _EECON1bits	set	4006
  1623  0000                     _INTCONbits	set	4082
  1624  0000                     _INTCON	set	4082
  1625  0000                     _LCDCON	set	4008
  1626  0000                     _LATG	set	3983
  1627  0000                     _TRISG	set	3992
  1628  0000                     _LCDSE5	set	4026
  1629  0000                     _LCDSE4	set	4025
  1630  0000                     _LCDSE3	set	4024
  1631  0000                     _LCDSE2	set	4023
  1632  0000                     _LCDSE1	set	4022
  1633  0000                     _LCDSE0	set	4009
  1634  0000                     _LCDPSbits	set	4010
  1635  0000                     _LCDREGbits	set	4050
  1636  0000                     _LCDREG	set	4050
  1637  0000                     _LCDDATA23	set	3965
  1638  0000                     _LCDDATA22	set	3964
  1639  0000                     _LCDDATA21	set	3963
  1640  0000                     _LCDDATA20	set	3962
  1641  0000                     _LCDDATA19	set	3961
  1642  0000                     _LCDDATA18	set	3960
  1643  0000                     _LCDDATA17	set	3959
  1644  0000                     _LCDDATA16	set	3958
  1645  0000                     _LCDDATA15	set	3957
  1646  0000                     _LCDDATA14	set	3956
  1647  0000                     _LCDDATA13	set	3955
  1648  0000                     _LCDDATA12	set	3954
  1649  0000                     _LCDDATA11	set	3953
  1650  0000                     _LCDDATA10	set	3952
  1651  0000                     _LCDDATA9	set	3951
  1652  0000                     _LCDDATA8	set	3950
  1653  0000                     _LCDDATA7	set	3949
  1654  0000                     _LCDDATA6	set	3948
  1655  0000                     _LCDDATA5	set	3947
  1656  0000                     _LCDDATA4	set	4031
  1657  0000                     _LCDDATA3	set	4030
  1658  0000                     _LCDDATA2	set	4029
  1659  0000                     _LCDDATA1	set	4028
  1660  0000                     _LCDDATA0	set	4027
  1661  0000                     _PORTB	set	3969
  1662  0000                     _ADRESL	set	4035
  1663  0000                     _ADRESH	set	4036
  1664  0000                     _IPR1bits	set	3999
  1665  0000                     _PIE1bits	set	3997
  1666  0000                     _PIR1bits	set	3998
  1667  0000                     _ADCON0bits	set	4034
  1668  0000                     _ADCON2bits	set	4032
  1669  0000                     _ADCON1	set	4033
  1670  0000                     _PORTC	set	3970
  1671  0000                     _LATC	set	3979
  1672  0000                     _TRISC	set	3988
  1673  0000                     _LATB	set	3978
  1674  0000                     _TRISB	set	3987
  1675  0000                     _LATH	set	3984
  1676  0000                     _TRISH	set	3993
  1677  00F376                     STR_2:
  1678  00F376  20                 	db	32
  1679  00F377  20                 	db	32
  1680  00F378  20                 	db	32
  1681  00F379  20                 	db	32
  1682  00F37A  20                 	db	32
  1683  00F37B  20                 	db	32
  1684  00F37C  20                 	db	32
  1685  00F37D  20                 	db	32
  1686  00F37E  00                 	db	0
  1687  00F37F                     STR_32:
  1688  00F37F  20                 	db	32
  1689  00F380  73                 	db	115	;'s'
  1690  00F381  74                 	db	116	;'t'
  1691  00F382  61                 	db	97	;'a'
  1692  00F383  20                 	db	32
  1693  00F384  6E                 	db	110	;'n'
  1694  00F385  6F                 	db	111	;'o'
  1695  00F386  72                 	db	114	;'r'
  1696  00F387  00                 	db	0
  1697  00F388                     STR_33:
  1698  00F388  20                 	db	32
  1699  00F389  73                 	db	115	;'s'
  1700  00F38A  74                 	db	116	;'t'
  1701  00F38B  61                 	db	97	;'a'
  1702  00F38C  20                 	db	32
  1703  00F38D  74                 	db	116	;'t'
  1704  00F38E  73                 	db	115	;'s'
  1705  00F38F  74                 	db	116	;'t'
  1706  00F390  00                 	db	0
  1707  00F391                     STR_23:
  1708  00F391  65                 	db	101	;'e'
  1709  00F392  70                 	db	112	;'p'
  1710  00F393  30                 	db	48	;'0'
  1711  00F394  30                 	db	48	;'0'
  1712  00F395  00                 	db	0
  1713  00F396                     STR_25:
  1714  00F396  65                 	db	101	;'e'
  1715  00F397  70                 	db	112	;'p'
  1716  00F398  31                 	db	49	;'1'
  1717  00F399  30                 	db	48	;'0'
  1718  00F39A  00                 	db	0
  1719  00F39B                     STR_16:
  1720  00F39B  20                 	db	32
  1721  00F39C  61                 	db	97	;'a'
  1722  00F39D  6C                 	db	108	;'l'
  1723  00F39E  30                 	db	48	;'0'
  1724  00F39F  00                 	db	0
  1725  00F3A0                     STR_24:
  1726  00F3A0  65                 	db	101	;'e'
  1727  00F3A1  70                 	db	112	;'p'
  1728  00F3A2  30                 	db	48	;'0'
  1729  00F3A3  31                 	db	49	;'1'
  1730  00F3A4  00                 	db	0
  1731  00F3A5                     STR_26:
  1732  00F3A5  65                 	db	101	;'e'
  1733  00F3A6  70                 	db	112	;'p'
  1734  00F3A7  31                 	db	49	;'1'
  1735  00F3A8  31                 	db	49	;'1'
  1736  00F3A9  00                 	db	0
  1737  00F3AA                     STR_1:
  1738  00F3AA  63                 	db	99	;'c'
  1739  00F3AB  73                 	db	115	;'s'
  1740  00F3AC  36                 	db	54	;'6'
  1741  00F3AD  36                 	db	54	;'6'
  1742  00F3AE  00                 	db	0
  1743  00F3AF                     STR_28:
  1744  00F3AF  6C                 	db	108	;'l'
  1745  00F3B0  70                 	db	112	;'p'
  1746  00F3B1  30                 	db	48	;'0'
  1747  00F3B2  48                 	db	72	;'H'
  1748  00F3B3  00                 	db	0
  1749  00F3B4                     STR_30:
  1750  00F3B4  6C                 	db	108	;'l'
  1751  00F3B5  70                 	db	112	;'p'
  1752  00F3B6  31                 	db	49	;'1'
  1753  00F3B7  48                 	db	72	;'H'
  1754  00F3B8  00                 	db	0
  1755  00F3B9                     STR_12:
  1756  00F3B9  20                 	db	32
  1757  00F3BA  20                 	db	32
  1758  00F3BB  48                 	db	72	;'H'
  1759  00F3BC  62                 	db	98	;'b'
  1760  00F3BD  00                 	db	0
  1761  00F3BE                     STR_11:
  1762  00F3BE  20                 	db	32
  1763  00F3BF  20                 	db	32
  1764  00F3C0  20                 	db	32
  1765  00F3C1  64                 	db	100	;'d'
  1766  00F3C2  00                 	db	0
  1767  00F3C3                     STR_19:
  1768  00F3C3  20                 	db	32
  1769  00F3C4  68                 	db	104	;'h'
  1770  00F3C5  2D                 	db	45
  1771  00F3C6  64                 	db	100	;'d'
  1772  00F3C7  00                 	db	0
  1773  00F3C8                     STR_21:
  1774  00F3C8  20                 	db	32
  1775  00F3C9  70                 	db	112	;'p'
  1776  00F3CA  2D                 	db	45
  1777  00F3CB  64                 	db	100	;'d'
  1778  00F3CC  00                 	db	0
  1779  00F3CD                     STR_5:
  1780  00F3CD  20                 	db	32
  1781  00F3CE  70                 	db	112	;'p'
  1782  00F3CF  73                 	db	115	;'s'
  1783  00F3D0  64                 	db	100	;'d'
  1784  00F3D1  00                 	db	0
  1785  00F3D2                     STR_10:
  1786  00F3D2  20                 	db	32
  1787  00F3D3  20                 	db	32
  1788  00F3D4  20                 	db	32
  1789  00F3D5  68                 	db	104	;'h'
  1790  00F3D6  00                 	db	0
  1791  00F3D7                     STR_9:
  1792  00F3D7  20                 	db	32
  1793  00F3D8  20                 	db	32
  1794  00F3D9  20                 	db	32
  1795  00F3DA  6C                 	db	108	;'l'
  1796  00F3DB  00                 	db	0
  1797  00F3DC                     STR_27:
  1798  00F3DC  6C                 	db	108	;'l'
  1799  00F3DD  70                 	db	112	;'p'
  1800  00F3DE  30                 	db	48	;'0'
  1801  00F3DF  6C                 	db	108	;'l'
  1802  00F3E0  00                 	db	0
  1803  00F3E1                     STR_29:
  1804  00F3E1  6C                 	db	108	;'l'
  1805  00F3E2  70                 	db	112	;'p'
  1806  00F3E3  31                 	db	49	;'1'
  1807  00F3E4  6C                 	db	108	;'l'
  1808  00F3E5  00                 	db	0
  1809  00F3E6                     STR_31:
  1810  00F3E6  20                 	db	32
  1811  00F3E7  73                 	db	115	;'s'
  1812  00F3E8  63                 	db	99	;'c'
  1813  00F3E9  6C                 	db	108	;'l'
  1814  00F3EA  00                 	db	0
  1815  00F3EB                     STR_6:
  1816  00F3EB  20                 	db	32
  1817  00F3EC  20                 	db	32
  1818  00F3ED  20                 	db	32
  1819  00F3EE  70                 	db	112	;'p'
  1820  00F3EF  00                 	db	0
  1821  00F3F0                     STR_7:
  1822  00F3F0  20                 	db	32
  1823  00F3F1  20                 	db	32
  1824  00F3F2  66                 	db	102	;'f'
  1825  00F3F3  73                 	db	115	;'s'
  1826  00F3F4  00                 	db	0
  1827  00F3F5                     STR_18:
  1828  00F3F5  20                 	db	32
  1829  00F3F6  68                 	db	104	;'h'
  1830  00F3F7  2D                 	db	45
  1831  00F3F8  75                 	db	117	;'u'
  1832  00F3F9  00                 	db	0
  1833  00F3FA                     STR_20:
  1834  00F3FA  20                 	db	32
  1835  00F3FB  70                 	db	112	;'p'
  1836  00F3FC  2D                 	db	45
  1837  00F3FD  75                 	db	117	;'u'
  1838  00F3FE  00                 	db	0
  1839  0000                     
  1840                           ; #config settings
  1841  00F3FF  00                 	db	0	; dummy byte at the end
  1842  0000                     
  1843                           	psect	cinit
  1844  0078E0                     __pcinit:
  1845                           	opt stack 0
  1846  0078E0                     start_initialization:
  1847                           	opt stack 0
  1848  0078E0                     __initialization:
  1849                           	opt stack 0
  1850                           
  1851                           ; Initialize objects allocated to BANK1 (13 bytes)
  1852                           ; load TBLPTR registers with __pidataBANK1
  1853  0078E0  0E76               	movlw	low __pidataBANK1
  1854  0078E2  6EF6               	movwf	tblptrl,c
  1855  0078E4  0EA3               	movlw	high __pidataBANK1
  1856  0078E6  6EF7               	movwf	tblptrh,c
  1857  0078E8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1858  0078EA  6EF8               	movwf	tblptru,c
  1859  0078EC  EE01  F0F0         	lfsr	0,__pdataBANK1
  1860  0078F0  EE10 F00D          	lfsr	1,13
  1861  0078F4                     copy_data0:
  1862  0078F4  0009               	tblrd		*+
  1863  0078F6  CFF5 FFEE          	movff	tablat,postinc0
  1864  0078FA  50E5               	movf	postdec1,w,c
  1865  0078FC  50E1               	movf	fsr1l,w,c
  1866  0078FE  E1FA               	bnz	copy_data0
  1867                           
  1868                           ; Initialize objects allocated to BANK0 (1 bytes)
  1869                           ; load TBLPTR registers with __pidataBANK0
  1870  007900  0EC0               	movlw	low __pidataBANK0
  1871  007902  6EF6               	movwf	tblptrl,c
  1872  007904  0EA3               	movlw	high __pidataBANK0
  1873  007906  6EF7               	movwf	tblptrh,c
  1874  007908  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1875  00790A  6EF8               	movwf	tblptru,c
  1876  00790C  0009               	tblrd		*+	;fetch initializer
  1877  00790E  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1878                           
  1879                           ; Clear objects allocated to BANK5 (256 bytes)
  1880  007912  EE05  F000         	lfsr	0,__pbssBANK5
  1881  007916  EE11 F000          	lfsr	1,256
  1882  00791A                     clear_0:
  1883  00791A  6AEE               	clrf	postinc0,c
  1884  00791C  50E5               	movf	postdec1,w,c
  1885  00791E  50E1               	movf	fsr1l,w,c
  1886  007920  E1FC               	bnz	clear_0
  1887  007922  50E2               	movf	fsr1h,w,c
  1888  007924  E1FA               	bnz	clear_0
  1889                           
  1890                           ; Clear objects allocated to BANK4 (162 bytes)
  1891  007926  EE04  F000         	lfsr	0,__pbssBANK4
  1892  00792A  0EA2               	movlw	162
  1893  00792C                     clear_1:
  1894  00792C  6AEE               	clrf	postinc0,c
  1895  00792E  06E8               	decf	wreg,f,c
  1896  007930  E1FD               	bnz	clear_1
  1897                           
  1898                           ; Clear objects allocated to BANK3 (202 bytes)
  1899  007932  EE03  F000         	lfsr	0,__pbssBANK3
  1900  007936  0ECA               	movlw	202
  1901  007938                     clear_2:
  1902  007938  6AEE               	clrf	postinc0,c
  1903  00793A  06E8               	decf	wreg,f,c
  1904  00793C  E1FD               	bnz	clear_2
  1905                           
  1906                           ; Clear objects allocated to BANK2 (256 bytes)
  1907  00793E  EE02  F000         	lfsr	0,__pbssBANK2
  1908  007942  EE11 F000          	lfsr	1,256
  1909  007946                     clear_3:
  1910  007946  6AEE               	clrf	postinc0,c
  1911  007948  50E5               	movf	postdec1,w,c
  1912  00794A  50E1               	movf	fsr1l,w,c
  1913  00794C  E1FC               	bnz	clear_3
  1914  00794E  50E2               	movf	fsr1h,w,c
  1915  007950  E1FA               	bnz	clear_3
  1916                           
  1917                           ; Clear objects allocated to BANK1 (240 bytes)
  1918  007952  EE01  F000         	lfsr	0,__pbssBANK1
  1919  007956  0EF0               	movlw	240
  1920  007958                     clear_4:
  1921  007958  6AEE               	clrf	postinc0,c
  1922  00795A  06E8               	decf	wreg,f,c
  1923  00795C  E1FD               	bnz	clear_4
  1924                           
  1925                           ; Clear objects allocated to BANK0 (23 bytes)
  1926  00795E  EE00  F0E8         	lfsr	0,__pbssBANK0
  1927  007962  0E17               	movlw	23
  1928  007964                     clear_5:
  1929  007964  6AEE               	clrf	postinc0,c
  1930  007966  06E8               	decf	wreg,f,c
  1931  007968  E1FD               	bnz	clear_5
  1932                           
  1933                           ; Clear objects allocated to COMRAM (31 bytes)
  1934  00796A  EE00  F021         	lfsr	0,__pbssCOMRAM
  1935  00796E  0E1F               	movlw	31
  1936  007970                     clear_6:
  1937  007970  6AEE               	clrf	postinc0,c
  1938  007972  06E8               	decf	wreg,f,c
  1939  007974  E1FD               	bnz	clear_6
  1940  007976                     end_of_initialization:
  1941                           	opt stack 0
  1942  007976                     __end_of__initialization:
  1943                           	opt stack 0
  1944  007976  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1945  007978  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1946  00797A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1947  00797C  6EF8               	movwf	tblptru,c
  1948  00797E  0100               	movlb	0
  1949  007980  EFC9  F047         	goto	_main	;jump to C main() function
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           postdec1	equ	0xFE5
  1957                           fsr1h	equ	0xFE2
  1958                           fsr1l	equ	0xFE1
  1959                           
  1960                           	psect	bssCOMRAM
  1961  000021                     __pbssCOMRAM:
  1962                           	opt stack 0
  1963  000021                     _adc_iPrEx:
  1964                           	opt stack 0
  1965  000021                     	ds	4
  1966  000025                     _userTicker_ms:
  1967                           	opt stack 0
  1968  000025                     	ds	2
  1969  000027                     _p_prEepromObj:
  1970                           	opt stack 0
  1971  000027                     	ds	2
  1972  000029                     _pdiff_prEepromObj:
  1973                           	opt stack 0
  1974  000029                     	ds	2
  1975  00002B                     _dlyTickerEn:
  1976                           	opt stack 0
  1977  00002B                     	ds	1
  1978  00002C                     _st_Bj:
  1979                           	opt stack 0
  1980  00002C                     	ds	1
  1981  00002D                     _pcf8574Value:
  1982                           	opt stack 0
  1983  00002D                     	ds	1
  1984  00002E                     _glbEvent:
  1985                           	opt stack 0
  1986  00002E                     	ds	1
  1987  00002F                     _sensorPowerOn:
  1988                           	opt stack 0
  1989  00002F                     	ds	1
  1990  000030                     _calibCol:
  1991                           	opt stack 0
  1992  000030                     	ds	1
  1993  000031                     _calibRow:
  1994                           	opt stack 0
  1995  000031                     	ds	1
  1996  000032                     _subMenu:
  1997                           	opt stack 0
  1998  000032                     	ds	1
  1999  000033                     _menu:
  2000                           	opt stack 0
  2001  000033                     	ds	1
  2002  000034                     _lcdTwinkle:
  2003                           	opt stack 0
  2004  000034                     	ds	1
  2005  000035                     _m_floatAdj:
  2006                           	opt stack 0
  2007  000035                     	ds	4
  2008  000039                     _adjValue:
  2009                           	opt stack 0
  2010  000039                     	ds	4
  2011  00003D                     _passWord:
  2012                           	opt stack 0
  2013  00003D                     	ds	2
  2014  00003F                     _adjLocation:
  2015                           	opt stack 0
  2016  00003F                     	ds	1
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           postdec1	equ	0xFE5
  2024                           fsr1h	equ	0xFE2
  2025                           fsr1l	equ	0xFE1
  2026                           
  2027                           	psect	bssBANK0
  2028  0000E8                     __pbssBANK0:
  2029                           	opt stack 0
  2030  0000E8                     _rtHight:
  2031                           	opt stack 0
  2032  0000E8                     	ds	4
  2033  0000EC                     _pAds1115PrObj:
  2034                           	opt stack 0
  2035  0000EC                     	ds	2
  2036  0000EE                     _pAds1115DiffPrObj:
  2037                           	opt stack 0
  2038  0000EE                     	ds	2
  2039  0000F0                     _sensorSimpleTsLong:
  2040                           	opt stack 0
  2041  0000F0                     	ds	1
  2042  0000F1                     _sensorSimpleEn:
  2043                           	opt stack 0
  2044  0000F1                     	ds	1
  2045  0000F2                     _inSocAdcSampleFinish:
  2046                           	opt stack 0
  2047  0000F2                     	ds	1
  2048  0000F3                     _inSocAdcSampleCh:
  2049                           	opt stack 0
  2050  0000F3                     	ds	1
  2051  0000F4                     _inSocAdcSampleCount:
  2052                           	opt stack 0
  2053  0000F4                     	ds	1
  2054  0000F5                     _PrChipSampleFinish:
  2055                           	opt stack 0
  2056  0000F5                     	ds	1
  2057  0000F6                     _prChipSampleCount:
  2058                           	opt stack 0
  2059  0000F6                     	ds	1
  2060  0000F7                     _prChipSampleCh:
  2061                           	opt stack 0
  2062  0000F7                     	ds	1
  2063  0000F8                     _diffPrChipSampleFinish:
  2064                           	opt stack 0
  2065  0000F8                     	ds	1
  2066  0000F9                     _diffPrChipSampCh:
  2067                           	opt stack 0
  2068  0000F9                     	ds	1
  2069  0000FA                     _diffPrChipSampleCount:
  2070                           	opt stack 0
  2071  0000FA                     	ds	1
  2072  0000FB                     _blackEn:
  2073                           	opt stack 0
  2074  0000FB                     	ds	1
  2075  0000FC                     _keyValue:
  2076                           	opt stack 0
  2077  0000FC                     	ds	1
  2078  0000FD                     _dwm:
  2079                           	opt stack 0
  2080  0000FD                     	ds	1
  2081  0000FE                     _rtLevel:
  2082                           	opt stack 0
  2083  0000FE                     	ds	1
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           postdec1	equ	0xFE5
  2091                           fsr1h	equ	0xFE2
  2092                           fsr1l	equ	0xFE1
  2093                           
  2094                           	psect	dataBANK0
  2095  0000FF                     __pdataBANK0:
  2096                           	opt stack 0
  2097  0000FF                     _glNoEventTimeOut:
  2098                           	opt stack 0
  2099  0000FF                     	ds	1
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           postdec1	equ	0xFE5
  2107                           fsr1h	equ	0xFE2
  2108                           fsr1l	equ	0xFE1
  2109                           
  2110                           	psect	bssBANK1
  2111  000100                     __pbssBANK1:
  2112                           	opt stack 0
  2113  000100                     _pLCD:
  2114                           	opt stack 0
  2115  000100                     	ds	24
  2116  000118                     _pcf8574:
  2117                           	opt stack 0
  2118  000118                     	ds	11
  2119  000123                     cal_press@F7863:
  2120                           	opt stack 0
  2121  000123                     	ds	8
  2122  00012B                     _rtExPressure:
  2123                           	opt stack 0
  2124  00012B                     	ds	8
  2125  000133                     _glRtc:
  2126                           	opt stack 0
  2127  000133                     	ds	7
  2128  00013A                     _glTicker:
  2129                           	opt stack 0
  2130  00013A                     	ds	4
  2131  00013E                     ___mflot32_2_int32@F7717:
  2132                           	opt stack 0
  2133  00013E                     	ds	4
  2134  000142                     ___int32_2_mflot32@F7712:
  2135                           	opt stack 0
  2136  000142                     	ds	4
  2137  000146                     _rtTemperatureEx:
  2138                           	opt stack 0
  2139  000146                     	ds	4
  2140  00014A                     _rtPressure:
  2141                           	opt stack 0
  2142  00014A                     	ds	4
  2143  00014E                     _rtTemperatureIn:
  2144                           	opt stack 0
  2145  00014E                     	ds	4
  2146  000152                     _rtVolume:
  2147                           	opt stack 0
  2148  000152                     	ds	4
  2149  000156                     _rtWeight:
  2150                           	opt stack 0
  2151  000156                     	ds	4
  2152  00015A                     _rtDiffPressure:
  2153                           	opt stack 0
  2154  00015A                     	ds	4
  2155  00015E                     _dlyTicker:
  2156                           	opt stack 0
  2157  00015E                     	ds	2
  2158  000160                     _inSocAdcSampleTimer:
  2159                           	opt stack 0
  2160  000160                     	ds	2
  2161  000162                     _PrChipSampleTimer:
  2162                           	opt stack 0
  2163  000162                     	ds	2
  2164  000164                     _diffPrChipSampleTimer:
  2165                           	opt stack 0
  2166  000164                     	ds	2
  2167  000166                     _pAdjValue:
  2168                           	opt stack 0
  2169  000166                     	ds	2
  2170  000168                     _adc_iRef:
  2171                           	opt stack 0
  2172  000168                     	ds	2
  2173  00016A                     _adc_ibat:
  2174                           	opt stack 0
  2175  00016A                     	ds	2
  2176  00016C                     _adc_exPt100:
  2177                           	opt stack 0
  2178  00016C                     	ds	2
  2179  00016E                     _adc_pressure:
  2180                           	opt stack 0
  2181  00016E                     	ds	2
  2182  000170                     _adc_inPt100:
  2183                           	opt stack 0
  2184  000170                     	ds	2
  2185  000172                     _ads1115Chip0:
  2186                           	opt stack 0
  2187  000172                     	ds	16
  2188  000182                     _at24c02Ch0:
  2189                           	opt stack 0
  2190  000182                     	ds	11
  2191  00018D                     _at24c02Ch1:
  2192                           	opt stack 0
  2193  00018D                     	ds	11
  2194  000198                     _sampBufRefInSoc:
  2195                           	opt stack 0
  2196  000198                     	ds	8
  2197  0001A0                     _sampBufBatInSoc:
  2198                           	opt stack 0
  2199  0001A0                     	ds	8
  2200  0001A8                     _sampBufExPr1InSoc:
  2201                           	opt stack 0
  2202  0001A8                     	ds	8
  2203  0001B0                     _sampBufExPr0InSoc:
  2204                           	opt stack 0
  2205  0001B0                     	ds	8
  2206  0001B8                     _sampBufPr:
  2207                           	opt stack 0
  2208  0001B8                     	ds	8
  2209  0001C0                     _sampBufPt100ExB:
  2210                           	opt stack 0
  2211  0001C0                     	ds	8
  2212  0001C8                     _sampBufPt100ExA:
  2213                           	opt stack 0
  2214  0001C8                     	ds	8
  2215  0001D0                     _sampBufDiffPr_S1:
  2216                           	opt stack 0
  2217  0001D0                     	ds	8
  2218  0001D8                     _sampBufDiffPr_D23:
  2219                           	opt stack 0
  2220  0001D8                     	ds	8
  2221  0001E0                     _sampBufDiffPr_D01:
  2222                           	opt stack 0
  2223  0001E0                     	ds	8
  2224  0001E8                     _x_prDiffData:
  2225                           	opt stack 0
  2226  0001E8                     	ds	8
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           postdec1	equ	0xFE5
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           
  2237                           	psect	dataBANK1
  2238  0001F0                     __pdataBANK1:
  2239                           	opt stack 0
  2240  0001F0                     ui_disp_start_cs600@F7726:
  2241                           	opt stack 0
  2242  0001F0                     	ds	6
  2243  0001F6                     _defalutRtc:
  2244                           	opt stack 0
  2245  0001F6                     	ds	7
  2246                           tblptru	equ	0xFF8
  2247                           tblptrh	equ	0xFF7
  2248                           tblptrl	equ	0xFF6
  2249                           tablat	equ	0xFF5
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           postdec1	equ	0xFE5
  2253                           fsr1h	equ	0xFE2
  2254                           fsr1l	equ	0xFE1
  2255                           
  2256                           	psect	bssBANK2
  2257  000200                     __pbssBANK2:
  2258                           	opt stack 0
  2259  000200                     _stSysData:
  2260                           	opt stack 0
  2261  000200                     	ds	240
  2262  0002F0                     _ads1115Chip1:
  2263                           	opt stack 0
  2264  0002F0                     	ds	16
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           postdec1	equ	0xFE5
  2272                           fsr1h	equ	0xFE2
  2273                           fsr1l	equ	0xFE1
  2274                           
  2275                           	psect	bssBANK3
  2276  000300                     __pbssBANK3:
  2277                           	opt stack 0
  2278  000300                     _rtDiffPrBuf:
  2279                           	opt stack 0
  2280  000300                     	ds	16
  2281  000310                     _diff_prCalibTabDef:
  2282                           	opt stack 0
  2283  000310                     	ds	162
  2284  0003B2                     _tmpx:
  2285                           	opt stack 0
  2286  0003B2                     	ds	24
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	bssBANK4
  2298  000400                     __pbssBANK4:
  2299                           	opt stack 0
  2300  000400                     _prCalibTabDef:
  2301                           	opt stack 0
  2302  000400                     	ds	162
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           postinc0	equ	0xFEE
  2308                           wreg	equ	0xFE8
  2309                           postdec1	equ	0xFE5
  2310                           fsr1h	equ	0xFE2
  2311                           fsr1l	equ	0xFE1
  2312                           
  2313                           	psect	bssBANK5
  2314  000500                     __pbssBANK5:
  2315                           	opt stack 0
  2316  000500                     _globleBuffer:
  2317                           	opt stack 0
  2318  000500                     	ds	256
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           postdec1	equ	0xFE5
  2326                           fsr1h	equ	0xFE2
  2327                           fsr1l	equ	0xFE1
  2328                           
  2329                           	psect	cstackBANK3
  2330  0003CA                     __pcstackBANK3:
  2331                           	opt stack 0
  2332  0003CA                     ?_cal_diff_hight_to_vol_h:
  2333                           	opt stack 0
  2334  0003CA                     ?_cal_diff_hight_to_vol_v:
  2335                           	opt stack 0
  2336  0003CA                     ___set_short_pose_size@gohome:
  2337                           	opt stack 0
  2338  0003CA                     ___set_short_warn_type@gohome:
  2339                           	opt stack 0
  2340  0003CA                     ___set_short_warn_value@gohome:
  2341                           	opt stack 0
  2342  0003CA                     ___set_short_epr_param@gohome:
  2343                           	opt stack 0
  2344  0003CA                     ___set_short_epr_ilp_scale@gohome:
  2345                           	opt stack 0
  2346  0003CA                     cal_diff_hight_to_vol_h@h:
  2347                           	opt stack 0
  2348  0003CA                     cal_diff_hight_to_vol_v@h:
  2349                           	opt stack 0
  2350  0003CA                     ___set_long_density@t32:
  2351                           	opt stack 0
  2352  0003CA                     ___set_long_base_zero@t32:
  2353                           	opt stack 0
  2354                           
  2355                           ; 4 bytes @ 0x0
  2356  0003CA                     	ds	1
  2357  0003CB                     ___set_short_pose_size@p:
  2358                           	opt stack 0
  2359  0003CB                     ___set_short_warn_type@p:
  2360                           	opt stack 0
  2361  0003CB                     ___set_short_warn_value@t32:
  2362                           	opt stack 0
  2363  0003CB                     ___set_short_epr_param@t32:
  2364                           	opt stack 0
  2365  0003CB                     ___set_short_epr_ilp_scale@t32:
  2366                           	opt stack 0
  2367                           
  2368                           ; 4 bytes @ 0x1
  2369  0003CB                     	ds	2
  2370  0003CD                     ___set_short_warn_type@stp:
  2371                           	opt stack 0
  2372  0003CD                     ___set_short_pose_size@t32:
  2373                           	opt stack 0
  2374                           
  2375                           ; 4 bytes @ 0x3
  2376  0003CD                     	ds	1
  2377  0003CE                     ___set_long_density@stp:
  2378                           	opt stack 0
  2379  0003CE                     ___set_long_base_zero@stp:
  2380                           	opt stack 0
  2381  0003CE                     cal_diff_hight_to_vol_h@v2:
  2382                           	opt stack 0
  2383  0003CE                     _cal_diff_hight_to_vol_v$5872:
  2384                           	opt stack 0
  2385                           
  2386                           ; 4 bytes @ 0x4
  2387  0003CE                     	ds	1
  2388  0003CF                     ___set_short_warn_value@stp:
  2389                           	opt stack 0
  2390  0003CF                     ___set_short_epr_param@stp:
  2391                           	opt stack 0
  2392  0003CF                     ___set_short_epr_ilp_scale@stp:
  2393                           	opt stack 0
  2394                           
  2395                           ; 2 bytes @ 0x5
  2396  0003CF                     	ds	2
  2397  0003D1                     ___set_short_warn_value@t8:
  2398                           	opt stack 0
  2399  0003D1                     ___set_short_pose_size@stp:
  2400                           	opt stack 0
  2401                           
  2402                           ; 2 bytes @ 0x7
  2403  0003D1                     	ds	1
  2404  0003D2                     cal_diff_hight_to_vol_h@f2:
  2405                           	opt stack 0
  2406  0003D2                     cal_diff_hight_to_vol_v@v1:
  2407                           	opt stack 0
  2408                           
  2409                           ; 4 bytes @ 0x8
  2410  0003D2                     	ds	4
  2411  0003D6                     cal_diff_hight_to_vol_h@v1:
  2412                           	opt stack 0
  2413  0003D6                     cal_diff_hight_to_vol_v@v2:
  2414                           	opt stack 0
  2415                           
  2416                           ; 4 bytes @ 0xC
  2417  0003D6                     	ds	4
  2418  0003DA                     cal_diff_hight_to_vol_h@f1:
  2419                           	opt stack 0
  2420  0003DA                     cal_diff_hight_to_vol_v@D:
  2421                           	opt stack 0
  2422                           
  2423                           ; 4 bytes @ 0x10
  2424  0003DA                     	ds	4
  2425  0003DE                     cal_diff_hight_to_vol_v@f1:
  2426                           	opt stack 0
  2427                           
  2428                           ; 4 bytes @ 0x14
  2429  0003DE                     	ds	4
  2430  0003E2                     cal_diff_press@tabrow:
  2431                           	opt stack 0
  2432                           
  2433                           ; 2 bytes @ 0x18
  2434  0003E2                     	ds	2
  2435  0003E4                     cal_diff_press@xin:
  2436                           	opt stack 0
  2437                           
  2438                           ; 2 bytes @ 0x1A
  2439  0003E4                     	ds	2
  2440  0003E6                     cal_diff_press@i:
  2441                           	opt stack 0
  2442                           
  2443                           ; 1 bytes @ 0x1C
  2444  0003E6                     	ds	1
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1h	equ	0xFE2
  2453                           fsr1l	equ	0xFE1
  2454                           
  2455                           	psect	cstackBANK1
  2456  0001FD                     __pcstackBANK1:
  2457                           	opt stack 0
  2458  0001FD                     key_process@tm:
  2459                           	opt stack 0
  2460                           
  2461                           ; 2 bytes @ 0x0
  2462  0001FD                     	ds	2
  2463  0001FF                     key_process@key:
  2464                           	opt stack 0
  2465                           
  2466                           ; 1 bytes @ 0x2
  2467  0001FF                     	ds	1
  2468                           tblptru	equ	0xFF8
  2469                           tblptrh	equ	0xFF7
  2470                           tblptrl	equ	0xFF6
  2471                           tablat	equ	0xFF5
  2472                           postinc0	equ	0xFEE
  2473                           wreg	equ	0xFE8
  2474                           postdec1	equ	0xFE5
  2475                           fsr1h	equ	0xFE2
  2476                           fsr1l	equ	0xFE1
  2477                           
  2478                           	psect	cstackBANK0
  2479  000060                     __pcstackBANK0:
  2480                           	opt stack 0
  2481  000060                     ??___enter_menu_poly_coeffic:
  2482  000060                     ??___enter_menu_warn_type:
  2483  000060                     ??___enter_menu_bar_scale:
  2484  000060                     ?___exp_10:
  2485                           	opt stack 0
  2486  000060                     ?_crc_sum:
  2487                           	opt stack 0
  2488  000060                     ?___awdiv:
  2489                           	opt stack 0
  2490  000060                     ?___awmod:
  2491                           	opt stack 0
  2492  000060                     ?___lmul:
  2493                           	opt stack 0
  2494  000060                     ?___lldiv:
  2495                           	opt stack 0
  2496  000060                     ?___xxtofl:
  2497                           	opt stack 0
  2498  000060                     lcd_disp_get_code@chr:
  2499                           	opt stack 0
  2500  000060                     lcd_disp_all@x:
  2501                           	opt stack 0
  2502  000060                     ___lbdiv@dividend:
  2503                           	opt stack 0
  2504  000060                     key_shift_loc@loc:
  2505                           	opt stack 0
  2506  000060                     ___enter_menu_set_pose_size@fps:
  2507                           	opt stack 0
  2508  000060                     ___up_warn_type_adj@p:
  2509                           	opt stack 0
  2510  000060                     ___up_adj_work_mode@p:
  2511                           	opt stack 0
  2512  000060                     ___set_long_work_mode@p:
  2513                           	opt stack 0
  2514  000060                     ___x_arrange_str@str:
  2515                           	opt stack 0
  2516  000060                     crc_sum@puchMsg:
  2517                           	opt stack 0
  2518  000060                     m_mem_set@buf:
  2519                           	opt stack 0
  2520  000060                     m_mem_cpy_len@d:
  2521                           	opt stack 0
  2522  000060                     m_mem_cpy@d:
  2523                           	opt stack 0
  2524  000060                     m_int8_2_hex@str:
  2525                           	opt stack 0
  2526  000060                     ads1115_init@pAds1115:
  2527                           	opt stack 0
  2528  000060                     ads1115_set_mux@pAds1115:
  2529                           	opt stack 0
  2530  000060                     ads1115_set_pga@pAds1115:
  2531                           	opt stack 0
  2532  000060                     ads1115_set_data_rate@pAds1115:
  2533                           	opt stack 0
  2534  000060                     at24c02_init@pAt24c02:
  2535                           	opt stack 0
  2536  000060                     delay_us@dly:
  2537                           	opt stack 0
  2538  000060                     rtc_set@rtc:
  2539                           	opt stack 0
  2540  000060                     ticker_dly@ms:
  2541                           	opt stack 0
  2542  000060                     ___awdiv@dividend:
  2543                           	opt stack 0
  2544  000060                     ___awmod@dividend:
  2545                           	opt stack 0
  2546  000060                     m_flash_erase@addr:
  2547                           	opt stack 0
  2548  000060                     m_flash_read@addr:
  2549                           	opt stack 0
  2550  000060                     ___lmul@multiplier:
  2551                           	opt stack 0
  2552  000060                     ___lldiv@dividend:
  2553                           	opt stack 0
  2554  000060                     ___xxtofl@val:
  2555                           	opt stack 0
  2556                           
  2557                           ; 4 bytes @ 0x0
  2558  000060                     	ds	1
  2559  000061                     lcd_disp_get_code@ret:
  2560                           	opt stack 0
  2561  000061                     lcd_disp_all@i:
  2562                           	opt stack 0
  2563  000061                     ___lbdiv@counter:
  2564                           	opt stack 0
  2565                           
  2566                           ; 1 bytes @ 0x1
  2567  000061                     	ds	1
  2568  000062                     ?___wmul:
  2569                           	opt stack 0
  2570  000062                     ?___lwdiv:
  2571                           	opt stack 0
  2572  000062                     key_shift_loc@min:
  2573                           	opt stack 0
  2574  000062                     ___enter_menu_poly_coeffic@__subMenu:
  2575                           	opt stack 0
  2576  000062                     ___enter_menu_warn_type@__subMenu:
  2577                           	opt stack 0
  2578  000062                     ___x_arrange_str@len:
  2579                           	opt stack 0
  2580  000062                     m_mem_set@x:
  2581                           	opt stack 0
  2582  000062                     m_int8_2_hex@b:
  2583                           	opt stack 0
  2584  000062                     ads1115_init@slvaddr:
  2585                           	opt stack 0
  2586  000062                     ads1115_set_mux@mux:
  2587                           	opt stack 0
  2588  000062                     ads1115_set_pga@pga:
  2589                           	opt stack 0
  2590  000062                     ads1115_set_data_rate@dr:
  2591                           	opt stack 0
  2592  000062                     at24c02_init@slv:
  2593                           	opt stack 0
  2594  000062                     lcd_disp_get_code@i:
  2595                           	opt stack 0
  2596  000062                     ___lbdiv@quotient:
  2597                           	opt stack 0
  2598  000062                     ___enter_menu_bar_scale@fps:
  2599                           	opt stack 0
  2600  000062                     crc_sum@usDataLen:
  2601                           	opt stack 0
  2602  000062                     m_mem_cpy_len@s:
  2603                           	opt stack 0
  2604  000062                     m_mem_cpy@s:
  2605                           	opt stack 0
  2606  000062                     delay_us@i:
  2607                           	opt stack 0
  2608  000062                     rtc_set@stp:
  2609                           	opt stack 0
  2610  000062                     ___wmul@multiplier:
  2611                           	opt stack 0
  2612  000062                     ___awdiv@divisor:
  2613                           	opt stack 0
  2614  000062                     ___awmod@divisor:
  2615                           	opt stack 0
  2616  000062                     ___lwdiv@dividend:
  2617                           	opt stack 0
  2618                           
  2619                           ; 2 bytes @ 0x2
  2620  000062                     	ds	1
  2621  000063                     key_shift_loc@max:
  2622                           	opt stack 0
  2623  000063                     m_mem_set@len:
  2624                           	opt stack 0
  2625  000063                     ___enter_menu_poly_coeffic@fps:
  2626                           	opt stack 0
  2627  000063                     ___enter_menu_warn_type@fps:
  2628                           	opt stack 0
  2629                           
  2630                           ; 2 bytes @ 0x3
  2631  000063                     	ds	1
  2632  000064                     ??_crc_sum:
  2633  000064                     ??___xxtofl:
  2634  000064                     ?_in_adc_start_and_read:
  2635                           	opt stack 0
  2636  000064                     iic_send_byte@x:
  2637                           	opt stack 0
  2638  000064                     iic_received_byte@ret:
  2639                           	opt stack 0
  2640  000064                     ___awdiv@counter:
  2641                           	opt stack 0
  2642  000064                     ___awmod@counter:
  2643                           	opt stack 0
  2644  000064                     m_mem_cpy_len@len:
  2645                           	opt stack 0
  2646  000064                     m_flash_read@buf:
  2647                           	opt stack 0
  2648  000064                     delay_ms@dly:
  2649                           	opt stack 0
  2650  000064                     ___wmul@multiplicand:
  2651                           	opt stack 0
  2652  000064                     ___lwdiv@divisor:
  2653                           	opt stack 0
  2654  000064                     m_flash_erase@t32:
  2655                           	opt stack 0
  2656  000064                     ___lmul@multiplicand:
  2657                           	opt stack 0
  2658  000064                     ___lldiv@divisor:
  2659                           	opt stack 0
  2660                           
  2661                           ; 4 bytes @ 0x4
  2662  000064                     	ds	1
  2663  000065                     iic_send_byte@i:
  2664                           	opt stack 0
  2665  000065                     iic_received_byte@i:
  2666                           	opt stack 0
  2667  000065                     ___awdiv@sign:
  2668                           	opt stack 0
  2669  000065                     ___awmod@sign:
  2670                           	opt stack 0
  2671                           
  2672                           ; 1 bytes @ 0x5
  2673  000065                     	ds	1
  2674  000066                     iic_received_byte_if_ack@ack:
  2675                           	opt stack 0
  2676  000066                     in_adc_start_and_read@ch:
  2677                           	opt stack 0
  2678  000066                     key_polling@ktemp:
  2679                           	opt stack 0
  2680  000066                     ___lwdiv@counter:
  2681                           	opt stack 0
  2682  000066                     crc_sum@len:
  2683                           	opt stack 0
  2684  000066                     ads1115_write_reg@pAds1115:
  2685                           	opt stack 0
  2686  000066                     at24c02_write_n_byte@pAt24c02:
  2687                           	opt stack 0
  2688  000066                     m_flash_read@len:
  2689                           	opt stack 0
  2690  000066                     ___wmul@product:
  2691                           	opt stack 0
  2692  000066                     ___awdiv@quotient:
  2693                           	opt stack 0
  2694                           
  2695                           ; 2 bytes @ 0x6
  2696  000066                     	ds	1
  2697  000067                     iic_received_byte_if_ack@ret:
  2698                           	opt stack 0
  2699  000067                     key_polling@t8:
  2700                           	opt stack 0
  2701  000067                     in_adc_start_and_read@ret:
  2702                           	opt stack 0
  2703  000067                     ___lwdiv@quotient:
  2704                           	opt stack 0
  2705                           
  2706                           ; 2 bytes @ 0x7
  2707  000067                     	ds	1
  2708  000068                     ??_calib_data_set_default_diff_pr:
  2709  000068                     ??_calib_data_set_default_pr:
  2710  000068                     ?_key_waite_release:
  2711                           	opt stack 0
  2712  000068                     ?_ads1115_read_reg:
  2713                           	opt stack 0
  2714  000068                     ads1115_write_reg@addr:
  2715                           	opt stack 0
  2716  000068                     at24c02_write_n_byte@addr:
  2717                           	opt stack 0
  2718  000068                     lcd_set_com_seg@seg:
  2719                           	opt stack 0
  2720  000068                     ___xxtofl@sign:
  2721                           	opt stack 0
  2722  000068                     key_waite_release@timeout:
  2723                           	opt stack 0
  2724  000068                     crc_sum@uIndex:
  2725                           	opt stack 0
  2726  000068                     m_int16_2_str_4@buf:
  2727                           	opt stack 0
  2728  000068                     ads1115_read_reg@pAds1115:
  2729                           	opt stack 0
  2730  000068                     at24c02_read_n_byte@pAt24c02:
  2731                           	opt stack 0
  2732  000068                     m_flash_read@i:
  2733                           	opt stack 0
  2734  000068                     ___lmul@product:
  2735                           	opt stack 0
  2736  000068                     ___lldiv@quotient:
  2737                           	opt stack 0
  2738                           
  2739                           ; 4 bytes @ 0x8
  2740  000068                     	ds	1
  2741  000069                     ?___lwmod:
  2742                           	opt stack 0
  2743  000069                     lcd_set_com_seg@show:
  2744                           	opt stack 0
  2745  000069                     ___xxtofl@exp:
  2746                           	opt stack 0
  2747  000069                     ads1115_write_reg@value:
  2748                           	opt stack 0
  2749  000069                     at24c02_write_n_byte@buf:
  2750                           	opt stack 0
  2751  000069                     ___lwmod@dividend:
  2752                           	opt stack 0
  2753                           
  2754                           ; 2 bytes @ 0x9
  2755  000069                     	ds	1
  2756  00006A                     ??_lcd_set_com_seg:
  2757  00006A                     crc_sum@uchCRCHi:
  2758                           	opt stack 0
  2759  00006A                     ads1115_read_reg@addr:
  2760                           	opt stack 0
  2761  00006A                     at24c02_read_n_byte@addr:
  2762                           	opt stack 0
  2763  00006A                     key_waite_release@key:
  2764                           	opt stack 0
  2765  00006A                     m_int16_2_str_4@x:
  2766                           	opt stack 0
  2767  00006A                     m_flash_read@t32:
  2768                           	opt stack 0
  2769  00006A                     ___xxtofl@arg:
  2770                           	opt stack 0
  2771                           
  2772                           ; 4 bytes @ 0xA
  2773  00006A                     	ds	1
  2774  00006B                     ??_ads1115_read_reg:
  2775  00006B                     crc_sum@uchCRCLo:
  2776                           	opt stack 0
  2777  00006B                     ads1115_start_conversion@pAds1115:
  2778                           	opt stack 0
  2779  00006B                     at24c02_read_n_byte@buf:
  2780                           	opt stack 0
  2781  00006B                     at24c02_write_n_byte@len:
  2782                           	opt stack 0
  2783  00006B                     ___lwmod@divisor:
  2784                           	opt stack 0
  2785                           
  2786                           ; 2 bytes @ 0xB
  2787  00006B                     	ds	1
  2788  00006C                     ?___mflot32_2_int32:
  2789                           	opt stack 0
  2790  00006C                     ?___aldiv:
  2791                           	opt stack 0
  2792  00006C                     ___lldiv@counter:
  2793                           	opt stack 0
  2794  00006C                     crc_verify@message:
  2795                           	opt stack 0
  2796  00006C                     crc_append@message:
  2797                           	opt stack 0
  2798  00006C                     ads1115_read_reg@t16:
  2799                           	opt stack 0
  2800  00006C                     ___mflot32_2_int32@x:
  2801                           	opt stack 0
  2802  00006C                     ___aldiv@dividend:
  2803                           	opt stack 0
  2804                           
  2805                           ; 4 bytes @ 0xC
  2806  00006C                     	ds	1
  2807  00006D                     ?___int32_2_mflot32:
  2808                           	opt stack 0
  2809  00006D                     lcd_set_com_seg@com:
  2810                           	opt stack 0
  2811  00006D                     ___lwmod@counter:
  2812                           	opt stack 0
  2813  00006D                     at24c02_read_n_byte@len:
  2814                           	opt stack 0
  2815  00006D                     at24c02_write_n_byte@i:
  2816                           	opt stack 0
  2817  00006D                     ___int32_2_mflot32@x:
  2818                           	opt stack 0
  2819                           
  2820                           ; 4 bytes @ 0xD
  2821  00006D                     	ds	1
  2822  00006E                     ?_ads1115_read_conversion:
  2823                           	opt stack 0
  2824  00006E                     ?___flmul:
  2825                           	opt stack 0
  2826  00006E                     calib_data_set_default_diff_pr@j:
  2827                           	opt stack 0
  2828  00006E                     calib_data_set_default_pr@i:
  2829                           	opt stack 0
  2830  00006E                     lcd_set_com_seg@offset:
  2831                           	opt stack 0
  2832  00006E                     key_adj_value_fixed@value:
  2833                           	opt stack 0
  2834  00006E                     crc_verify@n:
  2835                           	opt stack 0
  2836  00006E                     crc_append@n:
  2837                           	opt stack 0
  2838  00006E                     ads1115_read_conversion@pAds1115:
  2839                           	opt stack 0
  2840  00006E                     m_flash_write@addr:
  2841                           	opt stack 0
  2842  00006E                     ___flmul@b:
  2843                           	opt stack 0
  2844                           
  2845                           ; 4 bytes @ 0xE
  2846  00006E                     	ds	1
  2847  00006F                     ??_at24c02_read_n_byte:
  2848  00006F                     calib_data_set_default_diff_pr@i:
  2849                           	opt stack 0
  2850  00006F                     calib_data_set_default_pr@j:
  2851                           	opt stack 0
  2852  00006F                     lcd_set_com_seg@bits:
  2853                           	opt stack 0
  2854                           
  2855                           ; 1 bytes @ 0xF
  2856  00006F                     	ds	1
  2857  000070                     ??_crc_verify:
  2858  000070                     ??_crc_append:
  2859  000070                     key_adj_value_fixed@loc:
  2860                           	opt stack 0
  2861  000070                     ___mflot32_2_int32@i:
  2862                           	opt stack 0
  2863  000070                     lcd_disp_level_bar@__bar:
  2864                           	opt stack 0
  2865  000070                     lcd_show_dp@show:
  2866                           	opt stack 0
  2867  000070                     lcd_show_chr@chr:
  2868                           	opt stack 0
  2869  000070                     ___aldiv@divisor:
  2870                           	opt stack 0
  2871                           
  2872                           ; 4 bytes @ 0x10
  2873  000070                     	ds	1
  2874  000071                     ??___int32_2_mflot32:
  2875  000071                     lcd_disp_level_bar@bar:
  2876                           	opt stack 0
  2877  000071                     lcd_show_dp@loc:
  2878                           	opt stack 0
  2879  000071                     lcd_show_chr@loc:
  2880                           	opt stack 0
  2881  000071                     key_adj_value_fixed@dloc:
  2882                           	opt stack 0
  2883  000071                     ads1115_read_conversion@result:
  2884                           	opt stack 0
  2885  000071                     ___mflot32_2_int32@ret:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x11
  2889  000071                     	ds	1
  2890  000072                     lcd_disp_level@level:
  2891                           	opt stack 0
  2892  000072                     lcd_show_chr@code:
  2893                           	opt stack 0
  2894  000072                     crc_verify@crccal:
  2895                           	opt stack 0
  2896  000072                     crc_append@crc:
  2897                           	opt stack 0
  2898  000072                     m_flash_write@buf:
  2899                           	opt stack 0
  2900  000072                     ___flmul@a:
  2901                           	opt stack 0
  2902                           
  2903                           ; 4 bytes @ 0x12
  2904  000072                     	ds	1
  2905  000073                     lcd_disp_level@i:
  2906                           	opt stack 0
  2907  000073                     key_adj_value_fixed@t16:
  2908                           	opt stack 0
  2909  000073                     at24c02_read_n_byte@i:
  2910                           	opt stack 0
  2911  000073                     lcd_show_string_l0@str:
  2912                           	opt stack 0
  2913  000073                     lcd_show_string_l1@str:
  2914                           	opt stack 0
  2915  000073                     lcd_show_string@str:
  2916                           	opt stack 0
  2917                           
  2918                           ; 2 bytes @ 0x13
  2919  000073                     	ds	1
  2920  000074                     ___aldiv@counter:
  2921                           	opt stack 0
  2922  000074                     crc_verify@expected:
  2923                           	opt stack 0
  2924  000074                     m_flash_write@len:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x14
  2928  000074                     	ds	1
  2929  000075                     lcd_show_string_l0@t8:
  2930                           	opt stack 0
  2931  000075                     lcd_show_string_l1@t8:
  2932                           	opt stack 0
  2933  000075                     lcd_show_string@t8:
  2934                           	opt stack 0
  2935  000075                     ___aldiv@sign:
  2936                           	opt stack 0
  2937  000075                     key_adj_value_float@mfp:
  2938                           	opt stack 0
  2939  000075                     ___int32_2_mflot32@t32:
  2940                           	opt stack 0
  2941  000075                     ___mflot32_2_int32@mf:
  2942                           	opt stack 0
  2943                           
  2944                           ; 4 bytes @ 0x15
  2945  000075                     	ds	1
  2946  000076                     ??_m_flash_write:
  2947  000076                     ??___flmul:
  2948  000076                     calib_data_init_diff_pr@ret:
  2949                           	opt stack 0
  2950  000076                     calib_data_init_pr@ret:
  2951                           	opt stack 0
  2952  000076                     ui_disp_adj_xfloat_pt@str:
  2953                           	opt stack 0
  2954  000076                     ui_disp_adj_xfixed_pt@str:
  2955                           	opt stack 0
  2956  000076                     ui_disp_adj_xfixed_pt_dp@str:
  2957                           	opt stack 0
  2958  000076                     ui_disp_xfloat_pt@xpf:
  2959                           	opt stack 0
  2960  000076                     ui_disp_menu_pos_adj@p:
  2961                           	opt stack 0
  2962  000076                     ___aldiv@quotient:
  2963                           	opt stack 0
  2964  000076                     ui_disp_start_cs600@buf:
  2965                           	opt stack 0
  2966                           
  2967                           ; 6 bytes @ 0x16
  2968  000076                     	ds	1
  2969  000077                     key_adj_value_float@loc:
  2970                           	opt stack 0
  2971  000077                     calib_data_init_diff_pr@t16:
  2972                           	opt stack 0
  2973  000077                     calib_data_init_pr@t16:
  2974                           	opt stack 0
  2975  000077                     ui_disp_menu_warn_t_adj@buf:
  2976                           	opt stack 0
  2977  000077                     ui_disp_menu_work_mode_adj@buf:
  2978                           	opt stack 0
  2979                           
  2980                           ; 10 bytes @ 0x17
  2981  000077                     	ds	1
  2982  000078                     ui_disp_xfloat_pt@line:
  2983                           	opt stack 0
  2984  000078                     m_flash_write@writeTimes:
  2985                           	opt stack 0
  2986  000078                     key_adj_value_float@t16:
  2987                           	opt stack 0
  2988  000078                     ui_disp_adj_xfloat_pt@xpf:
  2989                           	opt stack 0
  2990  000078                     ui_disp_adj_xfixed_pt@x:
  2991                           	opt stack 0
  2992  000078                     ui_disp_adj_xfixed_pt_dp@x:
  2993                           	opt stack 0
  2994  000078                     ui_disp_menu_pos_adj@buf:
  2995                           	opt stack 0
  2996                           
  2997                           ; 6 bytes @ 0x18
  2998  000078                     	ds	1
  2999  000079                     ??_ui_disp_xfloat_pt:
  3000  000079                     m_flash_write@i:
  3001                           	opt stack 0
  3002  000079                     calib_data_init_diff_pr@buf:
  3003                           	opt stack 0
  3004  000079                     calib_data_init_pr@buf:
  3005                           	opt stack 0
  3006  000079                     ___int32_2_mflot32@mf:
  3007                           	opt stack 0
  3008                           
  3009                           ; 4 bytes @ 0x19
  3010  000079                     	ds	1
  3011  00007A                     ?___x_sample_fliter:
  3012                           	opt stack 0
  3013  00007A                     ?___x_sample_fifo:
  3014                           	opt stack 0
  3015  00007A                     key_adj_value_float@t8:
  3016                           	opt stack 0
  3017  00007A                     ui_disp_adj_xfloat_pt@loc:
  3018                           	opt stack 0
  3019  00007A                     ui_disp_adj_xfixed_pt@loc:
  3020                           	opt stack 0
  3021  00007A                     ui_disp_adj_xfixed_pt_dp@loc:
  3022                           	opt stack 0
  3023  00007A                     ___flmul@sign:
  3024                           	opt stack 0
  3025  00007A                     m_interp1_cal_p_v@tabrow:
  3026                           	opt stack 0
  3027  00007A                     m_interp1_cal_p_t@tmpx:
  3028                           	opt stack 0
  3029  00007A                     ___x_sample_fliter@buf:
  3030                           	opt stack 0
  3031  00007A                     ___x_sample_fifo@buf:
  3032                           	opt stack 0
  3033  00007A                     m_flash_write@pageAddr:
  3034                           	opt stack 0
  3035  00007A                     ui_disp_xfloat_pt@buf:
  3036                           	opt stack 0
  3037                           
  3038                           ; 10 bytes @ 0x1A
  3039  00007A                     	ds	1
  3040  00007B                     ??___up_pose_size_adj:
  3041  00007B                     ??_ui_disp_adj_xfloat_pt:
  3042  00007B                     ??_ui_disp_adj_xfixed_pt:
  3043  00007B                     ___up_diff_calib_adj@t8:
  3044                           	opt stack 0
  3045  00007B                     ___up_pr_calib_adj@t8:
  3046                           	opt stack 0
  3047  00007B                     ui_disp_adj_xfixed_pt_dp@dploc:
  3048                           	opt stack 0
  3049  00007B                     ___flmul@aexp:
  3050                           	opt stack 0
  3051                           
  3052                           ; 1 bytes @ 0x1B
  3053  00007B                     	ds	1
  3054  00007C                     ??_ui_disp_adj_xfixed_pt_dp:
  3055  00007C                     ui_disp_start_cs600@dly:
  3056                           	opt stack 0
  3057  00007C                     ___x_sample_fliter@len:
  3058                           	opt stack 0
  3059  00007C                     m_interp1_cal_p_v@xin:
  3060                           	opt stack 0
  3061  00007C                     m_interp1_cal_p_t@xin:
  3062                           	opt stack 0
  3063  00007C                     ___up_pose_size_adj@p:
  3064                           	opt stack 0
  3065  00007C                     ___x_sample_fifo@x:
  3066                           	opt stack 0
  3067  00007C                     ___flmul@grs:
  3068                           	opt stack 0
  3069                           
  3070                           ; 4 bytes @ 0x1C
  3071  00007C                     	ds	1
  3072  00007D                     ??___enter_menu_set_density:
  3073  00007D                     ??___enter_menu_calib_press_diff:
  3074  00007D                     ??___enter_menu_calib_press:
  3075  00007D                     ??___enter_menu_warn_value:
  3076  00007D                     ___enter_menu_epr_calib@__subMenu:
  3077                           	opt stack 0
  3078  00007D                     ___enter_menu_epr_ilp_scale@__subMenu:
  3079                           	opt stack 0
  3080  00007D                     ui_disp_start_cs600@t8:
  3081                           	opt stack 0
  3082  00007D                     ui_disp_menu_warn_t_adj@t8:
  3083                           	opt stack 0
  3084  00007D                     ___x_sample_fliter@loop:
  3085                           	opt stack 0
  3086  00007D                     ___enter_menu_set_d@fps:
  3087                           	opt stack 0
  3088  00007D                     ___enter_menu_set_h@fps:
  3089                           	opt stack 0
  3090  00007D                     ___enter_menu_set_base_zero@fps:
  3091                           	opt stack 0
  3092  00007D                     ui_disp_adj_xfloat_pt@buf:
  3093                           	opt stack 0
  3094  00007D                     ui_disp_adj_xfixed_pt@buf:
  3095                           	opt stack 0
  3096                           
  3097                           ; 10 bytes @ 0x1D
  3098  00007D                     	ds	1
  3099  00007E                     ??___x_sample_fliter:
  3100  00007E                     m_interp1_cal_p_t@tmpxLen:
  3101                           	opt stack 0
  3102  00007E                     ___x_sample_fifo@len:
  3103                           	opt stack 0
  3104  00007E                     m_flash_write@j:
  3105                           	opt stack 0
  3106  00007E                     m_interp1_cal_p_v@xout:
  3107                           	opt stack 0
  3108  00007E                     ui_disp_menu_warn_t_adj@p:
  3109                           	opt stack 0
  3110  00007E                     ___enter_menu_epr_calib@t32:
  3111                           	opt stack 0
  3112  00007E                     ___enter_menu_epr_ilp_scale@t32:
  3113                           	opt stack 0
  3114  00007E                     ui_disp_adj_xfixed_pt_dp@buf:
  3115                           	opt stack 0
  3116                           
  3117                           ; 10 bytes @ 0x1E
  3118  00007E                     	ds	1
  3119  00007F                     ??_m_interp1_cal_p_t:
  3120  00007F                     ??___x_sample_fifo:
  3121  00007F                     ___enter_menu_warn_value@__subMenu:
  3122                           	opt stack 0
  3123  00007F                     ___enter_menu_set_density@fps:
  3124                           	opt stack 0
  3125  00007F                     m_flash_write@tmpBuf:
  3126                           	opt stack 0
  3127  00007F                     ___enter_menu_set_d@t32:
  3128                           	opt stack 0
  3129  00007F                     ___enter_menu_set_h@t32:
  3130                           	opt stack 0
  3131  00007F                     ___enter_menu_set_base_zero@t32:
  3132                           	opt stack 0
  3133                           
  3134                           ; 4 bytes @ 0x1F
  3135  00007F                     	ds	1
  3136  000080                     ??_m_interp1_cal_p_v:
  3137  000080                     ___flmul@bexp:
  3138                           	opt stack 0
  3139  000080                     ___enter_menu_warn_value@fps:
  3140                           	opt stack 0
  3141                           
  3142                           ; 2 bytes @ 0x20
  3143  000080                     	ds	1
  3144  000081                     ui_disp_menu_work_mode_adj@p:
  3145                           	opt stack 0
  3146  000081                     m_flash_write@t16:
  3147                           	opt stack 0
  3148  000081                     ___enter_menu_set_density@t32:
  3149                           	opt stack 0
  3150  000081                     ___flmul@prod:
  3151                           	opt stack 0
  3152                           
  3153                           ; 4 bytes @ 0x21
  3154  000081                     	ds	1
  3155  000082                     ___enter_menu_warn_value@t8:
  3156                           	opt stack 0
  3157  000082                     ___enter_menu_epr_calib@fps:
  3158                           	opt stack 0
  3159  000082                     ___enter_menu_epr_ilp_scale@fps:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0x22
  3163  000082                     	ds	1
  3164  000083                     ___enter_menu_calib_press_diff@row:
  3165                           	opt stack 0
  3166  000083                     ___enter_menu_calib_press@row:
  3167                           	opt stack 0
  3168  000083                     ___enter_menu_warn_value@t32:
  3169                           	opt stack 0
  3170                           
  3171                           ; 4 bytes @ 0x23
  3172  000083                     	ds	1
  3173  000084                     ui_disp_xfloat_pt@t8:
  3174                           	opt stack 0
  3175  000084                     ___x_sample_fliter@maxLoc:
  3176                           	opt stack 0
  3177  000084                     ___enter_menu_calib_press_diff@stp:
  3178                           	opt stack 0
  3179  000084                     ___enter_menu_calib_press@stp:
  3180                           	opt stack 0
  3181                           
  3182                           ; 2 bytes @ 0x24
  3183  000084                     	ds	1
  3184  000085                     ___x_sample_fliter@minLoc:
  3185                           	opt stack 0
  3186  000085                     ui_disp_xfloat_pt@x:
  3187                           	opt stack 0
  3188  000085                     ___flmul@temp:
  3189                           	opt stack 0
  3190  000085                     ___x_sample_fifo@ret:
  3191                           	opt stack 0
  3192                           
  3193                           ; 4 bytes @ 0x25
  3194  000085                     	ds	1
  3195  000086                     ___x_sample_fliter@max:
  3196                           	opt stack 0
  3197  000086                     ___enter_menu_calib_press_diff@t32:
  3198                           	opt stack 0
  3199  000086                     ___enter_menu_calib_press@t32:
  3200                           	opt stack 0
  3201                           
  3202                           ; 4 bytes @ 0x26
  3203  000086                     	ds	1
  3204  000087                     ?___fldiv:
  3205                           	opt stack 0
  3206  000087                     ui_disp_adj_xfloat_pt@x:
  3207                           	opt stack 0
  3208  000087                     ui_disp_menu_home@mf:
  3209                           	opt stack 0
  3210  000087                     ___fldiv@b:
  3211                           	opt stack 0
  3212                           
  3213                           ; 4 bytes @ 0x27
  3214  000087                     	ds	1
  3215  000088                     ___x_sample_fliter@min:
  3216                           	opt stack 0
  3217  000088                     ui_disp_menu_poly_c_adj@buf:
  3218                           	opt stack 0
  3219                           
  3220                           ; 6 bytes @ 0x28
  3221  000088                     	ds	1
  3222  000089                     ui_disp_adj_xfloat_pt@t8:
  3223                           	opt stack 0
  3224  000089                     ___x_sample_fifo@i:
  3225                           	opt stack 0
  3226                           
  3227                           ; 1 bytes @ 0x29
  3228  000089                     	ds	1
  3229  00008A                     ??_key_process_set_up_long:
  3230  00008A                     ??___set_short_diff_calib:
  3231  00008A                     ??___set_short_pr_calib:
  3232  00008A                     ??_ui_disp_menu_warn_v_adj:
  3233  00008A                     sample_pr_chip_fast@ret:
  3234                           	opt stack 0
  3235  00008A                     ui_disp_menu_h_adj@fps:
  3236                           	opt stack 0
  3237  00008A                     sample_in_soc_adc_ch@t16:
  3238                           	opt stack 0
  3239  00008A                     m_interp1_cal_p_t@y:
  3240                           	opt stack 0
  3241  00008A                     ___x_sample_fliter@t32:
  3242                           	opt stack 0
  3243  00008A                     ui_disp_menu_epr_calib_adj@buf:
  3244                           	opt stack 0
  3245  00008A                     ui_disp_menu_epr_ilp_scale_adj@buf:
  3246                           	opt stack 0
  3247  00008A                     ui_disp_menu_calib_diff_adj@buf:
  3248                           	opt stack 0
  3249  00008A                     ui_disp_menu_calib_pr_adj@buf:
  3250                           	opt stack 0
  3251                           
  3252                           ; 10 bytes @ 0x2A
  3253  00008A                     	ds	1
  3254  00008B                     ui_disp_menu_home@t8:
  3255                           	opt stack 0
  3256  00008B                     sample_pr_chip_fast@t16:
  3257                           	opt stack 0
  3258  00008B                     m_interp1_cal_p_v@y:
  3259                           	opt stack 0
  3260  00008B                     ___fldiv@a:
  3261                           	opt stack 0
  3262                           
  3263                           ; 4 bytes @ 0x2B
  3264  00008B                     	ds	1
  3265  00008C                     ui_disp_menu_warn_v_adj@buf:
  3266                           	opt stack 0
  3267                           
  3268                           ; 6 bytes @ 0x2C
  3269  00008C                     	ds	2
  3270  00008E                     ui_disp_menu_poly_c_adj@t8:
  3271                           	opt stack 0
  3272  00008E                     ___x_sample_fliter@i:
  3273                           	opt stack 0
  3274  00008E                     m_interp1_cal_p_t@x:
  3275                           	opt stack 0
  3276                           
  3277                           ; 4 bytes @ 0x2E
  3278  00008E                     	ds	1
  3279  00008F                     ??___fldiv:
  3280  00008F                     sample_diff_pr_fliter@xin:
  3281                           	opt stack 0
  3282  00008F                     m_interp1_cal_p_v@x:
  3283                           	opt stack 0
  3284                           
  3285                           ; 4 bytes @ 0x2F
  3286  00008F                     	ds	1
  3287  000090                     ___set_short_diff_calib@pra:
  3288                           	opt stack 0
  3289  000090                     ___set_short_pr_calib@pra:
  3290                           	opt stack 0
  3291                           
  3292                           ; 4 bytes @ 0x30
  3293  000090                     	ds	1
  3294  000091                     sample_diff_pr_chip_fast@t16:
  3295                           	opt stack 0
  3296                           
  3297                           ; 2 bytes @ 0x31
  3298  000091                     	ds	1
  3299  000092                     ui_disp_menu_warn_v_adj@fps:
  3300                           	opt stack 0
  3301  000092                     m_interp1_cal_p_t@pr:
  3302                           	opt stack 0
  3303                           
  3304                           ; 4 bytes @ 0x32
  3305  000092                     	ds	1
  3306  000093                     ___fldiv@sign:
  3307                           	opt stack 0
  3308  000093                     m_interp1_cal_p_v@t16:
  3309                           	opt stack 0
  3310                           
  3311                           ; 2 bytes @ 0x33
  3312  000093                     	ds	1
  3313  000094                     ___set_short_diff_calib@gohome:
  3314                           	opt stack 0
  3315  000094                     ___set_short_pr_calib@gohome:
  3316                           	opt stack 0
  3317  000094                     ui_disp_menu_calib_diff_adj@t8:
  3318                           	opt stack 0
  3319  000094                     ui_disp_menu_calib_pr_adj@t8:
  3320                           	opt stack 0
  3321  000094                     ui_disp_menu_warn_v_adj@type:
  3322                           	opt stack 0
  3323  000094                     ___fldiv@rem:
  3324                           	opt stack 0
  3325                           
  3326                           ; 4 bytes @ 0x34
  3327  000094                     	ds	1
  3328  000095                     ___set_short_diff_calib@t8:
  3329                           	opt stack 0
  3330  000095                     ___set_short_pr_calib@t8:
  3331                           	opt stack 0
  3332  000095                     ui_disp_menu_warn_v_adj@t8:
  3333                           	opt stack 0
  3334  000095                     m_interp1_cal_p_v@pr:
  3335                           	opt stack 0
  3336                           
  3337                           ; 4 bytes @ 0x35
  3338  000095                     	ds	1
  3339  000096                     ___set_short_diff_calib@saveFlg:
  3340                           	opt stack 0
  3341  000096                     ___set_short_pr_calib@saveFlg:
  3342                           	opt stack 0
  3343  000096                     m_interp1_cal_p_t@t16:
  3344                           	opt stack 0
  3345                           
  3346                           ; 2 bytes @ 0x36
  3347  000096                     	ds	1
  3348  000097                     ___set_short_diff_calib@t32:
  3349                           	opt stack 0
  3350  000097                     ___set_short_pr_calib@t32:
  3351                           	opt stack 0
  3352                           
  3353                           ; 4 bytes @ 0x37
  3354  000097                     	ds	1
  3355  000098                     m_interp1_cal_p_t@i:
  3356                           	opt stack 0
  3357  000098                     ___fldiv@new_exp:
  3358                           	opt stack 0
  3359                           
  3360                           ; 2 bytes @ 0x38
  3361  000098                     	ds	1
  3362  000099                     m_interp1_cal_p_v@i:
  3363                           	opt stack 0
  3364                           
  3365                           ; 1 bytes @ 0x39
  3366  000099                     	ds	1
  3367  00009A                     cal_press@ret:
  3368                           	opt stack 0
  3369  00009A                     ___fldiv@grs:
  3370                           	opt stack 0
  3371                           
  3372                           ; 4 bytes @ 0x3A
  3373  00009A                     	ds	1
  3374  00009B                     cal_press@tabrow:
  3375                           	opt stack 0
  3376  00009B                     ___set_short_diff_calib@t16:
  3377                           	opt stack 0
  3378  00009B                     ___set_short_pr_calib@t16:
  3379                           	opt stack 0
  3380                           
  3381                           ; 2 bytes @ 0x3B
  3382  00009B                     	ds	2
  3383  00009D                     ___set_short_diff_calib@adjv:
  3384                           	opt stack 0
  3385  00009D                     ___set_short_pr_calib@adjv:
  3386                           	opt stack 0
  3387  00009D                     cal_press@xin:
  3388                           	opt stack 0
  3389                           
  3390                           ; 8 bytes @ 0x3D
  3391  00009D                     	ds	1
  3392  00009E                     ___fldiv@bexp:
  3393                           	opt stack 0
  3394                           
  3395                           ; 1 bytes @ 0x3E
  3396  00009E                     	ds	1
  3397  00009F                     ___fldiv@aexp:
  3398                           	opt stack 0
  3399                           
  3400                           ; 1 bytes @ 0x3F
  3401  00009F                     	ds	1
  3402  0000A0                     ?___flneg:
  3403                           	opt stack 0
  3404  0000A0                     ___flneg@f1:
  3405                           	opt stack 0
  3406                           
  3407                           ; 4 bytes @ 0x40
  3408  0000A0                     	ds	4
  3409  0000A4                     ?___fladd:
  3410                           	opt stack 0
  3411  0000A4                     ___fladd@b:
  3412                           	opt stack 0
  3413                           
  3414                           ; 4 bytes @ 0x44
  3415  0000A4                     	ds	4
  3416  0000A8                     ___fladd@a:
  3417                           	opt stack 0
  3418                           
  3419                           ; 4 bytes @ 0x48
  3420  0000A8                     	ds	4
  3421  0000AC                     ??___fladd:
  3422                           
  3423                           ; 1 bytes @ 0x4C
  3424  0000AC                     	ds	8
  3425  0000B4                     ___fladd@signs:
  3426                           	opt stack 0
  3427                           
  3428                           ; 1 bytes @ 0x54
  3429  0000B4                     	ds	1
  3430  0000B5                     ___fladd@aexp:
  3431                           	opt stack 0
  3432                           
  3433                           ; 1 bytes @ 0x55
  3434  0000B5                     	ds	1
  3435  0000B6                     ___fladd@bexp:
  3436                           	opt stack 0
  3437                           
  3438                           ; 1 bytes @ 0x56
  3439  0000B6                     	ds	1
  3440  0000B7                     ___fladd@grs:
  3441                           	opt stack 0
  3442                           
  3443                           ; 1 bytes @ 0x57
  3444  0000B7                     	ds	1
  3445  0000B8                     ?___fltol:
  3446                           	opt stack 0
  3447  0000B8                     ___flge@ff1:
  3448                           	opt stack 0
  3449  0000B8                     ___fltol@f1:
  3450                           	opt stack 0
  3451                           
  3452                           ; 4 bytes @ 0x58
  3453  0000B8                     	ds	4
  3454  0000BC                     ??___fltol:
  3455  0000BC                     ___flge@ff2:
  3456                           	opt stack 0
  3457                           
  3458                           ; 4 bytes @ 0x5C
  3459  0000BC                     	ds	4
  3460  0000C0                     ??___flge:
  3461  0000C0                     ___fltol@sign1:
  3462                           	opt stack 0
  3463                           
  3464                           ; 1 bytes @ 0x60
  3465  0000C0                     	ds	1
  3466  0000C1                     ___fltol@exp1:
  3467                           	opt stack 0
  3468                           
  3469                           ; 1 bytes @ 0x61
  3470  0000C1                     	ds	1
  3471  0000C2                     ?_data_sys_cal_v1:
  3472                           	opt stack 0
  3473  0000C2                     ?_data_sys_cal_v2:
  3474                           	opt stack 0
  3475  0000C2                     data_sys_cal_v1@stp:
  3476                           	opt stack 0
  3477  0000C2                     data_sys_cal_v2@stp:
  3478                           	opt stack 0
  3479  0000C2                     cal_diff_p_to_h@xin:
  3480                           	opt stack 0
  3481                           
  3482                           ; 2 bytes @ 0x62
  3483  0000C2                     	ds	2
  3484  0000C4                     ?_m_interp1_float_fast:
  3485                           	opt stack 0
  3486  0000C4                     m_interp1_float_fast@tab:
  3487                           	opt stack 0
  3488  0000C4                     cal_diff_p_to_h@f2:
  3489                           	opt stack 0
  3490  0000C4                     _cal_diff_hight_level$5870:
  3491                           	opt stack 0
  3492                           
  3493                           ; 4 bytes @ 0x64
  3494  0000C4                     	ds	2
  3495  0000C6                     m_interp1_float_fast@in:
  3496                           	opt stack 0
  3497  0000C6                     _data_sys_cal_v1$5864:
  3498                           	opt stack 0
  3499  0000C6                     _data_sys_cal_v2$5867:
  3500                           	opt stack 0
  3501                           
  3502                           ; 4 bytes @ 0x66
  3503  0000C6                     	ds	2
  3504  0000C8                     cal_diff_p_to_h@f1:
  3505                           	opt stack 0
  3506  0000C8                     _cal_diff_hight_level$5871:
  3507                           	opt stack 0
  3508                           
  3509                           ; 4 bytes @ 0x68
  3510  0000C8                     	ds	2
  3511  0000CA                     m_interp1_float_fast@len:
  3512                           	opt stack 0
  3513  0000CA                     _data_sys_cal_v1$5865:
  3514                           	opt stack 0
  3515  0000CA                     _data_sys_cal_v2$5868:
  3516                           	opt stack 0
  3517                           
  3518                           ; 4 bytes @ 0x6A
  3519  0000CA                     	ds	2
  3520  0000CC                     ??_m_interp1_float_fast:
  3521  0000CC                     cal_diff_hight_level@f2:
  3522                           	opt stack 0
  3523                           
  3524                           ; 4 bytes @ 0x6C
  3525  0000CC                     	ds	2
  3526  0000CE                     data_sys_cal_v2@f:
  3527                           	opt stack 0
  3528  0000CE                     _data_sys_cal_v1$5866:
  3529                           	opt stack 0
  3530                           
  3531                           ; 4 bytes @ 0x6E
  3532  0000CE                     	ds	2
  3533  0000D0                     cal_diff_hight_level@f1:
  3534                           	opt stack 0
  3535                           
  3536                           ; 4 bytes @ 0x70
  3537  0000D0                     	ds	2
  3538  0000D2                     data_sys_cal_v1@h:
  3539                           	opt stack 0
  3540  0000D2                     data_sys_cal_v2@d:
  3541                           	opt stack 0
  3542                           
  3543                           ; 4 bytes @ 0x72
  3544  0000D2                     	ds	2
  3545  0000D4                     m_interp1_float_fast@x:
  3546                           	opt stack 0
  3547                           
  3548                           ; 4 bytes @ 0x74
  3549  0000D4                     	ds	2
  3550  0000D6                     data_sys_cal_v1@f:
  3551                           	opt stack 0
  3552                           
  3553                           ; 4 bytes @ 0x76
  3554  0000D6                     	ds	2
  3555  0000D8                     m_interp1_float_fast@y:
  3556                           	opt stack 0
  3557                           
  3558                           ; 4 bytes @ 0x78
  3559  0000D8                     	ds	2
  3560  0000DA                     data_sys_cal_v1@r:
  3561                           	opt stack 0
  3562                           
  3563                           ; 4 bytes @ 0x7A
  3564  0000DA                     	ds	2
  3565  0000DC                     _m_interp1_float_fast$5869:
  3566                           	opt stack 0
  3567                           
  3568                           ; 4 bytes @ 0x7C
  3569  0000DC                     	ds	2
  3570  0000DE                     ___sys_data_save_write_flash@ret:
  3571                           	opt stack 0
  3572  0000DE                     data_sys_init@t16:
  3573                           	opt stack 0
  3574                           
  3575                           ; 2 bytes @ 0x7E
  3576  0000DE                     	ds	1
  3577  0000DF                     ___sys_data_save_write_flash@stp:
  3578                           	opt stack 0
  3579                           
  3580                           ; 2 bytes @ 0x7F
  3581  0000DF                     	ds	1
  3582  0000E0                     data_sys_init@ret:
  3583                           	opt stack 0
  3584  0000E0                     m_interp1_float_fast@f:
  3585                           	opt stack 0
  3586                           
  3587                           ; 4 bytes @ 0x80
  3588  0000E0                     	ds	1
  3589  0000E1                     data_sys_init@stp:
  3590                           	opt stack 0
  3591  0000E1                     ___sys_data_save_write_flash@buf:
  3592                           	opt stack 0
  3593                           
  3594                           ; 2 bytes @ 0x81
  3595  0000E1                     	ds	2
  3596  0000E3                     ??___set_short_warn_type:
  3597  0000E3                     ??___set_short_warn_value:
  3598  0000E3                     ___set_short_poly_coefic@gohome:
  3599                           	opt stack 0
  3600  0000E3                     data_sys_init@buf:
  3601                           	opt stack 0
  3602  0000E3                     ___set_long_bar_level_scale@p:
  3603                           	opt stack 0
  3604                           
  3605                           ; 2 bytes @ 0x83
  3606  0000E3                     	ds	1
  3607  0000E4                     m_interp1_float_fast@i:
  3608                           	opt stack 0
  3609  0000E4                     ___set_short_poly_coefic@p:
  3610                           	opt stack 0
  3611                           
  3612                           ; 2 bytes @ 0x84
  3613  0000E4                     	ds	1
  3614  0000E5                     ___set_long_bar_level_scale@stp:
  3615                           	opt stack 0
  3616                           
  3617                           ; 2 bytes @ 0x85
  3618  0000E5                     	ds	1
  3619  0000E6                     sample_call_in_ticker@ret:
  3620                           	opt stack 0
  3621  0000E6                     sample_function_enable_fi_in_rtc@ret:
  3622                           	opt stack 0
  3623  0000E6                     ___set_short_poly_coefic@stp:
  3624                           	opt stack 0
  3625                           
  3626                           ; 2 bytes @ 0x86
  3627  0000E6                     	ds	1
  3628  0000E7                     event_process_rtc@ret:
  3629                           	opt stack 0
  3630  0000E7                     event_process_ticker@ret:
  3631                           	opt stack 0
  3632                           
  3633                           ; 1 bytes @ 0x87
  3634  0000E7                     	ds	1
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           postinc0	equ	0xFEE
  3640                           wreg	equ	0xFE8
  3641                           postdec1	equ	0xFE5
  3642                           fsr1h	equ	0xFE2
  3643                           fsr1l	equ	0xFE1
  3644                           
  3645                           	psect	cstackCOMRAM
  3646  000001                     __pcstackCOMRAM:
  3647                           	opt stack 0
  3648  000001                     ??_handler_interrupt_hight:
  3649  000001                     
  3650                           ; 2 bytes @ 0x0
  3651  000001                     	ds	14
  3652  00000F                     ??_handler_interrupt_low:
  3653                           
  3654                           ; 1 bytes @ 0xE
  3655  00000F                     	ds	17
  3656  000020                     ??_ads1115_set_data_rate:
  3657  000020                     ??_ads1115_set_mux:
  3658  000020                     ??_ads1115_set_pga:
  3659  000020                     ??_in_adc_start_and_read:
  3660  000020                     ??___up_warn_type_adj:
  3661  000020                     cal_additional_pressute@index:
  3662                           	opt stack 0
  3663  000020                     ___exp_10@n:
  3664                           	opt stack 0
  3665  000020                     key_waite_release@t8:
  3666                           	opt stack 0
  3667  000020                     key_shift_loc@t8:
  3668                           	opt stack 0
  3669  000020                     ___enter_menu_calib_press_diff@col:
  3670                           	opt stack 0
  3671  000020                     ___enter_menu_calib_press@col:
  3672                           	opt stack 0
  3673  000020                     ___down_home_adj@t8:
  3674                           	opt stack 0
  3675  000020                     ___up_home_adj@t8:
  3676                           	opt stack 0
  3677  000020                     ___x_arrange_str@i:
  3678                           	opt stack 0
  3679  000020                     m_int8_2_hex@t8:
  3680                           	opt stack 0
  3681  000020                     iic_send_ack@ack:
  3682                           	opt stack 0
  3683  000020                     iic_waite_ack@timeout:
  3684                           	opt stack 0
  3685  000020                     lcd_disp_level_bar@show:
  3686                           	opt stack 0
  3687  000020                     lcd_disp_chr_loc_0@code:
  3688                           	opt stack 0
  3689  000020                     lcd_disp_dp_loc_0@dp:
  3690                           	opt stack 0
  3691  000020                     lcd_disp_chr_loc_1@code:
  3692                           	opt stack 0
  3693  000020                     lcd_disp_dp_loc_1@dp:
  3694                           	opt stack 0
  3695  000020                     lcd_disp_chr_loc_2@code:
  3696                           	opt stack 0
  3697  000020                     lcd_disp_dp_loc_2@dp:
  3698                           	opt stack 0
  3699  000020                     lcd_disp_chr_loc_3@code:
  3700                           	opt stack 0
  3701  000020                     lcd_disp_chr_loc_4@code:
  3702                           	opt stack 0
  3703  000020                     lcd_disp_dp_loc_4@dp:
  3704                           	opt stack 0
  3705  000020                     lcd_disp_chr_loc_5@code:
  3706                           	opt stack 0
  3707  000020                     lcd_disp_dp_loc_5@dp:
  3708                           	opt stack 0
  3709  000020                     lcd_disp_chr_loc_6@code:
  3710                           	opt stack 0
  3711  000020                     lcd_disp_dp_loc_6@dp:
  3712                           	opt stack 0
  3713  000020                     lcd_disp_chr_loc_7@code:
  3714                           	opt stack 0
  3715  000020                     lcd_disp_logo@show:
  3716                           	opt stack 0
  3717  000020                     lcd_disp_unit_t@show:
  3718                           	opt stack 0
  3719  000020                     lcd_disp_unit_1st_m@show:
  3720                           	opt stack 0
  3721  000020                     lcd_disp_unit_1st_m3@show:
  3722                           	opt stack 0
  3723  000020                     lcd_disp_unit_temperature@show:
  3724                           	opt stack 0
  3725  000020                     lcd_disp_unit_2nd_m@show:
  3726                           	opt stack 0
  3727  000020                     lcd_disp_unit_2nd_m3@show:
  3728                           	opt stack 0
  3729  000020                     lcd_disp_unit_mpa@show:
  3730                           	opt stack 0
  3731  000020                     m_flash_unlock@oldGIE:
  3732                           	opt stack 0
  3733  000020                     ___lbdiv@divisor:
  3734                           	opt stack 0
  3735                           
  3736                           ; 1 bytes @ 0x1F
  3737  000020                     	ds	1
  3738  000021                     tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           postdec1	equ	0xFE5
  3745                           fsr1h	equ	0xFE2
  3746                           fsr1l	equ	0xFE1
  3747                           
  3748                           ; 1 bytes @ 0x20
  3749 ;;
  3750 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3751 ;;
  3752 ;; *************** function _main *****************
  3753 ;; Defined at:
  3754 ;;		line 5 in file "src/app/main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;  t16             2    0        unsigned int 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2  1323[None  ] int 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels required when called:   14
  3774 ;; This function calls:
  3775 ;;		_ads1115_init_all_chip
  3776 ;;		_data_init_all
  3777 ;;		_event_process_rtc
  3778 ;;		_event_process_ticker
  3779 ;;		_event_process_time_out
  3780 ;;		_in_adc_init
  3781 ;;		_key_polling
  3782 ;;		_key_process
  3783 ;;		_lcd_init
  3784 ;;		_rtc_set
  3785 ;;		_soc_init
  3786 ;;		_ui_disp_start_cs600
  3787 ;; This function is called by:
  3788 ;;		Startup code after reset
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text0
  3793  008F92                     __ptext0:
  3794                           	opt stack 0
  3795  008F92                     _main:
  3796                           	opt stack 17
  3797                           
  3798                           ;main.c: 7: uint16_t t16;
  3799                           ;main.c: 8: __nop();
  3800                           
  3801                           ;incstack = 0
  3802  008F92  F000               	nop	
  3803                           
  3804                           ;main.c: 10: soc_init();
  3805  008F94  EC9D  F051         	call	_soc_init	;wreg free
  3806                           
  3807                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  3808  008F98  0EF6               	movlw	low _defalutRtc
  3809  008F9A  0100               	movlb	0	; () banked
  3810  008F9C  6F60               	movwf	rtc_set@rtc& (0+255),b
  3811  008F9E  0E01               	movlw	high _defalutRtc
  3812  008FA0  0100               	movlb	0	; () banked
  3813  008FA2  6F61               	movwf	(rtc_set@rtc+1)& (0+255),b
  3814  008FA4  EC0A  F03A         	call	_rtc_set	;wreg free
  3815                           
  3816                           ;main.c: 12: lcd_init();
  3817  008FA8  ECCD  F050         	call	_lcd_init	;wreg free
  3818                           
  3819                           ;main.c: 14: ads1115_init_all_chip();
  3820  008FAC  ECC7  F04C         	call	_ads1115_init_all_chip	;wreg free
  3821                           
  3822                           ;main.c: 15: data_init_all();
  3823  008FB0  ECB4  F051         	call	_data_init_all	;wreg free
  3824                           
  3825                           ;main.c: 16: in_adc_init();
  3826  008FB4  EC37  F050         	call	_in_adc_init	;wreg free
  3827                           
  3828                           ;main.c: 18: ui_disp_start_cs600(4);
  3829  008FB8  0E04               	movlw	4
  3830  008FBA  EC02  F03E         	call	_ui_disp_start_cs600
  3831                           
  3832                           ;main.c: 23: __nop();
  3833  008FBE  F000               	nop	
  3834  008FC0                     l17648:
  3835                           
  3836                           ;main.c: 25: if(glbEvent & (1<<1)){
  3837  008FC0  A22E               	btfss	_glbEvent,1,c	;volatile
  3838  008FC2  D003               	goto	l17654
  3839                           
  3840                           ;main.c: 26: glbEvent &= ~(1<<1);
  3841  008FC4  922E               	bcf	_glbEvent,1,c	;volatile
  3842                           
  3843                           ;main.c: 27: event_process_rtc();
  3844  008FC6  EC9A  F04F         	call	_event_process_rtc	;wreg free
  3845  008FCA                     l17654:
  3846                           
  3847                           ;main.c: 28: }
  3848                           ;main.c: 29: if(glbEvent & (1<<0)){
  3849  008FCA  A02E               	btfss	_glbEvent,0,c	;volatile
  3850  008FCC  D003               	goto	l17660
  3851                           
  3852                           ;main.c: 30: glbEvent &= ~(1<<0);
  3853  008FCE  902E               	bcf	_glbEvent,0,c	;volatile
  3854                           
  3855                           ;main.c: 31: event_process_ticker();
  3856  008FD0  ECCE  F051         	call	_event_process_ticker	;wreg free
  3857  008FD4                     l17660:
  3858                           
  3859                           ;main.c: 32: }
  3860                           ;main.c: 33: if(glbEvent & (1<<2)){
  3861  008FD4  A42E               	btfss	_glbEvent,2,c	;volatile
  3862  008FD6  D003               	goto	l17666
  3863                           
  3864                           ;main.c: 34: glbEvent &= ~(1<<2);
  3865  008FD8  942E               	bcf	_glbEvent,2,c	;volatile
  3866                           
  3867                           ;main.c: 35: event_process_time_out();
  3868  008FDA  ECDD  F051         	call	_event_process_time_out	;wreg free
  3869  008FDE                     l17666:
  3870                           
  3871                           ;main.c: 36: }
  3872                           ;main.c: 38: keyValue=key_polling();
  3873  008FDE  ECEB  F048         	call	_key_polling	;wreg free
  3874  008FE2  0100               	movlb	0	; () banked
  3875  008FE4  6FFC               	movwf	_keyValue& (0+255),b	;volatile
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;main.c: 39: if(keyValue!=(0x0)){
  3879  008FE6  0100               	movlb	0	; () banked
  3880  008FE8  51FC               	movf	_keyValue& (0+255),w,b	;volatile
  3881  008FEA  B4D8               	btfsc	status,2,c
  3882  008FEC  D7E9               	goto	l17648
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;main.c: 40: key_process();
  3886  008FEE  EC0B  F035         	call	_key_process	;wreg free
  3887  008FF2  D7E6               	goto	l17648
  3888  008FF4                     __end_of_main:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           postdec1	equ	0xFE5
  3897                           fsr1h	equ	0xFE2
  3898                           fsr1l	equ	0xFE1
  3899                           status	equ	0xFD8
  3900                           
  3901 ;; *************** function _ui_disp_start_cs600 *****************
  3902 ;; Defined at:
  3903 ;;		line 147 in file "src/api/ui.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  dly             1    wreg     unsigned char 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  dly             1   28[BANK0 ] unsigned char 
  3908 ;;  buf             6   22[BANK0 ] unsigned char [6]
  3909 ;;  t8              1   29[BANK0 ] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;Total ram usage:        8 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    9
  3926 ;; This function calls:
  3927 ;;		_lcd_disp_all
  3928 ;;		_lcd_disp_logo
  3929 ;;		_lcd_disp_refresh
  3930 ;;		_lcd_show_string_l0
  3931 ;;		_lcd_show_string_l1
  3932 ;;		_m_int8_2_hex
  3933 ;;		_ticker_dly
  3934 ;; This function is called by:
  3935 ;;		_main
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text1
  3940  007C04                     __ptext1:
  3941                           	opt stack 0
  3942  007C04                     _ui_disp_start_cs600:
  3943                           	opt stack 21
  3944                           
  3945                           ;incstack = 0
  3946                           ;ui_disp_start_cs600@dly stored from wreg
  3947  007C04  0100               	movlb	0	; () banked
  3948  007C06  6F7C               	movwf	ui_disp_start_cs600@dly& (0+255),b
  3949                           
  3950                           ;ui.c: 149: uint8_t t8;
  3951                           ;ui.c: 150: uint8_t buf[6]="-00-";
  3952  007C08  EE21  F0F0         	lfsr	2,ui_disp_start_cs600@F7726
  3953  007C0C  EE10  F076         	lfsr	1,ui_disp_start_cs600@buf
  3954  007C10  0E05               	movlw	5
  3955  007C12                     u16081:
  3956  007C12  CFDB FFE3          	movff	plusw2,plusw1
  3957  007C16  06E8               	decf	wreg,f,c
  3958  007C18  E2FC               	bc	u16081
  3959                           
  3960                           ;ui.c: 151: lcd_disp_all(0);;
  3961  007C1A  0E00               	movlw	0
  3962  007C1C  EC28  F04F         	call	_lcd_disp_all
  3963                           
  3964                           ;ui.c: 152: lcd_show_string_l0((uint8_t*)("cs66"));
  3965  007C20  0EAA               	movlw	low STR_1
  3966  007C22  0100               	movlb	0	; () banked
  3967  007C24  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
  3968  007C26  0EF3               	movlw	high STR_1
  3969  007C28  0100               	movlb	0	; () banked
  3970  007C2A  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  3971  007C2C  ECF0  F044         	call	_lcd_show_string_l0	;wreg free
  3972                           
  3973                           ;ui.c: 153: lcd_disp_logo(1);
  3974  007C30  0E01               	movlw	1
  3975  007C32  EC10  F04F         	call	_lcd_disp_logo
  3976                           
  3977                           ;ui.c: 154: t8=dly;
  3978  007C36  C07C  F07D         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  3979                           
  3980                           ;ui.c: 155: if(t8<1)t8=1;
  3981  007C3A  0100               	movlb	0	; () banked
  3982  007C3C  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  3983  007C3E  0100               	movlb	0	; () banked
  3984  007C40  A4D8               	btfss	status,2,c
  3985  007C42  D026               	goto	l17280
  3986                           
  3987                           ; BSR set to: 0
  3988  007C44  0E01               	movlw	1
  3989  007C46  0100               	movlb	0	; () banked
  3990  007C48  6F7D               	movwf	ui_disp_start_cs600@t8& (0+255),b
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;ui.c: 156: while(t8){
  3994  007C4A  D022               	goto	l17280
  3995  007C4C                     l17268:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;ui.c: 157: m_int8_2_hex(buf+1,t8-1);
  3999  007C4C  0E77               	movlw	low (ui_disp_start_cs600@buf+1)
  4000  007C4E  0100               	movlb	0	; () banked
  4001  007C50  6F60               	movwf	m_int8_2_hex@str& (0+255),b
  4002  007C52  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  4003  007C54  0100               	movlb	0	; () banked
  4004  007C56  6F61               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  4005  007C58  0100               	movlb	0	; () banked
  4006  007C5A  057D               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  4007  007C5C  0100               	movlb	0	; () banked
  4008  007C5E  6F62               	movwf	m_int8_2_hex@b& (0+255),b
  4009  007C60  EC47  F049         	call	_m_int8_2_hex	;wreg free
  4010                           
  4011                           ;ui.c: 158: buf[4]='\0';
  4012  007C64  0E00               	movlw	0
  4013  007C66  0100               	movlb	0	; () banked
  4014  007C68  6F7A               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;ui.c: 159: lcd_show_string_l1(buf);
  4018  007C6A  0E76               	movlw	low ui_disp_start_cs600@buf
  4019  007C6C  0100               	movlb	0	; () banked
  4020  007C6E  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
  4021  007C70  0E00               	movlw	high ui_disp_start_cs600@buf
  4022  007C72  0100               	movlb	0	; () banked
  4023  007C74  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  4024  007C76  EC28  F04C         	call	_lcd_show_string_l1	;wreg free
  4025                           
  4026                           ;ui.c: 161: lcd_disp_refresh();
  4027  007C7A  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
  4028                           
  4029                           ;ui.c: 162: ticker_dly(1000);
  4030  007C7E  0E03               	movlw	3
  4031  007C80  0100               	movlb	0	; () banked
  4032  007C82  6F61               	movwf	(ticker_dly@ms+1)& (0+255),b
  4033  007C84  0EE8               	movlw	232
  4034  007C86  6F60               	movwf	ticker_dly@ms& (0+255),b
  4035  007C88  ECCA  F04D         	call	_ticker_dly	;wreg free
  4036                           
  4037                           ;ui.c: 163: t8--;
  4038  007C8C  0100               	movlb	0	; () banked
  4039  007C8E  077D               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  4040  007C90                     l17280:
  4041                           
  4042                           ; BSR set to: 0
  4043  007C90  0100               	movlb	0	; () banked
  4044  007C92  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  4045  007C94  0100               	movlb	0	; () banked
  4046  007C96  B4D8               	btfsc	status,2,c
  4047  007C98  0012               	return	
  4048  007C9A  D7D8               	goto	l17268
  4049  007C9C                     __end_of_ui_disp_start_cs600:
  4050                           	opt stack 0
  4051                           tblptru	equ	0xFF8
  4052                           tblptrh	equ	0xFF7
  4053                           tblptrl	equ	0xFF6
  4054                           tablat	equ	0xFF5
  4055                           postinc0	equ	0xFEE
  4056                           wreg	equ	0xFE8
  4057                           postdec1	equ	0xFE5
  4058                           plusw1	equ	0xFE3
  4059                           fsr1h	equ	0xFE2
  4060                           fsr1l	equ	0xFE1
  4061                           plusw2	equ	0xFDB
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function _ticker_dly *****************
  4065 ;; Defined at:
  4066 ;;		line 49 in file "src/soc/ticker.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  ms              2    0[BANK0 ] unsigned int 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:        2 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    4
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_ui_disp_start_cs600
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text2
  4095  009B94                     __ptext2:
  4096                           	opt stack 0
  4097  009B94                     _ticker_dly:
  4098                           	opt stack 25
  4099                           
  4100                           ;ticker.c: 51: dlyTicker=0;
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;incstack = 0
  4104  009B94  0E00               	movlw	0
  4105  009B96  0101               	movlb	1	; () banked
  4106  009B98  6F5F               	movwf	(_dlyTicker+1)& (0+255),b
  4107  009B9A  0E00               	movlw	0
  4108  009B9C  6F5E               	movwf	_dlyTicker& (0+255),b
  4109                           
  4110                           ;ticker.c: 52: dlyTickerEn=1;
  4111  009B9E  0E01               	movlw	1
  4112  009BA0  6E2B               	movwf	_dlyTickerEn,c
  4113                           
  4114                           ;ticker.c: 53: while(dlyTicker<ms){
  4115  009BA2  D001               	goto	l17062
  4116  009BA4                     l2418:
  4117                           
  4118                           ; BSR set to: 1
  4119                           ;ticker.c: 54: __nop();
  4120  009BA4  F000               	nop	
  4121  009BA6                     l17062:
  4122  009BA6  0100               	movlb	0	; () banked
  4123  009BA8  5160               	movf	ticker_dly@ms& (0+255),w,b
  4124  009BAA  0101               	movlb	1	; () banked
  4125  009BAC  5D5E               	subwf	_dlyTicker& (0+255),w,b
  4126  009BAE  0100               	movlb	0	; () banked
  4127  009BB0  5161               	movf	(ticker_dly@ms+1)& (0+255),w,b
  4128  009BB2  0101               	movlb	1	; () banked
  4129  009BB4  595F               	subwfb	(_dlyTicker+1)& (0+255),w,b
  4130  009BB6  A0D8               	btfss	status,0,c
  4131  009BB8  D7F5               	goto	l2418
  4132                           
  4133                           ; BSR set to: 1
  4134                           ;ticker.c: 55: }
  4135                           ;ticker.c: 56: dlyTickerEn=0;
  4136                           
  4137                           ; BSR set to: 1
  4138  009BBA  0E00               	movlw	0
  4139  009BBC  6E2B               	movwf	_dlyTickerEn,c
  4140                           
  4141                           ;ticker.c: 57: dlyTicker=0;
  4142  009BBE  0E00               	movlw	0
  4143  009BC0  0101               	movlb	1	; () banked
  4144  009BC2  6F5F               	movwf	(_dlyTicker+1)& (0+255),b
  4145  009BC4  0E00               	movlw	0
  4146  009BC6  6F5E               	movwf	_dlyTicker& (0+255),b
  4147                           
  4148                           ; BSR set to: 1
  4149  009BC8  0012               	return		;funcret
  4150  009BCA                     __end_of_ticker_dly:
  4151                           	opt stack 0
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           postinc0	equ	0xFEE
  4157                           wreg	equ	0xFE8
  4158                           postdec1	equ	0xFE5
  4159                           plusw1	equ	0xFE3
  4160                           fsr1h	equ	0xFE2
  4161                           fsr1l	equ	0xFE1
  4162                           plusw2	equ	0xFDB
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _m_int8_2_hex *****************
  4166 ;; Defined at:
  4167 ;;		line 243 in file "src/depend/m_string.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  str             2    0[BANK0 ] PTR unsigned char 
  4170 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  4171 ;;  b               1    2[BANK0 ] unsigned char 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  t8              1   31[COMRAM] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4183 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:        4 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    4
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_ui_disp_start_cs600
  4194 ;;		_ui_disp_rtc_mm_ss
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text3
  4199  00928E                     __ptext3:
  4200                           	opt stack 0
  4201  00928E                     _m_int8_2_hex:
  4202                           	opt stack 25
  4203                           
  4204                           ;m_string.c: 245: uint8_t t8;
  4205                           ;m_string.c: 246: t8=b;
  4206                           
  4207                           ; BSR set to: 1
  4208                           ;incstack = 0
  4209  00928E  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  4210                           
  4211                           ;m_string.c: 247: t8>>=4;
  4212  009292  3A20               	swapf	m_int8_2_hex@t8,f,c
  4213  009294  0E0F               	movlw	15
  4214  009296  1620               	andwf	m_int8_2_hex@t8,f,c
  4215                           
  4216                           ;m_string.c: 248: t8 &= 0x0f;
  4217  009298  0E0F               	movlw	15
  4218  00929A  1620               	andwf	m_int8_2_hex@t8,f,c
  4219                           
  4220                           ;m_string.c: 249: str[0]=HexTable[t8];
  4221  00929C  5020               	movf	m_int8_2_hex@t8,w,c
  4222  00929E  0D01               	mullw	1
  4223  0092A0  0E0C               	movlw	low _HexTable
  4224  0092A2  24F3               	addwf	prodl,w,c
  4225  0092A4  6EF6               	movwf	tblptrl,c
  4226  0092A6  0EEF               	movlw	high _HexTable
  4227  0092A8  20F4               	addwfc	prodh,w,c
  4228  0092AA  6EF7               	movwf	tblptrh,c
  4229  0092AC                     	if	0	;There are less than 3 active tblptr bytes
  4230  0092AC                     	endif
  4231  0092AC  C060  FFD9         	movff	m_int8_2_hex@str,fsr2l
  4232  0092B0  C061  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  4233  0092B4  0008               	tblrd		*
  4234  0092B6  CFF5 FFDF          	movff	tablat,indf2
  4235                           
  4236                           ;m_string.c: 251: t8=b;
  4237  0092BA  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  4238                           
  4239                           ;m_string.c: 253: t8 &= 0x0f;
  4240  0092BE  0E0F               	movlw	15
  4241  0092C0  1620               	andwf	m_int8_2_hex@t8,f,c
  4242                           
  4243                           ;m_string.c: 254: str[1]=HexTable[t8];
  4244  0092C2  5020               	movf	m_int8_2_hex@t8,w,c
  4245  0092C4  0D01               	mullw	1
  4246  0092C6  0E0C               	movlw	low _HexTable
  4247  0092C8  24F3               	addwf	prodl,w,c
  4248  0092CA  6EF6               	movwf	tblptrl,c
  4249  0092CC  0EEF               	movlw	high _HexTable
  4250  0092CE  20F4               	addwfc	prodh,w,c
  4251  0092D0  6EF7               	movwf	tblptrh,c
  4252  0092D2                     	if	0	;There are less than 3 active tblptr bytes
  4253  0092D2                     	endif
  4254  0092D2  0100               	movlb	0	; () banked
  4255  0092D4  EE20 F001          	lfsr	2,1
  4256  0092D8  5160               	movf	m_int8_2_hex@str& (0+255),w,b
  4257  0092DA  26D9               	addwf	fsr2l,f,c
  4258  0092DC  5161               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  4259  0092DE  22DA               	addwfc	fsr2h,f,c
  4260  0092E0  0008               	tblrd		*
  4261  0092E2  CFF5 FFDF          	movff	tablat,indf2
  4262                           
  4263                           ; BSR set to: 0
  4264  0092E6  0012               	return		;funcret
  4265  0092E8                     __end_of_m_int8_2_hex:
  4266                           	opt stack 0
  4267                           tblptru	equ	0xFF8
  4268                           tblptrh	equ	0xFF7
  4269                           tblptrl	equ	0xFF6
  4270                           tablat	equ	0xFF5
  4271                           prodh	equ	0xFF4
  4272                           prodl	equ	0xFF3
  4273                           postinc0	equ	0xFEE
  4274                           wreg	equ	0xFE8
  4275                           postdec1	equ	0xFE5
  4276                           plusw1	equ	0xFE3
  4277                           fsr1h	equ	0xFE2
  4278                           fsr1l	equ	0xFE1
  4279                           indf2	equ	0xFDF
  4280                           plusw2	equ	0xFDB
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function _soc_init *****************
  4286 ;; Defined at:
  4287 ;;		line 2 in file "src/soc/soc.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    6
  4308 ;; This function calls:
  4309 ;;		_rtc_init
  4310 ;;		_sys_ticker_init
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text4
  4317  00A33A                     __ptext4:
  4318                           	opt stack 0
  4319  00A33A                     _soc_init:
  4320                           	opt stack 24
  4321                           
  4322                           ;soc.c: 5: sys_ticker_init();
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;incstack = 0
  4326  00A33A  ECA5  F051         	call	_sys_ticker_init	;wreg free
  4327                           
  4328                           ;soc.c: 6: rtc_init();
  4329  00A33E  EC89  F04C         	call	_rtc_init	;wreg free
  4330                           
  4331                           ;soc.c: 8: INTCONbits.PEIE = 1;
  4332  00A342  8CF2               	bsf	intcon,6,c	;volatile
  4333                           
  4334                           ;soc.c: 9: INTCONbits.GIE = 1;
  4335  00A344  8EF2               	bsf	intcon,7,c	;volatile
  4336                           
  4337                           ;soc.c: 11: RCONbits.IPEN=0;
  4338  00A346  9ED0               	bcf	4048,7,c	;volatile
  4339  00A348  0012               	return		;funcret
  4340  00A34A                     __end_of_soc_init:
  4341                           	opt stack 0
  4342                           tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           prodh	equ	0xFF4
  4347                           prodl	equ	0xFF3
  4348                           intcon	equ	0xFF2
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           postdec1	equ	0xFE5
  4352                           plusw1	equ	0xFE3
  4353                           fsr1h	equ	0xFE2
  4354                           fsr1l	equ	0xFE1
  4355                           indf2	equ	0xFDF
  4356                           plusw2	equ	0xFDB
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _sys_ticker_init *****************
  4362 ;; Defined at:
  4363 ;;		line 29 in file "src/soc/ticker.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    4
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_soc_init
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text5
  4392  00A34A                     __ptext5:
  4393                           	opt stack 0
  4394  00A34A                     _sys_ticker_init:
  4395                           	opt stack 25
  4396                           
  4397                           ;ticker.c: 32: PR2=(uint8_t)((11059200/4/16/16/100));
  4398                           
  4399                           ;incstack = 0
  4400  00A34A  0E6C               	movlw	108
  4401  00A34C  6ECB               	movwf	4043,c	;volatile
  4402                           
  4403                           ;ticker.c: 33: IPR1bits.TMR2IP=1;
  4404  00A34E  829F               	bsf	3999,1,c	;volatile
  4405                           
  4406                           ;ticker.c: 34: PIR1bits.TMR2IF=0;
  4407  00A350  929E               	bcf	3998,1,c	;volatile
  4408                           
  4409                           ;ticker.c: 35: PIE1bits.TMR2IE=1;
  4410  00A352  829D               	bsf	3997,1,c	;volatile
  4411                           
  4412                           ;ticker.c: 37: T2CON=0x7f;
  4413  00A354  0E7F               	movlw	127
  4414  00A356  6ECA               	movwf	4042,c	;volatile
  4415  00A358  0012               	return		;funcret
  4416  00A35A                     __end_of_sys_ticker_init:
  4417                           	opt stack 0
  4418                           tblptru	equ	0xFF8
  4419                           tblptrh	equ	0xFF7
  4420                           tblptrl	equ	0xFF6
  4421                           tablat	equ	0xFF5
  4422                           prodh	equ	0xFF4
  4423                           prodl	equ	0xFF3
  4424                           intcon	equ	0xFF2
  4425                           postinc0	equ	0xFEE
  4426                           wreg	equ	0xFE8
  4427                           postdec1	equ	0xFE5
  4428                           plusw1	equ	0xFE3
  4429                           fsr1h	equ	0xFE2
  4430                           fsr1l	equ	0xFE1
  4431                           indf2	equ	0xFDF
  4432                           plusw2	equ	0xFDB
  4433                           fsr2h	equ	0xFDA
  4434                           fsr2l	equ	0xFD9
  4435                           status	equ	0xFD8
  4436                           
  4437 ;; *************** function _rtc_init *****************
  4438 ;; Defined at:
  4439 ;;		line 25 in file "src/soc/rtc.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;Total ram usage:        0 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    5
  4460 ;; This function calls:
  4461 ;;		_rtcc_reg_wr_disable
  4462 ;;		_rtcc_reg_wr_enable
  4463 ;; This function is called by:
  4464 ;;		_soc_init
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text6
  4469  009912                     __ptext6:
  4470                           	opt stack 0
  4471  009912                     _rtc_init:
  4472                           	opt stack 24
  4473                           
  4474                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  4475                           
  4476                           ;incstack = 0
  4477  009912  010F               	movlb	15	; () banked
  4478  009914  9554               	bcf	84,2,b	;volatile
  4479                           
  4480                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  4481  009916  010F               	movlb	15	; () banked
  4482  009918  8354               	bsf	84,1,b	;volatile
  4483                           
  4484                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  4485  00991A  010F               	movlb	15	; () banked
  4486  00991C  955F               	bcf	95,2,b	;volatile
  4487                           
  4488                           ;rtc.c: 31: ALRMRPT=0xff;
  4489  00991E  010F               	movlb	15	; () banked
  4490  009920  695A               	setf	90,b	;volatile
  4491                           
  4492                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  4493  009922  010F               	movlb	15	; () banked
  4494  009924  8F5B               	bsf	91,7,b	;volatile
  4495                           
  4496                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  4497  009926  010F               	movlb	15	; () banked
  4498  009928  8D5B               	bsf	91,6,b	;volatile
  4499                           
  4500                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  4501  00992A  010F               	movlb	15	; () banked
  4502  00992C  955B               	bcf	91,2,b	;volatile
  4503  00992E  975B               	bcf	91,3,b	;volatile
  4504  009930  995B               	bcf	91,4,b	;volatile
  4505  009932  9B5B               	bcf	91,5,b	;volatile
  4506                           
  4507                           ;rtc.c: 37: __nop();
  4508  009934  F000               	nop	
  4509                           
  4510                           ;rtc.c: 38: rtcc_reg_wr_enable();
  4511  009936  ECC2  F051         	call	_rtcc_reg_wr_enable	;wreg free
  4512                           
  4513                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  4514  00993A  010F               	movlb	15	; () banked
  4515  00993C  8F5F               	bsf	95,7,b	;volatile
  4516                           
  4517                           ;rtc.c: 42: rtcc_reg_wr_disable();
  4518  00993E  ECC8  F051         	call	_rtcc_reg_wr_disable	;wreg free
  4519                           
  4520                           ;rtc.c: 43: __nop();
  4521  009942  F000               	nop	
  4522                           
  4523                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  4524  009944  80A5               	bsf	4005,0,c	;volatile
  4525                           
  4526                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  4527  009946  90A4               	bcf	4004,0,c	;volatile
  4528                           
  4529                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  4530  009948  80A3               	bsf	4003,0,c	;volatile
  4531                           
  4532                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  4533  00994A  86CD               	bsf	4045,3,c	;volatile
  4534                           
  4535                           ;rtc.c: 51: __nop();
  4536  00994C  F000               	nop	
  4537  00994E  0012               	return		;funcret
  4538  009950                     __end_of_rtc_init:
  4539                           	opt stack 0
  4540                           tblptru	equ	0xFF8
  4541                           tblptrh	equ	0xFF7
  4542                           tblptrl	equ	0xFF6
  4543                           tablat	equ	0xFF5
  4544                           prodh	equ	0xFF4
  4545                           prodl	equ	0xFF3
  4546                           intcon	equ	0xFF2
  4547                           postinc0	equ	0xFEE
  4548                           wreg	equ	0xFE8
  4549                           postdec1	equ	0xFE5
  4550                           plusw1	equ	0xFE3
  4551                           fsr1h	equ	0xFE2
  4552                           fsr1l	equ	0xFE1
  4553                           indf2	equ	0xFDF
  4554                           plusw2	equ	0xFDB
  4555                           fsr2h	equ	0xFDA
  4556                           fsr2l	equ	0xFD9
  4557                           status	equ	0xFD8
  4558                           
  4559 ;; *************** function _rtc_set *****************
  4560 ;; Defined at:
  4561 ;;		line 54 in file "src/soc/rtc.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  4564 ;;		 -> defalutRtc(7), 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  stp             2    2[BANK0 ] PTR struct .
  4567 ;;		 -> defalutRtc(7), 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;Total ram usage:        4 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    5
  4584 ;; This function calls:
  4585 ;;		_rtcc_reg_wr_disable
  4586 ;;		_rtcc_reg_wr_enable
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text7
  4593  007414                     __ptext7:
  4594                           	opt stack 0
  4595  007414                     _rtc_set:
  4596                           	opt stack 25
  4597                           
  4598                           ;rtc.c: 56: st_RtcDef* stp;
  4599                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  4600                           
  4601                           ;incstack = 0
  4602  007414  C060  F062         	movff	rtc_set@rtc,rtc_set@stp
  4603  007418  C061  F063         	movff	rtc_set@rtc+1,rtc_set@stp+1
  4604                           
  4605                           ;rtc.c: 58: rtcc_reg_wr_enable();
  4606  00741C  ECC2  F051         	call	_rtcc_reg_wr_enable	;wreg free
  4607                           
  4608                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  4609  007420  0EFC               	movlw	-4
  4610  007422  010F               	movlb	15	; () banked
  4611  007424  175F               	andwf	95,f,b	;volatile
  4612                           
  4613                           ; BSR set to: 15
  4614                           ;rtc.c: 61: RTCVALL=stp->second;
  4615  007426  0100               	movlb	0	; () banked
  4616  007428  EE20 F005          	lfsr	2,5
  4617  00742C  5162               	movf	rtc_set@stp& (0+255),w,b
  4618  00742E  26D9               	addwf	fsr2l,f,c
  4619  007430  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4620  007432  22DA               	addwfc	fsr2h,f,c
  4621  007434  50DF               	movf	indf2,w,c
  4622  007436  010F               	movlb	15	; () banked
  4623  007438  6F5C               	movwf	92,b	;volatile
  4624                           
  4625                           ; BSR set to: 15
  4626                           ;rtc.c: 62: RTCVALH=stp->minute;
  4627  00743A  0100               	movlb	0	; () banked
  4628  00743C  EE20 F004          	lfsr	2,4
  4629  007440  5162               	movf	rtc_set@stp& (0+255),w,b
  4630  007442  26D9               	addwf	fsr2l,f,c
  4631  007444  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4632  007446  22DA               	addwfc	fsr2h,f,c
  4633  007448  50DF               	movf	indf2,w,c
  4634  00744A  010F               	movlb	15	; () banked
  4635  00744C  6F5D               	movwf	93,b	;volatile
  4636                           
  4637                           ; BSR set to: 15
  4638                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  4639  00744E  010F               	movlb	15	; () banked
  4640  007450  515F               	movf	95,w,b	;volatile
  4641  007452  0BFC               	andlw	-4
  4642  007454  0901               	iorlw	1
  4643  007456  6F5F               	movwf	95,b	;volatile
  4644                           
  4645                           ; BSR set to: 15
  4646                           ;rtc.c: 64: RTCVALL=stp->hour;
  4647  007458  0100               	movlb	0	; () banked
  4648  00745A  EE20 F003          	lfsr	2,3
  4649  00745E  5162               	movf	rtc_set@stp& (0+255),w,b
  4650  007460  26D9               	addwf	fsr2l,f,c
  4651  007462  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4652  007464  22DA               	addwfc	fsr2h,f,c
  4653  007466  50DF               	movf	indf2,w,c
  4654  007468  010F               	movlb	15	; () banked
  4655  00746A  6F5C               	movwf	92,b	;volatile
  4656                           
  4657                           ; BSR set to: 15
  4658                           ;rtc.c: 65: RTCVALH=stp->day;
  4659  00746C  0100               	movlb	0	; () banked
  4660  00746E  EE20 F006          	lfsr	2,6
  4661  007472  5162               	movf	rtc_set@stp& (0+255),w,b
  4662  007474  26D9               	addwf	fsr2l,f,c
  4663  007476  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4664  007478  22DA               	addwfc	fsr2h,f,c
  4665  00747A  50DF               	movf	indf2,w,c
  4666  00747C  010F               	movlb	15	; () banked
  4667  00747E  6F5D               	movwf	93,b	;volatile
  4668                           
  4669                           ; BSR set to: 15
  4670                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  4671  007480  010F               	movlb	15	; () banked
  4672  007482  515F               	movf	95,w,b	;volatile
  4673  007484  0BFC               	andlw	-4
  4674  007486  0902               	iorlw	2
  4675  007488  6F5F               	movwf	95,b	;volatile
  4676                           
  4677                           ; BSR set to: 15
  4678                           ;rtc.c: 67: RTCVALL=stp->date;
  4679  00748A  0100               	movlb	0	; () banked
  4680  00748C  EE20 F002          	lfsr	2,2
  4681  007490  5162               	movf	rtc_set@stp& (0+255),w,b
  4682  007492  26D9               	addwf	fsr2l,f,c
  4683  007494  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4684  007496  22DA               	addwfc	fsr2h,f,c
  4685  007498  50DF               	movf	indf2,w,c
  4686  00749A  010F               	movlb	15	; () banked
  4687  00749C  6F5C               	movwf	92,b	;volatile
  4688                           
  4689                           ; BSR set to: 15
  4690                           ;rtc.c: 68: RTCVALH=stp->month;
  4691  00749E  0100               	movlb	0	; () banked
  4692  0074A0  EE20 F001          	lfsr	2,1
  4693  0074A4  5162               	movf	rtc_set@stp& (0+255),w,b
  4694  0074A6  26D9               	addwf	fsr2l,f,c
  4695  0074A8  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  4696  0074AA  22DA               	addwfc	fsr2h,f,c
  4697  0074AC  50DF               	movf	indf2,w,c
  4698  0074AE  010F               	movlb	15	; () banked
  4699  0074B0  6F5D               	movwf	93,b	;volatile
  4700                           
  4701                           ; BSR set to: 15
  4702                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  4703  0074B2  0E03               	movlw	3
  4704  0074B4  010F               	movlb	15	; () banked
  4705  0074B6  135F               	iorwf	95,f,b	;volatile
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;rtc.c: 70: RTCVALL=stp->year;
  4709  0074B8  C062  FFD9         	movff	rtc_set@stp,fsr2l
  4710  0074BC  C063  FFDA         	movff	rtc_set@stp+1,fsr2h
  4711  0074C0  50DF               	movf	indf2,w,c
  4712  0074C2  010F               	movlb	15	; () banked
  4713  0074C4  6F5C               	movwf	92,b	;volatile
  4714                           
  4715                           ; BSR set to: 15
  4716                           ;rtc.c: 71: rtcc_reg_wr_disable();
  4717  0074C6  ECC8  F051         	call	_rtcc_reg_wr_disable	;wreg free
  4718  0074CA  0012               	return		;funcret
  4719  0074CC                     __end_of_rtc_set:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           postdec1	equ	0xFE5
  4731                           plusw1	equ	0xFE3
  4732                           fsr1h	equ	0xFE2
  4733                           fsr1l	equ	0xFE1
  4734                           indf2	equ	0xFDF
  4735                           plusw2	equ	0xFDB
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _rtcc_reg_wr_enable *****************
  4741 ;; Defined at:
  4742 ;;		line 9 in file "src/soc/rtc.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		None
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:        0 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    4
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_rtc_init
  4767 ;;		_rtc_set
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text8
  4772  00A384                     __ptext8:
  4773                           	opt stack 0
  4774  00A384                     _rtcc_reg_wr_enable:
  4775                           	opt stack 24
  4776                           
  4777                           ;incstack = 0
  4778  00A384  0E55               	movlw	85	;# 
  4779  00A386  6EA7               	movwf	4007,c	;# 
  4780  00A388  0EAA               	movlw	170	;# 
  4781  00A38A  6EA7               	movwf	4007,c	;# 
  4782  00A38C  8B5F               	bsf	3935,5,b	;# 
  4783  00A38E  0012               	return		;funcret
  4784  00A390                     __end_of_rtcc_reg_wr_enable:
  4785                           	opt stack 0
  4786                           tblptru	equ	0xFF8
  4787                           tblptrh	equ	0xFF7
  4788                           tblptrl	equ	0xFF6
  4789                           tablat	equ	0xFF5
  4790                           prodh	equ	0xFF4
  4791                           prodl	equ	0xFF3
  4792                           intcon	equ	0xFF2
  4793                           postinc0	equ	0xFEE
  4794                           wreg	equ	0xFE8
  4795                           postdec1	equ	0xFE5
  4796                           plusw1	equ	0xFE3
  4797                           fsr1h	equ	0xFE2
  4798                           fsr1l	equ	0xFE1
  4799                           indf2	equ	0xFDF
  4800                           plusw2	equ	0xFDB
  4801                           fsr2h	equ	0xFDA
  4802                           fsr2l	equ	0xFD9
  4803                           status	equ	0xFD8
  4804                           
  4805 ;; *************** function _rtcc_reg_wr_disable *****************
  4806 ;; Defined at:
  4807 ;;		line 17 in file "src/soc/rtc.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		None
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;Total ram usage:        0 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    4
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_rtc_init
  4832 ;;		_rtc_set
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text9
  4837  00A390                     __ptext9:
  4838                           	opt stack 0
  4839  00A390                     _rtcc_reg_wr_disable:
  4840                           	opt stack 24
  4841                           
  4842                           ;incstack = 0
  4843  00A390  0E55               	movlw	85	;# 
  4844  00A392  6EA7               	movwf	4007,c	;# 
  4845  00A394  0EAA               	movlw	170	;# 
  4846  00A396  6EA7               	movwf	4007,c	;# 
  4847  00A398  9B5F               	bcf	3935,5,b	;# 
  4848  00A39A  0012               	return		;funcret
  4849  00A39C                     __end_of_rtcc_reg_wr_disable:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           prodh	equ	0xFF4
  4856                           prodl	equ	0xFF3
  4857                           intcon	equ	0xFF2
  4858                           postinc0	equ	0xFEE
  4859                           wreg	equ	0xFE8
  4860                           postdec1	equ	0xFE5
  4861                           plusw1	equ	0xFE3
  4862                           fsr1h	equ	0xFE2
  4863                           fsr1l	equ	0xFE1
  4864                           indf2	equ	0xFDF
  4865                           plusw2	equ	0xFDB
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _lcd_init *****************
  4871 ;; Defined at:
  4872 ;;		line 670 in file "src/driver/lcd.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    6
  4893 ;; This function calls:
  4894 ;;		_lcd_bl_off
  4895 ;;		_lcd_bl_on
  4896 ;;		_lcd_config
  4897 ;; This function is called by:
  4898 ;;		_main
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text10
  4903  00A19A                     __ptext10:
  4904                           	opt stack 0
  4905  00A19A                     _lcd_init:
  4906                           	opt stack 24
  4907                           
  4908                           ;lcd.c: 672: lcd_config();
  4909                           
  4910                           ;incstack = 0
  4911  00A19A  EC22  F04D         	call	_lcd_config	;wreg free
  4912                           
  4913                           ;lcd.c: 674: LCDCON=0x8f;;
  4914  00A19E  0E8F               	movlw	143
  4915  00A1A0  6EA8               	movwf	4008,c	;volatile
  4916                           
  4917                           ;lcd.c: 675: if(blackEn){
  4918  00A1A2  0100               	movlb	0	; () banked
  4919  00A1A4  51FB               	movf	_blackEn& (0+255),w,b	;volatile
  4920  00A1A6  B4D8               	btfsc	status,2,c
  4921  00A1A8  D003               	goto	l17354
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;lcd.c: 676: lcd_bl_on();
  4925  00A1AA  ECD4  F051         	call	_lcd_bl_on	;wreg free
  4926                           
  4927                           ;lcd.c: 677: }
  4928  00A1AE  0012               	return	
  4929  00A1B0                     l17354:
  4930                           
  4931                           ;lcd.c: 678: else{
  4932                           ;lcd.c: 679: lcd_bl_off();
  4933  00A1B0  ECD9  F051         	call	_lcd_bl_off	;wreg free
  4934  00A1B4  0012               	return	
  4935  00A1B6                     __end_of_lcd_init:
  4936                           	opt stack 0
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           postdec1	equ	0xFE5
  4947                           plusw1	equ	0xFE3
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           indf2	equ	0xFDF
  4951                           plusw2	equ	0xFDB
  4952                           fsr2h	equ	0xFDA
  4953                           fsr2l	equ	0xFD9
  4954                           status	equ	0xFD8
  4955                           
  4956 ;; *************** function _lcd_config *****************
  4957 ;; Defined at:
  4958 ;;		line 616 in file "src/driver/lcd.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;Total ram usage:        0 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    5
  4979 ;; This function calls:
  4980 ;;		_lcd_disp_all
  4981 ;; This function is called by:
  4982 ;;		_lcd_init
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text11
  4987  009A44                     __ptext11:
  4988                           	opt stack 0
  4989  009A44                     _lcd_config:
  4990                           	opt stack 24
  4991                           
  4992                           ;lcd.c: 625: LCDREG=0;
  4993                           
  4994                           ;incstack = 0
  4995  009A44  0E00               	movlw	0
  4996  009A46  6ED2               	movwf	4050,c	;volatile
  4997                           
  4998                           ;lcd.c: 626: LCDREGbits.CPEN=1;
  4999  009A48  8CD2               	bsf	4050,6,c	;volatile
  5000                           
  5001                           ;lcd.c: 627: LCDREGbits.BIAS=7;
  5002  009A4A  86D2               	bsf	4050,3,c	;volatile
  5003  009A4C  88D2               	bsf	4050,4,c	;volatile
  5004  009A4E  8AD2               	bsf	4050,5,c	;volatile
  5005                           
  5006                           ;lcd.c: 628: LCDREGbits.MODE13=1;
  5007  009A50  84D2               	bsf	4050,2,c	;volatile
  5008                           
  5009                           ;lcd.c: 630: LCDPSbits.WFT = 0;
  5010  009A52  9EAA               	bcf	4010,7,c	;volatile
  5011                           
  5012                           ;lcd.c: 631: LCDPSbits.BIASMD = 0;
  5013  009A54  9CAA               	bcf	4010,6,c	;volatile
  5014                           
  5015                           ;lcd.c: 632: LCDPSbits.LP3 = 0;
  5016  009A56  96AA               	bcf	4010,3,c	;volatile
  5017                           
  5018                           ;lcd.c: 633: LCDPSbits.LP2 = 1;
  5019  009A58  84AA               	bsf	4010,2,c	;volatile
  5020                           
  5021                           ;lcd.c: 634: LCDPSbits.LP1 = 0;
  5022  009A5A  92AA               	bcf	4010,1,c	;volatile
  5023                           
  5024                           ;lcd.c: 635: LCDPSbits.LP0 = 0;
  5025  009A5C  90AA               	bcf	4010,0,c	;volatile
  5026                           
  5027                           ;lcd.c: 638: LCDSE0 = 0b11111111;
  5028  009A5E  68A9               	setf	4009,c	;volatile
  5029                           
  5030                           ;lcd.c: 639: LCDSE1 = 0b11100000;
  5031  009A60  0EE0               	movlw	224
  5032  009A62  6EB6               	movwf	4022,c	;volatile
  5033                           
  5034                           ;lcd.c: 640: LCDSE2 = 0b11111000;
  5035  009A64  0EF8               	movlw	248
  5036  009A66  6EB7               	movwf	4023,c	;volatile
  5037                           
  5038                           ;lcd.c: 641: LCDSE3 = 0b11000011;
  5039  009A68  0EC3               	movlw	195
  5040  009A6A  6EB8               	movwf	4024,c	;volatile
  5041                           
  5042                           ;lcd.c: 642: LCDSE4 = 0b11111110;
  5043  009A6C  0EFE               	movlw	254
  5044  009A6E  6EB9               	movwf	4025,c	;volatile
  5045                           
  5046                           ;lcd.c: 643: LCDSE5 = 0b11001111;
  5047  009A70  0ECF               	movlw	207
  5048  009A72  6EBA               	movwf	4026,c	;volatile
  5049                           
  5050                           ;lcd.c: 646: lcd_disp_all(0x00);;
  5051  009A74  0E00               	movlw	0
  5052  009A76  EC28  F04F         	call	_lcd_disp_all
  5053  009A7A  0012               	return		;funcret
  5054  009A7C                     __end_of_lcd_config:
  5055                           	opt stack 0
  5056                           tblptru	equ	0xFF8
  5057                           tblptrh	equ	0xFF7
  5058                           tblptrl	equ	0xFF6
  5059                           tablat	equ	0xFF5
  5060                           prodh	equ	0xFF4
  5061                           prodl	equ	0xFF3
  5062                           intcon	equ	0xFF2
  5063                           postinc0	equ	0xFEE
  5064                           wreg	equ	0xFE8
  5065                           postdec1	equ	0xFE5
  5066                           plusw1	equ	0xFE3
  5067                           fsr1h	equ	0xFE2
  5068                           fsr1l	equ	0xFE1
  5069                           indf2	equ	0xFDF
  5070                           plusw2	equ	0xFDB
  5071                           fsr2h	equ	0xFDA
  5072                           fsr2l	equ	0xFD9
  5073                           status	equ	0xFD8
  5074                           
  5075 ;; *************** function _key_process *****************
  5076 ;; Defined at:
  5077 ;;		line 999 in file "src/api/key_menu.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  tm              2    0[BANK1 ] unsigned int 
  5082 ;;  key             1    2[BANK1 ] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;Total ram usage:        3 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:   13
  5099 ;; This function calls:
  5100 ;;		_key_process_down
  5101 ;;		_key_process_set
  5102 ;;		_key_process_set_long
  5103 ;;		_key_process_set_up_long
  5104 ;;		_key_process_up
  5105 ;;		_key_waite_release
  5106 ;;		_lcd_bl_off
  5107 ;;		_lcd_bl_on
  5108 ;;		_ui_disp_menu
  5109 ;; This function is called by:
  5110 ;;		_main
  5111 ;;		_event_process
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text12
  5116  006A16                     __ptext12:
  5117                           	opt stack 0
  5118  006A16                     _key_process:
  5119                           	opt stack 17
  5120                           
  5121                           ;key_menu.c: 1001: uint16_t tm;
  5122                           ;key_menu.c: 1002: uint8_t key;
  5123                           ;key_menu.c: 1003: tm=key_waite_release(2000,&key);
  5124                           
  5125                           ;incstack = 0
  5126  006A16  0E07               	movlw	7
  5127  006A18  0100               	movlb	0	; () banked
  5128  006A1A  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5129  006A1C  0ED0               	movlw	208
  5130  006A1E  6F68               	movwf	key_waite_release@timeout& (0+255),b
  5131  006A20  0EFF               	movlw	low key_process@key
  5132  006A22  0100               	movlb	0	; () banked
  5133  006A24  6F6A               	movwf	key_waite_release@key& (0+255),b
  5134  006A26  0E01               	movlw	high key_process@key
  5135  006A28  0100               	movlb	0	; () banked
  5136  006A2A  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  5137  006A2C  ECBE  F04B         	call	_key_waite_release	;wreg free
  5138  006A30  C068  F1FD         	movff	?_key_waite_release,key_process@tm
  5139  006A34  C069  F1FE         	movff	?_key_waite_release+1,key_process@tm+1
  5140                           
  5141                           ;key_menu.c: 1004: if(tm>=2000){
  5142  006A38  0ED0               	movlw	208
  5143  006A3A  0101               	movlb	1	; () banked
  5144  006A3C  5DFD               	subwf	key_process@tm& (0+255),w,b
  5145  006A3E  0E07               	movlw	7
  5146  006A40  0101               	movlb	1	; () banked
  5147  006A42  59FE               	subwfb	(key_process@tm+1)& (0+255),w,b
  5148  006A44  A0D8               	btfss	status,0,c
  5149  006A46  D028               	goto	l17236
  5150                           
  5151                           ; BSR set to: 1
  5152                           ;key_menu.c: 1006: if(key==(0x01<<0x02)){
  5153  006A48  0E04               	movlw	4
  5154  006A4A  0101               	movlb	1	; () banked
  5155  006A4C  19FF               	xorwf	key_process@key& (0+255),w,b
  5156  006A4E  A4D8               	btfss	status,2,c
  5157  006A50  D003               	goto	l17224
  5158                           
  5159                           ; BSR set to: 1
  5160                           ;key_menu.c: 1007: key_process_set_long();
  5161  006A52  EC66  F03A         	call	_key_process_set_long	;wreg free
  5162                           
  5163                           ;key_menu.c: 1008: }else if(key == ((0x01<<0x02)+(0x01<<0x01))){
  5164  006A56  D035               	goto	l17248
  5165  006A58                     l17224:
  5166  006A58  0E06               	movlw	6
  5167  006A5A  0101               	movlb	1	; () banked
  5168  006A5C  19FF               	xorwf	key_process@key& (0+255),w,b
  5169  006A5E  A4D8               	btfss	status,2,c
  5170  006A60  D003               	goto	l17228
  5171                           
  5172                           ; BSR set to: 1
  5173                           ;key_menu.c: 1009: key_process_set_up_long();
  5174  006A62  ECDA  F035         	call	_key_process_set_up_long	;wreg free
  5175                           
  5176                           ;key_menu.c: 1010: }else if(key == (0x01<<0x0) + (0x01<<0x01)){
  5177  006A66  D02D               	goto	l17248
  5178  006A68                     l17228:
  5179  006A68  0E03               	movlw	3
  5180  006A6A  0101               	movlb	1	; () banked
  5181  006A6C  19FF               	xorwf	key_process@key& (0+255),w,b
  5182  006A6E  A4D8               	btfss	status,2,c
  5183  006A70  D028               	goto	l17248
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;key_menu.c: 1011: blackEn= (!blackEn);
  5187  006A72  0100               	movlb	0	; () banked
  5188  006A74  51FB               	movf	_blackEn& (0+255),w,b	;volatile
  5189  006A76  A4D8               	btfss	status,2,c
  5190  006A78  D002               	goto	u16020
  5191  006A7A  0E01               	movlw	1
  5192  006A7C  D001               	goto	u16030
  5193  006A7E                     u16020:
  5194  006A7E  0E00               	movlw	0
  5195  006A80                     u16030:
  5196  006A80  0100               	movlb	0	; () banked
  5197  006A82  6FFB               	movwf	_blackEn& (0+255),b	;volatile
  5198                           
  5199                           ;key_menu.c: 1012: if(blackEn)lcd_bl_on();
  5200  006A84  0100               	movlb	0	; () banked
  5201  006A86  51FB               	movf	_blackEn& (0+255),w,b	;volatile
  5202  006A88  B4D8               	btfsc	status,2,c
  5203  006A8A  D003               	goto	l17234
  5204                           
  5205                           ; BSR set to: 0
  5206  006A8C  ECD4  F051         	call	_lcd_bl_on	;wreg free
  5207  006A90  D018               	goto	l17248
  5208  006A92                     l17234:
  5209                           
  5210                           ;key_menu.c: 1013: else
  5211                           ;key_menu.c: 1014: lcd_bl_off();
  5212  006A92  ECD9  F051         	call	_lcd_bl_off	;wreg free
  5213                           
  5214                           ;key_menu.c: 1015: }
  5215                           ;key_menu.c: 1016: }else{
  5216  006A96  D015               	goto	l17248
  5217  006A98                     l17236:
  5218                           
  5219                           ;key_menu.c: 1018: if(keyValue == (0x01<<0x0)){
  5220  006A98  0100               	movlb	0	; () banked
  5221  006A9A  05FC               	decf	_keyValue& (0+255),w,b	;volatile
  5222  006A9C  A4D8               	btfss	status,2,c
  5223  006A9E  D003               	goto	l17240
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;key_menu.c: 1019: key_process_down();
  5227  006AA0  EC5C  F028         	call	_key_process_down	;wreg free
  5228                           
  5229                           ;key_menu.c: 1020: }else if(keyValue == (0x01<<0x01)){
  5230  006AA4  D00E               	goto	l17248
  5231  006AA6                     l17240:
  5232  006AA6  0E02               	movlw	2
  5233  006AA8  0100               	movlb	0	; () banked
  5234  006AAA  19FC               	xorwf	_keyValue& (0+255),w,b	;volatile
  5235  006AAC  A4D8               	btfss	status,2,c
  5236  006AAE  D003               	goto	l17244
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;key_menu.c: 1021: key_process_up();
  5240  006AB0  EC1A  F03B         	call	_key_process_up	;wreg free
  5241                           
  5242                           ;key_menu.c: 1022: }else if(keyValue == (0x01<<0x02)){
  5243  006AB4  D006               	goto	l17248
  5244  006AB6                     l17244:
  5245  006AB6  0E04               	movlw	4
  5246  006AB8  0100               	movlb	0	; () banked
  5247  006ABA  19FC               	xorwf	_keyValue& (0+255),w,b	;volatile
  5248  006ABC  B4D8               	btfsc	status,2,c
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;key_menu.c: 1023: key_process_set();
  5252  006ABE  ECB4  F03D         	call	_key_process_set	;wreg free
  5253  006AC2                     l17248:
  5254  006AC2  0E01               	movlw	1
  5255  006AC4  6E34               	movwf	_lcdTwinkle,c
  5256                           
  5257                           ;key_menu.c: 1028: ui_disp_menu();
  5258  006AC6  EC71  F03B         	call	_ui_disp_menu	;wreg free
  5259                           
  5260                           ;key_menu.c: 1029: key_waite_release(2000,&key);
  5261  006ACA  0E07               	movlw	7
  5262  006ACC  0100               	movlb	0	; () banked
  5263  006ACE  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5264  006AD0  0ED0               	movlw	208
  5265  006AD2  6F68               	movwf	key_waite_release@timeout& (0+255),b
  5266  006AD4  0EFF               	movlw	low key_process@key
  5267  006AD6  0100               	movlb	0	; () banked
  5268  006AD8  6F6A               	movwf	key_waite_release@key& (0+255),b
  5269  006ADA  0E01               	movlw	high key_process@key
  5270  006ADC  0100               	movlb	0	; () banked
  5271  006ADE  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  5272  006AE0  ECBE  F04B         	call	_key_waite_release	;wreg free
  5273  006AE4  0012               	return		;funcret
  5274  006AE6                     __end_of_key_process:
  5275                           	opt stack 0
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           postinc0	equ	0xFEE
  5284                           wreg	equ	0xFE8
  5285                           postdec1	equ	0xFE5
  5286                           plusw1	equ	0xFE3
  5287                           fsr1h	equ	0xFE2
  5288                           fsr1l	equ	0xFE1
  5289                           indf2	equ	0xFDF
  5290                           plusw2	equ	0xFDB
  5291                           fsr2h	equ	0xFDA
  5292                           fsr2l	equ	0xFD9
  5293                           status	equ	0xFD8
  5294                           
  5295 ;; *************** function _lcd_bl_on *****************
  5296 ;; Defined at:
  5297 ;;		line 651 in file "src/driver/lcd.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    4
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_key_process
  5322 ;;		_lcd_init
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text13
  5327  00A3A8                     __ptext13:
  5328                           	opt stack 0
  5329  00A3A8                     _lcd_bl_on:
  5330                           	opt stack 25
  5331                           
  5332                           ;incstack = 0
  5333                           ;lcd.c: 653: do{TRISG &= ~(1<<4);}while(0);;
  5334  00A3A8  9898               	bcf	3992,4,c	;volatile
  5335                           
  5336                           ;lcd.c: 654: RTCCFGbits.RTCOE=1;
  5337  00A3AA  010F               	movlb	15	; () banked
  5338  00A3AC  855F               	bsf	95,2,b	;volatile
  5339                           
  5340                           ; BSR set to: 15
  5341                           
  5342                           ;lcd.c: 655: do{LATG |= (1<<4);}while(0);;
  5343  00A3AE  888F               	bsf	3983,4,c	;volatile
  5344  00A3B0  0012               	return	
  5345  00A3B2                     __end_of_lcd_bl_on:
  5346                           	opt stack 0
  5347                           tblptru	equ	0xFF8
  5348                           tblptrh	equ	0xFF7
  5349                           tblptrl	equ	0xFF6
  5350                           tablat	equ	0xFF5
  5351                           prodh	equ	0xFF4
  5352                           prodl	equ	0xFF3
  5353                           intcon	equ	0xFF2
  5354                           postinc0	equ	0xFEE
  5355                           wreg	equ	0xFE8
  5356                           postdec1	equ	0xFE5
  5357                           plusw1	equ	0xFE3
  5358                           fsr1h	equ	0xFE2
  5359                           fsr1l	equ	0xFE1
  5360                           indf2	equ	0xFDF
  5361                           plusw2	equ	0xFDB
  5362                           fsr2h	equ	0xFDA
  5363                           fsr2l	equ	0xFD9
  5364                           status	equ	0xFD8
  5365                           
  5366 ;; *************** function _lcd_bl_off *****************
  5367 ;; Defined at:
  5368 ;;		line 658 in file "src/driver/lcd.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;Total ram usage:        0 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    4
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_key_process
  5393 ;;		_lcd_init
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text14
  5398  00A3B2                     __ptext14:
  5399                           	opt stack 0
  5400  00A3B2                     _lcd_bl_off:
  5401                           	opt stack 25
  5402                           
  5403                           ; BSR set to: 15
  5404                           ;incstack = 0
  5405                           ;lcd.c: 660: do{TRISG |= (1<<4);}while(0);;
  5406  00A3B2  8898               	bsf	3992,4,c	;volatile
  5407                           
  5408                           ;lcd.c: 661: RTCCFGbits.RTCOE=0;
  5409  00A3B4  010F               	movlb	15	; () banked
  5410  00A3B6  955F               	bcf	95,2,b	;volatile
  5411                           
  5412                           ; BSR set to: 15
  5413  00A3B8  0012               	return		;funcret
  5414  00A3BA                     __end_of_lcd_bl_off:
  5415                           	opt stack 0
  5416                           tblptru	equ	0xFF8
  5417                           tblptrh	equ	0xFF7
  5418                           tblptrl	equ	0xFF6
  5419                           tablat	equ	0xFF5
  5420                           prodh	equ	0xFF4
  5421                           prodl	equ	0xFF3
  5422                           intcon	equ	0xFF2
  5423                           postinc0	equ	0xFEE
  5424                           wreg	equ	0xFE8
  5425                           postdec1	equ	0xFE5
  5426                           plusw1	equ	0xFE3
  5427                           fsr1h	equ	0xFE2
  5428                           fsr1l	equ	0xFE1
  5429                           indf2	equ	0xFDF
  5430                           plusw2	equ	0xFDB
  5431                           fsr2h	equ	0xFDA
  5432                           fsr2l	equ	0xFD9
  5433                           status	equ	0xFD8
  5434                           
  5435 ;; *************** function _key_waite_release *****************
  5436 ;; Defined at:
  5437 ;;		line 33 in file "src/api/key_menu.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  timeout         2    8[BANK0 ] unsigned int 
  5440 ;;  key             2   10[BANK0 ] PTR unsigned char 
  5441 ;;		 -> key_process@key(1), 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  t8              1   31[COMRAM] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2    8[BANK0 ] unsigned int 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        5 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    7
  5460 ;; This function calls:
  5461 ;;		_delay_ms
  5462 ;;		_key_polling
  5463 ;; This function is called by:
  5464 ;;		_key_process
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text15
  5469  00977C                     __ptext15:
  5470                           	opt stack 0
  5471  00977C                     _key_waite_release:
  5472                           	opt stack 22
  5473                           
  5474                           ;key_menu.c: 35: uint8_t t8;
  5475                           ;key_menu.c: 37: userTicker_ms=0;
  5476                           
  5477                           ; BSR set to: 15
  5478                           ;incstack = 0
  5479  00977C  0E00               	movlw	0
  5480  00977E  6E26               	movwf	_userTicker_ms+1,c	;volatile
  5481  009780  0E00               	movlw	0
  5482  009782  6E25               	movwf	_userTicker_ms,c	;volatile
  5483                           
  5484                           ;key_menu.c: 38: while(userTicker_ms<timeout){
  5485  009784  D00D               	goto	l16844
  5486  009786                     l16836:
  5487                           
  5488                           ;key_menu.c: 39: t8=key_polling();
  5489  009786  ECEB  F048         	call	_key_polling	;wreg free
  5490  00978A  6E20               	movwf	key_waite_release@t8,c
  5491                           
  5492                           ;key_menu.c: 40: if(t8==(0x0))break;
  5493  00978C  5020               	movf	key_waite_release@t8,w,c
  5494  00978E  B4D8               	btfsc	status,2,c
  5495  009790  D00F               	goto	l16846
  5496                           
  5497                           ;key_menu.c: 41: delay_ms(10);
  5498  009792  0E00               	movlw	0
  5499  009794  0100               	movlb	0	; () banked
  5500  009796  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  5501  009798  0E0A               	movlw	10
  5502  00979A  6F64               	movwf	delay_ms@dly& (0+255),b
  5503  00979C  EC00  F050         	call	_delay_ms	;wreg free
  5504  0097A0                     l16844:
  5505  0097A0  0100               	movlb	0	; () banked
  5506  0097A2  5168               	movf	key_waite_release@timeout& (0+255),w,b
  5507  0097A4  5C25               	subwf	_userTicker_ms,w,c	;volatile
  5508  0097A6  0100               	movlb	0	; () banked
  5509  0097A8  5169               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  5510  0097AA  5826               	subwfb	_userTicker_ms+1,w,c	;volatile
  5511  0097AC  A0D8               	btfss	status,0,c
  5512  0097AE  D7EB               	goto	l16836
  5513  0097B0                     l16846:
  5514                           
  5515                           ;key_menu.c: 42: }
  5516                           ;key_menu.c: 43: *key=t8;
  5517  0097B0  C06A  FFD9         	movff	key_waite_release@key,fsr2l
  5518  0097B4  C06B  FFDA         	movff	key_waite_release@key+1,fsr2h
  5519  0097B8  C020  FFDF         	movff	key_waite_release@t8,indf2
  5520                           
  5521                           ;key_menu.c: 44: return userTicker_ms;
  5522  0097BC  C025  F068         	movff	_userTicker_ms,?_key_waite_release	;volatile
  5523  0097C0  C026  F069         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  5524  0097C4  0012               	return	
  5525  0097C6                     __end_of_key_waite_release:
  5526                           	opt stack 0
  5527                           tblptru	equ	0xFF8
  5528                           tblptrh	equ	0xFF7
  5529                           tblptrl	equ	0xFF6
  5530                           tablat	equ	0xFF5
  5531                           prodh	equ	0xFF4
  5532                           prodl	equ	0xFF3
  5533                           intcon	equ	0xFF2
  5534                           postinc0	equ	0xFEE
  5535                           wreg	equ	0xFE8
  5536                           postdec1	equ	0xFE5
  5537                           plusw1	equ	0xFE3
  5538                           fsr1h	equ	0xFE2
  5539                           fsr1l	equ	0xFE1
  5540                           indf2	equ	0xFDF
  5541                           plusw2	equ	0xFDB
  5542                           fsr2h	equ	0xFDA
  5543                           fsr2l	equ	0xFD9
  5544                           status	equ	0xFD8
  5545                           
  5546 ;; *************** function _key_polling *****************
  5547 ;; Defined at:
  5548 ;;		line 8 in file "src/driver/key.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  t8              1    7[BANK0 ] unsigned char 
  5553 ;;  ktemp           1    6[BANK0 ] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      unsigned char 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;Total ram usage:        2 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    6
  5570 ;; This function calls:
  5571 ;;		_delay_ms
  5572 ;; This function is called by:
  5573 ;;		_key_waite_release
  5574 ;;		_main
  5575 ;;		_event_process
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text16
  5580  0091D6                     __ptext16:
  5581                           	opt stack 0
  5582  0091D6                     _key_polling:
  5583                           	opt stack 22
  5584                           
  5585                           ;key.c: 10: uint8_t ktemp=(0x0);
  5586                           
  5587                           ;incstack = 0
  5588  0091D6  0E00               	movlw	0
  5589  0091D8  0100               	movlb	0	; () banked
  5590  0091DA  6F66               	movwf	key_polling@ktemp& (0+255),b
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;key.c: 11: uint8_t t8=0xff;
  5594  0091DC  0100               	movlb	0	; () banked
  5595  0091DE  6967               	setf	key_polling@t8& (0+255),b
  5596                           
  5597                           ; BSR set to: 0
  5598                           
  5599                           ; BSR set to: 0
  5600                           
  5601                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  5602  0091E0  0E0E               	movlw	14
  5603  0091E2  1293               	iorwf	3987,f,c	;volatile
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5607                           
  5608                           ; BSR set to: 0
  5609  0091E4  5081               	movf	3969,w,c	;volatile
  5610  0091E6  0B0E               	andlw	14
  5611  0091E8  0100               	movlb	0	; () banked
  5612  0091EA  6F67               	movwf	key_polling@t8& (0+255),b
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  5616  0091EC  0100               	movlb	0	; () banked
  5617  0091EE  5167               	movf	key_polling@t8& (0+255),w,b
  5618  0091F0  0B0E               	andlw	14
  5619  0091F2  0A0E               	xorlw	14
  5620  0091F4  B4D8               	btfsc	status,2,c
  5621  0091F6  D01A               	goto	l15740
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;key.c: 16: delay_ms(10);
  5625  0091F8  0E00               	movlw	0
  5626  0091FA  0100               	movlb	0	; () banked
  5627  0091FC  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  5628  0091FE  0E0A               	movlw	10
  5629  009200  6F64               	movwf	delay_ms@dly& (0+255),b
  5630  009202  EC00  F050         	call	_delay_ms	;wreg free
  5631                           
  5632                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  5633  009206  5081               	movf	3969,w,c	;volatile
  5634  009208  0B0E               	andlw	14
  5635  00920A  0100               	movlb	0	; () banked
  5636  00920C  6F67               	movwf	key_polling@t8& (0+255),b
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;key.c: 18: if(!( t8 & (1<<3))){
  5640  00920E  0100               	movlb	0	; () banked
  5641  009210  B767               	btfsc	key_polling@t8& (0+255),3,b
  5642  009212  D002               	goto	l15732
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;key.c: 19: ktemp |= (0x01<<0x0);
  5646  009214  0100               	movlb	0	; () banked
  5647  009216  8166               	bsf	key_polling@ktemp& (0+255),0,b
  5648  009218                     l15732:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;key.c: 20: }
  5652                           ;key.c: 21: if(!( t8 & (1<<2))){
  5653  009218  0100               	movlb	0	; () banked
  5654  00921A  B567               	btfsc	key_polling@t8& (0+255),2,b
  5655  00921C  D002               	goto	l15736
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;key.c: 22: ktemp |= (0x01<<0x01);
  5659  00921E  0100               	movlb	0	; () banked
  5660  009220  8366               	bsf	key_polling@ktemp& (0+255),1,b
  5661  009222                     l15736:
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;key.c: 23: }
  5665                           ;key.c: 24: if(!( t8 & (1<<1))){
  5666  009222  0100               	movlb	0	; () banked
  5667  009224  B367               	btfsc	key_polling@t8& (0+255),1,b
  5668  009226  D002               	goto	l15740
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;key.c: 25: ktemp |= (0x01<<0x02);
  5672  009228  0100               	movlb	0	; () banked
  5673  00922A  8566               	bsf	key_polling@ktemp& (0+255),2,b
  5674  00922C                     l15740:
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;key.c: 26: }
  5678                           ;key.c: 27: }
  5679                           ;key.c: 29: return ktemp;
  5680  00922C  0100               	movlb	0	; () banked
  5681  00922E  5166               	movf	key_polling@ktemp& (0+255),w,b
  5682  009230  0012               	return	
  5683  009232                     __end_of_key_polling:
  5684                           	opt stack 0
  5685                           tblptru	equ	0xFF8
  5686                           tblptrh	equ	0xFF7
  5687                           tblptrl	equ	0xFF6
  5688                           tablat	equ	0xFF5
  5689                           prodh	equ	0xFF4
  5690                           prodl	equ	0xFF3
  5691                           intcon	equ	0xFF2
  5692                           postinc0	equ	0xFEE
  5693                           wreg	equ	0xFE8
  5694                           postdec1	equ	0xFE5
  5695                           plusw1	equ	0xFE3
  5696                           fsr1h	equ	0xFE2
  5697                           fsr1l	equ	0xFE1
  5698                           indf2	equ	0xFDF
  5699                           plusw2	equ	0xFDB
  5700                           fsr2h	equ	0xFDA
  5701                           fsr2l	equ	0xFD9
  5702                           status	equ	0xFD8
  5703                           
  5704 ;; *************** function _key_process_up *****************
  5705 ;; Defined at:
  5706 ;;		line 575 in file "src/api/key_menu.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;Total ram usage:        0 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    8
  5727 ;; This function calls:
  5728 ;;		___up_adj_bar_level_scale
  5729 ;;		___up_adj_work_mode
  5730 ;;		___up_base_zero_adj
  5731 ;;		___up_density_adj
  5732 ;;		___up_diff_calib_adj
  5733 ;;		___up_epr_calib_adj
  5734 ;;		___up_epr_ilp_scale_adj
  5735 ;;		___up_home_adj
  5736 ;;		___up_poly_coefic_adj
  5737 ;;		___up_pose_size_adj
  5738 ;;		___up_pr_calib_adj
  5739 ;;		___up_psw_adj
  5740 ;;		___up_warn_type_adj
  5741 ;;		___up_warn_value_adj
  5742 ;; This function is called by:
  5743 ;;		_key_process
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text17
  5748  007634                     __ptext17:
  5749                           	opt stack 0
  5750  007634                     _key_process_up:
  5751                           	opt stack 21
  5752                           
  5753                           ;key_menu.c: 577: switch(menu){
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;incstack = 0
  5757  007634  D02A               	goto	l16914
  5758  007636                     l16884:
  5759  007636  ECD9  F04F         	call	___up_home_adj	;wreg free
  5760  00763A  0012               	return	
  5761  00763C                     l16886:
  5762  00763C  EC29  F051         	call	___up_psw_adj	;wreg free
  5763  007640  0012               	return	
  5764  007642                     l16888:
  5765  007642  EC4A  F051         	call	___up_density_adj	;wreg free
  5766  007646  0012               	return	
  5767  007648                     l16890:
  5768  007648  EC0E  F044         	call	___up_pose_size_adj	;wreg free
  5769  00764C  0012               	return	
  5770  00764E                     l16892:
  5771  00764E  EC55  F051         	call	___up_base_zero_adj	;wreg free
  5772  007652  0012               	return	
  5773  007654                     l16894:
  5774  007654  EC5A  F04D         	call	___up_diff_calib_adj	;wreg free
  5775  007658  0012               	return	
  5776  00765A                     l16896:
  5777  00765A  EC3E  F04D         	call	___up_pr_calib_adj	;wreg free
  5778  00765E  0012               	return	
  5779  007660                     l16898:
  5780  007660  EC34  F051         	call	___up_poly_coefic_adj	;wreg free
  5781  007664  0012               	return	
  5782  007666                     l16900:
  5783  007666  EC49  F04C         	call	___up_warn_type_adj	;wreg free
  5784  00766A  0012               	return	
  5785  00766C                     l16902:
  5786  00766C  EC1E  F051         	call	___up_warn_value_adj	;wreg free
  5787  007670  0012               	return	
  5788  007672                     l16904:
  5789  007672  EC36  F04E         	call	___up_epr_calib_adj	;wreg free
  5790  007676  0012               	return	
  5791  007678                     l16906:
  5792  007678  EC3F  F051         	call	___up_epr_ilp_scale_adj	;wreg free
  5793  00767C  0012               	return	
  5794  00767E                     l16908:
  5795  00767E  EC60  F051         	call	___up_adj_bar_level_scale	;wreg free
  5796  007682  0012               	return	
  5797  007684                     l16910:
  5798  007684  ECE5  F04D         	call	___up_adj_work_mode	;wreg free
  5799                           
  5800                           ;key_menu.c: 595: }
  5801                           
  5802                           ;key_menu.c: 594: default:break;
  5803  007688  0012               	return	
  5804  00768A                     l16914:
  5805  00768A  5033               	movf	_menu,w,c	;volatile
  5806                           
  5807                           ; Switch size 1, requested type "space"
  5808                           ; Number of cases is 14, Range of values is 0 to 240
  5809                           ; switch strategies available:
  5810                           ; Name         Instructions Cycles
  5811                           ; simple_byte           43    22 (average)
  5812                           ;	Chosen strategy is simple_byte
  5813  00768C  0A00               	xorlw	0	; case 0
  5814  00768E  B4D8               	btfsc	status,2,c
  5815  007690  D7D2               	goto	l16884
  5816  007692  0A10               	xorlw	16	; case 16
  5817  007694  B4D8               	btfsc	status,2,c
  5818  007696  D7D2               	goto	l16886
  5819  007698  0A30               	xorlw	48	; case 32
  5820  00769A  B4D8               	btfsc	status,2,c
  5821  00769C  D7D2               	goto	l16888
  5822  00769E  0A10               	xorlw	16	; case 48
  5823  0076A0  B4D8               	btfsc	status,2,c
  5824  0076A2  D7D2               	goto	l16890
  5825  0076A4  0A70               	xorlw	112	; case 64
  5826  0076A6  B4D8               	btfsc	status,2,c
  5827  0076A8  D7D2               	goto	l16892
  5828  0076AA  0A10               	xorlw	16	; case 80
  5829  0076AC  B4D8               	btfsc	status,2,c
  5830  0076AE  D7D2               	goto	l16894
  5831  0076B0  0A30               	xorlw	48	; case 96
  5832  0076B2  B4D8               	btfsc	status,2,c
  5833  0076B4  D7D2               	goto	l16896
  5834  0076B6  0A10               	xorlw	16	; case 112
  5835  0076B8  B4D8               	btfsc	status,2,c
  5836  0076BA  D7D2               	goto	l16898
  5837  0076BC  0AF0               	xorlw	240	; case 128
  5838  0076BE  B4D8               	btfsc	status,2,c
  5839  0076C0  D7D2               	goto	l16900
  5840  0076C2  0A10               	xorlw	16	; case 144
  5841  0076C4  B4D8               	btfsc	status,2,c
  5842  0076C6  D7D2               	goto	l16902
  5843  0076C8  0A30               	xorlw	48	; case 160
  5844  0076CA  B4D8               	btfsc	status,2,c
  5845  0076CC  D7D2               	goto	l16904
  5846  0076CE  0A10               	xorlw	16	; case 176
  5847  0076D0  B4D8               	btfsc	status,2,c
  5848  0076D2  D7D2               	goto	l16906
  5849  0076D4  0A70               	xorlw	112	; case 192
  5850  0076D6  B4D8               	btfsc	status,2,c
  5851  0076D8  D7D2               	goto	l16908
  5852  0076DA  0A30               	xorlw	48	; case 240
  5853  0076DC  A4D8               	btfss	status,2,c
  5854  0076DE  0012               	return	
  5855  0076E0  D7D1               	goto	l16910
  5856  0076E2                     __end_of_key_process_up:
  5857                           	opt stack 0
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           postinc0	equ	0xFEE
  5866                           wreg	equ	0xFE8
  5867                           postdec1	equ	0xFE5
  5868                           plusw1	equ	0xFE3
  5869                           fsr1h	equ	0xFE2
  5870                           fsr1l	equ	0xFE1
  5871                           indf2	equ	0xFDF
  5872                           plusw2	equ	0xFDB
  5873                           fsr2h	equ	0xFDA
  5874                           fsr2l	equ	0xFD9
  5875                           status	equ	0xFD8
  5876                           
  5877 ;; *************** function ___up_warn_value_adj *****************
  5878 ;; Defined at:
  5879 ;;		line 531 in file "src/api/key_menu.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;Total ram usage:        0 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    7
  5900 ;; This function calls:
  5901 ;;		_key_adj_value_float
  5902 ;; This function is called by:
  5903 ;;		_key_process_up
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text18
  5908  00A23C                     __ptext18:
  5909                           	opt stack 0
  5910  00A23C                     ___up_warn_value_adj:
  5911                           	opt stack 21
  5912                           
  5913                           ;key_menu.c: 533: key_adj_value_float(&m_floatAdj,adjLocation);
  5914                           
  5915                           ;incstack = 0
  5916  00A23C  0E35               	movlw	low _m_floatAdj
  5917  00A23E  0100               	movlb	0	; () banked
  5918  00A240  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  5919  00A242  0E00               	movlw	high _m_floatAdj
  5920  00A244  0100               	movlb	0	; () banked
  5921  00A246  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  5922  00A248  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  5923  00A24C  ECC4  F033         	call	_key_adj_value_float	;wreg free
  5924  00A250  0012               	return		;funcret
  5925  00A252                     __end_of___up_warn_value_adj:
  5926                           	opt stack 0
  5927                           tblptru	equ	0xFF8
  5928                           tblptrh	equ	0xFF7
  5929                           tblptrl	equ	0xFF6
  5930                           tablat	equ	0xFF5
  5931                           prodh	equ	0xFF4
  5932                           prodl	equ	0xFF3
  5933                           intcon	equ	0xFF2
  5934                           postinc0	equ	0xFEE
  5935                           wreg	equ	0xFE8
  5936                           postdec1	equ	0xFE5
  5937                           plusw1	equ	0xFE3
  5938                           fsr1h	equ	0xFE2
  5939                           fsr1l	equ	0xFE1
  5940                           indf2	equ	0xFDF
  5941                           plusw2	equ	0xFDB
  5942                           fsr2h	equ	0xFDA
  5943                           fsr2l	equ	0xFD9
  5944                           status	equ	0xFD8
  5945                           
  5946 ;; *************** function ___up_warn_type_adj *****************
  5947 ;; Defined at:
  5948 ;;		line 523 in file "src/api/key_menu.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  p               2    0[BANK0 ] PTR unsigned char 
  5953 ;;		 -> adjValue(4), 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;Total ram usage:        3 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    4
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_key_process_up
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text19
  5978  009892                     __ptext19:
  5979                           	opt stack 0
  5980  009892                     ___up_warn_type_adj:
  5981                           	opt stack 24
  5982                           
  5983                           ;key_menu.c: 525: uint8_t* p;
  5984                           ;key_menu.c: 526: p=(uint8_t*)(&adjValue);
  5985                           
  5986                           ;incstack = 0
  5987  009892  0E39               	movlw	low _adjValue
  5988  009894  0100               	movlb	0	; () banked
  5989  009896  6F60               	movwf	___up_warn_type_adj@p& (0+255),b
  5990  009898  0E00               	movlw	high _adjValue
  5991  00989A  0100               	movlb	0	; () banked
  5992  00989C  6F61               	movwf	(___up_warn_type_adj@p+1)& (0+255),b
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;key_menu.c: 527: (*p)=(*p)+1;
  5996  00989E  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  5997  0098A2  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  5998  0098A6  50DF               	movf	indf2,w,c
  5999  0098A8  6E20               	movwf	??___up_warn_type_adj& (0+255),c
  6000  0098AA  2820               	incf	??___up_warn_type_adj,w,c
  6001  0098AC  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  6002  0098B0  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  6003  0098B4  6EDF               	movwf	indf2,c
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;key_menu.c: 528: if(*p>PRESSURE_LO)*p=HIGHT_HI;
  6007  0098B6  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  6008  0098BA  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  6009  0098BE  0E03               	movlw	3
  6010  0098C0  64DF               	cpfsgt	indf2,c
  6011  0098C2  0012               	return	
  6012                           
  6013                           ; BSR set to: 0
  6014  0098C4  C060  FFD9         	movff	___up_warn_type_adj@p,fsr2l
  6015  0098C8  C061  FFDA         	movff	___up_warn_type_adj@p+1,fsr2h
  6016  0098CC  0E00               	movlw	0
  6017  0098CE  6EDF               	movwf	indf2,c
  6018  0098D0  0012               	return	
  6019  0098D2                     __end_of___up_warn_type_adj:
  6020                           	opt stack 0
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           prodh	equ	0xFF4
  6026                           prodl	equ	0xFF3
  6027                           intcon	equ	0xFF2
  6028                           postinc0	equ	0xFEE
  6029                           wreg	equ	0xFE8
  6030                           postdec1	equ	0xFE5
  6031                           plusw1	equ	0xFE3
  6032                           fsr1h	equ	0xFE2
  6033                           fsr1l	equ	0xFE1
  6034                           indf2	equ	0xFDF
  6035                           plusw2	equ	0xFDB
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function ___up_psw_adj *****************
  6041 ;; Defined at:
  6042 ;;		line 458 in file "src/api/key_menu.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    6
  6063 ;; This function calls:
  6064 ;;		_key_adj_value_fixed
  6065 ;; This function is called by:
  6066 ;;		_key_process_up
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text20
  6071  00A252                     __ptext20:
  6072                           	opt stack 0
  6073  00A252                     ___up_psw_adj:
  6074                           	opt stack 22
  6075                           
  6076                           ;key_menu.c: 460: key_adj_value_fixed((uint16_t*)(&passWord),adjLocation);
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;incstack = 0
  6080  00A252  0E3D               	movlw	low _passWord
  6081  00A254  0100               	movlb	0	; () banked
  6082  00A256  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6083  00A258  0E00               	movlw	high _passWord
  6084  00A25A  0100               	movlb	0	; () banked
  6085  00A25C  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  6086  00A25E  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  6087  00A262  ECD8  F032         	call	_key_adj_value_fixed	;wreg free
  6088  00A266  0012               	return		;funcret
  6089  00A268                     __end_of___up_psw_adj:
  6090                           	opt stack 0
  6091                           tblptru	equ	0xFF8
  6092                           tblptrh	equ	0xFF7
  6093                           tblptrl	equ	0xFF6
  6094                           tablat	equ	0xFF5
  6095                           prodh	equ	0xFF4
  6096                           prodl	equ	0xFF3
  6097                           intcon	equ	0xFF2
  6098                           postinc0	equ	0xFEE
  6099                           wreg	equ	0xFE8
  6100                           postdec1	equ	0xFE5
  6101                           plusw1	equ	0xFE3
  6102                           fsr1h	equ	0xFE2
  6103                           fsr1l	equ	0xFE1
  6104                           indf2	equ	0xFDF
  6105                           plusw2	equ	0xFDB
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function ___up_pr_calib_adj *****************
  6111 ;; Defined at:
  6112 ;;		line 505 in file "src/api/key_menu.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;		None
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  t8              1   27[BANK0 ] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      void 
  6119 ;; Registers used:
  6120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;Total ram usage:        1 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    7
  6133 ;; This function calls:
  6134 ;;		_key_adj_value_float
  6135 ;; This function is called by:
  6136 ;;		_key_process_up
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text21
  6141  009A7C                     __ptext21:
  6142                           	opt stack 0
  6143  009A7C                     ___up_pr_calib_adj:
  6144                           	opt stack 21
  6145                           
  6146                           ;key_menu.c: 507: uint8_t t8;
  6147                           ;key_menu.c: 508: if(calibCol==0){
  6148                           
  6149                           ;incstack = 0
  6150  009A7C  5030               	movf	_calibCol,w,c	;volatile
  6151  009A7E  A4D8               	btfss	status,2,c
  6152  009A80  D00E               	goto	l15876
  6153                           
  6154                           ;key_menu.c: 509: t8=*(uint8_t*)(&adjValue);
  6155  009A82  C039  F07B         	movff	_adjValue,___up_pr_calib_adj@t8
  6156                           
  6157                           ;key_menu.c: 510: t8++;
  6158  009A86  0100               	movlb	0	; () banked
  6159  009A88  2B7B               	incf	___up_pr_calib_adj@t8& (0+255),f,b
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;key_menu.c: 511: if(t8>=6)t8=2;
  6163  009A8A  0E05               	movlw	5
  6164  009A8C  0100               	movlb	0	; () banked
  6165  009A8E  657B               	cpfsgt	___up_pr_calib_adj@t8& (0+255),b
  6166  009A90  D003               	goto	l15874
  6167                           
  6168                           ; BSR set to: 0
  6169  009A92  0E02               	movlw	2
  6170  009A94  0100               	movlb	0	; () banked
  6171  009A96  6F7B               	movwf	___up_pr_calib_adj@t8& (0+255),b
  6172  009A98                     l15874:
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;key_menu.c: 512: *(uint8_t*)(&adjValue)=t8;
  6176  009A98  C07B  F039         	movff	___up_pr_calib_adj@t8,_adjValue
  6177                           
  6178                           ;key_menu.c: 513: }else{
  6179  009A9C  0012               	return	
  6180  009A9E                     l15876:
  6181                           
  6182                           ;key_menu.c: 514: key_adj_value_float(&m_floatAdj,adjLocation);
  6183  009A9E  0E35               	movlw	low _m_floatAdj
  6184  009AA0  0100               	movlb	0	; () banked
  6185  009AA2  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6186  009AA4  0E00               	movlw	high _m_floatAdj
  6187  009AA6  0100               	movlb	0	; () banked
  6188  009AA8  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6189  009AAA  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6190  009AAE  ECC4  F033         	call	_key_adj_value_float	;wreg free
  6191  009AB2  0012               	return	
  6192  009AB4                     __end_of___up_pr_calib_adj:
  6193                           	opt stack 0
  6194                           tblptru	equ	0xFF8
  6195                           tblptrh	equ	0xFF7
  6196                           tblptrl	equ	0xFF6
  6197                           tablat	equ	0xFF5
  6198                           prodh	equ	0xFF4
  6199                           prodl	equ	0xFF3
  6200                           intcon	equ	0xFF2
  6201                           postinc0	equ	0xFEE
  6202                           wreg	equ	0xFE8
  6203                           postdec1	equ	0xFE5
  6204                           plusw1	equ	0xFE3
  6205                           fsr1h	equ	0xFE2
  6206                           fsr1l	equ	0xFE1
  6207                           indf2	equ	0xFDF
  6208                           plusw2	equ	0xFDB
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function ___up_pose_size_adj *****************
  6214 ;; Defined at:
  6215 ;;		line 468 in file "src/api/key_menu.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  p               2   28[BANK0 ] PTR unsigned char 
  6220 ;;		 -> adjValue(4), 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;Total ram usage:        3 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    7
  6237 ;; This function calls:
  6238 ;;		_key_adj_value_float
  6239 ;; This function is called by:
  6240 ;;		_key_process_up
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text22
  6245  00881C                     __ptext22:
  6246                           	opt stack 0
  6247  00881C                     ___up_pose_size_adj:
  6248                           	opt stack 21
  6249                           
  6250                           ;key_menu.c: 470: uint8_t* p;
  6251                           ;key_menu.c: 471: switch(subMenu){
  6252                           
  6253                           ;incstack = 0
  6254  00881C  D02D               	goto	l15846
  6255  00881E                     l15834:
  6256                           
  6257                           ;key_menu.c: 473: p=(uint8_t*)(&adjValue);
  6258  00881E  0E39               	movlw	low _adjValue
  6259  008820  0100               	movlb	0	; () banked
  6260  008822  6F7C               	movwf	___up_pose_size_adj@p& (0+255),b
  6261  008824  0E00               	movlw	high _adjValue
  6262  008826  0100               	movlb	0	; () banked
  6263  008828  6F7D               	movwf	(___up_pose_size_adj@p+1)& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;key_menu.c: 474: (*p)=(*p)+1;
  6267  00882A  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6268  00882E  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6269  008832  50DF               	movf	indf2,w,c
  6270  008834  0100               	movlb	0	; () banked
  6271  008836  6F7B               	movwf	??___up_pose_size_adj& (0+255),b
  6272  008838  0100               	movlb	0	; () banked
  6273  00883A  297B               	incf	??___up_pose_size_adj& (0+255),w,b
  6274  00883C  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6275  008840  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6276  008844  6EDF               	movwf	indf2,c
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;key_menu.c: 475: if(*p>VERTICAL)*p=HOTIZONTAL;
  6280  008846  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6281  00884A  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6282  00884E  0E01               	movlw	1
  6283  008850  64DF               	cpfsgt	indf2,c
  6284  008852  0012               	return	
  6285                           
  6286                           ; BSR set to: 0
  6287  008854  C07C  FFD9         	movff	___up_pose_size_adj@p,fsr2l
  6288  008858  C07D  FFDA         	movff	___up_pose_size_adj@p+1,fsr2h
  6289  00885C  0E00               	movlw	0
  6290  00885E  6EDF               	movwf	indf2,c
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;key_menu.c: 476: break;
  6294  008860  0012               	return	
  6295  008862                     l15842:
  6296                           
  6297                           ;key_menu.c: 478: case 0x02:
  6298                           ;key_menu.c: 479: key_adj_value_float(&m_floatAdj,adjLocation);
  6299  008862  0E35               	movlw	low _m_floatAdj
  6300  008864  0100               	movlb	0	; () banked
  6301  008866  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6302  008868  0E00               	movlw	high _m_floatAdj
  6303  00886A  0100               	movlb	0	; () banked
  6304  00886C  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6305  00886E  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6306  008872  ECC4  F033         	call	_key_adj_value_float	;wreg free
  6307                           
  6308                           ;key_menu.c: 482: }
  6309                           
  6310                           ;key_menu.c: 481: default:break;
  6311                           
  6312                           ;key_menu.c: 480: break;
  6313  008876  0012               	return	
  6314  008878                     l15846:
  6315  008878  5032               	movf	_subMenu,w,c	;volatile
  6316                           
  6317                           ; Switch size 1, requested type "space"
  6318                           ; Number of cases is 3, Range of values is 0 to 2
  6319                           ; switch strategies available:
  6320                           ; Name         Instructions Cycles
  6321                           ; simple_byte           10     6 (average)
  6322                           ;	Chosen strategy is simple_byte
  6323  00887A  0A00               	xorlw	0	; case 0
  6324  00887C  B4D8               	btfsc	status,2,c
  6325  00887E  D7CF               	goto	l15834
  6326  008880  0A01               	xorlw	1	; case 1
  6327  008882  B4D8               	btfsc	status,2,c
  6328  008884  D7EE               	goto	l15842
  6329  008886  0A03               	xorlw	3	; case 2
  6330  008888  A4D8               	btfss	status,2,c
  6331  00888A  0012               	return	
  6332  00888C  D7EA               	goto	l15842
  6333  00888E                     __end_of___up_pose_size_adj:
  6334                           	opt stack 0
  6335                           tblptru	equ	0xFF8
  6336                           tblptrh	equ	0xFF7
  6337                           tblptrl	equ	0xFF6
  6338                           tablat	equ	0xFF5
  6339                           prodh	equ	0xFF4
  6340                           prodl	equ	0xFF3
  6341                           intcon	equ	0xFF2
  6342                           postinc0	equ	0xFEE
  6343                           wreg	equ	0xFE8
  6344                           postdec1	equ	0xFE5
  6345                           plusw1	equ	0xFE3
  6346                           fsr1h	equ	0xFE2
  6347                           fsr1l	equ	0xFE1
  6348                           indf2	equ	0xFDF
  6349                           plusw2	equ	0xFDB
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function ___up_poly_coefic_adj *****************
  6355 ;; Defined at:
  6356 ;;		line 518 in file "src/api/key_menu.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      void 
  6363 ;; Registers used:
  6364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;Total ram usage:        0 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    6
  6377 ;; This function calls:
  6378 ;;		_key_adj_value_fixed
  6379 ;; This function is called by:
  6380 ;;		_key_process_up
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text23
  6385  00A268                     __ptext23:
  6386                           	opt stack 0
  6387  00A268                     ___up_poly_coefic_adj:
  6388                           	opt stack 22
  6389                           
  6390                           ;key_menu.c: 520: key_adj_value_fixed((uint16_t*)(&adjValue),adjLocation);
  6391                           
  6392                           ;incstack = 0
  6393  00A268  0E39               	movlw	low _adjValue
  6394  00A26A  0100               	movlb	0	; () banked
  6395  00A26C  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6396  00A26E  0E00               	movlw	high _adjValue
  6397  00A270  0100               	movlb	0	; () banked
  6398  00A272  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  6399  00A274  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  6400  00A278  ECD8  F032         	call	_key_adj_value_fixed	;wreg free
  6401  00A27C  0012               	return		;funcret
  6402  00A27E                     __end_of___up_poly_coefic_adj:
  6403                           	opt stack 0
  6404                           tblptru	equ	0xFF8
  6405                           tblptrh	equ	0xFF7
  6406                           tblptrl	equ	0xFF6
  6407                           tablat	equ	0xFF5
  6408                           prodh	equ	0xFF4
  6409                           prodl	equ	0xFF3
  6410                           intcon	equ	0xFF2
  6411                           postinc0	equ	0xFEE
  6412                           wreg	equ	0xFE8
  6413                           postdec1	equ	0xFE5
  6414                           plusw1	equ	0xFE3
  6415                           fsr1h	equ	0xFE2
  6416                           fsr1l	equ	0xFE1
  6417                           indf2	equ	0xFDF
  6418                           plusw2	equ	0xFDB
  6419                           fsr2h	equ	0xFDA
  6420                           fsr2l	equ	0xFD9
  6421                           status	equ	0xFD8
  6422                           
  6423 ;; *************** function ___up_home_adj *****************
  6424 ;; Defined at:
  6425 ;;		line 441 in file "src/api/key_menu.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  t8              1   31[COMRAM] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;Total ram usage:        1 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    4
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_key_process_up
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text24
  6454  009FB2                     __ptext24:
  6455                           	opt stack 0
  6456  009FB2                     ___up_home_adj:
  6457                           	opt stack 24
  6458                           
  6459                           ;key_menu.c: 443: uint8_t t8;
  6460                           ;key_menu.c: 447: t8=(subMenu & 0xf0);
  6461                           
  6462                           ;incstack = 0
  6463  009FB2  5032               	movf	_subMenu,w,c	;volatile
  6464  009FB4  0BF0               	andlw	240
  6465  009FB6  6E20               	movwf	___up_home_adj@t8,c
  6466                           
  6467                           ;key_menu.c: 448: t8>>=4;
  6468  009FB8  3A20               	swapf	___up_home_adj@t8,f,c
  6469  009FBA  0E0F               	movlw	15
  6470  009FBC  1620               	andwf	___up_home_adj@t8,f,c
  6471                           
  6472                           ;key_menu.c: 449: t8++;
  6473  009FBE  2A20               	incf	___up_home_adj@t8,f,c
  6474                           
  6475                           ;key_menu.c: 450: if(t8>2)t8=0;
  6476  009FC0  0E02               	movlw	2
  6477  009FC2  6420               	cpfsgt	___up_home_adj@t8,c
  6478  009FC4  D002               	goto	l15822
  6479  009FC6  0E00               	movlw	0
  6480  009FC8  6E20               	movwf	___up_home_adj@t8,c
  6481  009FCA                     l15822:
  6482                           
  6483                           ;key_menu.c: 451: t8<<=4;
  6484  009FCA  3A20               	swapf	___up_home_adj@t8,f,c
  6485  009FCC  0EF0               	movlw	240
  6486  009FCE  1620               	andwf	___up_home_adj@t8,f,c
  6487                           
  6488                           ;key_menu.c: 452: subMenu &= 0x0f;
  6489  009FD0  0E0F               	movlw	15
  6490  009FD2  1632               	andwf	_subMenu,f,c	;volatile
  6491                           
  6492                           ;key_menu.c: 453: subMenu |= t8;
  6493  009FD4  5020               	movf	___up_home_adj@t8,w,c
  6494  009FD6  1232               	iorwf	_subMenu,f,c	;volatile
  6495  009FD8  0012               	return		;funcret
  6496  009FDA                     __end_of___up_home_adj:
  6497                           	opt stack 0
  6498                           tblptru	equ	0xFF8
  6499                           tblptrh	equ	0xFF7
  6500                           tblptrl	equ	0xFF6
  6501                           tablat	equ	0xFF5
  6502                           prodh	equ	0xFF4
  6503                           prodl	equ	0xFF3
  6504                           intcon	equ	0xFF2
  6505                           postinc0	equ	0xFEE
  6506                           wreg	equ	0xFE8
  6507                           postdec1	equ	0xFE5
  6508                           plusw1	equ	0xFE3
  6509                           fsr1h	equ	0xFE2
  6510                           fsr1l	equ	0xFE1
  6511                           indf2	equ	0xFDF
  6512                           plusw2	equ	0xFDB
  6513                           fsr2h	equ	0xFDA
  6514                           fsr2l	equ	0xFD9
  6515                           status	equ	0xFD8
  6516                           
  6517 ;; *************** function ___up_epr_ilp_scale_adj *****************
  6518 ;; Defined at:
  6519 ;;		line 552 in file "src/api/key_menu.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    7
  6540 ;; This function calls:
  6541 ;;		_key_adj_value_float
  6542 ;; This function is called by:
  6543 ;;		_key_process_up
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text25
  6548  00A27E                     __ptext25:
  6549                           	opt stack 0
  6550  00A27E                     ___up_epr_ilp_scale_adj:
  6551                           	opt stack 21
  6552                           
  6553                           ;key_menu.c: 555: key_adj_value_float(&m_floatAdj,adjLocation);
  6554                           
  6555                           ;incstack = 0
  6556  00A27E  0E35               	movlw	low _m_floatAdj
  6557  00A280  0100               	movlb	0	; () banked
  6558  00A282  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6559  00A284  0E00               	movlw	high _m_floatAdj
  6560  00A286  0100               	movlb	0	; () banked
  6561  00A288  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6562  00A28A  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6563  00A28E  ECC4  F033         	call	_key_adj_value_float	;wreg free
  6564  00A292  0012               	return		;funcret
  6565  00A294                     __end_of___up_epr_ilp_scale_adj:
  6566                           	opt stack 0
  6567                           tblptru	equ	0xFF8
  6568                           tblptrh	equ	0xFF7
  6569                           tblptrl	equ	0xFF6
  6570                           tablat	equ	0xFF5
  6571                           prodh	equ	0xFF4
  6572                           prodl	equ	0xFF3
  6573                           intcon	equ	0xFF2
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           postdec1	equ	0xFE5
  6577                           plusw1	equ	0xFE3
  6578                           fsr1h	equ	0xFE2
  6579                           fsr1l	equ	0xFE1
  6580                           indf2	equ	0xFDF
  6581                           plusw2	equ	0xFDB
  6582                           fsr2h	equ	0xFDA
  6583                           fsr2l	equ	0xFD9
  6584                           status	equ	0xFD8
  6585                           
  6586 ;; *************** function ___up_epr_calib_adj *****************
  6587 ;; Defined at:
  6588 ;;		line 536 in file "src/api/key_menu.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    7
  6609 ;; This function calls:
  6610 ;;		_key_adj_value_float
  6611 ;; This function is called by:
  6612 ;;		_key_process_up
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text26
  6617  009C6C                     __ptext26:
  6618                           	opt stack 0
  6619  009C6C                     ___up_epr_calib_adj:
  6620                           	opt stack 21
  6621                           
  6622                           ;key_menu.c: 538: switch(subMenu){
  6623                           
  6624                           ;incstack = 0
  6625  009C6C  D00B               	goto	l15896
  6626  009C6E                     l15892:
  6627                           
  6628                           ;key_menu.c: 540: case 0x01:
  6629                           ;key_menu.c: 543: case 0x02:
  6630                           ;key_menu.c: 544: case 0x03:
  6631                           ;key_menu.c: 546: key_adj_value_float(&m_floatAdj,adjLocation);
  6632  009C6E  0E35               	movlw	low _m_floatAdj
  6633  009C70  0100               	movlb	0	; () banked
  6634  009C72  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6635  009C74  0E00               	movlw	high _m_floatAdj
  6636  009C76  0100               	movlb	0	; () banked
  6637  009C78  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6638  009C7A  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6639  009C7E  ECC4  F033         	call	_key_adj_value_float	;wreg free
  6640                           
  6641                           ;key_menu.c: 549: }
  6642                           
  6643                           ;key_menu.c: 548: default:break;
  6644                           
  6645                           ;key_menu.c: 547: break;
  6646  009C82  0012               	return	
  6647  009C84                     l15896:
  6648  009C84  5032               	movf	_subMenu,w,c	;volatile
  6649                           
  6650                           ; Switch size 1, requested type "space"
  6651                           ; Number of cases is 4, Range of values is 0 to 3
  6652                           ; switch strategies available:
  6653                           ; Name         Instructions Cycles
  6654                           ; simple_byte           13     7 (average)
  6655                           ;	Chosen strategy is simple_byte
  6656  009C86  0A00               	xorlw	0	; case 0
  6657  009C88  B4D8               	btfsc	status,2,c
  6658  009C8A  D7F1               	goto	l15892
  6659  009C8C  0A01               	xorlw	1	; case 1
  6660  009C8E  B4D8               	btfsc	status,2,c
  6661  009C90  D7EE               	goto	l15892
  6662  009C92  0A03               	xorlw	3	; case 2
  6663  009C94  B4D8               	btfsc	status,2,c
  6664  009C96  D7EB               	goto	l15892
  6665  009C98  0A01               	xorlw	1	; case 3
  6666  009C9A  A4D8               	btfss	status,2,c
  6667  009C9C  0012               	return	
  6668  009C9E  D7E7               	goto	l15892
  6669  009CA0                     __end_of___up_epr_calib_adj:
  6670                           	opt stack 0
  6671                           tblptru	equ	0xFF8
  6672                           tblptrh	equ	0xFF7
  6673                           tblptrl	equ	0xFF6
  6674                           tablat	equ	0xFF5
  6675                           prodh	equ	0xFF4
  6676                           prodl	equ	0xFF3
  6677                           intcon	equ	0xFF2
  6678                           postinc0	equ	0xFEE
  6679                           wreg	equ	0xFE8
  6680                           postdec1	equ	0xFE5
  6681                           plusw1	equ	0xFE3
  6682                           fsr1h	equ	0xFE2
  6683                           fsr1l	equ	0xFE1
  6684                           indf2	equ	0xFDF
  6685                           plusw2	equ	0xFDB
  6686                           fsr2h	equ	0xFDA
  6687                           fsr2l	equ	0xFD9
  6688                           status	equ	0xFD8
  6689                           
  6690 ;; *************** function ___up_diff_calib_adj *****************
  6691 ;; Defined at:
  6692 ;;		line 492 in file "src/api/key_menu.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;		None
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  t8              1   27[BANK0 ] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      void 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;Total ram usage:        1 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    7
  6713 ;; This function calls:
  6714 ;;		_key_adj_value_float
  6715 ;; This function is called by:
  6716 ;;		_key_process_up
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text27
  6721  009AB4                     __ptext27:
  6722                           	opt stack 0
  6723  009AB4                     ___up_diff_calib_adj:
  6724                           	opt stack 21
  6725                           
  6726                           ;key_menu.c: 494: uint8_t t8;
  6727                           ;key_menu.c: 495: if(calibCol==0){
  6728                           
  6729                           ;incstack = 0
  6730  009AB4  5030               	movf	_calibCol,w,c	;volatile
  6731  009AB6  A4D8               	btfss	status,2,c
  6732  009AB8  D00E               	goto	l15862
  6733                           
  6734                           ;key_menu.c: 496: t8=*(uint8_t*)(&adjValue);
  6735  009ABA  C039  F07B         	movff	_adjValue,___up_diff_calib_adj@t8
  6736                           
  6737                           ;key_menu.c: 497: t8++;
  6738  009ABE  0100               	movlb	0	; () banked
  6739  009AC0  2B7B               	incf	___up_diff_calib_adj@t8& (0+255),f,b
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;key_menu.c: 498: if(t8>=6)t8=2;
  6743  009AC2  0E05               	movlw	5
  6744  009AC4  0100               	movlb	0	; () banked
  6745  009AC6  657B               	cpfsgt	___up_diff_calib_adj@t8& (0+255),b
  6746  009AC8  D003               	goto	l15860
  6747                           
  6748                           ; BSR set to: 0
  6749  009ACA  0E02               	movlw	2
  6750  009ACC  0100               	movlb	0	; () banked
  6751  009ACE  6F7B               	movwf	___up_diff_calib_adj@t8& (0+255),b
  6752  009AD0                     l15860:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;key_menu.c: 499: *(uint8_t*)(&adjValue)=t8;
  6756  009AD0  C07B  F039         	movff	___up_diff_calib_adj@t8,_adjValue
  6757                           
  6758                           ;key_menu.c: 500: }else{
  6759  009AD4  0012               	return	
  6760  009AD6                     l15862:
  6761                           
  6762                           ;key_menu.c: 501: key_adj_value_float(&m_floatAdj,adjLocation);
  6763  009AD6  0E35               	movlw	low _m_floatAdj
  6764  009AD8  0100               	movlb	0	; () banked
  6765  009ADA  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6766  009ADC  0E00               	movlw	high _m_floatAdj
  6767  009ADE  0100               	movlb	0	; () banked
  6768  009AE0  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6769  009AE2  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6770  009AE6  ECC4  F033         	call	_key_adj_value_float	;wreg free
  6771  009AEA  0012               	return	
  6772  009AEC                     __end_of___up_diff_calib_adj:
  6773                           	opt stack 0
  6774                           tblptru	equ	0xFF8
  6775                           tblptrh	equ	0xFF7
  6776                           tblptrl	equ	0xFF6
  6777                           tablat	equ	0xFF5
  6778                           prodh	equ	0xFF4
  6779                           prodl	equ	0xFF3
  6780                           intcon	equ	0xFF2
  6781                           postinc0	equ	0xFEE
  6782                           wreg	equ	0xFE8
  6783                           postdec1	equ	0xFE5
  6784                           plusw1	equ	0xFE3
  6785                           fsr1h	equ	0xFE2
  6786                           fsr1l	equ	0xFE1
  6787                           indf2	equ	0xFDF
  6788                           plusw2	equ	0xFDB
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function ___up_density_adj *****************
  6794 ;; Defined at:
  6795 ;;		line 463 in file "src/api/key_menu.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    7
  6816 ;; This function calls:
  6817 ;;		_key_adj_value_float
  6818 ;; This function is called by:
  6819 ;;		_key_process_up
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text28
  6824  00A294                     __ptext28:
  6825                           	opt stack 0
  6826  00A294                     ___up_density_adj:
  6827                           	opt stack 21
  6828                           
  6829                           ;key_menu.c: 465: key_adj_value_float(&m_floatAdj,adjLocation);
  6830                           
  6831                           ;incstack = 0
  6832  00A294  0E35               	movlw	low _m_floatAdj
  6833  00A296  0100               	movlb	0	; () banked
  6834  00A298  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6835  00A29A  0E00               	movlw	high _m_floatAdj
  6836  00A29C  0100               	movlb	0	; () banked
  6837  00A29E  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6838  00A2A0  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6839  00A2A4  ECC4  F033         	call	_key_adj_value_float	;wreg free
  6840  00A2A8  0012               	return		;funcret
  6841  00A2AA                     __end_of___up_density_adj:
  6842                           	opt stack 0
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           postinc0	equ	0xFEE
  6851                           wreg	equ	0xFE8
  6852                           postdec1	equ	0xFE5
  6853                           plusw1	equ	0xFE3
  6854                           fsr1h	equ	0xFE2
  6855                           fsr1l	equ	0xFE1
  6856                           indf2	equ	0xFDF
  6857                           plusw2	equ	0xFDB
  6858                           fsr2h	equ	0xFDA
  6859                           fsr2l	equ	0xFD9
  6860                           status	equ	0xFD8
  6861                           
  6862 ;; *************** function ___up_base_zero_adj *****************
  6863 ;; Defined at:
  6864 ;;		line 485 in file "src/api/key_menu.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:    7
  6885 ;; This function calls:
  6886 ;;		_key_adj_value_float
  6887 ;; This function is called by:
  6888 ;;		_key_process_up
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text29
  6893  00A2AA                     __ptext29:
  6894                           	opt stack 0
  6895  00A2AA                     ___up_base_zero_adj:
  6896                           	opt stack 21
  6897                           
  6898                           ;key_menu.c: 487: key_adj_value_float(&m_floatAdj,adjLocation);
  6899                           
  6900                           ;incstack = 0
  6901  00A2AA  0E35               	movlw	low _m_floatAdj
  6902  00A2AC  0100               	movlb	0	; () banked
  6903  00A2AE  6F75               	movwf	key_adj_value_float@mfp& (0+255),b
  6904  00A2B0  0E00               	movlw	high _m_floatAdj
  6905  00A2B2  0100               	movlb	0	; () banked
  6906  00A2B4  6F76               	movwf	(key_adj_value_float@mfp+1)& (0+255),b
  6907  00A2B6  C03F  F077         	movff	_adjLocation,key_adj_value_float@loc	;volatile
  6908  00A2BA  ECC4  F033         	call	_key_adj_value_float	;wreg free
  6909  00A2BE  0012               	return		;funcret
  6910  00A2C0                     __end_of___up_base_zero_adj:
  6911                           	opt stack 0
  6912                           tblptru	equ	0xFF8
  6913                           tblptrh	equ	0xFF7
  6914                           tblptrl	equ	0xFF6
  6915                           tablat	equ	0xFF5
  6916                           prodh	equ	0xFF4
  6917                           prodl	equ	0xFF3
  6918                           intcon	equ	0xFF2
  6919                           postinc0	equ	0xFEE
  6920                           wreg	equ	0xFE8
  6921                           postdec1	equ	0xFE5
  6922                           plusw1	equ	0xFE3
  6923                           fsr1h	equ	0xFE2
  6924                           fsr1l	equ	0xFE1
  6925                           indf2	equ	0xFDF
  6926                           plusw2	equ	0xFDB
  6927                           fsr2h	equ	0xFDA
  6928                           fsr2l	equ	0xFD9
  6929                           status	equ	0xFD8
  6930                           
  6931 ;; *************** function _key_adj_value_float *****************
  6932 ;; Defined at:
  6933 ;;		line 76 in file "src/api/key_menu.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  mfp             2   21[BANK0 ] PTR struct .
  6936 ;;		 -> m_floatAdj(4), 
  6937 ;;  loc             1   23[BANK0 ] unsigned char 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  t16             2   24[BANK0 ] unsigned int 
  6940 ;;  t8              1   26[BANK0 ] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6950 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;Total ram usage:        6 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    6
  6957 ;; This function calls:
  6958 ;;		_key_adj_value_fixed
  6959 ;; This function is called by:
  6960 ;;		___up_density_adj
  6961 ;;		___up_pose_size_adj
  6962 ;;		___up_base_zero_adj
  6963 ;;		___up_diff_calib_adj
  6964 ;;		___up_pr_calib_adj
  6965 ;;		___up_warn_value_adj
  6966 ;;		___up_epr_calib_adj
  6967 ;;		___up_epr_ilp_scale_adj
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text30
  6972  006788                     __ptext30:
  6973                           	opt stack 0
  6974  006788                     _key_adj_value_float:
  6975                           	opt stack 21
  6976                           
  6977                           ;key_menu.c: 78: uint16_t t16;
  6978                           ;key_menu.c: 79: uint8_t t8;
  6979                           ;key_menu.c: 80: t16=mfp->stru.significand;
  6980                           
  6981                           ;incstack = 0
  6982  006788  C075  FFD9         	movff	key_adj_value_float@mfp,fsr2l
  6983  00678C  C076  FFDA         	movff	key_adj_value_float@mfp+1,fsr2h
  6984  006790  CFDE F078          	movff	postinc2,key_adj_value_float@t16
  6985  006794  CFDD F079          	movff	postdec2,key_adj_value_float@t16+1
  6986                           
  6987                           ;key_menu.c: 81: if(loc<4){
  6988  006798  0E04               	movlw	4
  6989  00679A  0100               	movlb	0	; () banked
  6990  00679C  6177               	cpfslt	key_adj_value_float@loc& (0+255),b
  6991  00679E  D013               	goto	l15096
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;key_menu.c: 82: key_adj_value_fixed(&t16,loc);
  6995  0067A0  0E78               	movlw	low key_adj_value_float@t16
  6996  0067A2  0100               	movlb	0	; () banked
  6997  0067A4  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  6998  0067A6  0E00               	movlw	high key_adj_value_float@t16
  6999  0067A8  0100               	movlb	0	; () banked
  7000  0067AA  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  7001  0067AC  C077  F070         	movff	key_adj_value_float@loc,key_adj_value_fixed@loc
  7002  0067B0  ECD8  F032         	call	_key_adj_value_fixed	;wreg free
  7003                           
  7004                           ;key_menu.c: 83: mfp->stru.significand=t16;
  7005  0067B4  C075  FFD9         	movff	key_adj_value_float@mfp,fsr2l
  7006  0067B8  C076  FFDA         	movff	key_adj_value_float@mfp+1,fsr2h
  7007  0067BC  C078  FFDE         	movff	key_adj_value_float@t16,postinc2
  7008  0067C0  C079  FFDD         	movff	key_adj_value_float@t16+1,postdec2
  7009                           
  7010                           ;key_menu.c: 84: }else if(loc==4){
  7011  0067C4  0012               	return	
  7012  0067C6                     l15096:
  7013  0067C6  0E04               	movlw	4
  7014  0067C8  0100               	movlb	0	; () banked
  7015  0067CA  1977               	xorwf	key_adj_value_float@loc& (0+255),w,b
  7016  0067CC  A4D8               	btfss	status,2,c
  7017  0067CE  D02E               	goto	l15114
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;key_menu.c: 85: t8=mfp->stru.exponent;
  7021  0067D0  0100               	movlb	0	; () banked
  7022  0067D2  EE20 F002          	lfsr	2,2
  7023  0067D6  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7024  0067D8  26D9               	addwf	fsr2l,f,c
  7025  0067DA  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7026  0067DC  22DA               	addwfc	fsr2h,f,c
  7027  0067DE  50DF               	movf	indf2,w,c
  7028  0067E0  0100               	movlb	0	; () banked
  7029  0067E2  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;key_menu.c: 86: t8++;
  7033  0067E4  0100               	movlb	0	; () banked
  7034  0067E6  2B7A               	incf	key_adj_value_float@t8& (0+255),f,b
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;key_menu.c: 87: if(t8>3 )t8=0;
  7038  0067E8  0E03               	movlw	3
  7039  0067EA  0100               	movlb	0	; () banked
  7040  0067EC  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  7041  0067EE  D003               	goto	l15106
  7042                           
  7043                           ; BSR set to: 0
  7044  0067F0  0E00               	movlw	0
  7045  0067F2  0100               	movlb	0	; () banked
  7046  0067F4  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7047  0067F6                     l15106:
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;key_menu.c: 88: if(mfp->stru.sign){
  7051  0067F6  0100               	movlb	0	; () banked
  7052  0067F8  EE20 F003          	lfsr	2,3
  7053  0067FC  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7054  0067FE  26D9               	addwf	fsr2l,f,c
  7055  006800  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7056  006802  22DA               	addwfc	fsr2h,f,c
  7057  006804  50DF               	movf	indf2,w,c
  7058  006806  B4D8               	btfsc	status,2,c
  7059  006808  D007               	goto	l15112
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;key_menu.c: 89: if(t8>2)t8=0;
  7063  00680A  0E02               	movlw	2
  7064  00680C  0100               	movlb	0	; () banked
  7065  00680E  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  7066  006810  D003               	goto	l15112
  7067                           
  7068                           ; BSR set to: 0
  7069  006812  0E00               	movlw	0
  7070  006814  0100               	movlb	0	; () banked
  7071  006816  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7072  006818                     l15112:
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;key_menu.c: 90: }
  7076                           ;key_menu.c: 91: mfp->stru.exponent=t8;
  7077  006818  0100               	movlb	0	; () banked
  7078  00681A  EE20 F002          	lfsr	2,2
  7079  00681E  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7080  006820  26D9               	addwf	fsr2l,f,c
  7081  006822  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7082  006824  22DA               	addwfc	fsr2h,f,c
  7083  006826  C07A  FFDF         	movff	key_adj_value_float@t8,indf2
  7084                           
  7085                           ;key_menu.c: 92: }else{
  7086  00682A  0012               	return	
  7087  00682C                     l15114:
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;key_menu.c: 93: t8=mfp->stru.sign;
  7091  00682C  0100               	movlb	0	; () banked
  7092  00682E  EE20 F003          	lfsr	2,3
  7093  006832  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7094  006834  26D9               	addwf	fsr2l,f,c
  7095  006836  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7096  006838  22DA               	addwfc	fsr2h,f,c
  7097  00683A  50DF               	movf	indf2,w,c
  7098  00683C  0100               	movlb	0	; () banked
  7099  00683E  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;key_menu.c: 94: t8++;
  7103  006840  0100               	movlb	0	; () banked
  7104  006842  2B7A               	incf	key_adj_value_float@t8& (0+255),f,b
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;key_menu.c: 95: if(t8>1)t8=0;
  7108  006844  0E01               	movlw	1
  7109  006846  0100               	movlb	0	; () banked
  7110  006848  657A               	cpfsgt	key_adj_value_float@t8& (0+255),b
  7111  00684A  D003               	goto	l15122
  7112                           
  7113                           ; BSR set to: 0
  7114  00684C  0E00               	movlw	0
  7115  00684E  0100               	movlb	0	; () banked
  7116  006850  6F7A               	movwf	key_adj_value_float@t8& (0+255),b
  7117  006852                     l15122:
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;key_menu.c: 97: mfp->stru.sign=t8;
  7121  006852  0100               	movlb	0	; () banked
  7122  006854  EE20 F003          	lfsr	2,3
  7123  006858  5175               	movf	key_adj_value_float@mfp& (0+255),w,b
  7124  00685A  26D9               	addwf	fsr2l,f,c
  7125  00685C  5176               	movf	(key_adj_value_float@mfp+1)& (0+255),w,b
  7126  00685E  22DA               	addwfc	fsr2h,f,c
  7127  006860  C07A  FFDF         	movff	key_adj_value_float@t8,indf2
  7128                           
  7129                           ; BSR set to: 0
  7130  006864  0012               	return	
  7131  006866                     __end_of_key_adj_value_float:
  7132                           	opt stack 0
  7133                           tblptru	equ	0xFF8
  7134                           tblptrh	equ	0xFF7
  7135                           tblptrl	equ	0xFF6
  7136                           tablat	equ	0xFF5
  7137                           prodh	equ	0xFF4
  7138                           prodl	equ	0xFF3
  7139                           intcon	equ	0xFF2
  7140                           postinc0	equ	0xFEE
  7141                           wreg	equ	0xFE8
  7142                           postdec1	equ	0xFE5
  7143                           plusw1	equ	0xFE3
  7144                           fsr1h	equ	0xFE2
  7145                           fsr1l	equ	0xFE1
  7146                           indf2	equ	0xFDF
  7147                           postinc2	equ	0xFDE
  7148                           postdec2	equ	0xFDD
  7149                           plusw2	equ	0xFDB
  7150                           fsr2h	equ	0xFDA
  7151                           fsr2l	equ	0xFD9
  7152                           status	equ	0xFD8
  7153                           
  7154 ;; *************** function ___up_adj_work_mode *****************
  7155 ;; Defined at:
  7156 ;;		line 564 in file "src/api/key_menu.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;		None
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7161 ;;		 -> adjValue(4), 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;Total ram usage:        2 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    4
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_key_process_up
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text31
  7186  009BCA                     __ptext31:
  7187                           	opt stack 0
  7188  009BCA                     ___up_adj_work_mode:
  7189                           	opt stack 24
  7190                           
  7191                           ;key_menu.c: 566: uint8_t* p;
  7192                           ;key_menu.c: 567: p=(uint8_t*)(&adjValue);
  7193                           
  7194                           ;incstack = 0
  7195  009BCA  0E39               	movlw	low _adjValue
  7196  009BCC  0100               	movlb	0	; () banked
  7197  009BCE  6F60               	movwf	___up_adj_work_mode@p& (0+255),b
  7198  009BD0  0E00               	movlw	high _adjValue
  7199  009BD2  0100               	movlb	0	; () banked
  7200  009BD4  6F61               	movwf	(___up_adj_work_mode@p+1)& (0+255),b
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;key_menu.c: 568: if(*p==TEST_MODE){
  7204  009BD6  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7205  009BDA  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7206  009BDE  50DF               	movf	indf2,w,c
  7207  009BE0  A4D8               	btfss	status,2,c
  7208  009BE2  D007               	goto	l15908
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;key_menu.c: 569: *p=WORK_MODE;
  7212  009BE4  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7213  009BE8  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7214  009BEC  0E01               	movlw	1
  7215  009BEE  6EDF               	movwf	indf2,c
  7216                           
  7217                           ;key_menu.c: 570: }else{
  7218  009BF0  0012               	return	
  7219  009BF2                     l15908:
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;key_menu.c: 571: *p=TEST_MODE;
  7223  009BF2  C060  FFD9         	movff	___up_adj_work_mode@p,fsr2l
  7224  009BF6  C061  FFDA         	movff	___up_adj_work_mode@p+1,fsr2h
  7225  009BFA  0E00               	movlw	0
  7226  009BFC  6EDF               	movwf	indf2,c
  7227  009BFE  0012               	return	
  7228  009C00                     __end_of___up_adj_work_mode:
  7229                           	opt stack 0
  7230                           tblptru	equ	0xFF8
  7231                           tblptrh	equ	0xFF7
  7232                           tblptrl	equ	0xFF6
  7233                           tablat	equ	0xFF5
  7234                           prodh	equ	0xFF4
  7235                           prodl	equ	0xFF3
  7236                           intcon	equ	0xFF2
  7237                           postinc0	equ	0xFEE
  7238                           wreg	equ	0xFE8
  7239                           postdec1	equ	0xFE5
  7240                           plusw1	equ	0xFE3
  7241                           fsr1h	equ	0xFE2
  7242                           fsr1l	equ	0xFE1
  7243                           indf2	equ	0xFDF
  7244                           postinc2	equ	0xFDE
  7245                           postdec2	equ	0xFDD
  7246                           plusw2	equ	0xFDB
  7247                           fsr2h	equ	0xFDA
  7248                           fsr2l	equ	0xFD9
  7249                           status	equ	0xFD8
  7250                           
  7251 ;; *************** function ___up_adj_bar_level_scale *****************
  7252 ;; Defined at:
  7253 ;;		line 559 in file "src/api/key_menu.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    6
  7274 ;; This function calls:
  7275 ;;		_key_adj_value_fixed
  7276 ;; This function is called by:
  7277 ;;		_key_process_up
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text32
  7282  00A2C0                     __ptext32:
  7283                           	opt stack 0
  7284  00A2C0                     ___up_adj_bar_level_scale:
  7285                           	opt stack 22
  7286                           
  7287                           ;key_menu.c: 561: key_adj_value_fixed((uint16_t*)(&adjValue),adjLocation);
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;incstack = 0
  7291  00A2C0  0E39               	movlw	low _adjValue
  7292  00A2C2  0100               	movlb	0	; () banked
  7293  00A2C4  6F6E               	movwf	key_adj_value_fixed@value& (0+255),b
  7294  00A2C6  0E00               	movlw	high _adjValue
  7295  00A2C8  0100               	movlb	0	; () banked
  7296  00A2CA  6F6F               	movwf	(key_adj_value_fixed@value+1)& (0+255),b
  7297  00A2CC  C03F  F070         	movff	_adjLocation,key_adj_value_fixed@loc	;volatile
  7298  00A2D0  ECD8  F032         	call	_key_adj_value_fixed	;wreg free
  7299  00A2D4  0012               	return		;funcret
  7300  00A2D6                     __end_of___up_adj_bar_level_scale:
  7301                           	opt stack 0
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           prodh	equ	0xFF4
  7307                           prodl	equ	0xFF3
  7308                           intcon	equ	0xFF2
  7309                           postinc0	equ	0xFEE
  7310                           wreg	equ	0xFE8
  7311                           postdec1	equ	0xFE5
  7312                           plusw1	equ	0xFE3
  7313                           fsr1h	equ	0xFE2
  7314                           fsr1l	equ	0xFE1
  7315                           indf2	equ	0xFDF
  7316                           postinc2	equ	0xFDE
  7317                           postdec2	equ	0xFDD
  7318                           plusw2	equ	0xFDB
  7319                           fsr2h	equ	0xFDA
  7320                           fsr2l	equ	0xFD9
  7321                           status	equ	0xFD8
  7322                           
  7323 ;; *************** function _key_adj_value_fixed *****************
  7324 ;; Defined at:
  7325 ;;		line 62 in file "src/api/key_menu.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  value           2   14[BANK0 ] PTR unsigned int 
  7328 ;;		 -> adjValue(4), passWord(2), key_adj_value_float@t16(2), 
  7329 ;;  loc             1   16[BANK0 ] unsigned char 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  t16             2   19[BANK0 ] unsigned int 
  7332 ;;  dloc            2   17[BANK0 ] unsigned int 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7342 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;Total ram usage:        7 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    5
  7349 ;; This function calls:
  7350 ;;		___exp_10
  7351 ;;		___lwdiv
  7352 ;;		___lwmod
  7353 ;;		___wmul
  7354 ;; This function is called by:
  7355 ;;		_key_adj_value_float
  7356 ;;		___up_psw_adj
  7357 ;;		___up_poly_coefic_adj
  7358 ;;		___up_adj_bar_level_scale
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text33
  7363  0065B0                     __ptext33:
  7364                           	opt stack 0
  7365  0065B0                     _key_adj_value_fixed:
  7366                           	opt stack 21
  7367                           
  7368                           ;key_menu.c: 64: uint16_t dloc;
  7369                           ;key_menu.c: 65: uint16_t t16=*value;
  7370                           
  7371                           ;incstack = 0
  7372  0065B0  C06E  FFD9         	movff	key_adj_value_fixed@value,fsr2l
  7373  0065B4  C06F  FFDA         	movff	key_adj_value_fixed@value+1,fsr2h
  7374  0065B8  CFDE F073          	movff	postinc2,key_adj_value_fixed@t16
  7375  0065BC  CFDD F074          	movff	postdec2,key_adj_value_fixed@t16+1
  7376                           
  7377                           ;key_menu.c: 66: if(loc>3)loc=3;
  7378  0065C0  0E03               	movlw	3
  7379  0065C2  0100               	movlb	0	; () banked
  7380  0065C4  6570               	cpfsgt	key_adj_value_fixed@loc& (0+255),b
  7381  0065C6  D003               	goto	l14644
  7382                           
  7383                           ; BSR set to: 0
  7384  0065C8  0E03               	movlw	3
  7385  0065CA  0100               	movlb	0	; () banked
  7386  0065CC  6F70               	movwf	key_adj_value_fixed@loc& (0+255),b
  7387  0065CE                     l14644:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;key_menu.c: 67: dloc=(t16/__exp_10(loc))%10;
  7391  0065CE  0100               	movlb	0	; () banked
  7392  0065D0  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7393  0065D2  EC19  F049         	call	___exp_10
  7394  0065D6  C060  F064         	movff	?___exp_10,___lwdiv@divisor
  7395  0065DA  C061  F065         	movff	?___exp_10+1,___lwdiv@divisor+1
  7396  0065DE  C073  F062         	movff	key_adj_value_fixed@t16,___lwdiv@dividend
  7397  0065E2  C074  F063         	movff	key_adj_value_fixed@t16+1,___lwdiv@dividend+1
  7398  0065E6  EC22  F043         	call	___lwdiv	;wreg free
  7399  0065EA  C062  F069         	movff	?___lwdiv,___lwmod@dividend
  7400  0065EE  C063  F06A         	movff	?___lwdiv+1,___lwmod@dividend+1
  7401  0065F2  0E00               	movlw	0
  7402  0065F4  0100               	movlb	0	; () banked
  7403  0065F6  6F6C               	movwf	(___lwmod@divisor+1)& (0+255),b
  7404  0065F8  0E0A               	movlw	10
  7405  0065FA  6F6B               	movwf	___lwmod@divisor& (0+255),b
  7406  0065FC  ECFA  F047         	call	___lwmod	;wreg free
  7407  006600  C069  F071         	movff	?___lwmod,key_adj_value_fixed@dloc
  7408  006604  C06A  F072         	movff	?___lwmod+1,key_adj_value_fixed@dloc+1
  7409                           
  7410                           ;key_menu.c: 68: t16=t16-dloc*__exp_10(loc);
  7411  006608  0100               	movlb	0	; () banked
  7412  00660A  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7413  00660C  EC19  F049         	call	___exp_10
  7414  006610  C060  F062         	movff	?___exp_10,___wmul@multiplier
  7415  006614  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  7416  006618  C071  F064         	movff	key_adj_value_fixed@dloc,___wmul@multiplicand
  7417  00661C  C072  F065         	movff	key_adj_value_fixed@dloc+1,___wmul@multiplicand+1
  7418  006620  EC00  F04E         	call	___wmul	;wreg free
  7419  006624  0100               	movlb	0	; () banked
  7420  006626  1F62               	comf	?___wmul& (0+255),f,b
  7421  006628  0100               	movlb	0	; () banked
  7422  00662A  1F63               	comf	(?___wmul+1)& (0+255),f,b
  7423  00662C  0100               	movlb	0	; () banked
  7424  00662E  4B62               	infsnz	?___wmul& (0+255),f,b
  7425  006630  2B63               	incf	(?___wmul+1)& (0+255),f,b
  7426  006632  0100               	movlb	0	; () banked
  7427  006634  5173               	movf	key_adj_value_fixed@t16& (0+255),w,b
  7428  006636  0100               	movlb	0	; () banked
  7429  006638  2562               	addwf	?___wmul& (0+255),w,b
  7430  00663A  0100               	movlb	0	; () banked
  7431  00663C  6F73               	movwf	key_adj_value_fixed@t16& (0+255),b
  7432  00663E  0100               	movlb	0	; () banked
  7433  006640  5174               	movf	(key_adj_value_fixed@t16+1)& (0+255),w,b
  7434  006642  0100               	movlb	0	; () banked
  7435  006644  2163               	addwfc	(?___wmul+1)& (0+255),w,b
  7436  006646  0100               	movlb	0	; () banked
  7437  006648  6F74               	movwf	(key_adj_value_fixed@t16+1)& (0+255),b
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;key_menu.c: 69: dloc++;
  7441  00664A  0100               	movlb	0	; () banked
  7442  00664C  4B71               	infsnz	key_adj_value_fixed@dloc& (0+255),f,b
  7443  00664E  2B72               	incf	(key_adj_value_fixed@dloc+1)& (0+255),f,b
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;key_menu.c: 70: if(dloc>9)dloc=0;
  7447  006650  0100               	movlb	0	; () banked
  7448  006652  5172               	movf	(key_adj_value_fixed@dloc+1)& (0+255),w,b
  7449  006654  E105               	bnz	u13530
  7450  006656  0E0A               	movlw	10
  7451  006658  0100               	movlb	0	; () banked
  7452  00665A  5D71               	subwf	key_adj_value_fixed@dloc& (0+255),w,b
  7453  00665C  A0D8               	btfss	status,0,c
  7454  00665E  D005               	goto	l14654
  7455  006660                     u13530:
  7456                           
  7457                           ; BSR set to: 0
  7458  006660  0E00               	movlw	0
  7459  006662  0100               	movlb	0	; () banked
  7460  006664  6F72               	movwf	(key_adj_value_fixed@dloc+1)& (0+255),b
  7461  006666  0E00               	movlw	0
  7462  006668  6F71               	movwf	key_adj_value_fixed@dloc& (0+255),b
  7463  00666A                     l14654:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;key_menu.c: 71: t16+=(dloc*__exp_10(loc));
  7467  00666A  0100               	movlb	0	; () banked
  7468  00666C  5170               	movf	key_adj_value_fixed@loc& (0+255),w,b
  7469  00666E  EC19  F049         	call	___exp_10
  7470  006672  C060  F062         	movff	?___exp_10,___wmul@multiplier
  7471  006676  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  7472  00667A  C071  F064         	movff	key_adj_value_fixed@dloc,___wmul@multiplicand
  7473  00667E  C072  F065         	movff	key_adj_value_fixed@dloc+1,___wmul@multiplicand+1
  7474  006682  EC00  F04E         	call	___wmul	;wreg free
  7475  006686  0100               	movlb	0	; () banked
  7476  006688  5162               	movf	?___wmul& (0+255),w,b
  7477  00668A  0100               	movlb	0	; () banked
  7478  00668C  2773               	addwf	key_adj_value_fixed@t16& (0+255),f,b
  7479  00668E  0100               	movlb	0	; () banked
  7480  006690  5163               	movf	(?___wmul+1)& (0+255),w,b
  7481  006692  0100               	movlb	0	; () banked
  7482  006694  2374               	addwfc	(key_adj_value_fixed@t16+1)& (0+255),f,b
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;key_menu.c: 72: *value=t16;
  7486  006696  C06E  FFD9         	movff	key_adj_value_fixed@value,fsr2l
  7487  00669A  C06F  FFDA         	movff	key_adj_value_fixed@value+1,fsr2h
  7488  00669E  C073  FFDE         	movff	key_adj_value_fixed@t16,postinc2
  7489  0066A2  C074  FFDD         	movff	key_adj_value_fixed@t16+1,postdec2
  7490                           
  7491                           ; BSR set to: 0
  7492  0066A6  0012               	return		;funcret
  7493  0066A8                     __end_of_key_adj_value_fixed:
  7494                           	opt stack 0
  7495                           tblptru	equ	0xFF8
  7496                           tblptrh	equ	0xFF7
  7497                           tblptrl	equ	0xFF6
  7498                           tablat	equ	0xFF5
  7499                           prodh	equ	0xFF4
  7500                           prodl	equ	0xFF3
  7501                           intcon	equ	0xFF2
  7502                           postinc0	equ	0xFEE
  7503                           wreg	equ	0xFE8
  7504                           postdec1	equ	0xFE5
  7505                           plusw1	equ	0xFE3
  7506                           fsr1h	equ	0xFE2
  7507                           fsr1l	equ	0xFE1
  7508                           indf2	equ	0xFDF
  7509                           postinc2	equ	0xFDE
  7510                           postdec2	equ	0xFDD
  7511                           plusw2	equ	0xFDB
  7512                           fsr2h	equ	0xFDA
  7513                           fsr2l	equ	0xFD9
  7514                           status	equ	0xFD8
  7515                           
  7516 ;; *************** function ___lwmod *****************
  7517 ;; Defined at:
  7518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  dividend        2    9[BANK0 ] unsigned int 
  7521 ;;  divisor         2   11[BANK0 ] unsigned int 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  counter         1   13[BANK0 ] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  2    9[BANK0 ] unsigned int 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;Total ram usage:        5 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    4
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_key_adj_value_fixed
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text34
  7548  008FF4                     __ptext34:
  7549                           	opt stack 0
  7550  008FF4                     ___lwmod:
  7551                           	opt stack 21
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;incstack = 0
  7555  008FF4  0100               	movlb	0	; () banked
  7556  008FF6  516B               	movf	___lwmod@divisor& (0+255),w,b
  7557  008FF8  0100               	movlb	0	; () banked
  7558  008FFA  116C               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7559  008FFC  B4D8               	btfsc	status,2,c
  7560  008FFE  D026               	goto	l2833
  7561                           
  7562                           ; BSR set to: 0
  7563  009000  0E01               	movlw	1
  7564  009002  0100               	movlb	0	; () banked
  7565  009004  6F6D               	movwf	___lwmod@counter& (0+255),b
  7566  009006  D006               	goto	l14328
  7567  009008                     l14326:
  7568                           
  7569                           ; BSR set to: 0
  7570  009008  0100               	movlb	0	; () banked
  7571  00900A  90D8               	bcf	status,0,c
  7572  00900C  376B               	rlcf	___lwmod@divisor& (0+255),f,b
  7573  00900E  376C               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7574  009010  0100               	movlb	0	; () banked
  7575  009012  2B6D               	incf	___lwmod@counter& (0+255),f,b
  7576  009014                     l14328:
  7577                           
  7578                           ; BSR set to: 0
  7579  009014  0100               	movlb	0	; () banked
  7580  009016  AF6C               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7581  009018  D7F7               	goto	l14326
  7582  00901A                     l14330:
  7583                           
  7584                           ; BSR set to: 0
  7585  00901A  0100               	movlb	0	; () banked
  7586  00901C  516B               	movf	___lwmod@divisor& (0+255),w,b
  7587  00901E  0100               	movlb	0	; () banked
  7588  009020  5D69               	subwf	___lwmod@dividend& (0+255),w,b
  7589  009022  0100               	movlb	0	; () banked
  7590  009024  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7591  009026  0100               	movlb	0	; () banked
  7592  009028  596A               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7593  00902A  A0D8               	btfss	status,0,c
  7594  00902C  D008               	goto	l14334
  7595                           
  7596                           ; BSR set to: 0
  7597  00902E  0100               	movlb	0	; () banked
  7598  009030  516B               	movf	___lwmod@divisor& (0+255),w,b
  7599  009032  0100               	movlb	0	; () banked
  7600  009034  5F69               	subwf	___lwmod@dividend& (0+255),f,b
  7601  009036  0100               	movlb	0	; () banked
  7602  009038  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7603  00903A  0100               	movlb	0	; () banked
  7604  00903C  5B6A               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7605  00903E                     l14334:
  7606                           
  7607                           ; BSR set to: 0
  7608  00903E  0100               	movlb	0	; () banked
  7609  009040  90D8               	bcf	status,0,c
  7610  009042  336C               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7611  009044  336B               	rrcf	___lwmod@divisor& (0+255),f,b
  7612                           
  7613                           ; BSR set to: 0
  7614  009046  0100               	movlb	0	; () banked
  7615  009048  2F6D               	decfsz	___lwmod@counter& (0+255),f,b
  7616  00904A  D7E7               	goto	l14330
  7617  00904C                     l2833:
  7618                           
  7619                           ; BSR set to: 0
  7620  00904C  C069  F069         	movff	___lwmod@dividend,?___lwmod
  7621  009050  C06A  F06A         	movff	___lwmod@dividend+1,?___lwmod+1
  7622                           
  7623                           ; BSR set to: 0
  7624  009054  0012               	return		;funcret
  7625  009056                     __end_of___lwmod:
  7626                           	opt stack 0
  7627                           tblptru	equ	0xFF8
  7628                           tblptrh	equ	0xFF7
  7629                           tblptrl	equ	0xFF6
  7630                           tablat	equ	0xFF5
  7631                           prodh	equ	0xFF4
  7632                           prodl	equ	0xFF3
  7633                           intcon	equ	0xFF2
  7634                           postinc0	equ	0xFEE
  7635                           wreg	equ	0xFE8
  7636                           postdec1	equ	0xFE5
  7637                           plusw1	equ	0xFE3
  7638                           fsr1h	equ	0xFE2
  7639                           fsr1l	equ	0xFE1
  7640                           indf2	equ	0xFDF
  7641                           postinc2	equ	0xFDE
  7642                           postdec2	equ	0xFDD
  7643                           plusw2	equ	0xFDB
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function ___exp_10 *****************
  7649 ;; Defined at:
  7650 ;;		line 22 in file "src/api/key_menu.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  n               1    wreg     unsigned char 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  n               1   31[COMRAM] unsigned char 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  2    0[BANK0 ] unsigned int 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7668 ;;Total ram usage:        3 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    4
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_key_adj_value_fixed
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text35
  7679  009232                     __ptext35:
  7680                           	opt stack 0
  7681  009232                     ___exp_10:
  7682                           	opt stack 21
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;incstack = 0
  7686                           ;___exp_10@n stored from wreg
  7687  009232  6E20               	movwf	___exp_10@n,c
  7688                           
  7689                           ;key_menu.c: 24: switch(n){
  7690  009234  D01E               	goto	l14010
  7691  009236                     l13988:
  7692  009236  0E00               	movlw	0
  7693  009238  0100               	movlb	0	; () banked
  7694  00923A  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7695  00923C  0E01               	movlw	1
  7696  00923E  6F60               	movwf	?___exp_10& (0+255),b
  7697                           
  7698                           ; BSR set to: 0
  7699  009240  0012               	return	
  7700  009242                     l13992:
  7701  009242  0E00               	movlw	0
  7702  009244  0100               	movlb	0	; () banked
  7703  009246  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7704  009248  0E0A               	movlw	10
  7705  00924A  6F60               	movwf	?___exp_10& (0+255),b
  7706                           
  7707                           ; BSR set to: 0
  7708  00924C  0012               	return	
  7709  00924E                     l13996:
  7710  00924E  0E00               	movlw	0
  7711  009250  0100               	movlb	0	; () banked
  7712  009252  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7713  009254  0E64               	movlw	100
  7714  009256  6F60               	movwf	?___exp_10& (0+255),b
  7715                           
  7716                           ; BSR set to: 0
  7717  009258  0012               	return	
  7718  00925A                     l14000:
  7719  00925A  0E03               	movlw	3
  7720  00925C  0100               	movlb	0	; () banked
  7721  00925E  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7722  009260  0EE8               	movlw	232
  7723  009262  6F60               	movwf	?___exp_10& (0+255),b
  7724                           
  7725                           ; BSR set to: 0
  7726  009264  0012               	return	
  7727  009266                     l14004:
  7728  009266  0E03               	movlw	3
  7729  009268  0100               	movlb	0	; () banked
  7730  00926A  6F61               	movwf	(?___exp_10+1)& (0+255),b
  7731  00926C  0EE8               	movlw	232
  7732  00926E  6F60               	movwf	?___exp_10& (0+255),b
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;key_menu.c: 30: }
  7736                           
  7737                           ; BSR set to: 0
  7738  009270  0012               	return	
  7739  009272                     l14010:
  7740  009272  5020               	movf	___exp_10@n,w,c
  7741                           
  7742                           ; Switch size 1, requested type "space"
  7743                           ; Number of cases is 4, Range of values is 0 to 3
  7744                           ; switch strategies available:
  7745                           ; Name         Instructions Cycles
  7746                           ; simple_byte           13     7 (average)
  7747                           ;	Chosen strategy is simple_byte
  7748  009274  0A00               	xorlw	0	; case 0
  7749  009276  B4D8               	btfsc	status,2,c
  7750  009278  D7DE               	goto	l13988
  7751  00927A  0A01               	xorlw	1	; case 1
  7752  00927C  B4D8               	btfsc	status,2,c
  7753  00927E  D7E1               	goto	l13992
  7754  009280  0A03               	xorlw	3	; case 2
  7755  009282  B4D8               	btfsc	status,2,c
  7756  009284  D7E4               	goto	l13996
  7757  009286  0A01               	xorlw	1	; case 3
  7758  009288  B4D8               	btfsc	status,2,c
  7759  00928A  D7E7               	goto	l14000
  7760  00928C  D7EC               	goto	l14004
  7761  00928E                     __end_of___exp_10:
  7762                           	opt stack 0
  7763                           tblptru	equ	0xFF8
  7764                           tblptrh	equ	0xFF7
  7765                           tblptrl	equ	0xFF6
  7766                           tablat	equ	0xFF5
  7767                           prodh	equ	0xFF4
  7768                           prodl	equ	0xFF3
  7769                           intcon	equ	0xFF2
  7770                           postinc0	equ	0xFEE
  7771                           wreg	equ	0xFE8
  7772                           postdec1	equ	0xFE5
  7773                           plusw1	equ	0xFE3
  7774                           fsr1h	equ	0xFE2
  7775                           fsr1l	equ	0xFE1
  7776                           indf2	equ	0xFDF
  7777                           postinc2	equ	0xFDE
  7778                           postdec2	equ	0xFDD
  7779                           plusw2	equ	0xFDB
  7780                           fsr2h	equ	0xFDA
  7781                           fsr2l	equ	0xFD9
  7782                           status	equ	0xFD8
  7783                           
  7784 ;; *************** function _key_process_set_up_long *****************
  7785 ;; Defined at:
  7786 ;;		line 597 in file "src/api/key_menu.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;Total ram usage:        2 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    7
  7807 ;; This function calls:
  7808 ;;		___enter_menu_bar_scale
  7809 ;;		___enter_menu_calib_press
  7810 ;;		___enter_menu_calib_press_diff
  7811 ;;		___enter_menu_epr_calib
  7812 ;;		___enter_menu_epr_ilp_scale
  7813 ;;		___enter_menu_poly_coeffic
  7814 ;;		___enter_menu_set_base_zero
  7815 ;;		___enter_menu_set_density
  7816 ;;		___enter_menu_set_pose_size
  7817 ;;		___enter_menu_warn_type
  7818 ;;		___enter_menu_warn_value
  7819 ;;		___enter_menu_work_mode
  7820 ;; This function is called by:
  7821 ;;		_key_process
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text36
  7826  006BB4                     __ptext36:
  7827                           	opt stack 0
  7828  006BB4                     _key_process_set_up_long:
  7829                           	opt stack 22
  7830                           
  7831                           ;key_menu.c: 599: if(menu==0x10){
  7832                           
  7833                           ;incstack = 0
  7834  006BB4  0E10               	movlw	16
  7835  006BB6  1833               	xorwf	_menu,w,c	;volatile
  7836  006BB8  A4D8               	btfss	status,2,c
  7837  006BBA  0012               	return	
  7838  006BBC  D02F               	goto	l16946
  7839  006BBE                     l16920:
  7840  006BBE  EC47  F044         	call	___enter_menu_set_density	;wreg free
  7841  006BC2  0012               	return	
  7842  006BC4                     l16922:
  7843  006BC4  EC04  F04D         	call	___enter_menu_set_pose_size	;wreg free
  7844  006BC8  0012               	return	
  7845  006BCA                     l16924:
  7846  006BCA  ECE6  F042         	call	___enter_menu_set_base_zero	;wreg free
  7847  006BCE  0012               	return	
  7848  006BD0                     l16926:
  7849  006BD0  0E00               	movlw	0
  7850  006BD2  6E20               	movwf	___enter_menu_calib_press_diff@col,c
  7851  006BD4  0E00               	movlw	0
  7852  006BD6  EC58  F031         	call	___enter_menu_calib_press_diff
  7853  006BDA  0012               	return	
  7854  006BDC                     l16928:
  7855  006BDC  0E00               	movlw	0
  7856  006BDE  6E20               	movwf	___enter_menu_calib_press@col,c
  7857  006BE0  0E00               	movlw	0
  7858  006BE2  EC54  F030         	call	___enter_menu_calib_press
  7859  006BE6  0012               	return	
  7860  006BE8                     l16930:
  7861  006BE8  0E00               	movlw	0
  7862  006BEA  EC22  F04B         	call	___enter_menu_poly_coeffic
  7863  006BEE  0012               	return	
  7864  006BF0                     l16932:
  7865  006BF0  0E00               	movlw	0
  7866  006BF2  EC2B  F048         	call	___enter_menu_warn_type
  7867  006BF6  0012               	return	
  7868  006BF8                     l16934:
  7869  006BF8  0E00               	movlw	0
  7870  006BFA  EC91  F038         	call	___enter_menu_warn_value
  7871  006BFE  0012               	return	
  7872  006C00                     l16936:
  7873  006C00  0E00               	movlw	0
  7874  006C02  ECC8  F03B         	call	___enter_menu_epr_calib
  7875  006C06  0012               	return	
  7876  006C08                     l16938:
  7877  006C08  0E00               	movlw	0
  7878  006C0A  ECAD  F039         	call	___enter_menu_epr_ilp_scale
  7879  006C0E  0012               	return	
  7880  006C10                     l16940:
  7881  006C10  ECE6  F04C         	call	___enter_menu_bar_scale	;wreg free
  7882  006C14  0012               	return	
  7883  006C16                     l16942:
  7884  006C16  EC94  F051         	call	___enter_menu_work_mode	;wreg free
  7885                           
  7886                           ;key_menu.c: 614: }
  7887                           
  7888                           ;key_menu.c: 613: default:break;
  7889  006C1A  0012               	return	
  7890  006C1C                     l16946:
  7891  006C1C  C03D  F08A         	movff	_passWord,??_key_process_set_up_long	;volatile
  7892  006C20  C03E  F08B         	movff	_passWord+1,??_key_process_set_up_long+1	;volatile
  7893                           
  7894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7895                           ; Switch size 1, requested type "space"
  7896                           ; Number of cases is 1, Range of values is 0 to 0
  7897                           ; switch strategies available:
  7898                           ; Name         Instructions Cycles
  7899                           ; simple_byte            4     3 (average)
  7900                           ;	Chosen strategy is simple_byte
  7901  006C24  0100               	movlb	0	; () banked
  7902  006C26  518B               	movf	(??_key_process_set_up_long+1)& (0+255),w,b
  7903  006C28  0A00               	xorlw	0	; case 0
  7904  006C2A  A4D8               	btfss	status,2,c
  7905  006C2C  0012               	return	
  7906                           
  7907                           ; BSR set to: 0
  7908                           ; Switch size 1, requested type "space"
  7909                           ; Number of cases is 12, Range of values is 6 to 188
  7910                           ; switch strategies available:
  7911                           ; Name         Instructions Cycles
  7912                           ; simple_byte           37    19 (average)
  7913                           ;	Chosen strategy is simple_byte
  7914  006C2E  0100               	movlb	0	; () banked
  7915  006C30  518A               	movf	??_key_process_set_up_long& (0+255),w,b
  7916  006C32  0A06               	xorlw	6	; case 6
  7917  006C34  B4D8               	btfsc	status,2,c
  7918  006C36  D7DC               	goto	l16932
  7919  006C38  0A16               	xorlw	22	; case 16
  7920  006C3A  B4D8               	btfsc	status,2,c
  7921  006C3C  D7DD               	goto	l16934
  7922  006C3E  0A02               	xorlw	2	; case 18
  7923  006C40  B4D8               	btfsc	status,2,c
  7924  006C42  D7E9               	goto	l16942
  7925  006C44  0A36               	xorlw	54	; case 36
  7926  006C46  B4D8               	btfsc	status,2,c
  7927  006C48  D7BA               	goto	l16920
  7928  006C4A  0A1C               	xorlw	28	; case 56
  7929  006C4C  B4D8               	btfsc	status,2,c
  7930  006C4E  D7BD               	goto	l16924
  7931  006C50  0A7A               	xorlw	122	; case 66
  7932  006C52  B4D8               	btfsc	status,2,c
  7933  006C54  D7B7               	goto	l16922
  7934  006C56  0AC7               	xorlw	199	; case 133
  7935  006C58  B4D8               	btfsc	status,2,c
  7936  006C5A  D7C6               	goto	l16930
  7937  006C5C  0A0F               	xorlw	15	; case 138
  7938  006C5E  B4D8               	btfsc	status,2,c
  7939  006C60  D7CF               	goto	l16936
  7940  006C62  0A01               	xorlw	1	; case 139
  7941  006C64  B4D8               	btfsc	status,2,c
  7942  006C66  D7D0               	goto	l16938
  7943  006C68  0A23               	xorlw	35	; case 168
  7944  006C6A  B4D8               	btfsc	status,2,c
  7945  006C6C  D7B1               	goto	l16926
  7946  006C6E  0A01               	xorlw	1	; case 169
  7947  006C70  B4D8               	btfsc	status,2,c
  7948  006C72  D7B4               	goto	l16928
  7949  006C74  0A15               	xorlw	21	; case 188
  7950  006C76  A4D8               	btfss	status,2,c
  7951                           
  7952                           ; BSR set to: 0
  7953  006C78  0012               	return	
  7954  006C7A  D7CA               	goto	l16940
  7955  006C7C                     __end_of_key_process_set_up_long:
  7956                           	opt stack 0
  7957                           tblptru	equ	0xFF8
  7958                           tblptrh	equ	0xFF7
  7959                           tblptrl	equ	0xFF6
  7960                           tablat	equ	0xFF5
  7961                           prodh	equ	0xFF4
  7962                           prodl	equ	0xFF3
  7963                           intcon	equ	0xFF2
  7964                           postinc0	equ	0xFEE
  7965                           wreg	equ	0xFE8
  7966                           postdec1	equ	0xFE5
  7967                           plusw1	equ	0xFE3
  7968                           fsr1h	equ	0xFE2
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           postdec2	equ	0xFDD
  7973                           plusw2	equ	0xFDB
  7974                           fsr2h	equ	0xFDA
  7975                           fsr2l	equ	0xFD9
  7976                           status	equ	0xFD8
  7977                           
  7978 ;; *************** function ___enter_menu_work_mode *****************
  7979 ;; Defined at:
  7980 ;;		line 342 in file "src/api/key_menu.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;		None
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;		None
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;Total ram usage:        0 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; Hardware stack levels required when called:    4
  8001 ;; This function calls:
  8002 ;;		Nothing
  8003 ;; This function is called by:
  8004 ;;		_key_process_set_up_long
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text37
  8009  00A328                     __ptext37:
  8010                           	opt stack 0
  8011  00A328                     ___enter_menu_work_mode:
  8012                           	opt stack 24
  8013                           
  8014                           ;key_menu.c: 344: menu=0xf0;
  8015                           
  8016                           ;incstack = 0
  8017  00A328  0EF0               	movlw	240
  8018  00A32A  6E33               	movwf	_menu,c	;volatile
  8019                           
  8020                           ;key_menu.c: 345: subMenu=0x00;
  8021  00A32C  0E00               	movlw	0
  8022  00A32E  6E32               	movwf	_subMenu,c	;volatile
  8023                           
  8024                           ;key_menu.c: 346: *((uint8_t*)(&adjValue))=dwm;
  8025  00A330  C0FD  F039         	movff	_dwm,_adjValue	;volatile
  8026                           
  8027                           ;key_menu.c: 347: adjLocation=0;
  8028  00A334  0E00               	movlw	0
  8029  00A336  6E3F               	movwf	_adjLocation,c	;volatile
  8030  00A338  0012               	return		;funcret
  8031  00A33A                     __end_of___enter_menu_work_mode:
  8032                           	opt stack 0
  8033                           tblptru	equ	0xFF8
  8034                           tblptrh	equ	0xFF7
  8035                           tblptrl	equ	0xFF6
  8036                           tablat	equ	0xFF5
  8037                           prodh	equ	0xFF4
  8038                           prodl	equ	0xFF3
  8039                           intcon	equ	0xFF2
  8040                           postinc0	equ	0xFEE
  8041                           wreg	equ	0xFE8
  8042                           postdec1	equ	0xFE5
  8043                           plusw1	equ	0xFE3
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           indf2	equ	0xFDF
  8047                           postinc2	equ	0xFDE
  8048                           postdec2	equ	0xFDD
  8049                           plusw2	equ	0xFDB
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054 ;; *************** function ___enter_menu_set_density *****************
  8055 ;; Defined at:
  8056 ;;		line 113 in file "src/api/key_menu.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;		None
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  t32             4   33[BANK0 ] long 
  8061 ;;  fps             2   31[BANK0 ] PTR struct .
  8062 ;;		 -> stSysData(240), 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;Total ram usage:        8 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:    6
  8079 ;; This function calls:
  8080 ;;		___int32_2_mflot32
  8081 ;; This function is called by:
  8082 ;;		_key_process_set_up_long
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text38
  8087  00888E                     __ptext38:
  8088                           	opt stack 0
  8089  00888E                     ___enter_menu_set_density:
  8090                           	opt stack 22
  8091                           
  8092                           ;key_menu.c: 115: int32_t t32;
  8093                           ;key_menu.c: 116: menu=0x20;
  8094                           
  8095                           ;incstack = 0
  8096  00888E  0E20               	movlw	32
  8097  008890  6E33               	movwf	_menu,c	;volatile
  8098                           
  8099                           ;key_menu.c: 117: subMenu=0x00;
  8100  008892  0E00               	movlw	0
  8101  008894  6E32               	movwf	_subMenu,c	;volatile
  8102                           
  8103                           ;key_menu.c: 119: st_sysDataDef* fps= &stSysData;
  8104  008896  0E00               	movlw	low _stSysData
  8105  008898  0100               	movlb	0	; () banked
  8106  00889A  6F7F               	movwf	___enter_menu_set_density@fps& (0+255),b
  8107  00889C  0E02               	movlw	high _stSysData
  8108  00889E  0100               	movlb	0	; () banked
  8109  0088A0  6F80               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;key_menu.c: 120: t32=fps->density;
  8113  0088A2  0100               	movlb	0	; () banked
  8114  0088A4  EE20 F006          	lfsr	2,6
  8115  0088A8  517F               	movf	___enter_menu_set_density@fps& (0+255),w,b
  8116  0088AA  26D9               	addwf	fsr2l,f,c
  8117  0088AC  5180               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
  8118  0088AE  22DA               	addwfc	fsr2h,f,c
  8119  0088B0  CFDE F07D          	movff	postinc2,??___enter_menu_set_density
  8120  0088B4  CFDD F07E          	movff	postdec2,??___enter_menu_set_density+1
  8121  0088B8  C07D  F081         	movff	??___enter_menu_set_density,___enter_menu_set_density@t32
  8122  0088BC  C07E  F082         	movff	??___enter_menu_set_density+1,___enter_menu_set_density@t32+1
  8123  0088C0  0100               	movlb	0	; () banked
  8124  0088C2  6B83               	clrf	(___enter_menu_set_density@t32+2)& (0+255),b
  8125  0088C4  6B84               	clrf	(___enter_menu_set_density@t32+3)& (0+255),b
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;key_menu.c: 121: t32=__int32_2_mflot32(t32);
  8129  0088C6  C081  F06D         	movff	___enter_menu_set_density@t32,___int32_2_mflot32@x
  8130  0088CA  C082  F06E         	movff	___enter_menu_set_density@t32+1,___int32_2_mflot32@x+1
  8131  0088CE  C083  F06F         	movff	___enter_menu_set_density@t32+2,___int32_2_mflot32@x+2
  8132  0088D2  C084  F070         	movff	___enter_menu_set_density@t32+3,___int32_2_mflot32@x+3
  8133  0088D6  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
  8134  0088DA  C06D  F081         	movff	?___int32_2_mflot32,___enter_menu_set_density@t32
  8135  0088DE  C06E  F082         	movff	?___int32_2_mflot32+1,___enter_menu_set_density@t32+1
  8136  0088E2  C06F  F083         	movff	?___int32_2_mflot32+2,___enter_menu_set_density@t32+2
  8137  0088E6  C070  F084         	movff	?___int32_2_mflot32+3,___enter_menu_set_density@t32+3
  8138                           
  8139                           ;key_menu.c: 122: m_floatAdj.t32=t32;
  8140  0088EA  C081  F035         	movff	___enter_menu_set_density@t32,_m_floatAdj
  8141  0088EE  C082  F036         	movff	___enter_menu_set_density@t32+1,_m_floatAdj+1
  8142  0088F2  C083  F037         	movff	___enter_menu_set_density@t32+2,_m_floatAdj+2
  8143  0088F6  C084  F038         	movff	___enter_menu_set_density@t32+3,_m_floatAdj+3
  8144                           
  8145                           ;key_menu.c: 123: adjLocation=0;
  8146  0088FA  0E00               	movlw	0
  8147  0088FC  6E3F               	movwf	_adjLocation,c	;volatile
  8148  0088FE  0012               	return		;funcret
  8149  008900                     __end_of___enter_menu_set_density:
  8150                           	opt stack 0
  8151                           tblptru	equ	0xFF8
  8152                           tblptrh	equ	0xFF7
  8153                           tblptrl	equ	0xFF6
  8154                           tablat	equ	0xFF5
  8155                           prodh	equ	0xFF4
  8156                           prodl	equ	0xFF3
  8157                           intcon	equ	0xFF2
  8158                           postinc0	equ	0xFEE
  8159                           wreg	equ	0xFE8
  8160                           postdec1	equ	0xFE5
  8161                           plusw1	equ	0xFE3
  8162                           fsr1h	equ	0xFE2
  8163                           fsr1l	equ	0xFE1
  8164                           indf2	equ	0xFDF
  8165                           postinc2	equ	0xFDE
  8166                           postdec2	equ	0xFDD
  8167                           plusw2	equ	0xFDB
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function ___enter_menu_set_base_zero *****************
  8173 ;; Defined at:
  8174 ;;		line 159 in file "src/api/key_menu.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  t32             4   31[BANK0 ] long 
  8179 ;;  fps             2   29[BANK0 ] PTR struct .
  8180 ;;		 -> stSysData(240), 
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;Total ram usage:        6 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:    6
  8197 ;; This function calls:
  8198 ;;		___int32_2_mflot32
  8199 ;; This function is called by:
  8200 ;;		_key_process_set_up_long
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text39
  8205  0085CC                     __ptext39:
  8206                           	opt stack 0
  8207  0085CC                     ___enter_menu_set_base_zero:
  8208                           	opt stack 22
  8209                           
  8210                           ;key_menu.c: 161: int32_t t32;
  8211                           ;key_menu.c: 162: menu=0x40;
  8212                           
  8213                           ;incstack = 0
  8214  0085CC  0E40               	movlw	64
  8215  0085CE  6E33               	movwf	_menu,c	;volatile
  8216                           
  8217                           ;key_menu.c: 163: subMenu=0;
  8218  0085D0  0E00               	movlw	0
  8219  0085D2  6E32               	movwf	_subMenu,c	;volatile
  8220                           
  8221                           ;key_menu.c: 165: st_sysDataDef* fps= &stSysData;
  8222  0085D4  0E00               	movlw	low _stSysData
  8223  0085D6  0100               	movlb	0	; () banked
  8224  0085D8  6F7D               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
  8225  0085DA  0E02               	movlw	high _stSysData
  8226  0085DC  0100               	movlb	0	; () banked
  8227  0085DE  6F7E               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;key_menu.c: 166: t32=(fps->baseZero);
  8231  0085E0  0100               	movlb	0	; () banked
  8232  0085E2  EE20 F018          	lfsr	2,24
  8233  0085E6  517D               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
  8234  0085E8  26D9               	addwf	fsr2l,f,c
  8235  0085EA  517E               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
  8236  0085EC  22DA               	addwfc	fsr2h,f,c
  8237  0085EE  CFDE F07F          	movff	postinc2,___enter_menu_set_base_zero@t32
  8238  0085F2  CFDE F080          	movff	postinc2,___enter_menu_set_base_zero@t32+1
  8239  0085F6  CFDE F081          	movff	postinc2,___enter_menu_set_base_zero@t32+2
  8240  0085FA  CFDE F082          	movff	postinc2,___enter_menu_set_base_zero@t32+3
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;key_menu.c: 167: t32=__int32_2_mflot32(t32);
  8244  0085FE  C07F  F06D         	movff	___enter_menu_set_base_zero@t32,___int32_2_mflot32@x
  8245  008602  C080  F06E         	movff	___enter_menu_set_base_zero@t32+1,___int32_2_mflot32@x+1
  8246  008606  C081  F06F         	movff	___enter_menu_set_base_zero@t32+2,___int32_2_mflot32@x+2
  8247  00860A  C082  F070         	movff	___enter_menu_set_base_zero@t32+3,___int32_2_mflot32@x+3
  8248  00860E  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
  8249  008612  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_base_zero@t32
  8250  008616  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_base_zero@t32+1
  8251  00861A  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_base_zero@t32+2
  8252  00861E  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_base_zero@t32+3
  8253                           
  8254                           ;key_menu.c: 168: m_floatAdj.t32=t32;
  8255  008622  C07F  F035         	movff	___enter_menu_set_base_zero@t32,_m_floatAdj
  8256  008626  C080  F036         	movff	___enter_menu_set_base_zero@t32+1,_m_floatAdj+1
  8257  00862A  C081  F037         	movff	___enter_menu_set_base_zero@t32+2,_m_floatAdj+2
  8258  00862E  C082  F038         	movff	___enter_menu_set_base_zero@t32+3,_m_floatAdj+3
  8259                           
  8260                           ;key_menu.c: 169: if(m_floatAdj.stru.sign){
  8261  008632  5038               	movf	_m_floatAdj+3,w,c
  8262  008634  B4D8               	btfsc	status,2,c
  8263  008636  D003               	goto	l15772
  8264                           
  8265                           ;key_menu.c: 170: adjLocation=1;
  8266  008638  0E01               	movlw	1
  8267  00863A  6E3F               	movwf	_adjLocation,c	;volatile
  8268                           
  8269                           ;key_menu.c: 171: }else{
  8270  00863C  0012               	return	
  8271  00863E                     l15772:
  8272                           
  8273                           ;key_menu.c: 172: adjLocation=0;
  8274  00863E  0E00               	movlw	0
  8275  008640  6E3F               	movwf	_adjLocation,c	;volatile
  8276  008642  0012               	return	
  8277  008644                     __end_of___enter_menu_set_base_zero:
  8278                           	opt stack 0
  8279                           tblptru	equ	0xFF8
  8280                           tblptrh	equ	0xFF7
  8281                           tblptrl	equ	0xFF6
  8282                           tablat	equ	0xFF5
  8283                           prodh	equ	0xFF4
  8284                           prodl	equ	0xFF3
  8285                           intcon	equ	0xFF2
  8286                           postinc0	equ	0xFEE
  8287                           wreg	equ	0xFE8
  8288                           postdec1	equ	0xFE5
  8289                           plusw1	equ	0xFE3
  8290                           fsr1h	equ	0xFE2
  8291                           fsr1l	equ	0xFE1
  8292                           indf2	equ	0xFDF
  8293                           postinc2	equ	0xFDE
  8294                           postdec2	equ	0xFDD
  8295                           plusw2	equ	0xFDB
  8296                           fsr2h	equ	0xFDA
  8297                           fsr2l	equ	0xFD9
  8298                           status	equ	0xFD8
  8299                           
  8300 ;; *************** function ___enter_menu_bar_scale *****************
  8301 ;; Defined at:
  8302 ;;		line 332 in file "src/api/key_menu.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;		None
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;  fps             2    2[BANK0 ] PTR struct .
  8307 ;;		 -> stSysData(240), 
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1    wreg      void 
  8310 ;; Registers used:
  8311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;Total ram usage:        4 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    4
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_key_process_set_up_long
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text40
  8332  0099CC                     __ptext40:
  8333                           	opt stack 0
  8334  0099CC                     ___enter_menu_bar_scale:
  8335                           	opt stack 24
  8336                           
  8337                           ;key_menu.c: 334: menu=0xc0;
  8338                           
  8339                           ;incstack = 0
  8340  0099CC  0EC0               	movlw	192
  8341  0099CE  6E33               	movwf	_menu,c	;volatile
  8342                           
  8343                           ;key_menu.c: 335: subMenu=0x00;
  8344  0099D0  0E00               	movlw	0
  8345  0099D2  6E32               	movwf	_subMenu,c	;volatile
  8346                           
  8347                           ;key_menu.c: 337: st_sysDataDef* fps= &stSysData;
  8348  0099D4  0E00               	movlw	low _stSysData
  8349  0099D6  0100               	movlb	0	; () banked
  8350  0099D8  6F62               	movwf	___enter_menu_bar_scale@fps& (0+255),b
  8351  0099DA  0E02               	movlw	high _stSysData
  8352  0099DC  0100               	movlb	0	; () banked
  8353  0099DE  6F63               	movwf	(___enter_menu_bar_scale@fps+1)& (0+255),b
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;key_menu.c: 338: adjValue=fps->barScale;
  8357  0099E0  0100               	movlb	0	; () banked
  8358  0099E2  EE20 F0EC          	lfsr	2,236
  8359  0099E6  5162               	movf	___enter_menu_bar_scale@fps& (0+255),w,b
  8360  0099E8  26D9               	addwf	fsr2l,f,c
  8361  0099EA  5163               	movf	(___enter_menu_bar_scale@fps+1)& (0+255),w,b
  8362  0099EC  22DA               	addwfc	fsr2h,f,c
  8363  0099EE  CFDE F060          	movff	postinc2,??___enter_menu_bar_scale
  8364  0099F2  CFDD F061          	movff	postdec2,??___enter_menu_bar_scale+1
  8365  0099F6  C060  F039         	movff	??___enter_menu_bar_scale,_adjValue	;volatile
  8366  0099FA  C061  F03A         	movff	??___enter_menu_bar_scale+1,_adjValue+1	;volatile
  8367  0099FE  6A3B               	clrf	_adjValue+2,c	;volatile
  8368  009A00  6A3C               	clrf	_adjValue+3,c	;volatile
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;key_menu.c: 339: adjLocation=0;
  8372  009A02  0E00               	movlw	0
  8373  009A04  6E3F               	movwf	_adjLocation,c	;volatile
  8374                           
  8375                           ; BSR set to: 0
  8376  009A06  0012               	return		;funcret
  8377  009A08                     __end_of___enter_menu_bar_scale:
  8378                           	opt stack 0
  8379                           tblptru	equ	0xFF8
  8380                           tblptrh	equ	0xFF7
  8381                           tblptrl	equ	0xFF6
  8382                           tablat	equ	0xFF5
  8383                           prodh	equ	0xFF4
  8384                           prodl	equ	0xFF3
  8385                           intcon	equ	0xFF2
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           postdec1	equ	0xFE5
  8389                           plusw1	equ	0xFE3
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           indf2	equ	0xFDF
  8393                           postinc2	equ	0xFDE
  8394                           postdec2	equ	0xFDD
  8395                           plusw2	equ	0xFDB
  8396                           fsr2h	equ	0xFDA
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8
  8399                           
  8400 ;; *************** function _key_process_set_long *****************
  8401 ;; Defined at:
  8402 ;;		line 952 in file "src/api/key_menu.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;Total ram usage:        0 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:   10
  8423 ;; This function calls:
  8424 ;;		___exit_menu_to_home_unsave
  8425 ;;		___set_long_bar_level_scale
  8426 ;;		___set_long_base_zero
  8427 ;;		___set_long_density
  8428 ;;		___set_long_work_mode
  8429 ;;		___set_short_diff_calib
  8430 ;;		___set_short_epr_ilp_scale
  8431 ;;		___set_short_epr_param
  8432 ;;		___set_short_poly_coefic
  8433 ;;		___set_short_pose_size
  8434 ;;		___set_short_pr_calib
  8435 ;;		___set_short_warn_type
  8436 ;;		___set_short_warn_value
  8437 ;; This function is called by:
  8438 ;;		_key_process
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text41
  8443  0074CC                     __ptext41:
  8444                           	opt stack 0
  8445  0074CC                     _key_process_set_long:
  8446                           	opt stack 19
  8447                           
  8448                           ;key_menu.c: 954: switch(menu){
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;incstack = 0
  8452  0074CC  D02F               	goto	l16982
  8453  0074CE                     l16954:
  8454                           
  8455                           ;key_menu.c: 956: case 0x10: __exit_menu_to_home_unsave(); break;
  8456  0074CE  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8457  0074D2  0012               	return	
  8458  0074D4                     l16956:
  8459  0074D4  ECFA  F04A         	call	___set_long_density	;wreg free
  8460  0074D8  0012               	return	
  8461  0074DA                     l16958:
  8462  0074DA  0E01               	movlw	1
  8463  0074DC  ECC9  F02E         	call	___set_short_pose_size
  8464  0074E0  0012               	return	
  8465  0074E2                     l16960:
  8466  0074E2  ECCE  F049         	call	___set_long_base_zero	;wreg free
  8467  0074E6  0012               	return	
  8468  0074E8                     l16962:
  8469  0074E8  0E01               	movlw	1
  8470  0074EA  EC89  F013         	call	___set_short_diff_calib
  8471  0074EE  0012               	return	
  8472  0074F0                     l16964:
  8473  0074F0  0E01               	movlw	1
  8474  0074F2  EC3E  F015         	call	___set_short_pr_calib
  8475  0074F6  0012               	return	
  8476  0074F8                     l16966:
  8477  0074F8  0E01               	movlw	1
  8478  0074FA  EC80  F044         	call	___set_short_poly_coefic
  8479  0074FE  0012               	return	
  8480  007500                     l16968:
  8481  007500  0E01               	movlw	1
  8482  007502  ECAC  F041         	call	___set_short_warn_type
  8483  007506  0012               	return	
  8484  007508                     l16970:
  8485  007508  0E01               	movlw	1
  8486  00750A  EC3E  F036         	call	___set_short_warn_value
  8487  00750E  0012               	return	
  8488  007510                     l16972:
  8489  007510  0E01               	movlw	1
  8490  007512  EC40  F02A         	call	___set_short_epr_param
  8491  007516  0012               	return	
  8492  007518                     l16974:
  8493  007518  0E01               	movlw	1
  8494  00751A  ECC2  F03A         	call	___set_short_epr_ilp_scale
  8495  00751E  0012               	return	
  8496  007520                     l16976:
  8497  007520  EC69  F04C         	call	___set_long_bar_level_scale	;wreg free
  8498  007524  0012               	return	
  8499  007526                     l16978:
  8500  007526  EC8F  F050         	call	___set_long_work_mode	;wreg free
  8501                           
  8502                           ;key_menu.c: 971: }
  8503                           
  8504                           ;key_menu.c: 970: default:break;
  8505  00752A  0012               	return	
  8506  00752C                     l16982:
  8507  00752C  5033               	movf	_menu,w,c	;volatile
  8508                           
  8509                           ; Switch size 1, requested type "space"
  8510                           ; Number of cases is 14, Range of values is 0 to 240
  8511                           ; switch strategies available:
  8512                           ; Name         Instructions Cycles
  8513                           ; simple_byte           43    22 (average)
  8514                           ;	Chosen strategy is simple_byte
  8515  00752E  0A00               	xorlw	0	; case 0
  8516  007530  B4D8               	btfsc	status,2,c
  8517  007532  D7CD               	goto	l16954
  8518  007534  0A10               	xorlw	16	; case 16
  8519  007536  B4D8               	btfsc	status,2,c
  8520  007538  D7CA               	goto	l16954
  8521  00753A  0A30               	xorlw	48	; case 32
  8522  00753C  B4D8               	btfsc	status,2,c
  8523  00753E  D7CA               	goto	l16956
  8524  007540  0A10               	xorlw	16	; case 48
  8525  007542  B4D8               	btfsc	status,2,c
  8526  007544  D7CA               	goto	l16958
  8527  007546  0A70               	xorlw	112	; case 64
  8528  007548  B4D8               	btfsc	status,2,c
  8529  00754A  D7CB               	goto	l16960
  8530  00754C  0A10               	xorlw	16	; case 80
  8531  00754E  B4D8               	btfsc	status,2,c
  8532  007550  D7CB               	goto	l16962
  8533  007552  0A30               	xorlw	48	; case 96
  8534  007554  B4D8               	btfsc	status,2,c
  8535  007556  D7CC               	goto	l16964
  8536  007558  0A10               	xorlw	16	; case 112
  8537  00755A  B4D8               	btfsc	status,2,c
  8538  00755C  D7CD               	goto	l16966
  8539  00755E  0AF0               	xorlw	240	; case 128
  8540  007560  B4D8               	btfsc	status,2,c
  8541  007562  D7CE               	goto	l16968
  8542  007564  0A10               	xorlw	16	; case 144
  8543  007566  B4D8               	btfsc	status,2,c
  8544  007568  D7CF               	goto	l16970
  8545  00756A  0A30               	xorlw	48	; case 160
  8546  00756C  B4D8               	btfsc	status,2,c
  8547  00756E  D7D0               	goto	l16972
  8548  007570  0A10               	xorlw	16	; case 176
  8549  007572  B4D8               	btfsc	status,2,c
  8550  007574  D7D1               	goto	l16974
  8551  007576  0A70               	xorlw	112	; case 192
  8552  007578  B4D8               	btfsc	status,2,c
  8553  00757A  D7D2               	goto	l16976
  8554  00757C  0A30               	xorlw	48	; case 240
  8555  00757E  A4D8               	btfss	status,2,c
  8556  007580  0012               	return	
  8557  007582  D7D1               	goto	l16978
  8558  007584                     __end_of_key_process_set_long:
  8559                           	opt stack 0
  8560                           tblptru	equ	0xFF8
  8561                           tblptrh	equ	0xFF7
  8562                           tblptrl	equ	0xFF6
  8563                           tablat	equ	0xFF5
  8564                           prodh	equ	0xFF4
  8565                           prodl	equ	0xFF3
  8566                           intcon	equ	0xFF2
  8567                           postinc0	equ	0xFEE
  8568                           wreg	equ	0xFE8
  8569                           postdec1	equ	0xFE5
  8570                           plusw1	equ	0xFE3
  8571                           fsr1h	equ	0xFE2
  8572                           fsr1l	equ	0xFE1
  8573                           indf2	equ	0xFDF
  8574                           postinc2	equ	0xFDE
  8575                           postdec2	equ	0xFDD
  8576                           plusw2	equ	0xFDB
  8577                           fsr2h	equ	0xFDA
  8578                           fsr2l	equ	0xFD9
  8579                           status	equ	0xFD8
  8580                           
  8581 ;; *************** function ___set_long_work_mode *****************
  8582 ;; Defined at:
  8583 ;;		line 940 in file "src/api/key_menu.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  t32             4    0        long 
  8588 ;;  p               2    0[BANK0 ] PTR unsigned char 
  8589 ;;		 -> adjValue(4), 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8602 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;Total ram usage:        2 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    5
  8606 ;; This function calls:
  8607 ;;		___exit_menu_to_home_unsave
  8608 ;; This function is called by:
  8609 ;;		_key_process_set_long
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text42
  8614  00A11E                     __ptext42:
  8615                           	opt stack 0
  8616  00A11E                     ___set_long_work_mode:
  8617                           	opt stack 23
  8618                           
  8619                           ;key_menu.c: 942: uint8_t* p;
  8620                           ;key_menu.c: 943: int32_t t32;
  8621                           ;key_menu.c: 946: p=(uint8_t*)(&adjValue);
  8622                           
  8623                           ;incstack = 0
  8624  00A11E  0E39               	movlw	low _adjValue
  8625  00A120  0100               	movlb	0	; () banked
  8626  00A122  6F60               	movwf	___set_long_work_mode@p& (0+255),b
  8627  00A124  0E00               	movlw	high _adjValue
  8628  00A126  0100               	movlb	0	; () banked
  8629  00A128  6F61               	movwf	(___set_long_work_mode@p+1)& (0+255),b
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;key_menu.c: 948: dwm=*p;
  8633  00A12A  C060  FFD9         	movff	___set_long_work_mode@p,fsr2l
  8634  00A12E  C061  FFDA         	movff	___set_long_work_mode@p+1,fsr2h
  8635  00A132  50DF               	movf	indf2,w,c
  8636  00A134  0100               	movlb	0	; () banked
  8637  00A136  6FFD               	movwf	_dwm& (0+255),b	;volatile
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;key_menu.c: 949: __exit_menu_to_home_unsave();
  8641  00A138  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8642  00A13C  0012               	return		;funcret
  8643  00A13E                     __end_of___set_long_work_mode:
  8644                           	opt stack 0
  8645                           tblptru	equ	0xFF8
  8646                           tblptrh	equ	0xFF7
  8647                           tblptrl	equ	0xFF6
  8648                           tablat	equ	0xFF5
  8649                           prodh	equ	0xFF4
  8650                           prodl	equ	0xFF3
  8651                           intcon	equ	0xFF2
  8652                           postinc0	equ	0xFEE
  8653                           wreg	equ	0xFE8
  8654                           postdec1	equ	0xFE5
  8655                           plusw1	equ	0xFE3
  8656                           fsr1h	equ	0xFE2
  8657                           fsr1l	equ	0xFE1
  8658                           indf2	equ	0xFDF
  8659                           postinc2	equ	0xFDE
  8660                           postdec2	equ	0xFDD
  8661                           plusw2	equ	0xFDB
  8662                           fsr2h	equ	0xFDA
  8663                           fsr2l	equ	0xFD9
  8664                           status	equ	0xFD8
  8665                           
  8666 ;; *************** function ___set_long_density *****************
  8667 ;; Defined at:
  8668 ;;		line 896 in file "src/api/key_menu.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;		None
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  t32             4    0[BANK3 ] long 
  8673 ;;  p               3    0        PTR unsigned char 
  8674 ;;  stp             2    4[BANK3 ] PTR struct .
  8675 ;;		 -> stSysData(240), 
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;Total ram usage:        6 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:    8
  8692 ;; This function calls:
  8693 ;;		___exit_menu_to_home_unsave
  8694 ;;		___mflot32_2_int32
  8695 ;;		___sys_data_save_write_flash
  8696 ;; This function is called by:
  8697 ;;		_key_process_set_long
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text43
  8702  0095F4                     __ptext43:
  8703                           	opt stack 0
  8704  0095F4                     ___set_long_density:
  8705                           	opt stack 20
  8706                           
  8707                           ;key_menu.c: 898: uint8_t* p;
  8708                           ;key_menu.c: 899: int32_t t32;
  8709                           ;key_menu.c: 902: st_sysDataDef* stp=&stSysData;
  8710                           
  8711                           ;incstack = 0
  8712  0095F4  0E00               	movlw	low _stSysData
  8713  0095F6  0103               	movlb	3	; () banked
  8714  0095F8  6FCE               	movwf	___set_long_density@stp& (0+255),b
  8715  0095FA  0E02               	movlw	high _stSysData
  8716  0095FC  0103               	movlb	3	; () banked
  8717  0095FE  6FCF               	movwf	(___set_long_density@stp+1)& (0+255),b
  8718                           
  8719                           ; BSR set to: 3
  8720                           ;key_menu.c: 903: t32=__mflot32_2_int32(m_floatAdj.t32);
  8721  009600  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  8722  009604  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  8723  009608  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  8724  00960C  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  8725  009610  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
  8726  009614  C06C  F3CA         	movff	?___mflot32_2_int32,___set_long_density@t32
  8727  009618  C06D  F3CB         	movff	?___mflot32_2_int32+1,___set_long_density@t32+1
  8728  00961C  C06E  F3CC         	movff	?___mflot32_2_int32+2,___set_long_density@t32+2
  8729  009620  C06F  F3CD         	movff	?___mflot32_2_int32+3,___set_long_density@t32+3
  8730                           
  8731                           ;key_menu.c: 904: stp->density=t32;
  8732  009624  0103               	movlb	3	; () banked
  8733  009626  EE20 F006          	lfsr	2,6
  8734  00962A  51CE               	movf	___set_long_density@stp& (0+255),w,b
  8735  00962C  26D9               	addwf	fsr2l,f,c
  8736  00962E  51CF               	movf	(___set_long_density@stp+1)& (0+255),w,b
  8737  009630  22DA               	addwfc	fsr2h,f,c
  8738  009632  C3CA  FFDE         	movff	___set_long_density@t32,postinc2
  8739  009636  C3CB  FFDD         	movff	___set_long_density@t32+1,postdec2
  8740                           
  8741                           ; BSR set to: 3
  8742                           ;key_menu.c: 906: __sys_data_save_write_flash();
  8743  00963A  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
  8744                           
  8745                           ;key_menu.c: 908: __exit_menu_to_home_unsave();
  8746  00963E  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8747  009642  0012               	return		;funcret
  8748  009644                     __end_of___set_long_density:
  8749                           	opt stack 0
  8750                           tblptru	equ	0xFF8
  8751                           tblptrh	equ	0xFF7
  8752                           tblptrl	equ	0xFF6
  8753                           tablat	equ	0xFF5
  8754                           prodh	equ	0xFF4
  8755                           prodl	equ	0xFF3
  8756                           intcon	equ	0xFF2
  8757                           postinc0	equ	0xFEE
  8758                           wreg	equ	0xFE8
  8759                           postdec1	equ	0xFE5
  8760                           plusw1	equ	0xFE3
  8761                           fsr1h	equ	0xFE2
  8762                           fsr1l	equ	0xFE1
  8763                           indf2	equ	0xFDF
  8764                           postinc2	equ	0xFDE
  8765                           postdec2	equ	0xFDD
  8766                           plusw2	equ	0xFDB
  8767                           fsr2h	equ	0xFDA
  8768                           fsr2l	equ	0xFD9
  8769                           status	equ	0xFD8
  8770                           
  8771 ;; *************** function ___set_long_base_zero *****************
  8772 ;; Defined at:
  8773 ;;		line 911 in file "src/api/key_menu.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  t32             4    0[BANK3 ] long 
  8778 ;;  p               3    0        PTR unsigned char 
  8779 ;;  stp             2    4[BANK3 ] PTR struct .
  8780 ;;		 -> stSysData(240), 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;Total ram usage:        6 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:    8
  8797 ;; This function calls:
  8798 ;;		___exit_menu_to_home_unsave
  8799 ;;		___mflot32_2_int32
  8800 ;;		___sys_data_save_write_flash
  8801 ;; This function is called by:
  8802 ;;		_key_process_set_long
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text44
  8807  00939C                     __ptext44:
  8808                           	opt stack 0
  8809  00939C                     ___set_long_base_zero:
  8810                           	opt stack 20
  8811                           
  8812                           ;key_menu.c: 913: uint8_t* p;
  8813                           ;key_menu.c: 914: int32_t t32;
  8814                           ;key_menu.c: 917: st_sysDataDef* stp=&stSysData;
  8815                           
  8816                           ;incstack = 0
  8817  00939C  0E00               	movlw	low _stSysData
  8818  00939E  0103               	movlb	3	; () banked
  8819  0093A0  6FCE               	movwf	___set_long_base_zero@stp& (0+255),b
  8820  0093A2  0E02               	movlw	high _stSysData
  8821  0093A4  0103               	movlb	3	; () banked
  8822  0093A6  6FCF               	movwf	(___set_long_base_zero@stp+1)& (0+255),b
  8823                           
  8824                           ; BSR set to: 3
  8825                           ;key_menu.c: 918: t32=__mflot32_2_int32(m_floatAdj.t32);
  8826  0093A8  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  8827  0093AC  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  8828  0093B0  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  8829  0093B4  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  8830  0093B8  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
  8831  0093BC  C06C  F3CA         	movff	?___mflot32_2_int32,___set_long_base_zero@t32
  8832  0093C0  C06D  F3CB         	movff	?___mflot32_2_int32+1,___set_long_base_zero@t32+1
  8833  0093C4  C06E  F3CC         	movff	?___mflot32_2_int32+2,___set_long_base_zero@t32+2
  8834  0093C8  C06F  F3CD         	movff	?___mflot32_2_int32+3,___set_long_base_zero@t32+3
  8835                           
  8836                           ;key_menu.c: 919: stp->baseZero=t32;
  8837  0093CC  0103               	movlb	3	; () banked
  8838  0093CE  EE20 F018          	lfsr	2,24
  8839  0093D2  51CE               	movf	___set_long_base_zero@stp& (0+255),w,b
  8840  0093D4  26D9               	addwf	fsr2l,f,c
  8841  0093D6  51CF               	movf	(___set_long_base_zero@stp+1)& (0+255),w,b
  8842  0093D8  22DA               	addwfc	fsr2h,f,c
  8843  0093DA  C3CA  FFDE         	movff	___set_long_base_zero@t32,postinc2
  8844  0093DE  C3CB  FFDE         	movff	___set_long_base_zero@t32+1,postinc2
  8845  0093E2  C3CC  FFDE         	movff	___set_long_base_zero@t32+2,postinc2
  8846  0093E6  C3CD  FFDE         	movff	___set_long_base_zero@t32+3,postinc2
  8847                           
  8848                           ; BSR set to: 3
  8849                           ;key_menu.c: 921: __sys_data_save_write_flash();
  8850  0093EA  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
  8851                           
  8852                           ;key_menu.c: 923: __exit_menu_to_home_unsave();
  8853  0093EE  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8854  0093F2  0012               	return		;funcret
  8855  0093F4                     __end_of___set_long_base_zero:
  8856                           	opt stack 0
  8857                           tblptru	equ	0xFF8
  8858                           tblptrh	equ	0xFF7
  8859                           tblptrl	equ	0xFF6
  8860                           tablat	equ	0xFF5
  8861                           prodh	equ	0xFF4
  8862                           prodl	equ	0xFF3
  8863                           intcon	equ	0xFF2
  8864                           postinc0	equ	0xFEE
  8865                           wreg	equ	0xFE8
  8866                           postdec1	equ	0xFE5
  8867                           plusw1	equ	0xFE3
  8868                           fsr1h	equ	0xFE2
  8869                           fsr1l	equ	0xFE1
  8870                           indf2	equ	0xFDF
  8871                           postinc2	equ	0xFDE
  8872                           postdec2	equ	0xFDD
  8873                           plusw2	equ	0xFDB
  8874                           fsr2h	equ	0xFDA
  8875                           fsr2l	equ	0xFD9
  8876                           status	equ	0xFD8
  8877                           
  8878 ;; *************** function ___set_long_bar_level_scale *****************
  8879 ;; Defined at:
  8880 ;;		line 925 in file "src/api/key_menu.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;		None
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;  t32             4    0        long 
  8885 ;;  stp             2  133[BANK0 ] PTR struct .
  8886 ;;		 -> stSysData(240), 
  8887 ;;  p               2  131[BANK0 ] PTR int 
  8888 ;;		 -> adjValue(4), 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;Total ram usage:        4 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    8
  8905 ;; This function calls:
  8906 ;;		___exit_menu_to_home_unsave
  8907 ;;		___sys_data_save_write_flash
  8908 ;; This function is called by:
  8909 ;;		_key_process_set_long
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text45
  8914  0098D2                     __ptext45:
  8915                           	opt stack 0
  8916  0098D2                     ___set_long_bar_level_scale:
  8917                           	opt stack 20
  8918                           
  8919                           ;key_menu.c: 927: int16_t* p;
  8920                           ;key_menu.c: 928: int32_t t32;
  8921                           ;key_menu.c: 931: st_sysDataDef* stp=&stSysData;
  8922                           
  8923                           ;incstack = 0
  8924  0098D2  0E00               	movlw	low _stSysData
  8925  0098D4  0100               	movlb	0	; () banked
  8926  0098D6  6FE5               	movwf	___set_long_bar_level_scale@stp& (0+255),b
  8927  0098D8  0E02               	movlw	high _stSysData
  8928  0098DA  0100               	movlb	0	; () banked
  8929  0098DC  6FE6               	movwf	(___set_long_bar_level_scale@stp+1)& (0+255),b
  8930                           
  8931                           ;key_menu.c: 932: p=(uint16_t*)(&adjValue);
  8932  0098DE  0E39               	movlw	low _adjValue
  8933  0098E0  0100               	movlb	0	; () banked
  8934  0098E2  6FE3               	movwf	___set_long_bar_level_scale@p& (0+255),b
  8935  0098E4  0E00               	movlw	high _adjValue
  8936  0098E6  0100               	movlb	0	; () banked
  8937  0098E8  6FE4               	movwf	(___set_long_bar_level_scale@p+1)& (0+255),b
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;key_menu.c: 933: stp->barScale=*p;
  8941  0098EA  C0E3  FFD9         	movff	___set_long_bar_level_scale@p,fsr2l
  8942  0098EE  C0E4  FFDA         	movff	___set_long_bar_level_scale@p+1,fsr2h
  8943  0098F2  0100               	movlb	0	; () banked
  8944  0098F4  EE10 F0EC          	lfsr	1,236
  8945  0098F8  51E5               	movf	___set_long_bar_level_scale@stp& (0+255),w,b
  8946  0098FA  26E1               	addwf	fsr1l,f,c
  8947  0098FC  51E6               	movf	(___set_long_bar_level_scale@stp+1)& (0+255),w,b
  8948  0098FE  22E2               	addwfc	fsr1h,f,c
  8949  009900  CFDE FFE6          	movff	postinc2,postinc1
  8950  009904  CFDD FFE5          	movff	postdec2,postdec1
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;key_menu.c: 935: __sys_data_save_write_flash();
  8954  009908  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
  8955                           
  8956                           ;key_menu.c: 937: __exit_menu_to_home_unsave();
  8957  00990C  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  8958  009910  0012               	return		;funcret
  8959  009912                     __end_of___set_long_bar_level_scale:
  8960                           	opt stack 0
  8961                           tblptru	equ	0xFF8
  8962                           tblptrh	equ	0xFF7
  8963                           tblptrl	equ	0xFF6
  8964                           tablat	equ	0xFF5
  8965                           prodh	equ	0xFF4
  8966                           prodl	equ	0xFF3
  8967                           intcon	equ	0xFF2
  8968                           postinc0	equ	0xFEE
  8969                           wreg	equ	0xFE8
  8970                           postinc1	equ	0xFE6
  8971                           postdec1	equ	0xFE5
  8972                           plusw1	equ	0xFE3
  8973                           fsr1h	equ	0xFE2
  8974                           fsr1l	equ	0xFE1
  8975                           indf2	equ	0xFDF
  8976                           postinc2	equ	0xFDE
  8977                           postdec2	equ	0xFDD
  8978                           plusw2	equ	0xFDB
  8979                           fsr2h	equ	0xFDA
  8980                           fsr2l	equ	0xFD9
  8981                           status	equ	0xFD8
  8982                           
  8983 ;; *************** function _key_process_set *****************
  8984 ;; Defined at:
  8985 ;;		line 974 in file "src/api/key_menu.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;Total ram usage:        0 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:   10
  9006 ;; This function calls:
  9007 ;;		___enter_menu_password
  9008 ;;		___set_short_diff_calib
  9009 ;;		___set_short_epr_ilp_scale
  9010 ;;		___set_short_epr_param
  9011 ;;		___set_short_poly_coefic
  9012 ;;		___set_short_pose_size
  9013 ;;		___set_short_pr_calib
  9014 ;;		___set_short_warn_type
  9015 ;;		___set_short_warn_value
  9016 ;; This function is called by:
  9017 ;;		_key_process
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text46
  9022  007B68                     __ptext46:
  9023                           	opt stack 0
  9024  007B68                     _key_process_set:
  9025                           	opt stack 19
  9026                           
  9027                           ;key_menu.c: 976: switch(menu){
  9028                           
  9029                           ;incstack = 0
  9030  007B68  D023               	goto	l17006
  9031  007B6A                     l16986:
  9032  007B6A  EC6B  F051         	call	___enter_menu_password	;wreg free
  9033                           
  9034                           ;key_menu.c: 979: case 0x20: break;
  9035                           
  9036                           ;key_menu.c: 978: case 0x10: break;
  9037  007B6E  0012               	return	
  9038  007B70                     l16988:
  9039  007B70  0E00               	movlw	0
  9040  007B72  ECC9  F02E         	call	___set_short_pose_size
  9041                           
  9042                           ;key_menu.c: 981: case 0x40: break;
  9043  007B76  0012               	return	
  9044  007B78                     l16990:
  9045  007B78  0E00               	movlw	0
  9046  007B7A  EC89  F013         	call	___set_short_diff_calib
  9047  007B7E  0012               	return	
  9048  007B80                     l16992:
  9049  007B80  0E00               	movlw	0
  9050  007B82  EC3E  F015         	call	___set_short_pr_calib
  9051  007B86  0012               	return	
  9052  007B88                     l16994:
  9053  007B88  0E00               	movlw	0
  9054  007B8A  EC80  F044         	call	___set_short_poly_coefic
  9055  007B8E  0012               	return	
  9056  007B90                     l16996:
  9057  007B90  0E00               	movlw	0
  9058  007B92  ECAC  F041         	call	___set_short_warn_type
  9059  007B96  0012               	return	
  9060  007B98                     l16998:
  9061  007B98  0E00               	movlw	0
  9062  007B9A  EC3E  F036         	call	___set_short_warn_value
  9063  007B9E  0012               	return	
  9064  007BA0                     l17000:
  9065  007BA0  0E00               	movlw	0
  9066  007BA2  EC40  F02A         	call	___set_short_epr_param
  9067  007BA6  0012               	return	
  9068  007BA8                     l17002:
  9069  007BA8  0E00               	movlw	0
  9070  007BAA  ECC2  F03A         	call	___set_short_epr_ilp_scale
  9071                           
  9072                           ;key_menu.c: 995: }
  9073                           
  9074                           ;key_menu.c: 994: default:break;
  9075                           
  9076                           ;key_menu.c: 993: case 0xf0: break;
  9077                           
  9078                           ;key_menu.c: 992: case 0xc0: break;
  9079  007BAE  0012               	return	
  9080  007BB0                     l17006:
  9081  007BB0  5033               	movf	_menu,w,c	;volatile
  9082                           
  9083                           ; Switch size 1, requested type "space"
  9084                           ; Number of cases is 14, Range of values is 0 to 240
  9085                           ; switch strategies available:
  9086                           ; Name         Instructions Cycles
  9087                           ; simple_byte           43    22 (average)
  9088                           ;	Chosen strategy is simple_byte
  9089  007BB2  0A00               	xorlw	0	; case 0
  9090  007BB4  B4D8               	btfsc	status,2,c
  9091  007BB6  D7D9               	goto	l16986
  9092  007BB8  0A10               	xorlw	16	; case 16
  9093  007BBA  B4D8               	btfsc	status,2,c
  9094  007BBC  0012               	return	
  9095  007BBE  0A30               	xorlw	48	; case 32
  9096  007BC0  B4D8               	btfsc	status,2,c
  9097  007BC2  0012               	return	
  9098  007BC4  0A10               	xorlw	16	; case 48
  9099  007BC6  B4D8               	btfsc	status,2,c
  9100  007BC8  D7D3               	goto	l16988
  9101  007BCA  0A70               	xorlw	112	; case 64
  9102  007BCC  B4D8               	btfsc	status,2,c
  9103  007BCE  0012               	return	
  9104  007BD0  0A10               	xorlw	16	; case 80
  9105  007BD2  B4D8               	btfsc	status,2,c
  9106  007BD4  D7D1               	goto	l16990
  9107  007BD6  0A30               	xorlw	48	; case 96
  9108  007BD8  B4D8               	btfsc	status,2,c
  9109  007BDA  D7D2               	goto	l16992
  9110  007BDC  0A10               	xorlw	16	; case 112
  9111  007BDE  B4D8               	btfsc	status,2,c
  9112  007BE0  D7D3               	goto	l16994
  9113  007BE2  0AF0               	xorlw	240	; case 128
  9114  007BE4  B4D8               	btfsc	status,2,c
  9115  007BE6  D7D4               	goto	l16996
  9116  007BE8  0A10               	xorlw	16	; case 144
  9117  007BEA  B4D8               	btfsc	status,2,c
  9118  007BEC  D7D5               	goto	l16998
  9119  007BEE  0A30               	xorlw	48	; case 160
  9120  007BF0  B4D8               	btfsc	status,2,c
  9121  007BF2  D7D6               	goto	l17000
  9122  007BF4  0A10               	xorlw	16	; case 176
  9123  007BF6  B4D8               	btfsc	status,2,c
  9124  007BF8  D7D7               	goto	l17002
  9125  007BFA  0A70               	xorlw	112	; case 192
  9126  007BFC  B4D8               	btfsc	status,2,c
  9127  007BFE  0012               	return	
  9128  007C00  0A30               	xorlw	48	; case 240
  9129  007C02  0012               	return	
  9130  007C04                     __end_of_key_process_set:
  9131                           	opt stack 0
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           postinc1	equ	0xFE6
  9142                           postdec1	equ	0xFE5
  9143                           plusw1	equ	0xFE3
  9144                           fsr1h	equ	0xFE2
  9145                           fsr1l	equ	0xFE1
  9146                           indf2	equ	0xFDF
  9147                           postinc2	equ	0xFDE
  9148                           postdec2	equ	0xFDD
  9149                           plusw2	equ	0xFDB
  9150                           fsr2h	equ	0xFDA
  9151                           fsr2l	equ	0xFD9
  9152                           status	equ	0xFD8
  9153                           
  9154 ;; *************** function ___set_short_warn_value *****************
  9155 ;; Defined at:
  9156 ;;		line 816 in file "src/api/key_menu.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  gohome          1    wreg     unsigned char 
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;  gohome          1    0[BANK3 ] unsigned char 
  9161 ;;  t32             4    1[BANK3 ] long 
  9162 ;;  stp             2    5[BANK3 ] PTR struct .
  9163 ;;		 -> stSysData(240), 
  9164 ;;  t8              1    7[BANK3 ] unsigned char 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Totals:         0       2       0       0       8       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;Total ram usage:       10 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:    8
  9181 ;; This function calls:
  9182 ;;		___enter_menu_warn_value
  9183 ;;		___exit_menu_to_home_unsave
  9184 ;;		___mflot32_2_int32
  9185 ;;		___sys_data_save_write_flash
  9186 ;; This function is called by:
  9187 ;;		_key_process_set_long
  9188 ;;		_key_process_set
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text47
  9193  006C7C                     __ptext47:
  9194                           	opt stack 0
  9195  006C7C                     ___set_short_warn_value:
  9196                           	opt stack 20
  9197                           
  9198                           ;incstack = 0
  9199                           ;___set_short_warn_value@gohome stored from wreg
  9200  006C7C  0103               	movlb	3	; () banked
  9201  006C7E  6FCA               	movwf	___set_short_warn_value@gohome& (0+255),b
  9202                           
  9203                           ;key_menu.c: 818: uint8_t t8;
  9204                           ;key_menu.c: 820: int32_t t32;
  9205                           ;key_menu.c: 823: st_sysDataDef* stp=&stSysData;
  9206  006C80  0E00               	movlw	low _stSysData
  9207  006C82  0103               	movlb	3	; () banked
  9208  006C84  6FCF               	movwf	___set_short_warn_value@stp& (0+255),b
  9209  006C86  0E02               	movlw	high _stSysData
  9210  006C88  0103               	movlb	3	; () banked
  9211  006C8A  6FD0               	movwf	(___set_short_warn_value@stp+1)& (0+255),b
  9212                           
  9213                           ; BSR set to: 3
  9214                           ;key_menu.c: 824: t32=__mflot32_2_int32(m_floatAdj.t32);
  9215  006C8C  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  9216  006C90  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  9217  006C94  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  9218  006C98  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  9219  006C9C  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
  9220  006CA0  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_warn_value@t32
  9221  006CA4  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_warn_value@t32+1
  9222  006CA8  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_warn_value@t32+2
  9223  006CAC  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_warn_value@t32+3
  9224                           
  9225                           ;key_menu.c: 832: t8=subMenu>>1;
  9226  006CB0  90D8               	bcf	status,0,c
  9227  006CB2  3032               	rrcf	_subMenu,w,c	;volatile
  9228  006CB4  0103               	movlb	3	; () banked
  9229  006CB6  6FD1               	movwf	___set_short_warn_value@t8& (0+255),b
  9230                           
  9231                           ; BSR set to: 3
  9232                           ;key_menu.c: 833: if(subMenu & 0x01){
  9233  006CB8  A032               	btfss	_subMenu,0,c	;volatile
  9234  006CBA  D019               	goto	l16100
  9235                           
  9236                           ; BSR set to: 3
  9237                           ;key_menu.c: 834: stp->diffPressureWarnSet[t8].warnValueHi=t32;
  9238  006CBC  0103               	movlb	3	; () banked
  9239  006CBE  51D1               	movf	___set_short_warn_value@t8& (0+255),w,b
  9240  006CC0  0D0C               	mullw	12
  9241  006CC2  0E3C               	movlw	60
  9242  006CC4  26F3               	addwf	prodl,f,c
  9243  006CC6  0E00               	movlw	0
  9244  006CC8  22F4               	addwfc	prodh,f,c
  9245  006CCA  C3CF  F0E3         	movff	___set_short_warn_value@stp,??___set_short_warn_value
  9246  006CCE  C3D0  F0E4         	movff	___set_short_warn_value@stp+1,??___set_short_warn_value+1
  9247  006CD2  50F3               	movf	prodl,w,c
  9248  006CD4  0100               	movlb	0	; () banked
  9249  006CD6  27E3               	addwf	??___set_short_warn_value& (0+255),f,b
  9250  006CD8  50F4               	movf	prodh,w,c
  9251  006CDA  0100               	movlb	0	; () banked
  9252  006CDC  23E4               	addwfc	(??___set_short_warn_value+1)& (0+255),f,b
  9253  006CDE  0E04               	movlw	4
  9254  006CE0  0100               	movlb	0	; () banked
  9255  006CE2  25E3               	addwf	??___set_short_warn_value& (0+255),w,b
  9256  006CE4  6ED9               	movwf	fsr2l,c
  9257  006CE6  0E00               	movlw	0
  9258  006CE8  0100               	movlb	0	; () banked
  9259  006CEA  21E4               	addwfc	(??___set_short_warn_value+1)& (0+255),w,b
  9260  006CEC  D00E               	goto	L1
  9261  006CEE                     l16100:
  9262                           
  9263                           ;key_menu.c: 836: stp->diffPressureWarnSet[t8].warnValueLo=t32;
  9264  006CEE  0103               	movlb	3	; () banked
  9265  006CF0  51D1               	movf	___set_short_warn_value@t8& (0+255),w,b
  9266  006CF2  0D0C               	mullw	12
  9267  006CF4  0E3C               	movlw	60
  9268  006CF6  26F3               	addwf	prodl,f,c
  9269  006CF8  0E00               	movlw	0
  9270  006CFA  22F4               	addwfc	prodh,f,c
  9271  006CFC  50F3               	movf	prodl,w,c
  9272  006CFE  0103               	movlb	3	; () banked
  9273  006D00  25CF               	addwf	___set_short_warn_value@stp& (0+255),w,b
  9274  006D02  6ED9               	movwf	fsr2l,c
  9275  006D04  50F4               	movf	prodh,w,c
  9276  006D06  0103               	movlb	3	; () banked
  9277  006D08  21D0               	addwfc	(___set_short_warn_value@stp+1)& (0+255),w,b
  9278  006D0A                     L1:
  9279  006D0A  6EDA               	movwf	fsr2h,c
  9280  006D0C  C3CB  FFDE         	movff	___set_short_warn_value@t32,postinc2
  9281  006D10  C3CC  FFDE         	movff	___set_short_warn_value@t32+1,postinc2
  9282  006D14  C3CD  FFDE         	movff	___set_short_warn_value@t32+2,postinc2
  9283  006D18  C3CE  FFDE         	movff	___set_short_warn_value@t32+3,postinc2
  9284                           
  9285                           ;key_menu.c: 837: }
  9286                           ;key_menu.c: 839: __sys_data_save_write_flash();
  9287                           
  9288                           ; BSR set to: 3
  9289  006D1C  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
  9290                           
  9291                           ;key_menu.c: 841: if(gohome){__exit_menu_to_home_unsave(); return;}
  9292  006D20  0103               	movlb	3	; () banked
  9293  006D22  51CA               	movf	___set_short_warn_value@gohome& (0+255),w,b
  9294  006D24  0103               	movlb	3	; () banked
  9295  006D26  B4D8               	btfsc	status,2,c
  9296  006D28  D003               	goto	l16110
  9297                           
  9298                           ; BSR set to: 3
  9299  006D2A  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  9300  006D2E  0012               	return	
  9301  006D30                     l16110:
  9302                           
  9303                           ;key_menu.c: 843: subMenu++;
  9304  006D30  2A32               	incf	_subMenu,f,c	;volatile
  9305                           
  9306                           ;key_menu.c: 844: if(subMenu>0x07)subMenu=0x00;
  9307  006D32  0E07               	movlw	7
  9308  006D34  6432               	cpfsgt	_subMenu,c	;volatile
  9309  006D36  D002               	goto	l16116
  9310  006D38  0E00               	movlw	0
  9311  006D3A  6E32               	movwf	_subMenu,c	;volatile
  9312  006D3C                     l16116:
  9313                           
  9314                           ;key_menu.c: 845: __enter_menu_warn_value(subMenu);
  9315  006D3C  5032               	movf	_subMenu,w,c	;volatile
  9316  006D3E  EC91  F038         	call	___enter_menu_warn_value
  9317  006D42  0012               	return		;funcret
  9318  006D44                     __end_of___set_short_warn_value:
  9319                           	opt stack 0
  9320                           tblptru	equ	0xFF8
  9321                           tblptrh	equ	0xFF7
  9322                           tblptrl	equ	0xFF6
  9323                           tablat	equ	0xFF5
  9324                           prodh	equ	0xFF4
  9325                           prodl	equ	0xFF3
  9326                           intcon	equ	0xFF2
  9327                           postinc0	equ	0xFEE
  9328                           wreg	equ	0xFE8
  9329                           postinc1	equ	0xFE6
  9330                           postdec1	equ	0xFE5
  9331                           plusw1	equ	0xFE3
  9332                           fsr1h	equ	0xFE2
  9333                           fsr1l	equ	0xFE1
  9334                           indf2	equ	0xFDF
  9335                           postinc2	equ	0xFDE
  9336                           postdec2	equ	0xFDD
  9337                           plusw2	equ	0xFDB
  9338                           fsr2h	equ	0xFDA
  9339                           fsr2l	equ	0xFD9
  9340                           status	equ	0xFD8
  9341                           
  9342 ;; *************** function ___enter_menu_warn_value *****************
  9343 ;; Defined at:
  9344 ;;		line 261 in file "src/api/key_menu.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  __subMenu       1    wreg     unsigned char 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  __subMenu       1   31[BANK0 ] unsigned char 
  9349 ;;  t32             4   35[BANK0 ] long 
  9350 ;;  fps             2   32[BANK0 ] PTR struct .
  9351 ;;		 -> stSysData(240), 
  9352 ;;  t8              1   34[BANK0 ] unsigned char 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;Total ram usage:       10 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:    6
  9369 ;; This function calls:
  9370 ;;		___int32_2_mflot32
  9371 ;; This function is called by:
  9372 ;;		_key_process_set_up_long
  9373 ;;		___set_short_warn_value
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text48
  9378  007122                     __ptext48:
  9379                           	opt stack 0
  9380  007122                     ___enter_menu_warn_value:
  9381                           	opt stack 22
  9382                           
  9383                           ;incstack = 0
  9384                           ;___enter_menu_warn_value@__subMenu stored from wreg
  9385  007122  0100               	movlb	0	; () banked
  9386  007124  6F7F               	movwf	___enter_menu_warn_value@__subMenu& (0+255),b
  9387                           
  9388                           ;key_menu.c: 263: uint8_t t8;
  9389                           ;key_menu.c: 264: int32_t t32;
  9390                           ;key_menu.c: 265: menu=0x90;
  9391  007126  0E90               	movlw	144
  9392  007128  6E33               	movwf	_menu,c	;volatile
  9393                           
  9394                           ;key_menu.c: 266: subMenu=__subMenu;
  9395  00712A  C07F  F032         	movff	___enter_menu_warn_value@__subMenu,_subMenu	;volatile
  9396                           
  9397                           ;key_menu.c: 268: st_sysDataDef* fps= &stSysData;
  9398  00712E  0E00               	movlw	low _stSysData
  9399  007130  0100               	movlb	0	; () banked
  9400  007132  6F80               	movwf	___enter_menu_warn_value@fps& (0+255),b
  9401  007134  0E02               	movlw	high _stSysData
  9402  007136  0100               	movlb	0	; () banked
  9403  007138  6F81               	movwf	(___enter_menu_warn_value@fps+1)& (0+255),b
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;key_menu.c: 276: t8=subMenu >>1;
  9407  00713A  90D8               	bcf	status,0,c
  9408  00713C  3032               	rrcf	_subMenu,w,c	;volatile
  9409  00713E  0100               	movlb	0	; () banked
  9410  007140  6F82               	movwf	___enter_menu_warn_value@t8& (0+255),b
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;key_menu.c: 277: if(subMenu & 0x01){
  9414  007142  A032               	btfss	_subMenu,0,c	;volatile
  9415  007144  D019               	goto	l15232
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;key_menu.c: 279: t32=fps->diffPressureWarnSet[t8].warnValueHi;
  9419  007146  0100               	movlb	0	; () banked
  9420  007148  5182               	movf	___enter_menu_warn_value@t8& (0+255),w,b
  9421  00714A  0D0C               	mullw	12
  9422  00714C  0E3C               	movlw	60
  9423  00714E  26F3               	addwf	prodl,f,c
  9424  007150  0E00               	movlw	0
  9425  007152  22F4               	addwfc	prodh,f,c
  9426  007154  C080  F07D         	movff	___enter_menu_warn_value@fps,??___enter_menu_warn_value
  9427  007158  C081  F07E         	movff	___enter_menu_warn_value@fps+1,??___enter_menu_warn_value+1
  9428  00715C  50F3               	movf	prodl,w,c
  9429  00715E  0100               	movlb	0	; () banked
  9430  007160  277D               	addwf	??___enter_menu_warn_value& (0+255),f,b
  9431  007162  50F4               	movf	prodh,w,c
  9432  007164  0100               	movlb	0	; () banked
  9433  007166  237E               	addwfc	(??___enter_menu_warn_value+1)& (0+255),f,b
  9434  007168  0E04               	movlw	4
  9435  00716A  0100               	movlb	0	; () banked
  9436  00716C  257D               	addwf	??___enter_menu_warn_value& (0+255),w,b
  9437  00716E  6ED9               	movwf	fsr2l,c
  9438  007170  0E00               	movlw	0
  9439  007172  0100               	movlb	0	; () banked
  9440  007174  217E               	addwfc	(??___enter_menu_warn_value+1)& (0+255),w,b
  9441  007176  D00E               	goto	L2
  9442  007178                     l15232:
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;key_menu.c: 281: t32=fps->diffPressureWarnSet[t8].warnValueLo;
  9446  007178  0100               	movlb	0	; () banked
  9447  00717A  5182               	movf	___enter_menu_warn_value@t8& (0+255),w,b
  9448  00717C  0D0C               	mullw	12
  9449  00717E  0E3C               	movlw	60
  9450  007180  26F3               	addwf	prodl,f,c
  9451  007182  0E00               	movlw	0
  9452  007184  22F4               	addwfc	prodh,f,c
  9453  007186  50F3               	movf	prodl,w,c
  9454  007188  0100               	movlb	0	; () banked
  9455  00718A  2580               	addwf	___enter_menu_warn_value@fps& (0+255),w,b
  9456  00718C  6ED9               	movwf	fsr2l,c
  9457  00718E  50F4               	movf	prodh,w,c
  9458  007190  0100               	movlb	0	; () banked
  9459  007192  2181               	addwfc	(___enter_menu_warn_value@fps+1)& (0+255),w,b
  9460  007194                     L2:
  9461  007194  6EDA               	movwf	fsr2h,c
  9462  007196  CFDE F083          	movff	postinc2,___enter_menu_warn_value@t32
  9463  00719A  CFDE F084          	movff	postinc2,___enter_menu_warn_value@t32+1
  9464  00719E  CFDE F085          	movff	postinc2,___enter_menu_warn_value@t32+2
  9465  0071A2  CFDE F086          	movff	postinc2,___enter_menu_warn_value@t32+3
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;key_menu.c: 282: }
  9469                           ;key_menu.c: 284: t32=__int32_2_mflot32(t32);
  9470                           
  9471                           ; BSR set to: 0
  9472  0071A6  C083  F06D         	movff	___enter_menu_warn_value@t32,___int32_2_mflot32@x
  9473  0071AA  C084  F06E         	movff	___enter_menu_warn_value@t32+1,___int32_2_mflot32@x+1
  9474  0071AE  C085  F06F         	movff	___enter_menu_warn_value@t32+2,___int32_2_mflot32@x+2
  9475  0071B2  C086  F070         	movff	___enter_menu_warn_value@t32+3,___int32_2_mflot32@x+3
  9476  0071B6  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
  9477  0071BA  C06D  F083         	movff	?___int32_2_mflot32,___enter_menu_warn_value@t32
  9478  0071BE  C06E  F084         	movff	?___int32_2_mflot32+1,___enter_menu_warn_value@t32+1
  9479  0071C2  C06F  F085         	movff	?___int32_2_mflot32+2,___enter_menu_warn_value@t32+2
  9480  0071C6  C070  F086         	movff	?___int32_2_mflot32+3,___enter_menu_warn_value@t32+3
  9481                           
  9482                           ;key_menu.c: 285: m_floatAdj.t32=t32;
  9483  0071CA  C083  F035         	movff	___enter_menu_warn_value@t32,_m_floatAdj
  9484  0071CE  C084  F036         	movff	___enter_menu_warn_value@t32+1,_m_floatAdj+1
  9485  0071D2  C085  F037         	movff	___enter_menu_warn_value@t32+2,_m_floatAdj+2
  9486  0071D6  C086  F038         	movff	___enter_menu_warn_value@t32+3,_m_floatAdj+3
  9487                           
  9488                           ;key_menu.c: 286: adjLocation=0;
  9489  0071DA  0E00               	movlw	0
  9490  0071DC  6E3F               	movwf	_adjLocation,c	;volatile
  9491  0071DE  0012               	return		;funcret
  9492  0071E0                     __end_of___enter_menu_warn_value:
  9493                           	opt stack 0
  9494                           tblptru	equ	0xFF8
  9495                           tblptrh	equ	0xFF7
  9496                           tblptrl	equ	0xFF6
  9497                           tablat	equ	0xFF5
  9498                           prodh	equ	0xFF4
  9499                           prodl	equ	0xFF3
  9500                           intcon	equ	0xFF2
  9501                           postinc0	equ	0xFEE
  9502                           wreg	equ	0xFE8
  9503                           postinc1	equ	0xFE6
  9504                           postdec1	equ	0xFE5
  9505                           plusw1	equ	0xFE3
  9506                           fsr1h	equ	0xFE2
  9507                           fsr1l	equ	0xFE1
  9508                           indf2	equ	0xFDF
  9509                           postinc2	equ	0xFDE
  9510                           postdec2	equ	0xFDD
  9511                           plusw2	equ	0xFDB
  9512                           fsr2h	equ	0xFDA
  9513                           fsr2l	equ	0xFD9
  9514                           status	equ	0xFD8
  9515                           
  9516 ;; *************** function ___set_short_warn_type *****************
  9517 ;; Defined at:
  9518 ;;		line 798 in file "src/api/key_menu.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  gohome          1    wreg     unsigned char 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  gohome          1    0[BANK3 ] unsigned char 
  9523 ;;  stp             2    3[BANK3 ] PTR struct .
  9524 ;;		 -> stSysData(240), 
  9525 ;;  p               2    1[BANK3 ] PTR unsigned char 
  9526 ;;		 -> adjValue(4), 
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9537 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Totals:         0       2       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;Total ram usage:        7 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; Hardware stack levels required when called:    8
  9543 ;; This function calls:
  9544 ;;		___enter_menu_warn_type
  9545 ;;		___exit_menu_to_home_unsave
  9546 ;;		___sys_data_save_write_flash
  9547 ;; This function is called by:
  9548 ;;		_key_process_set_long
  9549 ;;		_key_process_set
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text49
  9554  008358                     __ptext49:
  9555                           	opt stack 0
  9556  008358                     ___set_short_warn_type:
  9557                           	opt stack 20
  9558                           
  9559                           ;incstack = 0
  9560                           ;___set_short_warn_type@gohome stored from wreg
  9561  008358  0103               	movlb	3	; () banked
  9562  00835A  6FCA               	movwf	___set_short_warn_type@gohome& (0+255),b
  9563                           
  9564                           ;key_menu.c: 800: uint8_t* p;
  9565                           ;key_menu.c: 804: st_sysDataDef* stp=&stSysData;
  9566  00835C  0E00               	movlw	low _stSysData
  9567  00835E  0103               	movlb	3	; () banked
  9568  008360  6FCD               	movwf	___set_short_warn_type@stp& (0+255),b
  9569  008362  0E02               	movlw	high _stSysData
  9570  008364  0103               	movlb	3	; () banked
  9571  008366  6FCE               	movwf	(___set_short_warn_type@stp+1)& (0+255),b
  9572                           
  9573                           ;key_menu.c: 805: p=(uint8_t*)(&adjValue);
  9574  008368  0E39               	movlw	low _adjValue
  9575  00836A  0103               	movlb	3	; () banked
  9576  00836C  6FCB               	movwf	___set_short_warn_type@p& (0+255),b
  9577  00836E  0E00               	movlw	high _adjValue
  9578  008370  0103               	movlb	3	; () banked
  9579  008372  6FCC               	movwf	(___set_short_warn_type@p+1)& (0+255),b
  9580                           
  9581                           ; BSR set to: 3
  9582                           ;key_menu.c: 806: stp->diffPressureWarnSet[subMenu].type=*p;
  9583  008374  C3CB  FFD9         	movff	___set_short_warn_type@p,fsr2l
  9584  008378  C3CC  FFDA         	movff	___set_short_warn_type@p+1,fsr2h
  9585  00837C  5032               	movf	_subMenu,w,c	;volatile
  9586  00837E  0D0C               	mullw	12
  9587  008380  0E3C               	movlw	60
  9588  008382  26F3               	addwf	prodl,f,c
  9589  008384  0E00               	movlw	0
  9590  008386  22F4               	addwfc	prodh,f,c
  9591  008388  C3CD  F0E3         	movff	___set_short_warn_type@stp,??___set_short_warn_type
  9592  00838C  C3CE  F0E4         	movff	___set_short_warn_type@stp+1,??___set_short_warn_type+1
  9593  008390  50F3               	movf	prodl,w,c
  9594  008392  0100               	movlb	0	; () banked
  9595  008394  27E3               	addwf	??___set_short_warn_type& (0+255),f,b
  9596  008396  50F4               	movf	prodh,w,c
  9597  008398  0100               	movlb	0	; () banked
  9598  00839A  23E4               	addwfc	(??___set_short_warn_type+1)& (0+255),f,b
  9599  00839C  0E08               	movlw	8
  9600  00839E  0100               	movlb	0	; () banked
  9601  0083A0  25E3               	addwf	??___set_short_warn_type& (0+255),w,b
  9602  0083A2  6EE1               	movwf	fsr1l,c
  9603  0083A4  0E00               	movlw	0
  9604  0083A6  0100               	movlb	0	; () banked
  9605  0083A8  21E4               	addwfc	(??___set_short_warn_type+1)& (0+255),w,b
  9606  0083AA  6EE2               	movwf	fsr1h,c
  9607  0083AC  CFDF FFE7          	movff	indf2,indf1
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;key_menu.c: 807: __sys_data_save_write_flash();
  9611  0083B0  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
  9612                           
  9613                           ;key_menu.c: 809: if(gohome){__exit_menu_to_home_unsave(); return;}
  9614  0083B4  0103               	movlb	3	; () banked
  9615  0083B6  51CA               	movf	___set_short_warn_type@gohome& (0+255),w,b
  9616  0083B8  0103               	movlb	3	; () banked
  9617  0083BA  B4D8               	btfsc	status,2,c
  9618  0083BC  D003               	goto	l16082
  9619                           
  9620                           ; BSR set to: 3
  9621  0083BE  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
  9622  0083C2  0012               	return	
  9623  0083C4                     l16082:
  9624                           
  9625                           ;key_menu.c: 811: subMenu++;
  9626  0083C4  2A32               	incf	_subMenu,f,c	;volatile
  9627                           
  9628                           ;key_menu.c: 812: if(subMenu>0x03)subMenu=0x00;
  9629  0083C6  0E03               	movlw	3
  9630  0083C8  6432               	cpfsgt	_subMenu,c	;volatile
  9631  0083CA  D002               	goto	l16088
  9632  0083CC  0E00               	movlw	0
  9633  0083CE  6E32               	movwf	_subMenu,c	;volatile
  9634  0083D0                     l16088:
  9635                           
  9636                           ;key_menu.c: 813: __enter_menu_warn_type(subMenu);
  9637  0083D0  5032               	movf	_subMenu,w,c	;volatile
  9638  0083D2  EC2B  F048         	call	___enter_menu_warn_type
  9639  0083D6  0012               	return		;funcret
  9640  0083D8                     __end_of___set_short_warn_type:
  9641                           	opt stack 0
  9642                           tblptru	equ	0xFF8
  9643                           tblptrh	equ	0xFF7
  9644                           tblptrl	equ	0xFF6
  9645                           tablat	equ	0xFF5
  9646                           prodh	equ	0xFF4
  9647                           prodl	equ	0xFF3
  9648                           intcon	equ	0xFF2
  9649                           postinc0	equ	0xFEE
  9650                           wreg	equ	0xFE8
  9651                           indf1	equ	0xFE7
  9652                           postinc1	equ	0xFE6
  9653                           postdec1	equ	0xFE5
  9654                           plusw1	equ	0xFE3
  9655                           fsr1h	equ	0xFE2
  9656                           fsr1l	equ	0xFE1
  9657                           indf2	equ	0xFDF
  9658                           postinc2	equ	0xFDE
  9659                           postdec2	equ	0xFDD
  9660                           plusw2	equ	0xFDB
  9661                           fsr2h	equ	0xFDA
  9662                           fsr2l	equ	0xFD9
  9663                           status	equ	0xFD8
  9664                           
  9665 ;; *************** function ___enter_menu_warn_type *****************
  9666 ;; Defined at:
  9667 ;;		line 250 in file "src/api/key_menu.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  __subMenu       1    wreg     unsigned char 
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;  __subMenu       1    2[BANK0 ] unsigned char 
  9672 ;;  fps             2    3[BANK0 ] PTR struct .
  9673 ;;		 -> stSysData(240), 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;Total ram usage:        5 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    4
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_key_process_set_up_long
  9694 ;;		___set_short_warn_type
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text50
  9699  009056                     __ptext50:
  9700                           	opt stack 0
  9701  009056                     ___enter_menu_warn_type:
  9702                           	opt stack 24
  9703                           
  9704                           ;incstack = 0
  9705                           ;___enter_menu_warn_type@__subMenu stored from wreg
  9706  009056  0100               	movlb	0	; () banked
  9707  009058  6F62               	movwf	___enter_menu_warn_type@__subMenu& (0+255),b
  9708                           
  9709                           ;key_menu.c: 252: menu=0x80;
  9710  00905A  0E80               	movlw	128
  9711  00905C  6E33               	movwf	_menu,c	;volatile
  9712                           
  9713                           ;key_menu.c: 253: subMenu=__subMenu;
  9714  00905E  C062  F032         	movff	___enter_menu_warn_type@__subMenu,_subMenu	;volatile
  9715                           
  9716                           ;key_menu.c: 255: st_sysDataDef* fps= &stSysData;
  9717  009062  0E00               	movlw	low _stSysData
  9718  009064  0100               	movlb	0	; () banked
  9719  009066  6F63               	movwf	___enter_menu_warn_type@fps& (0+255),b
  9720  009068  0E02               	movlw	high _stSysData
  9721  00906A  0100               	movlb	0	; () banked
  9722  00906C  6F64               	movwf	(___enter_menu_warn_type@fps+1)& (0+255),b
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;key_menu.c: 256: adjValue=0x00ul;
  9726  00906E  0E00               	movlw	0
  9727  009070  6E39               	movwf	_adjValue,c	;volatile
  9728  009072  0E00               	movlw	0
  9729  009074  6E3A               	movwf	_adjValue+1,c	;volatile
  9730  009076  0E00               	movlw	0
  9731  009078  6E3B               	movwf	_adjValue+2,c	;volatile
  9732  00907A  0E00               	movlw	0
  9733  00907C  6E3C               	movwf	_adjValue+3,c	;volatile
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;key_menu.c: 257: *((uint8_t*)(&adjValue))=(uint8_t)(fps->diffPressureWarnSet[subMenu].t
      +                          ype);
  9737  00907E  5032               	movf	_subMenu,w,c	;volatile
  9738  009080  0D0C               	mullw	12
  9739  009082  0E3C               	movlw	60
  9740  009084  26F3               	addwf	prodl,f,c
  9741  009086  0E00               	movlw	0
  9742  009088  22F4               	addwfc	prodh,f,c
  9743  00908A  C063  F060         	movff	___enter_menu_warn_type@fps,??___enter_menu_warn_type
  9744  00908E  C064  F061         	movff	___enter_menu_warn_type@fps+1,??___enter_menu_warn_type+1
  9745  009092  50F3               	movf	prodl,w,c
  9746  009094  0100               	movlb	0	; () banked
  9747  009096  2760               	addwf	??___enter_menu_warn_type& (0+255),f,b
  9748  009098  50F4               	movf	prodh,w,c
  9749  00909A  0100               	movlb	0	; () banked
  9750  00909C  2361               	addwfc	(??___enter_menu_warn_type+1)& (0+255),f,b
  9751  00909E  0E08               	movlw	8
  9752  0090A0  0100               	movlb	0	; () banked
  9753  0090A2  2560               	addwf	??___enter_menu_warn_type& (0+255),w,b
  9754  0090A4  6ED9               	movwf	fsr2l,c
  9755  0090A6  0E00               	movlw	0
  9756  0090A8  0100               	movlb	0	; () banked
  9757  0090AA  2161               	addwfc	(??___enter_menu_warn_type+1)& (0+255),w,b
  9758  0090AC  6EDA               	movwf	fsr2h,c
  9759  0090AE  50DF               	movf	indf2,w,c
  9760  0090B0  6E39               	movwf	_adjValue,c
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;key_menu.c: 258: adjLocation=0;
  9764  0090B2  0E00               	movlw	0
  9765  0090B4  6E3F               	movwf	_adjLocation,c	;volatile
  9766                           
  9767                           ; BSR set to: 0
  9768  0090B6  0012               	return		;funcret
  9769  0090B8                     __end_of___enter_menu_warn_type:
  9770                           	opt stack 0
  9771                           tblptru	equ	0xFF8
  9772                           tblptrh	equ	0xFF7
  9773                           tblptrl	equ	0xFF6
  9774                           tablat	equ	0xFF5
  9775                           prodh	equ	0xFF4
  9776                           prodl	equ	0xFF3
  9777                           intcon	equ	0xFF2
  9778                           postinc0	equ	0xFEE
  9779                           wreg	equ	0xFE8
  9780                           indf1	equ	0xFE7
  9781                           postinc1	equ	0xFE6
  9782                           postdec1	equ	0xFE5
  9783                           plusw1	equ	0xFE3
  9784                           fsr1h	equ	0xFE2
  9785                           fsr1l	equ	0xFE1
  9786                           indf2	equ	0xFDF
  9787                           postinc2	equ	0xFDE
  9788                           postdec2	equ	0xFDD
  9789                           plusw2	equ	0xFDB
  9790                           fsr2h	equ	0xFDA
  9791                           fsr2l	equ	0xFD9
  9792                           status	equ	0xFD8
  9793                           
  9794 ;; *************** function ___set_short_pr_calib *****************
  9795 ;; Defined at:
  9796 ;;		line 739 in file "src/api/key_menu.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  gohome          1    wreg     unsigned char 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  gohome          1   52[BANK0 ] unsigned char 
  9801 ;;  t32             4   55[BANK0 ] unsigned long 
  9802 ;;  pra             4   48[BANK0 ] unsigned long 
  9803 ;;  t16             2   59[BANK0 ] unsigned int 
  9804 ;;  adjv            1   61[BANK0 ] unsigned char 
  9805 ;;  saveFlg         1   54[BANK0 ] unsigned char 
  9806 ;;  t8              1   53[BANK0 ] unsigned char 
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  1    wreg      void 
  9809 ;; Registers used:
  9810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;Total ram usage:       20 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    9
  9823 ;; This function calls:
  9824 ;;		___enter_menu_calib_press
  9825 ;;		___exit_menu_to_home_unsave
  9826 ;;		___mflot32_2_int32
  9827 ;;		_at24c02_write_n_byte
  9828 ;;		_crc_append
  9829 ;; This function is called by:
  9830 ;;		_key_process_set_long
  9831 ;;		_key_process_set
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text51
  9836  002A7C                     __ptext51:
  9837                           	opt stack 0
  9838  002A7C                     ___set_short_pr_calib:
  9839                           	opt stack 19
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;incstack = 0
  9843                           ;___set_short_pr_calib@gohome stored from wreg
  9844  002A7C  0100               	movlb	0	; () banked
  9845  002A7E  6F94               	movwf	___set_short_pr_calib@gohome& (0+255),b
  9846                           
  9847                           ;key_menu.c: 741: bool saveFlg=0;
  9848  002A80  0E00               	movlw	0
  9849  002A82  0100               	movlb	0	; () banked
  9850  002A84  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;key_menu.c: 742: uint8_t t8,adjv;
  9854                           ;key_menu.c: 743: uint16_t t16;
  9855                           ;key_menu.c: 744: uint32_t t32,pra;
  9856                           ;key_menu.c: 745: if(calibCol==0){
  9857  002A86  5030               	movf	_calibCol,w,c	;volatile
  9858  002A88  A4D8               	btfss	status,2,c
  9859  002A8A  D021               	goto	l16018
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;key_menu.c: 746: t8=prCalibTabDef.prCalibRow[calibRow].pCount;
  9863  002A8C  5031               	movf	_calibRow,w,c	;volatile
  9864  002A8E  0D34               	mullw	52
  9865  002A90  0E04               	movlw	low (_prCalibTabDef+4)
  9866  002A92  24F3               	addwf	prodl,w,c
  9867  002A94  6ED9               	movwf	fsr2l,c
  9868  002A96  0E04               	movlw	high (_prCalibTabDef+4)
  9869  002A98  20F4               	addwfc	prodh,w,c
  9870  002A9A  6EDA               	movwf	fsr2h,c
  9871  002A9C  50DF               	movf	indf2,w,c
  9872  002A9E  0100               	movlb	0	; () banked
  9873  002AA0  6F95               	movwf	___set_short_pr_calib@t8& (0+255),b
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;key_menu.c: 747: adjv=*(uint8_t*)(&adjValue);
  9877  002AA2  C039  F09D         	movff	_adjValue,___set_short_pr_calib@adjv
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;key_menu.c: 748: if(t8!=adjv){
  9881  002AA6  0100               	movlb	0	; () banked
  9882  002AA8  519D               	movf	___set_short_pr_calib@adjv& (0+255),w,b
  9883  002AAA  0100               	movlb	0	; () banked
  9884  002AAC  1995               	xorwf	___set_short_pr_calib@t8& (0+255),w,b
  9885  002AAE  B4D8               	btfsc	status,2,c
  9886  002AB0  D148               	goto	l16028
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;key_menu.c: 749: saveFlg=1;
  9890  002AB2  0E01               	movlw	1
  9891  002AB4  0100               	movlb	0	; () banked
  9892  002AB6  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;key_menu.c: 750: prCalibTabDef.prCalibRow[calibRow].pCount=adjv;
  9896  002AB8  5031               	movf	_calibRow,w,c	;volatile
  9897  002ABA  0D34               	mullw	52
  9898  002ABC  0E04               	movlw	low (_prCalibTabDef+4)
  9899  002ABE  24F3               	addwf	prodl,w,c
  9900  002AC0  6ED9               	movwf	fsr2l,c
  9901  002AC2  0E04               	movlw	high (_prCalibTabDef+4)
  9902  002AC4  20F4               	addwfc	prodh,w,c
  9903  002AC6  6EDA               	movwf	fsr2h,c
  9904  002AC8  C09D  FFDF         	movff	___set_short_pr_calib@adjv,indf2
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;key_menu.c: 751: }
  9908                           ;key_menu.c: 752: }else{
  9909  002ACC  D13A               	goto	l16028
  9910  002ACE                     l16018:
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;key_menu.c: 753: t32=__mflot32_2_int32(m_floatAdj.t32);
  9914  002ACE  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
  9915  002AD2  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
  9916  002AD6  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
  9917  002ADA  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
  9918  002ADE  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
  9919  002AE2  C06C  F097         	movff	?___mflot32_2_int32,___set_short_pr_calib@t32
  9920  002AE6  C06D  F098         	movff	?___mflot32_2_int32+1,___set_short_pr_calib@t32+1
  9921  002AEA  C06E  F099         	movff	?___mflot32_2_int32+2,___set_short_pr_calib@t32+2
  9922  002AEE  C06F  F09A         	movff	?___mflot32_2_int32+3,___set_short_pr_calib@t32+3
  9923                           
  9924                           ;key_menu.c: 754: pra=prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue
      +                          ;
  9925  002AF2  5031               	movf	_calibRow,w,c	;volatile
  9926  002AF4  0D34               	mullw	52
  9927  002AF6  0EFC               	movlw	252
  9928  002AF8  0100               	movlb	0	; () banked
  9929  002AFA  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
  9930  002AFC  0EFF               	movlw	255
  9931  002AFE  0100               	movlb	0	; () banked
  9932  002B00  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
  9933  002B02  5030               	movf	_calibCol,w,c	;volatile
  9934  002B04  0100               	movlb	0	; () banked
  9935  002B06  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
  9936  002B08  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
  9937  002B0A  0100               	movlb	0	; () banked
  9938  002B0C  90D8               	bcf	status,0,c
  9939  002B0E  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9940  002B10  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9941  002B12  0100               	movlb	0	; () banked
  9942  002B14  90D8               	bcf	status,0,c
  9943  002B16  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9944  002B18  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9945  002B1A  0100               	movlb	0	; () banked
  9946  002B1C  90D8               	bcf	status,0,c
  9947  002B1E  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
  9948  002B20  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
  9949  002B22  0100               	movlb	0	; () banked
  9950  002B24  518A               	movf	??___set_short_pr_calib& (0+255),w,b
  9951  002B26  0100               	movlb	0	; () banked
  9952  002B28  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
  9953  002B2A  0100               	movlb	0	; () banked
  9954  002B2C  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
  9955  002B2E  0100               	movlb	0	; () banked
  9956  002B30  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
  9957  002B32  0E00               	movlw	low _prCalibTabDef
  9958  002B34  0100               	movlb	0	; () banked
  9959  002B36  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
  9960  002B38  0E04               	movlw	high _prCalibTabDef
  9961  002B3A  0100               	movlb	0	; () banked
  9962  002B3C  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
  9963  002B3E  0E04               	movlw	4
  9964  002B40  0100               	movlb	0	; () banked
  9965  002B42  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
  9966  002B44  0E00               	movlw	0
  9967  002B46  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
  9968  002B48  0100               	movlb	0	; () banked
  9969  002B4A  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
  9970  002B4C  0100               	movlb	0	; () banked
  9971  002B4E  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
  9972  002B50  0100               	movlb	0	; () banked
  9973  002B52  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
  9974  002B54  0100               	movlb	0	; () banked
  9975  002B56  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
  9976  002B58  50F3               	movf	prodl,w,c
  9977  002B5A  0100               	movlb	0	; () banked
  9978  002B5C  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
  9979  002B5E  6ED9               	movwf	fsr2l,c
  9980  002B60  50F4               	movf	prodh,w,c
  9981  002B62  0100               	movlb	0	; () banked
  9982  002B64  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
  9983  002B66  6EDA               	movwf	fsr2h,c
  9984  002B68  CFDE F090          	movff	postinc2,___set_short_pr_calib@pra
  9985  002B6C  CFDE F091          	movff	postinc2,___set_short_pr_calib@pra+1
  9986  002B70  CFDE F092          	movff	postinc2,___set_short_pr_calib@pra+2
  9987  002B74  CFDE F093          	movff	postinc2,___set_short_pr_calib@pra+3
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;key_menu.c: 755: if(pra!=t32){
  9991  002B78  0100               	movlb	0	; () banked
  9992  002B7A  5197               	movf	___set_short_pr_calib@t32& (0+255),w,b
  9993  002B7C  0100               	movlb	0	; () banked
  9994  002B7E  1990               	xorwf	___set_short_pr_calib@pra& (0+255),w,b
  9995  002B80  E110               	bnz	u15100
  9996  002B82  0100               	movlb	0	; () banked
  9997  002B84  5198               	movf	(___set_short_pr_calib@t32+1)& (0+255),w,b
  9998  002B86  0100               	movlb	0	; () banked
  9999  002B88  1991               	xorwf	(___set_short_pr_calib@pra+1)& (0+255),w,b
 10000  002B8A  E10B               	bnz	u15100
 10001  002B8C  0100               	movlb	0	; () banked
 10002  002B8E  5199               	movf	(___set_short_pr_calib@t32+2)& (0+255),w,b
 10003  002B90  0100               	movlb	0	; () banked
 10004  002B92  1992               	xorwf	(___set_short_pr_calib@pra+2)& (0+255),w,b
 10005  002B94  E106               	bnz	u15100
 10006  002B96  0100               	movlb	0	; () banked
 10007  002B98  519A               	movf	(___set_short_pr_calib@t32+3)& (0+255),w,b
 10008  002B9A  0100               	movlb	0	; () banked
 10009  002B9C  1993               	xorwf	(___set_short_pr_calib@pra+3)& (0+255),w,b
 10010  002B9E  B4D8               	btfsc	status,2,c
 10011  002BA0  D0D0               	goto	l16028
 10012  002BA2                     u15100:
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;key_menu.c: 756: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue=t32
      +                          ;
 10016  002BA2  5031               	movf	_calibRow,w,c	;volatile
 10017  002BA4  0D34               	mullw	52
 10018  002BA6  0EFC               	movlw	252
 10019  002BA8  0100               	movlb	0	; () banked
 10020  002BAA  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10021  002BAC  0EFF               	movlw	255
 10022  002BAE  0100               	movlb	0	; () banked
 10023  002BB0  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10024  002BB2  5030               	movf	_calibCol,w,c	;volatile
 10025  002BB4  0100               	movlb	0	; () banked
 10026  002BB6  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10027  002BB8  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10028  002BBA  0100               	movlb	0	; () banked
 10029  002BBC  90D8               	bcf	status,0,c
 10030  002BBE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10031  002BC0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10032  002BC2  0100               	movlb	0	; () banked
 10033  002BC4  90D8               	bcf	status,0,c
 10034  002BC6  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10035  002BC8  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10036  002BCA  0100               	movlb	0	; () banked
 10037  002BCC  90D8               	bcf	status,0,c
 10038  002BCE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10039  002BD0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10040  002BD2  0100               	movlb	0	; () banked
 10041  002BD4  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10042  002BD6  0100               	movlb	0	; () banked
 10043  002BD8  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10044  002BDA  0100               	movlb	0	; () banked
 10045  002BDC  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10046  002BDE  0100               	movlb	0	; () banked
 10047  002BE0  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10048  002BE2  0E00               	movlw	low _prCalibTabDef
 10049  002BE4  0100               	movlb	0	; () banked
 10050  002BE6  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10051  002BE8  0E04               	movlw	high _prCalibTabDef
 10052  002BEA  0100               	movlb	0	; () banked
 10053  002BEC  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10054  002BEE  0E04               	movlw	4
 10055  002BF0  0100               	movlb	0	; () banked
 10056  002BF2  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10057  002BF4  0E00               	movlw	0
 10058  002BF6  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10059  002BF8  0100               	movlb	0	; () banked
 10060  002BFA  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10061  002BFC  0100               	movlb	0	; () banked
 10062  002BFE  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10063  002C00  0100               	movlb	0	; () banked
 10064  002C02  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10065  002C04  0100               	movlb	0	; () banked
 10066  002C06  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10067  002C08  50F3               	movf	prodl,w,c
 10068  002C0A  0100               	movlb	0	; () banked
 10069  002C0C  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10070  002C0E  6ED9               	movwf	fsr2l,c
 10071  002C10  50F4               	movf	prodh,w,c
 10072  002C12  0100               	movlb	0	; () banked
 10073  002C14  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10074  002C16  6EDA               	movwf	fsr2h,c
 10075  002C18  C097  FFDE         	movff	___set_short_pr_calib@t32,postinc2
 10076  002C1C  C098  FFDE         	movff	___set_short_pr_calib@t32+1,postinc2
 10077  002C20  C099  FFDE         	movff	___set_short_pr_calib@t32+2,postinc2
 10078  002C24  C09A  FFDE         	movff	___set_short_pr_calib@t32+3,postinc2
 10079                           
 10080                           ;key_menu.c: 757: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pAdcValue=
      +                          x_prDiffData.pAdcValue;
 10081  002C28  5031               	movf	_calibRow,w,c	;volatile
 10082  002C2A  0D34               	mullw	52
 10083  002C2C  0EFC               	movlw	252
 10084  002C2E  0100               	movlb	0	; () banked
 10085  002C30  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10086  002C32  0EFF               	movlw	255
 10087  002C34  0100               	movlb	0	; () banked
 10088  002C36  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10089  002C38  5030               	movf	_calibCol,w,c	;volatile
 10090  002C3A  0100               	movlb	0	; () banked
 10091  002C3C  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10092  002C3E  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10093  002C40  0100               	movlb	0	; () banked
 10094  002C42  90D8               	bcf	status,0,c
 10095  002C44  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10096  002C46  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10097  002C48  0100               	movlb	0	; () banked
 10098  002C4A  90D8               	bcf	status,0,c
 10099  002C4C  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10100  002C4E  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10101  002C50  0100               	movlb	0	; () banked
 10102  002C52  90D8               	bcf	status,0,c
 10103  002C54  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10104  002C56  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10105  002C58  0100               	movlb	0	; () banked
 10106  002C5A  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10107  002C5C  0100               	movlb	0	; () banked
 10108  002C5E  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10109  002C60  0100               	movlb	0	; () banked
 10110  002C62  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10111  002C64  0100               	movlb	0	; () banked
 10112  002C66  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10113  002C68  0E00               	movlw	low _prCalibTabDef
 10114  002C6A  0100               	movlb	0	; () banked
 10115  002C6C  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10116  002C6E  0E04               	movlw	high _prCalibTabDef
 10117  002C70  0100               	movlb	0	; () banked
 10118  002C72  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10119  002C74  0E04               	movlw	4
 10120  002C76  0100               	movlb	0	; () banked
 10121  002C78  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10122  002C7A  0E00               	movlw	0
 10123  002C7C  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10124  002C7E  0100               	movlb	0	; () banked
 10125  002C80  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10126  002C82  0100               	movlb	0	; () banked
 10127  002C84  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10128  002C86  0100               	movlb	0	; () banked
 10129  002C88  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10130  002C8A  0100               	movlb	0	; () banked
 10131  002C8C  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10132  002C8E  50F3               	movf	prodl,w,c
 10133  002C90  0100               	movlb	0	; () banked
 10134  002C92  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10135  002C94  50F4               	movf	prodh,w,c
 10136  002C96  0100               	movlb	0	; () banked
 10137  002C98  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10138  002C9A  0E04               	movlw	4
 10139  002C9C  0100               	movlb	0	; () banked
 10140  002C9E  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10141  002CA0  6ED9               	movwf	fsr2l,c
 10142  002CA2  0E00               	movlw	0
 10143  002CA4  0100               	movlb	0	; () banked
 10144  002CA6  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10145  002CA8  6EDA               	movwf	fsr2h,c
 10146  002CAA  C1EC  FFDE         	movff	_x_prDiffData+4,postinc2
 10147  002CAE  C1ED  FFDD         	movff	_x_prDiffData+5,postdec2
 10148                           
 10149                           ;key_menu.c: 758: prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].tAdcValue=
      +                          x_prDiffData.tAdcValue;
 10150  002CB2  5031               	movf	_calibRow,w,c	;volatile
 10151  002CB4  0D34               	mullw	52
 10152  002CB6  0EFC               	movlw	252
 10153  002CB8  0100               	movlb	0	; () banked
 10154  002CBA  6F8A               	movwf	??___set_short_pr_calib& (0+255),b
 10155  002CBC  0EFF               	movlw	255
 10156  002CBE  0100               	movlb	0	; () banked
 10157  002CC0  6F8B               	movwf	(??___set_short_pr_calib+1)& (0+255),b
 10158  002CC2  5030               	movf	_calibCol,w,c	;volatile
 10159  002CC4  0100               	movlb	0	; () banked
 10160  002CC6  6F8C               	movwf	(??___set_short_pr_calib+2)& (0+255),b
 10161  002CC8  6B8D               	clrf	(??___set_short_pr_calib+3)& (0+255),b
 10162  002CCA  0100               	movlb	0	; () banked
 10163  002CCC  90D8               	bcf	status,0,c
 10164  002CCE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10165  002CD0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10166  002CD2  0100               	movlb	0	; () banked
 10167  002CD4  90D8               	bcf	status,0,c
 10168  002CD6  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10169  002CD8  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10170  002CDA  0100               	movlb	0	; () banked
 10171  002CDC  90D8               	bcf	status,0,c
 10172  002CDE  378C               	rlcf	(??___set_short_pr_calib+2)& (0+255),f,b
 10173  002CE0  378D               	rlcf	(??___set_short_pr_calib+3)& (0+255),f,b
 10174  002CE2  0100               	movlb	0	; () banked
 10175  002CE4  518A               	movf	??___set_short_pr_calib& (0+255),w,b
 10176  002CE6  0100               	movlb	0	; () banked
 10177  002CE8  278C               	addwf	(??___set_short_pr_calib+2)& (0+255),f,b
 10178  002CEA  0100               	movlb	0	; () banked
 10179  002CEC  518B               	movf	(??___set_short_pr_calib+1)& (0+255),w,b
 10180  002CEE  0100               	movlb	0	; () banked
 10181  002CF0  238D               	addwfc	(??___set_short_pr_calib+3)& (0+255),f,b
 10182  002CF2  0E00               	movlw	low _prCalibTabDef
 10183  002CF4  0100               	movlb	0	; () banked
 10184  002CF6  6F8E               	movwf	(??___set_short_pr_calib+4)& (0+255),b
 10185  002CF8  0E04               	movlw	high _prCalibTabDef
 10186  002CFA  0100               	movlb	0	; () banked
 10187  002CFC  6F8F               	movwf	(??___set_short_pr_calib+5)& (0+255),b
 10188  002CFE  0E04               	movlw	4
 10189  002D00  0100               	movlb	0	; () banked
 10190  002D02  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10191  002D04  0E00               	movlw	0
 10192  002D06  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10193  002D08  0100               	movlb	0	; () banked
 10194  002D0A  518C               	movf	(??___set_short_pr_calib+2)& (0+255),w,b
 10195  002D0C  0100               	movlb	0	; () banked
 10196  002D0E  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10197  002D10  0100               	movlb	0	; () banked
 10198  002D12  518D               	movf	(??___set_short_pr_calib+3)& (0+255),w,b
 10199  002D14  0100               	movlb	0	; () banked
 10200  002D16  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10201  002D18  50F3               	movf	prodl,w,c
 10202  002D1A  0100               	movlb	0	; () banked
 10203  002D1C  278E               	addwf	(??___set_short_pr_calib+4)& (0+255),f,b
 10204  002D1E  50F4               	movf	prodh,w,c
 10205  002D20  0100               	movlb	0	; () banked
 10206  002D22  238F               	addwfc	(??___set_short_pr_calib+5)& (0+255),f,b
 10207  002D24  0E06               	movlw	6
 10208  002D26  0100               	movlb	0	; () banked
 10209  002D28  258E               	addwf	(??___set_short_pr_calib+4)& (0+255),w,b
 10210  002D2A  6ED9               	movwf	fsr2l,c
 10211  002D2C  0E00               	movlw	0
 10212  002D2E  0100               	movlb	0	; () banked
 10213  002D30  218F               	addwfc	(??___set_short_pr_calib+5)& (0+255),w,b
 10214  002D32  6EDA               	movwf	fsr2h,c
 10215  002D34  C1EE  FFDE         	movff	_x_prDiffData+6,postinc2
 10216  002D38  C1EF  FFDD         	movff	_x_prDiffData+7,postdec2
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;key_menu.c: 759: saveFlg=1;
 10220  002D3C  0E01               	movlw	1
 10221  002D3E  0100               	movlb	0	; () banked
 10222  002D40  6F96               	movwf	___set_short_pr_calib@saveFlg& (0+255),b
 10223  002D42                     l16028:
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;key_menu.c: 760: }
 10227                           ;key_menu.c: 761: }
 10228                           ;key_menu.c: 763: if(saveFlg){
 10229  002D42  0100               	movlb	0	; () banked
 10230  002D44  5196               	movf	___set_short_pr_calib@saveFlg& (0+255),w,b
 10231  002D46  0100               	movlb	0	; () banked
 10232  002D48  B4D8               	btfsc	status,2,c
 10233  002D4A  D02A               	goto	l16036
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;key_menu.c: 764: t16=sizeof(prCalibTabDef);
 10237  002D4C  0E00               	movlw	0
 10238  002D4E  0100               	movlb	0	; () banked
 10239  002D50  6F9C               	movwf	(___set_short_pr_calib@t16+1)& (0+255),b
 10240  002D52  0EA2               	movlw	162
 10241  002D54  6F9B               	movwf	___set_short_pr_calib@t16& (0+255),b
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;key_menu.c: 765: crc_append((uint8_t*)&prCalibTabDef,t16-2);
 10245  002D56  0E00               	movlw	low _prCalibTabDef
 10246  002D58  0100               	movlb	0	; () banked
 10247  002D5A  6F6C               	movwf	crc_append@message& (0+255),b
 10248  002D5C  0E04               	movlw	high _prCalibTabDef
 10249  002D5E  0100               	movlb	0	; () banked
 10250  002D60  6F6D               	movwf	(crc_append@message+1)& (0+255),b
 10251  002D62  0EFE               	movlw	254
 10252  002D64  0100               	movlb	0	; () banked
 10253  002D66  259B               	addwf	___set_short_pr_calib@t16& (0+255),w,b
 10254  002D68  0100               	movlb	0	; () banked
 10255  002D6A  6F6E               	movwf	crc_append@n& (0+255),b
 10256  002D6C  0EFF               	movlw	255
 10257  002D6E  0100               	movlb	0	; () banked
 10258  002D70  219C               	addwfc	(___set_short_pr_calib@t16+1)& (0+255),w,b
 10259  002D72  0100               	movlb	0	; () banked
 10260  002D74  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 10261  002D76  EC65  F047         	call	_crc_append	;wreg free
 10262                           
 10263                           ;key_menu.c: 766: at24c02_write_n_byte(pdiff_prEepromObj,0,(uint8_t*)&prCalibTabDef,t16)
      +                          ;
 10264  002D7A  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 10265  002D7E  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 10266  002D82  0E00               	movlw	0
 10267  002D84  0100               	movlb	0	; () banked
 10268  002D86  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 10269  002D88  0E00               	movlw	low _prCalibTabDef
 10270  002D8A  0100               	movlb	0	; () banked
 10271  002D8C  6F69               	movwf	at24c02_write_n_byte@buf& (0+255),b
 10272  002D8E  0E04               	movlw	high _prCalibTabDef
 10273  002D90  0100               	movlb	0	; () banked
 10274  002D92  6F6A               	movwf	(at24c02_write_n_byte@buf+1)& (0+255),b
 10275  002D94  C09B  F06B         	movff	___set_short_pr_calib@t16,at24c02_write_n_byte@len
 10276  002D98  C09C  F06C         	movff	___set_short_pr_calib@t16+1,at24c02_write_n_byte@len+1
 10277  002D9C  ECB8  F02D         	call	_at24c02_write_n_byte	;wreg free
 10278  002DA0                     l16036:
 10279                           
 10280                           ;key_menu.c: 767: }
 10281                           ;key_menu.c: 768: if(gohome){__exit_menu_to_home_unsave(); return;}
 10282  002DA0  0100               	movlb	0	; () banked
 10283  002DA2  5194               	movf	___set_short_pr_calib@gohome& (0+255),w,b
 10284  002DA4  0100               	movlb	0	; () banked
 10285  002DA6  B4D8               	btfsc	status,2,c
 10286  002DA8  D003               	goto	l16042
 10287                           
 10288                           ; BSR set to: 0
 10289  002DAA  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 10290  002DAE  0012               	return	
 10291  002DB0                     l16042:
 10292                           
 10293                           ;key_menu.c: 769: calibCol++;
 10294  002DB0  2A30               	incf	_calibCol,f,c	;volatile
 10295                           
 10296                           ;key_menu.c: 770: if(calibCol>prCalibTabDef.prCalibRow[calibRow].pCount){
 10297  002DB2  5031               	movf	_calibRow,w,c	;volatile
 10298  002DB4  0D34               	mullw	52
 10299  002DB6  0E04               	movlw	low (_prCalibTabDef+4)
 10300  002DB8  24F3               	addwf	prodl,w,c
 10301  002DBA  6ED9               	movwf	fsr2l,c
 10302  002DBC  0E04               	movlw	high (_prCalibTabDef+4)
 10303  002DBE  20F4               	addwfc	prodh,w,c
 10304  002DC0  6EDA               	movwf	fsr2h,c
 10305  002DC2  5030               	movf	_calibCol,w,c	;volatile
 10306  002DC4  5CDE               	subwf	postinc2,w,c
 10307  002DC6  B0D8               	btfsc	status,0,c
 10308  002DC8  D002               	goto	l16048
 10309                           
 10310                           ;key_menu.c: 771: calibCol=0;
 10311  002DCA  0E00               	movlw	0
 10312  002DCC  6E30               	movwf	_calibCol,c	;volatile
 10313  002DCE                     l16048:
 10314                           
 10315                           ;key_menu.c: 774: }
 10316                           ;key_menu.c: 775: __enter_menu_calib_press(0,calibCol);
 10317  002DCE  C030  F020         	movff	_calibCol,___enter_menu_calib_press@col	;volatile
 10318  002DD2  0E00               	movlw	0
 10319  002DD4  EC54  F030         	call	___enter_menu_calib_press
 10320  002DD8  0012               	return		;funcret
 10321  002DDA                     __end_of___set_short_pr_calib:
 10322                           	opt stack 0
 10323                           tblptru	equ	0xFF8
 10324                           tblptrh	equ	0xFF7
 10325                           tblptrl	equ	0xFF6
 10326                           tablat	equ	0xFF5
 10327                           prodh	equ	0xFF4
 10328                           prodl	equ	0xFF3
 10329                           intcon	equ	0xFF2
 10330                           postinc0	equ	0xFEE
 10331                           wreg	equ	0xFE8
 10332                           indf1	equ	0xFE7
 10333                           postinc1	equ	0xFE6
 10334                           postdec1	equ	0xFE5
 10335                           plusw1	equ	0xFE3
 10336                           fsr1h	equ	0xFE2
 10337                           fsr1l	equ	0xFE1
 10338                           indf2	equ	0xFDF
 10339                           postinc2	equ	0xFDE
 10340                           postdec2	equ	0xFDD
 10341                           plusw2	equ	0xFDB
 10342                           fsr2h	equ	0xFDA
 10343                           fsr2l	equ	0xFD9
 10344                           status	equ	0xFD8
 10345                           
 10346 ;; *************** function ___enter_menu_calib_press *****************
 10347 ;; Defined at:
 10348 ;;		line 218 in file "src/api/key_menu.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  row             1    wreg     unsigned char 
 10351 ;;  col             1   31[COMRAM] unsigned char 
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;  row             1   35[BANK0 ] unsigned char 
 10354 ;;  t32             4   38[BANK0 ] long 
 10355 ;;  stp             2   36[BANK0 ] PTR struct .
 10356 ;;		 -> prCalibTabDef(162), 
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;Total ram usage:       14 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    6
 10373 ;; This function calls:
 10374 ;;		___int32_2_mflot32
 10375 ;; This function is called by:
 10376 ;;		_key_process_set_up_long
 10377 ;;		___set_short_pr_calib
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text52
 10382  0060A8                     __ptext52:
 10383                           	opt stack 0
 10384  0060A8                     ___enter_menu_calib_press:
 10385                           	opt stack 22
 10386                           
 10387                           ;incstack = 0
 10388                           ;___enter_menu_calib_press@row stored from wreg
 10389  0060A8  0100               	movlb	0	; () banked
 10390  0060AA  6F83               	movwf	___enter_menu_calib_press@row& (0+255),b
 10391                           
 10392                           ;key_menu.c: 221: int32_t t32;
 10393                           ;key_menu.c: 222: st_prCalibTabDef* stp;
 10394                           ;key_menu.c: 224: menu=0x60;
 10395  0060AC  0E60               	movlw	96
 10396  0060AE  6E33               	movwf	_menu,c	;volatile
 10397                           
 10398                           ;key_menu.c: 225: subMenu=0;
 10399  0060B0  0E00               	movlw	0
 10400  0060B2  6E32               	movwf	_subMenu,c	;volatile
 10401                           
 10402                           ;key_menu.c: 226: calibRow=row;
 10403  0060B4  C083  F031         	movff	___enter_menu_calib_press@row,_calibRow	;volatile
 10404                           
 10405                           ;key_menu.c: 227: calibCol=col;
 10406  0060B8  C020  F030         	movff	___enter_menu_calib_press@col,_calibCol	;volatile
 10407                           
 10408                           ;key_menu.c: 228: stp=(st_prCalibTabDef*)(&prCalibTabDef);
 10409  0060BC  0E00               	movlw	low _prCalibTabDef
 10410  0060BE  0100               	movlb	0	; () banked
 10411  0060C0  6F84               	movwf	___enter_menu_calib_press@stp& (0+255),b
 10412  0060C2  0E04               	movlw	high _prCalibTabDef
 10413  0060C4  0100               	movlb	0	; () banked
 10414  0060C6  6F85               	movwf	(___enter_menu_calib_press@stp+1)& (0+255),b
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;key_menu.c: 229: if(col==0){
 10418  0060C8  5020               	movf	___enter_menu_calib_press@col,w,c
 10419  0060CA  A4D8               	btfss	status,2,c
 10420  0060CC  D012               	goto	l15190
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;key_menu.c: 230: *((uint8_t*)(&adjValue))=stp->prCalibRow[row].pCount;
 10424  0060CE  0100               	movlb	0	; () banked
 10425  0060D0  5183               	movf	___enter_menu_calib_press@row& (0+255),w,b
 10426  0060D2  0D34               	mullw	52
 10427  0060D4  0E04               	movlw	4
 10428  0060D6  26F3               	addwf	prodl,f,c
 10429  0060D8  0E00               	movlw	0
 10430  0060DA  22F4               	addwfc	prodh,f,c
 10431  0060DC  50F3               	movf	prodl,w,c
 10432  0060DE  0100               	movlb	0	; () banked
 10433  0060E0  2584               	addwf	___enter_menu_calib_press@stp& (0+255),w,b
 10434  0060E2  6ED9               	movwf	fsr2l,c
 10435  0060E4  50F4               	movf	prodh,w,c
 10436  0060E6  0100               	movlb	0	; () banked
 10437  0060E8  2185               	addwfc	(___enter_menu_calib_press@stp+1)& (0+255),w,b
 10438  0060EA  6EDA               	movwf	fsr2h,c
 10439  0060EC  50DF               	movf	indf2,w,c
 10440  0060EE  6E39               	movwf	_adjValue,c
 10441                           
 10442                           ;key_menu.c: 231: }else{
 10443  0060F0  D05A               	goto	l15196
 10444  0060F2                     l15190:
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;key_menu.c: 232: t32=stp->prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue;
 10448  0060F2  0EFC               	movlw	252
 10449  0060F4  0100               	movlb	0	; () banked
 10450  0060F6  6F7D               	movwf	??___enter_menu_calib_press& (0+255),b
 10451  0060F8  0EFF               	movlw	255
 10452  0060FA  0100               	movlb	0	; () banked
 10453  0060FC  6F7E               	movwf	(??___enter_menu_calib_press+1)& (0+255),b
 10454  0060FE  5030               	movf	_calibCol,w,c	;volatile
 10455  006100  0100               	movlb	0	; () banked
 10456  006102  6F7F               	movwf	(??___enter_menu_calib_press+2)& (0+255),b
 10457  006104  6B80               	clrf	(??___enter_menu_calib_press+3)& (0+255),b
 10458  006106  0100               	movlb	0	; () banked
 10459  006108  90D8               	bcf	status,0,c
 10460  00610A  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10461  00610C  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10462  00610E  0100               	movlb	0	; () banked
 10463  006110  90D8               	bcf	status,0,c
 10464  006112  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10465  006114  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10466  006116  0100               	movlb	0	; () banked
 10467  006118  90D8               	bcf	status,0,c
 10468  00611A  377F               	rlcf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10469  00611C  3780               	rlcf	(??___enter_menu_calib_press+3)& (0+255),f,b
 10470  00611E  0100               	movlb	0	; () banked
 10471  006120  517D               	movf	??___enter_menu_calib_press& (0+255),w,b
 10472  006122  0100               	movlb	0	; () banked
 10473  006124  277F               	addwf	(??___enter_menu_calib_press+2)& (0+255),f,b
 10474  006126  0100               	movlb	0	; () banked
 10475  006128  517E               	movf	(??___enter_menu_calib_press+1)& (0+255),w,b
 10476  00612A  0100               	movlb	0	; () banked
 10477  00612C  2380               	addwfc	(??___enter_menu_calib_press+3)& (0+255),f,b
 10478  00612E  5031               	movf	_calibRow,w,c	;volatile
 10479  006130  0D34               	mullw	52
 10480  006132  0E04               	movlw	4
 10481  006134  26F3               	addwf	prodl,f,c
 10482  006136  0E00               	movlw	0
 10483  006138  22F4               	addwfc	prodh,f,c
 10484  00613A  C084  F081         	movff	___enter_menu_calib_press@stp,??___enter_menu_calib_press+4
 10485  00613E  C085  F082         	movff	___enter_menu_calib_press@stp+1,??___enter_menu_calib_press+5
 10486  006142  50F3               	movf	prodl,w,c
 10487  006144  0100               	movlb	0	; () banked
 10488  006146  2781               	addwf	(??___enter_menu_calib_press+4)& (0+255),f,b
 10489  006148  50F4               	movf	prodh,w,c
 10490  00614A  0100               	movlb	0	; () banked
 10491  00614C  2382               	addwfc	(??___enter_menu_calib_press+5)& (0+255),f,b
 10492  00614E  0100               	movlb	0	; () banked
 10493  006150  517F               	movf	(??___enter_menu_calib_press+2)& (0+255),w,b
 10494  006152  0100               	movlb	0	; () banked
 10495  006154  2581               	addwf	(??___enter_menu_calib_press+4)& (0+255),w,b
 10496  006156  6ED9               	movwf	fsr2l,c
 10497  006158  0100               	movlb	0	; () banked
 10498  00615A  5180               	movf	(??___enter_menu_calib_press+3)& (0+255),w,b
 10499  00615C  0100               	movlb	0	; () banked
 10500  00615E  2182               	addwfc	(??___enter_menu_calib_press+5)& (0+255),w,b
 10501  006160  6EDA               	movwf	fsr2h,c
 10502  006162  CFDE F086          	movff	postinc2,___enter_menu_calib_press@t32
 10503  006166  CFDE F087          	movff	postinc2,___enter_menu_calib_press@t32+1
 10504  00616A  CFDE F088          	movff	postinc2,___enter_menu_calib_press@t32+2
 10505  00616E  CFDE F089          	movff	postinc2,___enter_menu_calib_press@t32+3
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;key_menu.c: 233: t32=__int32_2_mflot32(t32);
 10509  006172  C086  F06D         	movff	___enter_menu_calib_press@t32,___int32_2_mflot32@x
 10510  006176  C087  F06E         	movff	___enter_menu_calib_press@t32+1,___int32_2_mflot32@x+1
 10511  00617A  C088  F06F         	movff	___enter_menu_calib_press@t32+2,___int32_2_mflot32@x+2
 10512  00617E  C089  F070         	movff	___enter_menu_calib_press@t32+3,___int32_2_mflot32@x+3
 10513  006182  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 10514  006186  C06D  F086         	movff	?___int32_2_mflot32,___enter_menu_calib_press@t32
 10515  00618A  C06E  F087         	movff	?___int32_2_mflot32+1,___enter_menu_calib_press@t32+1
 10516  00618E  C06F  F088         	movff	?___int32_2_mflot32+2,___enter_menu_calib_press@t32+2
 10517  006192  C070  F089         	movff	?___int32_2_mflot32+3,___enter_menu_calib_press@t32+3
 10518                           
 10519                           ;key_menu.c: 234: m_floatAdj.t32=t32;
 10520  006196  C086  F035         	movff	___enter_menu_calib_press@t32,_m_floatAdj
 10521  00619A  C087  F036         	movff	___enter_menu_calib_press@t32+1,_m_floatAdj+1
 10522  00619E  C088  F037         	movff	___enter_menu_calib_press@t32+2,_m_floatAdj+2
 10523  0061A2  C089  F038         	movff	___enter_menu_calib_press@t32+3,_m_floatAdj+3
 10524  0061A6                     l15196:
 10525                           
 10526                           ;key_menu.c: 235: }
 10527                           ;key_menu.c: 236: adjLocation=0;
 10528  0061A6  0E00               	movlw	0
 10529  0061A8  6E3F               	movwf	_adjLocation,c	;volatile
 10530  0061AA  0012               	return		;funcret
 10531  0061AC                     __end_of___enter_menu_calib_press:
 10532                           	opt stack 0
 10533                           tblptru	equ	0xFF8
 10534                           tblptrh	equ	0xFF7
 10535                           tblptrl	equ	0xFF6
 10536                           tablat	equ	0xFF5
 10537                           prodh	equ	0xFF4
 10538                           prodl	equ	0xFF3
 10539                           intcon	equ	0xFF2
 10540                           postinc0	equ	0xFEE
 10541                           wreg	equ	0xFE8
 10542                           indf1	equ	0xFE7
 10543                           postinc1	equ	0xFE6
 10544                           postdec1	equ	0xFE5
 10545                           plusw1	equ	0xFE3
 10546                           fsr1h	equ	0xFE2
 10547                           fsr1l	equ	0xFE1
 10548                           indf2	equ	0xFDF
 10549                           postinc2	equ	0xFDE
 10550                           postdec2	equ	0xFDD
 10551                           plusw2	equ	0xFDB
 10552                           fsr2h	equ	0xFDA
 10553                           fsr2l	equ	0xFD9
 10554                           status	equ	0xFD8
 10555                           
 10556 ;; *************** function ___set_short_pose_size *****************
 10557 ;; Defined at:
 10558 ;;		line 665 in file "src/api/key_menu.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  gohome          1    wreg     unsigned char 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  gohome          1    0[BANK3 ] unsigned char 
 10563 ;;  t32             4    3[BANK3 ] long 
 10564 ;;  stp             2    7[BANK3 ] PTR struct .
 10565 ;;		 -> stSysData(240), 
 10566 ;;  p               2    1[BANK3 ] PTR unsigned char 
 10567 ;;		 -> adjValue(4), 
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  1    wreg      void 
 10570 ;; Registers used:
 10571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10578 ;;      Locals:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10580 ;;      Totals:         0       0       0       0       9       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10581 ;;Total ram usage:        9 bytes
 10582 ;; Hardware stack levels used:    1
 10583 ;; Hardware stack levels required when called:    8
 10584 ;; This function calls:
 10585 ;;		___enter_menu_set_d
 10586 ;;		___enter_menu_set_h
 10587 ;;		___enter_menu_set_pose_size
 10588 ;;		___exit_menu_to_home_unsave
 10589 ;;		___mflot32_2_int32
 10590 ;;		___sys_data_save_write_flash
 10591 ;; This function is called by:
 10592 ;;		_key_process_set_long
 10593 ;;		_key_process_set
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           	psect	text53
 10598  005D92                     __ptext53:
 10599                           	opt stack 0
 10600  005D92                     ___set_short_pose_size:
 10601                           	opt stack 20
 10602                           
 10603                           ;incstack = 0
 10604                           ;___set_short_pose_size@gohome stored from wreg
 10605  005D92  0103               	movlb	3	; () banked
 10606  005D94  6FCA               	movwf	___set_short_pose_size@gohome& (0+255),b
 10607                           
 10608                           ;key_menu.c: 667: uint8_t* p;
 10609                           ;key_menu.c: 668: int32_t t32;
 10610                           ;key_menu.c: 671: st_sysDataDef* stp=&stSysData;
 10611  005D96  0E00               	movlw	low _stSysData
 10612  005D98  0103               	movlb	3	; () banked
 10613  005D9A  6FD1               	movwf	___set_short_pose_size@stp& (0+255),b
 10614  005D9C  0E02               	movlw	high _stSysData
 10615  005D9E  0103               	movlb	3	; () banked
 10616  005DA0  6FD2               	movwf	(___set_short_pose_size@stp+1)& (0+255),b
 10617                           
 10618                           ;key_menu.c: 672: switch(subMenu){
 10619  005DA2  D04C               	goto	l15926
 10620  005DA4                     l15912:
 10621                           
 10622                           ; BSR set to: 3
 10623                           ;key_menu.c: 674: p=(uint8_t*)(&adjValue);
 10624  005DA4  0E39               	movlw	low _adjValue
 10625  005DA6  0103               	movlb	3	; () banked
 10626  005DA8  6FCB               	movwf	___set_short_pose_size@p& (0+255),b
 10627  005DAA  0E00               	movlw	high _adjValue
 10628  005DAC  0103               	movlb	3	; () banked
 10629  005DAE  6FCC               	movwf	(___set_short_pose_size@p+1)& (0+255),b
 10630                           
 10631                           ; BSR set to: 3
 10632                           ;key_menu.c: 675: stp->pos=(*p);
 10633  005DB0  C3CB  FFD9         	movff	___set_short_pose_size@p,fsr2l
 10634  005DB4  C3CC  FFDA         	movff	___set_short_pose_size@p+1,fsr2h
 10635  005DB8  0103               	movlb	3	; () banked
 10636  005DBA  EE10 F004          	lfsr	1,4
 10637  005DBE  51D1               	movf	___set_short_pose_size@stp& (0+255),w,b
 10638  005DC0  26E1               	addwf	fsr1l,f,c
 10639  005DC2  51D2               	movf	(___set_short_pose_size@stp+1)& (0+255),w,b
 10640  005DC4  22E2               	addwfc	fsr1h,f,c
 10641  005DC6  CFDF FFE7          	movff	indf2,indf1
 10642                           
 10643                           ;key_menu.c: 676: break;
 10644  005DCA  D042               	goto	l15928
 10645  005DCC                     l15916:
 10646                           
 10647                           ; BSR set to: 3
 10648                           ;key_menu.c: 678: t32=__mflot32_2_int32(m_floatAdj.t32);
 10649  005DCC  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 10650  005DD0  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 10651  005DD4  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 10652  005DD8  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 10653  005DDC  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
 10654  005DE0  C06C  F3CD         	movff	?___mflot32_2_int32,___set_short_pose_size@t32
 10655  005DE4  C06D  F3CE         	movff	?___mflot32_2_int32+1,___set_short_pose_size@t32+1
 10656  005DE8  C06E  F3CF         	movff	?___mflot32_2_int32+2,___set_short_pose_size@t32+2
 10657  005DEC  C06F  F3D0         	movff	?___mflot32_2_int32+3,___set_short_pose_size@t32+3
 10658                           
 10659                           ;key_menu.c: 679: stp->h=t32;
 10660  005DF0  0103               	movlb	3	; () banked
 10661  005DF2  EE20 F008          	lfsr	2,8
 10662  005DF6  D015               	goto	L3
 10663  005DF8                     l15920:
 10664                           
 10665                           ; BSR set to: 3
 10666                           ;key_menu.c: 682: t32=__mflot32_2_int32(m_floatAdj.t32);
 10667  005DF8  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 10668  005DFC  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 10669  005E00  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 10670  005E04  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 10671  005E08  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
 10672  005E0C  C06C  F3CD         	movff	?___mflot32_2_int32,___set_short_pose_size@t32
 10673  005E10  C06D  F3CE         	movff	?___mflot32_2_int32+1,___set_short_pose_size@t32+1
 10674  005E14  C06E  F3CF         	movff	?___mflot32_2_int32+2,___set_short_pose_size@t32+2
 10675  005E18  C06F  F3D0         	movff	?___mflot32_2_int32+3,___set_short_pose_size@t32+3
 10676                           
 10677                           ;key_menu.c: 683: stp->d=t32;
 10678  005E1C  0103               	movlb	3	; () banked
 10679  005E1E  EE20 F00C          	lfsr	2,12
 10680  005E22                     L3:
 10681  005E22  51D1               	movf	___set_short_pose_size@stp& (0+255),w,b
 10682  005E24  26D9               	addwf	fsr2l,f,c
 10683  005E26  51D2               	movf	(___set_short_pose_size@stp+1)& (0+255),w,b
 10684  005E28  22DA               	addwfc	fsr2h,f,c
 10685  005E2A  C3CD  FFDE         	movff	___set_short_pose_size@t32,postinc2
 10686  005E2E  C3CE  FFDE         	movff	___set_short_pose_size@t32+1,postinc2
 10687  005E32  C3CF  FFDE         	movff	___set_short_pose_size@t32+2,postinc2
 10688  005E36  C3D0  FFDE         	movff	___set_short_pose_size@t32+3,postinc2
 10689                           
 10690                           ; BSR set to: 3
 10691                           ;key_menu.c: 685: }
 10692                           
 10693                           ;key_menu.c: 684: break;
 10694  005E3A  D00A               	goto	l15928
 10695  005E3C                     l15926:
 10696                           
 10697                           ; BSR set to: 3
 10698  005E3C  5032               	movf	_subMenu,w,c	;volatile
 10699                           
 10700                           ; Switch size 1, requested type "space"
 10701                           ; Number of cases is 3, Range of values is 0 to 2
 10702                           ; switch strategies available:
 10703                           ; Name         Instructions Cycles
 10704                           ; simple_byte           10     6 (average)
 10705                           ;	Chosen strategy is simple_byte
 10706  005E3E  0A00               	xorlw	0	; case 0
 10707  005E40  B4D8               	btfsc	status,2,c
 10708  005E42  D7B0               	goto	l15912
 10709  005E44  0A01               	xorlw	1	; case 1
 10710  005E46  B4D8               	btfsc	status,2,c
 10711  005E48  D7C1               	goto	l15916
 10712  005E4A  0A03               	xorlw	3	; case 2
 10713  005E4C  B4D8               	btfsc	status,2,c
 10714  005E4E  D7D4               	goto	l15920
 10715  005E50                     l15928:
 10716                           
 10717                           ; BSR set to: 3
 10718                           ;key_menu.c: 686: if(gohome){__exit_menu_to_home_unsave(); return;}
 10719  005E50  0103               	movlb	3	; () banked
 10720  005E52  51CA               	movf	___set_short_pose_size@gohome& (0+255),w,b
 10721  005E54  0103               	movlb	3	; () banked
 10722  005E56  B4D8               	btfsc	status,2,c
 10723  005E58  D003               	goto	l15934
 10724                           
 10725                           ; BSR set to: 3
 10726  005E5A  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 10727  005E5E  0012               	return	
 10728  005E60                     l15934:
 10729                           
 10730                           ;key_menu.c: 687: __sys_data_save_write_flash();
 10731  005E60  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
 10732                           
 10733                           ;key_menu.c: 688: subMenu++;
 10734  005E64  2A32               	incf	_subMenu,f,c	;volatile
 10735                           
 10736                           ;key_menu.c: 689: if(subMenu>0x02)subMenu=0x00;
 10737  005E66  0E02               	movlw	2
 10738  005E68  6432               	cpfsgt	_subMenu,c	;volatile
 10739  005E6A  D00C               	goto	l15950
 10740  005E6C  0E00               	movlw	0
 10741  005E6E  6E32               	movwf	_subMenu,c	;volatile
 10742                           
 10743                           ;key_menu.c: 690: switch(subMenu){
 10744  005E70  D009               	goto	l15950
 10745  005E72                     l15942:
 10746  005E72  EC04  F04D         	call	___enter_menu_set_pose_size	;wreg free
 10747  005E76  0012               	return	
 10748  005E78                     l15944:
 10749  005E78  ECFF  F045         	call	___enter_menu_set_h	;wreg free
 10750  005E7C  0012               	return	
 10751  005E7E                     l15946:
 10752  005E7E  EC33  F046         	call	___enter_menu_set_d	;wreg free
 10753                           
 10754                           ;key_menu.c: 695: }
 10755                           
 10756                           ;key_menu.c: 694: default:break;
 10757  005E82  0012               	return	
 10758  005E84                     l15950:
 10759  005E84  5032               	movf	_subMenu,w,c	;volatile
 10760                           
 10761                           ; Switch size 1, requested type "space"
 10762                           ; Number of cases is 3, Range of values is 0 to 2
 10763                           ; switch strategies available:
 10764                           ; Name         Instructions Cycles
 10765                           ; simple_byte           10     6 (average)
 10766                           ;	Chosen strategy is simple_byte
 10767  005E86  0A00               	xorlw	0	; case 0
 10768  005E88  B4D8               	btfsc	status,2,c
 10769  005E8A  D7F3               	goto	l15942
 10770  005E8C  0A01               	xorlw	1	; case 1
 10771  005E8E  B4D8               	btfsc	status,2,c
 10772  005E90  D7F3               	goto	l15944
 10773  005E92  0A03               	xorlw	3	; case 2
 10774  005E94  A4D8               	btfss	status,2,c
 10775  005E96  0012               	return	
 10776  005E98  D7F2               	goto	l15946
 10777  005E9A                     __end_of___set_short_pose_size:
 10778                           	opt stack 0
 10779                           tblptru	equ	0xFF8
 10780                           tblptrh	equ	0xFF7
 10781                           tblptrl	equ	0xFF6
 10782                           tablat	equ	0xFF5
 10783                           prodh	equ	0xFF4
 10784                           prodl	equ	0xFF3
 10785                           intcon	equ	0xFF2
 10786                           postinc0	equ	0xFEE
 10787                           wreg	equ	0xFE8
 10788                           indf1	equ	0xFE7
 10789                           postinc1	equ	0xFE6
 10790                           postdec1	equ	0xFE5
 10791                           plusw1	equ	0xFE3
 10792                           fsr1h	equ	0xFE2
 10793                           fsr1l	equ	0xFE1
 10794                           indf2	equ	0xFDF
 10795                           postinc2	equ	0xFDE
 10796                           postdec2	equ	0xFDD
 10797                           plusw2	equ	0xFDB
 10798                           fsr2h	equ	0xFDA
 10799                           fsr2l	equ	0xFD9
 10800                           status	equ	0xFD8
 10801                           
 10802 ;; *************** function ___enter_menu_set_pose_size *****************
 10803 ;; Defined at:
 10804 ;;		line 126 in file "src/api/key_menu.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;		None
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;  fps             2    0[BANK0 ] PTR struct .
 10809 ;;		 -> stSysData(240), 
 10810 ;; Return value:  Size  Location     Type
 10811 ;;                  1    wreg      void 
 10812 ;; Registers used:
 10813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10823 ;;Total ram usage:        2 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; Hardware stack levels required when called:    4
 10826 ;; This function calls:
 10827 ;;		Nothing
 10828 ;; This function is called by:
 10829 ;;		_key_process_set_up_long
 10830 ;;		___set_short_pose_size
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text54
 10835  009A08                     __ptext54:
 10836                           	opt stack 0
 10837  009A08                     ___enter_menu_set_pose_size:
 10838                           	opt stack 24
 10839                           
 10840                           ;key_menu.c: 128: menu=0x30;
 10841                           
 10842                           ;incstack = 0
 10843  009A08  0E30               	movlw	48
 10844  009A0A  6E33               	movwf	_menu,c	;volatile
 10845                           
 10846                           ;key_menu.c: 129: subMenu=0x00;
 10847  009A0C  0E00               	movlw	0
 10848  009A0E  6E32               	movwf	_subMenu,c	;volatile
 10849                           
 10850                           ;key_menu.c: 131: st_sysDataDef* fps= &stSysData;
 10851  009A10  0E00               	movlw	low _stSysData
 10852  009A12  0100               	movlb	0	; () banked
 10853  009A14  6F60               	movwf	___enter_menu_set_pose_size@fps& (0+255),b
 10854  009A16  0E02               	movlw	high _stSysData
 10855  009A18  0100               	movlb	0	; () banked
 10856  009A1A  6F61               	movwf	(___enter_menu_set_pose_size@fps+1)& (0+255),b
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;key_menu.c: 132: adjValue=0x00ul;
 10860  009A1C  0E00               	movlw	0
 10861  009A1E  6E39               	movwf	_adjValue,c	;volatile
 10862  009A20  0E00               	movlw	0
 10863  009A22  6E3A               	movwf	_adjValue+1,c	;volatile
 10864  009A24  0E00               	movlw	0
 10865  009A26  6E3B               	movwf	_adjValue+2,c	;volatile
 10866  009A28  0E00               	movlw	0
 10867  009A2A  6E3C               	movwf	_adjValue+3,c	;volatile
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;key_menu.c: 133: *((uint8_t*)(&adjValue))=(uint8_t)(fps->pos);
 10871  009A2C  0100               	movlb	0	; () banked
 10872  009A2E  EE20 F004          	lfsr	2,4
 10873  009A32  5160               	movf	___enter_menu_set_pose_size@fps& (0+255),w,b
 10874  009A34  26D9               	addwf	fsr2l,f,c
 10875  009A36  5161               	movf	(___enter_menu_set_pose_size@fps+1)& (0+255),w,b
 10876  009A38  22DA               	addwfc	fsr2h,f,c
 10877  009A3A  50DF               	movf	indf2,w,c
 10878  009A3C  6E39               	movwf	_adjValue,c
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;key_menu.c: 134: adjLocation=0;
 10882  009A3E  0E00               	movlw	0
 10883  009A40  6E3F               	movwf	_adjLocation,c	;volatile
 10884                           
 10885                           ; BSR set to: 0
 10886  009A42  0012               	return		;funcret
 10887  009A44                     __end_of___enter_menu_set_pose_size:
 10888                           	opt stack 0
 10889                           tblptru	equ	0xFF8
 10890                           tblptrh	equ	0xFF7
 10891                           tblptrl	equ	0xFF6
 10892                           tablat	equ	0xFF5
 10893                           prodh	equ	0xFF4
 10894                           prodl	equ	0xFF3
 10895                           intcon	equ	0xFF2
 10896                           postinc0	equ	0xFEE
 10897                           wreg	equ	0xFE8
 10898                           indf1	equ	0xFE7
 10899                           postinc1	equ	0xFE6
 10900                           postdec1	equ	0xFE5
 10901                           plusw1	equ	0xFE3
 10902                           fsr1h	equ	0xFE2
 10903                           fsr1l	equ	0xFE1
 10904                           indf2	equ	0xFDF
 10905                           postinc2	equ	0xFDE
 10906                           postdec2	equ	0xFDD
 10907                           plusw2	equ	0xFDB
 10908                           fsr2h	equ	0xFDA
 10909                           fsr2l	equ	0xFD9
 10910                           status	equ	0xFD8
 10911                           
 10912 ;; *************** function ___enter_menu_set_h *****************
 10913 ;; Defined at:
 10914 ;;		line 148 in file "src/api/key_menu.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;		None
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;  t32             4   31[BANK0 ] long 
 10919 ;;  fps             2   29[BANK0 ] PTR struct .
 10920 ;;		 -> stSysData(240), 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10933 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;Total ram usage:        6 bytes
 10935 ;; Hardware stack levels used:    1
 10936 ;; Hardware stack levels required when called:    6
 10937 ;; This function calls:
 10938 ;;		___int32_2_mflot32
 10939 ;; This function is called by:
 10940 ;;		___set_short_pose_size
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text55
 10945  008BFE                     __ptext55:
 10946                           	opt stack 0
 10947  008BFE                     ___enter_menu_set_h:
 10948                           	opt stack 21
 10949                           
 10950                           ;key_menu.c: 149: int32_t t32;
 10951                           ;key_menu.c: 150: subMenu=0x01;
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;incstack = 0
 10955  008BFE  0E01               	movlw	1
 10956  008C00  6E32               	movwf	_subMenu,c	;volatile
 10957                           
 10958                           ;key_menu.c: 152: st_sysDataDef* fps= &stSysData;
 10959  008C02  0E00               	movlw	low _stSysData
 10960  008C04  0100               	movlb	0	; () banked
 10961  008C06  6F7D               	movwf	___enter_menu_set_h@fps& (0+255),b
 10962  008C08  0E02               	movlw	high _stSysData
 10963  008C0A  0100               	movlb	0	; () banked
 10964  008C0C  6F7E               	movwf	(___enter_menu_set_h@fps+1)& (0+255),b
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;key_menu.c: 153: t32=(fps->h);
 10968  008C0E  0100               	movlb	0	; () banked
 10969  008C10  EE20 F008          	lfsr	2,8
 10970  008C14  517D               	movf	___enter_menu_set_h@fps& (0+255),w,b
 10971  008C16  26D9               	addwf	fsr2l,f,c
 10972  008C18  517E               	movf	(___enter_menu_set_h@fps+1)& (0+255),w,b
 10973  008C1A  22DA               	addwfc	fsr2h,f,c
 10974  008C1C  CFDE F07F          	movff	postinc2,___enter_menu_set_h@t32
 10975  008C20  CFDE F080          	movff	postinc2,___enter_menu_set_h@t32+1
 10976  008C24  CFDE F081          	movff	postinc2,___enter_menu_set_h@t32+2
 10977  008C28  CFDE F082          	movff	postinc2,___enter_menu_set_h@t32+3
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;key_menu.c: 154: t32=__int32_2_mflot32(t32);
 10981  008C2C  C07F  F06D         	movff	___enter_menu_set_h@t32,___int32_2_mflot32@x
 10982  008C30  C080  F06E         	movff	___enter_menu_set_h@t32+1,___int32_2_mflot32@x+1
 10983  008C34  C081  F06F         	movff	___enter_menu_set_h@t32+2,___int32_2_mflot32@x+2
 10984  008C38  C082  F070         	movff	___enter_menu_set_h@t32+3,___int32_2_mflot32@x+3
 10985  008C3C  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 10986  008C40  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_h@t32
 10987  008C44  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_h@t32+1
 10988  008C48  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_h@t32+2
 10989  008C4C  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_h@t32+3
 10990                           
 10991                           ;key_menu.c: 155: m_floatAdj.t32=t32;
 10992  008C50  C07F  F035         	movff	___enter_menu_set_h@t32,_m_floatAdj
 10993  008C54  C080  F036         	movff	___enter_menu_set_h@t32+1,_m_floatAdj+1
 10994  008C58  C081  F037         	movff	___enter_menu_set_h@t32+2,_m_floatAdj+2
 10995  008C5C  C082  F038         	movff	___enter_menu_set_h@t32+3,_m_floatAdj+3
 10996                           
 10997                           ;key_menu.c: 156: adjLocation=0;
 10998  008C60  0E00               	movlw	0
 10999  008C62  6E3F               	movwf	_adjLocation,c	;volatile
 11000  008C64  0012               	return		;funcret
 11001  008C66                     __end_of___enter_menu_set_h:
 11002                           	opt stack 0
 11003                           tblptru	equ	0xFF8
 11004                           tblptrh	equ	0xFF7
 11005                           tblptrl	equ	0xFF6
 11006                           tablat	equ	0xFF5
 11007                           prodh	equ	0xFF4
 11008                           prodl	equ	0xFF3
 11009                           intcon	equ	0xFF2
 11010                           postinc0	equ	0xFEE
 11011                           wreg	equ	0xFE8
 11012                           indf1	equ	0xFE7
 11013                           postinc1	equ	0xFE6
 11014                           postdec1	equ	0xFE5
 11015                           plusw1	equ	0xFE3
 11016                           fsr1h	equ	0xFE2
 11017                           fsr1l	equ	0xFE1
 11018                           indf2	equ	0xFDF
 11019                           postinc2	equ	0xFDE
 11020                           postdec2	equ	0xFDD
 11021                           plusw2	equ	0xFDB
 11022                           fsr2h	equ	0xFDA
 11023                           fsr2l	equ	0xFD9
 11024                           status	equ	0xFD8
 11025                           
 11026 ;; *************** function ___enter_menu_set_d *****************
 11027 ;; Defined at:
 11028 ;;		line 137 in file "src/api/key_menu.c"
 11029 ;; Parameters:    Size  Location     Type
 11030 ;;		None
 11031 ;; Auto vars:     Size  Location     Type
 11032 ;;  t32             4   31[BANK0 ] long 
 11033 ;;  fps             2   29[BANK0 ] PTR struct .
 11034 ;;		 -> stSysData(240), 
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  1    wreg      void 
 11037 ;; Registers used:
 11038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11045 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;Total ram usage:        6 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:    6
 11051 ;; This function calls:
 11052 ;;		___int32_2_mflot32
 11053 ;; This function is called by:
 11054 ;;		___set_short_pose_size
 11055 ;; This function uses a non-reentrant model
 11056 ;;
 11057                           
 11058                           	psect	text56
 11059  008C66                     __ptext56:
 11060                           	opt stack 0
 11061  008C66                     ___enter_menu_set_d:
 11062                           	opt stack 21
 11063                           
 11064                           ;key_menu.c: 138: int32_t t32;
 11065                           ;key_menu.c: 139: subMenu=0x02;
 11066                           
 11067                           ;incstack = 0
 11068  008C66  0E02               	movlw	2
 11069  008C68  6E32               	movwf	_subMenu,c	;volatile
 11070                           
 11071                           ;key_menu.c: 141: st_sysDataDef* fps= &stSysData;
 11072  008C6A  0E00               	movlw	low _stSysData
 11073  008C6C  0100               	movlb	0	; () banked
 11074  008C6E  6F7D               	movwf	___enter_menu_set_d@fps& (0+255),b
 11075  008C70  0E02               	movlw	high _stSysData
 11076  008C72  0100               	movlb	0	; () banked
 11077  008C74  6F7E               	movwf	(___enter_menu_set_d@fps+1)& (0+255),b
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;key_menu.c: 142: t32=fps->d;
 11081  008C76  0100               	movlb	0	; () banked
 11082  008C78  EE20 F00C          	lfsr	2,12
 11083  008C7C  517D               	movf	___enter_menu_set_d@fps& (0+255),w,b
 11084  008C7E  26D9               	addwf	fsr2l,f,c
 11085  008C80  517E               	movf	(___enter_menu_set_d@fps+1)& (0+255),w,b
 11086  008C82  22DA               	addwfc	fsr2h,f,c
 11087  008C84  CFDE F07F          	movff	postinc2,___enter_menu_set_d@t32
 11088  008C88  CFDE F080          	movff	postinc2,___enter_menu_set_d@t32+1
 11089  008C8C  CFDE F081          	movff	postinc2,___enter_menu_set_d@t32+2
 11090  008C90  CFDE F082          	movff	postinc2,___enter_menu_set_d@t32+3
 11091                           
 11092                           ; BSR set to: 0
 11093                           ;key_menu.c: 143: t32=__int32_2_mflot32(t32);
 11094  008C94  C07F  F06D         	movff	___enter_menu_set_d@t32,___int32_2_mflot32@x
 11095  008C98  C080  F06E         	movff	___enter_menu_set_d@t32+1,___int32_2_mflot32@x+1
 11096  008C9C  C081  F06F         	movff	___enter_menu_set_d@t32+2,___int32_2_mflot32@x+2
 11097  008CA0  C082  F070         	movff	___enter_menu_set_d@t32+3,___int32_2_mflot32@x+3
 11098  008CA4  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 11099  008CA8  C06D  F07F         	movff	?___int32_2_mflot32,___enter_menu_set_d@t32
 11100  008CAC  C06E  F080         	movff	?___int32_2_mflot32+1,___enter_menu_set_d@t32+1
 11101  008CB0  C06F  F081         	movff	?___int32_2_mflot32+2,___enter_menu_set_d@t32+2
 11102  008CB4  C070  F082         	movff	?___int32_2_mflot32+3,___enter_menu_set_d@t32+3
 11103                           
 11104                           ;key_menu.c: 144: m_floatAdj.t32=t32;
 11105  008CB8  C07F  F035         	movff	___enter_menu_set_d@t32,_m_floatAdj
 11106  008CBC  C080  F036         	movff	___enter_menu_set_d@t32+1,_m_floatAdj+1
 11107  008CC0  C081  F037         	movff	___enter_menu_set_d@t32+2,_m_floatAdj+2
 11108  008CC4  C082  F038         	movff	___enter_menu_set_d@t32+3,_m_floatAdj+3
 11109                           
 11110                           ;key_menu.c: 145: adjLocation=0;
 11111  008CC8  0E00               	movlw	0
 11112  008CCA  6E3F               	movwf	_adjLocation,c	;volatile
 11113  008CCC  0012               	return		;funcret
 11114  008CCE                     __end_of___enter_menu_set_d:
 11115                           	opt stack 0
 11116                           tblptru	equ	0xFF8
 11117                           tblptrh	equ	0xFF7
 11118                           tblptrl	equ	0xFF6
 11119                           tablat	equ	0xFF5
 11120                           prodh	equ	0xFF4
 11121                           prodl	equ	0xFF3
 11122                           intcon	equ	0xFF2
 11123                           postinc0	equ	0xFEE
 11124                           wreg	equ	0xFE8
 11125                           indf1	equ	0xFE7
 11126                           postinc1	equ	0xFE6
 11127                           postdec1	equ	0xFE5
 11128                           plusw1	equ	0xFE3
 11129                           fsr1h	equ	0xFE2
 11130                           fsr1l	equ	0xFE1
 11131                           indf2	equ	0xFDF
 11132                           postinc2	equ	0xFDE
 11133                           postdec2	equ	0xFDD
 11134                           plusw2	equ	0xFDB
 11135                           fsr2h	equ	0xFDA
 11136                           fsr2l	equ	0xFD9
 11137                           status	equ	0xFD8
 11138                           
 11139 ;; *************** function ___set_short_poly_coefic *****************
 11140 ;; Defined at:
 11141 ;;		line 779 in file "src/api/key_menu.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;  gohome          1    wreg     unsigned char 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  gohome          1  131[BANK0 ] unsigned char 
 11146 ;;  stp             2  134[BANK0 ] PTR struct .
 11147 ;;		 -> stSysData(240), 
 11148 ;;  p               2  132[BANK0 ] PTR int 
 11149 ;;		 -> adjValue(4), 
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11160 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11162 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;Total ram usage:        5 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; Hardware stack levels required when called:    8
 11166 ;; This function calls:
 11167 ;;		___enter_menu_poly_coeffic
 11168 ;;		___exit_menu_to_home_unsave
 11169 ;;		___sys_data_save_write_flash
 11170 ;; This function is called by:
 11171 ;;		_key_process_set_long
 11172 ;;		_key_process_set
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text57
 11177  008900                     __ptext57:
 11178                           	opt stack 0
 11179  008900                     ___set_short_poly_coefic:
 11180                           	opt stack 20
 11181                           
 11182                           ;incstack = 0
 11183                           ;___set_short_poly_coefic@gohome stored from wreg
 11184  008900  0100               	movlb	0	; () banked
 11185  008902  6FE3               	movwf	___set_short_poly_coefic@gohome& (0+255),b
 11186                           
 11187                           ;key_menu.c: 781: int16_t* p;
 11188                           ;key_menu.c: 785: st_sysDataDef* stp=&stSysData;
 11189  008904  0E00               	movlw	low _stSysData
 11190  008906  0100               	movlb	0	; () banked
 11191  008908  6FE6               	movwf	___set_short_poly_coefic@stp& (0+255),b
 11192  00890A  0E02               	movlw	high _stSysData
 11193  00890C  0100               	movlb	0	; () banked
 11194  00890E  6FE7               	movwf	(___set_short_poly_coefic@stp+1)& (0+255),b
 11195                           
 11196                           ;key_menu.c: 787: p=(int16_t*)(&adjValue);
 11197  008910  0E39               	movlw	low _adjValue
 11198  008912  0100               	movlb	0	; () banked
 11199  008914  6FE4               	movwf	___set_short_poly_coefic@p& (0+255),b
 11200  008916  0E00               	movlw	high _adjValue
 11201  008918  0100               	movlb	0	; () banked
 11202  00891A  6FE5               	movwf	(___set_short_poly_coefic@p+1)& (0+255),b
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;key_menu.c: 788: stp->ployCoeffic[subMenu]=*p;
 11206  00891C  C0E4  FFD9         	movff	___set_short_poly_coefic@p,fsr2l
 11207  008920  C0E5  FFDA         	movff	___set_short_poly_coefic@p+1,fsr2h
 11208  008924  5032               	movf	_subMenu,w,c	;volatile
 11209  008926  0D02               	mullw	2
 11210  008928  0E84               	movlw	132
 11211  00892A  26F3               	addwf	prodl,f,c
 11212  00892C  0E00               	movlw	0
 11213  00892E  22F4               	addwfc	prodh,f,c
 11214  008930  50F3               	movf	prodl,w,c
 11215  008932  0100               	movlb	0	; () banked
 11216  008934  25E6               	addwf	___set_short_poly_coefic@stp& (0+255),w,b
 11217  008936  6EE1               	movwf	fsr1l,c
 11218  008938  50F4               	movf	prodh,w,c
 11219  00893A  0100               	movlb	0	; () banked
 11220  00893C  21E7               	addwfc	(___set_short_poly_coefic@stp+1)& (0+255),w,b
 11221  00893E  6EE2               	movwf	fsr1h,c
 11222  008940  CFDE FFE6          	movff	postinc2,postinc1
 11223  008944  CFDD FFE5          	movff	postdec2,postdec1
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;key_menu.c: 789: __sys_data_save_write_flash();
 11227  008948  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
 11228                           
 11229                           ;key_menu.c: 791: if(gohome){__exit_menu_to_home_unsave(); return;}
 11230  00894C  0100               	movlb	0	; () banked
 11231  00894E  51E3               	movf	___set_short_poly_coefic@gohome& (0+255),w,b
 11232  008950  0100               	movlb	0	; () banked
 11233  008952  B4D8               	btfsc	status,2,c
 11234  008954  D003               	goto	l16062
 11235                           
 11236                           ; BSR set to: 0
 11237  008956  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 11238  00895A  0012               	return	
 11239  00895C                     l16062:
 11240                           
 11241                           ;key_menu.c: 793: subMenu++;
 11242  00895C  2A32               	incf	_subMenu,f,c	;volatile
 11243                           
 11244                           ;key_menu.c: 794: if(subMenu>0x03)subMenu=0x00;
 11245  00895E  0E03               	movlw	3
 11246  008960  6432               	cpfsgt	_subMenu,c	;volatile
 11247  008962  D002               	goto	l16068
 11248  008964  0E00               	movlw	0
 11249  008966  6E32               	movwf	_subMenu,c	;volatile
 11250  008968                     l16068:
 11251                           
 11252                           ;key_menu.c: 795: __enter_menu_poly_coeffic(subMenu);
 11253  008968  5032               	movf	_subMenu,w,c	;volatile
 11254  00896A  EC22  F04B         	call	___enter_menu_poly_coeffic
 11255  00896E  0012               	return		;funcret
 11256  008970                     __end_of___set_short_poly_coefic:
 11257                           	opt stack 0
 11258                           tblptru	equ	0xFF8
 11259                           tblptrh	equ	0xFF7
 11260                           tblptrl	equ	0xFF6
 11261                           tablat	equ	0xFF5
 11262                           prodh	equ	0xFF4
 11263                           prodl	equ	0xFF3
 11264                           intcon	equ	0xFF2
 11265                           postinc0	equ	0xFEE
 11266                           wreg	equ	0xFE8
 11267                           indf1	equ	0xFE7
 11268                           postinc1	equ	0xFE6
 11269                           postdec1	equ	0xFE5
 11270                           plusw1	equ	0xFE3
 11271                           fsr1h	equ	0xFE2
 11272                           fsr1l	equ	0xFE1
 11273                           indf2	equ	0xFDF
 11274                           postinc2	equ	0xFDE
 11275                           postdec2	equ	0xFDD
 11276                           plusw2	equ	0xFDB
 11277                           fsr2h	equ	0xFDA
 11278                           fsr2l	equ	0xFD9
 11279                           status	equ	0xFD8
 11280                           
 11281 ;; *************** function ___enter_menu_poly_coeffic *****************
 11282 ;; Defined at:
 11283 ;;		line 239 in file "src/api/key_menu.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;  __subMenu       1    wreg     unsigned char 
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  __subMenu       1    2[BANK0 ] unsigned char 
 11288 ;;  fps             2    3[BANK0 ] PTR struct .
 11289 ;;		 -> stSysData(240), 
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  1    wreg      void 
 11292 ;; Registers used:
 11293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11294 ;; Tracked objects:
 11295 ;;		On entry : 0/0
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11300 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11301 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11302 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11303 ;;Total ram usage:        5 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; Hardware stack levels required when called:    4
 11306 ;; This function calls:
 11307 ;;		Nothing
 11308 ;; This function is called by:
 11309 ;;		_key_process_set_up_long
 11310 ;;		___set_short_poly_coefic
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           	psect	text58
 11315  009644                     __ptext58:
 11316                           	opt stack 0
 11317  009644                     ___enter_menu_poly_coeffic:
 11318                           	opt stack 24
 11319                           
 11320                           ;incstack = 0
 11321                           ;___enter_menu_poly_coeffic@__subMenu stored from wreg
 11322  009644  0100               	movlb	0	; () banked
 11323  009646  6F62               	movwf	___enter_menu_poly_coeffic@__subMenu& (0+255),b
 11324                           
 11325                           ;key_menu.c: 241: menu=0x70;
 11326  009648  0E70               	movlw	112
 11327  00964A  6E33               	movwf	_menu,c	;volatile
 11328                           
 11329                           ;key_menu.c: 242: subMenu=__subMenu;
 11330  00964C  C062  F032         	movff	___enter_menu_poly_coeffic@__subMenu,_subMenu	;volatile
 11331                           
 11332                           ;key_menu.c: 244: st_sysDataDef* fps= &stSysData;
 11333  009650  0E00               	movlw	low _stSysData
 11334  009652  0100               	movlb	0	; () banked
 11335  009654  6F63               	movwf	___enter_menu_poly_coeffic@fps& (0+255),b
 11336  009656  0E02               	movlw	high _stSysData
 11337  009658  0100               	movlb	0	; () banked
 11338  00965A  6F64               	movwf	(___enter_menu_poly_coeffic@fps+1)& (0+255),b
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;key_menu.c: 246: adjValue=(int32_t)(fps->ployCoeffic[subMenu]);
 11342  00965C  5032               	movf	_subMenu,w,c	;volatile
 11343  00965E  0D02               	mullw	2
 11344  009660  0E84               	movlw	132
 11345  009662  26F3               	addwf	prodl,f,c
 11346  009664  0E00               	movlw	0
 11347  009666  22F4               	addwfc	prodh,f,c
 11348  009668  50F3               	movf	prodl,w,c
 11349  00966A  0100               	movlb	0	; () banked
 11350  00966C  2563               	addwf	___enter_menu_poly_coeffic@fps& (0+255),w,b
 11351  00966E  6ED9               	movwf	fsr2l,c
 11352  009670  50F4               	movf	prodh,w,c
 11353  009672  0100               	movlb	0	; () banked
 11354  009674  2164               	addwfc	(___enter_menu_poly_coeffic@fps+1)& (0+255),w,b
 11355  009676  6EDA               	movwf	fsr2h,c
 11356  009678  CFDE F060          	movff	postinc2,??___enter_menu_poly_coeffic
 11357  00967C  CFDD F061          	movff	postdec2,??___enter_menu_poly_coeffic+1
 11358  009680  C060  F039         	movff	??___enter_menu_poly_coeffic,_adjValue	;volatile
 11359  009684  C061  F03A         	movff	??___enter_menu_poly_coeffic+1,_adjValue+1	;volatile
 11360  009688  6A3B               	clrf	_adjValue+2,c	;volatile
 11361  00968A  6A3C               	clrf	_adjValue+3,c	;volatile
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;key_menu.c: 247: adjLocation=0;
 11365  00968C  0E00               	movlw	0
 11366  00968E  6E3F               	movwf	_adjLocation,c	;volatile
 11367                           
 11368                           ; BSR set to: 0
 11369  009690  0012               	return		;funcret
 11370  009692                     __end_of___enter_menu_poly_coeffic:
 11371                           	opt stack 0
 11372                           tblptru	equ	0xFF8
 11373                           tblptrh	equ	0xFF7
 11374                           tblptrl	equ	0xFF6
 11375                           tablat	equ	0xFF5
 11376                           prodh	equ	0xFF4
 11377                           prodl	equ	0xFF3
 11378                           intcon	equ	0xFF2
 11379                           postinc0	equ	0xFEE
 11380                           wreg	equ	0xFE8
 11381                           indf1	equ	0xFE7
 11382                           postinc1	equ	0xFE6
 11383                           postdec1	equ	0xFE5
 11384                           plusw1	equ	0xFE3
 11385                           fsr1h	equ	0xFE2
 11386                           fsr1l	equ	0xFE1
 11387                           indf2	equ	0xFDF
 11388                           postinc2	equ	0xFDE
 11389                           postdec2	equ	0xFDD
 11390                           plusw2	equ	0xFDB
 11391                           fsr2h	equ	0xFDA
 11392                           fsr2l	equ	0xFD9
 11393                           status	equ	0xFD8
 11394                           
 11395 ;; *************** function ___set_short_epr_param *****************
 11396 ;; Defined at:
 11397 ;;		line 848 in file "src/api/key_menu.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  gohome          1    wreg     unsigned char 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  gohome          1    0[BANK3 ] unsigned char 
 11402 ;;  t32             4    1[BANK3 ] long 
 11403 ;;  p               3    0        PTR unsigned char 
 11404 ;;  stp             2    5[BANK3 ] PTR struct .
 11405 ;;		 -> stSysData(240), 
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  1    wreg      void 
 11408 ;; Registers used:
 11409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;Total ram usage:        7 bytes
 11420 ;; Hardware stack levels used:    1
 11421 ;; Hardware stack levels required when called:    8
 11422 ;; This function calls:
 11423 ;;		___enter_menu_epr_calib
 11424 ;;		___exit_menu_to_home_unsave
 11425 ;;		___mflot32_2_int32
 11426 ;;		___sys_data_save_write_flash
 11427 ;; This function is called by:
 11428 ;;		_key_process_set_long
 11429 ;;		_key_process_set
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text59
 11434  005480                     __ptext59:
 11435                           	opt stack 0
 11436  005480                     ___set_short_epr_param:
 11437                           	opt stack 20
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;incstack = 0
 11441                           ;___set_short_epr_param@gohome stored from wreg
 11442  005480  0103               	movlb	3	; () banked
 11443  005482  6FCA               	movwf	___set_short_epr_param@gohome& (0+255),b
 11444                           
 11445                           ;key_menu.c: 850: uint8_t* p;
 11446                           ;key_menu.c: 851: int32_t t32;
 11447                           ;key_menu.c: 854: st_sysDataDef* stp=&stSysData;
 11448  005484  0E00               	movlw	low _stSysData
 11449  005486  0103               	movlb	3	; () banked
 11450  005488  6FCF               	movwf	___set_short_epr_param@stp& (0+255),b
 11451  00548A  0E02               	movlw	high _stSysData
 11452  00548C  0103               	movlb	3	; () banked
 11453  00548E  6FD0               	movwf	(___set_short_epr_param@stp+1)& (0+255),b
 11454                           
 11455                           ; BSR set to: 3
 11456                           ;key_menu.c: 855: t32=__mflot32_2_int32(m_floatAdj.t32);
 11457  005490  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 11458  005494  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 11459  005498  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 11460  00549C  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 11461  0054A0  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
 11462  0054A4  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_epr_param@t32
 11463  0054A8  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_epr_param@t32+1
 11464  0054AC  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_epr_param@t32+2
 11465  0054B0  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_epr_param@t32+3
 11466                           
 11467                           ;key_menu.c: 856: switch(subMenu){
 11468  0054B4  D05C               	goto	l16132
 11469  0054B6                     l16122:
 11470  0054B6  0103               	movlb	3	; () banked
 11471  0054B8  EE20 F09C          	lfsr	2,156
 11472  0054BC  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11473  0054BE  26D9               	addwf	fsr2l,f,c
 11474  0054C0  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11475  0054C2  22DA               	addwfc	fsr2h,f,c
 11476  0054C4  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11477  0054C8  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11478  0054CC  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11479  0054D0  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11480  0054D4  0103               	movlb	3	; () banked
 11481  0054D6  EE20 F0A0          	lfsr	2,160
 11482  0054DA  D012               	goto	L4
 11483  0054DC                     l16124:
 11484  0054DC  0103               	movlb	3	; () banked
 11485  0054DE  EE20 F0A4          	lfsr	2,164
 11486  0054E2  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11487  0054E4  26D9               	addwf	fsr2l,f,c
 11488  0054E6  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11489  0054E8  22DA               	addwfc	fsr2h,f,c
 11490  0054EA  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11491  0054EE  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11492  0054F2  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11493  0054F6  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11494  0054FA  0103               	movlb	3	; () banked
 11495  0054FC  EE20 F0A8          	lfsr	2,168
 11496  005500                     L4:
 11497  005500  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11498  005502  26D9               	addwf	fsr2l,f,c
 11499  005504  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11500  005506  22DA               	addwfc	fsr2h,f,c
 11501  005508  C021  FFDE         	movff	_adc_iPrEx,postinc2	;volatile
 11502  00550C  C022  FFDD         	movff	_adc_iPrEx+1,postdec2	;volatile
 11503  005510  D03B               	goto	l16134
 11504  005512                     l16126:
 11505  005512  0103               	movlb	3	; () banked
 11506  005514  EE20 F0AC          	lfsr	2,172
 11507  005518  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11508  00551A  26D9               	addwf	fsr2l,f,c
 11509  00551C  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11510  00551E  22DA               	addwfc	fsr2h,f,c
 11511  005520  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11512  005524  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11513  005528  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11514  00552C  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11515  005530  0103               	movlb	3	; () banked
 11516  005532  EE20 F0B0          	lfsr	2,176
 11517  005536  D012               	goto	L5
 11518  005538                     l16128:
 11519  005538  0103               	movlb	3	; () banked
 11520  00553A  EE20 F0B4          	lfsr	2,180
 11521  00553E  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11522  005540  26D9               	addwf	fsr2l,f,c
 11523  005542  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11524  005544  22DA               	addwfc	fsr2h,f,c
 11525  005546  C3CB  FFDE         	movff	___set_short_epr_param@t32,postinc2
 11526  00554A  C3CC  FFDE         	movff	___set_short_epr_param@t32+1,postinc2
 11527  00554E  C3CD  FFDE         	movff	___set_short_epr_param@t32+2,postinc2
 11528  005552  C3CE  FFDE         	movff	___set_short_epr_param@t32+3,postinc2
 11529  005556  0103               	movlb	3	; () banked
 11530  005558  EE20 F0B8          	lfsr	2,184
 11531  00555C                     L5:
 11532  00555C  51CF               	movf	___set_short_epr_param@stp& (0+255),w,b
 11533  00555E  26D9               	addwf	fsr2l,f,c
 11534  005560  51D0               	movf	(___set_short_epr_param@stp+1)& (0+255),w,b
 11535  005562  22DA               	addwfc	fsr2h,f,c
 11536  005564  C023  FFDE         	movff	_adc_iPrEx+2,postinc2	;volatile
 11537  005568  C024  FFDD         	movff	_adc_iPrEx+3,postdec2	;volatile
 11538                           
 11539                           ; BSR set to: 3
 11540                           ;key_menu.c: 862: }
 11541                           
 11542                           ; BSR set to: 3
 11543                           
 11544                           ;key_menu.c: 861: default:break;
 11545  00556C  D00D               	goto	l16134
 11546  00556E                     l16132:
 11547  00556E  5032               	movf	_subMenu,w,c	;volatile
 11548                           
 11549                           ; Switch size 1, requested type "space"
 11550                           ; Number of cases is 4, Range of values is 0 to 3
 11551                           ; switch strategies available:
 11552                           ; Name         Instructions Cycles
 11553                           ; simple_byte           13     7 (average)
 11554                           ;	Chosen strategy is simple_byte
 11555  005570  0A00               	xorlw	0	; case 0
 11556  005572  B4D8               	btfsc	status,2,c
 11557  005574  D7A0               	goto	l16122
 11558  005576  0A01               	xorlw	1	; case 1
 11559  005578  B4D8               	btfsc	status,2,c
 11560  00557A  D7B0               	goto	l16124
 11561  00557C  0A03               	xorlw	3	; case 2
 11562  00557E  B4D8               	btfsc	status,2,c
 11563  005580  D7C8               	goto	l16126
 11564  005582  0A01               	xorlw	1	; case 3
 11565  005584  B4D8               	btfsc	status,2,c
 11566  005586  D7D8               	goto	l16128
 11567  005588                     l16134:
 11568                           
 11569                           ;key_menu.c: 863: __sys_data_save_write_flash();
 11570  005588  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
 11571                           
 11572                           ;key_menu.c: 865: if(gohome){__exit_menu_to_home_unsave(); return;}
 11573  00558C  0103               	movlb	3	; () banked
 11574  00558E  51CA               	movf	___set_short_epr_param@gohome& (0+255),w,b
 11575  005590  0103               	movlb	3	; () banked
 11576  005592  B4D8               	btfsc	status,2,c
 11577  005594  D003               	goto	l16142
 11578                           
 11579                           ; BSR set to: 3
 11580  005596  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 11581  00559A  0012               	return	
 11582  00559C                     l16142:
 11583                           
 11584                           ;key_menu.c: 867: subMenu++;
 11585  00559C  2A32               	incf	_subMenu,f,c	;volatile
 11586                           
 11587                           ;key_menu.c: 868: if(subMenu>0x03)subMenu=0x00;
 11588  00559E  0E03               	movlw	3
 11589  0055A0  6432               	cpfsgt	_subMenu,c	;volatile
 11590  0055A2  D002               	goto	l16148
 11591  0055A4  0E00               	movlw	0
 11592  0055A6  6E32               	movwf	_subMenu,c	;volatile
 11593  0055A8                     l16148:
 11594                           
 11595                           ;key_menu.c: 869: __enter_menu_epr_calib(subMenu);
 11596  0055A8  5032               	movf	_subMenu,w,c	;volatile
 11597  0055AA  ECC8  F03B         	call	___enter_menu_epr_calib
 11598  0055AE  0012               	return		;funcret
 11599  0055B0                     __end_of___set_short_epr_param:
 11600                           	opt stack 0
 11601                           tblptru	equ	0xFF8
 11602                           tblptrh	equ	0xFF7
 11603                           tblptrl	equ	0xFF6
 11604                           tablat	equ	0xFF5
 11605                           prodh	equ	0xFF4
 11606                           prodl	equ	0xFF3
 11607                           intcon	equ	0xFF2
 11608                           postinc0	equ	0xFEE
 11609                           wreg	equ	0xFE8
 11610                           indf1	equ	0xFE7
 11611                           postinc1	equ	0xFE6
 11612                           postdec1	equ	0xFE5
 11613                           plusw1	equ	0xFE3
 11614                           fsr1h	equ	0xFE2
 11615                           fsr1l	equ	0xFE1
 11616                           indf2	equ	0xFDF
 11617                           postinc2	equ	0xFDE
 11618                           postdec2	equ	0xFDD
 11619                           plusw2	equ	0xFDB
 11620                           fsr2h	equ	0xFDA
 11621                           fsr2l	equ	0xFD9
 11622                           status	equ	0xFD8
 11623                           
 11624 ;; *************** function ___enter_menu_epr_calib *****************
 11625 ;; Defined at:
 11626 ;;		line 289 in file "src/api/key_menu.c"
 11627 ;; Parameters:    Size  Location     Type
 11628 ;;  __subMenu       1    wreg     unsigned char 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;  __subMenu       1   29[BANK0 ] unsigned char 
 11631 ;;  t32             4   30[BANK0 ] long 
 11632 ;;  fps             2   34[BANK0 ] PTR struct .
 11633 ;;		 -> stSysData(240), 
 11634 ;; Return value:  Size  Location     Type
 11635 ;;                  1    wreg      void 
 11636 ;; Registers used:
 11637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11638 ;; Tracked objects:
 11639 ;;		On entry : 0/0
 11640 ;;		On exit  : 0/0
 11641 ;;		Unchanged: 0/0
 11642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;Total ram usage:        7 bytes
 11648 ;; Hardware stack levels used:    1
 11649 ;; Hardware stack levels required when called:    6
 11650 ;; This function calls:
 11651 ;;		___int32_2_mflot32
 11652 ;; This function is called by:
 11653 ;;		_key_process_set_up_long
 11654 ;;		___set_short_epr_param
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           	psect	text60
 11659  007790                     __ptext60:
 11660                           	opt stack 0
 11661  007790                     ___enter_menu_epr_calib:
 11662                           	opt stack 22
 11663                           
 11664                           ;incstack = 0
 11665                           ;___enter_menu_epr_calib@__subMenu stored from wreg
 11666  007790  0100               	movlb	0	; () banked
 11667  007792  6F7D               	movwf	___enter_menu_epr_calib@__subMenu& (0+255),b
 11668                           
 11669                           ;key_menu.c: 291: int32_t t32;
 11670                           ;key_menu.c: 292: menu=0xa0;
 11671  007794  0EA0               	movlw	160
 11672  007796  6E33               	movwf	_menu,c	;volatile
 11673                           
 11674                           ;key_menu.c: 293: subMenu=__subMenu;
 11675  007798  C07D  F032         	movff	___enter_menu_epr_calib@__subMenu,_subMenu	;volatile
 11676                           
 11677                           ;key_menu.c: 296: st_sysDataDef* fps= &stSysData;
 11678  00779C  0E00               	movlw	low _stSysData
 11679  00779E  0100               	movlb	0	; () banked
 11680  0077A0  6F82               	movwf	___enter_menu_epr_calib@fps& (0+255),b
 11681  0077A2  0E02               	movlw	high _stSysData
 11682  0077A4  0100               	movlb	0	; () banked
 11683  0077A6  6F83               	movwf	(___enter_menu_epr_calib@fps+1)& (0+255),b
 11684                           
 11685                           ;key_menu.c: 297: switch(subMenu){
 11686  0077A8  D01C               	goto	l15256
 11687  0077AA                     l15246:
 11688                           
 11689                           ; BSR set to: 0
 11690  0077AA  0100               	movlb	0	; () banked
 11691  0077AC  EE20 F09C          	lfsr	2,156
 11692  0077B0  D00B               	goto	L8
 11693  0077B2                     l15248:
 11694                           
 11695                           ; BSR set to: 0
 11696  0077B2  0100               	movlb	0	; () banked
 11697  0077B4  EE20 F0A4          	lfsr	2,164
 11698  0077B8  D007               	goto	L8
 11699  0077BA                     l15250:
 11700                           
 11701                           ; BSR set to: 0
 11702  0077BA  0100               	movlb	0	; () banked
 11703  0077BC  EE20 F0AC          	lfsr	2,172
 11704  0077C0  D003               	goto	L8
 11705  0077C2                     l15252:
 11706                           
 11707                           ; BSR set to: 0
 11708  0077C2  0100               	movlb	0	; () banked
 11709  0077C4  EE20 F0B4          	lfsr	2,180
 11710  0077C8                     L8:
 11711  0077C8  5182               	movf	___enter_menu_epr_calib@fps& (0+255),w,b
 11712  0077CA  26D9               	addwf	fsr2l,f,c
 11713  0077CC  5183               	movf	(___enter_menu_epr_calib@fps+1)& (0+255),w,b
 11714  0077CE  22DA               	addwfc	fsr2h,f,c
 11715  0077D0  CFDE F07E          	movff	postinc2,___enter_menu_epr_calib@t32
 11716  0077D4  CFDE F07F          	movff	postinc2,___enter_menu_epr_calib@t32+1
 11717  0077D8  CFDE F080          	movff	postinc2,___enter_menu_epr_calib@t32+2
 11718  0077DC  CFDE F081          	movff	postinc2,___enter_menu_epr_calib@t32+3
 11719  0077E0  D00E               	goto	l15258
 11720  0077E2                     l15256:
 11721                           
 11722                           ; BSR set to: 0
 11723  0077E2  5032               	movf	_subMenu,w,c	;volatile
 11724                           
 11725                           ; Switch size 1, requested type "space"
 11726                           ; Number of cases is 4, Range of values is 0 to 3
 11727                           ; switch strategies available:
 11728                           ; Name         Instructions Cycles
 11729                           ; simple_byte           13     7 (average)
 11730                           ;	Chosen strategy is simple_byte
 11731  0077E4  0A00               	xorlw	0	; case 0
 11732  0077E6  B4D8               	btfsc	status,2,c
 11733  0077E8  D7E0               	goto	l15246
 11734  0077EA  0A01               	xorlw	1	; case 1
 11735  0077EC  B4D8               	btfsc	status,2,c
 11736  0077EE  D7E1               	goto	l15248
 11737  0077F0  0A03               	xorlw	3	; case 2
 11738  0077F2  B4D8               	btfsc	status,2,c
 11739  0077F4  D7E2               	goto	l15250
 11740  0077F6  0A01               	xorlw	1	; case 3
 11741  0077F8  A4D8               	btfss	status,2,c
 11742  0077FA  0012               	return	
 11743  0077FC  D7E2               	goto	l15252
 11744  0077FE                     l15258:
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;key_menu.c: 305: t32=__int32_2_mflot32(t32);
 11748  0077FE  C07E  F06D         	movff	___enter_menu_epr_calib@t32,___int32_2_mflot32@x
 11749  007802  C07F  F06E         	movff	___enter_menu_epr_calib@t32+1,___int32_2_mflot32@x+1
 11750  007806  C080  F06F         	movff	___enter_menu_epr_calib@t32+2,___int32_2_mflot32@x+2
 11751  00780A  C081  F070         	movff	___enter_menu_epr_calib@t32+3,___int32_2_mflot32@x+3
 11752  00780E  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 11753  007812  C06D  F07E         	movff	?___int32_2_mflot32,___enter_menu_epr_calib@t32
 11754  007816  C06E  F07F         	movff	?___int32_2_mflot32+1,___enter_menu_epr_calib@t32+1
 11755  00781A  C06F  F080         	movff	?___int32_2_mflot32+2,___enter_menu_epr_calib@t32+2
 11756  00781E  C070  F081         	movff	?___int32_2_mflot32+3,___enter_menu_epr_calib@t32+3
 11757                           
 11758                           ;key_menu.c: 306: m_floatAdj.t32=t32;
 11759  007822  C07E  F035         	movff	___enter_menu_epr_calib@t32,_m_floatAdj
 11760  007826  C07F  F036         	movff	___enter_menu_epr_calib@t32+1,_m_floatAdj+1
 11761  00782A  C080  F037         	movff	___enter_menu_epr_calib@t32+2,_m_floatAdj+2
 11762  00782E  C081  F038         	movff	___enter_menu_epr_calib@t32+3,_m_floatAdj+3
 11763                           
 11764                           ;key_menu.c: 307: adjLocation=0;
 11765  007832  0E00               	movlw	0
 11766  007834  6E3F               	movwf	_adjLocation,c	;volatile
 11767  007836  0012               	return		;funcret
 11768  007838                     __end_of___enter_menu_epr_calib:
 11769                           	opt stack 0
 11770                           tblptru	equ	0xFF8
 11771                           tblptrh	equ	0xFF7
 11772                           tblptrl	equ	0xFF6
 11773                           tablat	equ	0xFF5
 11774                           prodh	equ	0xFF4
 11775                           prodl	equ	0xFF3
 11776                           intcon	equ	0xFF2
 11777                           postinc0	equ	0xFEE
 11778                           wreg	equ	0xFE8
 11779                           indf1	equ	0xFE7
 11780                           postinc1	equ	0xFE6
 11781                           postdec1	equ	0xFE5
 11782                           plusw1	equ	0xFE3
 11783                           fsr1h	equ	0xFE2
 11784                           fsr1l	equ	0xFE1
 11785                           indf2	equ	0xFDF
 11786                           postinc2	equ	0xFDE
 11787                           postdec2	equ	0xFDD
 11788                           plusw2	equ	0xFDB
 11789                           fsr2h	equ	0xFDA
 11790                           fsr2l	equ	0xFD9
 11791                           status	equ	0xFD8
 11792                           
 11793 ;; *************** function ___set_short_epr_ilp_scale *****************
 11794 ;; Defined at:
 11795 ;;		line 872 in file "src/api/key_menu.c"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;  gohome          1    wreg     unsigned char 
 11798 ;; Auto vars:     Size  Location     Type
 11799 ;;  gohome          1    0[BANK3 ] unsigned char 
 11800 ;;  t32             4    1[BANK3 ] long 
 11801 ;;  p               3    0        PTR unsigned char 
 11802 ;;  stp             2    5[BANK3 ] PTR struct .
 11803 ;;		 -> stSysData(240), 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;Total ram usage:        7 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:    8
 11820 ;; This function calls:
 11821 ;;		___enter_menu_epr_ilp_scale
 11822 ;;		___exit_menu_to_home_unsave
 11823 ;;		___mflot32_2_int32
 11824 ;;		___sys_data_save_write_flash
 11825 ;; This function is called by:
 11826 ;;		_key_process_set_long
 11827 ;;		_key_process_set
 11828 ;; This function uses a non-reentrant model
 11829 ;;
 11830                           
 11831                           	psect	text61
 11832  007584                     __ptext61:
 11833                           	opt stack 0
 11834  007584                     ___set_short_epr_ilp_scale:
 11835                           	opt stack 20
 11836                           
 11837                           ;incstack = 0
 11838                           ;___set_short_epr_ilp_scale@gohome stored from wreg
 11839  007584  0103               	movlb	3	; () banked
 11840  007586  6FCA               	movwf	___set_short_epr_ilp_scale@gohome& (0+255),b
 11841                           
 11842                           ;key_menu.c: 874: uint8_t* p;
 11843                           ;key_menu.c: 875: int32_t t32;
 11844                           ;key_menu.c: 878: st_sysDataDef* stp=&stSysData;
 11845  007588  0E00               	movlw	low _stSysData
 11846  00758A  0103               	movlb	3	; () banked
 11847  00758C  6FCF               	movwf	___set_short_epr_ilp_scale@stp& (0+255),b
 11848  00758E  0E02               	movlw	high _stSysData
 11849  007590  0103               	movlb	3	; () banked
 11850  007592  6FD0               	movwf	(___set_short_epr_ilp_scale@stp+1)& (0+255),b
 11851                           
 11852                           ; BSR set to: 3
 11853                           ;key_menu.c: 879: t32=__mflot32_2_int32(m_floatAdj.t32);
 11854  007594  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 11855  007598  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 11856  00759C  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 11857  0075A0  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 11858  0075A4  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
 11859  0075A8  C06C  F3CB         	movff	?___mflot32_2_int32,___set_short_epr_ilp_scale@t32
 11860  0075AC  C06D  F3CC         	movff	?___mflot32_2_int32+1,___set_short_epr_ilp_scale@t32+1
 11861  0075B0  C06E  F3CD         	movff	?___mflot32_2_int32+2,___set_short_epr_ilp_scale@t32+2
 11862  0075B4  C06F  F3CE         	movff	?___mflot32_2_int32+3,___set_short_epr_ilp_scale@t32+3
 11863                           
 11864                           ;key_menu.c: 880: switch(subMenu){
 11865  0075B8  D01C               	goto	l16164
 11866  0075BA                     l16154:
 11867  0075BA  0103               	movlb	3	; () banked
 11868  0075BC  EE20 F0DC          	lfsr	2,220
 11869  0075C0  D00B               	goto	L11
 11870  0075C2                     l16156:
 11871  0075C2  0103               	movlb	3	; () banked
 11872  0075C4  EE20 F0E0          	lfsr	2,224
 11873  0075C8  D007               	goto	L11
 11874  0075CA                     l16158:
 11875  0075CA  0103               	movlb	3	; () banked
 11876  0075CC  EE20 F0E4          	lfsr	2,228
 11877  0075D0  D003               	goto	L11
 11878  0075D2                     l16160:
 11879  0075D2  0103               	movlb	3	; () banked
 11880  0075D4  EE20 F0E8          	lfsr	2,232
 11881  0075D8                     L11:
 11882  0075D8  51CF               	movf	___set_short_epr_ilp_scale@stp& (0+255),w,b
 11883  0075DA  26D9               	addwf	fsr2l,f,c
 11884  0075DC  51D0               	movf	(___set_short_epr_ilp_scale@stp+1)& (0+255),w,b
 11885  0075DE  22DA               	addwfc	fsr2h,f,c
 11886  0075E0  C3CB  FFDE         	movff	___set_short_epr_ilp_scale@t32,postinc2
 11887  0075E4  C3CC  FFDE         	movff	___set_short_epr_ilp_scale@t32+1,postinc2
 11888  0075E8  C3CD  FFDE         	movff	___set_short_epr_ilp_scale@t32+2,postinc2
 11889  0075EC  C3CE  FFDE         	movff	___set_short_epr_ilp_scale@t32+3,postinc2
 11890                           
 11891                           ; BSR set to: 3
 11892                           ;key_menu.c: 886: }
 11893                           
 11894                           ; BSR set to: 3
 11895                           
 11896                           ;key_menu.c: 885: default:break;
 11897  0075F0  D00D               	goto	l16166
 11898  0075F2                     l16164:
 11899  0075F2  5032               	movf	_subMenu,w,c	;volatile
 11900                           
 11901                           ; Switch size 1, requested type "space"
 11902                           ; Number of cases is 4, Range of values is 0 to 3
 11903                           ; switch strategies available:
 11904                           ; Name         Instructions Cycles
 11905                           ; simple_byte           13     7 (average)
 11906                           ;	Chosen strategy is simple_byte
 11907  0075F4  0A00               	xorlw	0	; case 0
 11908  0075F6  B4D8               	btfsc	status,2,c
 11909  0075F8  D7E0               	goto	l16154
 11910  0075FA  0A01               	xorlw	1	; case 1
 11911  0075FC  B4D8               	btfsc	status,2,c
 11912  0075FE  D7E1               	goto	l16156
 11913  007600  0A03               	xorlw	3	; case 2
 11914  007602  B4D8               	btfsc	status,2,c
 11915  007604  D7E2               	goto	l16158
 11916  007606  0A01               	xorlw	1	; case 3
 11917  007608  B4D8               	btfsc	status,2,c
 11918  00760A  D7E3               	goto	l16160
 11919  00760C                     l16166:
 11920                           
 11921                           ;key_menu.c: 887: __sys_data_save_write_flash();
 11922  00760C  ECD6  F030         	call	___sys_data_save_write_flash	;wreg free
 11923                           
 11924                           ;key_menu.c: 889: if(gohome){__exit_menu_to_home_unsave(); return;}
 11925  007610  0103               	movlb	3	; () banked
 11926  007612  51CA               	movf	___set_short_epr_ilp_scale@gohome& (0+255),w,b
 11927  007614  0103               	movlb	3	; () banked
 11928  007616  B4D8               	btfsc	status,2,c
 11929  007618  D003               	goto	l16174
 11930                           
 11931                           ; BSR set to: 3
 11932  00761A  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 11933  00761E  0012               	return	
 11934  007620                     l16174:
 11935                           
 11936                           ;key_menu.c: 891: subMenu++;
 11937  007620  2A32               	incf	_subMenu,f,c	;volatile
 11938                           
 11939                           ;key_menu.c: 892: if(subMenu>0x03)subMenu=0x00;
 11940  007622  0E03               	movlw	3
 11941  007624  6432               	cpfsgt	_subMenu,c	;volatile
 11942  007626  D002               	goto	l16180
 11943  007628  0E00               	movlw	0
 11944  00762A  6E32               	movwf	_subMenu,c	;volatile
 11945  00762C                     l16180:
 11946                           
 11947                           ;key_menu.c: 893: __enter_menu_epr_ilp_scale(subMenu);
 11948  00762C  5032               	movf	_subMenu,w,c	;volatile
 11949  00762E  ECAD  F039         	call	___enter_menu_epr_ilp_scale
 11950  007632  0012               	return		;funcret
 11951  007634                     __end_of___set_short_epr_ilp_scale:
 11952                           	opt stack 0
 11953                           tblptru	equ	0xFF8
 11954                           tblptrh	equ	0xFF7
 11955                           tblptrl	equ	0xFF6
 11956                           tablat	equ	0xFF5
 11957                           prodh	equ	0xFF4
 11958                           prodl	equ	0xFF3
 11959                           intcon	equ	0xFF2
 11960                           postinc0	equ	0xFEE
 11961                           wreg	equ	0xFE8
 11962                           indf1	equ	0xFE7
 11963                           postinc1	equ	0xFE6
 11964                           postdec1	equ	0xFE5
 11965                           plusw1	equ	0xFE3
 11966                           fsr1h	equ	0xFE2
 11967                           fsr1l	equ	0xFE1
 11968                           indf2	equ	0xFDF
 11969                           postinc2	equ	0xFDE
 11970                           postdec2	equ	0xFDD
 11971                           plusw2	equ	0xFDB
 11972                           fsr2h	equ	0xFDA
 11973                           fsr2l	equ	0xFD9
 11974                           status	equ	0xFD8
 11975                           
 11976 ;; *************** function ___sys_data_save_write_flash *****************
 11977 ;; Defined at:
 11978 ;;		line 648 in file "src/api/key_menu.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;  buf             2  129[BANK0 ] PTR unsigned char 
 11983 ;;		 -> stSysData(240), 
 11984 ;;  stp             2  127[BANK0 ] PTR struct .
 11985 ;;		 -> stSysData(240), 
 11986 ;;  ret             1  126[BANK0 ] unsigned char 
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      unsigned char 
 11989 ;; Registers used:
 11990 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12000 ;;Total ram usage:        5 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    7
 12003 ;; This function calls:
 12004 ;;		_crc_append
 12005 ;;		_crc_verify
 12006 ;;		_data_sys_cal_v1
 12007 ;;		_data_sys_cal_v2
 12008 ;;		_m_flash_read
 12009 ;;		_m_flash_write
 12010 ;; This function is called by:
 12011 ;;		___set_short_pose_size
 12012 ;;		___set_short_poly_coefic
 12013 ;;		___set_short_warn_type
 12014 ;;		___set_short_warn_value
 12015 ;;		___set_short_epr_param
 12016 ;;		___set_short_epr_ilp_scale
 12017 ;;		___set_long_density
 12018 ;;		___set_long_base_zero
 12019 ;;		___set_long_bar_level_scale
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text62
 12024  0061AC                     __ptext62:
 12025                           	opt stack 0
 12026  0061AC                     ___sys_data_save_write_flash:
 12027                           	opt stack 20
 12028                           
 12029                           ;key_menu.c: 650: uint8_t ret=0;
 12030                           
 12031                           ;incstack = 0
 12032  0061AC  0E00               	movlw	0
 12033  0061AE  0100               	movlb	0	; () banked
 12034  0061B0  6FDE               	movwf	___sys_data_save_write_flash@ret& (0+255),b
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;key_menu.c: 653: st_sysDataDef* stp=&stSysData;
 12038  0061B2  0E00               	movlw	low _stSysData
 12039  0061B4  0100               	movlb	0	; () banked
 12040  0061B6  6FDF               	movwf	___sys_data_save_write_flash@stp& (0+255),b
 12041  0061B8  0E02               	movlw	high _stSysData
 12042  0061BA  0100               	movlb	0	; () banked
 12043  0061BC  6FE0               	movwf	(___sys_data_save_write_flash@stp+1)& (0+255),b
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;key_menu.c: 654: uint8_t* buf=(uint8_t*)(&stSysData);
 12047  0061BE  0E00               	movlw	low _stSysData
 12048  0061C0  0100               	movlb	0	; () banked
 12049  0061C2  6FE1               	movwf	___sys_data_save_write_flash@buf& (0+255),b
 12050  0061C4  0E02               	movlw	high _stSysData
 12051  0061C6  0100               	movlb	0	; () banked
 12052  0061C8  6FE2               	movwf	(___sys_data_save_write_flash@buf+1)& (0+255),b
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;key_menu.c: 655: stp->V1=data_sys_cal_v1(stp);
 12056  0061CA  C0DF  F0C2         	movff	___sys_data_save_write_flash@stp,data_sys_cal_v1@stp
 12057  0061CE  C0E0  F0C3         	movff	___sys_data_save_write_flash@stp+1,data_sys_cal_v1@stp+1
 12058  0061D2  EC15  F01C         	call	_data_sys_cal_v1	;wreg free
 12059  0061D6  0100               	movlb	0	; () banked
 12060  0061D8  EE20 F010          	lfsr	2,16
 12061  0061DC  51DF               	movf	___sys_data_save_write_flash@stp& (0+255),w,b
 12062  0061DE  26D9               	addwf	fsr2l,f,c
 12063  0061E0  51E0               	movf	(___sys_data_save_write_flash@stp+1)& (0+255),w,b
 12064  0061E2  22DA               	addwfc	fsr2h,f,c
 12065  0061E4  0100               	movlb	0	; () banked
 12066  0061E6  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 12067  0061EA  0100               	movlb	0	; () banked
 12068  0061EC  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 12069  0061F0  0100               	movlb	0	; () banked
 12070  0061F2  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 12071  0061F6  0100               	movlb	0	; () banked
 12072  0061F8  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;key_menu.c: 656: stp->V2=data_sys_cal_v2(stp);
 12076  0061FC  C0DF  F0C2         	movff	___sys_data_save_write_flash@stp,data_sys_cal_v2@stp
 12077  006200  C0E0  F0C3         	movff	___sys_data_save_write_flash@stp+1,data_sys_cal_v2@stp+1
 12078  006204  ECFB  F026         	call	_data_sys_cal_v2	;wreg free
 12079  006208  0100               	movlb	0	; () banked
 12080  00620A  EE20 F014          	lfsr	2,20
 12081  00620E  51DF               	movf	___sys_data_save_write_flash@stp& (0+255),w,b
 12082  006210  26D9               	addwf	fsr2l,f,c
 12083  006212  51E0               	movf	(___sys_data_save_write_flash@stp+1)& (0+255),w,b
 12084  006214  22DA               	addwfc	fsr2h,f,c
 12085  006216  0100               	movlb	0	; () banked
 12086  006218  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 12087  00621C  0100               	movlb	0	; () banked
 12088  00621E  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 12089  006222  0100               	movlb	0	; () banked
 12090  006224  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 12091  006228  0100               	movlb	0	; () banked
 12092  00622A  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;key_menu.c: 657: crc_append(buf,sizeof(st_sysDataDef)-2);
 12096  00622E  C0E1  F06C         	movff	___sys_data_save_write_flash@buf,crc_append@message
 12097  006232  C0E2  F06D         	movff	___sys_data_save_write_flash@buf+1,crc_append@message+1
 12098  006236  0E00               	movlw	0
 12099  006238  0100               	movlb	0	; () banked
 12100  00623A  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 12101  00623C  0EEE               	movlw	238
 12102  00623E  6F6E               	movwf	crc_append@n& (0+255),b
 12103  006240  EC65  F047         	call	_crc_append	;wreg free
 12104                           
 12105                           ;key_menu.c: 658: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 12106  006244  0E00               	movlw	0
 12107  006246  0100               	movlb	0	; () banked
 12108  006248  6F6E               	movwf	m_flash_write@addr& (0+255),b
 12109  00624A  0EF4               	movlw	244
 12110  00624C  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 12111  00624E  0E00               	movlw	0
 12112  006250  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 12113  006252  0E00               	movlw	0
 12114  006254  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 12115  006256  C0E1  F072         	movff	___sys_data_save_write_flash@buf,m_flash_write@buf
 12116  00625A  C0E2  F073         	movff	___sys_data_save_write_flash@buf+1,m_flash_write@buf+1
 12117  00625E  0E00               	movlw	0
 12118  006260  0100               	movlb	0	; () banked
 12119  006262  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 12120  006264  0EF0               	movlw	240
 12121  006266  6F74               	movwf	m_flash_write@len& (0+255),b
 12122  006268  ECA5  F029         	call	_m_flash_write	;wreg free
 12123                           
 12124                           ;key_menu.c: 659: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 12125  00626C  0E00               	movlw	0
 12126  00626E  0100               	movlb	0	; () banked
 12127  006270  6F60               	movwf	m_flash_read@addr& (0+255),b
 12128  006272  0EF4               	movlw	244
 12129  006274  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 12130  006276  0E00               	movlw	0
 12131  006278  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 12132  00627A  0E00               	movlw	0
 12133  00627C  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 12134  00627E  C0E1  F064         	movff	___sys_data_save_write_flash@buf,m_flash_read@buf
 12135  006282  C0E2  F065         	movff	___sys_data_save_write_flash@buf+1,m_flash_read@buf+1
 12136  006286  0E00               	movlw	0
 12137  006288  0100               	movlb	0	; () banked
 12138  00628A  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 12139  00628C  0EF0               	movlw	240
 12140  00628E  6F66               	movwf	m_flash_read@len& (0+255),b
 12141  006290  EC2B  F042         	call	_m_flash_read	;wreg free
 12142                           
 12143                           ;key_menu.c: 660: ret=crc_verify(buf,sizeof(st_sysDataDef));
 12144  006294  C0E1  F06C         	movff	___sys_data_save_write_flash@buf,crc_verify@message
 12145  006298  C0E2  F06D         	movff	___sys_data_save_write_flash@buf+1,crc_verify@message+1
 12146  00629C  0E00               	movlw	0
 12147  00629E  0100               	movlb	0	; () banked
 12148  0062A0  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 12149  0062A2  0EF0               	movlw	240
 12150  0062A4  6F6E               	movwf	crc_verify@n& (0+255),b
 12151  0062A6  EC21  F041         	call	_crc_verify	;wreg free
 12152  0062AA  0100               	movlb	0	; () banked
 12153  0062AC  6FDE               	movwf	___sys_data_save_write_flash@ret& (0+255),b
 12154  0062AE  0012               	return	
 12155  0062B0                     __end_of___sys_data_save_write_flash:
 12156                           	opt stack 0
 12157                           tblptru	equ	0xFF8
 12158                           tblptrh	equ	0xFF7
 12159                           tblptrl	equ	0xFF6
 12160                           tablat	equ	0xFF5
 12161                           prodh	equ	0xFF4
 12162                           prodl	equ	0xFF3
 12163                           intcon	equ	0xFF2
 12164                           postinc0	equ	0xFEE
 12165                           wreg	equ	0xFE8
 12166                           indf1	equ	0xFE7
 12167                           postinc1	equ	0xFE6
 12168                           postdec1	equ	0xFE5
 12169                           plusw1	equ	0xFE3
 12170                           fsr1h	equ	0xFE2
 12171                           fsr1l	equ	0xFE1
 12172                           indf2	equ	0xFDF
 12173                           postinc2	equ	0xFDE
 12174                           postdec2	equ	0xFDD
 12175                           plusw2	equ	0xFDB
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function ___enter_menu_epr_ilp_scale *****************
 12181 ;; Defined at:
 12182 ;;		line 310 in file "src/api/key_menu.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  __subMenu       1    wreg     unsigned char 
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  __subMenu       1   29[BANK0 ] unsigned char 
 12187 ;;  t32             4   30[BANK0 ] long 
 12188 ;;  fps             2   34[BANK0 ] PTR struct .
 12189 ;;		 -> stSysData(240), 
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  1    wreg      void 
 12192 ;; Registers used:
 12193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12200 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12202 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12203 ;;Total ram usage:        7 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:    6
 12206 ;; This function calls:
 12207 ;;		___int32_2_mflot32
 12208 ;; This function is called by:
 12209 ;;		_key_process_set_up_long
 12210 ;;		___set_short_epr_ilp_scale
 12211 ;; This function uses a non-reentrant model
 12212 ;;
 12213                           
 12214                           	psect	text63
 12215  00735A                     __ptext63:
 12216                           	opt stack 0
 12217  00735A                     ___enter_menu_epr_ilp_scale:
 12218                           	opt stack 22
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;incstack = 0
 12222                           ;___enter_menu_epr_ilp_scale@__subMenu stored from wreg
 12223  00735A  0100               	movlb	0	; () banked
 12224  00735C  6F7D               	movwf	___enter_menu_epr_ilp_scale@__subMenu& (0+255),b
 12225                           
 12226                           ;key_menu.c: 312: menu=0xb0;
 12227  00735E  0EB0               	movlw	176
 12228  007360  6E33               	movwf	_menu,c	;volatile
 12229                           
 12230                           ;key_menu.c: 313: subMenu=__subMenu;
 12231  007362  C07D  F032         	movff	___enter_menu_epr_ilp_scale@__subMenu,_subMenu	;volatile
 12232                           
 12233                           ;key_menu.c: 314: int32_t t32=0;
 12234  007366  0E00               	movlw	0
 12235  007368  0100               	movlb	0	; () banked
 12236  00736A  6F7E               	movwf	___enter_menu_epr_ilp_scale@t32& (0+255),b
 12237  00736C  0E00               	movlw	0
 12238  00736E  6F7F               	movwf	(___enter_menu_epr_ilp_scale@t32+1)& (0+255),b
 12239  007370  0E00               	movlw	0
 12240  007372  6F80               	movwf	(___enter_menu_epr_ilp_scale@t32+2)& (0+255),b
 12241  007374  0E00               	movlw	0
 12242  007376  6F81               	movwf	(___enter_menu_epr_ilp_scale@t32+3)& (0+255),b
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;key_menu.c: 317: st_sysDataDef* fps= &stSysData;
 12246  007378  0E00               	movlw	low _stSysData
 12247  00737A  0100               	movlb	0	; () banked
 12248  00737C  6F82               	movwf	___enter_menu_epr_ilp_scale@fps& (0+255),b
 12249  00737E  0E02               	movlw	high _stSysData
 12250  007380  0100               	movlb	0	; () banked
 12251  007382  6F83               	movwf	(___enter_menu_epr_ilp_scale@fps+1)& (0+255),b
 12252                           
 12253                           ;key_menu.c: 318: switch(subMenu)
 12254  007384  D01C               	goto	l15282
 12255  007386                     l15272:
 12256                           
 12257                           ; BSR set to: 0
 12258  007386  0100               	movlb	0	; () banked
 12259  007388  EE20 F0DC          	lfsr	2,220
 12260  00738C  D00B               	goto	L14
 12261  00738E                     l15274:
 12262                           
 12263                           ; BSR set to: 0
 12264  00738E  0100               	movlb	0	; () banked
 12265  007390  EE20 F0E0          	lfsr	2,224
 12266  007394  D007               	goto	L14
 12267  007396                     l15276:
 12268                           
 12269                           ; BSR set to: 0
 12270  007396  0100               	movlb	0	; () banked
 12271  007398  EE20 F0E4          	lfsr	2,228
 12272  00739C  D003               	goto	L14
 12273  00739E                     l15278:
 12274                           
 12275                           ; BSR set to: 0
 12276  00739E  0100               	movlb	0	; () banked
 12277  0073A0  EE20 F0E8          	lfsr	2,232
 12278  0073A4                     L14:
 12279  0073A4  5182               	movf	___enter_menu_epr_ilp_scale@fps& (0+255),w,b
 12280  0073A6  26D9               	addwf	fsr2l,f,c
 12281  0073A8  5183               	movf	(___enter_menu_epr_ilp_scale@fps+1)& (0+255),w,b
 12282  0073AA  22DA               	addwfc	fsr2h,f,c
 12283  0073AC  CFDE F07E          	movff	postinc2,___enter_menu_epr_ilp_scale@t32
 12284  0073B0  CFDE F07F          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+1
 12285  0073B4  CFDE F080          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+2
 12286  0073B8  CFDE F081          	movff	postinc2,___enter_menu_epr_ilp_scale@t32+3
 12287  0073BC  D00E               	goto	l15284
 12288  0073BE                     l15282:
 12289                           
 12290                           ; BSR set to: 0
 12291  0073BE  5032               	movf	_subMenu,w,c	;volatile
 12292                           
 12293                           ; Switch size 1, requested type "space"
 12294                           ; Number of cases is 4, Range of values is 0 to 3
 12295                           ; switch strategies available:
 12296                           ; Name         Instructions Cycles
 12297                           ; simple_byte           13     7 (average)
 12298                           ;	Chosen strategy is simple_byte
 12299  0073C0  0A00               	xorlw	0	; case 0
 12300  0073C2  B4D8               	btfsc	status,2,c
 12301  0073C4  D7E0               	goto	l15272
 12302  0073C6  0A01               	xorlw	1	; case 1
 12303  0073C8  B4D8               	btfsc	status,2,c
 12304  0073CA  D7E1               	goto	l15274
 12305  0073CC  0A03               	xorlw	3	; case 2
 12306  0073CE  B4D8               	btfsc	status,2,c
 12307  0073D0  D7E2               	goto	l15276
 12308  0073D2  0A01               	xorlw	1	; case 3
 12309  0073D4  A4D8               	btfss	status,2,c
 12310  0073D6  0012               	return	
 12311  0073D8  D7E2               	goto	l15278
 12312  0073DA                     l15284:
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;key_menu.c: 327: t32=__int32_2_mflot32(t32);
 12316  0073DA  C07E  F06D         	movff	___enter_menu_epr_ilp_scale@t32,___int32_2_mflot32@x
 12317  0073DE  C07F  F06E         	movff	___enter_menu_epr_ilp_scale@t32+1,___int32_2_mflot32@x+1
 12318  0073E2  C080  F06F         	movff	___enter_menu_epr_ilp_scale@t32+2,___int32_2_mflot32@x+2
 12319  0073E6  C081  F070         	movff	___enter_menu_epr_ilp_scale@t32+3,___int32_2_mflot32@x+3
 12320  0073EA  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 12321  0073EE  C06D  F07E         	movff	?___int32_2_mflot32,___enter_menu_epr_ilp_scale@t32
 12322  0073F2  C06E  F07F         	movff	?___int32_2_mflot32+1,___enter_menu_epr_ilp_scale@t32+1
 12323  0073F6  C06F  F080         	movff	?___int32_2_mflot32+2,___enter_menu_epr_ilp_scale@t32+2
 12324  0073FA  C070  F081         	movff	?___int32_2_mflot32+3,___enter_menu_epr_ilp_scale@t32+3
 12325                           
 12326                           ;key_menu.c: 328: m_floatAdj.t32=t32;
 12327  0073FE  C07E  F035         	movff	___enter_menu_epr_ilp_scale@t32,_m_floatAdj
 12328  007402  C07F  F036         	movff	___enter_menu_epr_ilp_scale@t32+1,_m_floatAdj+1
 12329  007406  C080  F037         	movff	___enter_menu_epr_ilp_scale@t32+2,_m_floatAdj+2
 12330  00740A  C081  F038         	movff	___enter_menu_epr_ilp_scale@t32+3,_m_floatAdj+3
 12331                           
 12332                           ;key_menu.c: 329: adjLocation=0;
 12333  00740E  0E00               	movlw	0
 12334  007410  6E3F               	movwf	_adjLocation,c	;volatile
 12335  007412  0012               	return		;funcret
 12336  007414                     __end_of___enter_menu_epr_ilp_scale:
 12337                           	opt stack 0
 12338                           tblptru	equ	0xFF8
 12339                           tblptrh	equ	0xFF7
 12340                           tblptrl	equ	0xFF6
 12341                           tablat	equ	0xFF5
 12342                           prodh	equ	0xFF4
 12343                           prodl	equ	0xFF3
 12344                           intcon	equ	0xFF2
 12345                           postinc0	equ	0xFEE
 12346                           wreg	equ	0xFE8
 12347                           indf1	equ	0xFE7
 12348                           postinc1	equ	0xFE6
 12349                           postdec1	equ	0xFE5
 12350                           plusw1	equ	0xFE3
 12351                           fsr1h	equ	0xFE2
 12352                           fsr1l	equ	0xFE1
 12353                           indf2	equ	0xFDF
 12354                           postinc2	equ	0xFDE
 12355                           postdec2	equ	0xFDD
 12356                           plusw2	equ	0xFDB
 12357                           fsr2h	equ	0xFDA
 12358                           fsr2l	equ	0xFD9
 12359                           status	equ	0xFD8
 12360                           
 12361 ;; *************** function ___set_short_diff_calib *****************
 12362 ;; Defined at:
 12363 ;;		line 699 in file "src/api/key_menu.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  gohome          1    wreg     unsigned char 
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  gohome          1   52[BANK0 ] unsigned char 
 12368 ;;  t32             4   55[BANK0 ] unsigned long 
 12369 ;;  pra             4   48[BANK0 ] unsigned long 
 12370 ;;  t16             2   59[BANK0 ] unsigned int 
 12371 ;;  adjv            1   61[BANK0 ] unsigned char 
 12372 ;;  saveFlg         1   54[BANK0 ] unsigned char 
 12373 ;;  t8              1   53[BANK0 ] unsigned char 
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  1    wreg      void 
 12376 ;; Registers used:
 12377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;Total ram usage:       20 bytes
 12388 ;; Hardware stack levels used:    1
 12389 ;; Hardware stack levels required when called:    9
 12390 ;; This function calls:
 12391 ;;		___enter_menu_calib_press_diff
 12392 ;;		___exit_menu_to_home_unsave
 12393 ;;		___mflot32_2_int32
 12394 ;;		_at24c02_write_n_byte
 12395 ;;		_crc_append
 12396 ;; This function is called by:
 12397 ;;		_key_process_set_long
 12398 ;;		_key_process_set
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text64
 12403  002712                     __ptext64:
 12404                           	opt stack 0
 12405  002712                     ___set_short_diff_calib:
 12406                           	opt stack 19
 12407                           
 12408                           ;incstack = 0
 12409                           ;___set_short_diff_calib@gohome stored from wreg
 12410  002712  0100               	movlb	0	; () banked
 12411  002714  6F94               	movwf	___set_short_diff_calib@gohome& (0+255),b
 12412                           
 12413                           ;key_menu.c: 701: bool saveFlg=0;
 12414  002716  0E00               	movlw	0
 12415  002718  0100               	movlb	0	; () banked
 12416  00271A  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;key_menu.c: 702: uint8_t t8,adjv;
 12420                           ;key_menu.c: 703: uint16_t t16;
 12421                           ;key_menu.c: 704: uint32_t t32,pra;
 12422                           ;key_menu.c: 705: if(calibCol==0){
 12423  00271C  5030               	movf	_calibCol,w,c	;volatile
 12424  00271E  A4D8               	btfss	status,2,c
 12425  002720  D021               	goto	l15966
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;key_menu.c: 706: t8=diff_prCalibTabDef.prCalibRow[calibRow].pCount;
 12429  002722  5031               	movf	_calibRow,w,c	;volatile
 12430  002724  0D34               	mullw	52
 12431  002726  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12432  002728  24F3               	addwf	prodl,w,c
 12433  00272A  6ED9               	movwf	fsr2l,c
 12434  00272C  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12435  00272E  20F4               	addwfc	prodh,w,c
 12436  002730  6EDA               	movwf	fsr2h,c
 12437  002732  50DF               	movf	indf2,w,c
 12438  002734  0100               	movlb	0	; () banked
 12439  002736  6F95               	movwf	___set_short_diff_calib@t8& (0+255),b
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;key_menu.c: 707: adjv=*(uint8_t*)(&adjValue);
 12443  002738  C039  F09D         	movff	_adjValue,___set_short_diff_calib@adjv
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;key_menu.c: 708: if(t8!=adjv){
 12447  00273C  0100               	movlb	0	; () banked
 12448  00273E  519D               	movf	___set_short_diff_calib@adjv& (0+255),w,b
 12449  002740  0100               	movlb	0	; () banked
 12450  002742  1995               	xorwf	___set_short_diff_calib@t8& (0+255),w,b
 12451  002744  B4D8               	btfsc	status,2,c
 12452  002746  D148               	goto	l15976
 12453                           
 12454                           ; BSR set to: 0
 12455                           ;key_menu.c: 709: saveFlg=1;
 12456  002748  0E01               	movlw	1
 12457  00274A  0100               	movlb	0	; () banked
 12458  00274C  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;key_menu.c: 710: diff_prCalibTabDef.prCalibRow[calibRow].pCount=adjv;
 12462  00274E  5031               	movf	_calibRow,w,c	;volatile
 12463  002750  0D34               	mullw	52
 12464  002752  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12465  002754  24F3               	addwf	prodl,w,c
 12466  002756  6ED9               	movwf	fsr2l,c
 12467  002758  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12468  00275A  20F4               	addwfc	prodh,w,c
 12469  00275C  6EDA               	movwf	fsr2h,c
 12470  00275E  C09D  FFDF         	movff	___set_short_diff_calib@adjv,indf2
 12471                           
 12472                           ; BSR set to: 0
 12473                           ;key_menu.c: 711: }
 12474                           ;key_menu.c: 712: }else{
 12475  002762  D13A               	goto	l15976
 12476  002764                     l15966:
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;key_menu.c: 713: t32=__mflot32_2_int32(m_floatAdj.t32);
 12480  002764  C035  F06C         	movff	_m_floatAdj,___mflot32_2_int32@x
 12481  002768  C036  F06D         	movff	_m_floatAdj+1,___mflot32_2_int32@x+1
 12482  00276C  C037  F06E         	movff	_m_floatAdj+2,___mflot32_2_int32@x+2
 12483  002770  C038  F06F         	movff	_m_floatAdj+3,___mflot32_2_int32@x+3
 12484  002774  EC1C  F03C         	call	___mflot32_2_int32	;wreg free
 12485  002778  C06C  F097         	movff	?___mflot32_2_int32,___set_short_diff_calib@t32
 12486  00277C  C06D  F098         	movff	?___mflot32_2_int32+1,___set_short_diff_calib@t32+1
 12487  002780  C06E  F099         	movff	?___mflot32_2_int32+2,___set_short_diff_calib@t32+2
 12488  002784  C06F  F09A         	movff	?___mflot32_2_int32+3,___set_short_diff_calib@t32+3
 12489                           
 12490                           ;key_menu.c: 714: pra=diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].p
      +                          Value;
 12491  002788  5031               	movf	_calibRow,w,c	;volatile
 12492  00278A  0D34               	mullw	52
 12493  00278C  0EFC               	movlw	252
 12494  00278E  0100               	movlb	0	; () banked
 12495  002790  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12496  002792  0EFF               	movlw	255
 12497  002794  0100               	movlb	0	; () banked
 12498  002796  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12499  002798  5030               	movf	_calibCol,w,c	;volatile
 12500  00279A  0100               	movlb	0	; () banked
 12501  00279C  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12502  00279E  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12503  0027A0  0100               	movlb	0	; () banked
 12504  0027A2  90D8               	bcf	status,0,c
 12505  0027A4  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12506  0027A6  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12507  0027A8  0100               	movlb	0	; () banked
 12508  0027AA  90D8               	bcf	status,0,c
 12509  0027AC  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12510  0027AE  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12511  0027B0  0100               	movlb	0	; () banked
 12512  0027B2  90D8               	bcf	status,0,c
 12513  0027B4  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12514  0027B6  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12515  0027B8  0100               	movlb	0	; () banked
 12516  0027BA  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12517  0027BC  0100               	movlb	0	; () banked
 12518  0027BE  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12519  0027C0  0100               	movlb	0	; () banked
 12520  0027C2  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12521  0027C4  0100               	movlb	0	; () banked
 12522  0027C6  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12523  0027C8  0E10               	movlw	low _diff_prCalibTabDef
 12524  0027CA  0100               	movlb	0	; () banked
 12525  0027CC  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12526  0027CE  0E03               	movlw	high _diff_prCalibTabDef
 12527  0027D0  0100               	movlb	0	; () banked
 12528  0027D2  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12529  0027D4  0E04               	movlw	4
 12530  0027D6  0100               	movlb	0	; () banked
 12531  0027D8  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12532  0027DA  0E00               	movlw	0
 12533  0027DC  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12534  0027DE  0100               	movlb	0	; () banked
 12535  0027E0  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12536  0027E2  0100               	movlb	0	; () banked
 12537  0027E4  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12538  0027E6  0100               	movlb	0	; () banked
 12539  0027E8  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12540  0027EA  0100               	movlb	0	; () banked
 12541  0027EC  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12542  0027EE  50F3               	movf	prodl,w,c
 12543  0027F0  0100               	movlb	0	; () banked
 12544  0027F2  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12545  0027F4  6ED9               	movwf	fsr2l,c
 12546  0027F6  50F4               	movf	prodh,w,c
 12547  0027F8  0100               	movlb	0	; () banked
 12548  0027FA  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12549  0027FC  6EDA               	movwf	fsr2h,c
 12550  0027FE  CFDE F090          	movff	postinc2,___set_short_diff_calib@pra
 12551  002802  CFDE F091          	movff	postinc2,___set_short_diff_calib@pra+1
 12552  002806  CFDE F092          	movff	postinc2,___set_short_diff_calib@pra+2
 12553  00280A  CFDE F093          	movff	postinc2,___set_short_diff_calib@pra+3
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;key_menu.c: 715: if(pra!=t32){
 12557  00280E  0100               	movlb	0	; () banked
 12558  002810  5197               	movf	___set_short_diff_calib@t32& (0+255),w,b
 12559  002812  0100               	movlb	0	; () banked
 12560  002814  1990               	xorwf	___set_short_diff_calib@pra& (0+255),w,b
 12561  002816  E110               	bnz	u15030
 12562  002818  0100               	movlb	0	; () banked
 12563  00281A  5198               	movf	(___set_short_diff_calib@t32+1)& (0+255),w,b
 12564  00281C  0100               	movlb	0	; () banked
 12565  00281E  1991               	xorwf	(___set_short_diff_calib@pra+1)& (0+255),w,b
 12566  002820  E10B               	bnz	u15030
 12567  002822  0100               	movlb	0	; () banked
 12568  002824  5199               	movf	(___set_short_diff_calib@t32+2)& (0+255),w,b
 12569  002826  0100               	movlb	0	; () banked
 12570  002828  1992               	xorwf	(___set_short_diff_calib@pra+2)& (0+255),w,b
 12571  00282A  E106               	bnz	u15030
 12572  00282C  0100               	movlb	0	; () banked
 12573  00282E  519A               	movf	(___set_short_diff_calib@t32+3)& (0+255),w,b
 12574  002830  0100               	movlb	0	; () banked
 12575  002832  1993               	xorwf	(___set_short_diff_calib@pra+3)& (0+255),w,b
 12576  002834  B4D8               	btfsc	status,2,c
 12577  002836  D0D0               	goto	l15976
 12578  002838                     u15030:
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;key_menu.c: 716: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pValu
      +                          e=t32;
 12582  002838  5031               	movf	_calibRow,w,c	;volatile
 12583  00283A  0D34               	mullw	52
 12584  00283C  0EFC               	movlw	252
 12585  00283E  0100               	movlb	0	; () banked
 12586  002840  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12587  002842  0EFF               	movlw	255
 12588  002844  0100               	movlb	0	; () banked
 12589  002846  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12590  002848  5030               	movf	_calibCol,w,c	;volatile
 12591  00284A  0100               	movlb	0	; () banked
 12592  00284C  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12593  00284E  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12594  002850  0100               	movlb	0	; () banked
 12595  002852  90D8               	bcf	status,0,c
 12596  002854  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12597  002856  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12598  002858  0100               	movlb	0	; () banked
 12599  00285A  90D8               	bcf	status,0,c
 12600  00285C  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12601  00285E  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12602  002860  0100               	movlb	0	; () banked
 12603  002862  90D8               	bcf	status,0,c
 12604  002864  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12605  002866  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12606  002868  0100               	movlb	0	; () banked
 12607  00286A  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12608  00286C  0100               	movlb	0	; () banked
 12609  00286E  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12610  002870  0100               	movlb	0	; () banked
 12611  002872  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12612  002874  0100               	movlb	0	; () banked
 12613  002876  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12614  002878  0E10               	movlw	low _diff_prCalibTabDef
 12615  00287A  0100               	movlb	0	; () banked
 12616  00287C  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12617  00287E  0E03               	movlw	high _diff_prCalibTabDef
 12618  002880  0100               	movlb	0	; () banked
 12619  002882  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12620  002884  0E04               	movlw	4
 12621  002886  0100               	movlb	0	; () banked
 12622  002888  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12623  00288A  0E00               	movlw	0
 12624  00288C  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12625  00288E  0100               	movlb	0	; () banked
 12626  002890  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12627  002892  0100               	movlb	0	; () banked
 12628  002894  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12629  002896  0100               	movlb	0	; () banked
 12630  002898  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12631  00289A  0100               	movlb	0	; () banked
 12632  00289C  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12633  00289E  50F3               	movf	prodl,w,c
 12634  0028A0  0100               	movlb	0	; () banked
 12635  0028A2  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12636  0028A4  6ED9               	movwf	fsr2l,c
 12637  0028A6  50F4               	movf	prodh,w,c
 12638  0028A8  0100               	movlb	0	; () banked
 12639  0028AA  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12640  0028AC  6EDA               	movwf	fsr2h,c
 12641  0028AE  C097  FFDE         	movff	___set_short_diff_calib@t32,postinc2
 12642  0028B2  C098  FFDE         	movff	___set_short_diff_calib@t32+1,postinc2
 12643  0028B6  C099  FFDE         	movff	___set_short_diff_calib@t32+2,postinc2
 12644  0028BA  C09A  FFDE         	movff	___set_short_diff_calib@t32+3,postinc2
 12645                           
 12646                           ;key_menu.c: 717: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].pAdcV
      +                          alue=x_prDiffData.pAdcValue;
 12647  0028BE  5031               	movf	_calibRow,w,c	;volatile
 12648  0028C0  0D34               	mullw	52
 12649  0028C2  0EFC               	movlw	252
 12650  0028C4  0100               	movlb	0	; () banked
 12651  0028C6  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12652  0028C8  0EFF               	movlw	255
 12653  0028CA  0100               	movlb	0	; () banked
 12654  0028CC  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12655  0028CE  5030               	movf	_calibCol,w,c	;volatile
 12656  0028D0  0100               	movlb	0	; () banked
 12657  0028D2  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12658  0028D4  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12659  0028D6  0100               	movlb	0	; () banked
 12660  0028D8  90D8               	bcf	status,0,c
 12661  0028DA  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12662  0028DC  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12663  0028DE  0100               	movlb	0	; () banked
 12664  0028E0  90D8               	bcf	status,0,c
 12665  0028E2  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12666  0028E4  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12667  0028E6  0100               	movlb	0	; () banked
 12668  0028E8  90D8               	bcf	status,0,c
 12669  0028EA  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12670  0028EC  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12671  0028EE  0100               	movlb	0	; () banked
 12672  0028F0  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12673  0028F2  0100               	movlb	0	; () banked
 12674  0028F4  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12675  0028F6  0100               	movlb	0	; () banked
 12676  0028F8  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12677  0028FA  0100               	movlb	0	; () banked
 12678  0028FC  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12679  0028FE  0E10               	movlw	low _diff_prCalibTabDef
 12680  002900  0100               	movlb	0	; () banked
 12681  002902  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12682  002904  0E03               	movlw	high _diff_prCalibTabDef
 12683  002906  0100               	movlb	0	; () banked
 12684  002908  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12685  00290A  0E04               	movlw	4
 12686  00290C  0100               	movlb	0	; () banked
 12687  00290E  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12688  002910  0E00               	movlw	0
 12689  002912  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12690  002914  0100               	movlb	0	; () banked
 12691  002916  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12692  002918  0100               	movlb	0	; () banked
 12693  00291A  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12694  00291C  0100               	movlb	0	; () banked
 12695  00291E  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12696  002920  0100               	movlb	0	; () banked
 12697  002922  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12698  002924  50F3               	movf	prodl,w,c
 12699  002926  0100               	movlb	0	; () banked
 12700  002928  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12701  00292A  50F4               	movf	prodh,w,c
 12702  00292C  0100               	movlb	0	; () banked
 12703  00292E  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12704  002930  0E04               	movlw	4
 12705  002932  0100               	movlb	0	; () banked
 12706  002934  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12707  002936  6ED9               	movwf	fsr2l,c
 12708  002938  0E00               	movlw	0
 12709  00293A  0100               	movlb	0	; () banked
 12710  00293C  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12711  00293E  6EDA               	movwf	fsr2h,c
 12712  002940  C1EC  FFDE         	movff	_x_prDiffData+4,postinc2
 12713  002944  C1ED  FFDD         	movff	_x_prDiffData+5,postdec2
 12714                           
 12715                           ;key_menu.c: 718: diff_prCalibTabDef.prCalibRow[calibRow].prCalibPoint[calibCol-1].tAdcV
      +                          alue=x_prDiffData.tAdcValue;
 12716  002948  5031               	movf	_calibRow,w,c	;volatile
 12717  00294A  0D34               	mullw	52
 12718  00294C  0EFC               	movlw	252
 12719  00294E  0100               	movlb	0	; () banked
 12720  002950  6F8A               	movwf	??___set_short_diff_calib& (0+255),b
 12721  002952  0EFF               	movlw	255
 12722  002954  0100               	movlb	0	; () banked
 12723  002956  6F8B               	movwf	(??___set_short_diff_calib+1)& (0+255),b
 12724  002958  5030               	movf	_calibCol,w,c	;volatile
 12725  00295A  0100               	movlb	0	; () banked
 12726  00295C  6F8C               	movwf	(??___set_short_diff_calib+2)& (0+255),b
 12727  00295E  6B8D               	clrf	(??___set_short_diff_calib+3)& (0+255),b
 12728  002960  0100               	movlb	0	; () banked
 12729  002962  90D8               	bcf	status,0,c
 12730  002964  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12731  002966  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12732  002968  0100               	movlb	0	; () banked
 12733  00296A  90D8               	bcf	status,0,c
 12734  00296C  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12735  00296E  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12736  002970  0100               	movlb	0	; () banked
 12737  002972  90D8               	bcf	status,0,c
 12738  002974  378C               	rlcf	(??___set_short_diff_calib+2)& (0+255),f,b
 12739  002976  378D               	rlcf	(??___set_short_diff_calib+3)& (0+255),f,b
 12740  002978  0100               	movlb	0	; () banked
 12741  00297A  518A               	movf	??___set_short_diff_calib& (0+255),w,b
 12742  00297C  0100               	movlb	0	; () banked
 12743  00297E  278C               	addwf	(??___set_short_diff_calib+2)& (0+255),f,b
 12744  002980  0100               	movlb	0	; () banked
 12745  002982  518B               	movf	(??___set_short_diff_calib+1)& (0+255),w,b
 12746  002984  0100               	movlb	0	; () banked
 12747  002986  238D               	addwfc	(??___set_short_diff_calib+3)& (0+255),f,b
 12748  002988  0E10               	movlw	low _diff_prCalibTabDef
 12749  00298A  0100               	movlb	0	; () banked
 12750  00298C  6F8E               	movwf	(??___set_short_diff_calib+4)& (0+255),b
 12751  00298E  0E03               	movlw	high _diff_prCalibTabDef
 12752  002990  0100               	movlb	0	; () banked
 12753  002992  6F8F               	movwf	(??___set_short_diff_calib+5)& (0+255),b
 12754  002994  0E04               	movlw	4
 12755  002996  0100               	movlb	0	; () banked
 12756  002998  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12757  00299A  0E00               	movlw	0
 12758  00299C  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12759  00299E  0100               	movlb	0	; () banked
 12760  0029A0  518C               	movf	(??___set_short_diff_calib+2)& (0+255),w,b
 12761  0029A2  0100               	movlb	0	; () banked
 12762  0029A4  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12763  0029A6  0100               	movlb	0	; () banked
 12764  0029A8  518D               	movf	(??___set_short_diff_calib+3)& (0+255),w,b
 12765  0029AA  0100               	movlb	0	; () banked
 12766  0029AC  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12767  0029AE  50F3               	movf	prodl,w,c
 12768  0029B0  0100               	movlb	0	; () banked
 12769  0029B2  278E               	addwf	(??___set_short_diff_calib+4)& (0+255),f,b
 12770  0029B4  50F4               	movf	prodh,w,c
 12771  0029B6  0100               	movlb	0	; () banked
 12772  0029B8  238F               	addwfc	(??___set_short_diff_calib+5)& (0+255),f,b
 12773  0029BA  0E06               	movlw	6
 12774  0029BC  0100               	movlb	0	; () banked
 12775  0029BE  258E               	addwf	(??___set_short_diff_calib+4)& (0+255),w,b
 12776  0029C0  6ED9               	movwf	fsr2l,c
 12777  0029C2  0E00               	movlw	0
 12778  0029C4  0100               	movlb	0	; () banked
 12779  0029C6  218F               	addwfc	(??___set_short_diff_calib+5)& (0+255),w,b
 12780  0029C8  6EDA               	movwf	fsr2h,c
 12781  0029CA  C1EE  FFDE         	movff	_x_prDiffData+6,postinc2
 12782  0029CE  C1EF  FFDD         	movff	_x_prDiffData+7,postdec2
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;key_menu.c: 719: saveFlg=1;
 12786  0029D2  0E01               	movlw	1
 12787  0029D4  0100               	movlb	0	; () banked
 12788  0029D6  6F96               	movwf	___set_short_diff_calib@saveFlg& (0+255),b
 12789  0029D8                     l15976:
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;key_menu.c: 720: }
 12793                           ;key_menu.c: 721: }
 12794                           ;key_menu.c: 723: if(saveFlg){
 12795  0029D8  0100               	movlb	0	; () banked
 12796  0029DA  5196               	movf	___set_short_diff_calib@saveFlg& (0+255),w,b
 12797  0029DC  0100               	movlb	0	; () banked
 12798  0029DE  B4D8               	btfsc	status,2,c
 12799  0029E0  D02A               	goto	l15984
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;key_menu.c: 724: t16=sizeof(diff_prCalibTabDef);
 12803  0029E2  0E00               	movlw	0
 12804  0029E4  0100               	movlb	0	; () banked
 12805  0029E6  6F9C               	movwf	(___set_short_diff_calib@t16+1)& (0+255),b
 12806  0029E8  0EA2               	movlw	162
 12807  0029EA  6F9B               	movwf	___set_short_diff_calib@t16& (0+255),b
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;key_menu.c: 725: crc_append((uint8_t*)&diff_prCalibTabDef,t16-2);
 12811  0029EC  0E10               	movlw	low _diff_prCalibTabDef
 12812  0029EE  0100               	movlb	0	; () banked
 12813  0029F0  6F6C               	movwf	crc_append@message& (0+255),b
 12814  0029F2  0E03               	movlw	high _diff_prCalibTabDef
 12815  0029F4  0100               	movlb	0	; () banked
 12816  0029F6  6F6D               	movwf	(crc_append@message+1)& (0+255),b
 12817  0029F8  0EFE               	movlw	254
 12818  0029FA  0100               	movlb	0	; () banked
 12819  0029FC  259B               	addwf	___set_short_diff_calib@t16& (0+255),w,b
 12820  0029FE  0100               	movlb	0	; () banked
 12821  002A00  6F6E               	movwf	crc_append@n& (0+255),b
 12822  002A02  0EFF               	movlw	255
 12823  002A04  0100               	movlb	0	; () banked
 12824  002A06  219C               	addwfc	(___set_short_diff_calib@t16+1)& (0+255),w,b
 12825  002A08  0100               	movlb	0	; () banked
 12826  002A0A  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 12827  002A0C  EC65  F047         	call	_crc_append	;wreg free
 12828                           
 12829                           ;key_menu.c: 726: at24c02_write_n_byte(pdiff_prEepromObj,0,(uint8_t*)&diff_prCalibTabDef
      +                          ,t16);
 12830  002A10  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 12831  002A14  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 12832  002A18  0E00               	movlw	0
 12833  002A1A  0100               	movlb	0	; () banked
 12834  002A1C  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 12835  002A1E  0E10               	movlw	low _diff_prCalibTabDef
 12836  002A20  0100               	movlb	0	; () banked
 12837  002A22  6F69               	movwf	at24c02_write_n_byte@buf& (0+255),b
 12838  002A24  0E03               	movlw	high _diff_prCalibTabDef
 12839  002A26  0100               	movlb	0	; () banked
 12840  002A28  6F6A               	movwf	(at24c02_write_n_byte@buf+1)& (0+255),b
 12841  002A2A  C09B  F06B         	movff	___set_short_diff_calib@t16,at24c02_write_n_byte@len
 12842  002A2E  C09C  F06C         	movff	___set_short_diff_calib@t16+1,at24c02_write_n_byte@len+1
 12843  002A32  ECB8  F02D         	call	_at24c02_write_n_byte	;wreg free
 12844  002A36                     l15984:
 12845                           
 12846                           ;key_menu.c: 727: }
 12847                           ;key_menu.c: 728: if(gohome){__exit_menu_to_home_unsave(); return;}
 12848  002A36  0100               	movlb	0	; () banked
 12849  002A38  5194               	movf	___set_short_diff_calib@gohome& (0+255),w,b
 12850  002A3A  0100               	movlb	0	; () banked
 12851  002A3C  B4D8               	btfsc	status,2,c
 12852  002A3E  D003               	goto	l15990
 12853                           
 12854                           ; BSR set to: 0
 12855  002A40  ECA8  F04C         	call	___exit_menu_to_home_unsave	;wreg free
 12856  002A44  0012               	return	
 12857  002A46                     l15990:
 12858                           
 12859                           ;key_menu.c: 729: calibCol++;
 12860  002A46  2A30               	incf	_calibCol,f,c	;volatile
 12861                           
 12862                           ;key_menu.c: 730: if(calibCol>diff_prCalibTabDef.prCalibRow[calibRow].pCount){
 12863  002A48  5031               	movf	_calibRow,w,c	;volatile
 12864  002A4A  0D34               	mullw	52
 12865  002A4C  0E14               	movlw	low (_diff_prCalibTabDef+4)
 12866  002A4E  24F3               	addwf	prodl,w,c
 12867  002A50  6ED9               	movwf	fsr2l,c
 12868  002A52  0E03               	movlw	high (_diff_prCalibTabDef+4)
 12869  002A54  20F4               	addwfc	prodh,w,c
 12870  002A56  6EDA               	movwf	fsr2h,c
 12871  002A58  5030               	movf	_calibCol,w,c	;volatile
 12872  002A5A  5CDE               	subwf	postinc2,w,c
 12873  002A5C  B0D8               	btfsc	status,0,c
 12874  002A5E  D008               	goto	l16002
 12875                           
 12876                           ;key_menu.c: 731: calibCol=0;
 12877  002A60  0E00               	movlw	0
 12878  002A62  6E30               	movwf	_calibCol,c	;volatile
 12879                           
 12880                           ;key_menu.c: 732: calibRow++;
 12881  002A64  2A31               	incf	_calibRow,f,c	;volatile
 12882                           
 12883                           ;key_menu.c: 733: if(calibRow>2)calibRow=0;
 12884  002A66  0E02               	movlw	2
 12885  002A68  6431               	cpfsgt	_calibRow,c	;volatile
 12886  002A6A  D002               	goto	l16002
 12887  002A6C  0E00               	movlw	0
 12888  002A6E  6E31               	movwf	_calibRow,c	;volatile
 12889  002A70                     l16002:
 12890                           
 12891                           ;key_menu.c: 734: }
 12892                           ;key_menu.c: 735: __enter_menu_calib_press_diff(calibRow,calibCol);
 12893  002A70  C030  F020         	movff	_calibCol,___enter_menu_calib_press_diff@col	;volatile
 12894  002A74  5031               	movf	_calibRow,w,c	;volatile
 12895  002A76  EC58  F031         	call	___enter_menu_calib_press_diff
 12896  002A7A  0012               	return		;funcret
 12897  002A7C                     __end_of___set_short_diff_calib:
 12898                           	opt stack 0
 12899                           tblptru	equ	0xFF8
 12900                           tblptrh	equ	0xFF7
 12901                           tblptrl	equ	0xFF6
 12902                           tablat	equ	0xFF5
 12903                           prodh	equ	0xFF4
 12904                           prodl	equ	0xFF3
 12905                           intcon	equ	0xFF2
 12906                           postinc0	equ	0xFEE
 12907                           wreg	equ	0xFE8
 12908                           indf1	equ	0xFE7
 12909                           postinc1	equ	0xFE6
 12910                           postdec1	equ	0xFE5
 12911                           plusw1	equ	0xFE3
 12912                           fsr1h	equ	0xFE2
 12913                           fsr1l	equ	0xFE1
 12914                           indf2	equ	0xFDF
 12915                           postinc2	equ	0xFDE
 12916                           postdec2	equ	0xFDD
 12917                           plusw2	equ	0xFDB
 12918                           fsr2h	equ	0xFDA
 12919                           fsr2l	equ	0xFD9
 12920                           status	equ	0xFD8
 12921                           
 12922 ;; *************** function ___mflot32_2_int32 *****************
 12923 ;; Defined at:
 12924 ;;		line 77 in file "src/api/ui.c"
 12925 ;; Parameters:    Size  Location     Type
 12926 ;;  x               4   12[BANK0 ] long 
 12927 ;; Auto vars:     Size  Location     Type
 12928 ;;  mf              4   21[BANK0 ] struct .
 12929 ;;  ret             4   17[BANK0 ] long 
 12930 ;;  i               1   16[BANK0 ] unsigned char 
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  4   12[BANK0 ] long 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12944 ;;Total ram usage:       13 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    5
 12947 ;; This function calls:
 12948 ;;		___lmul
 12949 ;; This function is called by:
 12950 ;;		___set_short_pose_size
 12951 ;;		___set_short_diff_calib
 12952 ;;		___set_short_pr_calib
 12953 ;;		___set_short_warn_value
 12954 ;;		___set_short_epr_param
 12955 ;;		___set_short_epr_ilp_scale
 12956 ;;		___set_long_density
 12957 ;;		___set_long_base_zero
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text65
 12962  007838                     __ptext65:
 12963                           	opt stack 0
 12964  007838                     ___mflot32_2_int32:
 12965                           	opt stack 22
 12966                           
 12967                           ;ui.c: 79: uint8_t i;
 12968                           ;ui.c: 80: st_float32 mf={0};
 12969                           
 12970                           ;incstack = 0
 12971  007838  C13E  F075         	movff	___mflot32_2_int32@F7717,___mflot32_2_int32@mf
 12972  00783C  C13F  F076         	movff	___mflot32_2_int32@F7717+1,___mflot32_2_int32@mf+1
 12973  007840  C140  F077         	movff	___mflot32_2_int32@F7717+2,___mflot32_2_int32@mf+2
 12974  007844  C141  F078         	movff	___mflot32_2_int32@F7717+3,___mflot32_2_int32@mf+3
 12975                           
 12976                           ;ui.c: 81: int32_t ret;
 12977                           ;ui.c: 82: mf.t32=x;
 12978  007848  C06C  F075         	movff	___mflot32_2_int32@x,___mflot32_2_int32@mf
 12979  00784C  C06D  F076         	movff	___mflot32_2_int32@x+1,___mflot32_2_int32@mf+1
 12980  007850  C06E  F077         	movff	___mflot32_2_int32@x+2,___mflot32_2_int32@mf+2
 12981  007854  C06F  F078         	movff	___mflot32_2_int32@x+3,___mflot32_2_int32@mf+3
 12982                           
 12983                           ;ui.c: 83: ret=mf.stru.significand;
 12984  007858  C075  F071         	movff	___mflot32_2_int32@mf,___mflot32_2_int32@ret
 12985  00785C  C076  F072         	movff	___mflot32_2_int32@mf+1,___mflot32_2_int32@ret+1
 12986  007860  0100               	movlb	0	; () banked
 12987  007862  6B73               	clrf	(___mflot32_2_int32@ret+2)& (0+255),b
 12988  007864  6B74               	clrf	(___mflot32_2_int32@ret+3)& (0+255),b
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;ui.c: 84: for(i=0;i<mf.stru.exponent;i++){
 12992  007866  0E00               	movlw	0
 12993  007868  0100               	movlb	0	; () banked
 12994  00786A  6F70               	movwf	___mflot32_2_int32@i& (0+255),b
 12995  00786C  D01D               	goto	l15322
 12996  00786E                     l15318:
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;ui.c: 85: ret*=10;
 13000  00786E  C071  F060         	movff	___mflot32_2_int32@ret,___lmul@multiplier
 13001  007872  C072  F061         	movff	___mflot32_2_int32@ret+1,___lmul@multiplier+1
 13002  007876  C073  F062         	movff	___mflot32_2_int32@ret+2,___lmul@multiplier+2
 13003  00787A  C074  F063         	movff	___mflot32_2_int32@ret+3,___lmul@multiplier+3
 13004  00787E  0E0A               	movlw	10
 13005  007880  0100               	movlb	0	; () banked
 13006  007882  6F64               	movwf	___lmul@multiplicand& (0+255),b
 13007  007884  0E00               	movlw	0
 13008  007886  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13009  007888  0E00               	movlw	0
 13010  00788A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13011  00788C  0E00               	movlw	0
 13012  00788E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13013  007890  EC99  F043         	call	___lmul	;wreg free
 13014  007894  C060  F071         	movff	?___lmul,___mflot32_2_int32@ret
 13015  007898  C061  F072         	movff	?___lmul+1,___mflot32_2_int32@ret+1
 13016  00789C  C062  F073         	movff	?___lmul+2,___mflot32_2_int32@ret+2
 13017  0078A0  C063  F074         	movff	?___lmul+3,___mflot32_2_int32@ret+3
 13018  0078A4  0100               	movlb	0	; () banked
 13019  0078A6  2B70               	incf	___mflot32_2_int32@i& (0+255),f,b
 13020  0078A8                     l15322:
 13021                           
 13022                           ; BSR set to: 0
 13023  0078A8  0100               	movlb	0	; () banked
 13024  0078AA  5177               	movf	(___mflot32_2_int32@mf+2)& (0+255),w,b
 13025  0078AC  0100               	movlb	0	; () banked
 13026  0078AE  5D70               	subwf	___mflot32_2_int32@i& (0+255),w,b
 13027  0078B0  A0D8               	btfss	status,0,c
 13028  0078B2  D7DD               	goto	l15318
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;ui.c: 86: }
 13032                           ;ui.c: 87: if(mf.stru.sign)ret=((~ret)+1);
 13033                           
 13034                           ; BSR set to: 0
 13035  0078B4  0100               	movlb	0	; () banked
 13036  0078B6  5178               	movf	(___mflot32_2_int32@mf+3)& (0+255),w,b
 13037  0078B8  B4D8               	btfsc	status,2,c
 13038  0078BA  D009               	goto	l15328
 13039                           
 13040                           ; BSR set to: 0
 13041  0078BC  0100               	movlb	0	; () banked
 13042  0078BE  1F74               	comf	(___mflot32_2_int32@ret+3)& (0+255),f,b
 13043  0078C0  1F73               	comf	(___mflot32_2_int32@ret+2)& (0+255),f,b
 13044  0078C2  1F72               	comf	(___mflot32_2_int32@ret+1)& (0+255),f,b
 13045  0078C4  6D71               	negf	___mflot32_2_int32@ret& (0+255),b
 13046  0078C6  0E00               	movlw	0
 13047  0078C8  2372               	addwfc	(___mflot32_2_int32@ret+1)& (0+255),f,b
 13048  0078CA  2373               	addwfc	(___mflot32_2_int32@ret+2)& (0+255),f,b
 13049  0078CC  2374               	addwfc	(___mflot32_2_int32@ret+3)& (0+255),f,b
 13050  0078CE                     l15328:
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;ui.c: 88: return ret;
 13054  0078CE  C071  F06C         	movff	___mflot32_2_int32@ret,?___mflot32_2_int32
 13055  0078D2  C072  F06D         	movff	___mflot32_2_int32@ret+1,?___mflot32_2_int32+1
 13056  0078D6  C073  F06E         	movff	___mflot32_2_int32@ret+2,?___mflot32_2_int32+2
 13057  0078DA  C074  F06F         	movff	___mflot32_2_int32@ret+3,?___mflot32_2_int32+3
 13058  0078DE  0012               	return	
 13059  0078E0                     __end_of___mflot32_2_int32:
 13060                           	opt stack 0
 13061                           tblptru	equ	0xFF8
 13062                           tblptrh	equ	0xFF7
 13063                           tblptrl	equ	0xFF6
 13064                           tablat	equ	0xFF5
 13065                           prodh	equ	0xFF4
 13066                           prodl	equ	0xFF3
 13067                           intcon	equ	0xFF2
 13068                           postinc0	equ	0xFEE
 13069                           wreg	equ	0xFE8
 13070                           indf1	equ	0xFE7
 13071                           postinc1	equ	0xFE6
 13072                           postdec1	equ	0xFE5
 13073                           plusw1	equ	0xFE3
 13074                           fsr1h	equ	0xFE2
 13075                           fsr1l	equ	0xFE1
 13076                           indf2	equ	0xFDF
 13077                           postinc2	equ	0xFDE
 13078                           postdec2	equ	0xFDD
 13079                           plusw2	equ	0xFDB
 13080                           fsr2h	equ	0xFDA
 13081                           fsr2l	equ	0xFD9
 13082                           status	equ	0xFD8
 13083                           
 13084 ;; *************** function ___exit_menu_to_home_unsave *****************
 13085 ;; Defined at:
 13086 ;;		line 350 in file "src/api/key_menu.c"
 13087 ;; Parameters:    Size  Location     Type
 13088 ;;		None
 13089 ;; Auto vars:     Size  Location     Type
 13090 ;;		None
 13091 ;; Return value:  Size  Location     Type
 13092 ;;                  1    wreg      void 
 13093 ;; Registers used:
 13094 ;;		wreg, status,2
 13095 ;; Tracked objects:
 13096 ;;		On entry : 0/0
 13097 ;;		On exit  : 0/0
 13098 ;;		Unchanged: 0/0
 13099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;Total ram usage:        0 bytes
 13105 ;; Hardware stack levels used:    1
 13106 ;; Hardware stack levels required when called:    4
 13107 ;; This function calls:
 13108 ;;		Nothing
 13109 ;; This function is called by:
 13110 ;;		___set_short_pose_size
 13111 ;;		___set_short_diff_calib
 13112 ;;		___set_short_pr_calib
 13113 ;;		___set_short_poly_coefic
 13114 ;;		___set_short_warn_type
 13115 ;;		___set_short_warn_value
 13116 ;;		___set_short_epr_param
 13117 ;;		___set_short_epr_ilp_scale
 13118 ;;		___set_long_density
 13119 ;;		___set_long_base_zero
 13120 ;;		___set_long_bar_level_scale
 13121 ;;		___set_long_work_mode
 13122 ;;		_key_process_set_long
 13123 ;; This function uses a non-reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text66
 13127  009950                     __ptext66:
 13128                           	opt stack 0
 13129  009950                     ___exit_menu_to_home_unsave:
 13130                           	opt stack 23
 13131                           
 13132                           ;key_menu.c: 352: menu=0x00;
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;incstack = 0
 13136  009950  0E00               	movlw	0
 13137  009952  6E33               	movwf	_menu,c	;volatile
 13138                           
 13139                           ;key_menu.c: 353: subMenu=0x00;
 13140  009954  0E00               	movlw	0
 13141  009956  6E32               	movwf	_subMenu,c	;volatile
 13142                           
 13143                           ;key_menu.c: 355: adjValue=0;
 13144  009958  0E00               	movlw	0
 13145  00995A  6E39               	movwf	_adjValue,c	;volatile
 13146  00995C  0E00               	movlw	0
 13147  00995E  6E3A               	movwf	_adjValue+1,c	;volatile
 13148  009960  0E00               	movlw	0
 13149  009962  6E3B               	movwf	_adjValue+2,c	;volatile
 13150  009964  0E00               	movlw	0
 13151  009966  6E3C               	movwf	_adjValue+3,c	;volatile
 13152                           
 13153                           ;key_menu.c: 356: m_floatAdj.t32=0;
 13154  009968  0E00               	movlw	0
 13155  00996A  6E35               	movwf	_m_floatAdj,c
 13156  00996C  0E00               	movlw	0
 13157  00996E  6E36               	movwf	_m_floatAdj+1,c
 13158  009970  0E00               	movlw	0
 13159  009972  6E37               	movwf	_m_floatAdj+2,c
 13160  009974  0E00               	movlw	0
 13161  009976  6E38               	movwf	_m_floatAdj+3,c
 13162                           
 13163                           ;key_menu.c: 357: adjLocation=0x00;
 13164  009978  0E00               	movlw	0
 13165  00997A  6E3F               	movwf	_adjLocation,c	;volatile
 13166                           
 13167                           ;key_menu.c: 359: calibRow=0;
 13168  00997C  0E00               	movlw	0
 13169  00997E  6E31               	movwf	_calibRow,c	;volatile
 13170                           
 13171                           ;key_menu.c: 360: calibCol=0;
 13172  009980  0E00               	movlw	0
 13173  009982  6E30               	movwf	_calibCol,c	;volatile
 13174                           
 13175                           ;key_menu.c: 361: passWord=0x00;
 13176  009984  0E00               	movlw	0
 13177  009986  6E3E               	movwf	_passWord+1,c	;volatile
 13178  009988  0E00               	movlw	0
 13179  00998A  6E3D               	movwf	_passWord,c	;volatile
 13180  00998C  0012               	return		;funcret
 13181  00998E                     __end_of___exit_menu_to_home_unsave:
 13182                           	opt stack 0
 13183                           tblptru	equ	0xFF8
 13184                           tblptrh	equ	0xFF7
 13185                           tblptrl	equ	0xFF6
 13186                           tablat	equ	0xFF5
 13187                           prodh	equ	0xFF4
 13188                           prodl	equ	0xFF3
 13189                           intcon	equ	0xFF2
 13190                           postinc0	equ	0xFEE
 13191                           wreg	equ	0xFE8
 13192                           indf1	equ	0xFE7
 13193                           postinc1	equ	0xFE6
 13194                           postdec1	equ	0xFE5
 13195                           plusw1	equ	0xFE3
 13196                           fsr1h	equ	0xFE2
 13197                           fsr1l	equ	0xFE1
 13198                           indf2	equ	0xFDF
 13199                           postinc2	equ	0xFDE
 13200                           postdec2	equ	0xFDD
 13201                           plusw2	equ	0xFDB
 13202                           fsr2h	equ	0xFDA
 13203                           fsr2l	equ	0xFD9
 13204                           status	equ	0xFD8
 13205                           
 13206 ;; *************** function ___enter_menu_calib_press_diff *****************
 13207 ;; Defined at:
 13208 ;;		line 196 in file "src/api/key_menu.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;  row             1    wreg     unsigned char 
 13211 ;;  col             1   31[COMRAM] unsigned char 
 13212 ;; Auto vars:     Size  Location     Type
 13213 ;;  row             1   35[BANK0 ] unsigned char 
 13214 ;;  t32             4   38[BANK0 ] long 
 13215 ;;  stp             2   36[BANK0 ] PTR struct .
 13216 ;;		 -> diff_prCalibTabDef(162), 
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  1    wreg      void 
 13219 ;; Registers used:
 13220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/0
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13226 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13227 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13229 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13230 ;;Total ram usage:       14 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; Hardware stack levels required when called:    6
 13233 ;; This function calls:
 13234 ;;		___int32_2_mflot32
 13235 ;; This function is called by:
 13236 ;;		_key_process_set_up_long
 13237 ;;		___set_short_diff_calib
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241                           	psect	text67
 13242  0062B0                     __ptext67:
 13243                           	opt stack 0
 13244  0062B0                     ___enter_menu_calib_press_diff:
 13245                           	opt stack 22
 13246                           
 13247                           ;incstack = 0
 13248                           ;___enter_menu_calib_press_diff@row stored from wreg
 13249  0062B0  0100               	movlb	0	; () banked
 13250  0062B2  6F83               	movwf	___enter_menu_calib_press_diff@row& (0+255),b
 13251                           
 13252                           ;key_menu.c: 199: int32_t t32;
 13253                           ;key_menu.c: 200: st_prCalibTabDef* stp;
 13254                           ;key_menu.c: 202: menu=0x50;
 13255  0062B4  0E50               	movlw	80
 13256  0062B6  6E33               	movwf	_menu,c	;volatile
 13257                           
 13258                           ;key_menu.c: 203: subMenu=0;
 13259  0062B8  0E00               	movlw	0
 13260  0062BA  6E32               	movwf	_subMenu,c	;volatile
 13261                           
 13262                           ;key_menu.c: 204: calibRow=row;
 13263  0062BC  C083  F031         	movff	___enter_menu_calib_press_diff@row,_calibRow	;volatile
 13264                           
 13265                           ;key_menu.c: 205: calibCol=col;
 13266  0062C0  C020  F030         	movff	___enter_menu_calib_press_diff@col,_calibCol	;volatile
 13267                           
 13268                           ;key_menu.c: 206: stp=(st_prCalibTabDef*)(&diff_prCalibTabDef);
 13269  0062C4  0E10               	movlw	low _diff_prCalibTabDef
 13270  0062C6  0100               	movlb	0	; () banked
 13271  0062C8  6F84               	movwf	___enter_menu_calib_press_diff@stp& (0+255),b
 13272  0062CA  0E03               	movlw	high _diff_prCalibTabDef
 13273  0062CC  0100               	movlb	0	; () banked
 13274  0062CE  6F85               	movwf	(___enter_menu_calib_press_diff@stp+1)& (0+255),b
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;key_menu.c: 207: if(col==0){
 13278  0062D0  5020               	movf	___enter_menu_calib_press_diff@col,w,c
 13279  0062D2  A4D8               	btfss	status,2,c
 13280  0062D4  D012               	goto	l15170
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;key_menu.c: 208: *((uint8_t*)(&adjValue))=stp->prCalibRow[row].pCount;
 13284  0062D6  0100               	movlb	0	; () banked
 13285  0062D8  5183               	movf	___enter_menu_calib_press_diff@row& (0+255),w,b
 13286  0062DA  0D34               	mullw	52
 13287  0062DC  0E04               	movlw	4
 13288  0062DE  26F3               	addwf	prodl,f,c
 13289  0062E0  0E00               	movlw	0
 13290  0062E2  22F4               	addwfc	prodh,f,c
 13291  0062E4  50F3               	movf	prodl,w,c
 13292  0062E6  0100               	movlb	0	; () banked
 13293  0062E8  2584               	addwf	___enter_menu_calib_press_diff@stp& (0+255),w,b
 13294  0062EA  6ED9               	movwf	fsr2l,c
 13295  0062EC  50F4               	movf	prodh,w,c
 13296  0062EE  0100               	movlb	0	; () banked
 13297  0062F0  2185               	addwfc	(___enter_menu_calib_press_diff@stp+1)& (0+255),w,b
 13298  0062F2  6EDA               	movwf	fsr2h,c
 13299  0062F4  50DF               	movf	indf2,w,c
 13300  0062F6  6E39               	movwf	_adjValue,c
 13301                           
 13302                           ;key_menu.c: 209: }else{
 13303  0062F8  D05A               	goto	l15176
 13304  0062FA                     l15170:
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;key_menu.c: 210: t32=stp->prCalibRow[calibRow].prCalibPoint[calibCol-1].pValue;
 13308  0062FA  0EFC               	movlw	252
 13309  0062FC  0100               	movlb	0	; () banked
 13310  0062FE  6F7D               	movwf	??___enter_menu_calib_press_diff& (0+255),b
 13311  006300  0EFF               	movlw	255
 13312  006302  0100               	movlb	0	; () banked
 13313  006304  6F7E               	movwf	(??___enter_menu_calib_press_diff+1)& (0+255),b
 13314  006306  5030               	movf	_calibCol,w,c	;volatile
 13315  006308  0100               	movlb	0	; () banked
 13316  00630A  6F7F               	movwf	(??___enter_menu_calib_press_diff+2)& (0+255),b
 13317  00630C  6B80               	clrf	(??___enter_menu_calib_press_diff+3)& (0+255),b
 13318  00630E  0100               	movlb	0	; () banked
 13319  006310  90D8               	bcf	status,0,c
 13320  006312  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13321  006314  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13322  006316  0100               	movlb	0	; () banked
 13323  006318  90D8               	bcf	status,0,c
 13324  00631A  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13325  00631C  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13326  00631E  0100               	movlb	0	; () banked
 13327  006320  90D8               	bcf	status,0,c
 13328  006322  377F               	rlcf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13329  006324  3780               	rlcf	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13330  006326  0100               	movlb	0	; () banked
 13331  006328  517D               	movf	??___enter_menu_calib_press_diff& (0+255),w,b
 13332  00632A  0100               	movlb	0	; () banked
 13333  00632C  277F               	addwf	(??___enter_menu_calib_press_diff+2)& (0+255),f,b
 13334  00632E  0100               	movlb	0	; () banked
 13335  006330  517E               	movf	(??___enter_menu_calib_press_diff+1)& (0+255),w,b
 13336  006332  0100               	movlb	0	; () banked
 13337  006334  2380               	addwfc	(??___enter_menu_calib_press_diff+3)& (0+255),f,b
 13338  006336  5031               	movf	_calibRow,w,c	;volatile
 13339  006338  0D34               	mullw	52
 13340  00633A  0E04               	movlw	4
 13341  00633C  26F3               	addwf	prodl,f,c
 13342  00633E  0E00               	movlw	0
 13343  006340  22F4               	addwfc	prodh,f,c
 13344  006342  C084  F081         	movff	___enter_menu_calib_press_diff@stp,??___enter_menu_calib_press_diff+4
 13345  006346  C085  F082         	movff	___enter_menu_calib_press_diff@stp+1,??___enter_menu_calib_press_diff+5
 13346  00634A  50F3               	movf	prodl,w,c
 13347  00634C  0100               	movlb	0	; () banked
 13348  00634E  2781               	addwf	(??___enter_menu_calib_press_diff+4)& (0+255),f,b
 13349  006350  50F4               	movf	prodh,w,c
 13350  006352  0100               	movlb	0	; () banked
 13351  006354  2382               	addwfc	(??___enter_menu_calib_press_diff+5)& (0+255),f,b
 13352  006356  0100               	movlb	0	; () banked
 13353  006358  517F               	movf	(??___enter_menu_calib_press_diff+2)& (0+255),w,b
 13354  00635A  0100               	movlb	0	; () banked
 13355  00635C  2581               	addwf	(??___enter_menu_calib_press_diff+4)& (0+255),w,b
 13356  00635E  6ED9               	movwf	fsr2l,c
 13357  006360  0100               	movlb	0	; () banked
 13358  006362  5180               	movf	(??___enter_menu_calib_press_diff+3)& (0+255),w,b
 13359  006364  0100               	movlb	0	; () banked
 13360  006366  2182               	addwfc	(??___enter_menu_calib_press_diff+5)& (0+255),w,b
 13361  006368  6EDA               	movwf	fsr2h,c
 13362  00636A  CFDE F086          	movff	postinc2,___enter_menu_calib_press_diff@t32
 13363  00636E  CFDE F087          	movff	postinc2,___enter_menu_calib_press_diff@t32+1
 13364  006372  CFDE F088          	movff	postinc2,___enter_menu_calib_press_diff@t32+2
 13365  006376  CFDE F089          	movff	postinc2,___enter_menu_calib_press_diff@t32+3
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;key_menu.c: 211: t32=__int32_2_mflot32(t32);
 13369  00637A  C086  F06D         	movff	___enter_menu_calib_press_diff@t32,___int32_2_mflot32@x
 13370  00637E  C087  F06E         	movff	___enter_menu_calib_press_diff@t32+1,___int32_2_mflot32@x+1
 13371  006382  C088  F06F         	movff	___enter_menu_calib_press_diff@t32+2,___int32_2_mflot32@x+2
 13372  006386  C089  F070         	movff	___enter_menu_calib_press_diff@t32+3,___int32_2_mflot32@x+3
 13373  00638A  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 13374  00638E  C06D  F086         	movff	?___int32_2_mflot32,___enter_menu_calib_press_diff@t32
 13375  006392  C06E  F087         	movff	?___int32_2_mflot32+1,___enter_menu_calib_press_diff@t32+1
 13376  006396  C06F  F088         	movff	?___int32_2_mflot32+2,___enter_menu_calib_press_diff@t32+2
 13377  00639A  C070  F089         	movff	?___int32_2_mflot32+3,___enter_menu_calib_press_diff@t32+3
 13378                           
 13379                           ;key_menu.c: 212: m_floatAdj.t32=t32;
 13380  00639E  C086  F035         	movff	___enter_menu_calib_press_diff@t32,_m_floatAdj
 13381  0063A2  C087  F036         	movff	___enter_menu_calib_press_diff@t32+1,_m_floatAdj+1
 13382  0063A6  C088  F037         	movff	___enter_menu_calib_press_diff@t32+2,_m_floatAdj+2
 13383  0063AA  C089  F038         	movff	___enter_menu_calib_press_diff@t32+3,_m_floatAdj+3
 13384  0063AE                     l15176:
 13385                           
 13386                           ;key_menu.c: 213: }
 13387                           ;key_menu.c: 214: adjLocation=0;
 13388  0063AE  0E00               	movlw	0
 13389  0063B0  6E3F               	movwf	_adjLocation,c	;volatile
 13390  0063B2  0012               	return		;funcret
 13391  0063B4                     __end_of___enter_menu_calib_press_diff:
 13392                           	opt stack 0
 13393                           tblptru	equ	0xFF8
 13394                           tblptrh	equ	0xFF7
 13395                           tblptrl	equ	0xFF6
 13396                           tablat	equ	0xFF5
 13397                           prodh	equ	0xFF4
 13398                           prodl	equ	0xFF3
 13399                           intcon	equ	0xFF2
 13400                           postinc0	equ	0xFEE
 13401                           wreg	equ	0xFE8
 13402                           indf1	equ	0xFE7
 13403                           postinc1	equ	0xFE6
 13404                           postdec1	equ	0xFE5
 13405                           plusw1	equ	0xFE3
 13406                           fsr1h	equ	0xFE2
 13407                           fsr1l	equ	0xFE1
 13408                           indf2	equ	0xFDF
 13409                           postinc2	equ	0xFDE
 13410                           postdec2	equ	0xFDD
 13411                           plusw2	equ	0xFDB
 13412                           fsr2h	equ	0xFDA
 13413                           fsr2l	equ	0xFD9
 13414                           status	equ	0xFD8
 13415                           
 13416 ;; *************** function ___enter_menu_password *****************
 13417 ;; Defined at:
 13418 ;;		line 104 in file "src/api/key_menu.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;		None
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;		None
 13423 ;; Return value:  Size  Location     Type
 13424 ;;                  1    wreg      void 
 13425 ;; Registers used:
 13426 ;;		wreg, status,2
 13427 ;; Tracked objects:
 13428 ;;		On entry : 0/0
 13429 ;;		On exit  : 0/0
 13430 ;;		Unchanged: 0/0
 13431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;Total ram usage:        0 bytes
 13437 ;; Hardware stack levels used:    1
 13438 ;; Hardware stack levels required when called:    4
 13439 ;; This function calls:
 13440 ;;		Nothing
 13441 ;; This function is called by:
 13442 ;;		_key_process_set
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           	psect	text68
 13447  00A2D6                     __ptext68:
 13448                           	opt stack 0
 13449  00A2D6                     ___enter_menu_password:
 13450                           	opt stack 24
 13451                           
 13452                           ;key_menu.c: 106: menu=0x10;
 13453                           
 13454                           ;incstack = 0
 13455  00A2D6  0E10               	movlw	16
 13456  00A2D8  6E33               	movwf	_menu,c	;volatile
 13457                           
 13458                           ;key_menu.c: 107: subMenu=0x00;
 13459  00A2DA  0E00               	movlw	0
 13460  00A2DC  6E32               	movwf	_subMenu,c	;volatile
 13461                           
 13462                           ;key_menu.c: 109: passWord=0x00;
 13463  00A2DE  0E00               	movlw	0
 13464  00A2E0  6E3E               	movwf	_passWord+1,c	;volatile
 13465  00A2E2  0E00               	movlw	0
 13466  00A2E4  6E3D               	movwf	_passWord,c	;volatile
 13467                           
 13468                           ;key_menu.c: 110: adjLocation=0x00;
 13469  00A2E6  0E00               	movlw	0
 13470  00A2E8  6E3F               	movwf	_adjLocation,c	;volatile
 13471  00A2EA  0012               	return		;funcret
 13472  00A2EC                     __end_of___enter_menu_password:
 13473                           	opt stack 0
 13474                           tblptru	equ	0xFF8
 13475                           tblptrh	equ	0xFF7
 13476                           tblptrl	equ	0xFF6
 13477                           tablat	equ	0xFF5
 13478                           prodh	equ	0xFF4
 13479                           prodl	equ	0xFF3
 13480                           intcon	equ	0xFF2
 13481                           postinc0	equ	0xFEE
 13482                           wreg	equ	0xFE8
 13483                           indf1	equ	0xFE7
 13484                           postinc1	equ	0xFE6
 13485                           postdec1	equ	0xFE5
 13486                           plusw1	equ	0xFE3
 13487                           fsr1h	equ	0xFE2
 13488                           fsr1l	equ	0xFE1
 13489                           indf2	equ	0xFDF
 13490                           postinc2	equ	0xFDE
 13491                           postdec2	equ	0xFDD
 13492                           plusw2	equ	0xFDB
 13493                           fsr2h	equ	0xFDA
 13494                           fsr2l	equ	0xFD9
 13495                           status	equ	0xFD8
 13496                           
 13497 ;; *************** function _key_process_down *****************
 13498 ;; Defined at:
 13499 ;;		line 417 in file "src/api/key_menu.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;		None
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      void 
 13506 ;; Registers used:
 13507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13517 ;;Total ram usage:        0 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    6
 13520 ;; This function calls:
 13521 ;;		___down_dpr_calib
 13522 ;;		___down_home_adj
 13523 ;;		___down_pose_size
 13524 ;;		___down_pr_calib
 13525 ;;		_key_shift_loc
 13526 ;; This function is called by:
 13527 ;;		_key_process
 13528 ;; This function uses a non-reentrant model
 13529 ;;
 13530                           
 13531                           	psect	text69
 13532  0050B8                     __ptext69:
 13533                           	opt stack 0
 13534  0050B8                     _key_process_down:
 13535                           	opt stack 23
 13536                           
 13537                           ;key_menu.c: 419: switch(menu){
 13538                           
 13539                           ;incstack = 0
 13540  0050B8  D084               	goto	l16880
 13541  0050BA                     l16854:
 13542  0050BA  ECDB  F050         	call	___down_home_adj	;wreg free
 13543  0050BE  0012               	return	
 13544  0050C0                     l16856:
 13545  0050C0  0E3F               	movlw	low _adjLocation
 13546  0050C2  0100               	movlb	0	; () banked
 13547  0050C4  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13548  0050C6  0E00               	movlw	high _adjLocation
 13549  0050C8  0100               	movlb	0	; () banked
 13550  0050CA  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13551  0050CC  0E00               	movlw	0
 13552  0050CE  0100               	movlb	0	; () banked
 13553  0050D0  6F62               	movwf	key_shift_loc@min& (0+255),b
 13554  0050D2  0E03               	movlw	3
 13555  0050D4  0100               	movlb	0	; () banked
 13556  0050D6  6F63               	movwf	key_shift_loc@max& (0+255),b
 13557  0050D8  EC06  F04C         	call	_key_shift_loc	;wreg free
 13558  0050DC  0012               	return	
 13559  0050DE                     l16858:
 13560  0050DE  0E3F               	movlw	low _adjLocation
 13561  0050E0  0100               	movlb	0	; () banked
 13562  0050E2  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13563  0050E4  0E00               	movlw	high _adjLocation
 13564  0050E6  0100               	movlb	0	; () banked
 13565  0050E8  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13566  0050EA  0E00               	movlw	0
 13567  0050EC  0100               	movlb	0	; () banked
 13568  0050EE  6F62               	movwf	key_shift_loc@min& (0+255),b
 13569  0050F0  0E04               	movlw	4
 13570  0050F2  0100               	movlb	0	; () banked
 13571  0050F4  6F63               	movwf	key_shift_loc@max& (0+255),b
 13572  0050F6  EC06  F04C         	call	_key_shift_loc	;wreg free
 13573  0050FA  0012               	return	
 13574  0050FC                     l16860:
 13575  0050FC  EC50  F04E         	call	___down_pose_size	;wreg free
 13576  005100  0012               	return	
 13577  005102                     l16862:
 13578  005102  0E3F               	movlw	low _adjLocation
 13579  005104  0100               	movlb	0	; () banked
 13580  005106  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13581  005108  0E00               	movlw	high _adjLocation
 13582  00510A  0100               	movlb	0	; () banked
 13583  00510C  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13584  00510E  0E00               	movlw	0
 13585  005110  0100               	movlb	0	; () banked
 13586  005112  6F62               	movwf	key_shift_loc@min& (0+255),b
 13587  005114  0E05               	movlw	5
 13588  005116  0100               	movlb	0	; () banked
 13589  005118  6F63               	movwf	key_shift_loc@max& (0+255),b
 13590  00511A  EC06  F04C         	call	_key_shift_loc	;wreg free
 13591  00511E  0012               	return	
 13592  005120                     l16864:
 13593  005120  EC25  F050         	call	___down_dpr_calib	;wreg free
 13594  005124  0012               	return	
 13595  005126                     l16866:
 13596  005126  EC13  F050         	call	___down_pr_calib	;wreg free
 13597  00512A  0012               	return	
 13598  00512C                     l16868:
 13599  00512C  0E3F               	movlw	low _adjLocation
 13600  00512E  0100               	movlb	0	; () banked
 13601  005130  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13602  005132  0E00               	movlw	high _adjLocation
 13603  005134  0100               	movlb	0	; () banked
 13604  005136  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13605  005138  0E00               	movlw	0
 13606  00513A  0100               	movlb	0	; () banked
 13607  00513C  6F62               	movwf	key_shift_loc@min& (0+255),b
 13608  00513E  0E02               	movlw	2
 13609  005140  0100               	movlb	0	; () banked
 13610  005142  6F63               	movwf	key_shift_loc@max& (0+255),b
 13611  005144  EC06  F04C         	call	_key_shift_loc	;wreg free
 13612                           
 13613                           ;key_menu.c: 432: case 0x80:break;
 13614  005148  0012               	return	
 13615  00514A                     l16870:
 13616  00514A  0E3F               	movlw	low _adjLocation
 13617  00514C  0100               	movlb	0	; () banked
 13618  00514E  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13619  005150  0E00               	movlw	high _adjLocation
 13620  005152  0100               	movlb	0	; () banked
 13621  005154  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13622  005156  0E00               	movlw	0
 13623  005158  0100               	movlb	0	; () banked
 13624  00515A  6F62               	movwf	key_shift_loc@min& (0+255),b
 13625  00515C  0E04               	movlw	4
 13626  00515E  0100               	movlb	0	; () banked
 13627  005160  6F63               	movwf	key_shift_loc@max& (0+255),b
 13628  005162  EC06  F04C         	call	_key_shift_loc	;wreg free
 13629  005166  0012               	return	
 13630  005168                     l16872:
 13631  005168  0E3F               	movlw	low _adjLocation
 13632  00516A  0100               	movlb	0	; () banked
 13633  00516C  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13634  00516E  0E00               	movlw	high _adjLocation
 13635  005170  0100               	movlb	0	; () banked
 13636  005172  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13637  005174  0E00               	movlw	0
 13638  005176  0100               	movlb	0	; () banked
 13639  005178  6F62               	movwf	key_shift_loc@min& (0+255),b
 13640  00517A  0E04               	movlw	4
 13641  00517C  0100               	movlb	0	; () banked
 13642  00517E  6F63               	movwf	key_shift_loc@max& (0+255),b
 13643  005180  EC06  F04C         	call	_key_shift_loc	;wreg free
 13644  005184  0012               	return	
 13645  005186                     l16874:
 13646  005186  0E3F               	movlw	low _adjLocation
 13647  005188  0100               	movlb	0	; () banked
 13648  00518A  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13649  00518C  0E00               	movlw	high _adjLocation
 13650  00518E  0100               	movlb	0	; () banked
 13651  005190  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13652  005192  0E00               	movlw	0
 13653  005194  0100               	movlb	0	; () banked
 13654  005196  6F62               	movwf	key_shift_loc@min& (0+255),b
 13655  005198  0E04               	movlw	4
 13656  00519A  0100               	movlb	0	; () banked
 13657  00519C  6F63               	movwf	key_shift_loc@max& (0+255),b
 13658  00519E  EC06  F04C         	call	_key_shift_loc	;wreg free
 13659  0051A2  0012               	return	
 13660  0051A4                     l16876:
 13661  0051A4  0E3F               	movlw	low _adjLocation
 13662  0051A6  0100               	movlb	0	; () banked
 13663  0051A8  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13664  0051AA  0E00               	movlw	high _adjLocation
 13665  0051AC  0100               	movlb	0	; () banked
 13666  0051AE  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13667  0051B0  0E00               	movlw	0
 13668  0051B2  0100               	movlb	0	; () banked
 13669  0051B4  6F62               	movwf	key_shift_loc@min& (0+255),b
 13670  0051B6  0E02               	movlw	2
 13671  0051B8  0100               	movlb	0	; () banked
 13672  0051BA  6F63               	movwf	key_shift_loc@max& (0+255),b
 13673  0051BC  EC06  F04C         	call	_key_shift_loc	;wreg free
 13674                           
 13675                           ;key_menu.c: 438: }
 13676                           
 13677                           ;key_menu.c: 437: default:break;
 13678  0051C0  0012               	return	
 13679  0051C2                     l16880:
 13680  0051C2  5033               	movf	_menu,w,c	;volatile
 13681                           
 13682                           ; Switch size 1, requested type "space"
 13683                           ; Number of cases is 13, Range of values is 0 to 192
 13684                           ; switch strategies available:
 13685                           ; Name         Instructions Cycles
 13686                           ; simple_byte           40    21 (average)
 13687                           ;	Chosen strategy is simple_byte
 13688  0051C4  0A00               	xorlw	0	; case 0
 13689  0051C6  B4D8               	btfsc	status,2,c
 13690  0051C8  D778               	goto	l16854
 13691  0051CA  0A10               	xorlw	16	; case 16
 13692  0051CC  B4D8               	btfsc	status,2,c
 13693  0051CE  D778               	goto	l16856
 13694  0051D0  0A30               	xorlw	48	; case 32
 13695  0051D2  B4D8               	btfsc	status,2,c
 13696  0051D4  D784               	goto	l16858
 13697  0051D6  0A10               	xorlw	16	; case 48
 13698  0051D8  B4D8               	btfsc	status,2,c
 13699  0051DA  D790               	goto	l16860
 13700  0051DC  0A70               	xorlw	112	; case 64
 13701  0051DE  B4D8               	btfsc	status,2,c
 13702  0051E0  D790               	goto	l16862
 13703  0051E2  0A10               	xorlw	16	; case 80
 13704  0051E4  B4D8               	btfsc	status,2,c
 13705  0051E6  D79C               	goto	l16864
 13706  0051E8  0A30               	xorlw	48	; case 96
 13707  0051EA  B4D8               	btfsc	status,2,c
 13708  0051EC  D79C               	goto	l16866
 13709  0051EE  0A10               	xorlw	16	; case 112
 13710  0051F0  B4D8               	btfsc	status,2,c
 13711  0051F2  D79C               	goto	l16868
 13712  0051F4  0AF0               	xorlw	240	; case 128
 13713  0051F6  B4D8               	btfsc	status,2,c
 13714  0051F8  0012               	return	
 13715  0051FA  0A10               	xorlw	16	; case 144
 13716  0051FC  B4D8               	btfsc	status,2,c
 13717  0051FE  D7A5               	goto	l16870
 13718  005200  0A30               	xorlw	48	; case 160
 13719  005202  B4D8               	btfsc	status,2,c
 13720  005204  D7B1               	goto	l16872
 13721  005206  0A10               	xorlw	16	; case 176
 13722  005208  B4D8               	btfsc	status,2,c
 13723  00520A  D7BD               	goto	l16874
 13724  00520C  0A70               	xorlw	112	; case 192
 13725  00520E  A4D8               	btfss	status,2,c
 13726  005210  0012               	return	
 13727  005212  D7C8               	goto	l16876
 13728  005214                     __end_of_key_process_down:
 13729                           	opt stack 0
 13730                           tblptru	equ	0xFF8
 13731                           tblptrh	equ	0xFF7
 13732                           tblptrl	equ	0xFF6
 13733                           tablat	equ	0xFF5
 13734                           prodh	equ	0xFF4
 13735                           prodl	equ	0xFF3
 13736                           intcon	equ	0xFF2
 13737                           postinc0	equ	0xFEE
 13738                           wreg	equ	0xFE8
 13739                           indf1	equ	0xFE7
 13740                           postinc1	equ	0xFE6
 13741                           postdec1	equ	0xFE5
 13742                           plusw1	equ	0xFE3
 13743                           fsr1h	equ	0xFE2
 13744                           fsr1l	equ	0xFE1
 13745                           indf2	equ	0xFDF
 13746                           postinc2	equ	0xFDE
 13747                           postdec2	equ	0xFDD
 13748                           plusw2	equ	0xFDB
 13749                           fsr2h	equ	0xFDA
 13750                           fsr2l	equ	0xFD9
 13751                           status	equ	0xFD8
 13752                           
 13753 ;; *************** function ___down_pr_calib *****************
 13754 ;; Defined at:
 13755 ;;		line 381 in file "src/api/key_menu.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;		None
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;		None
 13760 ;; Return value:  Size  Location     Type
 13761 ;;                  1    wreg      void 
 13762 ;; Registers used:
 13763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13764 ;; Tracked objects:
 13765 ;;		On entry : 0/0
 13766 ;;		On exit  : 0/0
 13767 ;;		Unchanged: 0/0
 13768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;Total ram usage:        0 bytes
 13774 ;; Hardware stack levels used:    1
 13775 ;; Hardware stack levels required when called:    5
 13776 ;; This function calls:
 13777 ;;		_key_shift_loc
 13778 ;; This function is called by:
 13779 ;;		_key_process_down
 13780 ;; This function uses a non-reentrant model
 13781 ;;
 13782                           
 13783                           	psect	text70
 13784  00A026                     __ptext70:
 13785                           	opt stack 0
 13786  00A026                     ___down_pr_calib:
 13787                           	opt stack 23
 13788                           
 13789                           ;key_menu.c: 383: if(calibCol){
 13790                           
 13791                           ;incstack = 0
 13792  00A026  5030               	movf	_calibCol,w,c	;volatile
 13793  00A028  B4D8               	btfsc	status,2,c
 13794  00A02A  0012               	return	
 13795                           
 13796                           ;key_menu.c: 384: key_shift_loc((uint8_t*)(&adjLocation),0,4);
 13797  00A02C  0E3F               	movlw	low _adjLocation
 13798  00A02E  0100               	movlb	0	; () banked
 13799  00A030  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13800  00A032  0E00               	movlw	high _adjLocation
 13801  00A034  0100               	movlb	0	; () banked
 13802  00A036  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13803  00A038  0E00               	movlw	0
 13804  00A03A  0100               	movlb	0	; () banked
 13805  00A03C  6F62               	movwf	key_shift_loc@min& (0+255),b
 13806  00A03E  0E04               	movlw	4
 13807  00A040  0100               	movlb	0	; () banked
 13808  00A042  6F63               	movwf	key_shift_loc@max& (0+255),b
 13809  00A044  EC06  F04C         	call	_key_shift_loc	;wreg free
 13810  00A048  0012               	return	
 13811  00A04A                     __end_of___down_pr_calib:
 13812                           	opt stack 0
 13813                           tblptru	equ	0xFF8
 13814                           tblptrh	equ	0xFF7
 13815                           tblptrl	equ	0xFF6
 13816                           tablat	equ	0xFF5
 13817                           prodh	equ	0xFF4
 13818                           prodl	equ	0xFF3
 13819                           intcon	equ	0xFF2
 13820                           postinc0	equ	0xFEE
 13821                           wreg	equ	0xFE8
 13822                           indf1	equ	0xFE7
 13823                           postinc1	equ	0xFE6
 13824                           postdec1	equ	0xFE5
 13825                           plusw1	equ	0xFE3
 13826                           fsr1h	equ	0xFE2
 13827                           fsr1l	equ	0xFE1
 13828                           indf2	equ	0xFDF
 13829                           postinc2	equ	0xFDE
 13830                           postdec2	equ	0xFDD
 13831                           plusw2	equ	0xFDB
 13832                           fsr2h	equ	0xFDA
 13833                           fsr2l	equ	0xFD9
 13834                           status	equ	0xFD8
 13835                           
 13836 ;; *************** function ___down_pose_size *****************
 13837 ;; Defined at:
 13838 ;;		line 364 in file "src/api/key_menu.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;		None
 13841 ;; Auto vars:     Size  Location     Type
 13842 ;;		None
 13843 ;; Return value:  Size  Location     Type
 13844 ;;                  1    wreg      void 
 13845 ;; Registers used:
 13846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13847 ;; Tracked objects:
 13848 ;;		On entry : 0/0
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13856 ;;Total ram usage:        0 bytes
 13857 ;; Hardware stack levels used:    1
 13858 ;; Hardware stack levels required when called:    5
 13859 ;; This function calls:
 13860 ;;		_key_shift_loc
 13861 ;; This function is called by:
 13862 ;;		_key_process_down
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           	psect	text71
 13867  009CA0                     __ptext71:
 13868                           	opt stack 0
 13869  009CA0                     ___down_pose_size:
 13870                           	opt stack 23
 13871                           
 13872                           ;key_menu.c: 366: switch(subMenu){
 13873                           
 13874                           ;incstack = 0
 13875  009CA0  D00F               	goto	l15792
 13876  009CA2                     l15788:
 13877                           
 13878                           ;key_menu.c: 368: case 0x02:
 13879                           ;key_menu.c: 369: key_shift_loc((uint8_t*)(&adjLocation),0,4);break;
 13880  009CA2  0E3F               	movlw	low _adjLocation
 13881  009CA4  0100               	movlb	0	; () banked
 13882  009CA6  6F60               	movwf	key_shift_loc@loc& (0+255),b
 13883  009CA8  0E00               	movlw	high _adjLocation
 13884  009CAA  0100               	movlb	0	; () banked
 13885  009CAC  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 13886  009CAE  0E00               	movlw	0
 13887  009CB0  0100               	movlb	0	; () banked
 13888  009CB2  6F62               	movwf	key_shift_loc@min& (0+255),b
 13889  009CB4  0E04               	movlw	4
 13890  009CB6  0100               	movlb	0	; () banked
 13891  009CB8  6F63               	movwf	key_shift_loc@max& (0+255),b
 13892  009CBA  EC06  F04C         	call	_key_shift_loc	;wreg free
 13893                           
 13894                           ;key_menu.c: 371: }
 13895                           
 13896                           ;key_menu.c: 370: default:break;
 13897  009CBE  0012               	return	
 13898  009CC0                     l15792:
 13899  009CC0  5032               	movf	_subMenu,w,c	;volatile
 13900                           
 13901                           ; Switch size 1, requested type "space"
 13902                           ; Number of cases is 2, Range of values is 1 to 2
 13903                           ; switch strategies available:
 13904                           ; Name         Instructions Cycles
 13905                           ; simple_byte            7     4 (average)
 13906                           ;	Chosen strategy is simple_byte
 13907  009CC2  0A01               	xorlw	1	; case 1
 13908  009CC4  B4D8               	btfsc	status,2,c
 13909  009CC6  D7ED               	goto	l15788
 13910  009CC8  0A03               	xorlw	3	; case 2
 13911  009CCA  A4D8               	btfss	status,2,c
 13912  009CCC  0012               	return	
 13913  009CCE  D7E9               	goto	l15788
 13914  009CD0                     __end_of___down_pose_size:
 13915                           	opt stack 0
 13916                           tblptru	equ	0xFF8
 13917                           tblptrh	equ	0xFF7
 13918                           tblptrl	equ	0xFF6
 13919                           tablat	equ	0xFF5
 13920                           prodh	equ	0xFF4
 13921                           prodl	equ	0xFF3
 13922                           intcon	equ	0xFF2
 13923                           postinc0	equ	0xFEE
 13924                           wreg	equ	0xFE8
 13925                           indf1	equ	0xFE7
 13926                           postinc1	equ	0xFE6
 13927                           postdec1	equ	0xFE5
 13928                           plusw1	equ	0xFE3
 13929                           fsr1h	equ	0xFE2
 13930                           fsr1l	equ	0xFE1
 13931                           indf2	equ	0xFDF
 13932                           postinc2	equ	0xFDE
 13933                           postdec2	equ	0xFDD
 13934                           plusw2	equ	0xFDB
 13935                           fsr2h	equ	0xFDA
 13936                           fsr2l	equ	0xFD9
 13937                           status	equ	0xFD8
 13938                           
 13939 ;; *************** function ___down_home_adj *****************
 13940 ;; Defined at:
 13941 ;;		line 388 in file "src/api/key_menu.c"
 13942 ;; Parameters:    Size  Location     Type
 13943 ;;		None
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;  t8              1   31[COMRAM] unsigned char 
 13946 ;; Return value:  Size  Location     Type
 13947 ;;                  1    wreg      void 
 13948 ;; Registers used:
 13949 ;;		wreg, status,2, status,0
 13950 ;; Tracked objects:
 13951 ;;		On entry : 0/0
 13952 ;;		On exit  : 0/0
 13953 ;;		Unchanged: 0/0
 13954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13959 ;;Total ram usage:        1 bytes
 13960 ;; Hardware stack levels used:    1
 13961 ;; Hardware stack levels required when called:    4
 13962 ;; This function calls:
 13963 ;;		Nothing
 13964 ;; This function is called by:
 13965 ;;		_key_process_down
 13966 ;; This function uses a non-reentrant model
 13967 ;;
 13968                           
 13969                           	psect	text72
 13970  00A1B6                     __ptext72:
 13971                           	opt stack 0
 13972  00A1B6                     ___down_home_adj:
 13973                           	opt stack 24
 13974                           
 13975                           ;key_menu.c: 390: uint8_t t8;
 13976                           ;key_menu.c: 393: t8=subMenu & 0x0f;
 13977                           
 13978                           ;incstack = 0
 13979  00A1B6  5032               	movf	_subMenu,w,c	;volatile
 13980  00A1B8  0B0F               	andlw	15
 13981  00A1BA  6E20               	movwf	___down_home_adj@t8,c
 13982                           
 13983                           ;key_menu.c: 394: t8++;
 13984  00A1BC  2A20               	incf	___down_home_adj@t8,f,c
 13985                           
 13986                           ;key_menu.c: 395: if(t8>3)t8=0;
 13987  00A1BE  0E03               	movlw	3
 13988  00A1C0  6420               	cpfsgt	___down_home_adj@t8,c
 13989  00A1C2  D002               	goto	l15810
 13990  00A1C4  0E00               	movlw	0
 13991  00A1C6  6E20               	movwf	___down_home_adj@t8,c
 13992  00A1C8                     l15810:
 13993                           
 13994                           ;key_menu.c: 397: subMenu &= 0xf0;
 13995  00A1C8  0EF0               	movlw	240
 13996  00A1CA  1632               	andwf	_subMenu,f,c	;volatile
 13997                           
 13998                           ;key_menu.c: 398: subMenu |= t8;
 13999  00A1CC  5020               	movf	___down_home_adj@t8,w,c
 14000  00A1CE  1232               	iorwf	_subMenu,f,c	;volatile
 14001  00A1D0  0012               	return		;funcret
 14002  00A1D2                     __end_of___down_home_adj:
 14003                           	opt stack 0
 14004                           tblptru	equ	0xFF8
 14005                           tblptrh	equ	0xFF7
 14006                           tblptrl	equ	0xFF6
 14007                           tablat	equ	0xFF5
 14008                           prodh	equ	0xFF4
 14009                           prodl	equ	0xFF3
 14010                           intcon	equ	0xFF2
 14011                           postinc0	equ	0xFEE
 14012                           wreg	equ	0xFE8
 14013                           indf1	equ	0xFE7
 14014                           postinc1	equ	0xFE6
 14015                           postdec1	equ	0xFE5
 14016                           plusw1	equ	0xFE3
 14017                           fsr1h	equ	0xFE2
 14018                           fsr1l	equ	0xFE1
 14019                           indf2	equ	0xFDF
 14020                           postinc2	equ	0xFDE
 14021                           postdec2	equ	0xFDD
 14022                           plusw2	equ	0xFDB
 14023                           fsr2h	equ	0xFDA
 14024                           fsr2l	equ	0xFD9
 14025                           status	equ	0xFD8
 14026                           
 14027 ;; *************** function ___down_dpr_calib *****************
 14028 ;; Defined at:
 14029 ;;		line 374 in file "src/api/key_menu.c"
 14030 ;; Parameters:    Size  Location     Type
 14031 ;;		None
 14032 ;; Auto vars:     Size  Location     Type
 14033 ;;		None
 14034 ;; Return value:  Size  Location     Type
 14035 ;;                  1    wreg      void 
 14036 ;; Registers used:
 14037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14038 ;; Tracked objects:
 14039 ;;		On entry : 0/0
 14040 ;;		On exit  : 0/0
 14041 ;;		Unchanged: 0/0
 14042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14047 ;;Total ram usage:        0 bytes
 14048 ;; Hardware stack levels used:    1
 14049 ;; Hardware stack levels required when called:    5
 14050 ;; This function calls:
 14051 ;;		_key_shift_loc
 14052 ;; This function is called by:
 14053 ;;		_key_process_down
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057                           	psect	text73
 14058  00A04A                     __ptext73:
 14059                           	opt stack 0
 14060  00A04A                     ___down_dpr_calib:
 14061                           	opt stack 23
 14062                           
 14063                           ;key_menu.c: 376: if(calibCol){
 14064                           
 14065                           ;incstack = 0
 14066  00A04A  5030               	movf	_calibCol,w,c	;volatile
 14067  00A04C  B4D8               	btfsc	status,2,c
 14068  00A04E  0012               	return	
 14069                           
 14070                           ;key_menu.c: 377: key_shift_loc((uint8_t*)(&adjLocation),0,4);
 14071  00A050  0E3F               	movlw	low _adjLocation
 14072  00A052  0100               	movlb	0	; () banked
 14073  00A054  6F60               	movwf	key_shift_loc@loc& (0+255),b
 14074  00A056  0E00               	movlw	high _adjLocation
 14075  00A058  0100               	movlb	0	; () banked
 14076  00A05A  6F61               	movwf	(key_shift_loc@loc+1)& (0+255),b
 14077  00A05C  0E00               	movlw	0
 14078  00A05E  0100               	movlb	0	; () banked
 14079  00A060  6F62               	movwf	key_shift_loc@min& (0+255),b
 14080  00A062  0E04               	movlw	4
 14081  00A064  0100               	movlb	0	; () banked
 14082  00A066  6F63               	movwf	key_shift_loc@max& (0+255),b
 14083  00A068  EC06  F04C         	call	_key_shift_loc	;wreg free
 14084  00A06C  0012               	return	
 14085  00A06E                     __end_of___down_dpr_calib:
 14086                           	opt stack 0
 14087                           tblptru	equ	0xFF8
 14088                           tblptrh	equ	0xFF7
 14089                           tblptrl	equ	0xFF6
 14090                           tablat	equ	0xFF5
 14091                           prodh	equ	0xFF4
 14092                           prodl	equ	0xFF3
 14093                           intcon	equ	0xFF2
 14094                           postinc0	equ	0xFEE
 14095                           wreg	equ	0xFE8
 14096                           indf1	equ	0xFE7
 14097                           postinc1	equ	0xFE6
 14098                           postdec1	equ	0xFE5
 14099                           plusw1	equ	0xFE3
 14100                           fsr1h	equ	0xFE2
 14101                           fsr1l	equ	0xFE1
 14102                           indf2	equ	0xFDF
 14103                           postinc2	equ	0xFDE
 14104                           postdec2	equ	0xFDD
 14105                           plusw2	equ	0xFDB
 14106                           fsr2h	equ	0xFDA
 14107                           fsr2l	equ	0xFD9
 14108                           status	equ	0xFD8
 14109                           
 14110 ;; *************** function _key_shift_loc *****************
 14111 ;; Defined at:
 14112 ;;		line 47 in file "src/api/key_menu.c"
 14113 ;; Parameters:    Size  Location     Type
 14114 ;;  loc             2    0[BANK0 ] PTR unsigned char 
 14115 ;;		 -> adjLocation(1), 
 14116 ;;  min             1    2[BANK0 ] unsigned char 
 14117 ;;  max             1    3[BANK0 ] unsigned char 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  t8              1   31[COMRAM] unsigned char 
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  1    wreg      void 
 14122 ;; Registers used:
 14123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14124 ;; Tracked objects:
 14125 ;;		On entry : 0/0
 14126 ;;		On exit  : 0/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;Total ram usage:        5 bytes
 14134 ;; Hardware stack levels used:    1
 14135 ;; Hardware stack levels required when called:    4
 14136 ;; This function calls:
 14137 ;;		Nothing
 14138 ;; This function is called by:
 14139 ;;		___down_pose_size
 14140 ;;		___down_dpr_calib
 14141 ;;		___down_pr_calib
 14142 ;;		_key_process_down
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	text74
 14147  00980C                     __ptext74:
 14148                           	opt stack 0
 14149  00980C                     _key_shift_loc:
 14150                           	opt stack 24
 14151                           
 14152                           ;key_menu.c: 49: uint8_t t8=*loc;
 14153                           
 14154                           ;incstack = 0
 14155  00980C  C060  FFD9         	movff	key_shift_loc@loc,fsr2l
 14156  009810  C061  FFDA         	movff	key_shift_loc@loc+1,fsr2h
 14157  009814  50DF               	movf	indf2,w,c
 14158  009816  6E20               	movwf	key_shift_loc@t8,c
 14159                           
 14160                           ;key_menu.c: 50: if(min>=max){
 14161  009818  0100               	movlb	0	; () banked
 14162  00981A  5163               	movf	key_shift_loc@max& (0+255),w,b
 14163  00981C  0100               	movlb	0	; () banked
 14164  00981E  5D62               	subwf	key_shift_loc@min& (0+255),w,b
 14165  009820  B0D8               	btfsc	status,0,c
 14166  009822  D005               	goto	l15078
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;key_menu.c: 53: t8++;
 14170                           
 14171                           ; BSR set to: 0
 14172                           
 14173                           ;key_menu.c: 52: }else{
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;key_menu.c: 51: t8=min;
 14177  009824  2A20               	incf	key_shift_loc@t8,f,c
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;key_menu.c: 54: if(t8>max)t8=min;
 14181  009826  5020               	movf	key_shift_loc@t8,w,c
 14182  009828  0100               	movlb	0	; () banked
 14183  00982A  5D63               	subwf	key_shift_loc@max& (0+255),w,b
 14184  00982C  A0D8               	btfss	status,0,c
 14185  00982E                     l15078:
 14186                           
 14187                           ; BSR set to: 0
 14188  00982E  C062  F020         	movff	key_shift_loc@min,key_shift_loc@t8
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;key_menu.c: 55: }
 14192                           ;key_menu.c: 56: if(m_floatAdj.stru.sign){
 14193                           
 14194                           ; BSR set to: 0
 14195                           
 14196                           ; BSR set to: 0
 14197  009832  5038               	movf	_m_floatAdj+3,w,c
 14198  009834  B4D8               	btfsc	status,2,c
 14199  009836  D005               	goto	l15086
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;key_menu.c: 57: if(t8==0)t8=1;
 14203  009838  5020               	movf	key_shift_loc@t8,w,c
 14204  00983A  A4D8               	btfss	status,2,c
 14205  00983C  D002               	goto	l15086
 14206                           
 14207                           ; BSR set to: 0
 14208  00983E  0E01               	movlw	1
 14209  009840  6E20               	movwf	key_shift_loc@t8,c
 14210  009842                     l15086:
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;key_menu.c: 58: }
 14214                           ;key_menu.c: 59: *loc=t8;
 14215  009842  C060  FFD9         	movff	key_shift_loc@loc,fsr2l
 14216  009846  C061  FFDA         	movff	key_shift_loc@loc+1,fsr2h
 14217  00984A  C020  FFDF         	movff	key_shift_loc@t8,indf2
 14218                           
 14219                           ; BSR set to: 0
 14220  00984E  0012               	return		;funcret
 14221  009850                     __end_of_key_shift_loc:
 14222                           	opt stack 0
 14223                           tblptru	equ	0xFF8
 14224                           tblptrh	equ	0xFF7
 14225                           tblptrl	equ	0xFF6
 14226                           tablat	equ	0xFF5
 14227                           prodh	equ	0xFF4
 14228                           prodl	equ	0xFF3
 14229                           intcon	equ	0xFF2
 14230                           postinc0	equ	0xFEE
 14231                           wreg	equ	0xFE8
 14232                           indf1	equ	0xFE7
 14233                           postinc1	equ	0xFE6
 14234                           postdec1	equ	0xFE5
 14235                           plusw1	equ	0xFE3
 14236                           fsr1h	equ	0xFE2
 14237                           fsr1l	equ	0xFE1
 14238                           indf2	equ	0xFDF
 14239                           postinc2	equ	0xFDE
 14240                           postdec2	equ	0xFDD
 14241                           plusw2	equ	0xFDB
 14242                           fsr2h	equ	0xFDA
 14243                           fsr2l	equ	0xFD9
 14244                           status	equ	0xFD8
 14245                           
 14246 ;; *************** function _event_process_time_out *****************
 14247 ;; Defined at:
 14248 ;;		line 30 in file "src/app/event.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;		None
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;		None
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  1    wreg      char 
 14255 ;; Registers used:
 14256 ;;		None
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;Total ram usage:        0 bytes
 14267 ;; Hardware stack levels used:    1
 14268 ;; Hardware stack levels required when called:    4
 14269 ;; This function calls:
 14270 ;;		Nothing
 14271 ;; This function is called by:
 14272 ;;		_main
 14273 ;;		_event_process
 14274 ;; This function uses a non-reentrant model
 14275 ;;
 14276                           
 14277                           	psect	text75
 14278  00A3BA                     __ptext75:
 14279                           	opt stack 0
 14280  00A3BA                     _event_process_time_out:
 14281                           	opt stack 26
 14282                           
 14283                           ;event.c: 33: return 1;
 14284                           ;	Return value of _event_process_time_out is never used
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;incstack = 0
 14288  00A3BA  0012               	return		;funcret
 14289  00A3BC                     __end_of_event_process_time_out:
 14290                           	opt stack 0
 14291                           tblptru	equ	0xFF8
 14292                           tblptrh	equ	0xFF7
 14293                           tblptrl	equ	0xFF6
 14294                           tablat	equ	0xFF5
 14295                           prodh	equ	0xFF4
 14296                           prodl	equ	0xFF3
 14297                           intcon	equ	0xFF2
 14298                           postinc0	equ	0xFEE
 14299                           wreg	equ	0xFE8
 14300                           indf1	equ	0xFE7
 14301                           postinc1	equ	0xFE6
 14302                           postdec1	equ	0xFE5
 14303                           plusw1	equ	0xFE3
 14304                           fsr1h	equ	0xFE2
 14305                           fsr1l	equ	0xFE1
 14306                           indf2	equ	0xFDF
 14307                           postinc2	equ	0xFDE
 14308                           postdec2	equ	0xFDD
 14309                           plusw2	equ	0xFDB
 14310                           fsr2h	equ	0xFDA
 14311                           fsr2l	equ	0xFD9
 14312                           status	equ	0xFD8
 14313                           
 14314 ;; *************** function _event_process_ticker *****************
 14315 ;; Defined at:
 14316 ;;		line 23 in file "src/app/event.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;		None
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;  ret             1  135[BANK0 ] unsigned char 
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  1    wreg      char 
 14323 ;; Registers used:
 14324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14325 ;; Tracked objects:
 14326 ;;		On entry : 0/0
 14327 ;;		On exit  : 0/0
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14334 ;;Total ram usage:        1 bytes
 14335 ;; Hardware stack levels used:    1
 14336 ;; Hardware stack levels required when called:   12
 14337 ;; This function calls:
 14338 ;;		_sample_call_in_ticker
 14339 ;; This function is called by:
 14340 ;;		_main
 14341 ;;		_event_process
 14342 ;; This function uses a non-reentrant model
 14343 ;;
 14344                           
 14345                           	psect	text76
 14346  00A39C                     __ptext76:
 14347                           	opt stack 0
 14348  00A39C                     _event_process_ticker:
 14349                           	opt stack 18
 14350                           
 14351                           ;event.c: 25: uint8_t ret=0;
 14352                           
 14353                           ;incstack = 0
 14354  00A39C  0E00               	movlw	0
 14355  00A39E  0100               	movlb	0	; () banked
 14356  00A3A0  6FE7               	movwf	event_process_ticker@ret& (0+255),b
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;event.c: 26: sample_call_in_ticker();
 14360  00A3A2  EC49  F04B         	call	_sample_call_in_ticker	;wreg free
 14361  00A3A6  0012               	return	
 14362  00A3A8                     __end_of_event_process_ticker:
 14363                           	opt stack 0
 14364                           tblptru	equ	0xFF8
 14365                           tblptrh	equ	0xFF7
 14366                           tblptrl	equ	0xFF6
 14367                           tablat	equ	0xFF5
 14368                           prodh	equ	0xFF4
 14369                           prodl	equ	0xFF3
 14370                           intcon	equ	0xFF2
 14371                           postinc0	equ	0xFEE
 14372                           wreg	equ	0xFE8
 14373                           indf1	equ	0xFE7
 14374                           postinc1	equ	0xFE6
 14375                           postdec1	equ	0xFE5
 14376                           plusw1	equ	0xFE3
 14377                           fsr1h	equ	0xFE2
 14378                           fsr1l	equ	0xFE1
 14379                           indf2	equ	0xFDF
 14380                           postinc2	equ	0xFDE
 14381                           postdec2	equ	0xFDD
 14382                           plusw2	equ	0xFDB
 14383                           fsr2h	equ	0xFDA
 14384                           fsr2l	equ	0xFD9
 14385                           status	equ	0xFD8
 14386                           
 14387 ;; *************** function _sample_call_in_ticker *****************
 14388 ;; Defined at:
 14389 ;;		line 148 in file "src/api/sample.c"
 14390 ;; Parameters:    Size  Location     Type
 14391 ;;		None
 14392 ;; Auto vars:     Size  Location     Type
 14393 ;;  ret             1  134[BANK0 ] unsigned char 
 14394 ;; Return value:  Size  Location     Type
 14395 ;;                  1    wreg      void 
 14396 ;; Registers used:
 14397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14398 ;; Tracked objects:
 14399 ;;		On entry : 0/0
 14400 ;;		On exit  : 0/0
 14401 ;;		Unchanged: 0/0
 14402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14406 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14407 ;;Total ram usage:        1 bytes
 14408 ;; Hardware stack levels used:    1
 14409 ;; Hardware stack levels required when called:   11
 14410 ;; This function calls:
 14411 ;;		_sample_call_cal_diff_pr
 14412 ;;		_sample_call_cal_in_soc
 14413 ;;		_sample_call_cal_pr
 14414 ;;		_sample_diff_pr_chip_fast
 14415 ;;		_sample_in_soc_adc_ch
 14416 ;;		_sample_pr_chip_fast
 14417 ;; This function is called by:
 14418 ;;		_event_process_ticker
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           	psect	text77
 14423  009692                     __ptext77:
 14424                           	opt stack 0
 14425  009692                     _sample_call_in_ticker:
 14426                           	opt stack 18
 14427                           
 14428                           ;sample.c: 150: uint8_t ret=0;
 14429                           
 14430                           ;incstack = 0
 14431  009692  0E00               	movlw	0
 14432  009694  0100               	movlb	0	; () banked
 14433  009696  6FE6               	movwf	sample_call_in_ticker@ret& (0+255),b
 14434                           
 14435                           ;sample.c: 151: if(!sensorSimpleEn)return;
 14436  009698  0100               	movlb	0	; () banked
 14437  00969A  51F1               	movf	_sensorSimpleEn& (0+255),w,b	;volatile
 14438  00969C  B4D8               	btfsc	status,2,c
 14439  00969E  0012               	return	
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;sample.c: 152: if(dwm!=WORK_MODE){
 14443                           
 14444                           ; BSR set to: 0
 14445                           
 14446                           ; BSR set to: 0
 14447  0096A0  0100               	movlb	0	; () banked
 14448  0096A2  05FD               	decf	_dwm& (0+255),w,b	;volatile
 14449  0096A4  B4D8               	btfsc	status,2,c
 14450  0096A6  D00F               	goto	l17084
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;sample.c: 153: if(sample_call_cal_diff_pr())return;
 14454  0096A8  ECBE  F050         	call	_sample_call_cal_diff_pr	;wreg free
 14455  0096AC  0900               	iorlw	0
 14456  0096AE  A4D8               	btfss	status,2,c
 14457  0096B0  0012               	return	
 14458                           
 14459                           ;sample.c: 154: if(sample_call_cal_pr())return;
 14460  0096B2  ECAF  F050         	call	_sample_call_cal_pr	;wreg free
 14461  0096B6  0900               	iorlw	0
 14462  0096B8  A4D8               	btfss	status,2,c
 14463  0096BA  0012               	return	
 14464                           
 14465                           ;sample.c: 155: if(sample_call_cal_in_soc())return;
 14466  0096BC  EC6D  F050         	call	_sample_call_cal_in_soc	;wreg free
 14467  0096C0  0900               	iorlw	0
 14468  0096C2  A4D8               	btfss	status,2,c
 14469  0096C4  0012               	return	
 14470  0096C6                     l17084:
 14471                           
 14472                           ;sample.c: 156: }
 14473                           ;sample.c: 157: if(sample_diff_pr_chip_fast())return;
 14474  0096C6  ECF1  F01E         	call	_sample_diff_pr_chip_fast	;wreg free
 14475  0096CA  0900               	iorlw	0
 14476  0096CC  A4D8               	btfss	status,2,c
 14477  0096CE  0012               	return	
 14478                           
 14479                           ;sample.c: 158: if(sample_pr_chip_fast())return;
 14480  0096D0  ECDE  F024         	call	_sample_pr_chip_fast	;wreg free
 14481  0096D4  0900               	iorlw	0
 14482  0096D6  A4D8               	btfss	status,2,c
 14483  0096D8  0012               	return	
 14484                           
 14485                           ;sample.c: 159: if(sample_in_soc_adc_ch())return;
 14486  0096DA  EC48  F026         	call	_sample_in_soc_adc_ch	;wreg free
 14487  0096DE  0012               	return	
 14488  0096E0                     __end_of_sample_call_in_ticker:
 14489                           	opt stack 0
 14490                           tblptru	equ	0xFF8
 14491                           tblptrh	equ	0xFF7
 14492                           tblptrl	equ	0xFF6
 14493                           tablat	equ	0xFF5
 14494                           prodh	equ	0xFF4
 14495                           prodl	equ	0xFF3
 14496                           intcon	equ	0xFF2
 14497                           postinc0	equ	0xFEE
 14498                           wreg	equ	0xFE8
 14499                           indf1	equ	0xFE7
 14500                           postinc1	equ	0xFE6
 14501                           postdec1	equ	0xFE5
 14502                           plusw1	equ	0xFE3
 14503                           fsr1h	equ	0xFE2
 14504                           fsr1l	equ	0xFE1
 14505                           indf2	equ	0xFDF
 14506                           postinc2	equ	0xFDE
 14507                           postdec2	equ	0xFDD
 14508                           plusw2	equ	0xFDB
 14509                           fsr2h	equ	0xFDA
 14510                           fsr2l	equ	0xFD9
 14511                           status	equ	0xFD8
 14512                           
 14513 ;; *************** function _sample_pr_chip_fast *****************
 14514 ;; Defined at:
 14515 ;;		line 242 in file "src/api/sample.c"
 14516 ;; Parameters:    Size  Location     Type
 14517 ;;		None
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;  t16             2   43[BANK0 ] unsigned int 
 14520 ;;  ret             1   42[BANK0 ] unsigned char 
 14521 ;; Return value:  Size  Location     Type
 14522 ;;                  1    wreg      unsigned char 
 14523 ;; Registers used:
 14524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14531 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14533 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14534 ;;Total ram usage:        3 bytes
 14535 ;; Hardware stack levels used:    1
 14536 ;; Hardware stack levels required when called:   10
 14537 ;; This function calls:
 14538 ;;		___x_sample_fifo
 14539 ;;		_ads1115_read_conversion
 14540 ;;		_ads1115_set_mux
 14541 ;;		_ads1115_start_conversion
 14542 ;; This function is called by:
 14543 ;;		_sample_call_in_ticker
 14544 ;; This function uses a non-reentrant model
 14545 ;;
 14546                           
 14547                           	psect	text78
 14548  0049BC                     __ptext78:
 14549                           	opt stack 0
 14550  0049BC                     _sample_pr_chip_fast:
 14551                           	opt stack 18
 14552                           
 14553                           ;sample.c: 244: uint8_t ret=0;
 14554                           
 14555                           ;incstack = 0
 14556  0049BC  0E00               	movlw	0
 14557  0049BE  0100               	movlb	0	; () banked
 14558  0049C0  6F8A               	movwf	sample_pr_chip_fast@ret& (0+255),b
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;sample.c: 245: uint16_t t16;
 14562                           ;sample.c: 246: PrChipSampleTimer+=(1000/100);
 14563  0049C2  0E0A               	movlw	10
 14564  0049C4  0101               	movlb	1	; () banked
 14565  0049C6  2762               	addwf	_PrChipSampleTimer& (0+255),f,b	;volatile
 14566  0049C8  0E00               	movlw	0
 14567  0049CA  2363               	addwfc	(_PrChipSampleTimer+1)& (0+255),f,b	;volatile
 14568                           
 14569                           ; BSR set to: 1
 14570                           ;sample.c: 247: if(PrChipSampleTimer<100)return 0;
 14571  0049CC  0101               	movlb	1	; () banked
 14572  0049CE  5163               	movf	(_PrChipSampleTimer+1)& (0+255),w,b	;volatile
 14573  0049D0  E107               	bnz	l16618
 14574  0049D2  0E64               	movlw	100
 14575  0049D4  0101               	movlb	1	; () banked
 14576  0049D6  5D62               	subwf	_PrChipSampleTimer& (0+255),w,b	;volatile
 14577  0049D8  B0D8               	btfsc	status,0,c
 14578  0049DA  D002               	goto	l16618
 14579                           
 14580                           ; BSR set to: 1
 14581  0049DC  0E00               	movlw	0
 14582                           
 14583                           ; BSR set to: 1
 14584  0049DE  0012               	return	
 14585  0049E0                     l16618:
 14586                           
 14587                           ; BSR set to: 1
 14588                           ;sample.c: 248: PrChipSampleTimer=0;
 14589  0049E0  0E00               	movlw	0
 14590  0049E2  0101               	movlb	1	; () banked
 14591  0049E4  6F63               	movwf	(_PrChipSampleTimer+1)& (0+255),b	;volatile
 14592  0049E6  0E00               	movlw	0
 14593  0049E8  6F62               	movwf	_PrChipSampleTimer& (0+255),b	;volatile
 14594                           
 14595                           ;sample.c: 249: if(prChipSampleCount==0){
 14596  0049EA  0100               	movlb	0	; () banked
 14597  0049EC  51F6               	movf	_prChipSampleCount& (0+255),w,b	;volatile
 14598  0049EE  A4D8               	btfss	status,2,c
 14599  0049F0  D015               	goto	l16632
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;sample.c: 250: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 14603  0049F2  0E04               	movlw	4
 14604  0049F4  0100               	movlb	0	; () banked
 14605  0049F6  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 14606                           
 14607                           ; BSR set to: 0
 14608                           ;sample.c: 251: ads1115_set_mux(pAds1115PrObj,prChipSampleCh);
 14609  0049F8  C0EC  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 14610  0049FC  C0ED  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 14611  004A00  C0F7  F062         	movff	_prChipSampleCh,ads1115_set_mux@mux	;volatile
 14612  004A04  EC5B  F050         	call	_ads1115_set_mux	;wreg free
 14613                           
 14614                           ;sample.c: 252: ads1115_start_conversion(pAds1115PrObj);
 14615  004A08  C0EC  F06B         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 14616  004A0C  C0ED  F06C         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 14617  004A10  EC85  F04F         	call	_ads1115_start_conversion	;wreg free
 14618                           
 14619                           ;sample.c: 253: prChipSampleCount++;
 14620  004A14  0100               	movlb	0	; () banked
 14621  004A16  2BF6               	incf	_prChipSampleCount& (0+255),f,b	;volatile
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;sample.c: 254: return 1;
 14625  004A18  0E01               	movlw	1
 14626                           
 14627                           ; BSR set to: 0
 14628  004A1A  0012               	return	
 14629  004A1C                     l16632:
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;sample.c: 255: }
 14633                           ;sample.c: 257: t16=ads1115_read_conversion(pAds1115PrObj);
 14634  004A1C  C0EC  F06E         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 14635  004A20  C0ED  F06F         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 14636  004A24  ECE3  F04B         	call	_ads1115_read_conversion	;wreg free
 14637  004A28  C06E  F08B         	movff	?_ads1115_read_conversion,sample_pr_chip_fast@t16
 14638  004A2C  C06F  F08C         	movff	?_ads1115_read_conversion+1,sample_pr_chip_fast@t16+1
 14639                           
 14640                           ;sample.c: 258: if(prChipSampleCh==ADS1X1X_MUX_SINGLE_0){
 14641  004A30  0E04               	movlw	4
 14642  004A32  0100               	movlb	0	; () banked
 14643  004A34  19F7               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 14644  004A36  A4D8               	btfss	status,2,c
 14645  004A38  D015               	goto	l16640
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;sample.c: 259: adc_exPt100=__x_sample_fifo(sampBufPt100ExA,t16,4);
 14649  004A3A  0EC8               	movlw	low _sampBufPt100ExA
 14650  004A3C  0100               	movlb	0	; () banked
 14651  004A3E  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14652  004A40  0E01               	movlw	high _sampBufPt100ExA
 14653  004A42  0100               	movlb	0	; () banked
 14654  004A44  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14655  004A46  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 14656  004A4A  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 14657  004A4E  0E04               	movlw	4
 14658  004A50  0100               	movlb	0	; () banked
 14659  004A52  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14660  004A54  EC93  F025         	call	___x_sample_fifo	;wreg free
 14661  004A58  C07A  F16C         	movff	?___x_sample_fifo,_adc_exPt100	;volatile
 14662  004A5C  C07B  F16D         	movff	?___x_sample_fifo+1,_adc_exPt100+1	;volatile
 14663                           
 14664                           ;sample.c: 260: prChipSampleCh=ADS1X1X_MUX_SINGLE_1;
 14665  004A60  0E05               	movlw	5
 14666  004A62  D045               	goto	L16
 14667  004A64                     l16640:
 14668                           
 14669                           ; BSR set to: 0
 14670  004A64  0E05               	movlw	5
 14671  004A66  0100               	movlb	0	; () banked
 14672  004A68  19F7               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 14673  004A6A  A4D8               	btfss	status,2,c
 14674  004A6C  D021               	goto	l16650
 14675                           
 14676                           ; BSR set to: 0
 14677                           ;sample.c: 262: t16=__x_sample_fifo(sampBufPt100ExB,t16,4);
 14678  004A6E  0EC0               	movlw	low _sampBufPt100ExB
 14679  004A70  0100               	movlb	0	; () banked
 14680  004A72  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14681  004A74  0E01               	movlw	high _sampBufPt100ExB
 14682  004A76  0100               	movlb	0	; () banked
 14683  004A78  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14684  004A7A  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 14685  004A7E  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 14686  004A82  0E04               	movlw	4
 14687  004A84  0100               	movlb	0	; () banked
 14688  004A86  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14689  004A88  EC93  F025         	call	___x_sample_fifo	;wreg free
 14690  004A8C  C07A  F08B         	movff	?___x_sample_fifo,sample_pr_chip_fast@t16
 14691  004A90  C07B  F08C         	movff	?___x_sample_fifo+1,sample_pr_chip_fast@t16+1
 14692                           
 14693                           ;sample.c: 263: t16*=2;
 14694  004A94  0100               	movlb	0	; () banked
 14695  004A96  90D8               	bcf	status,0,c
 14696  004A98  378B               	rlcf	sample_pr_chip_fast@t16& (0+255),f,b
 14697  004A9A  378C               	rlcf	(sample_pr_chip_fast@t16+1)& (0+255),f,b
 14698                           
 14699                           ; BSR set to: 0
 14700                           ;sample.c: 264: adc_exPt100-=t16;
 14701  004A9C  0100               	movlb	0	; () banked
 14702  004A9E  518B               	movf	sample_pr_chip_fast@t16& (0+255),w,b
 14703  004AA0  0101               	movlb	1	; () banked
 14704  004AA2  5F6C               	subwf	_adc_exPt100& (0+255),f,b	;volatile
 14705  004AA4  0100               	movlb	0	; () banked
 14706  004AA6  518C               	movf	(sample_pr_chip_fast@t16+1)& (0+255),w,b
 14707  004AA8  0101               	movlb	1	; () banked
 14708  004AAA  5B6D               	subwfb	(_adc_exPt100+1)& (0+255),f,b	;volatile
 14709                           
 14710                           ; BSR set to: 1
 14711                           ;sample.c: 265: prChipSampleCh=ADS1X1X_MUX_DIFF_2_3;
 14712  004AAC  0E03               	movlw	3
 14713  004AAE  D01F               	goto	L16
 14714  004AB0                     l16650:
 14715                           
 14716                           ; BSR set to: 0
 14717  004AB0  0E03               	movlw	3
 14718  004AB2  0100               	movlb	0	; () banked
 14719  004AB4  19F7               	xorwf	_prChipSampleCh& (0+255),w,b	;volatile
 14720  004AB6  A4D8               	btfss	status,2,c
 14721  004AB8  D019               	goto	l16658
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;sample.c: 267: adc_pressure=__x_sample_fifo(sampBufPr,t16,4);
 14725  004ABA  0EB8               	movlw	low _sampBufPr
 14726  004ABC  0100               	movlb	0	; () banked
 14727  004ABE  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14728  004AC0  0E01               	movlw	high _sampBufPr
 14729  004AC2  0100               	movlb	0	; () banked
 14730  004AC4  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14731  004AC6  C08B  F07C         	movff	sample_pr_chip_fast@t16,___x_sample_fifo@x
 14732  004ACA  C08C  F07D         	movff	sample_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 14733  004ACE  0E04               	movlw	4
 14734  004AD0  0100               	movlb	0	; () banked
 14735  004AD2  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14736  004AD4  EC93  F025         	call	___x_sample_fifo	;wreg free
 14737  004AD8  C07A  F16E         	movff	?___x_sample_fifo,_adc_pressure	;volatile
 14738  004ADC  C07B  F16F         	movff	?___x_sample_fifo+1,_adc_pressure+1	;volatile
 14739                           
 14740                           ;sample.c: 268: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 14741  004AE0  0E04               	movlw	4
 14742  004AE2  0100               	movlb	0	; () banked
 14743  004AE4  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;sample.c: 269: prChipSampleCount++;
 14747  004AE6  0100               	movlb	0	; () banked
 14748  004AE8  2BF6               	incf	_prChipSampleCount& (0+255),f,b	;volatile
 14749                           
 14750                           ;sample.c: 270: }else{
 14751  004AEA  D003               	goto	l16660
 14752  004AEC                     l16658:
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;sample.c: 271: prChipSampleCh=ADS1X1X_MUX_SINGLE_0;
 14756  004AEC  0E04               	movlw	4
 14757  004AEE                     L16:
 14758  004AEE  0100               	movlb	0	; () banked
 14759  004AF0  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 14760  004AF2                     l16660:
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;sample.c: 272: }
 14764                           ;sample.c: 274: ads1115_set_mux(pAds1115PrObj,prChipSampleCh);
 14765  004AF2  C0EC  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 14766  004AF6  C0ED  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 14767  004AFA  C0F7  F062         	movff	_prChipSampleCh,ads1115_set_mux@mux	;volatile
 14768  004AFE  EC5B  F050         	call	_ads1115_set_mux	;wreg free
 14769                           
 14770                           ;sample.c: 275: ads1115_start_conversion(pAds1115PrObj);
 14771  004B02  C0EC  F06B         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 14772  004B06  C0ED  F06C         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 14773  004B0A  EC85  F04F         	call	_ads1115_start_conversion	;wreg free
 14774                           
 14775                           ;sample.c: 276: if(prChipSampleCount>4){
 14776  004B0E  0E04               	movlw	4
 14777  004B10  0100               	movlb	0	; () banked
 14778  004B12  65F6               	cpfsgt	_prChipSampleCount& (0+255),b	;volatile
 14779  004B14  D006               	goto	l16668
 14780                           
 14781                           ; BSR set to: 0
 14782                           ;sample.c: 277: PrChipSampleFinish=1;
 14783  004B16  0E01               	movlw	1
 14784  004B18  0100               	movlb	0	; () banked
 14785  004B1A  6FF5               	movwf	_PrChipSampleFinish& (0+255),b
 14786                           
 14787                           ;sample.c: 278: prChipSampleCount=0;
 14788  004B1C  0E00               	movlw	0
 14789  004B1E  0100               	movlb	0	; () banked
 14790  004B20  6FF6               	movwf	_prChipSampleCount& (0+255),b	;volatile
 14791  004B22                     l16668:
 14792                           
 14793                           ; BSR set to: 0
 14794                           ;sample.c: 279: }
 14795                           ;sample.c: 280: return 1;
 14796  004B22  0E01               	movlw	1
 14797  004B24  0012               	return	
 14798  004B26                     __end_of_sample_pr_chip_fast:
 14799                           	opt stack 0
 14800                           tblptru	equ	0xFF8
 14801                           tblptrh	equ	0xFF7
 14802                           tblptrl	equ	0xFF6
 14803                           tablat	equ	0xFF5
 14804                           prodh	equ	0xFF4
 14805                           prodl	equ	0xFF3
 14806                           intcon	equ	0xFF2
 14807                           postinc0	equ	0xFEE
 14808                           wreg	equ	0xFE8
 14809                           indf1	equ	0xFE7
 14810                           postinc1	equ	0xFE6
 14811                           postdec1	equ	0xFE5
 14812                           plusw1	equ	0xFE3
 14813                           fsr1h	equ	0xFE2
 14814                           fsr1l	equ	0xFE1
 14815                           indf2	equ	0xFDF
 14816                           postinc2	equ	0xFDE
 14817                           postdec2	equ	0xFDD
 14818                           plusw2	equ	0xFDB
 14819                           fsr2h	equ	0xFDA
 14820                           fsr2l	equ	0xFD9
 14821                           status	equ	0xFD8
 14822                           
 14823 ;; *************** function _sample_in_soc_adc_ch *****************
 14824 ;; Defined at:
 14825 ;;		line 283 in file "src/api/sample.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  t16             2   42[BANK0 ] unsigned int 
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      unsigned char 
 14832 ;; Registers used:
 14833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;Total ram usage:        2 bytes
 14844 ;; Hardware stack levels used:    1
 14845 ;; Hardware stack levels required when called:    6
 14846 ;; This function calls:
 14847 ;;		___x_sample_fifo
 14848 ;;		_in_adc_init
 14849 ;;		_in_adc_start_and_read
 14850 ;; This function is called by:
 14851 ;;		_sample_call_in_ticker
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855                           	psect	text79
 14856  004C90                     __ptext79:
 14857                           	opt stack 0
 14858  004C90                     _sample_in_soc_adc_ch:
 14859                           	opt stack 22
 14860                           
 14861                           ;sample.c: 285: uint16_t t16;
 14862                           ;sample.c: 286: inSocAdcSampleTimer+=(1000/100);
 14863                           
 14864                           ;incstack = 0
 14865  004C90  0E0A               	movlw	10
 14866  004C92  0101               	movlb	1	; () banked
 14867  004C94  2760               	addwf	_inSocAdcSampleTimer& (0+255),f,b	;volatile
 14868  004C96  0E00               	movlw	0
 14869  004C98  2361               	addwfc	(_inSocAdcSampleTimer+1)& (0+255),f,b	;volatile
 14870                           
 14871                           ;sample.c: 287: if(inSocAdcSampleTimer<50)return 0;
 14872  004C9A  0101               	movlb	1	; () banked
 14873  004C9C  5161               	movf	(_inSocAdcSampleTimer+1)& (0+255),w,b	;volatile
 14874  004C9E  E107               	bnz	l16678
 14875  004CA0  0E32               	movlw	50
 14876  004CA2  0101               	movlb	1	; () banked
 14877  004CA4  5D60               	subwf	_inSocAdcSampleTimer& (0+255),w,b	;volatile
 14878  004CA6  B0D8               	btfsc	status,0,c
 14879  004CA8  D002               	goto	l16678
 14880                           
 14881                           ; BSR set to: 1
 14882  004CAA  0E00               	movlw	0
 14883                           
 14884                           ; BSR set to: 1
 14885  004CAC  0012               	return	
 14886  004CAE                     l16678:
 14887                           
 14888                           ; BSR set to: 1
 14889                           ;sample.c: 288: inSocAdcSampleTimer=0;
 14890  004CAE  0E00               	movlw	0
 14891  004CB0  0101               	movlb	1	; () banked
 14892  004CB2  6F61               	movwf	(_inSocAdcSampleTimer+1)& (0+255),b	;volatile
 14893  004CB4  0E00               	movlw	0
 14894  004CB6  6F60               	movwf	_inSocAdcSampleTimer& (0+255),b	;volatile
 14895                           
 14896                           ;sample.c: 289: if(inSocAdcSampleCount==0){
 14897  004CB8  0100               	movlb	0	; () banked
 14898  004CBA  51F4               	movf	_inSocAdcSampleCount& (0+255),w,b	;volatile
 14899  004CBC  A4D8               	btfss	status,2,c
 14900  004CBE  D00A               	goto	l16690
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;sample.c: 290: in_adc_init();
 14904  004CC0  EC37  F050         	call	_in_adc_init	;wreg free
 14905                           
 14906                           ;sample.c: 291: inSocAdcSampleCh=2;
 14907  004CC4  0E02               	movlw	2
 14908  004CC6  0100               	movlb	0	; () banked
 14909  004CC8  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;sample.c: 292: inSocAdcSampleCount=1;
 14913  004CCA  0E01               	movlw	1
 14914  004CCC  0100               	movlb	0	; () banked
 14915  004CCE  6FF4               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 14916                           
 14917                           ; BSR set to: 0
 14918                           ;sample.c: 293: return 1;
 14919  004CD0  0E01               	movlw	1
 14920                           
 14921                           ; BSR set to: 0
 14922  004CD2  0012               	return	
 14923  004CD4                     l16690:
 14924                           
 14925                           ; BSR set to: 0
 14926                           ;sample.c: 294: }
 14927                           ;sample.c: 295: if(inSocAdcSampleCh==2){
 14928  004CD4  0E02               	movlw	2
 14929  004CD6  0100               	movlb	0	; () banked
 14930  004CD8  19F3               	xorwf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14931  004CDA  A4D8               	btfss	status,2,c
 14932  004CDC  D01D               	goto	l16698
 14933                           
 14934                           ; BSR set to: 0
 14935                           ;sample.c: 296: t16=in_adc_start_and_read(inSocAdcSampleCh);
 14936  004CDE  0100               	movlb	0	; () banked
 14937  004CE0  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14938  004CE2  ECCA  F045         	call	_in_adc_start_and_read
 14939  004CE6  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14940  004CEA  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14941                           
 14942                           ;sample.c: 297: adc_iPrEx[0]=__x_sample_fifo((int16_t*)sampBufExPr0InSoc,t16,4);
 14943  004CEE  0EB0               	movlw	low _sampBufExPr0InSoc
 14944  004CF0  0100               	movlb	0	; () banked
 14945  004CF2  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14946  004CF4  0E01               	movlw	high _sampBufExPr0InSoc
 14947  004CF6  0100               	movlb	0	; () banked
 14948  004CF8  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14949  004CFA  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 14950  004CFE  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 14951  004D02  0E04               	movlw	4
 14952  004D04  0100               	movlb	0	; () banked
 14953  004D06  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14954  004D08  EC93  F025         	call	___x_sample_fifo	;wreg free
 14955  004D0C  C07A  F021         	movff	?___x_sample_fifo,_adc_iPrEx	;volatile
 14956  004D10  C07B  F022         	movff	?___x_sample_fifo+1,_adc_iPrEx+1	;volatile
 14957                           
 14958                           ;sample.c: 298: inSocAdcSampleCh=1;
 14959  004D14  0E01               	movlw	1
 14960  004D16  D061               	goto	L19
 14961  004D18                     l16698:
 14962                           
 14963                           ; BSR set to: 0
 14964  004D18  0100               	movlb	0	; () banked
 14965  004D1A  05F3               	decf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14966  004D1C  A4D8               	btfss	status,2,c
 14967  004D1E  D01D               	goto	l16706
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;sample.c: 300: t16=in_adc_start_and_read(inSocAdcSampleCh);
 14971  004D20  0100               	movlb	0	; () banked
 14972  004D22  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 14973  004D24  ECCA  F045         	call	_in_adc_start_and_read
 14974  004D28  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 14975  004D2C  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 14976                           
 14977                           ;sample.c: 301: adc_iPrEx[1]=__x_sample_fifo((int16_t*)sampBufExPr1InSoc,t16,4);
 14978  004D30  0EA8               	movlw	low _sampBufExPr1InSoc
 14979  004D32  0100               	movlb	0	; () banked
 14980  004D34  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 14981  004D36  0E01               	movlw	high _sampBufExPr1InSoc
 14982  004D38  0100               	movlb	0	; () banked
 14983  004D3A  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 14984  004D3C  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 14985  004D40  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 14986  004D44  0E04               	movlw	4
 14987  004D46  0100               	movlb	0	; () banked
 14988  004D48  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 14989  004D4A  EC93  F025         	call	___x_sample_fifo	;wreg free
 14990  004D4E  C07A  F023         	movff	?___x_sample_fifo,_adc_iPrEx+2	;volatile
 14991  004D52  C07B  F024         	movff	?___x_sample_fifo+1,_adc_iPrEx+3	;volatile
 14992                           
 14993                           ;sample.c: 302: inSocAdcSampleCh=0;
 14994  004D56  0E00               	movlw	0
 14995  004D58  D040               	goto	L19
 14996  004D5A                     l16706:
 14997                           
 14998                           ; BSR set to: 0
 14999  004D5A  0100               	movlb	0	; () banked
 15000  004D5C  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15001  004D5E  A4D8               	btfss	status,2,c
 15002  004D60  D019               	goto	l16714
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;sample.c: 304: t16=in_adc_start_and_read(inSocAdcSampleCh);
 15006  004D62  0100               	movlb	0	; () banked
 15007  004D64  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15008  004D66  ECCA  F045         	call	_in_adc_start_and_read
 15009  004D6A  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 15010  004D6E  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 15011                           
 15012                           ;sample.c: 305: __x_sample_fifo((int16_t*)sampBufBatInSoc,t16,4);
 15013  004D72  0EA0               	movlw	low _sampBufBatInSoc
 15014  004D74  0100               	movlb	0	; () banked
 15015  004D76  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15016  004D78  0E01               	movlw	high _sampBufBatInSoc
 15017  004D7A  0100               	movlb	0	; () banked
 15018  004D7C  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15019  004D7E  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 15020  004D82  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 15021  004D86  0E04               	movlw	4
 15022  004D88  0100               	movlb	0	; () banked
 15023  004D8A  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15024  004D8C  EC93  F025         	call	___x_sample_fifo	;wreg free
 15025                           
 15026                           ;sample.c: 306: inSocAdcSampleCh=3;
 15027  004D90  0E03               	movlw	3
 15028  004D92  D023               	goto	L19
 15029  004D94                     l16714:
 15030                           
 15031                           ; BSR set to: 0
 15032  004D94  0E03               	movlw	3
 15033  004D96  0100               	movlb	0	; () banked
 15034  004D98  19F3               	xorwf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15035  004D9A  A4D8               	btfss	status,2,c
 15036  004D9C  D01D               	goto	l16724
 15037                           
 15038                           ; BSR set to: 0
 15039                           ;sample.c: 308: t16=in_adc_start_and_read(inSocAdcSampleCh);
 15040  004D9E  0100               	movlb	0	; () banked
 15041  004DA0  51F3               	movf	_inSocAdcSampleCh& (0+255),w,b	;volatile
 15042  004DA2  ECCA  F045         	call	_in_adc_start_and_read
 15043  004DA6  C064  F08A         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 15044  004DAA  C065  F08B         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 15045                           
 15046                           ;sample.c: 309: __x_sample_fifo((int16_t*)sampBufRefInSoc,t16,4);
 15047  004DAE  0E98               	movlw	low _sampBufRefInSoc
 15048  004DB0  0100               	movlb	0	; () banked
 15049  004DB2  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15050  004DB4  0E01               	movlw	high _sampBufRefInSoc
 15051  004DB6  0100               	movlb	0	; () banked
 15052  004DB8  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15053  004DBA  C08A  F07C         	movff	sample_in_soc_adc_ch@t16,___x_sample_fifo@x
 15054  004DBE  C08B  F07D         	movff	sample_in_soc_adc_ch@t16+1,___x_sample_fifo@x+1
 15055  004DC2  0E04               	movlw	4
 15056  004DC4  0100               	movlb	0	; () banked
 15057  004DC6  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15058  004DC8  EC93  F025         	call	___x_sample_fifo	;wreg free
 15059                           
 15060                           ;sample.c: 310: inSocAdcSampleCh=2;
 15061  004DCC  0E02               	movlw	2
 15062  004DCE  0100               	movlb	0	; () banked
 15063  004DD0  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 15064                           
 15065                           ; BSR set to: 0
 15066                           ;sample.c: 311: inSocAdcSampleCount++;
 15067  004DD2  0100               	movlb	0	; () banked
 15068  004DD4  2BF4               	incf	_inSocAdcSampleCount& (0+255),f,b	;volatile
 15069                           
 15070                           ;sample.c: 312: }else{
 15071  004DD6  D003               	goto	l16726
 15072  004DD8                     l16724:
 15073                           
 15074                           ; BSR set to: 0
 15075                           ;sample.c: 313: inSocAdcSampleCh=2;
 15076  004DD8  0E02               	movlw	2
 15077  004DDA                     L19:
 15078  004DDA  0100               	movlb	0	; () banked
 15079  004DDC  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 15080  004DDE                     l16726:
 15081                           
 15082                           ; BSR set to: 0
 15083                           ;sample.c: 314: }
 15084                           ;sample.c: 315: if(inSocAdcSampleCount>4){
 15085  004DDE  0E04               	movlw	4
 15086  004DE0  0100               	movlb	0	; () banked
 15087  004DE2  65F4               	cpfsgt	_inSocAdcSampleCount& (0+255),b	;volatile
 15088  004DE4  D006               	goto	l16730
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;sample.c: 316: inSocAdcSampleFinish=1;
 15092  004DE6  0E01               	movlw	1
 15093  004DE8  0100               	movlb	0	; () banked
 15094  004DEA  6FF2               	movwf	_inSocAdcSampleFinish& (0+255),b
 15095                           
 15096                           ;sample.c: 317: inSocAdcSampleCount=0;
 15097  004DEC  0E00               	movlw	0
 15098  004DEE  0100               	movlb	0	; () banked
 15099  004DF0  6FF4               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 15100  004DF2                     l16730:
 15101                           
 15102                           ; BSR set to: 0
 15103                           ;sample.c: 318: }
 15104                           ;sample.c: 319: return 1;
 15105  004DF2  0E01               	movlw	1
 15106  004DF4  0012               	return	
 15107  004DF6                     __end_of_sample_in_soc_adc_ch:
 15108                           	opt stack 0
 15109                           tblptru	equ	0xFF8
 15110                           tblptrh	equ	0xFF7
 15111                           tblptrl	equ	0xFF6
 15112                           tablat	equ	0xFF5
 15113                           prodh	equ	0xFF4
 15114                           prodl	equ	0xFF3
 15115                           intcon	equ	0xFF2
 15116                           postinc0	equ	0xFEE
 15117                           wreg	equ	0xFE8
 15118                           indf1	equ	0xFE7
 15119                           postinc1	equ	0xFE6
 15120                           postdec1	equ	0xFE5
 15121                           plusw1	equ	0xFE3
 15122                           fsr1h	equ	0xFE2
 15123                           fsr1l	equ	0xFE1
 15124                           indf2	equ	0xFDF
 15125                           postinc2	equ	0xFDE
 15126                           postdec2	equ	0xFDD
 15127                           plusw2	equ	0xFDB
 15128                           fsr2h	equ	0xFDA
 15129                           fsr2l	equ	0xFD9
 15130                           status	equ	0xFD8
 15131                           
 15132 ;; *************** function _in_adc_start_and_read *****************
 15133 ;; Defined at:
 15134 ;;		line 21 in file "src/driver/in_adc.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;  ch              1    wreg     unsigned char 
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;  ch              1    6[BANK0 ] unsigned char 
 15139 ;;  ret             2    7[BANK0 ] unsigned int 
 15140 ;; Return value:  Size  Location     Type
 15141 ;;                  2    4[BANK0 ] unsigned int 
 15142 ;; Registers used:
 15143 ;;		wreg, status,2, status,0, cstack
 15144 ;; Tracked objects:
 15145 ;;		On entry : 0/0
 15146 ;;		On exit  : 0/0
 15147 ;;		Unchanged: 0/0
 15148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15150 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15152 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15153 ;;Total ram usage:        6 bytes
 15154 ;; Hardware stack levels used:    1
 15155 ;; Hardware stack levels required when called:    5
 15156 ;; This function calls:
 15157 ;;		_delay_us
 15158 ;; This function is called by:
 15159 ;;		_sample_in_soc_adc_ch
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           	psect	text80
 15164  008B94                     __ptext80:
 15165                           	opt stack 0
 15166  008B94                     _in_adc_start_and_read:
 15167                           	opt stack 22
 15168                           
 15169                           ;incstack = 0
 15170                           ;in_adc_start_and_read@ch stored from wreg
 15171  008B94  0100               	movlb	0	; () banked
 15172  008B96  6F66               	movwf	in_adc_start_and_read@ch& (0+255),b
 15173                           
 15174                           ;in_adc.c: 23: uint16_t ret=0;
 15175  008B98  0E00               	movlw	0
 15176  008B9A  0100               	movlb	0	; () banked
 15177  008B9C  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 15178  008B9E  0E00               	movlw	0
 15179  008BA0  6F67               	movwf	in_adc_start_and_read@ret& (0+255),b
 15180                           
 15181                           ; BSR set to: 0
 15182                           
 15183                           ; BSR set to: 0
 15184                           
 15185                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 15186  008BA2  80C2               	bsf	4034,0,c	;volatile
 15187                           
 15188                           ; BSR set to: 0
 15189                           
 15190                           ; BSR set to: 0
 15191                           
 15192                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 15193                           
 15194                           ; BSR set to: 0
 15195  008BA4  C066  F020         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 15196  008BA8  4620               	rlncf	??_in_adc_start_and_read,f,c
 15197  008BAA  4620               	rlncf	??_in_adc_start_and_read,f,c
 15198  008BAC  50C2               	movf	4034,w,c	;volatile
 15199  008BAE  1820               	xorwf	??_in_adc_start_and_read,w,c
 15200  008BB0  0BC3               	andlw	-61
 15201  008BB2  1820               	xorwf	??_in_adc_start_and_read,w,c
 15202  008BB4  6EC2               	movwf	4034,c	;volatile
 15203                           
 15204                           ; BSR set to: 0
 15205                           ;in_adc.c: 26: delay_us(2);
 15206                           
 15207                           ; BSR set to: 0
 15208  008BB6  0E00               	movlw	0
 15209  008BB8  0100               	movlb	0	; () banked
 15210  008BBA  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15211  008BBC  0E02               	movlw	2
 15212  008BBE  6F60               	movwf	delay_us@dly& (0+255),b
 15213  008BC0  ECAE  F04D         	call	_delay_us	;wreg free
 15214                           
 15215                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 15216  008BC4  82C2               	bsf	4034,1,c	;volatile
 15217                           
 15218                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 15219  008BC6  D001               	goto	l1751
 15220  008BC8                     l1752:
 15221  008BC8  F000               	nop	
 15222  008BCA                     l1751:
 15223  008BCA  B2C2               	btfsc	4034,1,c	;volatile
 15224  008BCC  D7FD               	goto	l1752
 15225                           
 15226                           ;in_adc.c: 30: ret=ADRESH;
 15227  008BCE  CFC4 F067          	movff	4036,in_adc_start_and_read@ret	;volatile
 15228  008BD2  0100               	movlb	0	; () banked
 15229  008BD4  6B68               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;in_adc.c: 31: ret<<=8;
 15233  008BD6  0100               	movlb	0	; () banked
 15234  008BD8  5167               	movf	in_adc_start_and_read@ret& (0+255),w,b
 15235  008BDA  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 15236  008BDC  6B67               	clrf	in_adc_start_and_read@ret& (0+255),b
 15237                           
 15238                           ; BSR set to: 0
 15239                           ;in_adc.c: 32: ret |= ADRESL;
 15240  008BDE  50C3               	movf	4035,w,c	;volatile
 15241  008BE0  0100               	movlb	0	; () banked
 15242  008BE2  1367               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 15243                           
 15244                           ; BSR set to: 0
 15245                           ;in_adc.c: 33: delay_us(2);
 15246  008BE4  0E00               	movlw	0
 15247  008BE6  0100               	movlb	0	; () banked
 15248  008BE8  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 15249  008BEA  0E02               	movlw	2
 15250  008BEC  6F60               	movwf	delay_us@dly& (0+255),b
 15251  008BEE  ECAE  F04D         	call	_delay_us	;wreg free
 15252                           
 15253                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 15254  008BF2  90C2               	bcf	4034,0,c	;volatile
 15255                           
 15256                           ;in_adc.c: 35: return ret;
 15257  008BF4  C067  F064         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 15258  008BF8  C068  F065         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 15259  008BFC  0012               	return	
 15260  008BFE                     __end_of_in_adc_start_and_read:
 15261                           	opt stack 0
 15262                           tblptru	equ	0xFF8
 15263                           tblptrh	equ	0xFF7
 15264                           tblptrl	equ	0xFF6
 15265                           tablat	equ	0xFF5
 15266                           prodh	equ	0xFF4
 15267                           prodl	equ	0xFF3
 15268                           intcon	equ	0xFF2
 15269                           postinc0	equ	0xFEE
 15270                           wreg	equ	0xFE8
 15271                           indf1	equ	0xFE7
 15272                           postinc1	equ	0xFE6
 15273                           postdec1	equ	0xFE5
 15274                           plusw1	equ	0xFE3
 15275                           fsr1h	equ	0xFE2
 15276                           fsr1l	equ	0xFE1
 15277                           indf2	equ	0xFDF
 15278                           postinc2	equ	0xFDE
 15279                           postdec2	equ	0xFDD
 15280                           plusw2	equ	0xFDB
 15281                           fsr2h	equ	0xFDA
 15282                           fsr2l	equ	0xFD9
 15283                           status	equ	0xFD8
 15284                           
 15285 ;; *************** function _in_adc_init *****************
 15286 ;; Defined at:
 15287 ;;		line 9 in file "src/driver/in_adc.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;		None
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;		None
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  1    wreg      void 
 15294 ;; Registers used:
 15295 ;;		wreg, status,2
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15305 ;;Total ram usage:        0 bytes
 15306 ;; Hardware stack levels used:    1
 15307 ;; Hardware stack levels required when called:    4
 15308 ;; This function calls:
 15309 ;;		Nothing
 15310 ;; This function is called by:
 15311 ;;		_sample_in_soc_adc_ch
 15312 ;;		_main
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           	psect	text81
 15317  00A06E                     __ptext81:
 15318                           	opt stack 0
 15319  00A06E                     _in_adc_init:
 15320                           	opt stack 26
 15321                           
 15322                           ;in_adc.c: 11: ADCON1=0b00001101;
 15323                           
 15324                           ;incstack = 0
 15325  00A06E  0E0D               	movlw	13
 15326  00A070  6EC1               	movwf	4033,c	;volatile
 15327                           
 15328                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 15329  00A072  8EC0               	bsf	4032,7,c	;volatile
 15330                           
 15331                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 15332  00A074  86C0               	bsf	4032,3,c	;volatile
 15333  00A076  88C0               	bsf	4032,4,c	;volatile
 15334  00A078  8AC0               	bsf	4032,5,c	;volatile
 15335                           
 15336                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 15337  00A07A  80C0               	bsf	4032,0,c	;volatile
 15338  00A07C  82C0               	bsf	4032,1,c	;volatile
 15339  00A07E  84C0               	bsf	4032,2,c	;volatile
 15340                           
 15341                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 15342  00A080  8EC2               	bsf	4034,7,c	;volatile
 15343                           
 15344                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 15345  00A082  50C2               	movf	4034,w,c	;volatile
 15346  00A084  0BC3               	andlw	-61
 15347  00A086  090C               	iorlw	12
 15348  00A088  6EC2               	movwf	4034,c	;volatile
 15349                           
 15350                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 15351  00A08A  9C9E               	bcf	3998,6,c	;volatile
 15352                           
 15353                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 15354  00A08C  9C9D               	bcf	3997,6,c	;volatile
 15355                           
 15356                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 15357  00A08E  9C9F               	bcf	3999,6,c	;volatile
 15358  00A090  0012               	return		;funcret
 15359  00A092                     __end_of_in_adc_init:
 15360                           	opt stack 0
 15361                           tblptru	equ	0xFF8
 15362                           tblptrh	equ	0xFF7
 15363                           tblptrl	equ	0xFF6
 15364                           tablat	equ	0xFF5
 15365                           prodh	equ	0xFF4
 15366                           prodl	equ	0xFF3
 15367                           intcon	equ	0xFF2
 15368                           postinc0	equ	0xFEE
 15369                           wreg	equ	0xFE8
 15370                           indf1	equ	0xFE7
 15371                           postinc1	equ	0xFE6
 15372                           postdec1	equ	0xFE5
 15373                           plusw1	equ	0xFE3
 15374                           fsr1h	equ	0xFE2
 15375                           fsr1l	equ	0xFE1
 15376                           indf2	equ	0xFDF
 15377                           postinc2	equ	0xFDE
 15378                           postdec2	equ	0xFDD
 15379                           plusw2	equ	0xFDB
 15380                           fsr2h	equ	0xFDA
 15381                           fsr2l	equ	0xFD9
 15382                           status	equ	0xFD8
 15383                           
 15384 ;; *************** function _sample_diff_pr_chip_fast *****************
 15385 ;; Defined at:
 15386 ;;		line 197 in file "src/api/sample.c"
 15387 ;; Parameters:    Size  Location     Type
 15388 ;;		None
 15389 ;; Auto vars:     Size  Location     Type
 15390 ;;  t16             2   49[BANK0 ] int 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  1    wreg      unsigned char 
 15393 ;; Registers used:
 15394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15401 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15403 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15404 ;;Total ram usage:        2 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:   10
 15407 ;; This function calls:
 15408 ;;		___x_sample_fifo
 15409 ;;		_ads1115_read_conversion
 15410 ;;		_ads1115_set_data_rate
 15411 ;;		_ads1115_set_mux
 15412 ;;		_ads1115_set_pga
 15413 ;;		_ads1115_start_conversion
 15414 ;;		_sample_diff_pr_fliter
 15415 ;; This function is called by:
 15416 ;;		_sample_call_in_ticker
 15417 ;; This function uses a non-reentrant model
 15418 ;;
 15419                           
 15420                           	psect	text82
 15421  003DE2                     __ptext82:
 15422                           	opt stack 0
 15423  003DE2                     _sample_diff_pr_chip_fast:
 15424                           	opt stack 18
 15425                           
 15426                           ;sample.c: 199: int16_t t16;
 15427                           ;sample.c: 200: diffPrChipSampleTimer+=(1000/100);
 15428                           
 15429                           ;incstack = 0
 15430  003DE2  0E0A               	movlw	10
 15431  003DE4  0101               	movlb	1	; () banked
 15432  003DE6  2764               	addwf	_diffPrChipSampleTimer& (0+255),f,b	;volatile
 15433  003DE8  0E00               	movlw	0
 15434  003DEA  2365               	addwfc	(_diffPrChipSampleTimer+1)& (0+255),f,b	;volatile
 15435                           
 15436                           ;sample.c: 201: if(diffPrChipSampleTimer<100)return 0;
 15437  003DEC  0101               	movlb	1	; () banked
 15438  003DEE  5165               	movf	(_diffPrChipSampleTimer+1)& (0+255),w,b	;volatile
 15439  003DF0  E107               	bnz	l16540
 15440  003DF2  0E64               	movlw	100
 15441  003DF4  0101               	movlb	1	; () banked
 15442  003DF6  5D64               	subwf	_diffPrChipSampleTimer& (0+255),w,b	;volatile
 15443  003DF8  B0D8               	btfsc	status,0,c
 15444  003DFA  D002               	goto	l16540
 15445                           
 15446                           ; BSR set to: 1
 15447  003DFC  0E00               	movlw	0
 15448                           
 15449                           ; BSR set to: 1
 15450  003DFE  0012               	return	
 15451  003E00                     l16540:
 15452                           
 15453                           ; BSR set to: 1
 15454                           ;sample.c: 202: diffPrChipSampleTimer=0;
 15455  003E00  0E00               	movlw	0
 15456  003E02  0101               	movlb	1	; () banked
 15457  003E04  6F65               	movwf	(_diffPrChipSampleTimer+1)& (0+255),b	;volatile
 15458  003E06  0E00               	movlw	0
 15459  003E08  6F64               	movwf	_diffPrChipSampleTimer& (0+255),b	;volatile
 15460                           
 15461                           ;sample.c: 203: if(diffPrChipSampleCount==0){
 15462  003E0A  0100               	movlb	0	; () banked
 15463  003E0C  51FA               	movf	_diffPrChipSampleCount& (0+255),w,b	;volatile
 15464  003E0E  A4D8               	btfss	status,2,c
 15465  003E10  D028               	goto	l16558
 15466                           
 15467                           ; BSR set to: 0
 15468                           ;sample.c: 205: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 15469  003E12  0E00               	movlw	0
 15470  003E14  0100               	movlb	0	; () banked
 15471  003E16  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15472                           
 15473                           ; BSR set to: 0
 15474                           ;sample.c: 206: ads1115_set_data_rate(pAds1115DiffPrObj,ADS1X1X_DATA_RATE_32);
 15475  003E18  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_data_rate@pAds1115
 15476  003E1C  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_data_rate@pAds1115+1
 15477  003E20  0E02               	movlw	2
 15478  003E22  0100               	movlb	0	; () banked
 15479  003E24  6F62               	movwf	ads1115_set_data_rate@dr& (0+255),b
 15480  003E26  ECED  F04F         	call	_ads1115_set_data_rate	;wreg free
 15481                           
 15482                           ;sample.c: 207: ads1115_set_mux(pAds1115DiffPrObj,diffPrChipSampCh);
 15483  003E2A  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 15484  003E2E  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 15485  003E32  C0F9  F062         	movff	_diffPrChipSampCh,ads1115_set_mux@mux	;volatile
 15486  003E36  EC5B  F050         	call	_ads1115_set_mux	;wreg free
 15487                           
 15488                           ;sample.c: 208: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 15489  003E3A  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15490  003E3E  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15491  003E42  0E00               	movlw	0
 15492  003E44  0100               	movlb	0	; () banked
 15493  003E46  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15494  003E48  EC49  F050         	call	_ads1115_set_pga	;wreg free
 15495                           
 15496                           ;sample.c: 209: ads1115_start_conversion(pAds1115DiffPrObj);
 15497  003E4C  C0EE  F06B         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 15498  003E50  C0EF  F06C         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 15499  003E54  EC85  F04F         	call	_ads1115_start_conversion	;wreg free
 15500                           
 15501                           ;sample.c: 210: diffPrChipSampleCount=1;
 15502  003E58  0E01               	movlw	1
 15503  003E5A  0100               	movlb	0	; () banked
 15504  003E5C  6FFA               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;sample.c: 211: return 1;
 15508  003E5E  0E01               	movlw	1
 15509                           
 15510                           ; BSR set to: 0
 15511  003E60  0012               	return	
 15512  003E62                     l16558:
 15513                           
 15514                           ; BSR set to: 0
 15515                           ;sample.c: 212: }
 15516                           ;sample.c: 213: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 15517  003E62  C0EE  F06E         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 15518  003E66  C0EF  F06F         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 15519  003E6A  ECE3  F04B         	call	_ads1115_read_conversion	;wreg free
 15520  003E6E  C06E  F091         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_fast@t16
 15521  003E72  C06F  F092         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_fast@t16+1
 15522                           
 15523                           ;sample.c: 214: if(diffPrChipSampCh==ADS1X1X_MUX_DIFF_0_1){
 15524  003E76  0100               	movlb	0	; () banked
 15525  003E78  51F9               	movf	_diffPrChipSampCh& (0+255),w,b	;volatile
 15526  003E7A  A4D8               	btfss	status,2,c
 15527  003E7C  D01C               	goto	l16568
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;sample.c: 215: __x_sample_fifo(sampBufDiffPr_D01,t16,4);
 15531  003E7E  0EE0               	movlw	low _sampBufDiffPr_D01
 15532  003E80  0100               	movlb	0	; () banked
 15533  003E82  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15534  003E84  0E01               	movlw	high _sampBufDiffPr_D01
 15535  003E86  0100               	movlb	0	; () banked
 15536  003E88  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15537  003E8A  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 15538  003E8E  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15539  003E92  0E04               	movlw	4
 15540  003E94  0100               	movlb	0	; () banked
 15541  003E96  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15542  003E98  EC93  F025         	call	___x_sample_fifo	;wreg free
 15543                           
 15544                           ;sample.c: 216: diffPrChipSampCh=ADS1X1X_MUX_DIFF_2_3;
 15545  003E9C  0E03               	movlw	3
 15546  003E9E  0100               	movlb	0	; () banked
 15547  003EA0  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15548                           
 15549                           ; BSR set to: 0
 15550                           ;sample.c: 217: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_256);
 15551  003EA2  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15552  003EA6  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15553  003EAA  0E05               	movlw	5
 15554  003EAC  0100               	movlb	0	; () banked
 15555  003EAE  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15556  003EB0  EC49  F050         	call	_ads1115_set_pga	;wreg free
 15557                           
 15558                           ;sample.c: 218: }else if(diffPrChipSampCh==ADS1X1X_MUX_DIFF_2_3){
 15559  003EB4  D054               	goto	l16590
 15560  003EB6                     l16568:
 15561  003EB6  0E03               	movlw	3
 15562  003EB8  0100               	movlb	0	; () banked
 15563  003EBA  19F9               	xorwf	_diffPrChipSampCh& (0+255),w,b	;volatile
 15564  003EBC  A4D8               	btfss	status,2,c
 15565  003EBE  D01C               	goto	l16576
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;sample.c: 219: __x_sample_fifo(sampBufDiffPr_D23,t16,4);
 15569  003EC0  0ED8               	movlw	low _sampBufDiffPr_D23
 15570  003EC2  0100               	movlb	0	; () banked
 15571  003EC4  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15572  003EC6  0E01               	movlw	high _sampBufDiffPr_D23
 15573  003EC8  0100               	movlb	0	; () banked
 15574  003ECA  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15575  003ECC  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 15576  003ED0  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15577  003ED4  0E04               	movlw	4
 15578  003ED6  0100               	movlb	0	; () banked
 15579  003ED8  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15580  003EDA  EC93  F025         	call	___x_sample_fifo	;wreg free
 15581                           
 15582                           ;sample.c: 220: diffPrChipSampCh=ADS1X1X_MUX_SINGLE_1;
 15583  003EDE  0E05               	movlw	5
 15584  003EE0  0100               	movlb	0	; () banked
 15585  003EE2  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;sample.c: 221: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_512);
 15589  003EE4  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15590  003EE8  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15591  003EEC  0E04               	movlw	4
 15592  003EEE  0100               	movlb	0	; () banked
 15593  003EF0  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15594  003EF2  EC49  F050         	call	_ads1115_set_pga	;wreg free
 15595                           
 15596                           ;sample.c: 222: }else if(diffPrChipSampCh==ADS1X1X_MUX_SINGLE_1){
 15597  003EF6  D033               	goto	l16590
 15598  003EF8                     l16576:
 15599  003EF8  0E05               	movlw	5
 15600  003EFA  0100               	movlb	0	; () banked
 15601  003EFC  19F9               	xorwf	_diffPrChipSampCh& (0+255),w,b	;volatile
 15602  003EFE  A4D8               	btfss	status,2,c
 15603  003F00  D022               	goto	l16586
 15604                           
 15605                           ; BSR set to: 0
 15606                           ;sample.c: 223: adc_inPt100=__x_sample_fifo(sampBufDiffPr_S1,t16,4);
 15607  003F02  0ED0               	movlw	low _sampBufDiffPr_S1
 15608  003F04  0100               	movlb	0	; () banked
 15609  003F06  6F7A               	movwf	___x_sample_fifo@buf& (0+255),b
 15610  003F08  0E01               	movlw	high _sampBufDiffPr_S1
 15611  003F0A  0100               	movlb	0	; () banked
 15612  003F0C  6F7B               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 15613  003F0E  C091  F07C         	movff	sample_diff_pr_chip_fast@t16,___x_sample_fifo@x
 15614  003F12  C092  F07D         	movff	sample_diff_pr_chip_fast@t16+1,___x_sample_fifo@x+1
 15615  003F16  0E04               	movlw	4
 15616  003F18  0100               	movlb	0	; () banked
 15617  003F1A  6F7E               	movwf	___x_sample_fifo@len& (0+255),b
 15618  003F1C  EC93  F025         	call	___x_sample_fifo	;wreg free
 15619  003F20  C07A  F170         	movff	?___x_sample_fifo,_adc_inPt100	;volatile
 15620  003F24  C07B  F171         	movff	?___x_sample_fifo+1,_adc_inPt100+1	;volatile
 15621                           
 15622                           ;sample.c: 224: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 15623  003F28  0E00               	movlw	0
 15624  003F2A  0100               	movlb	0	; () banked
 15625  003F2C  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15626                           
 15627                           ; BSR set to: 0
 15628                           ;sample.c: 225: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 15629  003F2E  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15630  003F32  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15631  003F36  0E00               	movlw	0
 15632  003F38  0100               	movlb	0	; () banked
 15633  003F3A  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15634  003F3C  EC49  F050         	call	_ads1115_set_pga	;wreg free
 15635                           
 15636                           ;sample.c: 226: diffPrChipSampleCount++;
 15637  003F40  0100               	movlb	0	; () banked
 15638  003F42  2BFA               	incf	_diffPrChipSampleCount& (0+255),f,b	;volatile
 15639                           
 15640                           ;sample.c: 227: }else{
 15641  003F44  D00C               	goto	l16590
 15642  003F46                     l16586:
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;sample.c: 228: ads1115_set_pga(pAds1115DiffPrObj,ADS1X1X_PGA_6144);
 15646  003F46  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_pga@pAds1115
 15647  003F4A  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_pga@pAds1115+1
 15648  003F4E  0E00               	movlw	0
 15649  003F50  0100               	movlb	0	; () banked
 15650  003F52  6F62               	movwf	ads1115_set_pga@pga& (0+255),b
 15651  003F54  EC49  F050         	call	_ads1115_set_pga	;wreg free
 15652                           
 15653                           ;sample.c: 229: diffPrChipSampCh=ADS1X1X_MUX_DIFF_0_1;
 15654  003F58  0E00               	movlw	0
 15655  003F5A  0100               	movlb	0	; () banked
 15656  003F5C  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 15657  003F5E                     l16590:
 15658                           
 15659                           ;sample.c: 230: }
 15660                           ;sample.c: 231: ads1115_set_data_rate(pAds1115DiffPrObj,ADS1X1X_DATA_RATE_32);
 15661  003F5E  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_data_rate@pAds1115
 15662  003F62  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_data_rate@pAds1115+1
 15663  003F66  0E02               	movlw	2
 15664  003F68  0100               	movlb	0	; () banked
 15665  003F6A  6F62               	movwf	ads1115_set_data_rate@dr& (0+255),b
 15666  003F6C  ECED  F04F         	call	_ads1115_set_data_rate	;wreg free
 15667                           
 15668                           ;sample.c: 232: ads1115_set_mux(pAds1115DiffPrObj,diffPrChipSampCh);
 15669  003F70  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 15670  003F74  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 15671  003F78  C0F9  F062         	movff	_diffPrChipSampCh,ads1115_set_mux@mux	;volatile
 15672  003F7C  EC5B  F050         	call	_ads1115_set_mux	;wreg free
 15673                           
 15674                           ;sample.c: 233: ads1115_start_conversion(pAds1115DiffPrObj);
 15675  003F80  C0EE  F06B         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 15676  003F84  C0EF  F06C         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 15677  003F88  EC85  F04F         	call	_ads1115_start_conversion	;wreg free
 15678                           
 15679                           ;sample.c: 234: if(diffPrChipSampleCount>4){
 15680  003F8C  0E04               	movlw	4
 15681  003F8E  0100               	movlb	0	; () banked
 15682  003F90  65FA               	cpfsgt	_diffPrChipSampleCount& (0+255),b	;volatile
 15683  003F92  D00E               	goto	l16604
 15684                           
 15685                           ; BSR set to: 0
 15686                           ;sample.c: 235: sample_diff_pr_fliter(&x_prDiffData);
 15687  003F94  0EE8               	movlw	low _x_prDiffData
 15688  003F96  0100               	movlb	0	; () banked
 15689  003F98  6F8F               	movwf	sample_diff_pr_fliter@xin& (0+255),b
 15690  003F9A  0E01               	movlw	high _x_prDiffData
 15691  003F9C  0100               	movlb	0	; () banked
 15692  003F9E  6F90               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
 15693  003FA0  ECEC  F041         	call	_sample_diff_pr_fliter	;wreg free
 15694                           
 15695                           ;sample.c: 236: diffPrChipSampleFinish=1;
 15696  003FA4  0E01               	movlw	1
 15697  003FA6  0100               	movlb	0	; () banked
 15698  003FA8  6FF8               	movwf	_diffPrChipSampleFinish& (0+255),b
 15699                           
 15700                           ; BSR set to: 0
 15701                           ;sample.c: 237: diffPrChipSampleCount=0;
 15702  003FAA  0E00               	movlw	0
 15703  003FAC  0100               	movlb	0	; () banked
 15704  003FAE  6FFA               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 15705  003FB0                     l16604:
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;sample.c: 238: }
 15709                           ;sample.c: 239: return 1;
 15710  003FB0  0E01               	movlw	1
 15711  003FB2  0012               	return	
 15712  003FB4                     __end_of_sample_diff_pr_chip_fast:
 15713                           	opt stack 0
 15714                           tblptru	equ	0xFF8
 15715                           tblptrh	equ	0xFF7
 15716                           tblptrl	equ	0xFF6
 15717                           tablat	equ	0xFF5
 15718                           prodh	equ	0xFF4
 15719                           prodl	equ	0xFF3
 15720                           intcon	equ	0xFF2
 15721                           postinc0	equ	0xFEE
 15722                           wreg	equ	0xFE8
 15723                           indf1	equ	0xFE7
 15724                           postinc1	equ	0xFE6
 15725                           postdec1	equ	0xFE5
 15726                           plusw1	equ	0xFE3
 15727                           fsr1h	equ	0xFE2
 15728                           fsr1l	equ	0xFE1
 15729                           indf2	equ	0xFDF
 15730                           postinc2	equ	0xFDE
 15731                           postdec2	equ	0xFDD
 15732                           plusw2	equ	0xFDB
 15733                           fsr2h	equ	0xFDA
 15734                           fsr2l	equ	0xFD9
 15735                           status	equ	0xFD8
 15736                           
 15737 ;; *************** function _sample_diff_pr_fliter *****************
 15738 ;; Defined at:
 15739 ;;		line 80 in file "src/api/sample.c"
 15740 ;; Parameters:    Size  Location     Type
 15741 ;;  xin             2   47[BANK0 ] PTR struct .
 15742 ;;		 -> x_prDiffData(8), 
 15743 ;; Auto vars:     Size  Location     Type
 15744 ;;		None
 15745 ;; Return value:  Size  Location     Type
 15746 ;;                  1    wreg      unsigned char 
 15747 ;; Registers used:
 15748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15749 ;; Tracked objects:
 15750 ;;		On entry : 0/0
 15751 ;;		On exit  : 0/0
 15752 ;;		Unchanged: 0/0
 15753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15757 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15758 ;;Total ram usage:        2 bytes
 15759 ;; Hardware stack levels used:    1
 15760 ;; Hardware stack levels required when called:    6
 15761 ;; This function calls:
 15762 ;;		___x_sample_fliter
 15763 ;; This function is called by:
 15764 ;;		_sample_diff_pr_chip_fast
 15765 ;; This function uses a non-reentrant model
 15766 ;;
 15767                           
 15768                           	psect	text83
 15769  0083D8                     __ptext83:
 15770                           	opt stack 0
 15771  0083D8                     _sample_diff_pr_fliter:
 15772                           	opt stack 21
 15773                           
 15774                           ;sample.c: 82: xin->tAdcValue=__x_sample_fliter(sampBufDiffPr_D01,4,4);
 15775                           
 15776                           ;incstack = 0
 15777  0083D8  0EE0               	movlw	low _sampBufDiffPr_D01
 15778  0083DA  0100               	movlb	0	; () banked
 15779  0083DC  6F7A               	movwf	___x_sample_fliter@buf& (0+255),b
 15780  0083DE  0E01               	movlw	high _sampBufDiffPr_D01
 15781  0083E0  0100               	movlb	0	; () banked
 15782  0083E2  6F7B               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 15783  0083E4  0E04               	movlw	4
 15784  0083E6  0100               	movlb	0	; () banked
 15785  0083E8  6F7C               	movwf	___x_sample_fliter@len& (0+255),b
 15786  0083EA  0E04               	movlw	4
 15787  0083EC  0100               	movlb	0	; () banked
 15788  0083EE  6F7D               	movwf	___x_sample_fliter@loop& (0+255),b
 15789  0083F0  ECED  F016         	call	___x_sample_fliter	;wreg free
 15790  0083F4  0100               	movlb	0	; () banked
 15791  0083F6  EE20 F006          	lfsr	2,6
 15792  0083FA  518F               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 15793  0083FC  26D9               	addwf	fsr2l,f,c
 15794  0083FE  5190               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 15795  008400  22DA               	addwfc	fsr2h,f,c
 15796  008402  0100               	movlb	0	; () banked
 15797  008404  C07A  FFDE         	movff	?___x_sample_fliter,postinc2
 15798  008408  0100               	movlb	0	; () banked
 15799  00840A  C07B  FFDD         	movff	?___x_sample_fliter+1,postdec2
 15800                           
 15801                           ;sample.c: 83: xin->pAdcValue=__x_sample_fliter(sampBufDiffPr_D23,4,4);
 15802  00840E  0ED8               	movlw	low _sampBufDiffPr_D23
 15803  008410  0100               	movlb	0	; () banked
 15804  008412  6F7A               	movwf	___x_sample_fliter@buf& (0+255),b
 15805  008414  0E01               	movlw	high _sampBufDiffPr_D23
 15806  008416  0100               	movlb	0	; () banked
 15807  008418  6F7B               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 15808  00841A  0E04               	movlw	4
 15809  00841C  0100               	movlb	0	; () banked
 15810  00841E  6F7C               	movwf	___x_sample_fliter@len& (0+255),b
 15811  008420  0E04               	movlw	4
 15812  008422  0100               	movlb	0	; () banked
 15813  008424  6F7D               	movwf	___x_sample_fliter@loop& (0+255),b
 15814  008426  ECED  F016         	call	___x_sample_fliter	;wreg free
 15815  00842A  0100               	movlb	0	; () banked
 15816  00842C  EE20 F004          	lfsr	2,4
 15817  008430  518F               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 15818  008432  26D9               	addwf	fsr2l,f,c
 15819  008434  5190               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 15820  008436  22DA               	addwfc	fsr2h,f,c
 15821  008438  0100               	movlb	0	; () banked
 15822  00843A  C07A  FFDE         	movff	?___x_sample_fliter,postinc2
 15823  00843E  0100               	movlb	0	; () banked
 15824  008440  C07B  FFDD         	movff	?___x_sample_fliter+1,postdec2
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;sample.c: 84: xin->pValue=0;
 15828  008444  C08F  FFD9         	movff	sample_diff_pr_fliter@xin,fsr2l
 15829  008448  C090  FFDA         	movff	sample_diff_pr_fliter@xin+1,fsr2h
 15830  00844C  6ADE               	clrf	postinc2,c
 15831  00844E  6ADE               	clrf	postinc2,c
 15832  008450  6ADE               	clrf	postinc2,c
 15833  008452  6ADD               	clrf	postdec2,c
 15834  008454  0012               	return	
 15835  008456                     __end_of_sample_diff_pr_fliter:
 15836                           	opt stack 0
 15837                           tblptru	equ	0xFF8
 15838                           tblptrh	equ	0xFF7
 15839                           tblptrl	equ	0xFF6
 15840                           tablat	equ	0xFF5
 15841                           prodh	equ	0xFF4
 15842                           prodl	equ	0xFF3
 15843                           intcon	equ	0xFF2
 15844                           postinc0	equ	0xFEE
 15845                           wreg	equ	0xFE8
 15846                           indf1	equ	0xFE7
 15847                           postinc1	equ	0xFE6
 15848                           postdec1	equ	0xFE5
 15849                           plusw1	equ	0xFE3
 15850                           fsr1h	equ	0xFE2
 15851                           fsr1l	equ	0xFE1
 15852                           indf2	equ	0xFDF
 15853                           postinc2	equ	0xFDE
 15854                           postdec2	equ	0xFDD
 15855                           plusw2	equ	0xFDB
 15856                           fsr2h	equ	0xFDA
 15857                           fsr2l	equ	0xFD9
 15858                           status	equ	0xFD8
 15859                           
 15860 ;; *************** function ___x_sample_fliter *****************
 15861 ;; Defined at:
 15862 ;;		line 42 in file "src/api/sample.c"
 15863 ;; Parameters:    Size  Location     Type
 15864 ;;  buf             2   26[BANK0 ] PTR int 
 15865 ;;		 -> sampBufDiffPr_D23(8), sampBufDiffPr_D01(8), 
 15866 ;;  len             1   28[BANK0 ] unsigned char 
 15867 ;;  loop            1   29[BANK0 ] unsigned char 
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;  t32             4   42[BANK0 ] long 
 15870 ;;  min             2   40[BANK0 ] int 
 15871 ;;  max             2   38[BANK0 ] int 
 15872 ;;  i               1   46[BANK0 ] unsigned char 
 15873 ;;  minLoc          1   37[BANK0 ] unsigned char 
 15874 ;;  maxLoc          1   36[BANK0 ] unsigned char 
 15875 ;; Return value:  Size  Location     Type
 15876 ;;                  2   26[BANK0 ] int 
 15877 ;; Registers used:
 15878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15879 ;; Tracked objects:
 15880 ;;		On entry : 0/0
 15881 ;;		On exit  : 0/0
 15882 ;;		Unchanged: 0/0
 15883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15885 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15886 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15887 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15888 ;;Total ram usage:       21 bytes
 15889 ;; Hardware stack levels used:    1
 15890 ;; Hardware stack levels required when called:    5
 15891 ;; This function calls:
 15892 ;;		___aldiv
 15893 ;; This function is called by:
 15894 ;;		_sample_diff_pr_fliter
 15895 ;; This function uses a non-reentrant model
 15896 ;;
 15897                           
 15898                           	psect	text84
 15899  002DDA                     __ptext84:
 15900                           	opt stack 0
 15901  002DDA                     ___x_sample_fliter:
 15902                           	opt stack 21
 15903                           
 15904                           ;sample.c: 44: int16_t max,min;
 15905                           ;sample.c: 45: uint8_t i,maxLoc,minLoc;
 15906                           ;sample.c: 46: int32_t t32=0;
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;incstack = 0
 15910  002DDA  0E00               	movlw	0
 15911  002DDC  0100               	movlb	0	; () banked
 15912  002DDE  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 15913  002DE0  0E00               	movlw	0
 15914  002DE2  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 15915  002DE4  0E00               	movlw	0
 15916  002DE6  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 15917  002DE8  0E00               	movlw	0
 15918  002DEA  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;sample.c: 47: if(len<3)return 0;
 15922  002DEC  0E03               	movlw	3
 15923  002DEE  0100               	movlb	0	; () banked
 15924  002DF0  617C               	cpfslt	___x_sample_fliter@len& (0+255),b
 15925  002DF2  D14B               	goto	l14868
 15926                           
 15927                           ; BSR set to: 0
 15928  002DF4  0E00               	movlw	0
 15929  002DF6  0100               	movlb	0	; () banked
 15930  002DF8  6F7B               	movwf	(?___x_sample_fliter+1)& (0+255),b
 15931  002DFA  0E00               	movlw	0
 15932  002DFC  6F7A               	movwf	?___x_sample_fliter& (0+255),b
 15933                           
 15934                           ; BSR set to: 0
 15935  002DFE  0012               	return	
 15936  002E00                     l14838:
 15937                           
 15938                           ; BSR set to: 0
 15939                           ;sample.c: 49: min=max=buf[0];
 15940  002E00  C07A  FFD9         	movff	___x_sample_fliter@buf,fsr2l
 15941  002E04  C07B  FFDA         	movff	___x_sample_fliter@buf+1,fsr2h
 15942  002E08  CFDE F086          	movff	postinc2,___x_sample_fliter@max
 15943  002E0C  CFDD F087          	movff	postdec2,___x_sample_fliter@max+1
 15944  002E10  C086  F088         	movff	___x_sample_fliter@max,___x_sample_fliter@min
 15945  002E14  C087  F089         	movff	___x_sample_fliter@max+1,___x_sample_fliter@min+1
 15946                           
 15947                           ; BSR set to: 0
 15948                           ;sample.c: 50: t32=0;
 15949  002E18  0E00               	movlw	0
 15950  002E1A  0100               	movlb	0	; () banked
 15951  002E1C  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 15952  002E1E  0E00               	movlw	0
 15953  002E20  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 15954  002E22  0E00               	movlw	0
 15955  002E24  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 15956  002E26  0E00               	movlw	0
 15957  002E28  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;sample.c: 51: for(i=0;i<len;i++){
 15961  002E2A  0E00               	movlw	0
 15962  002E2C  0100               	movlb	0	; () banked
 15963  002E2E  6F8E               	movwf	___x_sample_fliter@i& (0+255),b
 15964  002E30  D07F               	goto	l14856
 15965  002E32                     l14844:
 15966                           
 15967                           ; BSR set to: 0
 15968                           ;sample.c: 52: if(min>buf[i]){min=buf[i];minLoc=i;}
 15969  002E32  0100               	movlb	0	; () banked
 15970  002E34  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 15971  002E36  0D02               	mullw	2
 15972  002E38  50F3               	movf	prodl,w,c
 15973  002E3A  0100               	movlb	0	; () banked
 15974  002E3C  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 15975  002E3E  6ED9               	movwf	fsr2l,c
 15976  002E40  50F4               	movf	prodh,w,c
 15977  002E42  0100               	movlb	0	; () banked
 15978  002E44  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 15979  002E46  6EDA               	movwf	fsr2h,c
 15980  002E48  0100               	movlb	0	; () banked
 15981  002E4A  5188               	movf	___x_sample_fliter@min& (0+255),w,b
 15982  002E4C  5CDE               	subwf	postinc2,w,c
 15983  002E4E  50DE               	movf	postinc2,w,c
 15984  002E50  0A80               	xorlw	128
 15985  002E52  0100               	movlb	0	; () banked
 15986  002E54  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 15987  002E56  0100               	movlb	0	; () banked
 15988  002E58  5189               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 15989  002E5A  0A80               	xorlw	128
 15990  002E5C  0100               	movlb	0	; () banked
 15991  002E5E  5980               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 15992  002E60  B0D8               	btfsc	status,0,c
 15993  002E62  D011               	goto	l1129
 15994                           
 15995                           ; BSR set to: 0
 15996  002E64  0100               	movlb	0	; () banked
 15997  002E66  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 15998  002E68  0D02               	mullw	2
 15999  002E6A  50F3               	movf	prodl,w,c
 16000  002E6C  0100               	movlb	0	; () banked
 16001  002E6E  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16002  002E70  6ED9               	movwf	fsr2l,c
 16003  002E72  50F4               	movf	prodh,w,c
 16004  002E74  0100               	movlb	0	; () banked
 16005  002E76  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16006  002E78  6EDA               	movwf	fsr2h,c
 16007  002E7A  CFDE F088          	movff	postinc2,___x_sample_fliter@min
 16008  002E7E  CFDD F089          	movff	postdec2,___x_sample_fliter@min+1
 16009                           
 16010                           ; BSR set to: 0
 16011  002E82  C08E  F085         	movff	___x_sample_fliter@i,___x_sample_fliter@minLoc
 16012  002E86                     l1129:
 16013                           
 16014                           ; BSR set to: 0
 16015                           ;sample.c: 53: if(max<buf[i]){max=buf[i];maxLoc=i;}
 16016  002E86  0100               	movlb	0	; () banked
 16017  002E88  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16018  002E8A  0D02               	mullw	2
 16019  002E8C  50F3               	movf	prodl,w,c
 16020  002E8E  0100               	movlb	0	; () banked
 16021  002E90  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16022  002E92  6ED9               	movwf	fsr2l,c
 16023  002E94  50F4               	movf	prodh,w,c
 16024  002E96  0100               	movlb	0	; () banked
 16025  002E98  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16026  002E9A  6EDA               	movwf	fsr2h,c
 16027  002E9C  50DE               	movf	postinc2,w,c
 16028  002E9E  0100               	movlb	0	; () banked
 16029  002EA0  5D86               	subwf	___x_sample_fliter@max& (0+255),w,b
 16030  002EA2  0100               	movlb	0	; () banked
 16031  002EA4  5187               	movf	(___x_sample_fliter@max+1)& (0+255),w,b
 16032  002EA6  0A80               	xorlw	128
 16033  002EA8  0100               	movlb	0	; () banked
 16034  002EAA  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16035  002EAC  50DE               	movf	postinc2,w,c
 16036  002EAE  0A80               	xorlw	128
 16037  002EB0  0100               	movlb	0	; () banked
 16038  002EB2  5980               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 16039  002EB4  B0D8               	btfsc	status,0,c
 16040  002EB6  D011               	goto	l1130
 16041                           
 16042                           ; BSR set to: 0
 16043  002EB8  0100               	movlb	0	; () banked
 16044  002EBA  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16045  002EBC  0D02               	mullw	2
 16046  002EBE  50F3               	movf	prodl,w,c
 16047  002EC0  0100               	movlb	0	; () banked
 16048  002EC2  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16049  002EC4  6ED9               	movwf	fsr2l,c
 16050  002EC6  50F4               	movf	prodh,w,c
 16051  002EC8  0100               	movlb	0	; () banked
 16052  002ECA  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16053  002ECC  6EDA               	movwf	fsr2h,c
 16054  002ECE  CFDE F086          	movff	postinc2,___x_sample_fliter@max
 16055  002ED2  CFDD F087          	movff	postdec2,___x_sample_fliter@max+1
 16056                           
 16057                           ; BSR set to: 0
 16058  002ED6  C08E  F084         	movff	___x_sample_fliter@i,___x_sample_fliter@maxLoc
 16059  002EDA                     l1130:
 16060                           
 16061                           ; BSR set to: 0
 16062                           ;sample.c: 54: t32+=buf[i];
 16063  002EDA  0100               	movlb	0	; () banked
 16064  002EDC  518E               	movf	___x_sample_fliter@i& (0+255),w,b
 16065  002EDE  0D02               	mullw	2
 16066  002EE0  50F3               	movf	prodl,w,c
 16067  002EE2  0100               	movlb	0	; () banked
 16068  002EE4  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16069  002EE6  6ED9               	movwf	fsr2l,c
 16070  002EE8  50F4               	movf	prodh,w,c
 16071  002EEA  0100               	movlb	0	; () banked
 16072  002EEC  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16073  002EEE  6EDA               	movwf	fsr2h,c
 16074  002EF0  CFDE F07E          	movff	postinc2,??___x_sample_fliter
 16075  002EF4  CFDD F07F          	movff	postdec2,??___x_sample_fliter+1
 16076  002EF8  C07E  F080         	movff	??___x_sample_fliter,??___x_sample_fliter+2
 16077  002EFC  C07F  F081         	movff	??___x_sample_fliter+1,??___x_sample_fliter+3
 16078  002F00  0E00               	movlw	0
 16079  002F02  0100               	movlb	0	; () banked
 16080  002F04  BF81               	btfsc	(??___x_sample_fliter+3)& (0+255),7,b
 16081  002F06  0EFF               	movlw	255
 16082  002F08  6F82               	movwf	(??___x_sample_fliter+4)& (0+255),b
 16083  002F0A  6F83               	movwf	(??___x_sample_fliter+5)& (0+255),b
 16084  002F0C  0100               	movlb	0	; () banked
 16085  002F0E  5180               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 16086  002F10  0100               	movlb	0	; () banked
 16087  002F12  278A               	addwf	___x_sample_fliter@t32& (0+255),f,b
 16088  002F14  0100               	movlb	0	; () banked
 16089  002F16  5181               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 16090  002F18  0100               	movlb	0	; () banked
 16091  002F1A  238B               	addwfc	(___x_sample_fliter@t32+1)& (0+255),f,b
 16092  002F1C  0100               	movlb	0	; () banked
 16093  002F1E  5182               	movf	(??___x_sample_fliter+4)& (0+255),w,b
 16094  002F20  0100               	movlb	0	; () banked
 16095  002F22  238C               	addwfc	(___x_sample_fliter@t32+2)& (0+255),f,b
 16096  002F24  0100               	movlb	0	; () banked
 16097  002F26  5183               	movf	(??___x_sample_fliter+5)& (0+255),w,b
 16098  002F28  0100               	movlb	0	; () banked
 16099  002F2A  238D               	addwfc	(___x_sample_fliter@t32+3)& (0+255),f,b
 16100                           
 16101                           ; BSR set to: 0
 16102  002F2C  0100               	movlb	0	; () banked
 16103  002F2E  2B8E               	incf	___x_sample_fliter@i& (0+255),f,b
 16104  002F30                     l14856:
 16105                           
 16106                           ; BSR set to: 0
 16107  002F30  0100               	movlb	0	; () banked
 16108  002F32  517C               	movf	___x_sample_fliter@len& (0+255),w,b
 16109  002F34  0100               	movlb	0	; () banked
 16110  002F36  5D8E               	subwf	___x_sample_fliter@i& (0+255),w,b
 16111  002F38  A0D8               	btfss	status,0,c
 16112  002F3A  D77B               	goto	l14844
 16113                           
 16114                           ; BSR set to: 0
 16115                           ;sample.c: 55: }
 16116                           ;sample.c: 57: t32=t32-(int32_t)max;
 16117                           
 16118                           ; BSR set to: 0
 16119  002F3C  C086  F07E         	movff	___x_sample_fliter@max,??___x_sample_fliter
 16120  002F40  C087  F07F         	movff	___x_sample_fliter@max+1,??___x_sample_fliter+1
 16121  002F44  0E00               	movlw	0
 16122  002F46  0100               	movlb	0	; () banked
 16123  002F48  BF7F               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 16124  002F4A  0EFF               	movlw	255
 16125  002F4C  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16126  002F4E  6F81               	movwf	(??___x_sample_fliter+3)& (0+255),b
 16127  002F50  0100               	movlb	0	; () banked
 16128  002F52  1F7E               	comf	??___x_sample_fliter& (0+255),f,b
 16129  002F54  1F7F               	comf	(??___x_sample_fliter+1)& (0+255),f,b
 16130  002F56  1F80               	comf	(??___x_sample_fliter+2)& (0+255),f,b
 16131  002F58  1F81               	comf	(??___x_sample_fliter+3)& (0+255),f,b
 16132  002F5A  2B7E               	incf	??___x_sample_fliter& (0+255),f,b
 16133  002F5C  0E00               	movlw	0
 16134  002F5E  237F               	addwfc	(??___x_sample_fliter+1)& (0+255),f,b
 16135  002F60  2380               	addwfc	(??___x_sample_fliter+2)& (0+255),f,b
 16136  002F62  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16137  002F64  0100               	movlb	0	; () banked
 16138  002F66  518A               	movf	___x_sample_fliter@t32& (0+255),w,b
 16139  002F68  0100               	movlb	0	; () banked
 16140  002F6A  257E               	addwf	??___x_sample_fliter& (0+255),w,b
 16141  002F6C  0100               	movlb	0	; () banked
 16142  002F6E  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16143  002F70  0100               	movlb	0	; () banked
 16144  002F72  518B               	movf	(___x_sample_fliter@t32+1)& (0+255),w,b
 16145  002F74  0100               	movlb	0	; () banked
 16146  002F76  217F               	addwfc	(??___x_sample_fliter+1)& (0+255),w,b
 16147  002F78  0100               	movlb	0	; () banked
 16148  002F7A  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16149  002F7C  0100               	movlb	0	; () banked
 16150  002F7E  518C               	movf	(___x_sample_fliter@t32+2)& (0+255),w,b
 16151  002F80  0100               	movlb	0	; () banked
 16152  002F82  2180               	addwfc	(??___x_sample_fliter+2)& (0+255),w,b
 16153  002F84  0100               	movlb	0	; () banked
 16154  002F86  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16155  002F88  0100               	movlb	0	; () banked
 16156  002F8A  518D               	movf	(___x_sample_fliter@t32+3)& (0+255),w,b
 16157  002F8C  0100               	movlb	0	; () banked
 16158  002F8E  2181               	addwfc	(??___x_sample_fliter+3)& (0+255),w,b
 16159  002F90  0100               	movlb	0	; () banked
 16160  002F92  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16161                           
 16162                           ;sample.c: 58: t32=t32-(int32_t)min;
 16163  002F94  C088  F07E         	movff	___x_sample_fliter@min,??___x_sample_fliter
 16164  002F98  C089  F07F         	movff	___x_sample_fliter@min+1,??___x_sample_fliter+1
 16165  002F9C  0E00               	movlw	0
 16166  002F9E  0100               	movlb	0	; () banked
 16167  002FA0  BF7F               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 16168  002FA2  0EFF               	movlw	255
 16169  002FA4  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16170  002FA6  6F81               	movwf	(??___x_sample_fliter+3)& (0+255),b
 16171  002FA8  0100               	movlb	0	; () banked
 16172  002FAA  1F7E               	comf	??___x_sample_fliter& (0+255),f,b
 16173  002FAC  1F7F               	comf	(??___x_sample_fliter+1)& (0+255),f,b
 16174  002FAE  1F80               	comf	(??___x_sample_fliter+2)& (0+255),f,b
 16175  002FB0  1F81               	comf	(??___x_sample_fliter+3)& (0+255),f,b
 16176  002FB2  2B7E               	incf	??___x_sample_fliter& (0+255),f,b
 16177  002FB4  0E00               	movlw	0
 16178  002FB6  237F               	addwfc	(??___x_sample_fliter+1)& (0+255),f,b
 16179  002FB8  2380               	addwfc	(??___x_sample_fliter+2)& (0+255),f,b
 16180  002FBA  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16181  002FBC  0100               	movlb	0	; () banked
 16182  002FBE  518A               	movf	___x_sample_fliter@t32& (0+255),w,b
 16183  002FC0  0100               	movlb	0	; () banked
 16184  002FC2  257E               	addwf	??___x_sample_fliter& (0+255),w,b
 16185  002FC4  0100               	movlb	0	; () banked
 16186  002FC6  6F8A               	movwf	___x_sample_fliter@t32& (0+255),b
 16187  002FC8  0100               	movlb	0	; () banked
 16188  002FCA  518B               	movf	(___x_sample_fliter@t32+1)& (0+255),w,b
 16189  002FCC  0100               	movlb	0	; () banked
 16190  002FCE  217F               	addwfc	(??___x_sample_fliter+1)& (0+255),w,b
 16191  002FD0  0100               	movlb	0	; () banked
 16192  002FD2  6F8B               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 16193  002FD4  0100               	movlb	0	; () banked
 16194  002FD6  518C               	movf	(___x_sample_fliter@t32+2)& (0+255),w,b
 16195  002FD8  0100               	movlb	0	; () banked
 16196  002FDA  2180               	addwfc	(??___x_sample_fliter+2)& (0+255),w,b
 16197  002FDC  0100               	movlb	0	; () banked
 16198  002FDE  6F8C               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 16199  002FE0  0100               	movlb	0	; () banked
 16200  002FE2  518D               	movf	(___x_sample_fliter@t32+3)& (0+255),w,b
 16201  002FE4  0100               	movlb	0	; () banked
 16202  002FE6  2181               	addwfc	(??___x_sample_fliter+3)& (0+255),w,b
 16203  002FE8  0100               	movlb	0	; () banked
 16204  002FEA  6F8D               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 16205                           
 16206                           ; BSR set to: 0
 16207                           ;sample.c: 59: t32=t32/(len-2);
 16208  002FEC  C08A  F06C         	movff	___x_sample_fliter@t32,___aldiv@dividend
 16209  002FF0  C08B  F06D         	movff	___x_sample_fliter@t32+1,___aldiv@dividend+1
 16210  002FF4  C08C  F06E         	movff	___x_sample_fliter@t32+2,___aldiv@dividend+2
 16211  002FF8  C08D  F06F         	movff	___x_sample_fliter@t32+3,___aldiv@dividend+3
 16212  002FFC  0EFE               	movlw	254
 16213  002FFE  0100               	movlb	0	; () banked
 16214  003000  6F7E               	movwf	??___x_sample_fliter& (0+255),b
 16215  003002  0EFF               	movlw	255
 16216  003004  0100               	movlb	0	; () banked
 16217  003006  6F7F               	movwf	(??___x_sample_fliter+1)& (0+255),b
 16218  003008  0100               	movlb	0	; () banked
 16219  00300A  517C               	movf	___x_sample_fliter@len& (0+255),w,b
 16220  00300C  0100               	movlb	0	; () banked
 16221  00300E  6F80               	movwf	(??___x_sample_fliter+2)& (0+255),b
 16222  003010  6B81               	clrf	(??___x_sample_fliter+3)& (0+255),b
 16223  003012  0100               	movlb	0	; () banked
 16224  003014  517E               	movf	??___x_sample_fliter& (0+255),w,b
 16225  003016  0100               	movlb	0	; () banked
 16226  003018  2780               	addwf	(??___x_sample_fliter+2)& (0+255),f,b
 16227  00301A  0100               	movlb	0	; () banked
 16228  00301C  517F               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 16229  00301E  0100               	movlb	0	; () banked
 16230  003020  2381               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 16231  003022  C080  F070         	movff	??___x_sample_fliter+2,___aldiv@divisor
 16232  003026  C081  F071         	movff	??___x_sample_fliter+3,___aldiv@divisor+1
 16233  00302A  0100               	movlb	0	; () banked
 16234  00302C  0E00               	movlw	0
 16235  00302E  BF71               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
 16236  003030  0EFF               	movlw	-1
 16237  003032  6F72               	movwf	(___aldiv@divisor+2)& (0+255),b
 16238  003034  6F73               	movwf	(___aldiv@divisor+3)& (0+255),b
 16239  003036  EC2B  F02D         	call	___aldiv	;wreg free
 16240  00303A  C06C  F08A         	movff	?___aldiv,___x_sample_fliter@t32
 16241  00303E  C06D  F08B         	movff	?___aldiv+1,___x_sample_fliter@t32+1
 16242  003042  C06E  F08C         	movff	?___aldiv+2,___x_sample_fliter@t32+2
 16243  003046  C06F  F08D         	movff	?___aldiv+3,___x_sample_fliter@t32+3
 16244                           
 16245                           ;sample.c: 60: buf[minLoc]=(int16_t)t32;
 16246  00304A  0100               	movlb	0	; () banked
 16247  00304C  5185               	movf	___x_sample_fliter@minLoc& (0+255),w,b
 16248  00304E  0D02               	mullw	2
 16249  003050  50F3               	movf	prodl,w,c
 16250  003052  0100               	movlb	0	; () banked
 16251  003054  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16252  003056  6ED9               	movwf	fsr2l,c
 16253  003058  50F4               	movf	prodh,w,c
 16254  00305A  0100               	movlb	0	; () banked
 16255  00305C  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16256  00305E  6EDA               	movwf	fsr2h,c
 16257  003060  C08A  FFDE         	movff	___x_sample_fliter@t32,postinc2
 16258  003064  C08B  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 16259                           
 16260                           ; BSR set to: 0
 16261                           ;sample.c: 61: buf[maxLoc]=(int16_t)t32;
 16262  003068  0100               	movlb	0	; () banked
 16263  00306A  5184               	movf	___x_sample_fliter@maxLoc& (0+255),w,b
 16264  00306C  0D02               	mullw	2
 16265  00306E  50F3               	movf	prodl,w,c
 16266  003070  0100               	movlb	0	; () banked
 16267  003072  257A               	addwf	___x_sample_fliter@buf& (0+255),w,b
 16268  003074  6ED9               	movwf	fsr2l,c
 16269  003076  50F4               	movf	prodh,w,c
 16270  003078  0100               	movlb	0	; () banked
 16271  00307A  217B               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 16272  00307C  6EDA               	movwf	fsr2h,c
 16273  00307E  C08A  FFDE         	movff	___x_sample_fliter@t32,postinc2
 16274  003082  C08B  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 16275                           
 16276                           ; BSR set to: 0
 16277                           ;sample.c: 62: loop--;
 16278  003086  0100               	movlb	0	; () banked
 16279  003088  077D               	decf	___x_sample_fliter@loop& (0+255),f,b
 16280  00308A                     l14868:
 16281                           
 16282                           ; BSR set to: 0
 16283  00308A  0100               	movlb	0	; () banked
 16284  00308C  517D               	movf	___x_sample_fliter@loop& (0+255),w,b
 16285  00308E  0100               	movlb	0	; () banked
 16286  003090  A4D8               	btfss	status,2,c
 16287  003092  D6B6               	goto	l14838
 16288                           
 16289                           ; BSR set to: 0
 16290                           ;sample.c: 63: }
 16291                           ;sample.c: 64: return (int16_t)t32;
 16292  003094  C08A  F07A         	movff	___x_sample_fliter@t32,?___x_sample_fliter
 16293  003098  C08B  F07B         	movff	___x_sample_fliter@t32+1,?___x_sample_fliter+1
 16294                           
 16295                           ; BSR set to: 0
 16296  00309C  0012               	return		;funcret
 16297  00309E                     __end_of___x_sample_fliter:
 16298                           	opt stack 0
 16299                           tblptru	equ	0xFF8
 16300                           tblptrh	equ	0xFF7
 16301                           tblptrl	equ	0xFF6
 16302                           tablat	equ	0xFF5
 16303                           prodh	equ	0xFF4
 16304                           prodl	equ	0xFF3
 16305                           intcon	equ	0xFF2
 16306                           postinc0	equ	0xFEE
 16307                           wreg	equ	0xFE8
 16308                           indf1	equ	0xFE7
 16309                           postinc1	equ	0xFE6
 16310                           postdec1	equ	0xFE5
 16311                           plusw1	equ	0xFE3
 16312                           fsr1h	equ	0xFE2
 16313                           fsr1l	equ	0xFE1
 16314                           indf2	equ	0xFDF
 16315                           postinc2	equ	0xFDE
 16316                           postdec2	equ	0xFDD
 16317                           plusw2	equ	0xFDB
 16318                           fsr2h	equ	0xFDA
 16319                           fsr2l	equ	0xFD9
 16320                           status	equ	0xFD8
 16321                           
 16322 ;; *************** function _ads1115_start_conversion *****************
 16323 ;; Defined at:
 16324 ;;		line 122 in file "src/driver/ads1115.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;  pAds1115        2   11[BANK0 ] PTR struct .
 16327 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;		None
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      void 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16342 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16343 ;;Total ram usage:        2 bytes
 16344 ;; Hardware stack levels used:    1
 16345 ;; Hardware stack levels required when called:    9
 16346 ;; This function calls:
 16347 ;;		_ads1115_write_reg
 16348 ;; This function is called by:
 16349 ;;		_sample_diff_pr_chip_fast
 16350 ;;		_sample_pr_chip_fast
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text85
 16355  009F0A                     __ptext85:
 16356                           	opt stack 0
 16357  009F0A                     _ads1115_start_conversion:
 16358                           	opt stack 18
 16359                           
 16360                           ;ads1115.c: 124: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;incstack = 0
 16364  009F0A  C06B  F066         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 16365  009F0E  C06C  F067         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 16366  009F12  0E01               	movlw	1
 16367  009F14  0100               	movlb	0	; () banked
 16368  009F16  6F68               	movwf	ads1115_write_reg@addr& (0+255),b
 16369  009F18  0100               	movlb	0	; () banked
 16370  009F1A  EE20 F002          	lfsr	2,2
 16371  009F1E  516B               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 16372  009F20  26D9               	addwf	fsr2l,f,c
 16373  009F22  516C               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 16374  009F24  22DA               	addwfc	fsr2h,f,c
 16375  009F26  CFDE F069          	movff	postinc2,ads1115_write_reg@value
 16376  009F2A  CFDD F06A          	movff	postdec2,ads1115_write_reg@value+1
 16377  009F2E  ECDA  F031         	call	_ads1115_write_reg	;wreg free
 16378  009F32  0012               	return		;funcret
 16379  009F34                     __end_of_ads1115_start_conversion:
 16380                           	opt stack 0
 16381                           tblptru	equ	0xFF8
 16382                           tblptrh	equ	0xFF7
 16383                           tblptrl	equ	0xFF6
 16384                           tablat	equ	0xFF5
 16385                           prodh	equ	0xFF4
 16386                           prodl	equ	0xFF3
 16387                           intcon	equ	0xFF2
 16388                           postinc0	equ	0xFEE
 16389                           wreg	equ	0xFE8
 16390                           indf1	equ	0xFE7
 16391                           postinc1	equ	0xFE6
 16392                           postdec1	equ	0xFE5
 16393                           plusw1	equ	0xFE3
 16394                           fsr1h	equ	0xFE2
 16395                           fsr1l	equ	0xFE1
 16396                           indf2	equ	0xFDF
 16397                           postinc2	equ	0xFDE
 16398                           postdec2	equ	0xFDD
 16399                           plusw2	equ	0xFDB
 16400                           fsr2h	equ	0xFDA
 16401                           fsr2l	equ	0xFD9
 16402                           status	equ	0xFD8
 16403                           
 16404 ;; *************** function _ads1115_write_reg *****************
 16405 ;; Defined at:
 16406 ;;		line 17 in file "src/driver/ads1115.c"
 16407 ;; Parameters:    Size  Location     Type
 16408 ;;  pAds1115        2    6[BANK0 ] PTR struct .
 16409 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16410 ;;  addr            1    8[BANK0 ] unsigned char 
 16411 ;;  value           2    9[BANK0 ] unsigned int 
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;		None
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  1    wreg      void 
 16416 ;; Registers used:
 16417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16423 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16427 ;;Total ram usage:        5 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:    8
 16430 ;; This function calls:
 16431 ;;		_iic_send_byte
 16432 ;;		_iic_start
 16433 ;;		_iic_stop
 16434 ;; This function is called by:
 16435 ;;		_ads1115_start_conversion
 16436 ;;		_ads1115_set_threshold_lo
 16437 ;;		_ads1115_set_threshold_hi
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           	psect	text86
 16442  0063B4                     __ptext86:
 16443                           	opt stack 0
 16444  0063B4                     _ads1115_write_reg:
 16445                           	opt stack 18
 16446                           
 16447                           ;ads1115.c: 19: pAds1115->iic_start();
 16448                           
 16449                           ;incstack = 0
 16450  0063B4  0100               	movlb	0	; () banked
 16451  0063B6  EE20 F006          	lfsr	2,6
 16452  0063BA  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16453  0063BC  26D9               	addwf	fsr2l,f,c
 16454  0063BE  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16455  0063C0  22DA               	addwfc	fsr2h,f,c
 16456  0063C2  D801               	call	u13928
 16457  0063C4  D00A               	goto	u13929
 16458  0063C6                     u13928:
 16459  0063C6  0005               	push	
 16460  0063C8  6EFA               	movwf	pclath,c
 16461  0063CA  50DE               	movf	postinc2,w,c
 16462  0063CC  6EFD               	movwf	tosl,c
 16463  0063CE  50DE               	movf	postinc2,w,c
 16464  0063D0  6EFE               	movwf	tosh,c
 16465  0063D2  50F8               	movf	tblptru,w,c
 16466  0063D4  6EFF               	movwf	tosu,c
 16467  0063D6  50FA               	movf	pclath,w,c
 16468  0063D8  0012               	return		;indir
 16469  0063DA                     u13929:
 16470                           
 16471                           ;ads1115.c: 21: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 16472  0063DA  0100               	movlb	0	; () banked
 16473  0063DC  EE20 F00A          	lfsr	2,10
 16474  0063E0  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16475  0063E2  26D9               	addwf	fsr2l,f,c
 16476  0063E4  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16477  0063E6  22DA               	addwfc	fsr2h,f,c
 16478  0063E8  D801               	call	u13938
 16479  0063EA  D012               	goto	u13939
 16480  0063EC                     u13938:
 16481  0063EC  0005               	push	
 16482  0063EE  6EFA               	movwf	pclath,c
 16483  0063F0  50DE               	movf	postinc2,w,c
 16484  0063F2  6EFD               	movwf	tosl,c
 16485  0063F4  50DE               	movf	postinc2,w,c
 16486  0063F6  6EFE               	movwf	tosh,c
 16487  0063F8  50F8               	movf	tblptru,w,c
 16488  0063FA  6EFF               	movwf	tosu,c
 16489  0063FC  50FA               	movf	pclath,w,c
 16490  0063FE  0100               	movlb	0	; () banked
 16491  006400  EE20 F001          	lfsr	2,1
 16492  006404  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16493  006406  26D9               	addwf	fsr2l,f,c
 16494  006408  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16495  00640A  22DA               	addwfc	fsr2h,f,c
 16496  00640C  50DF               	movf	indf2,w,c
 16497  00640E  0012               	return		;indir
 16498  006410                     u13939:
 16499                           
 16500                           ;ads1115.c: 22: pAds1115->iic_send_byte(addr);
 16501  006410  0100               	movlb	0	; () banked
 16502  006412  EE20 F00A          	lfsr	2,10
 16503  006416  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16504  006418  26D9               	addwf	fsr2l,f,c
 16505  00641A  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16506  00641C  22DA               	addwfc	fsr2h,f,c
 16507  00641E  D801               	call	u13948
 16508  006420  D00C               	goto	u13949
 16509  006422                     u13948:
 16510  006422  0005               	push	
 16511  006424  6EFA               	movwf	pclath,c
 16512  006426  50DE               	movf	postinc2,w,c
 16513  006428  6EFD               	movwf	tosl,c
 16514  00642A  50DE               	movf	postinc2,w,c
 16515  00642C  6EFE               	movwf	tosh,c
 16516  00642E  50F8               	movf	tblptru,w,c
 16517  006430  6EFF               	movwf	tosu,c
 16518  006432  50FA               	movf	pclath,w,c
 16519  006434  0100               	movlb	0	; () banked
 16520  006436  5168               	movf	ads1115_write_reg@addr& (0+255),w,b
 16521  006438  0012               	return		;indir
 16522  00643A                     u13949:
 16523                           
 16524                           ;ads1115.c: 24: pAds1115->iic_send_byte((uint8_t)(value>>8));
 16525  00643A  0100               	movlb	0	; () banked
 16526  00643C  EE20 F00A          	lfsr	2,10
 16527  006440  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16528  006442  26D9               	addwf	fsr2l,f,c
 16529  006444  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16530  006446  22DA               	addwfc	fsr2h,f,c
 16531  006448  D801               	call	u13958
 16532  00644A  D00C               	goto	u13959
 16533  00644C                     u13958:
 16534  00644C  0005               	push	
 16535  00644E  6EFA               	movwf	pclath,c
 16536  006450  50DE               	movf	postinc2,w,c
 16537  006452  6EFD               	movwf	tosl,c
 16538  006454  50DE               	movf	postinc2,w,c
 16539  006456  6EFE               	movwf	tosh,c
 16540  006458  50F8               	movf	tblptru,w,c
 16541  00645A  6EFF               	movwf	tosu,c
 16542  00645C  50FA               	movf	pclath,w,c
 16543  00645E  0100               	movlb	0	; () banked
 16544  006460  516A               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 16545  006462  0012               	return		;indir
 16546  006464                     u13959:
 16547                           
 16548                           ;ads1115.c: 25: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 16549  006464  0100               	movlb	0	; () banked
 16550  006466  EE20 F00A          	lfsr	2,10
 16551  00646A  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16552  00646C  26D9               	addwf	fsr2l,f,c
 16553  00646E  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16554  006470  22DA               	addwfc	fsr2h,f,c
 16555  006472  D801               	call	u13968
 16556  006474  D00C               	goto	u13969
 16557  006476                     u13968:
 16558  006476  0005               	push	
 16559  006478  6EFA               	movwf	pclath,c
 16560  00647A  50DE               	movf	postinc2,w,c
 16561  00647C  6EFD               	movwf	tosl,c
 16562  00647E  50DE               	movf	postinc2,w,c
 16563  006480  6EFE               	movwf	tosh,c
 16564  006482  50F8               	movf	tblptru,w,c
 16565  006484  6EFF               	movwf	tosu,c
 16566  006486  50FA               	movf	pclath,w,c
 16567  006488  0100               	movlb	0	; () banked
 16568  00648A  5169               	movf	ads1115_write_reg@value& (0+255),w,b
 16569  00648C  0012               	return		;indir
 16570  00648E                     u13969:
 16571                           
 16572                           ;ads1115.c: 26: pAds1115->iic_stop();
 16573  00648E  0100               	movlb	0	; () banked
 16574  006490  EE20 F008          	lfsr	2,8
 16575  006494  5166               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 16576  006496  26D9               	addwf	fsr2l,f,c
 16577  006498  5167               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 16578  00649A  22DA               	addwfc	fsr2h,f,c
 16579  00649C  D801               	call	u13978
 16580  00649E  0012               	return	
 16581  0064A0                     u13978:
 16582  0064A0  0005               	push	
 16583  0064A2  6EFA               	movwf	pclath,c
 16584  0064A4  50DE               	movf	postinc2,w,c
 16585  0064A6  6EFD               	movwf	tosl,c
 16586  0064A8  50DE               	movf	postinc2,w,c
 16587  0064AA  6EFE               	movwf	tosh,c
 16588  0064AC  50F8               	movf	tblptru,w,c
 16589  0064AE  6EFF               	movwf	tosu,c
 16590  0064B0  50FA               	movf	pclath,w,c
 16591  0064B2  0012               	return		;indir
 16592  0064B4                     __end_of_ads1115_write_reg:
 16593                           	opt stack 0
 16594                           tosu	equ	0xFFF
 16595                           tosh	equ	0xFFE
 16596                           tosl	equ	0xFFD
 16597                           pclath	equ	0xFFA
 16598                           tblptru	equ	0xFF8
 16599                           tblptrh	equ	0xFF7
 16600                           tblptrl	equ	0xFF6
 16601                           tablat	equ	0xFF5
 16602                           prodh	equ	0xFF4
 16603                           prodl	equ	0xFF3
 16604                           intcon	equ	0xFF2
 16605                           postinc0	equ	0xFEE
 16606                           wreg	equ	0xFE8
 16607                           indf1	equ	0xFE7
 16608                           postinc1	equ	0xFE6
 16609                           postdec1	equ	0xFE5
 16610                           plusw1	equ	0xFE3
 16611                           fsr1h	equ	0xFE2
 16612                           fsr1l	equ	0xFE1
 16613                           indf2	equ	0xFDF
 16614                           postinc2	equ	0xFDE
 16615                           postdec2	equ	0xFDD
 16616                           plusw2	equ	0xFDB
 16617                           fsr2h	equ	0xFDA
 16618                           fsr2l	equ	0xFD9
 16619                           status	equ	0xFD8
 16620                           
 16621 ;; *************** function _ads1115_set_pga *****************
 16622 ;; Defined at:
 16623 ;;		line 59 in file "src/driver/ads1115.c"
 16624 ;; Parameters:    Size  Location     Type
 16625 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16626 ;;		 -> ads1115Chip1(16), NULL(0), 
 16627 ;;  pga             1    2[BANK0 ] enum E6987
 16628 ;; Auto vars:     Size  Location     Type
 16629 ;;		None
 16630 ;; Return value:  Size  Location     Type
 16631 ;;                  1    wreg      void 
 16632 ;; Registers used:
 16633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16634 ;; Tracked objects:
 16635 ;;		On entry : 0/0
 16636 ;;		On exit  : 0/0
 16637 ;;		Unchanged: 0/0
 16638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16639 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16642 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16643 ;;Total ram usage:        4 bytes
 16644 ;; Hardware stack levels used:    1
 16645 ;; Hardware stack levels required when called:    4
 16646 ;; This function calls:
 16647 ;;		Nothing
 16648 ;; This function is called by:
 16649 ;;		_sample_diff_pr_chip_fast
 16650 ;; This function uses a non-reentrant model
 16651 ;;
 16652                           
 16653                           	psect	text87
 16654  00A092                     __ptext87:
 16655                           	opt stack 0
 16656  00A092                     _ads1115_set_pga:
 16657                           	opt stack 23
 16658                           
 16659                           ;ads1115.c: 61: pAds1115->config.bits.PGA=pga;
 16660                           
 16661                           ;incstack = 0
 16662  00A092  C062  F020         	movff	ads1115_set_pga@pga,??_ads1115_set_pga
 16663  00A096  0100               	movlb	0	; () banked
 16664  00A098  EE20 F003          	lfsr	2,3
 16665  00A09C  5160               	movf	ads1115_set_pga@pAds1115& (0+255),w,b
 16666  00A09E  26D9               	addwf	fsr2l,f,c
 16667  00A0A0  5161               	movf	(ads1115_set_pga@pAds1115+1)& (0+255),w,b
 16668  00A0A2  22DA               	addwfc	fsr2h,f,c
 16669  00A0A4  4620               	rlncf	??_ads1115_set_pga,f,c
 16670  00A0A6  0100               	movlb	0	; () banked
 16671  00A0A8  50DF               	movf	223,w,c
 16672  00A0AA  1820               	xorwf	??_ads1115_set_pga,w,c
 16673  00A0AC  0BF1               	andlw	-15
 16674  00A0AE  1820               	xorwf	??_ads1115_set_pga,w,c
 16675  00A0B0  0100               	movlb	0	; () banked
 16676  00A0B2  6EDF               	movwf	223,c
 16677                           
 16678                           ; BSR set to: 0
 16679  00A0B4  0012               	return		;funcret
 16680  00A0B6                     __end_of_ads1115_set_pga:
 16681                           	opt stack 0
 16682                           tosu	equ	0xFFF
 16683                           tosh	equ	0xFFE
 16684                           tosl	equ	0xFFD
 16685                           pclath	equ	0xFFA
 16686                           tblptru	equ	0xFF8
 16687                           tblptrh	equ	0xFF7
 16688                           tblptrl	equ	0xFF6
 16689                           tablat	equ	0xFF5
 16690                           prodh	equ	0xFF4
 16691                           prodl	equ	0xFF3
 16692                           intcon	equ	0xFF2
 16693                           postinc0	equ	0xFEE
 16694                           wreg	equ	0xFE8
 16695                           indf1	equ	0xFE7
 16696                           postinc1	equ	0xFE6
 16697                           postdec1	equ	0xFE5
 16698                           plusw1	equ	0xFE3
 16699                           fsr1h	equ	0xFE2
 16700                           fsr1l	equ	0xFE1
 16701                           indf2	equ	0xFDF
 16702                           postinc2	equ	0xFDE
 16703                           postdec2	equ	0xFDD
 16704                           plusw2	equ	0xFDB
 16705                           fsr2h	equ	0xFDA
 16706                           fsr2l	equ	0xFD9
 16707                           status	equ	0xFD8
 16708                           
 16709 ;; *************** function _ads1115_set_mux *****************
 16710 ;; Defined at:
 16711 ;;		line 54 in file "src/driver/ads1115.c"
 16712 ;; Parameters:    Size  Location     Type
 16713 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16714 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16715 ;;  mux             1    2[BANK0 ] enum E6976
 16716 ;; Auto vars:     Size  Location     Type
 16717 ;;		None
 16718 ;; Return value:  Size  Location     Type
 16719 ;;                  1    wreg      void 
 16720 ;; Registers used:
 16721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16722 ;; Tracked objects:
 16723 ;;		On entry : 0/0
 16724 ;;		On exit  : 0/0
 16725 ;;		Unchanged: 0/0
 16726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16727 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16730 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16731 ;;Total ram usage:        4 bytes
 16732 ;; Hardware stack levels used:    1
 16733 ;; Hardware stack levels required when called:    4
 16734 ;; This function calls:
 16735 ;;		Nothing
 16736 ;; This function is called by:
 16737 ;;		_sample_diff_pr_chip_fast
 16738 ;;		_sample_pr_chip_fast
 16739 ;; This function uses a non-reentrant model
 16740 ;;
 16741                           
 16742                           	psect	text88
 16743  00A0B6                     __ptext88:
 16744                           	opt stack 0
 16745  00A0B6                     _ads1115_set_mux:
 16746                           	opt stack 23
 16747                           
 16748                           ;ads1115.c: 56: pAds1115->config.bits.MUX=mux;
 16749                           
 16750                           ; BSR set to: 0
 16751                           ;incstack = 0
 16752  00A0B6  C062  F020         	movff	ads1115_set_mux@mux,??_ads1115_set_mux
 16753  00A0BA  0100               	movlb	0	; () banked
 16754  00A0BC  EE20 F003          	lfsr	2,3
 16755  00A0C0  5160               	movf	ads1115_set_mux@pAds1115& (0+255),w,b
 16756  00A0C2  26D9               	addwf	fsr2l,f,c
 16757  00A0C4  5161               	movf	(ads1115_set_mux@pAds1115+1)& (0+255),w,b
 16758  00A0C6  22DA               	addwfc	fsr2h,f,c
 16759  00A0C8  3A20               	swapf	??_ads1115_set_mux,f,c
 16760  00A0CA  0100               	movlb	0	; () banked
 16761  00A0CC  50DF               	movf	223,w,c
 16762  00A0CE  1820               	xorwf	??_ads1115_set_mux,w,c
 16763  00A0D0  0B8F               	andlw	-113
 16764  00A0D2  1820               	xorwf	??_ads1115_set_mux,w,c
 16765  00A0D4  0100               	movlb	0	; () banked
 16766  00A0D6  6EDF               	movwf	223,c
 16767                           
 16768                           ; BSR set to: 0
 16769  00A0D8  0012               	return		;funcret
 16770  00A0DA                     __end_of_ads1115_set_mux:
 16771                           	opt stack 0
 16772                           tosu	equ	0xFFF
 16773                           tosh	equ	0xFFE
 16774                           tosl	equ	0xFFD
 16775                           pclath	equ	0xFFA
 16776                           tblptru	equ	0xFF8
 16777                           tblptrh	equ	0xFF7
 16778                           tblptrl	equ	0xFF6
 16779                           tablat	equ	0xFF5
 16780                           prodh	equ	0xFF4
 16781                           prodl	equ	0xFF3
 16782                           intcon	equ	0xFF2
 16783                           postinc0	equ	0xFEE
 16784                           wreg	equ	0xFE8
 16785                           indf1	equ	0xFE7
 16786                           postinc1	equ	0xFE6
 16787                           postdec1	equ	0xFE5
 16788                           plusw1	equ	0xFE3
 16789                           fsr1h	equ	0xFE2
 16790                           fsr1l	equ	0xFE1
 16791                           indf2	equ	0xFDF
 16792                           postinc2	equ	0xFDE
 16793                           postdec2	equ	0xFDD
 16794                           plusw2	equ	0xFDB
 16795                           fsr2h	equ	0xFDA
 16796                           fsr2l	equ	0xFD9
 16797                           status	equ	0xFD8
 16798                           
 16799 ;; *************** function _ads1115_set_data_rate *****************
 16800 ;; Defined at:
 16801 ;;		line 69 in file "src/driver/ads1115.c"
 16802 ;; Parameters:    Size  Location     Type
 16803 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 16804 ;;		 -> ads1115Chip1(16), NULL(0), 
 16805 ;;  dr              1    2[BANK0 ] enum E7001
 16806 ;; Auto vars:     Size  Location     Type
 16807 ;;		None
 16808 ;; Return value:  Size  Location     Type
 16809 ;;                  1    wreg      void 
 16810 ;; Registers used:
 16811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16812 ;; Tracked objects:
 16813 ;;		On entry : 0/0
 16814 ;;		On exit  : 0/0
 16815 ;;		Unchanged: 0/0
 16816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16817 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16820 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16821 ;;Total ram usage:        4 bytes
 16822 ;; Hardware stack levels used:    1
 16823 ;; Hardware stack levels required when called:    4
 16824 ;; This function calls:
 16825 ;;		Nothing
 16826 ;; This function is called by:
 16827 ;;		_sample_diff_pr_chip_fast
 16828 ;; This function uses a non-reentrant model
 16829 ;;
 16830                           
 16831                           	psect	text89
 16832  009FDA                     __ptext89:
 16833                           	opt stack 0
 16834  009FDA                     _ads1115_set_data_rate:
 16835                           	opt stack 23
 16836                           
 16837                           ;ads1115.c: 71: pAds1115->config.bits.DR=dr;
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;incstack = 0
 16841  009FDA  C062  F020         	movff	ads1115_set_data_rate@dr,??_ads1115_set_data_rate
 16842  009FDE  0100               	movlb	0	; () banked
 16843  009FE0  EE20 F002          	lfsr	2,2
 16844  009FE4  5160               	movf	ads1115_set_data_rate@pAds1115& (0+255),w,b
 16845  009FE6  26D9               	addwf	fsr2l,f,c
 16846  009FE8  5161               	movf	(ads1115_set_data_rate@pAds1115+1)& (0+255),w,b
 16847  009FEA  22DA               	addwfc	fsr2h,f,c
 16848  009FEC  3A20               	swapf	??_ads1115_set_data_rate,f,c
 16849  009FEE  4620               	rlncf	??_ads1115_set_data_rate,f,c
 16850  009FF0  0100               	movlb	0	; () banked
 16851  009FF2  50DF               	movf	223,w,c
 16852  009FF4  1820               	xorwf	??_ads1115_set_data_rate,w,c
 16853  009FF6  0B1F               	andlw	-225
 16854  009FF8  1820               	xorwf	??_ads1115_set_data_rate,w,c
 16855  009FFA  0100               	movlb	0	; () banked
 16856  009FFC  6EDF               	movwf	223,c
 16857                           
 16858                           ; BSR set to: 0
 16859  009FFE  0012               	return		;funcret
 16860  00A000                     __end_of_ads1115_set_data_rate:
 16861                           	opt stack 0
 16862                           tosu	equ	0xFFF
 16863                           tosh	equ	0xFFE
 16864                           tosl	equ	0xFFD
 16865                           pclath	equ	0xFFA
 16866                           tblptru	equ	0xFF8
 16867                           tblptrh	equ	0xFF7
 16868                           tblptrl	equ	0xFF6
 16869                           tablat	equ	0xFF5
 16870                           prodh	equ	0xFF4
 16871                           prodl	equ	0xFF3
 16872                           intcon	equ	0xFF2
 16873                           postinc0	equ	0xFEE
 16874                           wreg	equ	0xFE8
 16875                           indf1	equ	0xFE7
 16876                           postinc1	equ	0xFE6
 16877                           postdec1	equ	0xFE5
 16878                           plusw1	equ	0xFE3
 16879                           fsr1h	equ	0xFE2
 16880                           fsr1l	equ	0xFE1
 16881                           indf2	equ	0xFDF
 16882                           postinc2	equ	0xFDE
 16883                           postdec2	equ	0xFDD
 16884                           plusw2	equ	0xFDB
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _ads1115_read_conversion *****************
 16890 ;; Defined at:
 16891 ;;		line 127 in file "src/driver/ads1115.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  pAds1115        2   14[BANK0 ] PTR struct .
 16894 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;  result          2   17[BANK0 ] unsigned int 
 16897 ;; Return value:  Size  Location     Type
 16898 ;;                  2   14[BANK0 ] unsigned int 
 16899 ;; Registers used:
 16900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16909 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16910 ;;Total ram usage:        5 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:    9
 16913 ;; This function calls:
 16914 ;;		_ads1115_read_reg
 16915 ;; This function is called by:
 16916 ;;		_sample_diff_pr_chip_fast
 16917 ;;		_sample_pr_chip_fast
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text90
 16922  0097C6                     __ptext90:
 16923                           	opt stack 0
 16924  0097C6                     _ads1115_read_conversion:
 16925                           	opt stack 18
 16926                           
 16927                           ;ads1115.c: 129: uint16_t result;
 16928                           ;ads1115.c: 130: result=ads1115_read_reg(pAds1115,(0x00));
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;incstack = 0
 16932  0097C6  C06E  F068         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 16933  0097CA  C06F  F069         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 16934  0097CE  0E00               	movlw	0
 16935  0097D0  0100               	movlb	0	; () banked
 16936  0097D2  6F6A               	movwf	ads1115_read_reg@addr& (0+255),b
 16937  0097D4  ECA3  F021         	call	_ads1115_read_reg
 16938  0097D8  C068  F071         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 16939  0097DC  C069  F072         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 16940                           
 16941                           ;ads1115.c: 131: if(pAds1115->chip<ADS1113){
 16942  0097E0  C06E  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 16943  0097E4  C06F  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 16944  0097E8  0E03               	movlw	3
 16945  0097EA  60DF               	cpfslt	indf2,c
 16946  0097EC  D00A               	goto	l15588
 16947                           
 16948                           ;ads1115.c: 132: result >>= 4;
 16949  0097EE  0100               	movlb	0	; () banked
 16950  0097F0  3B71               	swapf	ads1115_read_conversion@result& (0+255),f,b
 16951  0097F2  3B72               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 16952  0097F4  0E0F               	movlw	15
 16953  0097F6  1771               	andwf	ads1115_read_conversion@result& (0+255),f,b
 16954  0097F8  5172               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 16955  0097FA  0BF0               	andlw	240
 16956  0097FC  1371               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 16957  0097FE  0E0F               	movlw	15
 16958  009800  1772               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 16959  009802                     l15588:
 16960                           
 16961                           ;ads1115.c: 133: }
 16962                           ;ads1115.c: 134: return result;
 16963  009802  C071  F06E         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 16964  009806  C072  F06F         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 16965  00980A  0012               	return	
 16966  00980C                     __end_of_ads1115_read_conversion:
 16967                           	opt stack 0
 16968                           tosu	equ	0xFFF
 16969                           tosh	equ	0xFFE
 16970                           tosl	equ	0xFFD
 16971                           pclath	equ	0xFFA
 16972                           tblptru	equ	0xFF8
 16973                           tblptrh	equ	0xFF7
 16974                           tblptrl	equ	0xFF6
 16975                           tablat	equ	0xFF5
 16976                           prodh	equ	0xFF4
 16977                           prodl	equ	0xFF3
 16978                           intcon	equ	0xFF2
 16979                           postinc0	equ	0xFEE
 16980                           wreg	equ	0xFE8
 16981                           indf1	equ	0xFE7
 16982                           postinc1	equ	0xFE6
 16983                           postdec1	equ	0xFE5
 16984                           plusw1	equ	0xFE3
 16985                           fsr1h	equ	0xFE2
 16986                           fsr1l	equ	0xFE1
 16987                           indf2	equ	0xFDF
 16988                           postinc2	equ	0xFDE
 16989                           postdec2	equ	0xFDD
 16990                           plusw2	equ	0xFDB
 16991                           fsr2h	equ	0xFDA
 16992                           fsr2l	equ	0xFD9
 16993                           status	equ	0xFD8
 16994                           
 16995 ;; *************** function _ads1115_read_reg *****************
 16996 ;; Defined at:
 16997 ;;		line 29 in file "src/driver/ads1115.c"
 16998 ;; Parameters:    Size  Location     Type
 16999 ;;  pAds1115        2    8[BANK0 ] PTR struct .
 17000 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 17001 ;;  addr            1   10[BANK0 ] unsigned char 
 17002 ;; Auto vars:     Size  Location     Type
 17003 ;;  t16             2   12[BANK0 ] unsigned int 
 17004 ;; Return value:  Size  Location     Type
 17005 ;;                  2    8[BANK0 ] unsigned int 
 17006 ;; Registers used:
 17007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 17008 ;; Tracked objects:
 17009 ;;		On entry : 0/0
 17010 ;;		On exit  : 0/0
 17011 ;;		Unchanged: 0/0
 17012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17013 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17014 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17016 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17017 ;;Total ram usage:        6 bytes
 17018 ;; Hardware stack levels used:    1
 17019 ;; Hardware stack levels required when called:    8
 17020 ;; This function calls:
 17021 ;;		_iic_received_byte_if_ack
 17022 ;;		_iic_send_byte
 17023 ;;		_iic_start
 17024 ;;		_iic_stop
 17025 ;; This function is called by:
 17026 ;;		_ads1115_read_conversion
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           	psect	text91
 17031  004346                     __ptext91:
 17032                           	opt stack 0
 17033  004346                     _ads1115_read_reg:
 17034                           	opt stack 18
 17035                           
 17036                           ;ads1115.c: 31: uint16_t t16=0;
 17037                           
 17038                           ;incstack = 0
 17039  004346  0E00               	movlw	0
 17040  004348  0100               	movlb	0	; () banked
 17041  00434A  6F6D               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 17042  00434C  0E00               	movlw	0
 17043  00434E  6F6C               	movwf	ads1115_read_reg@t16& (0+255),b
 17044                           
 17045                           ; BSR set to: 0
 17046                           ;ads1115.c: 32: pAds1115->iic_start();
 17047  004350  0100               	movlb	0	; () banked
 17048  004352  EE20 F006          	lfsr	2,6
 17049  004356  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17050  004358  26D9               	addwf	fsr2l,f,c
 17051  00435A  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17052  00435C  22DA               	addwfc	fsr2h,f,c
 17053  00435E  D801               	call	u13988
 17054  004360  D00A               	goto	l14876
 17055  004362                     u13988:
 17056  004362  0005               	push	
 17057  004364  6EFA               	movwf	pclath,c
 17058  004366  50DE               	movf	postinc2,w,c
 17059  004368  6EFD               	movwf	tosl,c
 17060  00436A  50DE               	movf	postinc2,w,c
 17061  00436C  6EFE               	movwf	tosh,c
 17062  00436E  50F8               	movf	tblptru,w,c
 17063  004370  6EFF               	movwf	tosu,c
 17064  004372  50FA               	movf	pclath,w,c
 17065  004374  0012               	return		;indir
 17066  004376                     l14876:
 17067                           
 17068                           ;ads1115.c: 34: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 17069  004376  0100               	movlb	0	; () banked
 17070  004378  EE20 F00A          	lfsr	2,10
 17071  00437C  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17072  00437E  26D9               	addwf	fsr2l,f,c
 17073  004380  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17074  004382  22DA               	addwfc	fsr2h,f,c
 17075  004384  D801               	call	u13998
 17076  004386  D012               	goto	l14878
 17077  004388                     u13998:
 17078  004388  0005               	push	
 17079  00438A  6EFA               	movwf	pclath,c
 17080  00438C  50DE               	movf	postinc2,w,c
 17081  00438E  6EFD               	movwf	tosl,c
 17082  004390  50DE               	movf	postinc2,w,c
 17083  004392  6EFE               	movwf	tosh,c
 17084  004394  50F8               	movf	tblptru,w,c
 17085  004396  6EFF               	movwf	tosu,c
 17086  004398  50FA               	movf	pclath,w,c
 17087  00439A  0100               	movlb	0	; () banked
 17088  00439C  EE20 F001          	lfsr	2,1
 17089  0043A0  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17090  0043A2  26D9               	addwf	fsr2l,f,c
 17091  0043A4  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17092  0043A6  22DA               	addwfc	fsr2h,f,c
 17093  0043A8  50DF               	movf	indf2,w,c
 17094  0043AA  0012               	return		;indir
 17095  0043AC                     l14878:
 17096                           
 17097                           ;ads1115.c: 35: pAds1115->iic_send_byte(addr);
 17098  0043AC  0100               	movlb	0	; () banked
 17099  0043AE  EE20 F00A          	lfsr	2,10
 17100  0043B2  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17101  0043B4  26D9               	addwf	fsr2l,f,c
 17102  0043B6  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17103  0043B8  22DA               	addwfc	fsr2h,f,c
 17104  0043BA  D801               	call	u14008
 17105  0043BC  D00C               	goto	l14880
 17106  0043BE                     u14008:
 17107  0043BE  0005               	push	
 17108  0043C0  6EFA               	movwf	pclath,c
 17109  0043C2  50DE               	movf	postinc2,w,c
 17110  0043C4  6EFD               	movwf	tosl,c
 17111  0043C6  50DE               	movf	postinc2,w,c
 17112  0043C8  6EFE               	movwf	tosh,c
 17113  0043CA  50F8               	movf	tblptru,w,c
 17114  0043CC  6EFF               	movwf	tosu,c
 17115  0043CE  50FA               	movf	pclath,w,c
 17116  0043D0  0100               	movlb	0	; () banked
 17117  0043D2  516A               	movf	ads1115_read_reg@addr& (0+255),w,b
 17118  0043D4  0012               	return		;indir
 17119  0043D6                     l14880:
 17120                           
 17121                           ;ads1115.c: 36: pAds1115->iic_stop();
 17122  0043D6  0100               	movlb	0	; () banked
 17123  0043D8  EE20 F008          	lfsr	2,8
 17124  0043DC  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17125  0043DE  26D9               	addwf	fsr2l,f,c
 17126  0043E0  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17127  0043E2  22DA               	addwfc	fsr2h,f,c
 17128  0043E4  D801               	call	u14018
 17129  0043E6  D00A               	goto	l14882
 17130  0043E8                     u14018:
 17131  0043E8  0005               	push	
 17132  0043EA  6EFA               	movwf	pclath,c
 17133  0043EC  50DE               	movf	postinc2,w,c
 17134  0043EE  6EFD               	movwf	tosl,c
 17135  0043F0  50DE               	movf	postinc2,w,c
 17136  0043F2  6EFE               	movwf	tosh,c
 17137  0043F4  50F8               	movf	tblptru,w,c
 17138  0043F6  6EFF               	movwf	tosu,c
 17139  0043F8  50FA               	movf	pclath,w,c
 17140  0043FA  0012               	return		;indir
 17141  0043FC                     l14882:
 17142                           
 17143                           ;ads1115.c: 38: pAds1115->iic_start();
 17144  0043FC  0100               	movlb	0	; () banked
 17145  0043FE  EE20 F006          	lfsr	2,6
 17146  004402  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17147  004404  26D9               	addwf	fsr2l,f,c
 17148  004406  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17149  004408  22DA               	addwfc	fsr2h,f,c
 17150  00440A  D801               	call	u14028
 17151  00440C  D00A               	goto	l14884
 17152  00440E                     u14028:
 17153  00440E  0005               	push	
 17154  004410  6EFA               	movwf	pclath,c
 17155  004412  50DE               	movf	postinc2,w,c
 17156  004414  6EFD               	movwf	tosl,c
 17157  004416  50DE               	movf	postinc2,w,c
 17158  004418  6EFE               	movwf	tosh,c
 17159  00441A  50F8               	movf	tblptru,w,c
 17160  00441C  6EFF               	movwf	tosu,c
 17161  00441E  50FA               	movf	pclath,w,c
 17162  004420  0012               	return		;indir
 17163  004422                     l14884:
 17164                           
 17165                           ;ads1115.c: 39: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 17166  004422  0100               	movlb	0	; () banked
 17167  004424  EE20 F00A          	lfsr	2,10
 17168  004428  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17169  00442A  26D9               	addwf	fsr2l,f,c
 17170  00442C  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17171  00442E  22DA               	addwfc	fsr2h,f,c
 17172  004430  D801               	call	u14038
 17173  004432  D016               	goto	l14886
 17174  004434                     u14038:
 17175  004434  0005               	push	
 17176  004436  6EFA               	movwf	pclath,c
 17177  004438  50DE               	movf	postinc2,w,c
 17178  00443A  6EFD               	movwf	tosl,c
 17179  00443C  50DE               	movf	postinc2,w,c
 17180  00443E  6EFE               	movwf	tosh,c
 17181  004440  50F8               	movf	tblptru,w,c
 17182  004442  6EFF               	movwf	tosu,c
 17183  004444  50FA               	movf	pclath,w,c
 17184  004446  0100               	movlb	0	; () banked
 17185  004448  EE20 F001          	lfsr	2,1
 17186  00444C  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17187  00444E  26D9               	addwf	fsr2l,f,c
 17188  004450  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17189  004452  22DA               	addwfc	fsr2h,f,c
 17190  004454  50DF               	movf	indf2,w,c
 17191  004456  0100               	movlb	0	; () banked
 17192  004458  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17193  00445A  0100               	movlb	0	; () banked
 17194  00445C  296B               	incf	??_ads1115_read_reg& (0+255),w,b
 17195  00445E  0012               	return		;indir
 17196  004460                     l14886:
 17197                           
 17198                           ;ads1115.c: 40: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 17199  004460  0100               	movlb	0	; () banked
 17200  004462  EE20 F00E          	lfsr	2,14
 17201  004466  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17202  004468  26D9               	addwf	fsr2l,f,c
 17203  00446A  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17204  00446C  22DA               	addwfc	fsr2h,f,c
 17205  00446E  D801               	call	u14048
 17206  004470  D00B               	goto	u14049
 17207  004472                     u14048:
 17208  004472  0005               	push	
 17209  004474  6EFA               	movwf	pclath,c
 17210  004476  50DE               	movf	postinc2,w,c
 17211  004478  6EFD               	movwf	tosl,c
 17212  00447A  50DE               	movf	postinc2,w,c
 17213  00447C  6EFE               	movwf	tosh,c
 17214  00447E  50F8               	movf	tblptru,w,c
 17215  004480  6EFF               	movwf	tosu,c
 17216  004482  50FA               	movf	pclath,w,c
 17217  004484  0E00               	movlw	0
 17218  004486  0012               	return		;indir
 17219  004488                     u14049:
 17220  004488  0100               	movlb	0	; () banked
 17221  00448A  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17222  00448C  0100               	movlb	0	; () banked
 17223  00448E  516B               	movf	??_ads1115_read_reg& (0+255),w,b
 17224  004490  0100               	movlb	0	; () banked
 17225  004492  6F6C               	movwf	ads1115_read_reg@t16& (0+255),b
 17226  004494  6B6D               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 17227                           
 17228                           ; BSR set to: 0
 17229                           ;ads1115.c: 41: t16<<=8;
 17230  004496  0100               	movlb	0	; () banked
 17231  004498  516C               	movf	ads1115_read_reg@t16& (0+255),w,b
 17232  00449A  6F6D               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 17233  00449C  6B6C               	clrf	ads1115_read_reg@t16& (0+255),b
 17234                           
 17235                           ;ads1115.c: 42: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 17236  00449E  0100               	movlb	0	; () banked
 17237  0044A0  EE20 F00E          	lfsr	2,14
 17238  0044A4  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17239  0044A6  26D9               	addwf	fsr2l,f,c
 17240  0044A8  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17241  0044AA  22DA               	addwfc	fsr2h,f,c
 17242  0044AC  D801               	call	u14058
 17243  0044AE  D00B               	goto	u14059
 17244  0044B0                     u14058:
 17245  0044B0  0005               	push	
 17246  0044B2  6EFA               	movwf	pclath,c
 17247  0044B4  50DE               	movf	postinc2,w,c
 17248  0044B6  6EFD               	movwf	tosl,c
 17249  0044B8  50DE               	movf	postinc2,w,c
 17250  0044BA  6EFE               	movwf	tosh,c
 17251  0044BC  50F8               	movf	tblptru,w,c
 17252  0044BE  6EFF               	movwf	tosu,c
 17253  0044C0  50FA               	movf	pclath,w,c
 17254  0044C2  0E00               	movlw	0
 17255  0044C4  0012               	return		;indir
 17256  0044C6                     u14059:
 17257  0044C6  0100               	movlb	0	; () banked
 17258  0044C8  6F6B               	movwf	??_ads1115_read_reg& (0+255),b
 17259  0044CA  0100               	movlb	0	; () banked
 17260  0044CC  516B               	movf	??_ads1115_read_reg& (0+255),w,b
 17261  0044CE  0100               	movlb	0	; () banked
 17262  0044D0  136C               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 17263                           
 17264                           ;ads1115.c: 44: pAds1115->iic_stop();
 17265  0044D2  0100               	movlb	0	; () banked
 17266  0044D4  EE20 F008          	lfsr	2,8
 17267  0044D8  5168               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 17268  0044DA  26D9               	addwf	fsr2l,f,c
 17269  0044DC  5169               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 17270  0044DE  22DA               	addwfc	fsr2h,f,c
 17271  0044E0  D801               	call	u14068
 17272  0044E2  D00A               	goto	l14890
 17273  0044E4                     u14068:
 17274  0044E4  0005               	push	
 17275  0044E6  6EFA               	movwf	pclath,c
 17276  0044E8  50DE               	movf	postinc2,w,c
 17277  0044EA  6EFD               	movwf	tosl,c
 17278  0044EC  50DE               	movf	postinc2,w,c
 17279  0044EE  6EFE               	movwf	tosh,c
 17280  0044F0  50F8               	movf	tblptru,w,c
 17281  0044F2  6EFF               	movwf	tosu,c
 17282  0044F4  50FA               	movf	pclath,w,c
 17283  0044F6  0012               	return		;indir
 17284  0044F8                     l14890:
 17285                           
 17286                           ;ads1115.c: 45: return t16;
 17287  0044F8  C06C  F068         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 17288  0044FC  C06D  F069         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 17289  004500  0012               	return	
 17290  004502                     __end_of_ads1115_read_reg:
 17291                           	opt stack 0
 17292                           tosu	equ	0xFFF
 17293                           tosh	equ	0xFFE
 17294                           tosl	equ	0xFFD
 17295                           pclath	equ	0xFFA
 17296                           tblptru	equ	0xFF8
 17297                           tblptrh	equ	0xFF7
 17298                           tblptrl	equ	0xFF6
 17299                           tablat	equ	0xFF5
 17300                           prodh	equ	0xFF4
 17301                           prodl	equ	0xFF3
 17302                           intcon	equ	0xFF2
 17303                           postinc0	equ	0xFEE
 17304                           wreg	equ	0xFE8
 17305                           indf1	equ	0xFE7
 17306                           postinc1	equ	0xFE6
 17307                           postdec1	equ	0xFE5
 17308                           plusw1	equ	0xFE3
 17309                           fsr1h	equ	0xFE2
 17310                           fsr1l	equ	0xFE1
 17311                           indf2	equ	0xFDF
 17312                           postinc2	equ	0xFDE
 17313                           postdec2	equ	0xFDD
 17314                           plusw2	equ	0xFDB
 17315                           fsr2h	equ	0xFDA
 17316                           fsr2l	equ	0xFD9
 17317                           status	equ	0xFD8
 17318                           
 17319 ;; *************** function ___x_sample_fifo *****************
 17320 ;; Defined at:
 17321 ;;		line 67 in file "src/api/sample.c"
 17322 ;; Parameters:    Size  Location     Type
 17323 ;;  buf             2   26[BANK0 ] PTR int 
 17324 ;;		 -> sampBufRefInSoc(8), sampBufBatInSoc(8), sampBufExPr1InSoc(8), sampBufExPr0InSoc(8), 
 17325 ;;		 -> sampBufPr(8), sampBufPt100ExB(8), sampBufPt100ExA(8), sampBufDiffPr_S1(8), 
 17326 ;;		 -> sampBufDiffPr_D23(8), sampBufDiffPr_D01(8), 
 17327 ;;  x               2   28[BANK0 ] int 
 17328 ;;  len             1   30[BANK0 ] unsigned char 
 17329 ;; Auto vars:     Size  Location     Type
 17330 ;;  ret             4   37[BANK0 ] long 
 17331 ;;  i               1   41[BANK0 ] unsigned char 
 17332 ;; Return value:  Size  Location     Type
 17333 ;;                  2   26[BANK0 ] int 
 17334 ;; Registers used:
 17335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17336 ;; Tracked objects:
 17337 ;;		On entry : 0/0
 17338 ;;		On exit  : 0/0
 17339 ;;		Unchanged: 0/0
 17340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17341 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17342 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17343 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17344 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17345 ;;Total ram usage:       16 bytes
 17346 ;; Hardware stack levels used:    1
 17347 ;; Hardware stack levels required when called:    5
 17348 ;; This function calls:
 17349 ;;		___aldiv
 17350 ;; This function is called by:
 17351 ;;		_sample_diff_pr_chip_fast
 17352 ;;		_sample_pr_chip_fast
 17353 ;;		_sample_in_soc_adc_ch
 17354 ;; This function uses a non-reentrant model
 17355 ;;
 17356                           
 17357                           	psect	text92
 17358  004B26                     __ptext92:
 17359                           	opt stack 0
 17360  004B26                     ___x_sample_fifo:
 17361                           	opt stack 22
 17362                           
 17363                           ;sample.c: 69: int32_t ret=0;
 17364                           
 17365                           ;incstack = 0
 17366  004B26  0E00               	movlw	0
 17367  004B28  0100               	movlb	0	; () banked
 17368  004B2A  6F85               	movwf	___x_sample_fifo@ret& (0+255),b
 17369  004B2C  0E00               	movlw	0
 17370  004B2E  6F86               	movwf	(___x_sample_fifo@ret+1)& (0+255),b
 17371  004B30  0E00               	movlw	0
 17372  004B32  6F87               	movwf	(___x_sample_fifo@ret+2)& (0+255),b
 17373  004B34  0E00               	movlw	0
 17374  004B36  6F88               	movwf	(___x_sample_fifo@ret+3)& (0+255),b
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;sample.c: 70: uint8_t i;
 17378                           ;sample.c: 71: for(i=len-1;i>0;i--){
 17379  004B38  0100               	movlb	0	; () banked
 17380  004B3A  057E               	decf	___x_sample_fifo@len& (0+255),w,b
 17381  004B3C  0100               	movlb	0	; () banked
 17382  004B3E  6F89               	movwf	___x_sample_fifo@i& (0+255),b
 17383  004B40                     l15546:
 17384                           
 17385                           ; BSR set to: 0
 17386  004B40  0100               	movlb	0	; () banked
 17387  004B42  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17388  004B44  0100               	movlb	0	; () banked
 17389  004B46  B4D8               	btfsc	status,2,c
 17390  004B48  D05C               	goto	l15558
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;sample.c: 72: buf[i]=buf[i-1];
 17394                           
 17395                           ; BSR set to: 0
 17396                           
 17397                           ; BSR set to: 0
 17398  004B4A  0EFE               	movlw	254
 17399  004B4C  0100               	movlb	0	; () banked
 17400  004B4E  6F7F               	movwf	??___x_sample_fifo& (0+255),b
 17401  004B50  0EFF               	movlw	255
 17402  004B52  0100               	movlb	0	; () banked
 17403  004B54  6F80               	movwf	(??___x_sample_fifo+1)& (0+255),b
 17404  004B56  0100               	movlb	0	; () banked
 17405  004B58  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17406  004B5A  0100               	movlb	0	; () banked
 17407  004B5C  6F81               	movwf	(??___x_sample_fifo+2)& (0+255),b
 17408  004B5E  6B82               	clrf	(??___x_sample_fifo+3)& (0+255),b
 17409  004B60  90D8               	bcf	status,0,c
 17410  004B62  0100               	movlb	0	; () banked
 17411  004B64  3781               	rlcf	(??___x_sample_fifo+2)& (0+255),f,b
 17412  004B66  3782               	rlcf	(??___x_sample_fifo+3)& (0+255),f,b
 17413  004B68  0100               	movlb	0	; () banked
 17414  004B6A  517F               	movf	??___x_sample_fifo& (0+255),w,b
 17415  004B6C  0100               	movlb	0	; () banked
 17416  004B6E  2781               	addwf	(??___x_sample_fifo+2)& (0+255),f,b
 17417  004B70  0100               	movlb	0	; () banked
 17418  004B72  5180               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 17419  004B74  0100               	movlb	0	; () banked
 17420  004B76  2382               	addwfc	(??___x_sample_fifo+3)& (0+255),f,b
 17421  004B78  0100               	movlb	0	; () banked
 17422  004B7A  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17423  004B7C  0100               	movlb	0	; () banked
 17424  004B7E  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17425  004B80  6ED9               	movwf	fsr2l,c
 17426  004B82  0100               	movlb	0	; () banked
 17427  004B84  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17428  004B86  0100               	movlb	0	; () banked
 17429  004B88  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17430  004B8A  6EDA               	movwf	fsr2h,c
 17431  004B8C  0100               	movlb	0	; () banked
 17432  004B8E  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17433  004B90  0D02               	mullw	2
 17434  004B92  50F3               	movf	prodl,w,c
 17435  004B94  0100               	movlb	0	; () banked
 17436  004B96  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17437  004B98  6EE1               	movwf	fsr1l,c
 17438  004B9A  50F4               	movf	prodh,w,c
 17439  004B9C  0100               	movlb	0	; () banked
 17440  004B9E  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17441  004BA0  6EE2               	movwf	fsr1h,c
 17442  004BA2  CFDE FFE6          	movff	postinc2,postinc1
 17443  004BA6  CFDD FFE5          	movff	postdec2,postdec1
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;sample.c: 73: ret+=buf[i];
 17447  004BAA  0100               	movlb	0	; () banked
 17448  004BAC  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17449  004BAE  0D02               	mullw	2
 17450  004BB0  50F3               	movf	prodl,w,c
 17451  004BB2  0100               	movlb	0	; () banked
 17452  004BB4  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17453  004BB6  6ED9               	movwf	fsr2l,c
 17454  004BB8  50F4               	movf	prodh,w,c
 17455  004BBA  0100               	movlb	0	; () banked
 17456  004BBC  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17457  004BBE  6EDA               	movwf	fsr2h,c
 17458  004BC0  CFDE F07F          	movff	postinc2,??___x_sample_fifo
 17459  004BC4  CFDD F080          	movff	postdec2,??___x_sample_fifo+1
 17460  004BC8  C07F  F081         	movff	??___x_sample_fifo,??___x_sample_fifo+2
 17461  004BCC  C080  F082         	movff	??___x_sample_fifo+1,??___x_sample_fifo+3
 17462  004BD0  0E00               	movlw	0
 17463  004BD2  0100               	movlb	0	; () banked
 17464  004BD4  BF82               	btfsc	(??___x_sample_fifo+3)& (0+255),7,b
 17465  004BD6  0EFF               	movlw	255
 17466  004BD8  6F83               	movwf	(??___x_sample_fifo+4)& (0+255),b
 17467  004BDA  6F84               	movwf	(??___x_sample_fifo+5)& (0+255),b
 17468  004BDC  0100               	movlb	0	; () banked
 17469  004BDE  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17470  004BE0  0100               	movlb	0	; () banked
 17471  004BE2  2785               	addwf	___x_sample_fifo@ret& (0+255),f,b
 17472  004BE4  0100               	movlb	0	; () banked
 17473  004BE6  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17474  004BE8  0100               	movlb	0	; () banked
 17475  004BEA  2386               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 17476  004BEC  0100               	movlb	0	; () banked
 17477  004BEE  5183               	movf	(??___x_sample_fifo+4)& (0+255),w,b
 17478  004BF0  0100               	movlb	0	; () banked
 17479  004BF2  2387               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 17480  004BF4  0100               	movlb	0	; () banked
 17481  004BF6  5184               	movf	(??___x_sample_fifo+5)& (0+255),w,b
 17482  004BF8  0100               	movlb	0	; () banked
 17483  004BFA  2388               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 17484                           
 17485                           ; BSR set to: 0
 17486  004BFC  0100               	movlb	0	; () banked
 17487  004BFE  0789               	decf	___x_sample_fifo@i& (0+255),f,b
 17488  004C00  D79F               	goto	l15546
 17489  004C02                     l15558:
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;sample.c: 74: }
 17493                           ;sample.c: 75: buf[i]=x;
 17494  004C02  0100               	movlb	0	; () banked
 17495  004C04  5189               	movf	___x_sample_fifo@i& (0+255),w,b
 17496  004C06  0D02               	mullw	2
 17497  004C08  50F3               	movf	prodl,w,c
 17498  004C0A  0100               	movlb	0	; () banked
 17499  004C0C  257A               	addwf	___x_sample_fifo@buf& (0+255),w,b
 17500  004C0E  6ED9               	movwf	fsr2l,c
 17501  004C10  50F4               	movf	prodh,w,c
 17502  004C12  0100               	movlb	0	; () banked
 17503  004C14  217B               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 17504  004C16  6EDA               	movwf	fsr2h,c
 17505  004C18  C07C  FFDE         	movff	___x_sample_fifo@x,postinc2
 17506  004C1C  C07D  FFDD         	movff	___x_sample_fifo@x+1,postdec2
 17507                           
 17508                           ; BSR set to: 0
 17509                           ;sample.c: 76: ret+=x;
 17510  004C20  C07C  F07F         	movff	___x_sample_fifo@x,??___x_sample_fifo
 17511  004C24  C07D  F080         	movff	___x_sample_fifo@x+1,??___x_sample_fifo+1
 17512  004C28  0E00               	movlw	0
 17513  004C2A  0100               	movlb	0	; () banked
 17514  004C2C  BF80               	btfsc	(??___x_sample_fifo+1)& (0+255),7,b
 17515  004C2E  0EFF               	movlw	255
 17516  004C30  6F81               	movwf	(??___x_sample_fifo+2)& (0+255),b
 17517  004C32  6F82               	movwf	(??___x_sample_fifo+3)& (0+255),b
 17518  004C34  0100               	movlb	0	; () banked
 17519  004C36  517F               	movf	??___x_sample_fifo& (0+255),w,b
 17520  004C38  0100               	movlb	0	; () banked
 17521  004C3A  2785               	addwf	___x_sample_fifo@ret& (0+255),f,b
 17522  004C3C  0100               	movlb	0	; () banked
 17523  004C3E  5180               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 17524  004C40  0100               	movlb	0	; () banked
 17525  004C42  2386               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 17526  004C44  0100               	movlb	0	; () banked
 17527  004C46  5181               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 17528  004C48  0100               	movlb	0	; () banked
 17529  004C4A  2387               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 17530  004C4C  0100               	movlb	0	; () banked
 17531  004C4E  5182               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 17532  004C50  0100               	movlb	0	; () banked
 17533  004C52  2388               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;sample.c: 77: ret/=len;
 17537  004C54  C085  F06C         	movff	___x_sample_fifo@ret,___aldiv@dividend
 17538  004C58  C086  F06D         	movff	___x_sample_fifo@ret+1,___aldiv@dividend+1
 17539  004C5C  C087  F06E         	movff	___x_sample_fifo@ret+2,___aldiv@dividend+2
 17540  004C60  C088  F06F         	movff	___x_sample_fifo@ret+3,___aldiv@dividend+3
 17541  004C64  0100               	movlb	0	; () banked
 17542  004C66  517E               	movf	___x_sample_fifo@len& (0+255),w,b
 17543  004C68  0100               	movlb	0	; () banked
 17544  004C6A  6F70               	movwf	___aldiv@divisor& (0+255),b
 17545  004C6C  6B71               	clrf	(___aldiv@divisor+1)& (0+255),b
 17546  004C6E  6B72               	clrf	(___aldiv@divisor+2)& (0+255),b
 17547  004C70  6B73               	clrf	(___aldiv@divisor+3)& (0+255),b
 17548  004C72  EC2B  F02D         	call	___aldiv
 17549  004C76  C06C  F085         	movff	?___aldiv,___x_sample_fifo@ret
 17550  004C7A  C06D  F086         	movff	?___aldiv+1,___x_sample_fifo@ret+1
 17551  004C7E  C06E  F087         	movff	?___aldiv+2,___x_sample_fifo@ret+2
 17552  004C82  C06F  F088         	movff	?___aldiv+3,___x_sample_fifo@ret+3
 17553                           
 17554                           ;sample.c: 78: return (int16_t)(ret);
 17555  004C86  C085  F07A         	movff	___x_sample_fifo@ret,?___x_sample_fifo
 17556  004C8A  C086  F07B         	movff	___x_sample_fifo@ret+1,?___x_sample_fifo+1
 17557  004C8E  0012               	return	
 17558  004C90                     __end_of___x_sample_fifo:
 17559                           	opt stack 0
 17560                           tosu	equ	0xFFF
 17561                           tosh	equ	0xFFE
 17562                           tosl	equ	0xFFD
 17563                           pclath	equ	0xFFA
 17564                           tblptru	equ	0xFF8
 17565                           tblptrh	equ	0xFF7
 17566                           tblptrl	equ	0xFF6
 17567                           tablat	equ	0xFF5
 17568                           prodh	equ	0xFF4
 17569                           prodl	equ	0xFF3
 17570                           intcon	equ	0xFF2
 17571                           postinc0	equ	0xFEE
 17572                           wreg	equ	0xFE8
 17573                           indf1	equ	0xFE7
 17574                           postinc1	equ	0xFE6
 17575                           postdec1	equ	0xFE5
 17576                           plusw1	equ	0xFE3
 17577                           fsr1h	equ	0xFE2
 17578                           fsr1l	equ	0xFE1
 17579                           indf2	equ	0xFDF
 17580                           postinc2	equ	0xFDE
 17581                           postdec2	equ	0xFDD
 17582                           plusw2	equ	0xFDB
 17583                           fsr2h	equ	0xFDA
 17584                           fsr2l	equ	0xFD9
 17585                           status	equ	0xFD8
 17586                           
 17587 ;; *************** function _event_process_rtc *****************
 17588 ;; Defined at:
 17589 ;;		line 6 in file "src/app/event.c"
 17590 ;; Parameters:    Size  Location     Type
 17591 ;;		None
 17592 ;; Auto vars:     Size  Location     Type
 17593 ;;  ret             1  135[BANK0 ] unsigned char 
 17594 ;; Return value:  Size  Location     Type
 17595 ;;                  1    wreg      char 
 17596 ;; Registers used:
 17597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17598 ;; Tracked objects:
 17599 ;;		On entry : 0/0
 17600 ;;		On exit  : 0/0
 17601 ;;		Unchanged: 0/0
 17602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17607 ;;Total ram usage:        1 bytes
 17608 ;; Hardware stack levels used:    1
 17609 ;; Hardware stack levels required when called:   13
 17610 ;; This function calls:
 17611 ;;		_sample_function_enable_fi_in_rtc
 17612 ;;		_ui_disp_menu
 17613 ;; This function is called by:
 17614 ;;		_main
 17615 ;;		_event_process
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619                           	psect	text93
 17620  009F34                     __ptext93:
 17621                           	opt stack 0
 17622  009F34                     _event_process_rtc:
 17623                           	opt stack 17
 17624                           
 17625                           ;event.c: 8: uint8_t ret=0;
 17626                           
 17627                           ;incstack = 0
 17628  009F34  0E00               	movlw	0
 17629  009F36  0100               	movlb	0	; () banked
 17630  009F38  6FE7               	movwf	event_process_rtc@ret& (0+255),b
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;event.c: 9: sample_function_enable_fi_in_rtc();
 17634  009F3A  EC73  F035         	call	_sample_function_enable_fi_in_rtc	;wreg free
 17635                           
 17636                           ;event.c: 11: if(glNoEventTimeOut){
 17637  009F3E  0100               	movlb	0	; () banked
 17638  009F40  51FF               	movf	_glNoEventTimeOut& (0+255),w,b	;volatile
 17639  009F42  B4D8               	btfsc	status,2,c
 17640  009F44  D006               	goto	l17294
 17641                           
 17642                           ; BSR set to: 0
 17643                           ;event.c: 12: glNoEventTimeOut--;
 17644  009F46  0100               	movlb	0	; () banked
 17645  009F48  07FF               	decf	_glNoEventTimeOut& (0+255),f,b	;volatile
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;event.c: 13: if(!glNoEventTimeOut){
 17649  009F4A  0100               	movlb	0	; () banked
 17650  009F4C  51FF               	movf	_glNoEventTimeOut& (0+255),w,b	;volatile
 17651  009F4E  B4D8               	btfsc	status,2,c
 17652                           
 17653                           ; BSR set to: 0
 17654                           ;event.c: 14: glbEvent |= (1<<2);
 17655  009F50  842E               	bsf	_glbEvent,2,c	;volatile
 17656  009F52                     l17294:
 17657                           
 17658                           ; BSR set to: 0
 17659                           ;event.c: 15: }
 17660                           ;event.c: 16: }
 17661                           ;event.c: 18: if(lcdTwinkle>0)lcdTwinkle--;
 17662  009F52  5034               	movf	_lcdTwinkle,w,c
 17663  009F54  A4D8               	btfss	status,2,c
 17664                           
 17665                           ; BSR set to: 0
 17666  009F56  0634               	decf	_lcdTwinkle,f,c
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;event.c: 19: ui_disp_menu();
 17670                           
 17671                           ; BSR set to: 0
 17672  009F58  EC71  F03B         	call	_ui_disp_menu	;wreg free
 17673  009F5C  0012               	return	
 17674  009F5E                     __end_of_event_process_rtc:
 17675                           	opt stack 0
 17676                           tosu	equ	0xFFF
 17677                           tosh	equ	0xFFE
 17678                           tosl	equ	0xFFD
 17679                           pclath	equ	0xFFA
 17680                           tblptru	equ	0xFF8
 17681                           tblptrh	equ	0xFF7
 17682                           tblptrl	equ	0xFF6
 17683                           tablat	equ	0xFF5
 17684                           prodh	equ	0xFF4
 17685                           prodl	equ	0xFF3
 17686                           intcon	equ	0xFF2
 17687                           postinc0	equ	0xFEE
 17688                           wreg	equ	0xFE8
 17689                           indf1	equ	0xFE7
 17690                           postinc1	equ	0xFE6
 17691                           postdec1	equ	0xFE5
 17692                           plusw1	equ	0xFE3
 17693                           fsr1h	equ	0xFE2
 17694                           fsr1l	equ	0xFE1
 17695                           indf2	equ	0xFDF
 17696                           postinc2	equ	0xFDE
 17697                           postdec2	equ	0xFDD
 17698                           plusw2	equ	0xFDB
 17699                           fsr2h	equ	0xFDA
 17700                           fsr2l	equ	0xFD9
 17701                           status	equ	0xFD8
 17702                           
 17703 ;; *************** function _ui_disp_menu *****************
 17704 ;; Defined at:
 17705 ;;		line 757 in file "src/api/ui.c"
 17706 ;; Parameters:    Size  Location     Type
 17707 ;;		None
 17708 ;; Auto vars:     Size  Location     Type
 17709 ;;		None
 17710 ;; Return value:  Size  Location     Type
 17711 ;;                  1    wreg      void 
 17712 ;; Registers used:
 17713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17714 ;; Tracked objects:
 17715 ;;		On entry : 0/0
 17716 ;;		On exit  : 0/0
 17717 ;;		Unchanged: 0/0
 17718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17723 ;;Total ram usage:        0 bytes
 17724 ;; Hardware stack levels used:    1
 17725 ;; Hardware stack levels required when called:   12
 17726 ;; This function calls:
 17727 ;;		_ui_disp_menu_bar_full_adj
 17728 ;;		_ui_disp_menu_bzero_adj
 17729 ;;		_ui_disp_menu_calib_diff_adj
 17730 ;;		_ui_disp_menu_calib_pr_adj
 17731 ;;		_ui_disp_menu_density_adj
 17732 ;;		_ui_disp_menu_epr_calib_adj
 17733 ;;		_ui_disp_menu_epr_ilp_scale_adj
 17734 ;;		_ui_disp_menu_home
 17735 ;;		_ui_disp_menu_poly_c_adj
 17736 ;;		_ui_disp_menu_pose_size
 17737 ;;		_ui_disp_menu_psw_adj
 17738 ;;		_ui_disp_menu_warn_t_adj
 17739 ;;		_ui_disp_menu_warn_v_adj
 17740 ;;		_ui_disp_menu_work_mode_adj
 17741 ;; This function is called by:
 17742 ;;		_key_process
 17743 ;;		_event_process_rtc
 17744 ;; This function uses a non-reentrant model
 17745 ;;
 17746                           
 17747                           	psect	text94
 17748  0076E2                     __ptext94:
 17749                           	opt stack 0
 17750  0076E2                     _ui_disp_menu:
 17751                           	opt stack 17
 17752                           
 17753                           ;ui.c: 759: switch(menu){
 17754                           
 17755                           ;incstack = 0
 17756  0076E2  D02A               	goto	l17048
 17757  0076E4                     l17018:
 17758  0076E4  EC06  F01E         	call	_ui_disp_menu_home	;wreg free
 17759  0076E8  0012               	return	
 17760  0076EA                     l17020:
 17761  0076EA  ECAF  F04F         	call	_ui_disp_menu_psw_adj	;wreg free
 17762  0076EE  0012               	return	
 17763  0076F0                     l17022:
 17764  0076F0  EC57  F04F         	call	_ui_disp_menu_density_adj	;wreg free
 17765  0076F4  0012               	return	
 17766  0076F6                     l17024:
 17767  0076F6  ECC4  F04F         	call	_ui_disp_menu_pose_size	;wreg free
 17768  0076FA  0012               	return	
 17769  0076FC                     l17026:
 17770  0076FC  EC6E  F04F         	call	_ui_disp_menu_bzero_adj	;wreg free
 17771  007700  0012               	return	
 17772  007702                     l17028:
 17773  007702  EC5A  F032         	call	_ui_disp_menu_calib_diff_adj	;wreg free
 17774  007706  0012               	return	
 17775  007708                     l17030:
 17776  007708  EC54  F033         	call	_ui_disp_menu_calib_pr_adj	;wreg free
 17777  00770C  0012               	return	
 17778  00770E                     l17032:
 17779  00770E  EC33  F047         	call	_ui_disp_menu_poly_c_adj	;wreg free
 17780  007712  0012               	return	
 17781  007714                     l17034:
 17782  007714  ECD8  F02A         	call	_ui_disp_menu_warn_t_adj	;wreg free
 17783  007718  0012               	return	
 17784  00771A                     l17036:
 17785  00771A  EC33  F034         	call	_ui_disp_menu_warn_v_adj	;wreg free
 17786  00771E  0012               	return	
 17787  007720                     l17038:
 17788                           
 17789                           ;ui.c: 779: ui_disp_menu_epr_calib_adj(); break;
 17790  007720  EC30  F038         	call	_ui_disp_menu_epr_calib_adj	;wreg free
 17791  007724  0012               	return	
 17792  007726                     l17040:
 17793                           
 17794                           ;ui.c: 781: ui_disp_menu_epr_ilp_scale_adj(); break;
 17795  007726  ECCE  F037         	call	_ui_disp_menu_epr_ilp_scale_adj	;wreg free
 17796  00772A  0012               	return	
 17797  00772C                     l17042:
 17798  00772C  EC68  F04E         	call	_ui_disp_menu_bar_full_adj	;wreg free
 17799  007730  0012               	return	
 17800  007732                     l17044:
 17801  007732  EC5E  F043         	call	_ui_disp_menu_work_mode_adj	;wreg free
 17802                           
 17803                           ;ui.c: 785: }
 17804                           
 17805                           ;ui.c: 784: default:break;
 17806  007736  0012               	return	
 17807  007738                     l17048:
 17808  007738  5033               	movf	_menu,w,c	;volatile
 17809                           
 17810                           ; Switch size 1, requested type "space"
 17811                           ; Number of cases is 14, Range of values is 0 to 240
 17812                           ; switch strategies available:
 17813                           ; Name         Instructions Cycles
 17814                           ; simple_byte           43    22 (average)
 17815                           ;	Chosen strategy is simple_byte
 17816  00773A  0A00               	xorlw	0	; case 0
 17817  00773C  B4D8               	btfsc	status,2,c
 17818  00773E  D7D2               	goto	l17018
 17819  007740  0A10               	xorlw	16	; case 16
 17820  007742  B4D8               	btfsc	status,2,c
 17821  007744  D7D2               	goto	l17020
 17822  007746  0A30               	xorlw	48	; case 32
 17823  007748  B4D8               	btfsc	status,2,c
 17824  00774A  D7D2               	goto	l17022
 17825  00774C  0A10               	xorlw	16	; case 48
 17826  00774E  B4D8               	btfsc	status,2,c
 17827  007750  D7D2               	goto	l17024
 17828  007752  0A70               	xorlw	112	; case 64
 17829  007754  B4D8               	btfsc	status,2,c
 17830  007756  D7D2               	goto	l17026
 17831  007758  0A10               	xorlw	16	; case 80
 17832  00775A  B4D8               	btfsc	status,2,c
 17833  00775C  D7D2               	goto	l17028
 17834  00775E  0A30               	xorlw	48	; case 96
 17835  007760  B4D8               	btfsc	status,2,c
 17836  007762  D7D2               	goto	l17030
 17837  007764  0A10               	xorlw	16	; case 112
 17838  007766  B4D8               	btfsc	status,2,c
 17839  007768  D7D2               	goto	l17032
 17840  00776A  0AF0               	xorlw	240	; case 128
 17841  00776C  B4D8               	btfsc	status,2,c
 17842  00776E  D7D2               	goto	l17034
 17843  007770  0A10               	xorlw	16	; case 144
 17844  007772  B4D8               	btfsc	status,2,c
 17845  007774  D7D2               	goto	l17036
 17846  007776  0A30               	xorlw	48	; case 160
 17847  007778  B4D8               	btfsc	status,2,c
 17848  00777A  D7D2               	goto	l17038
 17849  00777C  0A10               	xorlw	16	; case 176
 17850  00777E  B4D8               	btfsc	status,2,c
 17851  007780  D7D2               	goto	l17040
 17852  007782  0A70               	xorlw	112	; case 192
 17853  007784  B4D8               	btfsc	status,2,c
 17854  007786  D7D2               	goto	l17042
 17855  007788  0A30               	xorlw	48	; case 240
 17856  00778A  A4D8               	btfss	status,2,c
 17857  00778C  0012               	return	
 17858  00778E  D7D1               	goto	l17044
 17859  007790                     __end_of_ui_disp_menu:
 17860                           	opt stack 0
 17861                           tosu	equ	0xFFF
 17862                           tosh	equ	0xFFE
 17863                           tosl	equ	0xFFD
 17864                           pclath	equ	0xFFA
 17865                           tblptru	equ	0xFF8
 17866                           tblptrh	equ	0xFF7
 17867                           tblptrl	equ	0xFF6
 17868                           tablat	equ	0xFF5
 17869                           prodh	equ	0xFF4
 17870                           prodl	equ	0xFF3
 17871                           intcon	equ	0xFF2
 17872                           postinc0	equ	0xFEE
 17873                           wreg	equ	0xFE8
 17874                           indf1	equ	0xFE7
 17875                           postinc1	equ	0xFE6
 17876                           postdec1	equ	0xFE5
 17877                           plusw1	equ	0xFE3
 17878                           fsr1h	equ	0xFE2
 17879                           fsr1l	equ	0xFE1
 17880                           indf2	equ	0xFDF
 17881                           postinc2	equ	0xFDE
 17882                           postdec2	equ	0xFDD
 17883                           plusw2	equ	0xFDB
 17884                           fsr2h	equ	0xFDA
 17885                           fsr2l	equ	0xFD9
 17886                           status	equ	0xFD8
 17887                           
 17888 ;; *************** function _ui_disp_menu_work_mode_adj *****************
 17889 ;; Defined at:
 17890 ;;		line 741 in file "src/api/ui.c"
 17891 ;; Parameters:    Size  Location     Type
 17892 ;;		None
 17893 ;; Auto vars:     Size  Location     Type
 17894 ;;  buf            10   23[BANK0 ] unsigned char [10]
 17895 ;;  p               2   33[BANK0 ] PTR unsigned char 
 17896 ;;		 -> adjValue(4), 
 17897 ;; Return value:  Size  Location     Type
 17898 ;;                  1    wreg      void 
 17899 ;; Registers used:
 17900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17901 ;; Tracked objects:
 17902 ;;		On entry : 0/0
 17903 ;;		On exit  : 0/0
 17904 ;;		Unchanged: 0/0
 17905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17907 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17909 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17910 ;;Total ram usage:       13 bytes
 17911 ;; Hardware stack levels used:    1
 17912 ;; Hardware stack levels required when called:    9
 17913 ;; This function calls:
 17914 ;;		_lcd_disp_all
 17915 ;;		_lcd_disp_logo
 17916 ;;		_lcd_disp_refresh
 17917 ;;		_lcd_show_string
 17918 ;;		_m_mem_cpy
 17919 ;; This function is called by:
 17920 ;;		_ui_disp_menu
 17921 ;; This function uses a non-reentrant model
 17922 ;;
 17923                           
 17924                           	psect	text95
 17925  0086BC                     __ptext95:
 17926                           	opt stack 0
 17927  0086BC                     _ui_disp_menu_work_mode_adj:
 17928                           	opt stack 19
 17929                           
 17930                           ;ui.c: 743: uint8_t* p;
 17931                           ;ui.c: 744: uint8_t buf[10];
 17932                           ;ui.c: 745: lcd_disp_all(0x00);;
 17933                           
 17934                           ;incstack = 0
 17935  0086BC  0E00               	movlw	0
 17936  0086BE  EC28  F04F         	call	_lcd_disp_all
 17937                           
 17938                           ;ui.c: 746: lcd_disp_logo(1);
 17939  0086C2  0E01               	movlw	1
 17940  0086C4  EC10  F04F         	call	_lcd_disp_logo
 17941                           
 17942                           ;ui.c: 747: p=(uint8_t*)(&adjValue);
 17943  0086C8  0E39               	movlw	low _adjValue
 17944  0086CA  0100               	movlb	0	; () banked
 17945  0086CC  6F81               	movwf	ui_disp_menu_work_mode_adj@p& (0+255),b
 17946  0086CE  0E00               	movlw	high _adjValue
 17947  0086D0  0100               	movlb	0	; () banked
 17948  0086D2  6F82               	movwf	(ui_disp_menu_work_mode_adj@p+1)& (0+255),b
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;ui.c: 749: if(*p==WORK_MODE){
 17952  0086D4  C081  FFD9         	movff	ui_disp_menu_work_mode_adj@p,fsr2l
 17953  0086D8  C082  FFDA         	movff	ui_disp_menu_work_mode_adj@p+1,fsr2h
 17954  0086DC  04DE               	decf	postinc2,w,c
 17955  0086DE  A4D8               	btfss	status,2,c
 17956  0086E0  D00F               	goto	l16496
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;ui.c: 750: m_mem_cpy(buf,(uint8_t*)" sta nor");
 17960  0086E2  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 17961  0086E4  0100               	movlb	0	; () banked
 17962  0086E6  6F60               	movwf	m_mem_cpy@d& (0+255),b
 17963  0086E8  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 17964  0086EA  0100               	movlb	0	; () banked
 17965  0086EC  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 17966  0086EE  0E7F               	movlw	low STR_32
 17967  0086F0  0100               	movlb	0	; () banked
 17968  0086F2  6F62               	movwf	m_mem_cpy@s& (0+255),b
 17969  0086F4  0EF3               	movlw	high STR_32
 17970  0086F6  0100               	movlb	0	; () banked
 17971  0086F8  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 17972  0086FA  EC94  F045         	call	_m_mem_cpy	;wreg free
 17973                           
 17974                           ;ui.c: 751: }else{
 17975  0086FE  D00E               	goto	l16498
 17976  008700                     l16496:
 17977                           
 17978                           ;ui.c: 752: m_mem_cpy(buf,(uint8_t*)" sta tst");
 17979  008700  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 17980  008702  0100               	movlb	0	; () banked
 17981  008704  6F60               	movwf	m_mem_cpy@d& (0+255),b
 17982  008706  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 17983  008708  0100               	movlb	0	; () banked
 17984  00870A  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 17985  00870C  0E88               	movlw	low STR_33
 17986  00870E  0100               	movlb	0	; () banked
 17987  008710  6F62               	movwf	m_mem_cpy@s& (0+255),b
 17988  008712  0EF3               	movlw	high STR_33
 17989  008714  0100               	movlb	0	; () banked
 17990  008716  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 17991  008718  EC94  F045         	call	_m_mem_cpy	;wreg free
 17992  00871C                     l16498:
 17993                           
 17994                           ;ui.c: 753: }
 17995                           ;ui.c: 754: lcd_show_string(buf);
 17996  00871C  0E77               	movlw	low ui_disp_menu_work_mode_adj@buf
 17997  00871E  0100               	movlb	0	; () banked
 17998  008720  6F73               	movwf	lcd_show_string@str& (0+255),b
 17999  008722  0E00               	movlw	high ui_disp_menu_work_mode_adj@buf
 18000  008724  0100               	movlb	0	; () banked
 18001  008726  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 18002  008728  EC27  F045         	call	_lcd_show_string	;wreg free
 18003                           
 18004                           ;ui.c: 755: lcd_disp_refresh();
 18005  00872C  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 18006  008730  0012               	return		;funcret
 18007  008732                     __end_of_ui_disp_menu_work_mode_adj:
 18008                           	opt stack 0
 18009                           tosu	equ	0xFFF
 18010                           tosh	equ	0xFFE
 18011                           tosl	equ	0xFFD
 18012                           pclath	equ	0xFFA
 18013                           tblptru	equ	0xFF8
 18014                           tblptrh	equ	0xFF7
 18015                           tblptrl	equ	0xFF6
 18016                           tablat	equ	0xFF5
 18017                           prodh	equ	0xFF4
 18018                           prodl	equ	0xFF3
 18019                           intcon	equ	0xFF2
 18020                           postinc0	equ	0xFEE
 18021                           wreg	equ	0xFE8
 18022                           indf1	equ	0xFE7
 18023                           postinc1	equ	0xFE6
 18024                           postdec1	equ	0xFE5
 18025                           plusw1	equ	0xFE3
 18026                           fsr1h	equ	0xFE2
 18027                           fsr1l	equ	0xFE1
 18028                           indf2	equ	0xFDF
 18029                           postinc2	equ	0xFDE
 18030                           postdec2	equ	0xFDD
 18031                           plusw2	equ	0xFDB
 18032                           fsr2h	equ	0xFDA
 18033                           fsr2l	equ	0xFD9
 18034                           status	equ	0xFD8
 18035                           
 18036 ;; *************** function _ui_disp_menu_warn_v_adj *****************
 18037 ;; Defined at:
 18038 ;;		line 661 in file "src/api/ui.c"
 18039 ;; Parameters:    Size  Location     Type
 18040 ;;		None
 18041 ;; Auto vars:     Size  Location     Type
 18042 ;;  buf             6   44[BANK0 ] unsigned char [6]
 18043 ;;  t32             4    0        long 
 18044 ;;  fps             2   50[BANK0 ] PTR struct .
 18045 ;;		 -> stSysData(240), 
 18046 ;;  t8              1   53[BANK0 ] unsigned char 
 18047 ;;  type            1   52[BANK0 ] unsigned char 
 18048 ;; Return value:  Size  Location     Type
 18049 ;;                  1    wreg      void 
 18050 ;; Registers used:
 18051 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18052 ;; Tracked objects:
 18053 ;;		On entry : 0/0
 18054 ;;		On exit  : 0/0
 18055 ;;		Unchanged: 0/0
 18056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18058 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18059 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18060 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18061 ;;Total ram usage:       12 bytes
 18062 ;; Hardware stack levels used:    1
 18063 ;; Hardware stack levels required when called:   10
 18064 ;; This function calls:
 18065 ;;		_lcd_disp_all
 18066 ;;		_lcd_disp_logo
 18067 ;;		_lcd_disp_unit_2nd_m
 18068 ;;		_lcd_disp_unit_mpa
 18069 ;;		_m_mem_cpy
 18070 ;;		_ui_disp_adj_xfloat_pt
 18071 ;; This function is called by:
 18072 ;;		_ui_disp_menu
 18073 ;; This function uses a non-reentrant model
 18074 ;;
 18075                           
 18076                           	psect	text96
 18077  006866                     __ptext96:
 18078                           	opt stack 0
 18079  006866                     _ui_disp_menu_warn_v_adj:
 18080                           	opt stack 18
 18081                           
 18082                           ;ui.c: 663: uint8_t buf[6];
 18083                           ;ui.c: 664: uint8_t t8,type;
 18084                           ;ui.c: 665: int32_t t32 ;
 18085                           ;ui.c: 666: lcd_disp_all(0x00);;
 18086                           
 18087                           ;incstack = 0
 18088  006866  0E00               	movlw	0
 18089  006868  EC28  F04F         	call	_lcd_disp_all
 18090                           
 18091                           ;ui.c: 667: lcd_disp_logo(1);
 18092  00686C  0E01               	movlw	1
 18093  00686E  EC10  F04F         	call	_lcd_disp_logo
 18094                           
 18095                           ;ui.c: 668: t8=subMenu;
 18096  006872  C032  F095         	movff	_subMenu,ui_disp_menu_warn_v_adj@t8	;volatile
 18097                           
 18098                           ;ui.c: 669: if(t8>7)return;
 18099  006876  0E07               	movlw	7
 18100  006878  0100               	movlb	0	; () banked
 18101  00687A  6595               	cpfsgt	ui_disp_menu_warn_v_adj@t8& (0+255),b
 18102  00687C  D001               	goto	l16432
 18103  00687E  0012               	return	
 18104  006880                     l16432:
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;ui.c: 671: st_sysDataDef* fps= &stSysData;
 18108  006880  0E00               	movlw	low _stSysData
 18109  006882  0100               	movlb	0	; () banked
 18110  006884  6F92               	movwf	ui_disp_menu_warn_v_adj@fps& (0+255),b
 18111  006886  0E02               	movlw	high _stSysData
 18112  006888  0100               	movlb	0	; () banked
 18113  00688A  6F93               	movwf	(ui_disp_menu_warn_v_adj@fps+1)& (0+255),b
 18114                           
 18115                           ;ui.c: 685: t8=subMenu>>1;
 18116  00688C  90D8               	bcf	status,0,c
 18117  00688E  3032               	rrcf	_subMenu,w,c	;volatile
 18118  006890  0100               	movlb	0	; () banked
 18119  006892  6F95               	movwf	ui_disp_menu_warn_v_adj@t8& (0+255),b
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;ui.c: 688: type=fps->diffPressureWarnSet[t8].type;
 18123  006894  0100               	movlb	0	; () banked
 18124  006896  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18125  006898  0D0C               	mullw	12
 18126  00689A  0E3C               	movlw	60
 18127  00689C  26F3               	addwf	prodl,f,c
 18128  00689E  0E00               	movlw	0
 18129  0068A0  22F4               	addwfc	prodh,f,c
 18130  0068A2  C092  F08A         	movff	ui_disp_menu_warn_v_adj@fps,??_ui_disp_menu_warn_v_adj
 18131  0068A6  C093  F08B         	movff	ui_disp_menu_warn_v_adj@fps+1,??_ui_disp_menu_warn_v_adj+1
 18132  0068AA  50F3               	movf	prodl,w,c
 18133  0068AC  0100               	movlb	0	; () banked
 18134  0068AE  278A               	addwf	??_ui_disp_menu_warn_v_adj& (0+255),f,b
 18135  0068B0  50F4               	movf	prodh,w,c
 18136  0068B2  0100               	movlb	0	; () banked
 18137  0068B4  238B               	addwfc	(??_ui_disp_menu_warn_v_adj+1)& (0+255),f,b
 18138  0068B6  0E08               	movlw	8
 18139  0068B8  0100               	movlb	0	; () banked
 18140  0068BA  258A               	addwf	??_ui_disp_menu_warn_v_adj& (0+255),w,b
 18141  0068BC  6ED9               	movwf	fsr2l,c
 18142  0068BE  0E00               	movlw	0
 18143  0068C0  0100               	movlb	0	; () banked
 18144  0068C2  218B               	addwfc	(??_ui_disp_menu_warn_v_adj+1)& (0+255),w,b
 18145  0068C4  6EDA               	movwf	fsr2h,c
 18146  0068C6  50DF               	movf	indf2,w,c
 18147  0068C8  0100               	movlb	0	; () banked
 18148  0068CA  6F94               	movwf	ui_disp_menu_warn_v_adj@type& (0+255),b
 18149                           
 18150                           ; BSR set to: 0
 18151                           ;ui.c: 689: m_mem_cpy(buf,(uint8_t*)" al0");
 18152  0068CC  0E8C               	movlw	low ui_disp_menu_warn_v_adj@buf
 18153  0068CE  0100               	movlb	0	; () banked
 18154  0068D0  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18155  0068D2  0E00               	movlw	high ui_disp_menu_warn_v_adj@buf
 18156  0068D4  0100               	movlb	0	; () banked
 18157  0068D6  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18158  0068D8  0E9B               	movlw	low STR_16
 18159  0068DA  0100               	movlb	0	; () banked
 18160  0068DC  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18161  0068DE  0EF3               	movlw	high STR_16
 18162  0068E0  0100               	movlb	0	; () banked
 18163  0068E2  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18164  0068E4  EC94  F045         	call	_m_mem_cpy	;wreg free
 18165                           
 18166                           ;ui.c: 690: buf[3]='1'+t8;
 18167  0068E8  0100               	movlb	0	; () banked
 18168  0068EA  5195               	movf	ui_disp_menu_warn_v_adj@t8& (0+255),w,b
 18169  0068EC  0F31               	addlw	49
 18170  0068EE  0100               	movlb	0	; () banked
 18171  0068F0  6F8F               	movwf	(ui_disp_menu_warn_v_adj@buf+3)& (0+255),b
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;ui.c: 691: if(subMenu & 0x01){
 18175  0068F2  A032               	btfss	_subMenu,0,c	;volatile
 18176  0068F4  D003               	goto	l964
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;ui.c: 693: buf[2]='H';
 18180  0068F6  0E48               	movlw	72
 18181  0068F8  0100               	movlb	0	; () banked
 18182  0068FA  6F8E               	movwf	(ui_disp_menu_warn_v_adj@buf+2)& (0+255),b
 18183  0068FC                     l964:
 18184                           
 18185                           ; BSR set to: 0
 18186                           ;ui.c: 694: }
 18187                           ;ui.c: 696: if(type == HIGHT_HI || type== HIGHT_LO){
 18188  0068FC  0100               	movlb	0	; () banked
 18189  0068FE  5194               	movf	ui_disp_menu_warn_v_adj@type& (0+255),w,b
 18190  006900  0100               	movlb	0	; () banked
 18191  006902  B4D8               	btfsc	status,2,c
 18192  006904  D004               	goto	l16446
 18193                           
 18194                           ; BSR set to: 0
 18195  006906  0100               	movlb	0	; () banked
 18196  006908  0594               	decf	ui_disp_menu_warn_v_adj@type& (0+255),w,b
 18197  00690A  A4D8               	btfss	status,2,c
 18198  00690C  D004               	goto	l16448
 18199  00690E                     l16446:
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;ui.c: 697: lcd_disp_unit_2nd_m(1);
 18203  00690E  0E01               	movlw	1
 18204  006910  ECCD  F046         	call	_lcd_disp_unit_2nd_m
 18205                           
 18206                           ;ui.c: 698: }else{
 18207  006914  D003               	goto	l16450
 18208  006916                     l16448:
 18209                           
 18210                           ;ui.c: 699: lcd_disp_unit_mpa(1);
 18211  006916  0E01               	movlw	1
 18212  006918  EC9A  F046         	call	_lcd_disp_unit_mpa
 18213  00691C                     l16450:
 18214                           
 18215                           ;ui.c: 700: }
 18216                           ;ui.c: 701: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 18217  00691C  0E8C               	movlw	low ui_disp_menu_warn_v_adj@buf
 18218  00691E  0100               	movlb	0	; () banked
 18219  006920  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 18220  006922  0E00               	movlw	high ui_disp_menu_warn_v_adj@buf
 18221  006924  0100               	movlb	0	; () banked
 18222  006926  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 18223  006928  0E35               	movlw	low _m_floatAdj
 18224  00692A  0100               	movlb	0	; () banked
 18225  00692C  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 18226  00692E  0E00               	movlw	high _m_floatAdj
 18227  006930  0100               	movlb	0	; () banked
 18228  006932  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 18229  006934  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 18230  006938  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 18231  00693C  0012               	return		;funcret
 18232  00693E                     __end_of_ui_disp_menu_warn_v_adj:
 18233                           	opt stack 0
 18234                           tosu	equ	0xFFF
 18235                           tosh	equ	0xFFE
 18236                           tosl	equ	0xFFD
 18237                           pclath	equ	0xFFA
 18238                           tblptru	equ	0xFF8
 18239                           tblptrh	equ	0xFF7
 18240                           tblptrl	equ	0xFF6
 18241                           tablat	equ	0xFF5
 18242                           prodh	equ	0xFF4
 18243                           prodl	equ	0xFF3
 18244                           intcon	equ	0xFF2
 18245                           postinc0	equ	0xFEE
 18246                           wreg	equ	0xFE8
 18247                           indf1	equ	0xFE7
 18248                           postinc1	equ	0xFE6
 18249                           postdec1	equ	0xFE5
 18250                           plusw1	equ	0xFE3
 18251                           fsr1h	equ	0xFE2
 18252                           fsr1l	equ	0xFE1
 18253                           indf2	equ	0xFDF
 18254                           postinc2	equ	0xFDE
 18255                           postdec2	equ	0xFDD
 18256                           plusw2	equ	0xFDB
 18257                           fsr2h	equ	0xFDA
 18258                           fsr2l	equ	0xFD9
 18259                           status	equ	0xFD8
 18260                           
 18261 ;; *************** function _ui_disp_menu_warn_t_adj *****************
 18262 ;; Defined at:
 18263 ;;		line 632 in file "src/api/ui.c"
 18264 ;; Parameters:    Size  Location     Type
 18265 ;;		None
 18266 ;; Auto vars:     Size  Location     Type
 18267 ;;  buf             6   23[BANK0 ] unsigned char [6]
 18268 ;;  p               2   30[BANK0 ] PTR unsigned char 
 18269 ;;		 -> adjValue(4), 
 18270 ;;  t8              1   29[BANK0 ] unsigned char 
 18271 ;; Return value:  Size  Location     Type
 18272 ;;                  1    wreg      void 
 18273 ;; Registers used:
 18274 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18275 ;; Tracked objects:
 18276 ;;		On entry : 0/0
 18277 ;;		On exit  : 0/0
 18278 ;;		Unchanged: 0/0
 18279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18281 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18283 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18284 ;;Total ram usage:       10 bytes
 18285 ;; Hardware stack levels used:    1
 18286 ;; Hardware stack levels required when called:    9
 18287 ;; This function calls:
 18288 ;;		_lcd_disp_all
 18289 ;;		_lcd_disp_logo
 18290 ;;		_lcd_disp_refresh
 18291 ;;		_lcd_show_string_l0
 18292 ;;		_lcd_show_string_l1
 18293 ;;		_m_mem_cpy
 18294 ;; This function is called by:
 18295 ;;		_ui_disp_menu
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text97
 18300  0055B0                     __ptext97:
 18301                           	opt stack 0
 18302  0055B0                     _ui_disp_menu_warn_t_adj:
 18303                           	opt stack 19
 18304                           
 18305                           ;ui.c: 634: uint8_t buf[6];
 18306                           ;ui.c: 635: uint8_t t8;
 18307                           ;ui.c: 636: lcd_disp_all(0x00);;
 18308                           
 18309                           ;incstack = 0
 18310  0055B0  0E00               	movlw	0
 18311  0055B2  EC28  F04F         	call	_lcd_disp_all
 18312                           
 18313                           ;ui.c: 637: lcd_disp_logo(1);
 18314  0055B6  0E01               	movlw	1
 18315  0055B8  EC10  F04F         	call	_lcd_disp_logo
 18316                           
 18317                           ;ui.c: 638: t8=subMenu;
 18318  0055BC  C032  F07D         	movff	_subMenu,ui_disp_menu_warn_t_adj@t8	;volatile
 18319                           
 18320                           ;ui.c: 639: if(t8>3)return;
 18321  0055C0  0E03               	movlw	3
 18322  0055C2  0100               	movlb	0	; () banked
 18323  0055C4  657D               	cpfsgt	ui_disp_menu_warn_t_adj@t8& (0+255),b
 18324  0055C6  D001               	goto	l16396
 18325  0055C8  0012               	return	
 18326  0055CA                     l16396:
 18327                           
 18328                           ; BSR set to: 0
 18329                           ;ui.c: 641: m_mem_cpy(buf,(uint8_t*)" al0");
 18330  0055CA  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18331  0055CC  0100               	movlb	0	; () banked
 18332  0055CE  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18333  0055D0  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18334  0055D2  0100               	movlb	0	; () banked
 18335  0055D4  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18336  0055D6  0E9B               	movlw	low STR_16
 18337  0055D8  0100               	movlb	0	; () banked
 18338  0055DA  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18339  0055DC  0EF3               	movlw	high STR_16
 18340  0055DE  0100               	movlb	0	; () banked
 18341  0055E0  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18342  0055E2  EC94  F045         	call	_m_mem_cpy	;wreg free
 18343                           
 18344                           ;ui.c: 642: buf[3]='1'+t8;
 18345  0055E6  0100               	movlb	0	; () banked
 18346  0055E8  517D               	movf	ui_disp_menu_warn_t_adj@t8& (0+255),w,b
 18347  0055EA  0F31               	addlw	49
 18348  0055EC  0100               	movlb	0	; () banked
 18349  0055EE  6F7A               	movwf	(ui_disp_menu_warn_t_adj@buf+3)& (0+255),b
 18350                           
 18351                           ; BSR set to: 0
 18352                           ;ui.c: 644: lcd_show_string_l0(buf);
 18353  0055F0  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18354  0055F2  0100               	movlb	0	; () banked
 18355  0055F4  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 18356  0055F6  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18357  0055F8  0100               	movlb	0	; () banked
 18358  0055FA  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 18359  0055FC  ECF0  F044         	call	_lcd_show_string_l0	;wreg free
 18360                           
 18361                           ;ui.c: 645: uint8_t* p=(uint8_t*)(&adjValue);
 18362  005600  0E39               	movlw	low _adjValue
 18363  005602  0100               	movlb	0	; () banked
 18364  005604  6F7E               	movwf	ui_disp_menu_warn_t_adj@p& (0+255),b
 18365  005606  0E00               	movlw	high _adjValue
 18366  005608  0100               	movlb	0	; () banked
 18367  00560A  6F7F               	movwf	(ui_disp_menu_warn_t_adj@p+1)& (0+255),b
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;ui.c: 646: m_mem_cpy(buf,(uint8_t*)"    ");
 18371  00560C  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18372  00560E  0100               	movlb	0	; () banked
 18373  005610  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18374  005612  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18375  005614  0100               	movlb	0	; () banked
 18376  005616  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18377  005618  0E7A               	movlw	low (STR_2+4)
 18378  00561A  0100               	movlb	0	; () banked
 18379  00561C  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18380  00561E  0EF3               	movlw	high (STR_2+4)
 18381  005620  0100               	movlb	0	; () banked
 18382  005622  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18383  005624  EC94  F045         	call	_m_mem_cpy	;wreg free
 18384                           
 18385                           ;ui.c: 647: if(*p==HIGHT_HI){
 18386  005628  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 18387  00562C  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 18388  005630  50DF               	movf	indf2,w,c
 18389  005632  A4D8               	btfss	status,2,c
 18390  005634  D00F               	goto	l16410
 18391                           
 18392                           ;ui.c: 648: m_mem_cpy(buf,(uint8_t*)" h-u");
 18393  005636  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18394  005638  0100               	movlb	0	; () banked
 18395  00563A  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18396  00563C  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18397  00563E  0100               	movlb	0	; () banked
 18398  005640  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18399  005642  0EF5               	movlw	low STR_18
 18400  005644  0100               	movlb	0	; () banked
 18401  005646  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18402  005648  0EF3               	movlw	high STR_18
 18403  00564A  0100               	movlb	0	; () banked
 18404  00564C  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18405  00564E  EC94  F045         	call	_m_mem_cpy	;wreg free
 18406                           
 18407                           ;ui.c: 649: }else if(*p==HIGHT_LO){
 18408  005652  D03B               	goto	l16420
 18409  005654                     l16410:
 18410  005654  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 18411  005658  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 18412  00565C  04DE               	decf	postinc2,w,c
 18413  00565E  A4D8               	btfss	status,2,c
 18414  005660  D00F               	goto	l16414
 18415                           
 18416                           ;ui.c: 650: m_mem_cpy(buf,(uint8_t*)" h-d");
 18417  005662  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18418  005664  0100               	movlb	0	; () banked
 18419  005666  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18420  005668  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18421  00566A  0100               	movlb	0	; () banked
 18422  00566C  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18423  00566E  0EC3               	movlw	low STR_19
 18424  005670  0100               	movlb	0	; () banked
 18425  005672  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18426  005674  0EF3               	movlw	high STR_19
 18427  005676  0100               	movlb	0	; () banked
 18428  005678  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18429  00567A  EC94  F045         	call	_m_mem_cpy	;wreg free
 18430                           
 18431                           ;ui.c: 651: }else if(*p==PRESSURE_HI){
 18432  00567E  D025               	goto	l16420
 18433  005680                     l16414:
 18434  005680  C07E  FFD9         	movff	ui_disp_menu_warn_t_adj@p,fsr2l
 18435  005684  C07F  FFDA         	movff	ui_disp_menu_warn_t_adj@p+1,fsr2h
 18436  005688  0E02               	movlw	2
 18437  00568A  18DE               	xorwf	postinc2,w,c
 18438  00568C  A4D8               	btfss	status,2,c
 18439  00568E  D00F               	goto	l16418
 18440                           
 18441                           ;ui.c: 652: m_mem_cpy(buf,(uint8_t*)" p-u");
 18442  005690  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18443  005692  0100               	movlb	0	; () banked
 18444  005694  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18445  005696  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18446  005698  0100               	movlb	0	; () banked
 18447  00569A  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18448  00569C  0EFA               	movlw	low STR_20
 18449  00569E  0100               	movlb	0	; () banked
 18450  0056A0  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18451  0056A2  0EF3               	movlw	high STR_20
 18452  0056A4  0100               	movlb	0	; () banked
 18453  0056A6  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18454  0056A8  EC94  F045         	call	_m_mem_cpy	;wreg free
 18455                           
 18456                           ;ui.c: 653: }else{
 18457  0056AC  D00E               	goto	l16420
 18458  0056AE                     l16418:
 18459                           
 18460                           ;ui.c: 654: m_mem_cpy(buf,(uint8_t*)" p-d");
 18461  0056AE  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18462  0056B0  0100               	movlb	0	; () banked
 18463  0056B2  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18464  0056B4  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18465  0056B6  0100               	movlb	0	; () banked
 18466  0056B8  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18467  0056BA  0EC8               	movlw	low STR_21
 18468  0056BC  0100               	movlb	0	; () banked
 18469  0056BE  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18470  0056C0  0EF3               	movlw	high STR_21
 18471  0056C2  0100               	movlb	0	; () banked
 18472  0056C4  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18473  0056C6  EC94  F045         	call	_m_mem_cpy	;wreg free
 18474  0056CA                     l16420:
 18475                           
 18476                           ;ui.c: 655: }
 18477                           ;ui.c: 656: lcd_show_string_l1(buf);
 18478  0056CA  0E77               	movlw	low ui_disp_menu_warn_t_adj@buf
 18479  0056CC  0100               	movlb	0	; () banked
 18480  0056CE  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 18481  0056D0  0E00               	movlw	high ui_disp_menu_warn_t_adj@buf
 18482  0056D2  0100               	movlb	0	; () banked
 18483  0056D4  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 18484  0056D6  EC28  F04C         	call	_lcd_show_string_l1	;wreg free
 18485                           
 18486                           ;ui.c: 657: lcd_disp_refresh();
 18487  0056DA  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 18488  0056DE  0012               	return		;funcret
 18489  0056E0                     __end_of_ui_disp_menu_warn_t_adj:
 18490                           	opt stack 0
 18491                           tosu	equ	0xFFF
 18492                           tosh	equ	0xFFE
 18493                           tosl	equ	0xFFD
 18494                           pclath	equ	0xFFA
 18495                           tblptru	equ	0xFF8
 18496                           tblptrh	equ	0xFF7
 18497                           tblptrl	equ	0xFF6
 18498                           tablat	equ	0xFF5
 18499                           prodh	equ	0xFF4
 18500                           prodl	equ	0xFF3
 18501                           intcon	equ	0xFF2
 18502                           postinc0	equ	0xFEE
 18503                           wreg	equ	0xFE8
 18504                           indf1	equ	0xFE7
 18505                           postinc1	equ	0xFE6
 18506                           postdec1	equ	0xFE5
 18507                           plusw1	equ	0xFE3
 18508                           fsr1h	equ	0xFE2
 18509                           fsr1l	equ	0xFE1
 18510                           indf2	equ	0xFDF
 18511                           postinc2	equ	0xFDE
 18512                           postdec2	equ	0xFDD
 18513                           plusw2	equ	0xFDB
 18514                           fsr2h	equ	0xFDA
 18515                           fsr2l	equ	0xFD9
 18516                           status	equ	0xFD8
 18517                           
 18518 ;; *************** function _ui_disp_menu_psw_adj *****************
 18519 ;; Defined at:
 18520 ;;		line 353 in file "src/api/ui.c"
 18521 ;; Parameters:    Size  Location     Type
 18522 ;;		None
 18523 ;; Auto vars:     Size  Location     Type
 18524 ;;		None
 18525 ;; Return value:  Size  Location     Type
 18526 ;;                  1    wreg      void 
 18527 ;; Registers used:
 18528 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18529 ;; Tracked objects:
 18530 ;;		On entry : 0/0
 18531 ;;		On exit  : 0/0
 18532 ;;		Unchanged: 0/0
 18533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18538 ;;Total ram usage:        0 bytes
 18539 ;; Hardware stack levels used:    1
 18540 ;; Hardware stack levels required when called:   11
 18541 ;; This function calls:
 18542 ;;		_lcd_disp_all
 18543 ;;		_lcd_disp_logo
 18544 ;;		_ui_disp_adj_xfixed_pt
 18545 ;; This function is called by:
 18546 ;;		_ui_disp_menu
 18547 ;; This function uses a non-reentrant model
 18548 ;;
 18549                           
 18550                           	psect	text98
 18551  009F5E                     __ptext98:
 18552                           	opt stack 0
 18553  009F5E                     _ui_disp_menu_psw_adj:
 18554                           	opt stack 17
 18555                           
 18556                           ;ui.c: 355: lcd_disp_all(0x00);;
 18557                           
 18558                           ;incstack = 0
 18559  009F5E  0E00               	movlw	0
 18560  009F60  EC28  F04F         	call	_lcd_disp_all
 18561                           
 18562                           ;ui.c: 356: lcd_disp_logo(1);
 18563  009F64  0E01               	movlw	1
 18564  009F66  EC10  F04F         	call	_lcd_disp_logo
 18565                           
 18566                           ;ui.c: 357: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
 18567  009F6A  0ECD               	movlw	low STR_5
 18568  009F6C  0100               	movlb	0	; () banked
 18569  009F6E  6F76               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
 18570  009F70  0EF3               	movlw	high STR_5
 18571  009F72  0100               	movlb	0	; () banked
 18572  009F74  6F77               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
 18573  009F76  C03D  F078         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
 18574  009F7A  C03E  F079         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
 18575  009F7E  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
 18576  009F82  ECA2  F036         	call	_ui_disp_adj_xfixed_pt	;wreg free
 18577  009F86  0012               	return		;funcret
 18578  009F88                     __end_of_ui_disp_menu_psw_adj:
 18579                           	opt stack 0
 18580                           tosu	equ	0xFFF
 18581                           tosh	equ	0xFFE
 18582                           tosl	equ	0xFFD
 18583                           pclath	equ	0xFFA
 18584                           tblptru	equ	0xFF8
 18585                           tblptrh	equ	0xFF7
 18586                           tblptrl	equ	0xFF6
 18587                           tablat	equ	0xFF5
 18588                           prodh	equ	0xFF4
 18589                           prodl	equ	0xFF3
 18590                           intcon	equ	0xFF2
 18591                           postinc0	equ	0xFEE
 18592                           wreg	equ	0xFE8
 18593                           indf1	equ	0xFE7
 18594                           postinc1	equ	0xFE6
 18595                           postdec1	equ	0xFE5
 18596                           plusw1	equ	0xFE3
 18597                           fsr1h	equ	0xFE2
 18598                           fsr1l	equ	0xFE1
 18599                           indf2	equ	0xFDF
 18600                           postinc2	equ	0xFDE
 18601                           postdec2	equ	0xFDD
 18602                           plusw2	equ	0xFDB
 18603                           fsr2h	equ	0xFDA
 18604                           fsr2l	equ	0xFD9
 18605                           status	equ	0xFD8
 18606                           
 18607 ;; *************** function _ui_disp_adj_xfixed_pt *****************
 18608 ;; Defined at:
 18609 ;;		line 291 in file "src/api/ui.c"
 18610 ;; Parameters:    Size  Location     Type
 18611 ;;  str             2   22[BANK0 ] PTR unsigned char 
 18612 ;;		 -> STR_5(5), 
 18613 ;;  x               2   24[BANK0 ] unsigned int 
 18614 ;;  loc             1   26[BANK0 ] unsigned char 
 18615 ;; Auto vars:     Size  Location     Type
 18616 ;;  buf            10   29[BANK0 ] unsigned char [10]
 18617 ;; Return value:  Size  Location     Type
 18618 ;;                  1    wreg      void 
 18619 ;; Registers used:
 18620 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18621 ;; Tracked objects:
 18622 ;;		On entry : 0/0
 18623 ;;		On exit  : 0/0
 18624 ;;		Unchanged: 0/0
 18625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18626 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18627 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18629 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18630 ;;Total ram usage:       17 bytes
 18631 ;; Hardware stack levels used:    1
 18632 ;; Hardware stack levels required when called:   10
 18633 ;; This function calls:
 18634 ;;		___x_arrange_str
 18635 ;;		_lcd_disp_refresh
 18636 ;;		_lcd_show_string
 18637 ;;		_m_int16_2_str_4
 18638 ;;		_m_mem_cpy
 18639 ;;		_ui_disp_clear_num_dp
 18640 ;; This function is called by:
 18641 ;;		_ui_disp_menu_psw_adj
 18642 ;; This function uses a non-reentrant model
 18643 ;;
 18644                           
 18645                           	psect	text99
 18646  006D44                     __ptext99:
 18647                           	opt stack 0
 18648  006D44                     _ui_disp_adj_xfixed_pt:
 18649                           	opt stack 17
 18650                           
 18651                           ;ui.c: 293: uint8_t buf[10];
 18652                           ;ui.c: 294: ui_disp_clear_num_dp();
 18653                           
 18654                           ;incstack = 0
 18655  006D44  EC74  F049         	call	_ui_disp_clear_num_dp	;wreg free
 18656                           
 18657                           ;ui.c: 295: if(x>9999)x=9999;
 18658  006D48  0E10               	movlw	16
 18659  006D4A  0100               	movlb	0	; () banked
 18660  006D4C  5D78               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
 18661  006D4E  0E27               	movlw	39
 18662  006D50  0100               	movlb	0	; () banked
 18663  006D52  5979               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
 18664  006D54  A0D8               	btfss	status,0,c
 18665  006D56  D005               	goto	l15362
 18666                           
 18667                           ; BSR set to: 0
 18668  006D58  0E27               	movlw	39
 18669  006D5A  0100               	movlb	0	; () banked
 18670  006D5C  6F79               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
 18671  006D5E  0E0F               	movlw	15
 18672  006D60  6F78               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
 18673  006D62                     l15362:
 18674                           
 18675                           ; BSR set to: 0
 18676                           ;ui.c: 296: m_mem_cpy(buf,str);
 18677  006D62  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18678  006D64  0100               	movlb	0	; () banked
 18679  006D66  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18680  006D68  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18681  006D6A  0100               	movlb	0	; () banked
 18682  006D6C  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18683  006D6E  C076  F062         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
 18684  006D72  C077  F063         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
 18685  006D76  EC94  F045         	call	_m_mem_cpy	;wreg free
 18686                           
 18687                           ;ui.c: 297: m_int16_2_str_4(buf+4,x);
 18688  006D7A  0E81               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
 18689  006D7C  0100               	movlb	0	; () banked
 18690  006D7E  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 18691  006D80  0E00               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
 18692  006D82  0100               	movlb	0	; () banked
 18693  006D84  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 18694  006D86  C078  F06A         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
 18695  006D8A  C079  F06B         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
 18696  006D8E  ECAD  F027         	call	_m_int16_2_str_4	;wreg free
 18697                           
 18698                           ;ui.c: 298: __x_arrange_str(buf,8);
 18699  006D92  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18700  006D94  0100               	movlb	0	; () banked
 18701  006D96  6F60               	movwf	___x_arrange_str@str& (0+255),b
 18702  006D98  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18703  006D9A  0100               	movlb	0	; () banked
 18704  006D9C  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 18705  006D9E  0E08               	movlw	8
 18706  006DA0  0100               	movlb	0	; () banked
 18707  006DA2  6F62               	movwf	___x_arrange_str@len& (0+255),b
 18708  006DA4  ECBC  F048         	call	___x_arrange_str	;wreg free
 18709                           
 18710                           ;ui.c: 299: if(loc>3)loc=3;
 18711  006DA8  0E03               	movlw	3
 18712  006DAA  0100               	movlb	0	; () banked
 18713  006DAC  657A               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
 18714  006DAE  D003               	goto	l15372
 18715                           
 18716                           ; BSR set to: 0
 18717  006DB0  0E03               	movlw	3
 18718  006DB2  0100               	movlb	0	; () banked
 18719  006DB4  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
 18720  006DB6                     l15372:
 18721                           
 18722                           ; BSR set to: 0
 18723                           ;ui.c: 300: loc=3-loc;
 18724  006DB6  0100               	movlb	0	; () banked
 18725  006DB8  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
 18726  006DBA  0800               	sublw	0
 18727  006DBC  0F03               	addlw	3
 18728  006DBE  0100               	movlb	0	; () banked
 18729  006DC0  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
 18730                           
 18731                           ; BSR set to: 0
 18732                           ;ui.c: 301: if(!(lcdTwinkle>0)){
 18733  006DC2  5034               	movf	_lcdTwinkle,w,c
 18734  006DC4  A4D8               	btfss	status,2,c
 18735  006DC6  D017               	goto	l15380
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;ui.c: 302: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
 18739  006DC8  010F               	movlb	15	; () banked
 18740  006DCA  B75F               	btfsc	95,3,b	;volatile
 18741  006DCC  D014               	goto	l15380
 18742                           
 18743                           ; BSR set to: 15
 18744  006DCE  0100               	movlb	0	; () banked
 18745  006DD0  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
 18746  006DD2  0100               	movlb	0	; () banked
 18747  006DD4  6F7B               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
 18748  006DD6  6B7C               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
 18749  006DD8  0E04               	movlw	4
 18750  006DDA  0100               	movlb	0	; () banked
 18751  006DDC  277B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
 18752  006DDE  0E00               	movlw	0
 18753  006DE0  237C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
 18754  006DE2  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18755  006DE4  0100               	movlb	0	; () banked
 18756  006DE6  257B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
 18757  006DE8  6ED9               	movwf	fsr2l,c
 18758  006DEA  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18759  006DEC  0100               	movlb	0	; () banked
 18760  006DEE  217C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
 18761  006DF0  6EDA               	movwf	fsr2h,c
 18762  006DF2  0E20               	movlw	32
 18763  006DF4  6EDF               	movwf	indf2,c
 18764  006DF6                     l15380:
 18765                           
 18766                           ;ui.c: 303: }
 18767                           ;ui.c: 304: lcd_show_string(buf);
 18768  006DF6  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
 18769  006DF8  0100               	movlb	0	; () banked
 18770  006DFA  6F73               	movwf	lcd_show_string@str& (0+255),b
 18771  006DFC  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
 18772  006DFE  0100               	movlb	0	; () banked
 18773  006E00  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 18774  006E02  EC27  F045         	call	_lcd_show_string	;wreg free
 18775                           
 18776                           ;ui.c: 305: lcd_disp_refresh();
 18777  006E06  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 18778  006E0A  0012               	return		;funcret
 18779  006E0C                     __end_of_ui_disp_adj_xfixed_pt:
 18780                           	opt stack 0
 18781                           tosu	equ	0xFFF
 18782                           tosh	equ	0xFFE
 18783                           tosl	equ	0xFFD
 18784                           pclath	equ	0xFFA
 18785                           tblptru	equ	0xFF8
 18786                           tblptrh	equ	0xFF7
 18787                           tblptrl	equ	0xFF6
 18788                           tablat	equ	0xFF5
 18789                           prodh	equ	0xFF4
 18790                           prodl	equ	0xFF3
 18791                           intcon	equ	0xFF2
 18792                           postinc0	equ	0xFEE
 18793                           wreg	equ	0xFE8
 18794                           indf1	equ	0xFE7
 18795                           postinc1	equ	0xFE6
 18796                           postdec1	equ	0xFE5
 18797                           plusw1	equ	0xFE3
 18798                           fsr1h	equ	0xFE2
 18799                           fsr1l	equ	0xFE1
 18800                           indf2	equ	0xFDF
 18801                           postinc2	equ	0xFDE
 18802                           postdec2	equ	0xFDD
 18803                           plusw2	equ	0xFDB
 18804                           fsr2h	equ	0xFDA
 18805                           fsr2l	equ	0xFD9
 18806                           status	equ	0xFD8
 18807                           
 18808 ;; *************** function _ui_disp_menu_pose_size *****************
 18809 ;; Defined at:
 18810 ;;		line 543 in file "src/api/ui.c"
 18811 ;; Parameters:    Size  Location     Type
 18812 ;;		None
 18813 ;; Auto vars:     Size  Location     Type
 18814 ;;		None
 18815 ;; Return value:  Size  Location     Type
 18816 ;;                  1    wreg      void 
 18817 ;; Registers used:
 18818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18819 ;; Tracked objects:
 18820 ;;		On entry : 0/0
 18821 ;;		On exit  : 0/0
 18822 ;;		Unchanged: 0/0
 18823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18828 ;;Total ram usage:        0 bytes
 18829 ;; Hardware stack levels used:    1
 18830 ;; Hardware stack levels required when called:   11
 18831 ;; This function calls:
 18832 ;;		_ui_disp_menu_d_adj
 18833 ;;		_ui_disp_menu_h_adj
 18834 ;;		_ui_disp_menu_pos_adj
 18835 ;; This function is called by:
 18836 ;;		_ui_disp_menu
 18837 ;; This function uses a non-reentrant model
 18838 ;;
 18839                           
 18840                           	psect	text100
 18841  009F88                     __ptext100:
 18842                           	opt stack 0
 18843  009F88                     _ui_disp_menu_pose_size:
 18844                           	opt stack 17
 18845                           
 18846                           ;ui.c: 545: switch(subMenu){
 18847                           
 18848                           ;incstack = 0
 18849  009F88  D009               	goto	l16294
 18850  009F8A                     l16286:
 18851  009F8A  ECDA  F040         	call	_ui_disp_menu_pos_adj	;wreg free
 18852  009F8E  0012               	return	
 18853  009F90                     l16288:
 18854  009F90  ECB8  F044         	call	_ui_disp_menu_h_adj	;wreg free
 18855  009F94  0012               	return	
 18856  009F96                     l16290:
 18857  009F96  EC40  F04F         	call	_ui_disp_menu_d_adj	;wreg free
 18858                           
 18859                           ;ui.c: 550: }
 18860                           
 18861                           ;ui.c: 549: default:break;
 18862  009F9A  0012               	return	
 18863  009F9C                     l16294:
 18864  009F9C  5032               	movf	_subMenu,w,c	;volatile
 18865                           
 18866                           ; Switch size 1, requested type "space"
 18867                           ; Number of cases is 3, Range of values is 0 to 2
 18868                           ; switch strategies available:
 18869                           ; Name         Instructions Cycles
 18870                           ; simple_byte           10     6 (average)
 18871                           ;	Chosen strategy is simple_byte
 18872  009F9E  0A00               	xorlw	0	; case 0
 18873  009FA0  B4D8               	btfsc	status,2,c
 18874  009FA2  D7F3               	goto	l16286
 18875  009FA4  0A01               	xorlw	1	; case 1
 18876  009FA6  B4D8               	btfsc	status,2,c
 18877  009FA8  D7F3               	goto	l16288
 18878  009FAA  0A03               	xorlw	3	; case 2
 18879  009FAC  A4D8               	btfss	status,2,c
 18880  009FAE  0012               	return	
 18881  009FB0  D7F2               	goto	l16290
 18882  009FB2                     __end_of_ui_disp_menu_pose_size:
 18883                           	opt stack 0
 18884                           tosu	equ	0xFFF
 18885                           tosh	equ	0xFFE
 18886                           tosl	equ	0xFFD
 18887                           pclath	equ	0xFFA
 18888                           tblptru	equ	0xFF8
 18889                           tblptrh	equ	0xFF7
 18890                           tblptrl	equ	0xFF6
 18891                           tablat	equ	0xFF5
 18892                           prodh	equ	0xFF4
 18893                           prodl	equ	0xFF3
 18894                           intcon	equ	0xFF2
 18895                           postinc0	equ	0xFEE
 18896                           wreg	equ	0xFE8
 18897                           indf1	equ	0xFE7
 18898                           postinc1	equ	0xFE6
 18899                           postdec1	equ	0xFE5
 18900                           plusw1	equ	0xFE3
 18901                           fsr1h	equ	0xFE2
 18902                           fsr1l	equ	0xFE1
 18903                           indf2	equ	0xFDF
 18904                           postinc2	equ	0xFDE
 18905                           postdec2	equ	0xFDD
 18906                           plusw2	equ	0xFDB
 18907                           fsr2h	equ	0xFDA
 18908                           fsr2l	equ	0xFD9
 18909                           status	equ	0xFD8
 18910                           
 18911 ;; *************** function _ui_disp_menu_pos_adj *****************
 18912 ;; Defined at:
 18913 ;;		line 506 in file "src/api/ui.c"
 18914 ;; Parameters:    Size  Location     Type
 18915 ;;		None
 18916 ;; Auto vars:     Size  Location     Type
 18917 ;;  buf             6   24[BANK0 ] unsigned char [6]
 18918 ;;  p               2   22[BANK0 ] PTR unsigned char 
 18919 ;;		 -> adjValue(4), 
 18920 ;; Return value:  Size  Location     Type
 18921 ;;                  1    wreg      void 
 18922 ;; Registers used:
 18923 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18924 ;; Tracked objects:
 18925 ;;		On entry : 0/0
 18926 ;;		On exit  : 0/0
 18927 ;;		Unchanged: 0/0
 18928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18930 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18932 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18933 ;;Total ram usage:        8 bytes
 18934 ;; Hardware stack levels used:    1
 18935 ;; Hardware stack levels required when called:    9
 18936 ;; This function calls:
 18937 ;;		_lcd_disp_all
 18938 ;;		_lcd_disp_logo
 18939 ;;		_lcd_disp_refresh
 18940 ;;		_lcd_show_string_l0
 18941 ;;		_lcd_show_string_l1
 18942 ;;		_m_mem_cpy
 18943 ;; This function is called by:
 18944 ;;		_ui_disp_menu_pose_size
 18945 ;; This function uses a non-reentrant model
 18946 ;;
 18947                           
 18948                           	psect	text101
 18949  0081B4                     __ptext101:
 18950                           	opt stack 0
 18951  0081B4                     _ui_disp_menu_pos_adj:
 18952                           	opt stack 18
 18953                           
 18954                           ;ui.c: 508: uint8_t buf[6];
 18955                           ;ui.c: 509: lcd_disp_all(0x00);;
 18956                           
 18957                           ;incstack = 0
 18958  0081B4  0E00               	movlw	0
 18959  0081B6  EC28  F04F         	call	_lcd_disp_all
 18960                           
 18961                           ;ui.c: 510: lcd_disp_logo(1);
 18962  0081BA  0E01               	movlw	1
 18963  0081BC  EC10  F04F         	call	_lcd_disp_logo
 18964                           
 18965                           ;ui.c: 511: m_mem_cpy(buf,(uint8_t*)"  fs");
 18966  0081C0  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 18967  0081C2  0100               	movlb	0	; () banked
 18968  0081C4  6F60               	movwf	m_mem_cpy@d& (0+255),b
 18969  0081C6  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 18970  0081C8  0100               	movlb	0	; () banked
 18971  0081CA  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 18972  0081CC  0EF0               	movlw	low STR_7
 18973  0081CE  0100               	movlb	0	; () banked
 18974  0081D0  6F62               	movwf	m_mem_cpy@s& (0+255),b
 18975  0081D2  0EF3               	movlw	high STR_7
 18976  0081D4  0100               	movlb	0	; () banked
 18977  0081D6  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 18978  0081D8  EC94  F045         	call	_m_mem_cpy	;wreg free
 18979                           
 18980                           ;ui.c: 512: lcd_show_string_l0(buf);
 18981  0081DC  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 18982  0081DE  0100               	movlb	0	; () banked
 18983  0081E0  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 18984  0081E2  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 18985  0081E4  0100               	movlb	0	; () banked
 18986  0081E6  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 18987  0081E8  ECF0  F044         	call	_lcd_show_string_l0	;wreg free
 18988                           
 18989                           ;ui.c: 513: uint8_t* p=(uint8_t*)(&adjValue);
 18990  0081EC  0E39               	movlw	low _adjValue
 18991  0081EE  0100               	movlb	0	; () banked
 18992  0081F0  6F76               	movwf	ui_disp_menu_pos_adj@p& (0+255),b
 18993  0081F2  0E00               	movlw	high _adjValue
 18994  0081F4  0100               	movlb	0	; () banked
 18995  0081F6  6F77               	movwf	(ui_disp_menu_pos_adj@p+1)& (0+255),b
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;ui.c: 514: m_mem_cpy(buf,(uint8_t*)"    ");
 18999  0081F8  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 19000  0081FA  0100               	movlb	0	; () banked
 19001  0081FC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19002  0081FE  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 19003  008200  0100               	movlb	0	; () banked
 19004  008202  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19005  008204  0E7A               	movlw	low (STR_2+4)
 19006  008206  0100               	movlb	0	; () banked
 19007  008208  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19008  00820A  0EF3               	movlw	high (STR_2+4)
 19009  00820C  0100               	movlb	0	; () banked
 19010  00820E  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19011  008210  EC94  F045         	call	_m_mem_cpy	;wreg free
 19012                           
 19013                           ;ui.c: 515: if(*p==HOTIZONTAL){
 19014  008214  C076  FFD9         	movff	ui_disp_menu_pos_adj@p,fsr2l
 19015  008218  C077  FFDA         	movff	ui_disp_menu_pos_adj@p+1,fsr2h
 19016  00821C  50DF               	movf	indf2,w,c
 19017  00821E  A4D8               	btfss	status,2,c
 19018  008220  D002               	goto	l15522
 19019                           
 19020                           ;ui.c: 516: buf[3]='l';
 19021  008222  0E6C               	movlw	108
 19022  008224  D001               	goto	L20
 19023  008226                     l15522:
 19024                           
 19025                           ;ui.c: 518: buf[3]='h';
 19026  008226  0E68               	movlw	104
 19027  008228                     L20:
 19028  008228  0100               	movlb	0	; () banked
 19029  00822A  6F7B               	movwf	(ui_disp_menu_pos_adj@buf+3)& (0+255),b
 19030                           
 19031                           ; BSR set to: 0
 19032                           ;ui.c: 519: }
 19033                           ;ui.c: 520: lcd_show_string_l1(buf);
 19034                           
 19035                           ; BSR set to: 0
 19036  00822C  0E78               	movlw	low ui_disp_menu_pos_adj@buf
 19037  00822E  0100               	movlb	0	; () banked
 19038  008230  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 19039  008232  0E00               	movlw	high ui_disp_menu_pos_adj@buf
 19040  008234  0100               	movlb	0	; () banked
 19041  008236  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 19042  008238  EC28  F04C         	call	_lcd_show_string_l1	;wreg free
 19043                           
 19044                           ;ui.c: 521: lcd_disp_refresh();
 19045  00823C  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 19046  008240  0012               	return		;funcret
 19047  008242                     __end_of_ui_disp_menu_pos_adj:
 19048                           	opt stack 0
 19049                           tosu	equ	0xFFF
 19050                           tosh	equ	0xFFE
 19051                           tosl	equ	0xFFD
 19052                           pclath	equ	0xFFA
 19053                           tblptru	equ	0xFF8
 19054                           tblptrh	equ	0xFF7
 19055                           tblptrl	equ	0xFF6
 19056                           tablat	equ	0xFF5
 19057                           prodh	equ	0xFF4
 19058                           prodl	equ	0xFF3
 19059                           intcon	equ	0xFF2
 19060                           postinc0	equ	0xFEE
 19061                           wreg	equ	0xFE8
 19062                           indf1	equ	0xFE7
 19063                           postinc1	equ	0xFE6
 19064                           postdec1	equ	0xFE5
 19065                           plusw1	equ	0xFE3
 19066                           fsr1h	equ	0xFE2
 19067                           fsr1l	equ	0xFE1
 19068                           indf2	equ	0xFDF
 19069                           postinc2	equ	0xFDE
 19070                           postdec2	equ	0xFDD
 19071                           plusw2	equ	0xFDB
 19072                           fsr2h	equ	0xFDA
 19073                           fsr2l	equ	0xFD9
 19074                           status	equ	0xFD8
 19075                           
 19076 ;; *************** function _ui_disp_menu_h_adj *****************
 19077 ;; Defined at:
 19078 ;;		line 524 in file "src/api/ui.c"
 19079 ;; Parameters:    Size  Location     Type
 19080 ;;		None
 19081 ;; Auto vars:     Size  Location     Type
 19082 ;;  fps             2   42[BANK0 ] PTR struct .
 19083 ;;		 -> stSysData(240), 
 19084 ;; Return value:  Size  Location     Type
 19085 ;;                  1    wreg      void 
 19086 ;; Registers used:
 19087 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19088 ;; Tracked objects:
 19089 ;;		On entry : 0/0
 19090 ;;		On exit  : 0/0
 19091 ;;		Unchanged: 0/0
 19092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19094 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19097 ;;Total ram usage:        2 bytes
 19098 ;; Hardware stack levels used:    1
 19099 ;; Hardware stack levels required when called:   10
 19100 ;; This function calls:
 19101 ;;		_lcd_disp_all
 19102 ;;		_lcd_disp_logo
 19103 ;;		_ui_disp_adj_xfloat_pt
 19104 ;; This function is called by:
 19105 ;;		_ui_disp_menu_pose_size
 19106 ;; This function uses a non-reentrant model
 19107 ;;
 19108                           
 19109                           	psect	text102
 19110  008970                     __ptext102:
 19111                           	opt stack 0
 19112  008970                     _ui_disp_menu_h_adj:
 19113                           	opt stack 17
 19114                           
 19115                           ;ui.c: 526: lcd_disp_all(0x00);;
 19116                           
 19117                           ;incstack = 0
 19118  008970  0E00               	movlw	0
 19119  008972  EC28  F04F         	call	_lcd_disp_all
 19120                           
 19121                           ;ui.c: 527: lcd_disp_logo(1);
 19122  008976  0E01               	movlw	1
 19123  008978  EC10  F04F         	call	_lcd_disp_logo
 19124                           
 19125                           ;ui.c: 529: st_sysDataDef* fps= &stSysData;
 19126  00897C  0E00               	movlw	low _stSysData
 19127  00897E  0100               	movlb	0	; () banked
 19128  008980  6F8A               	movwf	ui_disp_menu_h_adj@fps& (0+255),b
 19129  008982  0E02               	movlw	high _stSysData
 19130  008984  0100               	movlb	0	; () banked
 19131  008986  6F8B               	movwf	(ui_disp_menu_h_adj@fps+1)& (0+255),b
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;ui.c: 530: if(fps->pos==HOTIZONTAL){
 19135  008988  0100               	movlb	0	; () banked
 19136  00898A  EE20 F004          	lfsr	2,4
 19137  00898E  518A               	movf	ui_disp_menu_h_adj@fps& (0+255),w,b
 19138  008990  26D9               	addwf	fsr2l,f,c
 19139  008992  518B               	movf	(ui_disp_menu_h_adj@fps+1)& (0+255),w,b
 19140  008994  22DA               	addwfc	fsr2h,f,c
 19141  008996  50DF               	movf	indf2,w,c
 19142  008998  A4D8               	btfss	status,2,c
 19143  00899A  D011               	goto	l15536
 19144                           
 19145                           ; BSR set to: 0
 19146                           ;ui.c: 531: ui_disp_adj_xfloat_pt((uint8_t*)"   l",&m_floatAdj,adjLocation);
 19147  00899C  0ED7               	movlw	low STR_9
 19148  00899E  0100               	movlb	0	; () banked
 19149  0089A0  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 19150  0089A2  0EF3               	movlw	high STR_9
 19151  0089A4  0100               	movlb	0	; () banked
 19152  0089A6  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 19153  0089A8  0E35               	movlw	low _m_floatAdj
 19154  0089AA  0100               	movlb	0	; () banked
 19155  0089AC  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 19156  0089AE  0E00               	movlw	high _m_floatAdj
 19157  0089B0  0100               	movlb	0	; () banked
 19158  0089B2  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 19159  0089B4  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 19160  0089B8  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 19161                           
 19162                           ;ui.c: 532: }else{
 19163  0089BC  0012               	return	
 19164  0089BE                     l15536:
 19165                           
 19166                           ;ui.c: 533: ui_disp_adj_xfloat_pt((uint8_t*)"   h",&m_floatAdj,adjLocation);
 19167  0089BE  0ED2               	movlw	low STR_10
 19168  0089C0  0100               	movlb	0	; () banked
 19169  0089C2  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 19170  0089C4  0EF3               	movlw	high STR_10
 19171  0089C6  0100               	movlb	0	; () banked
 19172  0089C8  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 19173  0089CA  0E35               	movlw	low _m_floatAdj
 19174  0089CC  0100               	movlb	0	; () banked
 19175  0089CE  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 19176  0089D0  0E00               	movlw	high _m_floatAdj
 19177  0089D2  0100               	movlb	0	; () banked
 19178  0089D4  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 19179  0089D6  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 19180  0089DA  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 19181  0089DE  0012               	return	
 19182  0089E0                     __end_of_ui_disp_menu_h_adj:
 19183                           	opt stack 0
 19184                           tosu	equ	0xFFF
 19185                           tosh	equ	0xFFE
 19186                           tosl	equ	0xFFD
 19187                           pclath	equ	0xFFA
 19188                           tblptru	equ	0xFF8
 19189                           tblptrh	equ	0xFF7
 19190                           tblptrl	equ	0xFF6
 19191                           tablat	equ	0xFF5
 19192                           prodh	equ	0xFF4
 19193                           prodl	equ	0xFF3
 19194                           intcon	equ	0xFF2
 19195                           postinc0	equ	0xFEE
 19196                           wreg	equ	0xFE8
 19197                           indf1	equ	0xFE7
 19198                           postinc1	equ	0xFE6
 19199                           postdec1	equ	0xFE5
 19200                           plusw1	equ	0xFE3
 19201                           fsr1h	equ	0xFE2
 19202                           fsr1l	equ	0xFE1
 19203                           indf2	equ	0xFDF
 19204                           postinc2	equ	0xFDE
 19205                           postdec2	equ	0xFDD
 19206                           plusw2	equ	0xFDB
 19207                           fsr2h	equ	0xFDA
 19208                           fsr2l	equ	0xFD9
 19209                           status	equ	0xFD8
 19210                           
 19211 ;; *************** function _ui_disp_menu_d_adj *****************
 19212 ;; Defined at:
 19213 ;;		line 537 in file "src/api/ui.c"
 19214 ;; Parameters:    Size  Location     Type
 19215 ;;		None
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;		None
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  1    wreg      void 
 19220 ;; Registers used:
 19221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19231 ;;Total ram usage:        0 bytes
 19232 ;; Hardware stack levels used:    1
 19233 ;; Hardware stack levels required when called:   10
 19234 ;; This function calls:
 19235 ;;		_lcd_disp_all
 19236 ;;		_lcd_disp_logo
 19237 ;;		_ui_disp_adj_xfloat_pt
 19238 ;; This function is called by:
 19239 ;;		_ui_disp_menu_pose_size
 19240 ;; This function uses a non-reentrant model
 19241 ;;
 19242                           
 19243                           	psect	text103
 19244  009E80                     __ptext103:
 19245                           	opt stack 0
 19246  009E80                     _ui_disp_menu_d_adj:
 19247                           	opt stack 17
 19248                           
 19249                           ;ui.c: 539: lcd_disp_all(0x00);;
 19250                           
 19251                           ;incstack = 0
 19252  009E80  0E00               	movlw	0
 19253  009E82  EC28  F04F         	call	_lcd_disp_all
 19254                           
 19255                           ;ui.c: 540: lcd_disp_logo(1);
 19256  009E86  0E01               	movlw	1
 19257  009E88  EC10  F04F         	call	_lcd_disp_logo
 19258                           
 19259                           ;ui.c: 541: ui_disp_adj_xfloat_pt((uint8_t*)"   d",&m_floatAdj,adjLocation);
 19260  009E8C  0EBE               	movlw	low STR_11
 19261  009E8E  0100               	movlb	0	; () banked
 19262  009E90  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 19263  009E92  0EF3               	movlw	high STR_11
 19264  009E94  0100               	movlb	0	; () banked
 19265  009E96  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 19266  009E98  0E35               	movlw	low _m_floatAdj
 19267  009E9A  0100               	movlb	0	; () banked
 19268  009E9C  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 19269  009E9E  0E00               	movlw	high _m_floatAdj
 19270  009EA0  0100               	movlb	0	; () banked
 19271  009EA2  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 19272  009EA4  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 19273  009EA8  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 19274  009EAC  0012               	return		;funcret
 19275  009EAE                     __end_of_ui_disp_menu_d_adj:
 19276                           	opt stack 0
 19277                           tosu	equ	0xFFF
 19278                           tosh	equ	0xFFE
 19279                           tosl	equ	0xFFD
 19280                           pclath	equ	0xFFA
 19281                           tblptru	equ	0xFF8
 19282                           tblptrh	equ	0xFF7
 19283                           tblptrl	equ	0xFF6
 19284                           tablat	equ	0xFF5
 19285                           prodh	equ	0xFF4
 19286                           prodl	equ	0xFF3
 19287                           intcon	equ	0xFF2
 19288                           postinc0	equ	0xFEE
 19289                           wreg	equ	0xFE8
 19290                           indf1	equ	0xFE7
 19291                           postinc1	equ	0xFE6
 19292                           postdec1	equ	0xFE5
 19293                           plusw1	equ	0xFE3
 19294                           fsr1h	equ	0xFE2
 19295                           fsr1l	equ	0xFE1
 19296                           indf2	equ	0xFDF
 19297                           postinc2	equ	0xFDE
 19298                           postdec2	equ	0xFDD
 19299                           plusw2	equ	0xFDB
 19300                           fsr2h	equ	0xFDA
 19301                           fsr2l	equ	0xFD9
 19302                           status	equ	0xFD8
 19303                           
 19304 ;; *************** function _ui_disp_menu_poly_c_adj *****************
 19305 ;; Defined at:
 19306 ;;		line 616 in file "src/api/ui.c"
 19307 ;; Parameters:    Size  Location     Type
 19308 ;;		None
 19309 ;; Auto vars:     Size  Location     Type
 19310 ;;  buf             6   40[BANK0 ] unsigned char [6]
 19311 ;;  t8              1   46[BANK0 ] unsigned char 
 19312 ;; Return value:  Size  Location     Type
 19313 ;;                  1    wreg      void 
 19314 ;; Registers used:
 19315 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19316 ;; Tracked objects:
 19317 ;;		On entry : 0/0
 19318 ;;		On exit  : 0/0
 19319 ;;		Unchanged: 0/0
 19320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19322 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19324 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19325 ;;Total ram usage:        7 bytes
 19326 ;; Hardware stack levels used:    1
 19327 ;; Hardware stack levels required when called:   11
 19328 ;; This function calls:
 19329 ;;		_lcd_disp_all
 19330 ;;		_lcd_disp_logo
 19331 ;;		_m_mem_cpy
 19332 ;;		_ui_disp_adj_xfixed_pt_dp
 19333 ;; This function is called by:
 19334 ;;		_ui_disp_menu
 19335 ;; This function uses a non-reentrant model
 19336 ;;
 19337                           
 19338                           	psect	text104
 19339  008E66                     __ptext104:
 19340                           	opt stack 0
 19341  008E66                     _ui_disp_menu_poly_c_adj:
 19342                           	opt stack 17
 19343                           
 19344                           ;ui.c: 618: uint8_t buf[6];
 19345                           ;ui.c: 619: uint8_t t8;
 19346                           ;ui.c: 621: lcd_disp_all(0x00);;
 19347                           
 19348                           ;incstack = 0
 19349  008E66  0E00               	movlw	0
 19350  008E68  EC28  F04F         	call	_lcd_disp_all
 19351                           
 19352                           ;ui.c: 622: lcd_disp_logo(1);
 19353  008E6C  0E01               	movlw	1
 19354  008E6E  EC10  F04F         	call	_lcd_disp_logo
 19355                           
 19356                           ;ui.c: 624: t8=subMenu;
 19357  008E72  C032  F08E         	movff	_subMenu,ui_disp_menu_poly_c_adj@t8	;volatile
 19358                           
 19359                           ;ui.c: 625: if(t8>3)return;
 19360  008E76  0E03               	movlw	3
 19361  008E78  0100               	movlb	0	; () banked
 19362  008E7A  658E               	cpfsgt	ui_disp_menu_poly_c_adj@t8& (0+255),b
 19363  008E7C  D001               	goto	l16382
 19364  008E7E  0012               	return	
 19365  008E80                     l16382:
 19366                           
 19367                           ; BSR set to: 0
 19368                           ;ui.c: 626: m_mem_cpy(buf,(uint8_t*)"    ");
 19369  008E80  0E88               	movlw	low ui_disp_menu_poly_c_adj@buf
 19370  008E82  0100               	movlb	0	; () banked
 19371  008E84  6F60               	movwf	m_mem_cpy@d& (0+255),b
 19372  008E86  0E00               	movlw	high ui_disp_menu_poly_c_adj@buf
 19373  008E88  0100               	movlb	0	; () banked
 19374  008E8A  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 19375  008E8C  0E7A               	movlw	low (STR_2+4)
 19376  008E8E  0100               	movlb	0	; () banked
 19377  008E90  6F62               	movwf	m_mem_cpy@s& (0+255),b
 19378  008E92  0EF3               	movlw	high (STR_2+4)
 19379  008E94  0100               	movlb	0	; () banked
 19380  008E96  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 19381  008E98  EC94  F045         	call	_m_mem_cpy	;wreg free
 19382                           
 19383                           ;ui.c: 628: buf[3]='a'+t8;
 19384  008E9C  0100               	movlb	0	; () banked
 19385  008E9E  518E               	movf	ui_disp_menu_poly_c_adj@t8& (0+255),w,b
 19386  008EA0  0F61               	addlw	97
 19387  008EA2  0100               	movlb	0	; () banked
 19388  008EA4  6F8B               	movwf	(ui_disp_menu_poly_c_adj@buf+3)& (0+255),b
 19389                           
 19390                           ; BSR set to: 0
 19391                           ;ui.c: 629: ui_disp_adj_xfixed_pt_dp(buf,adjValue,adjLocation,0);
 19392  008EA6  0E88               	movlw	low ui_disp_menu_poly_c_adj@buf
 19393  008EA8  0100               	movlb	0	; () banked
 19394  008EAA  6F76               	movwf	ui_disp_adj_xfixed_pt_dp@str& (0+255),b
 19395  008EAC  0E00               	movlw	high ui_disp_menu_poly_c_adj@buf
 19396  008EAE  0100               	movlb	0	; () banked
 19397  008EB0  6F77               	movwf	(ui_disp_adj_xfixed_pt_dp@str+1)& (0+255),b
 19398  008EB2  C039  F078         	movff	_adjValue,ui_disp_adj_xfixed_pt_dp@x	;volatile
 19399  008EB6  C03A  F079         	movff	_adjValue+1,ui_disp_adj_xfixed_pt_dp@x+1	;volatile
 19400  008EBA  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt_dp@loc	;volatile
 19401  008EBE  0E00               	movlw	0
 19402  008EC0  0100               	movlb	0	; () banked
 19403  008EC2  6F7B               	movwf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),b
 19404  008EC4  EC9F  F034         	call	_ui_disp_adj_xfixed_pt_dp	;wreg free
 19405  008EC8  0012               	return		;funcret
 19406  008ECA                     __end_of_ui_disp_menu_poly_c_adj:
 19407                           	opt stack 0
 19408                           tosu	equ	0xFFF
 19409                           tosh	equ	0xFFE
 19410                           tosl	equ	0xFFD
 19411                           pclath	equ	0xFFA
 19412                           tblptru	equ	0xFF8
 19413                           tblptrh	equ	0xFF7
 19414                           tblptrl	equ	0xFF6
 19415                           tablat	equ	0xFF5
 19416                           prodh	equ	0xFF4
 19417                           prodl	equ	0xFF3
 19418                           intcon	equ	0xFF2
 19419                           postinc0	equ	0xFEE
 19420                           wreg	equ	0xFE8
 19421                           indf1	equ	0xFE7
 19422                           postinc1	equ	0xFE6
 19423                           postdec1	equ	0xFE5
 19424                           plusw1	equ	0xFE3
 19425                           fsr1h	equ	0xFE2
 19426                           fsr1l	equ	0xFE1
 19427                           indf2	equ	0xFDF
 19428                           postinc2	equ	0xFDE
 19429                           postdec2	equ	0xFDD
 19430                           plusw2	equ	0xFDB
 19431                           fsr2h	equ	0xFDA
 19432                           fsr2l	equ	0xFD9
 19433                           status	equ	0xFD8
 19434                           
 19435 ;; *************** function _ui_disp_menu_home *****************
 19436 ;; Defined at:
 19437 ;;		line 446 in file "src/api/ui.c"
 19438 ;; Parameters:    Size  Location     Type
 19439 ;;		None
 19440 ;; Auto vars:     Size  Location     Type
 19441 ;;  mf              4   39[BANK0 ] struct .
 19442 ;;  t8              1   43[BANK0 ] unsigned char 
 19443 ;; Return value:  Size  Location     Type
 19444 ;;                  1    wreg      void 
 19445 ;; Registers used:
 19446 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19447 ;; Tracked objects:
 19448 ;;		On entry : 0/0
 19449 ;;		On exit  : 0/0
 19450 ;;		Unchanged: 0/0
 19451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19453 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19455 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19456 ;;Total ram usage:        5 bytes
 19457 ;; Hardware stack levels used:    1
 19458 ;; Hardware stack levels required when called:   10
 19459 ;; This function calls:
 19460 ;;		___int32_2_mflot32
 19461 ;;		_lcd_disp_all
 19462 ;;		_lcd_disp_level
 19463 ;;		_lcd_disp_logo
 19464 ;;		_lcd_disp_refresh
 19465 ;;		_lcd_disp_unit_1st_m
 19466 ;;		_lcd_disp_unit_1st_m3
 19467 ;;		_lcd_disp_unit_2nd_m
 19468 ;;		_lcd_disp_unit_2nd_m3
 19469 ;;		_lcd_disp_unit_mpa
 19470 ;;		_lcd_disp_unit_t
 19471 ;;		_lcd_disp_unit_temperature
 19472 ;;		_ui_disp_xfloat_pt
 19473 ;; This function is called by:
 19474 ;;		_ui_disp_menu
 19475 ;; This function uses a non-reentrant model
 19476 ;;
 19477                           
 19478                           	psect	text105
 19479  003C0C                     __ptext105:
 19480                           	opt stack 0
 19481  003C0C                     _ui_disp_menu_home:
 19482                           	opt stack 18
 19483                           
 19484                           ;ui.c: 448: uint8_t t8;
 19485                           ;ui.c: 449: st_float32 mf;
 19486                           ;ui.c: 450: lcd_disp_all(0x00);;
 19487                           
 19488                           ;incstack = 0
 19489  003C0C  0E00               	movlw	0
 19490  003C0E  EC28  F04F         	call	_lcd_disp_all
 19491                           
 19492                           ;ui.c: 451: lcd_disp_logo(1);
 19493  003C12  0E01               	movlw	1
 19494  003C14  EC10  F04F         	call	_lcd_disp_logo
 19495                           
 19496                           ;ui.c: 452: t8=subMenu & 0xf0;
 19497  003C18  5032               	movf	_subMenu,w,c	;volatile
 19498  003C1A  0BF0               	andlw	240
 19499  003C1C  0100               	movlb	0	; () banked
 19500  003C1E  6F8B               	movwf	ui_disp_menu_home@t8& (0+255),b
 19501                           
 19502                           ; BSR set to: 0
 19503                           ;ui.c: 453: t8>>=4;
 19504  003C20  0100               	movlb	0	; () banked
 19505  003C22  3B8B               	swapf	ui_disp_menu_home@t8& (0+255),f,b
 19506  003C24  0E0F               	movlw	15
 19507  003C26  178B               	andwf	ui_disp_menu_home@t8& (0+255),f,b
 19508                           
 19509                           ; BSR set to: 0
 19510                           ;ui.c: 454: if(t8==0){
 19511  003C28  0100               	movlb	0	; () banked
 19512  003C2A  518B               	movf	ui_disp_menu_home@t8& (0+255),w,b
 19513  003C2C  0100               	movlb	0	; () banked
 19514  003C2E  A4D8               	btfss	status,2,c
 19515  003C30  D016               	goto	l16232
 19516                           
 19517                           ; BSR set to: 0
 19518                           ;ui.c: 455: mf.t32=__int32_2_mflot32(rtHight);
 19519  003C32  C0E8  F06D         	movff	_rtHight,___int32_2_mflot32@x	;volatile
 19520  003C36  C0E9  F06E         	movff	_rtHight+1,___int32_2_mflot32@x+1	;volatile
 19521  003C3A  C0EA  F06F         	movff	_rtHight+2,___int32_2_mflot32@x+2	;volatile
 19522  003C3E  C0EB  F070         	movff	_rtHight+3,___int32_2_mflot32@x+3	;volatile
 19523  003C42  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 19524  003C46  C06D  F087         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19525  003C4A  C06E  F088         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19526  003C4E  C06F  F089         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19527  003C52  C070  F08A         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19528                           
 19529                           ;ui.c: 457: lcd_disp_unit_1st_m(1);
 19530  003C56  0E01               	movlw	1
 19531  003C58  ECA7  F04A         	call	_lcd_disp_unit_1st_m
 19532                           
 19533                           ;ui.c: 458: }else if(t8==1){
 19534  003C5C  D034               	goto	l16244
 19535  003C5E                     l16232:
 19536  003C5E  0100               	movlb	0	; () banked
 19537  003C60  058B               	decf	ui_disp_menu_home@t8& (0+255),w,b
 19538  003C62  A4D8               	btfss	status,2,c
 19539  003C64  D016               	goto	l16238
 19540                           
 19541                           ; BSR set to: 0
 19542                           ;ui.c: 459: mf.t32=__int32_2_mflot32(rtVolume);
 19543  003C66  C152  F06D         	movff	_rtVolume,___int32_2_mflot32@x	;volatile
 19544  003C6A  C153  F06E         	movff	_rtVolume+1,___int32_2_mflot32@x+1	;volatile
 19545  003C6E  C154  F06F         	movff	_rtVolume+2,___int32_2_mflot32@x+2	;volatile
 19546  003C72  C155  F070         	movff	_rtVolume+3,___int32_2_mflot32@x+3	;volatile
 19547  003C76  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 19548  003C7A  C06D  F087         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19549  003C7E  C06E  F088         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19550  003C82  C06F  F089         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19551  003C86  C070  F08A         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19552                           
 19553                           ;ui.c: 461: lcd_disp_unit_1st_m3(1);
 19554  003C8A  0E01               	movlw	1
 19555  003C8C  EC00  F047         	call	_lcd_disp_unit_1st_m3
 19556                           
 19557                           ;ui.c: 462: }else if(t8==2){
 19558  003C90  D01A               	goto	l16244
 19559  003C92                     l16238:
 19560  003C92  0E02               	movlw	2
 19561  003C94  0100               	movlb	0	; () banked
 19562  003C96  198B               	xorwf	ui_disp_menu_home@t8& (0+255),w,b
 19563  003C98  A4D8               	btfss	status,2,c
 19564  003C9A  D015               	goto	l16244
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;ui.c: 463: mf.t32=__int32_2_mflot32(rtWeight);
 19568  003C9C  C156  F06D         	movff	_rtWeight,___int32_2_mflot32@x	;volatile
 19569  003CA0  C157  F06E         	movff	_rtWeight+1,___int32_2_mflot32@x+1	;volatile
 19570  003CA4  C158  F06F         	movff	_rtWeight+2,___int32_2_mflot32@x+2	;volatile
 19571  003CA8  C159  F070         	movff	_rtWeight+3,___int32_2_mflot32@x+3	;volatile
 19572  003CAC  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 19573  003CB0  C06D  F087         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19574  003CB4  C06E  F088         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19575  003CB8  C06F  F089         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19576  003CBC  C070  F08A         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19577                           
 19578                           ;ui.c: 465: lcd_disp_unit_t(1);
 19579  003CC0  0E01               	movlw	1
 19580  003CC2  EC7D  F04A         	call	_lcd_disp_unit_t
 19581  003CC6                     l16244:
 19582                           
 19583                           ;ui.c: 466: }
 19584                           ;ui.c: 467: ui_disp_xfloat_pt(&mf,0);
 19585  003CC6  0E87               	movlw	low ui_disp_menu_home@mf
 19586  003CC8  0100               	movlb	0	; () banked
 19587  003CCA  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19588  003CCC  0E00               	movlw	high ui_disp_menu_home@mf
 19589  003CCE  0100               	movlb	0	; () banked
 19590  003CD0  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19591  003CD2  0E00               	movlw	0
 19592  003CD4  0100               	movlb	0	; () banked
 19593  003CD6  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19594  003CD8  EC0A  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19595                           
 19596                           ;ui.c: 469: t8=subMenu & 0x0f;
 19597  003CDC  5032               	movf	_subMenu,w,c	;volatile
 19598  003CDE  0B0F               	andlw	15
 19599  003CE0  0100               	movlb	0	; () banked
 19600  003CE2  6F8B               	movwf	ui_disp_menu_home@t8& (0+255),b
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;ui.c: 470: if(t8==0){
 19604  003CE4  0100               	movlb	0	; () banked
 19605  003CE6  518B               	movf	ui_disp_menu_home@t8& (0+255),w,b
 19606  003CE8  0100               	movlb	0	; () banked
 19607  003CEA  A4D8               	btfss	status,2,c
 19608  003CEC  D016               	goto	l16254
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;ui.c: 471: mf.t32=__int32_2_mflot32(rtPressure);
 19612  003CEE  C14A  F06D         	movff	_rtPressure,___int32_2_mflot32@x	;volatile
 19613  003CF2  C14B  F06E         	movff	_rtPressure+1,___int32_2_mflot32@x+1	;volatile
 19614  003CF6  C14C  F06F         	movff	_rtPressure+2,___int32_2_mflot32@x+2	;volatile
 19615  003CFA  C14D  F070         	movff	_rtPressure+3,___int32_2_mflot32@x+3	;volatile
 19616  003CFE  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 19617  003D02  C06D  F087         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19618  003D06  C06E  F088         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19619  003D0A  C06F  F089         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19620  003D0E  C070  F08A         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19621                           
 19622                           ;ui.c: 473: lcd_disp_unit_mpa(1);
 19623  003D12  0E01               	movlw	1
 19624  003D14  EC9A  F046         	call	_lcd_disp_unit_mpa
 19625                           
 19626                           ;ui.c: 474: }else if(t8==1){
 19627  003D18  D04F               	goto	l16272
 19628  003D1A                     l16254:
 19629  003D1A  0100               	movlb	0	; () banked
 19630  003D1C  058B               	decf	ui_disp_menu_home@t8& (0+255),w,b
 19631  003D1E  A4D8               	btfss	status,2,c
 19632  003D20  D016               	goto	l16260
 19633                           
 19634                           ; BSR set to: 0
 19635                           ;ui.c: 475: mf.t32=__int32_2_mflot32(rtTemperatureEx);
 19636  003D22  C146  F06D         	movff	_rtTemperatureEx,___int32_2_mflot32@x	;volatile
 19637  003D26  C147  F06E         	movff	_rtTemperatureEx+1,___int32_2_mflot32@x+1	;volatile
 19638  003D2A  C148  F06F         	movff	_rtTemperatureEx+2,___int32_2_mflot32@x+2	;volatile
 19639  003D2E  C149  F070         	movff	_rtTemperatureEx+3,___int32_2_mflot32@x+3	;volatile
 19640  003D32  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 19641  003D36  C06D  F087         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19642  003D3A  C06E  F088         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19643  003D3E  C06F  F089         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19644  003D42  C070  F08A         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19645                           
 19646                           ;ui.c: 477: lcd_disp_unit_temperature(1);
 19647  003D46  0E01               	movlw	1
 19648  003D48  EC67  F046         	call	_lcd_disp_unit_temperature
 19649                           
 19650                           ;ui.c: 478: }else if(t8==2){
 19651  003D4C  D035               	goto	l16272
 19652  003D4E                     l16260:
 19653  003D4E  0E02               	movlw	2
 19654  003D50  0100               	movlb	0	; () banked
 19655  003D52  198B               	xorwf	ui_disp_menu_home@t8& (0+255),w,b
 19656  003D54  A4D8               	btfss	status,2,c
 19657  003D56  D016               	goto	l16266
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;ui.c: 479: mf.t32=__int32_2_mflot32(rtHight);
 19661  003D58  C0E8  F06D         	movff	_rtHight,___int32_2_mflot32@x	;volatile
 19662  003D5C  C0E9  F06E         	movff	_rtHight+1,___int32_2_mflot32@x+1	;volatile
 19663  003D60  C0EA  F06F         	movff	_rtHight+2,___int32_2_mflot32@x+2	;volatile
 19664  003D64  C0EB  F070         	movff	_rtHight+3,___int32_2_mflot32@x+3	;volatile
 19665  003D68  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 19666  003D6C  C06D  F087         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19667  003D70  C06E  F088         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19668  003D74  C06F  F089         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19669  003D78  C070  F08A         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19670                           
 19671                           ;ui.c: 481: lcd_disp_unit_2nd_m(1);
 19672  003D7C  0E01               	movlw	1
 19673  003D7E  ECCD  F046         	call	_lcd_disp_unit_2nd_m
 19674                           
 19675                           ;ui.c: 482: }else if(t8==3){
 19676  003D82  D01A               	goto	l16272
 19677  003D84                     l16266:
 19678  003D84  0E03               	movlw	3
 19679  003D86  0100               	movlb	0	; () banked
 19680  003D88  198B               	xorwf	ui_disp_menu_home@t8& (0+255),w,b
 19681  003D8A  A4D8               	btfss	status,2,c
 19682  003D8C  D015               	goto	l16272
 19683                           
 19684                           ; BSR set to: 0
 19685                           ;ui.c: 483: mf.t32=__int32_2_mflot32(rtVolume);
 19686  003D8E  C152  F06D         	movff	_rtVolume,___int32_2_mflot32@x	;volatile
 19687  003D92  C153  F06E         	movff	_rtVolume+1,___int32_2_mflot32@x+1	;volatile
 19688  003D96  C154  F06F         	movff	_rtVolume+2,___int32_2_mflot32@x+2	;volatile
 19689  003D9A  C155  F070         	movff	_rtVolume+3,___int32_2_mflot32@x+3	;volatile
 19690  003D9E  ECD1  F02F         	call	___int32_2_mflot32	;wreg free
 19691  003DA2  C06D  F087         	movff	?___int32_2_mflot32,ui_disp_menu_home@mf
 19692  003DA6  C06E  F088         	movff	?___int32_2_mflot32+1,ui_disp_menu_home@mf+1
 19693  003DAA  C06F  F089         	movff	?___int32_2_mflot32+2,ui_disp_menu_home@mf+2
 19694  003DAE  C070  F08A         	movff	?___int32_2_mflot32+3,ui_disp_menu_home@mf+3
 19695                           
 19696                           ;ui.c: 485: lcd_disp_unit_2nd_m3(1);
 19697  003DB2  0E01               	movlw	1
 19698  003DB4  EC67  F041         	call	_lcd_disp_unit_2nd_m3
 19699  003DB8                     l16272:
 19700                           
 19701                           ;ui.c: 486: }
 19702                           ;ui.c: 487: ui_disp_xfloat_pt(&mf,1);
 19703  003DB8  0E87               	movlw	low ui_disp_menu_home@mf
 19704  003DBA  0100               	movlb	0	; () banked
 19705  003DBC  6F76               	movwf	ui_disp_xfloat_pt@xpf& (0+255),b
 19706  003DBE  0E00               	movlw	high ui_disp_menu_home@mf
 19707  003DC0  0100               	movlb	0	; () banked
 19708  003DC2  6F77               	movwf	(ui_disp_xfloat_pt@xpf+1)& (0+255),b
 19709  003DC4  0E01               	movlw	1
 19710  003DC6  0100               	movlb	0	; () banked
 19711  003DC8  6F78               	movwf	ui_disp_xfloat_pt@line& (0+255),b
 19712  003DCA  EC0A  F029         	call	_ui_disp_xfloat_pt	;wreg free
 19713                           
 19714                           ;ui.c: 489: t8=60;
 19715  003DCE  0E3C               	movlw	60
 19716  003DD0  0100               	movlb	0	; () banked
 19717  003DD2  6F8B               	movwf	ui_disp_menu_home@t8& (0+255),b
 19718                           
 19719                           ; BSR set to: 0
 19720                           ;ui.c: 490: lcd_disp_level(t8);
 19721  003DD4  0100               	movlb	0	; () banked
 19722  003DD6  518B               	movf	ui_disp_menu_home@t8& (0+255),w,b
 19723  003DD8  ECFA  F049         	call	_lcd_disp_level
 19724                           
 19725                           ;ui.c: 491: lcd_disp_refresh();
 19726  003DDC  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 19727  003DE0  0012               	return		;funcret
 19728  003DE2                     __end_of_ui_disp_menu_home:
 19729                           	opt stack 0
 19730                           tosu	equ	0xFFF
 19731                           tosh	equ	0xFFE
 19732                           tosl	equ	0xFFD
 19733                           pclath	equ	0xFFA
 19734                           tblptru	equ	0xFF8
 19735                           tblptrh	equ	0xFF7
 19736                           tblptrl	equ	0xFF6
 19737                           tablat	equ	0xFF5
 19738                           prodh	equ	0xFF4
 19739                           prodl	equ	0xFF3
 19740                           intcon	equ	0xFF2
 19741                           postinc0	equ	0xFEE
 19742                           wreg	equ	0xFE8
 19743                           indf1	equ	0xFE7
 19744                           postinc1	equ	0xFE6
 19745                           postdec1	equ	0xFE5
 19746                           plusw1	equ	0xFE3
 19747                           fsr1h	equ	0xFE2
 19748                           fsr1l	equ	0xFE1
 19749                           indf2	equ	0xFDF
 19750                           postinc2	equ	0xFDE
 19751                           postdec2	equ	0xFDD
 19752                           plusw2	equ	0xFDB
 19753                           fsr2h	equ	0xFDA
 19754                           fsr2l	equ	0xFD9
 19755                           status	equ	0xFD8
 19756                           
 19757 ;; *************** function _ui_disp_xfloat_pt *****************
 19758 ;; Defined at:
 19759 ;;		line 326 in file "src/api/ui.c"
 19760 ;; Parameters:    Size  Location     Type
 19761 ;;  xpf             2   22[BANK0 ] PTR struct .
 19762 ;;		 -> ui_disp_menu_home@mf(4), 
 19763 ;;  line            1   24[BANK0 ] unsigned char 
 19764 ;; Auto vars:     Size  Location     Type
 19765 ;;  buf            10   26[BANK0 ] unsigned char [10]
 19766 ;;  x               2   37[BANK0 ] unsigned int 
 19767 ;;  t8              1   36[BANK0 ] unsigned char 
 19768 ;; Return value:  Size  Location     Type
 19769 ;;                  1    wreg      void 
 19770 ;; Registers used:
 19771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19772 ;; Tracked objects:
 19773 ;;		On entry : 0/0
 19774 ;;		On exit  : 0/0
 19775 ;;		Unchanged: 0/0
 19776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19777 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19778 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19779 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19780 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19781 ;;Total ram usage:       17 bytes
 19782 ;; Hardware stack levels used:    1
 19783 ;; Hardware stack levels required when called:    9
 19784 ;; This function calls:
 19785 ;;		___lwdiv
 19786 ;;		_lcd_show_dp
 19787 ;;		_lcd_show_string_l0
 19788 ;;		_lcd_show_string_l1
 19789 ;;		_m_int16_2_str_4
 19790 ;; This function is called by:
 19791 ;;		_ui_disp_menu_home
 19792 ;; This function uses a non-reentrant model
 19793 ;;
 19794                           
 19795                           	psect	text106
 19796  005214                     __ptext106:
 19797                           	opt stack 0
 19798  005214                     _ui_disp_xfloat_pt:
 19799                           	opt stack 18
 19800                           
 19801                           ;ui.c: 328: uint8_t buf[10];
 19802                           ;ui.c: 329: uint8_t t8;
 19803                           ;ui.c: 330: uint16_t x;
 19804                           ;ui.c: 331: if(line>1)return;
 19805                           
 19806                           ;incstack = 0
 19807  005214  0E01               	movlw	1
 19808  005216  0100               	movlb	0	; () banked
 19809  005218  6578               	cpfsgt	ui_disp_xfloat_pt@line& (0+255),b
 19810  00521A  D001               	goto	l15418
 19811  00521C  0012               	return	
 19812  00521E                     l15418:
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;ui.c: 332: x=xpf->stru.significand;
 19816  00521E  C076  FFD9         	movff	ui_disp_xfloat_pt@xpf,fsr2l
 19817  005222  C077  FFDA         	movff	ui_disp_xfloat_pt@xpf+1,fsr2h
 19818  005226  CFDE F085          	movff	postinc2,ui_disp_xfloat_pt@x
 19819  00522A  CFDD F086          	movff	postdec2,ui_disp_xfloat_pt@x+1
 19820                           
 19821                           ; BSR set to: 0
 19822                           ;ui.c: 333: if(xpf->stru.sign){
 19823  00522E  0100               	movlb	0	; () banked
 19824  005230  EE20 F003          	lfsr	2,3
 19825  005234  5176               	movf	ui_disp_xfloat_pt@xpf& (0+255),w,b
 19826  005236  26D9               	addwf	fsr2l,f,c
 19827  005238  5177               	movf	(ui_disp_xfloat_pt@xpf+1)& (0+255),w,b
 19828  00523A  22DA               	addwfc	fsr2h,f,c
 19829  00523C  50DF               	movf	indf2,w,c
 19830  00523E  B4D8               	btfsc	status,2,c
 19831  005240  D02C               	goto	l15432
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;ui.c: 334: x/=10;
 19835  005242  C085  F062         	movff	ui_disp_xfloat_pt@x,___lwdiv@dividend
 19836  005246  C086  F063         	movff	ui_disp_xfloat_pt@x+1,___lwdiv@dividend+1
 19837  00524A  0E00               	movlw	0
 19838  00524C  0100               	movlb	0	; () banked
 19839  00524E  6F65               	movwf	(___lwdiv@divisor+1)& (0+255),b
 19840  005250  0E0A               	movlw	10
 19841  005252  6F64               	movwf	___lwdiv@divisor& (0+255),b
 19842  005254  EC22  F043         	call	___lwdiv	;wreg free
 19843  005258  C062  F085         	movff	?___lwdiv,ui_disp_xfloat_pt@x
 19844  00525C  C063  F086         	movff	?___lwdiv+1,ui_disp_xfloat_pt@x+1
 19845                           
 19846                           ;ui.c: 335: if(x>999)x=999;
 19847  005260  0EE8               	movlw	232
 19848  005262  0100               	movlb	0	; () banked
 19849  005264  5D85               	subwf	ui_disp_xfloat_pt@x& (0+255),w,b
 19850  005266  0E03               	movlw	3
 19851  005268  0100               	movlb	0	; () banked
 19852  00526A  5986               	subwfb	(ui_disp_xfloat_pt@x+1)& (0+255),w,b
 19853  00526C  A0D8               	btfss	status,0,c
 19854  00526E  D005               	goto	l15428
 19855                           
 19856                           ; BSR set to: 0
 19857  005270  0E03               	movlw	3
 19858  005272  0100               	movlb	0	; () banked
 19859  005274  6F86               	movwf	(ui_disp_xfloat_pt@x+1)& (0+255),b
 19860  005276  0EE7               	movlw	231
 19861  005278  6F85               	movwf	ui_disp_xfloat_pt@x& (0+255),b
 19862  00527A                     l15428:
 19863                           
 19864                           ; BSR set to: 0
 19865                           ;ui.c: 336: m_int16_2_str_4(buf,x);
 19866  00527A  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19867  00527C  0100               	movlb	0	; () banked
 19868  00527E  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 19869  005280  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19870  005282  0100               	movlb	0	; () banked
 19871  005284  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 19872  005286  C085  F06A         	movff	ui_disp_xfloat_pt@x,m_int16_2_str_4@x
 19873  00528A  C086  F06B         	movff	ui_disp_xfloat_pt@x+1,m_int16_2_str_4@x+1
 19874  00528E  ECAD  F027         	call	_m_int16_2_str_4	;wreg free
 19875                           
 19876                           ;ui.c: 337: buf[0]='-';
 19877  005292  0E2D               	movlw	45
 19878  005294  0100               	movlb	0	; () banked
 19879  005296  6F7A               	movwf	ui_disp_xfloat_pt@buf& (0+255),b
 19880                           
 19881                           ;ui.c: 338: }else{
 19882  005298  D019               	goto	l15438
 19883  00529A                     l15432:
 19884                           
 19885                           ; BSR set to: 0
 19886                           ;ui.c: 339: if(x>9999)x=9999;
 19887  00529A  0E10               	movlw	16
 19888  00529C  0100               	movlb	0	; () banked
 19889  00529E  5D85               	subwf	ui_disp_xfloat_pt@x& (0+255),w,b
 19890  0052A0  0E27               	movlw	39
 19891  0052A2  0100               	movlb	0	; () banked
 19892  0052A4  5986               	subwfb	(ui_disp_xfloat_pt@x+1)& (0+255),w,b
 19893  0052A6  A0D8               	btfss	status,0,c
 19894  0052A8  D005               	goto	l15436
 19895                           
 19896                           ; BSR set to: 0
 19897  0052AA  0E27               	movlw	39
 19898  0052AC  0100               	movlb	0	; () banked
 19899  0052AE  6F86               	movwf	(ui_disp_xfloat_pt@x+1)& (0+255),b
 19900  0052B0  0E0F               	movlw	15
 19901  0052B2  6F85               	movwf	ui_disp_xfloat_pt@x& (0+255),b
 19902  0052B4                     l15436:
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;ui.c: 340: m_int16_2_str_4(buf,x);
 19906  0052B4  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19907  0052B6  0100               	movlb	0	; () banked
 19908  0052B8  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 19909  0052BA  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19910  0052BC  0100               	movlb	0	; () banked
 19911  0052BE  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 19912  0052C0  C085  F06A         	movff	ui_disp_xfloat_pt@x,m_int16_2_str_4@x
 19913  0052C4  C086  F06B         	movff	ui_disp_xfloat_pt@x+1,m_int16_2_str_4@x+1
 19914  0052C8  ECAD  F027         	call	_m_int16_2_str_4	;wreg free
 19915  0052CC                     l15438:
 19916                           
 19917                           ;ui.c: 341: }
 19918                           ;ui.c: 342: buf[5]='\0';
 19919  0052CC  0E00               	movlw	0
 19920  0052CE  0100               	movlb	0	; () banked
 19921  0052D0  6F7F               	movwf	(ui_disp_xfloat_pt@buf+5)& (0+255),b
 19922                           
 19923                           ; BSR set to: 0
 19924                           ;ui.c: 343: if(line==0){
 19925  0052D2  0100               	movlb	0	; () banked
 19926  0052D4  5178               	movf	ui_disp_xfloat_pt@line& (0+255),w,b
 19927  0052D6  0100               	movlb	0	; () banked
 19928  0052D8  A4D8               	btfss	status,2,c
 19929  0052DA  D009               	goto	l15444
 19930                           
 19931                           ; BSR set to: 0
 19932                           ;ui.c: 344: lcd_show_string_l0(buf);
 19933  0052DC  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19934  0052DE  0100               	movlb	0	; () banked
 19935  0052E0  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
 19936  0052E2  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19937  0052E4  0100               	movlb	0	; () banked
 19938  0052E6  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
 19939  0052E8  ECF0  F044         	call	_lcd_show_string_l0	;wreg free
 19940                           
 19941                           ;ui.c: 345: }else{
 19942  0052EC  D008               	goto	l15446
 19943  0052EE                     l15444:
 19944                           
 19945                           ;ui.c: 346: lcd_show_string_l1(buf);
 19946  0052EE  0E7A               	movlw	low ui_disp_xfloat_pt@buf
 19947  0052F0  0100               	movlb	0	; () banked
 19948  0052F2  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
 19949  0052F4  0E00               	movlw	high ui_disp_xfloat_pt@buf
 19950  0052F6  0100               	movlb	0	; () banked
 19951  0052F8  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
 19952  0052FA  EC28  F04C         	call	_lcd_show_string_l1	;wreg free
 19953  0052FE                     l15446:
 19954                           
 19955                           ;ui.c: 347: }
 19956                           ;ui.c: 348: t8=xpf->stru.exponent+xpf->stru.sign;
 19957  0052FE  0100               	movlb	0	; () banked
 19958  005300  EE20 F003          	lfsr	2,3
 19959  005304  5176               	movf	ui_disp_xfloat_pt@xpf& (0+255),w,b
 19960  005306  26D9               	addwf	fsr2l,f,c
 19961  005308  5177               	movf	(ui_disp_xfloat_pt@xpf+1)& (0+255),w,b
 19962  00530A  22DA               	addwfc	fsr2h,f,c
 19963  00530C  50DF               	movf	indf2,w,c
 19964  00530E  0100               	movlb	0	; () banked
 19965  005310  6F79               	movwf	??_ui_disp_xfloat_pt& (0+255),b
 19966  005312  0100               	movlb	0	; () banked
 19967  005314  EE20 F002          	lfsr	2,2
 19968  005318  5176               	movf	ui_disp_xfloat_pt@xpf& (0+255),w,b
 19969  00531A  26D9               	addwf	fsr2l,f,c
 19970  00531C  5177               	movf	(ui_disp_xfloat_pt@xpf+1)& (0+255),w,b
 19971  00531E  22DA               	addwfc	fsr2h,f,c
 19972  005320  50DF               	movf	indf2,w,c
 19973  005322  0100               	movlb	0	; () banked
 19974  005324  2579               	addwf	??_ui_disp_xfloat_pt& (0+255),w,b
 19975  005326  0100               	movlb	0	; () banked
 19976  005328  6F84               	movwf	ui_disp_xfloat_pt@t8& (0+255),b
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;ui.c: 349: if(t8<3)lcd_show_dp(t8+4*line,1);
 19980  00532A  0E03               	movlw	3
 19981  00532C  0100               	movlb	0	; () banked
 19982  00532E  6184               	cpfslt	ui_disp_xfloat_pt@t8& (0+255),b
 19983  005330  0012               	return	
 19984                           
 19985                           ; BSR set to: 0
 19986  005332  0E01               	movlw	1
 19987  005334  0100               	movlb	0	; () banked
 19988  005336  6F70               	movwf	lcd_show_dp@show& (0+255),b
 19989  005338  0100               	movlb	0	; () banked
 19990  00533A  5178               	movf	ui_disp_xfloat_pt@line& (0+255),w,b
 19991  00533C  0D04               	mullw	4
 19992  00533E  50F3               	movf	prodl,w,c
 19993  005340  0100               	movlb	0	; () banked
 19994  005342  2584               	addwf	ui_disp_xfloat_pt@t8& (0+255),w,b
 19995  005344  EC5E  F045         	call	_lcd_show_dp
 19996  005348  0012               	return	
 19997  00534A                     __end_of_ui_disp_xfloat_pt:
 19998                           	opt stack 0
 19999                           tosu	equ	0xFFF
 20000                           tosh	equ	0xFFE
 20001                           tosl	equ	0xFFD
 20002                           pclath	equ	0xFFA
 20003                           tblptru	equ	0xFF8
 20004                           tblptrh	equ	0xFF7
 20005                           tblptrl	equ	0xFF6
 20006                           tablat	equ	0xFF5
 20007                           prodh	equ	0xFF4
 20008                           prodl	equ	0xFF3
 20009                           intcon	equ	0xFF2
 20010                           postinc0	equ	0xFEE
 20011                           wreg	equ	0xFE8
 20012                           indf1	equ	0xFE7
 20013                           postinc1	equ	0xFE6
 20014                           postdec1	equ	0xFE5
 20015                           plusw1	equ	0xFE3
 20016                           fsr1h	equ	0xFE2
 20017                           fsr1l	equ	0xFE1
 20018                           indf2	equ	0xFDF
 20019                           postinc2	equ	0xFDE
 20020                           postdec2	equ	0xFDD
 20021                           plusw2	equ	0xFDB
 20022                           fsr2h	equ	0xFDA
 20023                           fsr2l	equ	0xFD9
 20024                           status	equ	0xFD8
 20025                           
 20026 ;; *************** function _lcd_show_string_l1 *****************
 20027 ;; Defined at:
 20028 ;;		line 552 in file "src/driver/lcd.c"
 20029 ;; Parameters:    Size  Location     Type
 20030 ;;  str             2   19[BANK0 ] PTR unsigned char 
 20031 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_pos_adj@buf(6), ui_disp_xfloat_pt@buf(10), ui_disp_start_cs600@buf(
      +6), 
 20032 ;; Auto vars:     Size  Location     Type
 20033 ;;  t8              1   21[BANK0 ] unsigned char 
 20034 ;; Return value:  Size  Location     Type
 20035 ;;                  1    wreg      void 
 20036 ;; Registers used:
 20037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20038 ;; Tracked objects:
 20039 ;;		On entry : 0/0
 20040 ;;		On exit  : 0/0
 20041 ;;		Unchanged: 0/0
 20042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20046 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20047 ;;Total ram usage:        3 bytes
 20048 ;; Hardware stack levels used:    1
 20049 ;; Hardware stack levels required when called:    8
 20050 ;; This function calls:
 20051 ;;		_lcd_show_chr
 20052 ;; This function is called by:
 20053 ;;		_ui_disp_start_cs600
 20054 ;;		_ui_disp_xfloat_pt
 20055 ;;		_ui_disp_menu_pos_adj
 20056 ;;		_ui_disp_menu_warn_t_adj
 20057 ;; This function uses a non-reentrant model
 20058 ;;
 20059                           
 20060                           	psect	text107
 20061  009850                     __ptext107:
 20062                           	opt stack 0
 20063  009850                     _lcd_show_string_l1:
 20064                           	opt stack 21
 20065                           
 20066                           ;lcd.c: 554: uint8_t t8=0;
 20067                           
 20068                           ;incstack = 0
 20069  009850  0E00               	movlw	0
 20070  009852  0100               	movlb	0	; () banked
 20071  009854  6F75               	movwf	lcd_show_string_l1@t8& (0+255),b
 20072                           
 20073                           ;lcd.c: 555: while(*str!='\0' && t8<4){
 20074  009856  D011               	goto	l14724
 20075  009858                     l14718:
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;lcd.c: 556: lcd_show_chr(t8+4,*str);
 20079  009858  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
 20080  00985C  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
 20081  009860  50DF               	movf	indf2,w,c
 20082  009862  0100               	movlb	0	; () banked
 20083  009864  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 20084  009866  0100               	movlb	0	; () banked
 20085  009868  5175               	movf	lcd_show_string_l1@t8& (0+255),w,b
 20086  00986A  0F04               	addlw	4
 20087  00986C  EC4E  F03E         	call	_lcd_show_chr
 20088                           
 20089                           ;lcd.c: 557: str++;
 20090  009870  0100               	movlb	0	; () banked
 20091  009872  4B73               	infsnz	lcd_show_string_l1@str& (0+255),f,b
 20092  009874  2B74               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
 20093                           
 20094                           ; BSR set to: 0
 20095                           ;lcd.c: 558: t8++;
 20096  009876  0100               	movlb	0	; () banked
 20097  009878  2B75               	incf	lcd_show_string_l1@t8& (0+255),f,b
 20098  00987A                     l14724:
 20099                           
 20100                           ; BSR set to: 0
 20101  00987A  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
 20102  00987E  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
 20103  009882  50DF               	movf	indf2,w,c
 20104  009884  B4D8               	btfsc	status,2,c
 20105  009886  0012               	return	
 20106                           
 20107                           ; BSR set to: 0
 20108  009888  0E03               	movlw	3
 20109  00988A  0100               	movlb	0	; () banked
 20110  00988C  6575               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
 20111  00988E  D7E4               	goto	l14718
 20112  009890  0012               	return	
 20113  009892                     __end_of_lcd_show_string_l1:
 20114                           	opt stack 0
 20115                           tosu	equ	0xFFF
 20116                           tosh	equ	0xFFE
 20117                           tosl	equ	0xFFD
 20118                           pclath	equ	0xFFA
 20119                           tblptru	equ	0xFF8
 20120                           tblptrh	equ	0xFF7
 20121                           tblptrl	equ	0xFF6
 20122                           tablat	equ	0xFF5
 20123                           prodh	equ	0xFF4
 20124                           prodl	equ	0xFF3
 20125                           intcon	equ	0xFF2
 20126                           postinc0	equ	0xFEE
 20127                           wreg	equ	0xFE8
 20128                           indf1	equ	0xFE7
 20129                           postinc1	equ	0xFE6
 20130                           postdec1	equ	0xFE5
 20131                           plusw1	equ	0xFE3
 20132                           fsr1h	equ	0xFE2
 20133                           fsr1l	equ	0xFE1
 20134                           indf2	equ	0xFDF
 20135                           postinc2	equ	0xFDE
 20136                           postdec2	equ	0xFDD
 20137                           plusw2	equ	0xFDB
 20138                           fsr2h	equ	0xFDA
 20139                           fsr2l	equ	0xFD9
 20140                           status	equ	0xFD8
 20141                           
 20142 ;; *************** function _lcd_show_string_l0 *****************
 20143 ;; Defined at:
 20144 ;;		line 542 in file "src/driver/lcd.c"
 20145 ;; Parameters:    Size  Location     Type
 20146 ;;  str             2   19[BANK0 ] PTR unsigned char 
 20147 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_pos_adj@buf(6), ui_disp_xfloat_pt@buf(10), STR_1(5), 
 20148 ;; Auto vars:     Size  Location     Type
 20149 ;;  t8              1   21[BANK0 ] unsigned char 
 20150 ;; Return value:  Size  Location     Type
 20151 ;;                  1    wreg      void 
 20152 ;; Registers used:
 20153 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20154 ;; Tracked objects:
 20155 ;;		On entry : 0/0
 20156 ;;		On exit  : 0/0
 20157 ;;		Unchanged: 0/0
 20158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20162 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20163 ;;Total ram usage:        3 bytes
 20164 ;; Hardware stack levels used:    1
 20165 ;; Hardware stack levels required when called:    8
 20166 ;; This function calls:
 20167 ;;		_lcd_show_chr
 20168 ;; This function is called by:
 20169 ;;		_ui_disp_start_cs600
 20170 ;;		_ui_disp_xfloat_pt
 20171 ;;		_ui_disp_menu_pos_adj
 20172 ;;		_ui_disp_menu_warn_t_adj
 20173 ;; This function uses a non-reentrant model
 20174 ;;
 20175                           
 20176                           	psect	text108
 20177  0089E0                     __ptext108:
 20178                           	opt stack 0
 20179  0089E0                     _lcd_show_string_l0:
 20180                           	opt stack 21
 20181                           
 20182                           ;lcd.c: 544: uint8_t t8=0;
 20183                           
 20184                           ; BSR set to: 0
 20185                           ;incstack = 0
 20186  0089E0  0E00               	movlw	0
 20187  0089E2  0100               	movlb	0	; () banked
 20188  0089E4  6F75               	movwf	lcd_show_string_l0@t8& (0+255),b
 20189                           
 20190                           ;lcd.c: 545: while(*str!='\0' && t8<4){
 20191  0089E6  D01B               	goto	l14706
 20192  0089E8                     l14700:
 20193                           
 20194                           ; BSR set to: 0
 20195                           ;lcd.c: 546: lcd_show_chr(t8,*str);
 20196  0089E8  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
 20197  0089EC  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
 20198  0089F0  6AF8               	clrf	tblptru,c
 20199  0089F2  0E0F               	movlw	(high __ramtop+-1)
 20200  0089F4  64F7               	cpfsgt	tblptrh,c
 20201  0089F6  D003               	bra	u13607
 20202  0089F8  0008               	tblrd		*
 20203  0089FA  50F5               	movf	tablat,w,c
 20204  0089FC  D005               	bra	u13600
 20205  0089FE                     u13607:
 20206  0089FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 20207  008A02  CFF7 FFEA          	movff	tblptrh,fsr0h
 20208  008A06  50EF               	movf	indf0,w,c
 20209  008A08                     u13600:
 20210  008A08  0100               	movlb	0	; () banked
 20211  008A0A  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 20212  008A0C  0100               	movlb	0	; () banked
 20213  008A0E  5175               	movf	lcd_show_string_l0@t8& (0+255),w,b
 20214  008A10  EC4E  F03E         	call	_lcd_show_chr
 20215                           
 20216                           ;lcd.c: 547: str++;
 20217  008A14  0100               	movlb	0	; () banked
 20218  008A16  4B73               	infsnz	lcd_show_string_l0@str& (0+255),f,b
 20219  008A18  2B74               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
 20220                           
 20221                           ; BSR set to: 0
 20222                           ;lcd.c: 548: t8++;
 20223  008A1A  0100               	movlb	0	; () banked
 20224  008A1C  2B75               	incf	lcd_show_string_l0@t8& (0+255),f,b
 20225  008A1E                     l14706:
 20226                           
 20227                           ; BSR set to: 0
 20228  008A1E  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
 20229  008A22  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
 20230  008A26  6AF8               	clrf	tblptru,c
 20231  008A28  0E0F               	movlw	(high __ramtop+-1)
 20232  008A2A  64F7               	cpfsgt	tblptrh,c
 20233  008A2C  D003               	bra	u13617
 20234  008A2E  0008               	tblrd		*
 20235  008A30  50F5               	movf	tablat,w,c
 20236  008A32  D005               	bra	u13610
 20237  008A34                     u13617:
 20238  008A34  CFF6 FFE9          	movff	tblptrl,fsr0l
 20239  008A38  CFF7 FFEA          	movff	tblptrh,fsr0h
 20240  008A3C  50EF               	movf	indf0,w,c
 20241  008A3E                     u13610:
 20242  008A3E  0900               	iorlw	0
 20243  008A40  B4D8               	btfsc	status,2,c
 20244  008A42  0012               	return	
 20245  008A44  0E03               	movlw	3
 20246  008A46  0100               	movlb	0	; () banked
 20247  008A48  6575               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
 20248  008A4A  D7CE               	goto	l14700
 20249  008A4C  0012               	return	
 20250  008A4E                     __end_of_lcd_show_string_l0:
 20251                           	opt stack 0
 20252                           tosu	equ	0xFFF
 20253                           tosh	equ	0xFFE
 20254                           tosl	equ	0xFFD
 20255                           pclath	equ	0xFFA
 20256                           tblptru	equ	0xFF8
 20257                           tblptrh	equ	0xFF7
 20258                           tblptrl	equ	0xFF6
 20259                           tablat	equ	0xFF5
 20260                           prodh	equ	0xFF4
 20261                           prodl	equ	0xFF3
 20262                           intcon	equ	0xFF2
 20263                           indf0	equ	0xFEF
 20264                           postinc0	equ	0xFEE
 20265                           fsr0h	equ	0xFEA
 20266                           fsr0l	equ	0xFE9
 20267                           wreg	equ	0xFE8
 20268                           indf1	equ	0xFE7
 20269                           postinc1	equ	0xFE6
 20270                           postdec1	equ	0xFE5
 20271                           plusw1	equ	0xFE3
 20272                           fsr1h	equ	0xFE2
 20273                           fsr1l	equ	0xFE1
 20274                           indf2	equ	0xFDF
 20275                           postinc2	equ	0xFDE
 20276                           postdec2	equ	0xFDD
 20277                           plusw2	equ	0xFDB
 20278                           fsr2h	equ	0xFDA
 20279                           fsr2l	equ	0xFD9
 20280                           status	equ	0xFD8
 20281                           
 20282 ;; *************** function ___lwdiv *****************
 20283 ;; Defined at:
 20284 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 20285 ;; Parameters:    Size  Location     Type
 20286 ;;  dividend        2    2[BANK0 ] unsigned int 
 20287 ;;  divisor         2    4[BANK0 ] unsigned int 
 20288 ;; Auto vars:     Size  Location     Type
 20289 ;;  quotient        2    7[BANK0 ] unsigned int 
 20290 ;;  counter         1    6[BANK0 ] unsigned char 
 20291 ;; Return value:  Size  Location     Type
 20292 ;;                  2    2[BANK0 ] unsigned int 
 20293 ;; Registers used:
 20294 ;;		wreg, status,2, status,0
 20295 ;; Tracked objects:
 20296 ;;		On entry : 0/0
 20297 ;;		On exit  : 0/0
 20298 ;;		Unchanged: 0/0
 20299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20300 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20301 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20303 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20304 ;;Total ram usage:        7 bytes
 20305 ;; Hardware stack levels used:    1
 20306 ;; Hardware stack levels required when called:    4
 20307 ;; This function calls:
 20308 ;;		Nothing
 20309 ;; This function is called by:
 20310 ;;		_key_adj_value_fixed
 20311 ;;		_ui_disp_xfloat_pt
 20312 ;; This function uses a non-reentrant model
 20313 ;;
 20314                           
 20315                           	psect	text109
 20316  008644                     __ptext109:
 20317                           	opt stack 0
 20318  008644                     ___lwdiv:
 20319                           	opt stack 22
 20320                           
 20321                           ;incstack = 0
 20322  008644  0E00               	movlw	0
 20323  008646  0100               	movlb	0	; () banked
 20324  008648  6F68               	movwf	(___lwdiv@quotient+1)& (0+255),b
 20325  00864A  0E00               	movlw	0
 20326  00864C  6F67               	movwf	___lwdiv@quotient& (0+255),b
 20327                           
 20328                           ; BSR set to: 0
 20329  00864E  0100               	movlb	0	; () banked
 20330  008650  5164               	movf	___lwdiv@divisor& (0+255),w,b
 20331  008652  0100               	movlb	0	; () banked
 20332  008654  1165               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20333  008656  B4D8               	btfsc	status,2,c
 20334  008658  D02C               	goto	l2823
 20335                           
 20336                           ; BSR set to: 0
 20337  00865A  0E01               	movlw	1
 20338  00865C  0100               	movlb	0	; () banked
 20339  00865E  6F66               	movwf	___lwdiv@counter& (0+255),b
 20340  008660  D006               	goto	l14308
 20341  008662                     l14306:
 20342                           
 20343                           ; BSR set to: 0
 20344  008662  0100               	movlb	0	; () banked
 20345  008664  90D8               	bcf	status,0,c
 20346  008666  3764               	rlcf	___lwdiv@divisor& (0+255),f,b
 20347  008668  3765               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20348  00866A  0100               	movlb	0	; () banked
 20349  00866C  2B66               	incf	___lwdiv@counter& (0+255),f,b
 20350  00866E                     l14308:
 20351                           
 20352                           ; BSR set to: 0
 20353  00866E  0100               	movlb	0	; () banked
 20354  008670  AF65               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20355  008672  D7F7               	goto	l14306
 20356  008674                     l14310:
 20357                           
 20358                           ; BSR set to: 0
 20359  008674  0100               	movlb	0	; () banked
 20360  008676  90D8               	bcf	status,0,c
 20361  008678  3767               	rlcf	___lwdiv@quotient& (0+255),f,b
 20362  00867A  3768               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20363                           
 20364                           ; BSR set to: 0
 20365  00867C  0100               	movlb	0	; () banked
 20366  00867E  5164               	movf	___lwdiv@divisor& (0+255),w,b
 20367  008680  0100               	movlb	0	; () banked
 20368  008682  5D62               	subwf	___lwdiv@dividend& (0+255),w,b
 20369  008684  0100               	movlb	0	; () banked
 20370  008686  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20371  008688  0100               	movlb	0	; () banked
 20372  00868A  5963               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20373  00868C  A0D8               	btfss	status,0,c
 20374  00868E  D00A               	goto	l14318
 20375                           
 20376                           ; BSR set to: 0
 20377  008690  0100               	movlb	0	; () banked
 20378  008692  5164               	movf	___lwdiv@divisor& (0+255),w,b
 20379  008694  0100               	movlb	0	; () banked
 20380  008696  5F62               	subwf	___lwdiv@dividend& (0+255),f,b
 20381  008698  0100               	movlb	0	; () banked
 20382  00869A  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20383  00869C  0100               	movlb	0	; () banked
 20384  00869E  5B63               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20385                           
 20386                           ; BSR set to: 0
 20387  0086A0  0100               	movlb	0	; () banked
 20388  0086A2  8167               	bsf	___lwdiv@quotient& (0+255),0,b
 20389  0086A4                     l14318:
 20390                           
 20391                           ; BSR set to: 0
 20392  0086A4  0100               	movlb	0	; () banked
 20393  0086A6  90D8               	bcf	status,0,c
 20394  0086A8  3365               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20395  0086AA  3364               	rrcf	___lwdiv@divisor& (0+255),f,b
 20396                           
 20397                           ; BSR set to: 0
 20398  0086AC  0100               	movlb	0	; () banked
 20399  0086AE  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 20400  0086B0  D7E1               	goto	l14310
 20401  0086B2                     l2823:
 20402                           
 20403                           ; BSR set to: 0
 20404  0086B2  C067  F062         	movff	___lwdiv@quotient,?___lwdiv
 20405  0086B6  C068  F063         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20406                           
 20407                           ; BSR set to: 0
 20408  0086BA  0012               	return		;funcret
 20409  0086BC                     __end_of___lwdiv:
 20410                           	opt stack 0
 20411                           tosu	equ	0xFFF
 20412                           tosh	equ	0xFFE
 20413                           tosl	equ	0xFFD
 20414                           pclath	equ	0xFFA
 20415                           tblptru	equ	0xFF8
 20416                           tblptrh	equ	0xFF7
 20417                           tblptrl	equ	0xFF6
 20418                           tablat	equ	0xFF5
 20419                           prodh	equ	0xFF4
 20420                           prodl	equ	0xFF3
 20421                           intcon	equ	0xFF2
 20422                           indf0	equ	0xFEF
 20423                           postinc0	equ	0xFEE
 20424                           fsr0h	equ	0xFEA
 20425                           fsr0l	equ	0xFE9
 20426                           wreg	equ	0xFE8
 20427                           indf1	equ	0xFE7
 20428                           postinc1	equ	0xFE6
 20429                           postdec1	equ	0xFE5
 20430                           plusw1	equ	0xFE3
 20431                           fsr1h	equ	0xFE2
 20432                           fsr1l	equ	0xFE1
 20433                           indf2	equ	0xFDF
 20434                           postinc2	equ	0xFDE
 20435                           postdec2	equ	0xFDD
 20436                           plusw2	equ	0xFDB
 20437                           fsr2h	equ	0xFDA
 20438                           fsr2l	equ	0xFD9
 20439                           status	equ	0xFD8
 20440                           
 20441 ;; *************** function _lcd_disp_unit_temperature *****************
 20442 ;; Defined at:
 20443 ;;		line 425 in file "src/driver/lcd.c"
 20444 ;; Parameters:    Size  Location     Type
 20445 ;;  show            1    wreg     unsigned char 
 20446 ;; Auto vars:     Size  Location     Type
 20447 ;;  show            1   31[COMRAM] unsigned char 
 20448 ;; Return value:  Size  Location     Type
 20449 ;;                  1    wreg      void 
 20450 ;; Registers used:
 20451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20452 ;; Tracked objects:
 20453 ;;		On entry : 0/0
 20454 ;;		On exit  : 0/0
 20455 ;;		Unchanged: 0/0
 20456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20461 ;;Total ram usage:        1 bytes
 20462 ;; Hardware stack levels used:    1
 20463 ;; Hardware stack levels required when called:    6
 20464 ;; This function calls:
 20465 ;;		_lcd_set_com_seg
 20466 ;; This function is called by:
 20467 ;;		_ui_disp_menu_home
 20468 ;; This function uses a non-reentrant model
 20469 ;;
 20470                           
 20471                           	psect	text110
 20472  008CCE                     __ptext110:
 20473                           	opt stack 0
 20474  008CCE                     _lcd_disp_unit_temperature:
 20475                           	opt stack 21
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;incstack = 0
 20479                           ;lcd_disp_unit_temperature@show stored from wreg
 20480  008CCE  6E20               	movwf	lcd_disp_unit_temperature@show,c
 20481                           
 20482                           ;lcd.c: 427: lcd_set_com_seg(3,13,0);
 20483  008CD0  0E0D               	movlw	13
 20484  008CD2  0100               	movlb	0	; () banked
 20485  008CD4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20486  008CD6  0E00               	movlw	0
 20487  008CD8  0100               	movlb	0	; () banked
 20488  008CDA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20489  008CDC  0E03               	movlw	3
 20490  008CDE  EC06  F037         	call	_lcd_set_com_seg
 20491                           
 20492                           ;lcd.c: 428: lcd_set_com_seg(1,41,0);
 20493  008CE2  0E29               	movlw	41
 20494  008CE4  0100               	movlb	0	; () banked
 20495  008CE6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20496  008CE8  0E00               	movlw	0
 20497  008CEA  0100               	movlb	0	; () banked
 20498  008CEC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20499  008CEE  0E01               	movlw	1
 20500  008CF0  EC06  F037         	call	_lcd_set_com_seg
 20501                           
 20502                           ;lcd.c: 429: lcd_set_com_seg(0,41,0);
 20503  008CF4  0E29               	movlw	41
 20504  008CF6  0100               	movlb	0	; () banked
 20505  008CF8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20506  008CFA  0E00               	movlw	0
 20507  008CFC  0100               	movlb	0	; () banked
 20508  008CFE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20509  008D00  0E00               	movlw	0
 20510  008D02  EC06  F037         	call	_lcd_set_com_seg
 20511                           
 20512                           ;lcd.c: 430: if(show){
 20513  008D06  5020               	movf	lcd_disp_unit_temperature@show,w,c
 20514  008D08  B4D8               	btfsc	status,2,c
 20515  008D0A  D00A               	goto	l15490
 20516                           
 20517                           ;lcd.c: 431: lcd_set_com_seg(3,13,1);
 20518  008D0C  0E0D               	movlw	13
 20519  008D0E  0100               	movlb	0	; () banked
 20520  008D10  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20521  008D12  0E01               	movlw	1
 20522  008D14  0100               	movlb	0	; () banked
 20523  008D16  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20524  008D18  0E03               	movlw	3
 20525  008D1A  EC06  F037         	call	_lcd_set_com_seg
 20526                           
 20527                           ;lcd.c: 432: }else{
 20528  008D1E  0012               	return	
 20529  008D20                     l15490:
 20530                           
 20531                           ;lcd.c: 433: lcd_set_com_seg(3,13,0);
 20532  008D20  0E0D               	movlw	13
 20533  008D22  0100               	movlb	0	; () banked
 20534  008D24  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20535  008D26  0E00               	movlw	0
 20536  008D28  0100               	movlb	0	; () banked
 20537  008D2A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20538  008D2C  0E03               	movlw	3
 20539  008D2E  EC06  F037         	call	_lcd_set_com_seg
 20540  008D32  0012               	return	
 20541  008D34                     __end_of_lcd_disp_unit_temperature:
 20542                           	opt stack 0
 20543                           tosu	equ	0xFFF
 20544                           tosh	equ	0xFFE
 20545                           tosl	equ	0xFFD
 20546                           pclath	equ	0xFFA
 20547                           tblptru	equ	0xFF8
 20548                           tblptrh	equ	0xFF7
 20549                           tblptrl	equ	0xFF6
 20550                           tablat	equ	0xFF5
 20551                           prodh	equ	0xFF4
 20552                           prodl	equ	0xFF3
 20553                           intcon	equ	0xFF2
 20554                           indf0	equ	0xFEF
 20555                           postinc0	equ	0xFEE
 20556                           fsr0h	equ	0xFEA
 20557                           fsr0l	equ	0xFE9
 20558                           wreg	equ	0xFE8
 20559                           indf1	equ	0xFE7
 20560                           postinc1	equ	0xFE6
 20561                           postdec1	equ	0xFE5
 20562                           plusw1	equ	0xFE3
 20563                           fsr1h	equ	0xFE2
 20564                           fsr1l	equ	0xFE1
 20565                           indf2	equ	0xFDF
 20566                           postinc2	equ	0xFDE
 20567                           postdec2	equ	0xFDD
 20568                           plusw2	equ	0xFDB
 20569                           fsr2h	equ	0xFDA
 20570                           fsr2l	equ	0xFD9
 20571                           status	equ	0xFD8
 20572                           
 20573 ;; *************** function _lcd_disp_unit_t *****************
 20574 ;; Defined at:
 20575 ;;		line 390 in file "src/driver/lcd.c"
 20576 ;; Parameters:    Size  Location     Type
 20577 ;;  show            1    wreg     unsigned char 
 20578 ;; Auto vars:     Size  Location     Type
 20579 ;;  show            1   31[COMRAM] unsigned char 
 20580 ;; Return value:  Size  Location     Type
 20581 ;;                  1    wreg      void 
 20582 ;; Registers used:
 20583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20584 ;; Tracked objects:
 20585 ;;		On entry : 0/0
 20586 ;;		On exit  : 0/0
 20587 ;;		Unchanged: 0/0
 20588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20593 ;;Total ram usage:        1 bytes
 20594 ;; Hardware stack levels used:    1
 20595 ;; Hardware stack levels required when called:    6
 20596 ;; This function calls:
 20597 ;;		_lcd_set_com_seg
 20598 ;; This function is called by:
 20599 ;;		_ui_disp_menu_home
 20600 ;; This function uses a non-reentrant model
 20601 ;;
 20602                           
 20603                           	psect	text111
 20604  0094FA                     __ptext111:
 20605                           	opt stack 0
 20606  0094FA                     _lcd_disp_unit_t:
 20607                           	opt stack 21
 20608                           
 20609                           ;incstack = 0
 20610                           ;lcd_disp_unit_t@show stored from wreg
 20611  0094FA  6E20               	movwf	lcd_disp_unit_t@show,c
 20612                           
 20613                           ;lcd.c: 392: lcd_set_com_seg(3,41,0);
 20614  0094FC  0E29               	movlw	41
 20615  0094FE  0100               	movlb	0	; () banked
 20616  009500  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20617  009502  0E00               	movlw	0
 20618  009504  0100               	movlb	0	; () banked
 20619  009506  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20620  009508  0E03               	movlw	3
 20621  00950A  EC06  F037         	call	_lcd_set_com_seg
 20622                           
 20623                           ;lcd.c: 393: lcd_set_com_seg(2,41,0);
 20624  00950E  0E29               	movlw	41
 20625  009510  0100               	movlb	0	; () banked
 20626  009512  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20627  009514  0E00               	movlw	0
 20628  009516  0100               	movlb	0	; () banked
 20629  009518  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20630  00951A  0E02               	movlw	2
 20631  00951C  EC06  F037         	call	_lcd_set_com_seg
 20632                           
 20633                           ;lcd.c: 394: if(show)
 20634  009520  5020               	movf	lcd_disp_unit_t@show,w,c
 20635  009522  B4D8               	btfsc	status,2,c
 20636  009524  D00A               	goto	l15474
 20637                           
 20638                           ;lcd.c: 395: lcd_set_com_seg(3,42,1);
 20639  009526  0E2A               	movlw	42
 20640  009528  0100               	movlb	0	; () banked
 20641  00952A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20642  00952C  0E01               	movlw	1
 20643  00952E  0100               	movlb	0	; () banked
 20644  009530  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20645  009532  0E03               	movlw	3
 20646  009534  EC06  F037         	call	_lcd_set_com_seg
 20647  009538  0012               	return	
 20648  00953A                     l15474:
 20649                           
 20650                           ;lcd.c: 396: else
 20651                           ;lcd.c: 397: lcd_set_com_seg(3,42,0);
 20652  00953A  0E2A               	movlw	42
 20653  00953C  0100               	movlb	0	; () banked
 20654  00953E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20655  009540  0E00               	movlw	0
 20656  009542  0100               	movlb	0	; () banked
 20657  009544  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20658  009546  0E03               	movlw	3
 20659  009548  EC06  F037         	call	_lcd_set_com_seg
 20660  00954C  0012               	return	
 20661  00954E                     __end_of_lcd_disp_unit_t:
 20662                           	opt stack 0
 20663                           tosu	equ	0xFFF
 20664                           tosh	equ	0xFFE
 20665                           tosl	equ	0xFFD
 20666                           pclath	equ	0xFFA
 20667                           tblptru	equ	0xFF8
 20668                           tblptrh	equ	0xFF7
 20669                           tblptrl	equ	0xFF6
 20670                           tablat	equ	0xFF5
 20671                           prodh	equ	0xFF4
 20672                           prodl	equ	0xFF3
 20673                           intcon	equ	0xFF2
 20674                           indf0	equ	0xFEF
 20675                           postinc0	equ	0xFEE
 20676                           fsr0h	equ	0xFEA
 20677                           fsr0l	equ	0xFE9
 20678                           wreg	equ	0xFE8
 20679                           indf1	equ	0xFE7
 20680                           postinc1	equ	0xFE6
 20681                           postdec1	equ	0xFE5
 20682                           plusw1	equ	0xFE3
 20683                           fsr1h	equ	0xFE2
 20684                           fsr1l	equ	0xFE1
 20685                           indf2	equ	0xFDF
 20686                           postinc2	equ	0xFDE
 20687                           postdec2	equ	0xFDD
 20688                           plusw2	equ	0xFDB
 20689                           fsr2h	equ	0xFDA
 20690                           fsr2l	equ	0xFD9
 20691                           status	equ	0xFD8
 20692                           
 20693 ;; *************** function _lcd_disp_unit_mpa *****************
 20694 ;; Defined at:
 20695 ;;		line 465 in file "src/driver/lcd.c"
 20696 ;; Parameters:    Size  Location     Type
 20697 ;;  show            1    wreg     unsigned char 
 20698 ;; Auto vars:     Size  Location     Type
 20699 ;;  show            1   31[COMRAM] unsigned char 
 20700 ;; Return value:  Size  Location     Type
 20701 ;;                  1    wreg      void 
 20702 ;; Registers used:
 20703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20704 ;; Tracked objects:
 20705 ;;		On entry : 0/0
 20706 ;;		On exit  : 0/0
 20707 ;;		Unchanged: 0/0
 20708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20713 ;;Total ram usage:        1 bytes
 20714 ;; Hardware stack levels used:    1
 20715 ;; Hardware stack levels required when called:    6
 20716 ;; This function calls:
 20717 ;;		_lcd_set_com_seg
 20718 ;; This function is called by:
 20719 ;;		_ui_disp_menu_home
 20720 ;;		_ui_disp_menu_warn_v_adj
 20721 ;; This function uses a non-reentrant model
 20722 ;;
 20723                           
 20724                           	psect	text112
 20725  008D34                     __ptext112:
 20726                           	opt stack 0
 20727  008D34                     _lcd_disp_unit_mpa:
 20728                           	opt stack 21
 20729                           
 20730                           ;incstack = 0
 20731                           ;lcd_disp_unit_mpa@show stored from wreg
 20732  008D34  6E20               	movwf	lcd_disp_unit_mpa@show,c
 20733                           
 20734                           ;lcd.c: 468: lcd_set_com_seg(3,13,0);
 20735  008D36  0E0D               	movlw	13
 20736  008D38  0100               	movlb	0	; () banked
 20737  008D3A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20738  008D3C  0E00               	movlw	0
 20739  008D3E  0100               	movlb	0	; () banked
 20740  008D40  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20741  008D42  0E03               	movlw	3
 20742  008D44  EC06  F037         	call	_lcd_set_com_seg
 20743                           
 20744                           ;lcd.c: 469: lcd_set_com_seg(1,41,0);
 20745  008D48  0E29               	movlw	41
 20746  008D4A  0100               	movlb	0	; () banked
 20747  008D4C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20748  008D4E  0E00               	movlw	0
 20749  008D50  0100               	movlb	0	; () banked
 20750  008D52  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20751  008D54  0E01               	movlw	1
 20752  008D56  EC06  F037         	call	_lcd_set_com_seg
 20753                           
 20754                           ;lcd.c: 470: lcd_set_com_seg(0,41,0);
 20755  008D5A  0E29               	movlw	41
 20756  008D5C  0100               	movlb	0	; () banked
 20757  008D5E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20758  008D60  0E00               	movlw	0
 20759  008D62  0100               	movlb	0	; () banked
 20760  008D64  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20761  008D66  0E00               	movlw	0
 20762  008D68  EC06  F037         	call	_lcd_set_com_seg
 20763                           
 20764                           ;lcd.c: 471: if(show){
 20765  008D6C  5020               	movf	lcd_disp_unit_mpa@show,w,c
 20766  008D6E  B4D8               	btfsc	status,2,c
 20767  008D70  D00A               	goto	l15482
 20768                           
 20769                           ;lcd.c: 472: lcd_set_com_seg(0,40,1);
 20770  008D72  0E28               	movlw	40
 20771  008D74  0100               	movlb	0	; () banked
 20772  008D76  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20773  008D78  0E01               	movlw	1
 20774  008D7A  0100               	movlb	0	; () banked
 20775  008D7C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20776  008D7E  0E00               	movlw	0
 20777  008D80  EC06  F037         	call	_lcd_set_com_seg
 20778                           
 20779                           ;lcd.c: 473: }else{
 20780  008D84  0012               	return	
 20781  008D86                     l15482:
 20782                           
 20783                           ;lcd.c: 474: lcd_set_com_seg(0,40,0);
 20784  008D86  0E28               	movlw	40
 20785  008D88  0100               	movlb	0	; () banked
 20786  008D8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20787  008D8C  0E00               	movlw	0
 20788  008D8E  0100               	movlb	0	; () banked
 20789  008D90  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20790  008D92  0E00               	movlw	0
 20791  008D94  EC06  F037         	call	_lcd_set_com_seg
 20792  008D98  0012               	return	
 20793  008D9A                     __end_of_lcd_disp_unit_mpa:
 20794                           	opt stack 0
 20795                           tosu	equ	0xFFF
 20796                           tosh	equ	0xFFE
 20797                           tosl	equ	0xFFD
 20798                           pclath	equ	0xFFA
 20799                           tblptru	equ	0xFF8
 20800                           tblptrh	equ	0xFF7
 20801                           tblptrl	equ	0xFF6
 20802                           tablat	equ	0xFF5
 20803                           prodh	equ	0xFF4
 20804                           prodl	equ	0xFF3
 20805                           intcon	equ	0xFF2
 20806                           indf0	equ	0xFEF
 20807                           postinc0	equ	0xFEE
 20808                           fsr0h	equ	0xFEA
 20809                           fsr0l	equ	0xFE9
 20810                           wreg	equ	0xFE8
 20811                           indf1	equ	0xFE7
 20812                           postinc1	equ	0xFE6
 20813                           postdec1	equ	0xFE5
 20814                           plusw1	equ	0xFE3
 20815                           fsr1h	equ	0xFE2
 20816                           fsr1l	equ	0xFE1
 20817                           indf2	equ	0xFDF
 20818                           postinc2	equ	0xFDE
 20819                           postdec2	equ	0xFDD
 20820                           plusw2	equ	0xFDB
 20821                           fsr2h	equ	0xFDA
 20822                           fsr2l	equ	0xFD9
 20823                           status	equ	0xFD8
 20824                           
 20825 ;; *************** function _lcd_disp_unit_2nd_m3 *****************
 20826 ;; Defined at:
 20827 ;;		line 449 in file "src/driver/lcd.c"
 20828 ;; Parameters:    Size  Location     Type
 20829 ;;  show            1    wreg     unsigned char 
 20830 ;; Auto vars:     Size  Location     Type
 20831 ;;  show            1   31[COMRAM] unsigned char 
 20832 ;; Return value:  Size  Location     Type
 20833 ;;                  1    wreg      void 
 20834 ;; Registers used:
 20835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20836 ;; Tracked objects:
 20837 ;;		On entry : 0/0
 20838 ;;		On exit  : 0/0
 20839 ;;		Unchanged: 0/0
 20840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20845 ;;Total ram usage:        1 bytes
 20846 ;; Hardware stack levels used:    1
 20847 ;; Hardware stack levels required when called:    6
 20848 ;; This function calls:
 20849 ;;		_lcd_set_com_seg
 20850 ;; This function is called by:
 20851 ;;		_ui_disp_menu_home
 20852 ;; This function uses a non-reentrant model
 20853 ;;
 20854                           
 20855                           	psect	text113
 20856  0082CE                     __ptext113:
 20857                           	opt stack 0
 20858  0082CE                     _lcd_disp_unit_2nd_m3:
 20859                           	opt stack 21
 20860                           
 20861                           ;incstack = 0
 20862                           ;lcd_disp_unit_2nd_m3@show stored from wreg
 20863  0082CE  6E20               	movwf	lcd_disp_unit_2nd_m3@show,c
 20864                           
 20865                           ;lcd.c: 452: lcd_set_com_seg(0,40,0);
 20866  0082D0  0E28               	movlw	40
 20867  0082D2  0100               	movlb	0	; () banked
 20868  0082D4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20869  0082D6  0E00               	movlw	0
 20870  0082D8  0100               	movlb	0	; () banked
 20871  0082DA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20872  0082DC  0E00               	movlw	0
 20873  0082DE  EC06  F037         	call	_lcd_set_com_seg
 20874                           
 20875                           ;lcd.c: 453: lcd_set_com_seg(1,41,0);
 20876  0082E2  0E29               	movlw	41
 20877  0082E4  0100               	movlb	0	; () banked
 20878  0082E6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20879  0082E8  0E00               	movlw	0
 20880  0082EA  0100               	movlb	0	; () banked
 20881  0082EC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20882  0082EE  0E01               	movlw	1
 20883  0082F0  EC06  F037         	call	_lcd_set_com_seg
 20884                           
 20885                           ;lcd.c: 454: lcd_set_com_seg(3,13,0);
 20886  0082F4  0E0D               	movlw	13
 20887  0082F6  0100               	movlb	0	; () banked
 20888  0082F8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20889  0082FA  0E00               	movlw	0
 20890  0082FC  0100               	movlb	0	; () banked
 20891  0082FE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20892  008300  0E03               	movlw	3
 20893  008302  EC06  F037         	call	_lcd_set_com_seg
 20894                           
 20895                           ;lcd.c: 456: if(show){
 20896  008306  5020               	movf	lcd_disp_unit_2nd_m3@show,w,c
 20897  008308  B4D8               	btfsc	status,2,c
 20898  00830A  D013               	goto	l15506
 20899                           
 20900                           ;lcd.c: 457: lcd_set_com_seg(0,41,1);
 20901  00830C  0E29               	movlw	41
 20902  00830E  0100               	movlb	0	; () banked
 20903  008310  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20904  008312  0E01               	movlw	1
 20905  008314  0100               	movlb	0	; () banked
 20906  008316  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20907  008318  0E00               	movlw	0
 20908  00831A  EC06  F037         	call	_lcd_set_com_seg
 20909                           
 20910                           ;lcd.c: 458: lcd_set_com_seg(1,41,1);
 20911  00831E  0E29               	movlw	41
 20912  008320  0100               	movlb	0	; () banked
 20913  008322  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20914  008324  0E01               	movlw	1
 20915  008326  0100               	movlb	0	; () banked
 20916  008328  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20917  00832A  0E01               	movlw	1
 20918  00832C  EC06  F037         	call	_lcd_set_com_seg
 20919                           
 20920                           ;lcd.c: 459: }else{
 20921  008330  0012               	return	
 20922  008332                     l15506:
 20923                           
 20924                           ;lcd.c: 460: lcd_set_com_seg(0,41,0);
 20925  008332  0E29               	movlw	41
 20926  008334  0100               	movlb	0	; () banked
 20927  008336  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20928  008338  0E00               	movlw	0
 20929  00833A  0100               	movlb	0	; () banked
 20930  00833C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20931  00833E  0E00               	movlw	0
 20932  008340  EC06  F037         	call	_lcd_set_com_seg
 20933                           
 20934                           ;lcd.c: 461: lcd_set_com_seg(1,41,0);
 20935  008344  0E29               	movlw	41
 20936  008346  0100               	movlb	0	; () banked
 20937  008348  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 20938  00834A  0E00               	movlw	0
 20939  00834C  0100               	movlb	0	; () banked
 20940  00834E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 20941  008350  0E01               	movlw	1
 20942  008352  EC06  F037         	call	_lcd_set_com_seg
 20943  008356  0012               	return	
 20944  008358                     __end_of_lcd_disp_unit_2nd_m3:
 20945                           	opt stack 0
 20946                           tosu	equ	0xFFF
 20947                           tosh	equ	0xFFE
 20948                           tosl	equ	0xFFD
 20949                           pclath	equ	0xFFA
 20950                           tblptru	equ	0xFF8
 20951                           tblptrh	equ	0xFF7
 20952                           tblptrl	equ	0xFF6
 20953                           tablat	equ	0xFF5
 20954                           prodh	equ	0xFF4
 20955                           prodl	equ	0xFF3
 20956                           intcon	equ	0xFF2
 20957                           indf0	equ	0xFEF
 20958                           postinc0	equ	0xFEE
 20959                           fsr0h	equ	0xFEA
 20960                           fsr0l	equ	0xFE9
 20961                           wreg	equ	0xFE8
 20962                           indf1	equ	0xFE7
 20963                           postinc1	equ	0xFE6
 20964                           postdec1	equ	0xFE5
 20965                           plusw1	equ	0xFE3
 20966                           fsr1h	equ	0xFE2
 20967                           fsr1l	equ	0xFE1
 20968                           indf2	equ	0xFDF
 20969                           postinc2	equ	0xFDE
 20970                           postdec2	equ	0xFDD
 20971                           plusw2	equ	0xFDB
 20972                           fsr2h	equ	0xFDA
 20973                           fsr2l	equ	0xFD9
 20974                           status	equ	0xFD8
 20975                           
 20976 ;; *************** function _lcd_disp_unit_2nd_m *****************
 20977 ;; Defined at:
 20978 ;;		line 437 in file "src/driver/lcd.c"
 20979 ;; Parameters:    Size  Location     Type
 20980 ;;  show            1    wreg     unsigned char 
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;  show            1   31[COMRAM] unsigned char 
 20983 ;; Return value:  Size  Location     Type
 20984 ;;                  1    wreg      void 
 20985 ;; Registers used:
 20986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20987 ;; Tracked objects:
 20988 ;;		On entry : 0/0
 20989 ;;		On exit  : 0/0
 20990 ;;		Unchanged: 0/0
 20991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20996 ;;Total ram usage:        1 bytes
 20997 ;; Hardware stack levels used:    1
 20998 ;; Hardware stack levels required when called:    6
 20999 ;; This function calls:
 21000 ;;		_lcd_set_com_seg
 21001 ;; This function is called by:
 21002 ;;		_ui_disp_menu_home
 21003 ;;		_ui_disp_menu_warn_v_adj
 21004 ;; This function uses a non-reentrant model
 21005 ;;
 21006                           
 21007                           	psect	text114
 21008  008D9A                     __ptext114:
 21009                           	opt stack 0
 21010  008D9A                     _lcd_disp_unit_2nd_m:
 21011                           	opt stack 21
 21012                           
 21013                           ;incstack = 0
 21014                           ;lcd_disp_unit_2nd_m@show stored from wreg
 21015  008D9A  6E20               	movwf	lcd_disp_unit_2nd_m@show,c
 21016                           
 21017                           ;lcd.c: 440: lcd_set_com_seg(0,40,0);
 21018  008D9C  0E28               	movlw	40
 21019  008D9E  0100               	movlb	0	; () banked
 21020  008DA0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21021  008DA2  0E00               	movlw	0
 21022  008DA4  0100               	movlb	0	; () banked
 21023  008DA6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21024  008DA8  0E00               	movlw	0
 21025  008DAA  EC06  F037         	call	_lcd_set_com_seg
 21026                           
 21027                           ;lcd.c: 441: lcd_set_com_seg(1,41,0);
 21028  008DAE  0E29               	movlw	41
 21029  008DB0  0100               	movlb	0	; () banked
 21030  008DB2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21031  008DB4  0E00               	movlw	0
 21032  008DB6  0100               	movlb	0	; () banked
 21033  008DB8  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21034  008DBA  0E01               	movlw	1
 21035  008DBC  EC06  F037         	call	_lcd_set_com_seg
 21036                           
 21037                           ;lcd.c: 442: lcd_set_com_seg(3,13,0);
 21038  008DC0  0E0D               	movlw	13
 21039  008DC2  0100               	movlb	0	; () banked
 21040  008DC4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21041  008DC6  0E00               	movlw	0
 21042  008DC8  0100               	movlb	0	; () banked
 21043  008DCA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21044  008DCC  0E03               	movlw	3
 21045  008DCE  EC06  F037         	call	_lcd_set_com_seg
 21046                           
 21047                           ;lcd.c: 443: if(show)
 21048  008DD2  5020               	movf	lcd_disp_unit_2nd_m@show,w,c
 21049  008DD4  B4D8               	btfsc	status,2,c
 21050  008DD6  D00A               	goto	l15498
 21051                           
 21052                           ;lcd.c: 444: lcd_set_com_seg(0,41,1);
 21053  008DD8  0E29               	movlw	41
 21054  008DDA  0100               	movlb	0	; () banked
 21055  008DDC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21056  008DDE  0E01               	movlw	1
 21057  008DE0  0100               	movlb	0	; () banked
 21058  008DE2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21059  008DE4  0E00               	movlw	0
 21060  008DE6  EC06  F037         	call	_lcd_set_com_seg
 21061  008DEA  0012               	return	
 21062  008DEC                     l15498:
 21063                           
 21064                           ;lcd.c: 445: else
 21065                           ;lcd.c: 446: lcd_set_com_seg(0,41,0);
 21066  008DEC  0E29               	movlw	41
 21067  008DEE  0100               	movlb	0	; () banked
 21068  008DF0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21069  008DF2  0E00               	movlw	0
 21070  008DF4  0100               	movlb	0	; () banked
 21071  008DF6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21072  008DF8  0E00               	movlw	0
 21073  008DFA  EC06  F037         	call	_lcd_set_com_seg
 21074  008DFE  0012               	return	
 21075  008E00                     __end_of_lcd_disp_unit_2nd_m:
 21076                           	opt stack 0
 21077                           tosu	equ	0xFFF
 21078                           tosh	equ	0xFFE
 21079                           tosl	equ	0xFFD
 21080                           pclath	equ	0xFFA
 21081                           tblptru	equ	0xFF8
 21082                           tblptrh	equ	0xFF7
 21083                           tblptrl	equ	0xFF6
 21084                           tablat	equ	0xFF5
 21085                           prodh	equ	0xFF4
 21086                           prodl	equ	0xFF3
 21087                           intcon	equ	0xFF2
 21088                           indf0	equ	0xFEF
 21089                           postinc0	equ	0xFEE
 21090                           fsr0h	equ	0xFEA
 21091                           fsr0l	equ	0xFE9
 21092                           wreg	equ	0xFE8
 21093                           indf1	equ	0xFE7
 21094                           postinc1	equ	0xFE6
 21095                           postdec1	equ	0xFE5
 21096                           plusw1	equ	0xFE3
 21097                           fsr1h	equ	0xFE2
 21098                           fsr1l	equ	0xFE1
 21099                           indf2	equ	0xFDF
 21100                           postinc2	equ	0xFDE
 21101                           postdec2	equ	0xFDD
 21102                           plusw2	equ	0xFDB
 21103                           fsr2h	equ	0xFDA
 21104                           fsr2l	equ	0xFD9
 21105                           status	equ	0xFD8
 21106                           
 21107 ;; *************** function _lcd_disp_unit_1st_m3 *****************
 21108 ;; Defined at:
 21109 ;;		line 412 in file "src/driver/lcd.c"
 21110 ;; Parameters:    Size  Location     Type
 21111 ;;  show            1    wreg     unsigned char 
 21112 ;; Auto vars:     Size  Location     Type
 21113 ;;  show            1   31[COMRAM] unsigned char 
 21114 ;; Return value:  Size  Location     Type
 21115 ;;                  1    wreg      void 
 21116 ;; Registers used:
 21117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21118 ;; Tracked objects:
 21119 ;;		On entry : 0/0
 21120 ;;		On exit  : 0/0
 21121 ;;		Unchanged: 0/0
 21122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21127 ;;Total ram usage:        1 bytes
 21128 ;; Hardware stack levels used:    1
 21129 ;; Hardware stack levels required when called:    6
 21130 ;; This function calls:
 21131 ;;		_lcd_set_com_seg
 21132 ;; This function is called by:
 21133 ;;		_ui_disp_menu_home
 21134 ;; This function uses a non-reentrant model
 21135 ;;
 21136                           
 21137                           	psect	text115
 21138  008E00                     __ptext115:
 21139                           	opt stack 0
 21140  008E00                     _lcd_disp_unit_1st_m3:
 21141                           	opt stack 21
 21142                           
 21143                           ;incstack = 0
 21144                           ;lcd_disp_unit_1st_m3@show stored from wreg
 21145  008E00  6E20               	movwf	lcd_disp_unit_1st_m3@show,c
 21146                           
 21147                           ;lcd.c: 415: lcd_set_com_seg(3,42,0);
 21148  008E02  0E2A               	movlw	42
 21149  008E04  0100               	movlb	0	; () banked
 21150  008E06  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21151  008E08  0E00               	movlw	0
 21152  008E0A  0100               	movlb	0	; () banked
 21153  008E0C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21154  008E0E  0E03               	movlw	3
 21155  008E10  EC06  F037         	call	_lcd_set_com_seg
 21156                           
 21157                           ;lcd.c: 416: if(show){
 21158  008E14  5020               	movf	lcd_disp_unit_1st_m3@show,w,c
 21159  008E16  B4D8               	btfsc	status,2,c
 21160  008E18  D013               	goto	l15466
 21161                           
 21162                           ;lcd.c: 417: lcd_set_com_seg(2,41,1);
 21163  008E1A  0E29               	movlw	41
 21164  008E1C  0100               	movlb	0	; () banked
 21165  008E1E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21166  008E20  0E01               	movlw	1
 21167  008E22  0100               	movlb	0	; () banked
 21168  008E24  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21169  008E26  0E02               	movlw	2
 21170  008E28  EC06  F037         	call	_lcd_set_com_seg
 21171                           
 21172                           ;lcd.c: 418: lcd_set_com_seg(3,41,1);
 21173  008E2C  0E29               	movlw	41
 21174  008E2E  0100               	movlb	0	; () banked
 21175  008E30  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21176  008E32  0E01               	movlw	1
 21177  008E34  0100               	movlb	0	; () banked
 21178  008E36  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21179  008E38  0E03               	movlw	3
 21180  008E3A  EC06  F037         	call	_lcd_set_com_seg
 21181                           
 21182                           ;lcd.c: 419: }else{
 21183  008E3E  0012               	return	
 21184  008E40                     l15466:
 21185                           
 21186                           ;lcd.c: 420: lcd_set_com_seg(2,41,0);
 21187  008E40  0E29               	movlw	41
 21188  008E42  0100               	movlb	0	; () banked
 21189  008E44  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21190  008E46  0E00               	movlw	0
 21191  008E48  0100               	movlb	0	; () banked
 21192  008E4A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21193  008E4C  0E02               	movlw	2
 21194  008E4E  EC06  F037         	call	_lcd_set_com_seg
 21195                           
 21196                           ;lcd.c: 421: lcd_set_com_seg(3,41,0);
 21197  008E52  0E29               	movlw	41
 21198  008E54  0100               	movlb	0	; () banked
 21199  008E56  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21200  008E58  0E00               	movlw	0
 21201  008E5A  0100               	movlb	0	; () banked
 21202  008E5C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21203  008E5E  0E03               	movlw	3
 21204  008E60  EC06  F037         	call	_lcd_set_com_seg
 21205  008E64  0012               	return	
 21206  008E66                     __end_of_lcd_disp_unit_1st_m3:
 21207                           	opt stack 0
 21208                           tosu	equ	0xFFF
 21209                           tosh	equ	0xFFE
 21210                           tosl	equ	0xFFD
 21211                           pclath	equ	0xFFA
 21212                           tblptru	equ	0xFF8
 21213                           tblptrh	equ	0xFF7
 21214                           tblptrl	equ	0xFF6
 21215                           tablat	equ	0xFF5
 21216                           prodh	equ	0xFF4
 21217                           prodl	equ	0xFF3
 21218                           intcon	equ	0xFF2
 21219                           indf0	equ	0xFEF
 21220                           postinc0	equ	0xFEE
 21221                           fsr0h	equ	0xFEA
 21222                           fsr0l	equ	0xFE9
 21223                           wreg	equ	0xFE8
 21224                           indf1	equ	0xFE7
 21225                           postinc1	equ	0xFE6
 21226                           postdec1	equ	0xFE5
 21227                           plusw1	equ	0xFE3
 21228                           fsr1h	equ	0xFE2
 21229                           fsr1l	equ	0xFE1
 21230                           indf2	equ	0xFDF
 21231                           postinc2	equ	0xFDE
 21232                           postdec2	equ	0xFDD
 21233                           plusw2	equ	0xFDB
 21234                           fsr2h	equ	0xFDA
 21235                           fsr2l	equ	0xFD9
 21236                           status	equ	0xFD8
 21237                           
 21238 ;; *************** function _lcd_disp_unit_1st_m *****************
 21239 ;; Defined at:
 21240 ;;		line 400 in file "src/driver/lcd.c"
 21241 ;; Parameters:    Size  Location     Type
 21242 ;;  show            1    wreg     unsigned char 
 21243 ;; Auto vars:     Size  Location     Type
 21244 ;;  show            1   31[COMRAM] unsigned char 
 21245 ;; Return value:  Size  Location     Type
 21246 ;;                  1    wreg      void 
 21247 ;; Registers used:
 21248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21249 ;; Tracked objects:
 21250 ;;		On entry : 0/0
 21251 ;;		On exit  : 0/0
 21252 ;;		Unchanged: 0/0
 21253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21258 ;;Total ram usage:        1 bytes
 21259 ;; Hardware stack levels used:    1
 21260 ;; Hardware stack levels required when called:    6
 21261 ;; This function calls:
 21262 ;;		_lcd_set_com_seg
 21263 ;; This function is called by:
 21264 ;;		_ui_disp_menu_home
 21265 ;; This function uses a non-reentrant model
 21266 ;;
 21267                           
 21268                           	psect	text116
 21269  00954E                     __ptext116:
 21270                           	opt stack 0
 21271  00954E                     _lcd_disp_unit_1st_m:
 21272                           	opt stack 21
 21273                           
 21274                           ;incstack = 0
 21275                           ;lcd_disp_unit_1st_m@show stored from wreg
 21276  00954E  6E20               	movwf	lcd_disp_unit_1st_m@show,c
 21277                           
 21278                           ;lcd.c: 403: lcd_set_com_seg(3,42,0);
 21279  009550  0E2A               	movlw	42
 21280  009552  0100               	movlb	0	; () banked
 21281  009554  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21282  009556  0E00               	movlw	0
 21283  009558  0100               	movlb	0	; () banked
 21284  00955A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21285  00955C  0E03               	movlw	3
 21286  00955E  EC06  F037         	call	_lcd_set_com_seg
 21287                           
 21288                           ;lcd.c: 404: lcd_set_com_seg(3,41,0);
 21289  009562  0E29               	movlw	41
 21290  009564  0100               	movlb	0	; () banked
 21291  009566  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21292  009568  0E00               	movlw	0
 21293  00956A  0100               	movlb	0	; () banked
 21294  00956C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21295  00956E  0E03               	movlw	3
 21296  009570  EC06  F037         	call	_lcd_set_com_seg
 21297                           
 21298                           ;lcd.c: 405: if(show){
 21299  009574  5020               	movf	lcd_disp_unit_1st_m@show,w,c
 21300  009576  B4D8               	btfsc	status,2,c
 21301  009578  D00A               	goto	l15458
 21302                           
 21303                           ;lcd.c: 406: lcd_set_com_seg(2,41,1);
 21304  00957A  0E29               	movlw	41
 21305  00957C  0100               	movlb	0	; () banked
 21306  00957E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21307  009580  0E01               	movlw	1
 21308  009582  0100               	movlb	0	; () banked
 21309  009584  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21310  009586  0E02               	movlw	2
 21311  009588  EC06  F037         	call	_lcd_set_com_seg
 21312                           
 21313                           ;lcd.c: 407: }else{
 21314  00958C  0012               	return	
 21315  00958E                     l15458:
 21316                           
 21317                           ;lcd.c: 408: lcd_set_com_seg(2,41,0);
 21318  00958E  0E29               	movlw	41
 21319  009590  0100               	movlb	0	; () banked
 21320  009592  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21321  009594  0E00               	movlw	0
 21322  009596  0100               	movlb	0	; () banked
 21323  009598  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 21324  00959A  0E02               	movlw	2
 21325  00959C  EC06  F037         	call	_lcd_set_com_seg
 21326  0095A0  0012               	return	
 21327  0095A2                     __end_of_lcd_disp_unit_1st_m:
 21328                           	opt stack 0
 21329                           tosu	equ	0xFFF
 21330                           tosh	equ	0xFFE
 21331                           tosl	equ	0xFFD
 21332                           pclath	equ	0xFFA
 21333                           tblptru	equ	0xFF8
 21334                           tblptrh	equ	0xFF7
 21335                           tblptrl	equ	0xFF6
 21336                           tablat	equ	0xFF5
 21337                           prodh	equ	0xFF4
 21338                           prodl	equ	0xFF3
 21339                           intcon	equ	0xFF2
 21340                           indf0	equ	0xFEF
 21341                           postinc0	equ	0xFEE
 21342                           fsr0h	equ	0xFEA
 21343                           fsr0l	equ	0xFE9
 21344                           wreg	equ	0xFE8
 21345                           indf1	equ	0xFE7
 21346                           postinc1	equ	0xFE6
 21347                           postdec1	equ	0xFE5
 21348                           plusw1	equ	0xFE3
 21349                           fsr1h	equ	0xFE2
 21350                           fsr1l	equ	0xFE1
 21351                           indf2	equ	0xFDF
 21352                           postinc2	equ	0xFDE
 21353                           postdec2	equ	0xFDD
 21354                           plusw2	equ	0xFDB
 21355                           fsr2h	equ	0xFDA
 21356                           fsr2l	equ	0xFD9
 21357                           status	equ	0xFD8
 21358                           
 21359 ;; *************** function _lcd_disp_level *****************
 21360 ;; Defined at:
 21361 ;;		line 119 in file "src/driver/lcd.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;  level           1    wreg     unsigned char 
 21364 ;; Auto vars:     Size  Location     Type
 21365 ;;  level           1   18[BANK0 ] unsigned char 
 21366 ;;  i               1   19[BANK0 ] unsigned char 
 21367 ;; Return value:  Size  Location     Type
 21368 ;;                  1    wreg      void 
 21369 ;; Registers used:
 21370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21371 ;; Tracked objects:
 21372 ;;		On entry : 0/0
 21373 ;;		On exit  : 0/0
 21374 ;;		Unchanged: 0/0
 21375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21380 ;;Total ram usage:        2 bytes
 21381 ;; Hardware stack levels used:    1
 21382 ;; Hardware stack levels required when called:    7
 21383 ;; This function calls:
 21384 ;;		_lcd_disp_level_bar
 21385 ;; This function is called by:
 21386 ;;		_ui_disp_menu_home
 21387 ;;		_ui_disp_rtc_mm_ss
 21388 ;; This function uses a non-reentrant model
 21389 ;;
 21390                           
 21391                           	psect	text117
 21392  0093F4                     __ptext117:
 21393                           	opt stack 0
 21394  0093F4                     _lcd_disp_level:
 21395                           	opt stack 20
 21396                           
 21397                           ;incstack = 0
 21398                           ;lcd_disp_level@level stored from wreg
 21399  0093F4  0100               	movlb	0	; () banked
 21400  0093F6  6F72               	movwf	lcd_disp_level@level& (0+255),b
 21401                           
 21402                           ;lcd.c: 121: uint8_t i;
 21403                           ;lcd.c: 122: if(level>=99)level=99;
 21404  0093F8  0E62               	movlw	98
 21405  0093FA  0100               	movlb	0	; () banked
 21406  0093FC  6572               	cpfsgt	lcd_disp_level@level& (0+255),b
 21407  0093FE  D003               	goto	l15336
 21408                           
 21409                           ; BSR set to: 0
 21410  009400  0E63               	movlw	99
 21411  009402  0100               	movlb	0	; () banked
 21412  009404  6F72               	movwf	lcd_disp_level@level& (0+255),b
 21413  009406                     l15336:
 21414                           
 21415                           ; BSR set to: 0
 21416                           ;lcd.c: 123: level/=2;
 21417  009406  0100               	movlb	0	; () banked
 21418  009408  90D8               	bcf	status,0,c
 21419  00940A  3372               	rrcf	lcd_disp_level@level& (0+255),f,b
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;lcd.c: 124: for(i=0;i<level;i++){
 21423  00940C  0E00               	movlw	0
 21424  00940E  0100               	movlb	0	; () banked
 21425  009410  6F73               	movwf	lcd_disp_level@i& (0+255),b
 21426  009412  D008               	goto	l15344
 21427  009414                     l15340:
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;lcd.c: 125: lcd_disp_level_bar(i,1);
 21431  009414  0E01               	movlw	1
 21432  009416  6E20               	movwf	lcd_disp_level_bar@show,c
 21433  009418  0100               	movlb	0	; () banked
 21434  00941A  5173               	movf	lcd_disp_level@i& (0+255),w,b
 21435  00941C  EC4B  F006         	call	_lcd_disp_level_bar
 21436  009420  0100               	movlb	0	; () banked
 21437  009422  2B73               	incf	lcd_disp_level@i& (0+255),f,b
 21438  009424                     l15344:
 21439                           
 21440                           ; BSR set to: 0
 21441  009424  0100               	movlb	0	; () banked
 21442  009426  5172               	movf	lcd_disp_level@level& (0+255),w,b
 21443  009428  0100               	movlb	0	; () banked
 21444  00942A  5D73               	subwf	lcd_disp_level@i& (0+255),w,b
 21445  00942C  A0D8               	btfss	status,0,c
 21446  00942E  D7F2               	goto	l15340
 21447  009430                     l15346:
 21448                           
 21449                           ; BSR set to: 0
 21450                           ;lcd.c: 126: }
 21451                           ;lcd.c: 127: for(;i<50;i++){
 21452  009430  0E31               	movlw	49
 21453  009432  0100               	movlb	0	; () banked
 21454  009434  6573               	cpfsgt	lcd_disp_level@i& (0+255),b
 21455  009436  D001               	goto	l15350
 21456  009438  0012               	return	
 21457  00943A                     l15350:
 21458                           
 21459                           ; BSR set to: 0
 21460                           ;lcd.c: 128: lcd_disp_level_bar(i,0);
 21461  00943A  0E00               	movlw	0
 21462  00943C  6E20               	movwf	lcd_disp_level_bar@show,c
 21463  00943E  0100               	movlb	0	; () banked
 21464  009440  5173               	movf	lcd_disp_level@i& (0+255),w,b
 21465  009442  EC4B  F006         	call	_lcd_disp_level_bar
 21466  009446  0100               	movlb	0	; () banked
 21467  009448  2B73               	incf	lcd_disp_level@i& (0+255),f,b
 21468  00944A  D7F2               	goto	l15346
 21469  00944C                     __end_of_lcd_disp_level:
 21470                           	opt stack 0
 21471                           tosu	equ	0xFFF
 21472                           tosh	equ	0xFFE
 21473                           tosl	equ	0xFFD
 21474                           pclath	equ	0xFFA
 21475                           tblptru	equ	0xFF8
 21476                           tblptrh	equ	0xFF7
 21477                           tblptrl	equ	0xFF6
 21478                           tablat	equ	0xFF5
 21479                           prodh	equ	0xFF4
 21480                           prodl	equ	0xFF3
 21481                           intcon	equ	0xFF2
 21482                           indf0	equ	0xFEF
 21483                           postinc0	equ	0xFEE
 21484                           fsr0h	equ	0xFEA
 21485                           fsr0l	equ	0xFE9
 21486                           wreg	equ	0xFE8
 21487                           indf1	equ	0xFE7
 21488                           postinc1	equ	0xFE6
 21489                           postdec1	equ	0xFE5
 21490                           plusw1	equ	0xFE3
 21491                           fsr1h	equ	0xFE2
 21492                           fsr1l	equ	0xFE1
 21493                           indf2	equ	0xFDF
 21494                           postinc2	equ	0xFDE
 21495                           postdec2	equ	0xFDD
 21496                           plusw2	equ	0xFDB
 21497                           fsr2h	equ	0xFDA
 21498                           fsr2l	equ	0xFD9
 21499                           status	equ	0xFD8
 21500                           
 21501 ;; *************** function _lcd_disp_level_bar *****************
 21502 ;; Defined at:
 21503 ;;		line 47 in file "src/driver/lcd.c"
 21504 ;; Parameters:    Size  Location     Type
 21505 ;;  bar             1    wreg     unsigned char 
 21506 ;;  show            1   31[COMRAM] unsigned char 
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;  bar             1   17[BANK0 ] unsigned char 
 21509 ;;  __bar           1   16[BANK0 ] unsigned char 
 21510 ;; Return value:  Size  Location     Type
 21511 ;;                  1    wreg      void 
 21512 ;; Registers used:
 21513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21514 ;; Tracked objects:
 21515 ;;		On entry : 0/0
 21516 ;;		On exit  : 0/0
 21517 ;;		Unchanged: 0/0
 21518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21519 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21522 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21523 ;;Total ram usage:        3 bytes
 21524 ;; Hardware stack levels used:    1
 21525 ;; Hardware stack levels required when called:    6
 21526 ;; This function calls:
 21527 ;;		_lcd_set_com_seg
 21528 ;; This function is called by:
 21529 ;;		_lcd_disp_level
 21530 ;;		_lcd_disp_level_off
 21531 ;; This function uses a non-reentrant model
 21532 ;;
 21533                           
 21534                           	psect	text118
 21535  000C96                     __ptext118:
 21536                           	opt stack 0
 21537  000C96                     _lcd_disp_level_bar:
 21538                           	opt stack 20
 21539                           
 21540                           ; BSR set to: 0
 21541                           ;incstack = 0
 21542                           ;lcd_disp_level_bar@bar stored from wreg
 21543  000C96  0100               	movlb	0	; () banked
 21544  000C98  6F71               	movwf	lcd_disp_level_bar@bar& (0+255),b
 21545                           
 21546                           ;lcd.c: 50: uint8_t __bar;
 21547                           ;lcd.c: 51: if(bar>49)return;
 21548  000C9A  0E31               	movlw	49
 21549  000C9C  0100               	movlb	0	; () banked
 21550  000C9E  6571               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
 21551  000CA0  D001               	goto	l14898
 21552  000CA2  0012               	return	
 21553  000CA4                     l14898:
 21554                           
 21555                           ; BSR set to: 0
 21556                           ;lcd.c: 52: __bar=49-bar;
 21557  000CA4  0100               	movlb	0	; () banked
 21558  000CA6  5171               	movf	lcd_disp_level_bar@bar& (0+255),w,b
 21559  000CA8  0800               	sublw	0
 21560  000CAA  0F31               	addlw	49
 21561  000CAC  0100               	movlb	0	; () banked
 21562  000CAE  6F70               	movwf	lcd_disp_level_bar@__bar& (0+255),b
 21563                           
 21564                           ;lcd.c: 53: switch(__bar){
 21565  000CB0  D1C2               	goto	l15002
 21566  000CB2                     l14900:
 21567                           
 21568                           ; BSR set to: 0
 21569  000CB2  0E2E               	movlw	46
 21570  000CB4  0100               	movlb	0	; () banked
 21571  000CB6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21572  000CB8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21573  000CBC  0E00               	movlw	0
 21574  000CBE  EC06  F037         	call	_lcd_set_com_seg
 21575  000CC2  0012               	return	
 21576  000CC4                     l14902:
 21577  000CC4  0E2E               	movlw	46
 21578  000CC6  0100               	movlb	0	; () banked
 21579  000CC8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21580  000CCA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21581  000CCE  0E01               	movlw	1
 21582  000CD0  EC06  F037         	call	_lcd_set_com_seg
 21583  000CD4  0012               	return	
 21584  000CD6                     l14904:
 21585  000CD6  0E2E               	movlw	46
 21586  000CD8  0100               	movlb	0	; () banked
 21587  000CDA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21588  000CDC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21589  000CE0  0E02               	movlw	2
 21590  000CE2  EC06  F037         	call	_lcd_set_com_seg
 21591  000CE6  0012               	return	
 21592  000CE8                     l14906:
 21593  000CE8  0E2E               	movlw	46
 21594  000CEA  0100               	movlb	0	; () banked
 21595  000CEC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21596  000CEE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21597  000CF2  0E03               	movlw	3
 21598  000CF4  EC06  F037         	call	_lcd_set_com_seg
 21599  000CF8  0012               	return	
 21600  000CFA                     l14908:
 21601  000CFA  0E2F               	movlw	47
 21602  000CFC  0100               	movlb	0	; () banked
 21603  000CFE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21604  000D00  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21605  000D04  0E03               	movlw	3
 21606  000D06  EC06  F037         	call	_lcd_set_com_seg
 21607  000D0A  0012               	return	
 21608  000D0C                     l14910:
 21609  000D0C  0E2F               	movlw	47
 21610  000D0E  0100               	movlb	0	; () banked
 21611  000D10  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21612  000D12  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21613  000D16  0E02               	movlw	2
 21614  000D18  EC06  F037         	call	_lcd_set_com_seg
 21615  000D1C  0012               	return	
 21616  000D1E                     l14912:
 21617  000D1E  0E2F               	movlw	47
 21618  000D20  0100               	movlb	0	; () banked
 21619  000D22  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21620  000D24  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21621  000D28  0E01               	movlw	1
 21622  000D2A  EC06  F037         	call	_lcd_set_com_seg
 21623  000D2E  0012               	return	
 21624  000D30                     l14914:
 21625  000D30  0E2F               	movlw	47
 21626  000D32  0100               	movlb	0	; () banked
 21627  000D34  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21628  000D36  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21629  000D3A  0E00               	movlw	0
 21630  000D3C  EC06  F037         	call	_lcd_set_com_seg
 21631  000D40  0012               	return	
 21632  000D42                     l14916:
 21633  000D42  0E1F               	movlw	31
 21634  000D44  0100               	movlb	0	; () banked
 21635  000D46  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21636  000D48  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21637  000D4C  0E00               	movlw	0
 21638  000D4E  EC06  F037         	call	_lcd_set_com_seg
 21639  000D52  0012               	return	
 21640  000D54                     l14918:
 21641  000D54  0E1F               	movlw	31
 21642  000D56  0100               	movlb	0	; () banked
 21643  000D58  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21644  000D5A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21645  000D5E  0E01               	movlw	1
 21646  000D60  EC06  F037         	call	_lcd_set_com_seg
 21647  000D64  0012               	return	
 21648  000D66                     l14920:
 21649  000D66  0E1F               	movlw	31
 21650  000D68  0100               	movlb	0	; () banked
 21651  000D6A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21652  000D6C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21653  000D70  0E02               	movlw	2
 21654  000D72  EC06  F037         	call	_lcd_set_com_seg
 21655  000D76  0012               	return	
 21656  000D78                     l14922:
 21657  000D78  0E1F               	movlw	31
 21658  000D7A  0100               	movlb	0	; () banked
 21659  000D7C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21660  000D7E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21661  000D82  0E03               	movlw	3
 21662  000D84  EC06  F037         	call	_lcd_set_com_seg
 21663  000D88  0012               	return	
 21664  000D8A                     l14924:
 21665  000D8A  0E00               	movlw	0
 21666  000D8C  0100               	movlb	0	; () banked
 21667  000D8E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21668  000D90  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21669  000D94  0E03               	movlw	3
 21670  000D96  EC06  F037         	call	_lcd_set_com_seg
 21671  000D9A  0012               	return	
 21672  000D9C                     l14926:
 21673  000D9C  0E00               	movlw	0
 21674  000D9E  0100               	movlb	0	; () banked
 21675  000DA0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21676  000DA2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21677  000DA6  0E02               	movlw	2
 21678  000DA8  EC06  F037         	call	_lcd_set_com_seg
 21679  000DAC  0012               	return	
 21680  000DAE                     l14928:
 21681  000DAE  0E00               	movlw	0
 21682  000DB0  0100               	movlb	0	; () banked
 21683  000DB2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21684  000DB4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21685  000DB8  0E01               	movlw	1
 21686  000DBA  EC06  F037         	call	_lcd_set_com_seg
 21687  000DBE  0012               	return	
 21688  000DC0                     l14930:
 21689  000DC0  0E00               	movlw	0
 21690  000DC2  0100               	movlb	0	; () banked
 21691  000DC4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21692  000DC6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21693  000DCA  0E00               	movlw	0
 21694  000DCC  EC06  F037         	call	_lcd_set_com_seg
 21695  000DD0  0012               	return	
 21696  000DD2                     l14932:
 21697  000DD2  0E01               	movlw	1
 21698  000DD4  0100               	movlb	0	; () banked
 21699  000DD6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21700  000DD8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21701  000DDC  0E00               	movlw	0
 21702  000DDE  EC06  F037         	call	_lcd_set_com_seg
 21703  000DE2  0012               	return	
 21704  000DE4                     l14934:
 21705  000DE4  0E01               	movlw	1
 21706  000DE6  0100               	movlb	0	; () banked
 21707  000DE8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21708  000DEA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21709  000DEE  0E01               	movlw	1
 21710  000DF0  EC06  F037         	call	_lcd_set_com_seg
 21711  000DF4  0012               	return	
 21712  000DF6                     l14936:
 21713  000DF6  0E01               	movlw	1
 21714  000DF8  0100               	movlb	0	; () banked
 21715  000DFA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21716  000DFC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21717  000E00  0E02               	movlw	2
 21718  000E02  EC06  F037         	call	_lcd_set_com_seg
 21719  000E06  0012               	return	
 21720  000E08                     l14938:
 21721  000E08  0E01               	movlw	1
 21722  000E0A  0100               	movlb	0	; () banked
 21723  000E0C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21724  000E0E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21725  000E12  0E03               	movlw	3
 21726  000E14  EC06  F037         	call	_lcd_set_com_seg
 21727  000E18  0012               	return	
 21728  000E1A                     l14940:
 21729  000E1A  0E02               	movlw	2
 21730  000E1C  0100               	movlb	0	; () banked
 21731  000E1E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21732  000E20  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21733  000E24  0E03               	movlw	3
 21734  000E26  EC06  F037         	call	_lcd_set_com_seg
 21735  000E2A  0012               	return	
 21736  000E2C                     l14942:
 21737  000E2C  0E02               	movlw	2
 21738  000E2E  0100               	movlb	0	; () banked
 21739  000E30  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21740  000E32  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21741  000E36  0E02               	movlw	2
 21742  000E38  EC06  F037         	call	_lcd_set_com_seg
 21743  000E3C  0012               	return	
 21744  000E3E                     l14944:
 21745  000E3E  0E02               	movlw	2
 21746  000E40  0100               	movlb	0	; () banked
 21747  000E42  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21748  000E44  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21749  000E48  0E01               	movlw	1
 21750  000E4A  EC06  F037         	call	_lcd_set_com_seg
 21751  000E4E  0012               	return	
 21752  000E50                     l14946:
 21753  000E50  0E02               	movlw	2
 21754  000E52  0100               	movlb	0	; () banked
 21755  000E54  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21756  000E56  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21757  000E5A  0E00               	movlw	0
 21758  000E5C  EC06  F037         	call	_lcd_set_com_seg
 21759  000E60  0012               	return	
 21760  000E62                     l14948:
 21761  000E62  0E03               	movlw	3
 21762  000E64  0100               	movlb	0	; () banked
 21763  000E66  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21764  000E68  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21765  000E6C  0E00               	movlw	0
 21766  000E6E  EC06  F037         	call	_lcd_set_com_seg
 21767  000E72  0012               	return	
 21768  000E74                     l14950:
 21769  000E74  0E03               	movlw	3
 21770  000E76  0100               	movlb	0	; () banked
 21771  000E78  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21772  000E7A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21773  000E7E  0E01               	movlw	1
 21774  000E80  EC06  F037         	call	_lcd_set_com_seg
 21775  000E84  0012               	return	
 21776  000E86                     l14952:
 21777  000E86  0E03               	movlw	3
 21778  000E88  0100               	movlb	0	; () banked
 21779  000E8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21780  000E8C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21781  000E90  0E02               	movlw	2
 21782  000E92  EC06  F037         	call	_lcd_set_com_seg
 21783  000E96  0012               	return	
 21784  000E98                     l14954:
 21785  000E98  0E03               	movlw	3
 21786  000E9A  0100               	movlb	0	; () banked
 21787  000E9C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21788  000E9E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21789  000EA2  0E03               	movlw	3
 21790  000EA4  EC06  F037         	call	_lcd_set_com_seg
 21791  000EA8  0012               	return	
 21792  000EAA                     l14956:
 21793  000EAA  0E04               	movlw	4
 21794  000EAC  0100               	movlb	0	; () banked
 21795  000EAE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21796  000EB0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21797  000EB4  0E03               	movlw	3
 21798  000EB6  EC06  F037         	call	_lcd_set_com_seg
 21799  000EBA  0012               	return	
 21800  000EBC                     l14958:
 21801  000EBC  0E04               	movlw	4
 21802  000EBE  0100               	movlb	0	; () banked
 21803  000EC0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21804  000EC2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21805  000EC6  0E02               	movlw	2
 21806  000EC8  EC06  F037         	call	_lcd_set_com_seg
 21807  000ECC  0012               	return	
 21808  000ECE                     l14960:
 21809  000ECE  0E04               	movlw	4
 21810  000ED0  0100               	movlb	0	; () banked
 21811  000ED2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21812  000ED4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21813  000ED8  0E01               	movlw	1
 21814  000EDA  EC06  F037         	call	_lcd_set_com_seg
 21815  000EDE  0012               	return	
 21816  000EE0                     l14962:
 21817  000EE0  0E04               	movlw	4
 21818  000EE2  0100               	movlb	0	; () banked
 21819  000EE4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21820  000EE6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21821  000EEA  0E00               	movlw	0
 21822  000EEC  EC06  F037         	call	_lcd_set_com_seg
 21823  000EF0  0012               	return	
 21824  000EF2                     l14964:
 21825  000EF2  0E05               	movlw	5
 21826  000EF4  0100               	movlb	0	; () banked
 21827  000EF6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21828  000EF8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21829  000EFC  0E00               	movlw	0
 21830  000EFE  EC06  F037         	call	_lcd_set_com_seg
 21831  000F02  0012               	return	
 21832  000F04                     l14966:
 21833  000F04  0E05               	movlw	5
 21834  000F06  0100               	movlb	0	; () banked
 21835  000F08  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21836  000F0A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21837  000F0E  0E01               	movlw	1
 21838  000F10  EC06  F037         	call	_lcd_set_com_seg
 21839  000F14  0012               	return	
 21840  000F16                     l14968:
 21841  000F16  0E05               	movlw	5
 21842  000F18  0100               	movlb	0	; () banked
 21843  000F1A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21844  000F1C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21845  000F20  0E02               	movlw	2
 21846  000F22  EC06  F037         	call	_lcd_set_com_seg
 21847  000F26  0012               	return	
 21848  000F28                     l14970:
 21849  000F28  0E05               	movlw	5
 21850  000F2A  0100               	movlb	0	; () banked
 21851  000F2C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21852  000F2E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21853  000F32  0E03               	movlw	3
 21854  000F34  EC06  F037         	call	_lcd_set_com_seg
 21855  000F38  0012               	return	
 21856  000F3A                     l14972:
 21857  000F3A  0E06               	movlw	6
 21858  000F3C  0100               	movlb	0	; () banked
 21859  000F3E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21860  000F40  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21861  000F44  0E03               	movlw	3
 21862  000F46  EC06  F037         	call	_lcd_set_com_seg
 21863  000F4A  0012               	return	
 21864  000F4C                     l14974:
 21865  000F4C  0E06               	movlw	6
 21866  000F4E  0100               	movlb	0	; () banked
 21867  000F50  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21868  000F52  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21869  000F56  0E02               	movlw	2
 21870  000F58  EC06  F037         	call	_lcd_set_com_seg
 21871  000F5C  0012               	return	
 21872  000F5E                     l14976:
 21873  000F5E  0E06               	movlw	6
 21874  000F60  0100               	movlb	0	; () banked
 21875  000F62  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21876  000F64  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21877  000F68  0E01               	movlw	1
 21878  000F6A  EC06  F037         	call	_lcd_set_com_seg
 21879  000F6E  0012               	return	
 21880  000F70                     l14978:
 21881  000F70  0E06               	movlw	6
 21882  000F72  0100               	movlb	0	; () banked
 21883  000F74  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21884  000F76  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21885  000F7A  0E00               	movlw	0
 21886  000F7C  EC06  F037         	call	_lcd_set_com_seg
 21887  000F80  0012               	return	
 21888  000F82                     l14980:
 21889  000F82  0E07               	movlw	7
 21890  000F84  0100               	movlb	0	; () banked
 21891  000F86  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21892  000F88  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21893  000F8C  0E00               	movlw	0
 21894  000F8E  EC06  F037         	call	_lcd_set_com_seg
 21895  000F92  0012               	return	
 21896  000F94                     l14982:
 21897  000F94  0E07               	movlw	7
 21898  000F96  0100               	movlb	0	; () banked
 21899  000F98  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21900  000F9A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21901  000F9E  0E01               	movlw	1
 21902  000FA0  EC06  F037         	call	_lcd_set_com_seg
 21903  000FA4  0012               	return	
 21904  000FA6                     l14984:
 21905  000FA6  0E07               	movlw	7
 21906  000FA8  0100               	movlb	0	; () banked
 21907  000FAA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21908  000FAC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21909  000FB0  0E02               	movlw	2
 21910  000FB2  EC06  F037         	call	_lcd_set_com_seg
 21911  000FB6  0012               	return	
 21912  000FB8                     l14986:
 21913  000FB8  0E07               	movlw	7
 21914  000FBA  0100               	movlb	0	; () banked
 21915  000FBC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21916  000FBE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21917  000FC2  0E03               	movlw	3
 21918  000FC4  EC06  F037         	call	_lcd_set_com_seg
 21919  000FC8  0012               	return	
 21920  000FCA                     l14988:
 21921  000FCA  0E21               	movlw	33
 21922  000FCC  0100               	movlb	0	; () banked
 21923  000FCE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21924  000FD0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21925  000FD4  0E03               	movlw	3
 21926  000FD6  EC06  F037         	call	_lcd_set_com_seg
 21927  000FDA  0012               	return	
 21928  000FDC                     l14990:
 21929  000FDC  0E21               	movlw	33
 21930  000FDE  0100               	movlb	0	; () banked
 21931  000FE0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21932  000FE2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21933  000FE6  0E02               	movlw	2
 21934  000FE8  EC06  F037         	call	_lcd_set_com_seg
 21935  000FEC  0012               	return	
 21936  000FEE                     l14992:
 21937  000FEE  0E21               	movlw	33
 21938  000FF0  0100               	movlb	0	; () banked
 21939  000FF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21940  000FF4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21941  000FF8  0E01               	movlw	1
 21942  000FFA  EC06  F037         	call	_lcd_set_com_seg
 21943  000FFE  0012               	return	
 21944  001000                     l14994:
 21945  001000  0E21               	movlw	33
 21946  001002  0100               	movlb	0	; () banked
 21947  001004  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21948  001006  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21949  00100A  0E00               	movlw	0
 21950  00100C  EC06  F037         	call	_lcd_set_com_seg
 21951  001010  0012               	return	
 21952  001012                     l14996:
 21953  001012  0E22               	movlw	34
 21954  001014  0100               	movlb	0	; () banked
 21955  001016  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21956  001018  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21957  00101C  0E00               	movlw	0
 21958  00101E  EC06  F037         	call	_lcd_set_com_seg
 21959  001022  0012               	return	
 21960  001024                     l14998:
 21961  001024  0E22               	movlw	34
 21962  001026  0100               	movlb	0	; () banked
 21963  001028  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 21964  00102A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
 21965  00102E  0E01               	movlw	1
 21966  001030  EC06  F037         	call	_lcd_set_com_seg
 21967                           
 21968                           ;lcd.c: 116: }
 21969  001034  0012               	return	
 21970  001036                     l15002:
 21971  001036  0100               	movlb	0	; () banked
 21972  001038  5170               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
 21973                           
 21974                           ; Switch size 1, requested type "space"
 21975                           ; Number of cases is 50, Range of values is 0 to 49
 21976                           ; switch strategies available:
 21977                           ; Name         Instructions Cycles
 21978                           ; simple_byte          151    76 (average)
 21979                           ;	Chosen strategy is simple_byte
 21980  00103A  0A00               	xorlw	0	; case 0
 21981  00103C  B4D8               	btfsc	status,2,c
 21982  00103E  D639               	goto	l14900
 21983  001040  0A01               	xorlw	1	; case 1
 21984  001042  B4D8               	btfsc	status,2,c
 21985  001044  D63F               	goto	l14902
 21986  001046  0A03               	xorlw	3	; case 2
 21987  001048  B4D8               	btfsc	status,2,c
 21988  00104A  D645               	goto	l14904
 21989  00104C  0A01               	xorlw	1	; case 3
 21990  00104E  B4D8               	btfsc	status,2,c
 21991  001050  D64B               	goto	l14906
 21992  001052  0A07               	xorlw	7	; case 4
 21993  001054  B4D8               	btfsc	status,2,c
 21994  001056  D651               	goto	l14908
 21995  001058  0A01               	xorlw	1	; case 5
 21996  00105A  B4D8               	btfsc	status,2,c
 21997  00105C  D657               	goto	l14910
 21998  00105E  0A03               	xorlw	3	; case 6
 21999  001060  B4D8               	btfsc	status,2,c
 22000  001062  D65D               	goto	l14912
 22001  001064  0A01               	xorlw	1	; case 7
 22002  001066  B4D8               	btfsc	status,2,c
 22003  001068  D663               	goto	l14914
 22004  00106A  0A0F               	xorlw	15	; case 8
 22005  00106C  B4D8               	btfsc	status,2,c
 22006  00106E  D669               	goto	l14916
 22007  001070  0A01               	xorlw	1	; case 9
 22008  001072  B4D8               	btfsc	status,2,c
 22009  001074  D66F               	goto	l14918
 22010  001076  0A03               	xorlw	3	; case 10
 22011  001078  B4D8               	btfsc	status,2,c
 22012  00107A  D675               	goto	l14920
 22013  00107C  0A01               	xorlw	1	; case 11
 22014  00107E  B4D8               	btfsc	status,2,c
 22015  001080  D67B               	goto	l14922
 22016  001082  0A07               	xorlw	7	; case 12
 22017  001084  B4D8               	btfsc	status,2,c
 22018  001086  D681               	goto	l14924
 22019  001088  0A01               	xorlw	1	; case 13
 22020  00108A  B4D8               	btfsc	status,2,c
 22021  00108C  D687               	goto	l14926
 22022  00108E  0A03               	xorlw	3	; case 14
 22023  001090  B4D8               	btfsc	status,2,c
 22024  001092  D68D               	goto	l14928
 22025  001094  0A01               	xorlw	1	; case 15
 22026  001096  B4D8               	btfsc	status,2,c
 22027  001098  D693               	goto	l14930
 22028  00109A  0A1F               	xorlw	31	; case 16
 22029  00109C  B4D8               	btfsc	status,2,c
 22030  00109E  D699               	goto	l14932
 22031  0010A0  0A01               	xorlw	1	; case 17
 22032  0010A2  B4D8               	btfsc	status,2,c
 22033  0010A4  D69F               	goto	l14934
 22034  0010A6  0A03               	xorlw	3	; case 18
 22035  0010A8  B4D8               	btfsc	status,2,c
 22036  0010AA  D6A5               	goto	l14936
 22037  0010AC  0A01               	xorlw	1	; case 19
 22038  0010AE  B4D8               	btfsc	status,2,c
 22039  0010B0  D6AB               	goto	l14938
 22040  0010B2  0A07               	xorlw	7	; case 20
 22041  0010B4  B4D8               	btfsc	status,2,c
 22042  0010B6  D6B1               	goto	l14940
 22043  0010B8  0A01               	xorlw	1	; case 21
 22044  0010BA  B4D8               	btfsc	status,2,c
 22045  0010BC  D6B7               	goto	l14942
 22046  0010BE  0A03               	xorlw	3	; case 22
 22047  0010C0  B4D8               	btfsc	status,2,c
 22048  0010C2  D6BD               	goto	l14944
 22049  0010C4  0A01               	xorlw	1	; case 23
 22050  0010C6  B4D8               	btfsc	status,2,c
 22051  0010C8  D6C3               	goto	l14946
 22052  0010CA  0A0F               	xorlw	15	; case 24
 22053  0010CC  B4D8               	btfsc	status,2,c
 22054  0010CE  D6C9               	goto	l14948
 22055  0010D0  0A01               	xorlw	1	; case 25
 22056  0010D2  B4D8               	btfsc	status,2,c
 22057  0010D4  D6CF               	goto	l14950
 22058  0010D6  0A03               	xorlw	3	; case 26
 22059  0010D8  B4D8               	btfsc	status,2,c
 22060  0010DA  D6D5               	goto	l14952
 22061  0010DC  0A01               	xorlw	1	; case 27
 22062  0010DE  B4D8               	btfsc	status,2,c
 22063  0010E0  D6DB               	goto	l14954
 22064  0010E2  0A07               	xorlw	7	; case 28
 22065  0010E4  B4D8               	btfsc	status,2,c
 22066  0010E6  D6E1               	goto	l14956
 22067  0010E8  0A01               	xorlw	1	; case 29
 22068  0010EA  B4D8               	btfsc	status,2,c
 22069  0010EC  D6E7               	goto	l14958
 22070  0010EE  0A03               	xorlw	3	; case 30
 22071  0010F0  B4D8               	btfsc	status,2,c
 22072  0010F2  D6ED               	goto	l14960
 22073  0010F4  0A01               	xorlw	1	; case 31
 22074  0010F6  B4D8               	btfsc	status,2,c
 22075  0010F8  D6F3               	goto	l14962
 22076  0010FA  0A3F               	xorlw	63	; case 32
 22077  0010FC  B4D8               	btfsc	status,2,c
 22078  0010FE  D6F9               	goto	l14964
 22079  001100  0A01               	xorlw	1	; case 33
 22080  001102  B4D8               	btfsc	status,2,c
 22081  001104  D6FF               	goto	l14966
 22082  001106  0A03               	xorlw	3	; case 34
 22083  001108  B4D8               	btfsc	status,2,c
 22084  00110A  D705               	goto	l14968
 22085  00110C  0A01               	xorlw	1	; case 35
 22086  00110E  B4D8               	btfsc	status,2,c
 22087  001110  D70B               	goto	l14970
 22088  001112  0A07               	xorlw	7	; case 36
 22089  001114  B4D8               	btfsc	status,2,c
 22090  001116  D711               	goto	l14972
 22091  001118  0A01               	xorlw	1	; case 37
 22092  00111A  B4D8               	btfsc	status,2,c
 22093  00111C  D717               	goto	l14974
 22094  00111E  0A03               	xorlw	3	; case 38
 22095  001120  B4D8               	btfsc	status,2,c
 22096  001122  D71D               	goto	l14976
 22097  001124  0A01               	xorlw	1	; case 39
 22098  001126  B4D8               	btfsc	status,2,c
 22099  001128  D723               	goto	l14978
 22100  00112A  0A0F               	xorlw	15	; case 40
 22101  00112C  B4D8               	btfsc	status,2,c
 22102  00112E  D729               	goto	l14980
 22103  001130  0A01               	xorlw	1	; case 41
 22104  001132  B4D8               	btfsc	status,2,c
 22105  001134  D72F               	goto	l14982
 22106  001136  0A03               	xorlw	3	; case 42
 22107  001138  B4D8               	btfsc	status,2,c
 22108  00113A  D735               	goto	l14984
 22109  00113C  0A01               	xorlw	1	; case 43
 22110  00113E  B4D8               	btfsc	status,2,c
 22111  001140  D73B               	goto	l14986
 22112  001142  0A07               	xorlw	7	; case 44
 22113  001144  B4D8               	btfsc	status,2,c
 22114  001146  D741               	goto	l14988
 22115  001148  0A01               	xorlw	1	; case 45
 22116  00114A  B4D8               	btfsc	status,2,c
 22117  00114C  D747               	goto	l14990
 22118  00114E  0A03               	xorlw	3	; case 46
 22119  001150  B4D8               	btfsc	status,2,c
 22120  001152  D74D               	goto	l14992
 22121  001154  0A01               	xorlw	1	; case 47
 22122  001156  B4D8               	btfsc	status,2,c
 22123  001158  D753               	goto	l14994
 22124  00115A  0A1F               	xorlw	31	; case 48
 22125  00115C  B4D8               	btfsc	status,2,c
 22126  00115E  D759               	goto	l14996
 22127  001160  0A01               	xorlw	1	; case 49
 22128  001162  A4D8               	btfss	status,2,c
 22129  001164  0012               	return	
 22130  001166  D75E               	goto	l14998
 22131  001168                     __end_of_lcd_disp_level_bar:
 22132                           	opt stack 0
 22133                           tosu	equ	0xFFF
 22134                           tosh	equ	0xFFE
 22135                           tosl	equ	0xFFD
 22136                           pclath	equ	0xFFA
 22137                           tblptru	equ	0xFF8
 22138                           tblptrh	equ	0xFF7
 22139                           tblptrl	equ	0xFF6
 22140                           tablat	equ	0xFF5
 22141                           prodh	equ	0xFF4
 22142                           prodl	equ	0xFF3
 22143                           intcon	equ	0xFF2
 22144                           indf0	equ	0xFEF
 22145                           postinc0	equ	0xFEE
 22146                           fsr0h	equ	0xFEA
 22147                           fsr0l	equ	0xFE9
 22148                           wreg	equ	0xFE8
 22149                           indf1	equ	0xFE7
 22150                           postinc1	equ	0xFE6
 22151                           postdec1	equ	0xFE5
 22152                           plusw1	equ	0xFE3
 22153                           fsr1h	equ	0xFE2
 22154                           fsr1l	equ	0xFE1
 22155                           indf2	equ	0xFDF
 22156                           postinc2	equ	0xFDE
 22157                           postdec2	equ	0xFDD
 22158                           plusw2	equ	0xFDB
 22159                           fsr2h	equ	0xFDA
 22160                           fsr2l	equ	0xFD9
 22161                           status	equ	0xFD8
 22162                           
 22163 ;; *************** function ___int32_2_mflot32 *****************
 22164 ;; Defined at:
 22165 ;;		line 58 in file "src/api/ui.c"
 22166 ;; Parameters:    Size  Location     Type
 22167 ;;  x               4   13[BANK0 ] long 
 22168 ;; Auto vars:     Size  Location     Type
 22169 ;;  mf              4   25[BANK0 ] struct .
 22170 ;;  t32             4   21[BANK0 ] unsigned long 
 22171 ;; Return value:  Size  Location     Type
 22172 ;;                  4   13[BANK0 ] long 
 22173 ;; Registers used:
 22174 ;;		wreg, status,2, status,0, cstack
 22175 ;; Tracked objects:
 22176 ;;		On entry : 0/0
 22177 ;;		On exit  : 0/0
 22178 ;;		Unchanged: 0/0
 22179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22181 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22183 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22184 ;;Total ram usage:       16 bytes
 22185 ;; Hardware stack levels used:    1
 22186 ;; Hardware stack levels required when called:    5
 22187 ;; This function calls:
 22188 ;;		___lldiv
 22189 ;; This function is called by:
 22190 ;;		___enter_menu_set_density
 22191 ;;		___enter_menu_set_d
 22192 ;;		___enter_menu_set_h
 22193 ;;		___enter_menu_set_base_zero
 22194 ;;		___enter_menu_calib_press_diff
 22195 ;;		___enter_menu_calib_press
 22196 ;;		___enter_menu_warn_value
 22197 ;;		___enter_menu_epr_calib
 22198 ;;		___enter_menu_epr_ilp_scale
 22199 ;;		_ui_disp_menu_home
 22200 ;; This function uses a non-reentrant model
 22201 ;;
 22202                           
 22203                           	psect	text119
 22204  005FA2                     __ptext119:
 22205                           	opt stack 0
 22206  005FA2                     ___int32_2_mflot32:
 22207                           	opt stack 22
 22208                           
 22209                           ;ui.c: 60: st_float32 mf={0};
 22210                           
 22211                           ;incstack = 0
 22212  005FA2  C142  F079         	movff	___int32_2_mflot32@F7712,___int32_2_mflot32@mf
 22213  005FA6  C143  F07A         	movff	___int32_2_mflot32@F7712+1,___int32_2_mflot32@mf+1
 22214  005FAA  C144  F07B         	movff	___int32_2_mflot32@F7712+2,___int32_2_mflot32@mf+2
 22215  005FAE  C145  F07C         	movff	___int32_2_mflot32@F7712+3,___int32_2_mflot32@mf+3
 22216                           
 22217                           ;ui.c: 61: uint32_t t32;
 22218                           ;ui.c: 62: t32=x;
 22219  005FB2  C06D  F075         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
 22220  005FB6  C06E  F076         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
 22221  005FBA  C06F  F077         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
 22222  005FBE  C070  F078         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
 22223                           
 22224                           ;ui.c: 63: if(x<0){
 22225  005FC2  0100               	movlb	0	; () banked
 22226  005FC4  AF70               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
 22227  005FC6  D040               	goto	l14674
 22228                           
 22229                           ; BSR set to: 0
 22230                           ;ui.c: 64: t32 = ((~x) +1);
 22231  005FC8  C06D  F071         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
 22232  005FCC  C06E  F072         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
 22233  005FD0  C06F  F073         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
 22234  005FD4  C070  F074         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
 22235  005FD8  0100               	movlb	0	; () banked
 22236  005FDA  1F71               	comf	??___int32_2_mflot32& (0+255),f,b
 22237  005FDC  1F72               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
 22238  005FDE  1F73               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
 22239  005FE0  1F74               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
 22240  005FE2  2B71               	incf	??___int32_2_mflot32& (0+255),f,b
 22241  005FE4  0E00               	movlw	0
 22242  005FE6  2372               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
 22243  005FE8  2373               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
 22244  005FEA  2374               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
 22245  005FEC  C071  F075         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
 22246  005FF0  C072  F076         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
 22247  005FF4  C073  F077         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
 22248  005FF8  C074  F078         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;ui.c: 65: mf.stru.sign=1;
 22252  005FFC  0E01               	movlw	1
 22253  005FFE  0100               	movlb	0	; () banked
 22254  006000  6F7C               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;ui.c: 66: }
 22258                           ;ui.c: 67: while(t32>9999){
 22259  006002  D022               	goto	l14674
 22260  006004                     l14666:
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;ui.c: 68: mf.stru.exponent++;
 22264  006004  0100               	movlb	0	; () banked
 22265  006006  2B7B               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;ui.c: 69: t32/=10;
 22269  006008  C075  F060         	movff	___int32_2_mflot32@t32,___lldiv@dividend
 22270  00600C  C076  F061         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
 22271  006010  C077  F062         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
 22272  006014  C078  F063         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
 22273  006018  0E0A               	movlw	10
 22274  00601A  0100               	movlb	0	; () banked
 22275  00601C  6F64               	movwf	___lldiv@divisor& (0+255),b
 22276  00601E  0E00               	movlw	0
 22277  006020  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22278  006022  0E00               	movlw	0
 22279  006024  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22280  006026  0E00               	movlw	0
 22281  006028  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22282  00602A  EC4F  F039         	call	___lldiv	;wreg free
 22283  00602E  C060  F075         	movff	?___lldiv,___int32_2_mflot32@t32
 22284  006032  C061  F076         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
 22285  006036  C062  F077         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
 22286  00603A  C063  F078         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
 22287                           
 22288                           ;ui.c: 70: if( mf.stru.exponent>=3)break;
 22289  00603E  0E02               	movlw	2
 22290  006040  0100               	movlb	0	; () banked
 22291  006042  657B               	cpfsgt	(___int32_2_mflot32@mf+2)& (0+255),b
 22292  006044  D001               	goto	l14674
 22293  006046  D00D               	goto	l14676
 22294  006048                     l14674:
 22295                           
 22296                           ; BSR set to: 0
 22297  006048  0100               	movlb	0	; () banked
 22298  00604A  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 22299  00604C  0100               	movlb	0	; () banked
 22300  00604E  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 22301  006050  E1D9               	bnz	l14666
 22302  006052  0E10               	movlw	16
 22303  006054  0100               	movlb	0	; () banked
 22304  006056  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 22305  006058  0E27               	movlw	39
 22306  00605A  0100               	movlb	0	; () banked
 22307  00605C  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 22308  00605E  B0D8               	btfsc	status,0,c
 22309  006060  D7D1               	goto	l14666
 22310  006062                     l14676:
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;ui.c: 71: }
 22314                           ;ui.c: 72: if(t32>9999)t32=9999;
 22315  006062  0100               	movlb	0	; () banked
 22316  006064  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
 22317  006066  0100               	movlb	0	; () banked
 22318  006068  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
 22319  00606A  E108               	bnz	u13570
 22320  00606C  0E10               	movlw	16
 22321  00606E  0100               	movlb	0	; () banked
 22322  006070  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
 22323  006072  0E27               	movlw	39
 22324  006074  0100               	movlb	0	; () banked
 22325  006076  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
 22326  006078  A0D8               	btfss	status,0,c
 22327  00607A  D009               	goto	l14680
 22328  00607C                     u13570:
 22329                           
 22330                           ; BSR set to: 0
 22331  00607C  0E0F               	movlw	15
 22332  00607E  0100               	movlb	0	; () banked
 22333  006080  6F75               	movwf	___int32_2_mflot32@t32& (0+255),b
 22334  006082  0E27               	movlw	39
 22335  006084  6F76               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
 22336  006086  0E00               	movlw	0
 22337  006088  6F77               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
 22338  00608A  0E00               	movlw	0
 22339  00608C  6F78               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
 22340  00608E                     l14680:
 22341                           
 22342                           ; BSR set to: 0
 22343                           ;ui.c: 73: mf.stru.significand=t32;
 22344  00608E  C075  F079         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
 22345  006092  C076  F07A         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;ui.c: 74: return mf.t32;
 22349  006096  C079  F06D         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
 22350  00609A  C07A  F06E         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
 22351  00609E  C07B  F06F         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
 22352  0060A2  C07C  F070         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
 22353  0060A6  0012               	return	
 22354  0060A8                     __end_of___int32_2_mflot32:
 22355                           	opt stack 0
 22356                           tosu	equ	0xFFF
 22357                           tosh	equ	0xFFE
 22358                           tosl	equ	0xFFD
 22359                           pclath	equ	0xFFA
 22360                           tblptru	equ	0xFF8
 22361                           tblptrh	equ	0xFF7
 22362                           tblptrl	equ	0xFF6
 22363                           tablat	equ	0xFF5
 22364                           prodh	equ	0xFF4
 22365                           prodl	equ	0xFF3
 22366                           intcon	equ	0xFF2
 22367                           indf0	equ	0xFEF
 22368                           postinc0	equ	0xFEE
 22369                           fsr0h	equ	0xFEA
 22370                           fsr0l	equ	0xFE9
 22371                           wreg	equ	0xFE8
 22372                           indf1	equ	0xFE7
 22373                           postinc1	equ	0xFE6
 22374                           postdec1	equ	0xFE5
 22375                           plusw1	equ	0xFE3
 22376                           fsr1h	equ	0xFE2
 22377                           fsr1l	equ	0xFE1
 22378                           indf2	equ	0xFDF
 22379                           postinc2	equ	0xFDE
 22380                           postdec2	equ	0xFDD
 22381                           plusw2	equ	0xFDB
 22382                           fsr2h	equ	0xFDA
 22383                           fsr2l	equ	0xFD9
 22384                           status	equ	0xFD8
 22385                           
 22386 ;; *************** function ___lldiv *****************
 22387 ;; Defined at:
 22388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
 22389 ;; Parameters:    Size  Location     Type
 22390 ;;  dividend        4    0[BANK0 ] unsigned long 
 22391 ;;  divisor         4    4[BANK0 ] unsigned long 
 22392 ;; Auto vars:     Size  Location     Type
 22393 ;;  quotient        4    8[BANK0 ] unsigned long 
 22394 ;;  counter         1   12[BANK0 ] unsigned char 
 22395 ;; Return value:  Size  Location     Type
 22396 ;;                  4    0[BANK0 ] unsigned long 
 22397 ;; Registers used:
 22398 ;;		wreg, status,2, status,0
 22399 ;; Tracked objects:
 22400 ;;		On entry : 0/0
 22401 ;;		On exit  : 0/0
 22402 ;;		Unchanged: 0/0
 22403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22404 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22405 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22407 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22408 ;;Total ram usage:       13 bytes
 22409 ;; Hardware stack levels used:    1
 22410 ;; Hardware stack levels required when called:    4
 22411 ;; This function calls:
 22412 ;;		Nothing
 22413 ;; This function is called by:
 22414 ;;		___int32_2_mflot32
 22415 ;; This function uses a non-reentrant model
 22416 ;;
 22417                           
 22418                           	psect	text120
 22419  00729E                     __ptext120:
 22420                           	opt stack 0
 22421  00729E                     ___lldiv:
 22422                           	opt stack 22
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;incstack = 0
 22426  00729E  0E00               	movlw	0
 22427  0072A0  0100               	movlb	0	; () banked
 22428  0072A2  6F68               	movwf	___lldiv@quotient& (0+255),b
 22429  0072A4  0E00               	movlw	0
 22430  0072A6  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 22431  0072A8  0E00               	movlw	0
 22432  0072AA  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 22433  0072AC  0E00               	movlw	0
 22434  0072AE  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 22435                           
 22436                           ; BSR set to: 0
 22437  0072B0  0100               	movlb	0	; () banked
 22438  0072B2  5164               	movf	___lldiv@divisor& (0+255),w,b
 22439  0072B4  0100               	movlb	0	; () banked
 22440  0072B6  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 22441  0072B8  0100               	movlb	0	; () banked
 22442  0072BA  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 22443  0072BC  0100               	movlb	0	; () banked
 22444  0072BE  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 22445  0072C0  B4D8               	btfsc	status,2,c
 22446  0072C2  D042               	goto	l2770
 22447                           
 22448                           ; BSR set to: 0
 22449  0072C4  0E01               	movlw	1
 22450  0072C6  0100               	movlb	0	; () banked
 22451  0072C8  6F6C               	movwf	___lldiv@counter& (0+255),b
 22452  0072CA  D008               	goto	l14286
 22453  0072CC                     l14284:
 22454                           
 22455                           ; BSR set to: 0
 22456  0072CC  0100               	movlb	0	; () banked
 22457  0072CE  90D8               	bcf	status,0,c
 22458  0072D0  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 22459  0072D2  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 22460  0072D4  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 22461  0072D6  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 22462  0072D8  0100               	movlb	0	; () banked
 22463  0072DA  2B6C               	incf	___lldiv@counter& (0+255),f,b
 22464  0072DC                     l14286:
 22465                           
 22466                           ; BSR set to: 0
 22467  0072DC  0100               	movlb	0	; () banked
 22468  0072DE  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 22469  0072E0  D7F5               	goto	l14284
 22470  0072E2                     l14288:
 22471                           
 22472                           ; BSR set to: 0
 22473  0072E2  0100               	movlb	0	; () banked
 22474  0072E4  90D8               	bcf	status,0,c
 22475  0072E6  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 22476  0072E8  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 22477  0072EA  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 22478  0072EC  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 22479                           
 22480                           ; BSR set to: 0
 22481  0072EE  0100               	movlb	0	; () banked
 22482  0072F0  5164               	movf	___lldiv@divisor& (0+255),w,b
 22483  0072F2  0100               	movlb	0	; () banked
 22484  0072F4  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 22485  0072F6  0100               	movlb	0	; () banked
 22486  0072F8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22487  0072FA  0100               	movlb	0	; () banked
 22488  0072FC  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 22489  0072FE  0100               	movlb	0	; () banked
 22490  007300  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22491  007302  0100               	movlb	0	; () banked
 22492  007304  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 22493  007306  0100               	movlb	0	; () banked
 22494  007308  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22495  00730A  0100               	movlb	0	; () banked
 22496  00730C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 22497  00730E  A0D8               	btfss	status,0,c
 22498  007310  D012               	goto	l14296
 22499                           
 22500                           ; BSR set to: 0
 22501  007312  0100               	movlb	0	; () banked
 22502  007314  5164               	movf	___lldiv@divisor& (0+255),w,b
 22503  007316  0100               	movlb	0	; () banked
 22504  007318  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 22505  00731A  0100               	movlb	0	; () banked
 22506  00731C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22507  00731E  0100               	movlb	0	; () banked
 22508  007320  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 22509  007322  0100               	movlb	0	; () banked
 22510  007324  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22511  007326  0100               	movlb	0	; () banked
 22512  007328  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 22513  00732A  0100               	movlb	0	; () banked
 22514  00732C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22515  00732E  0100               	movlb	0	; () banked
 22516  007330  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 22517                           
 22518                           ; BSR set to: 0
 22519  007332  0100               	movlb	0	; () banked
 22520  007334  8168               	bsf	___lldiv@quotient& (0+255),0,b
 22521  007336                     l14296:
 22522                           
 22523                           ; BSR set to: 0
 22524  007336  0100               	movlb	0	; () banked
 22525  007338  90D8               	bcf	status,0,c
 22526  00733A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 22527  00733C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 22528  00733E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 22529  007340  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 22530                           
 22531                           ; BSR set to: 0
 22532  007342  0100               	movlb	0	; () banked
 22533  007344  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 22534  007346  D7CD               	goto	l14288
 22535  007348                     l2770:
 22536                           
 22537                           ; BSR set to: 0
 22538  007348  C068  F060         	movff	___lldiv@quotient,?___lldiv
 22539  00734C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 22540  007350  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 22541  007354  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 22542                           
 22543                           ; BSR set to: 0
 22544  007358  0012               	return		;funcret
 22545  00735A                     __end_of___lldiv:
 22546                           	opt stack 0
 22547                           tosu	equ	0xFFF
 22548                           tosh	equ	0xFFE
 22549                           tosl	equ	0xFFD
 22550                           pclath	equ	0xFFA
 22551                           tblptru	equ	0xFF8
 22552                           tblptrh	equ	0xFF7
 22553                           tblptrl	equ	0xFF6
 22554                           tablat	equ	0xFF5
 22555                           prodh	equ	0xFF4
 22556                           prodl	equ	0xFF3
 22557                           intcon	equ	0xFF2
 22558                           indf0	equ	0xFEF
 22559                           postinc0	equ	0xFEE
 22560                           fsr0h	equ	0xFEA
 22561                           fsr0l	equ	0xFE9
 22562                           wreg	equ	0xFE8
 22563                           indf1	equ	0xFE7
 22564                           postinc1	equ	0xFE6
 22565                           postdec1	equ	0xFE5
 22566                           plusw1	equ	0xFE3
 22567                           fsr1h	equ	0xFE2
 22568                           fsr1l	equ	0xFE1
 22569                           indf2	equ	0xFDF
 22570                           postinc2	equ	0xFDE
 22571                           postdec2	equ	0xFDD
 22572                           plusw2	equ	0xFDB
 22573                           fsr2h	equ	0xFDA
 22574                           fsr2l	equ	0xFD9
 22575                           status	equ	0xFD8
 22576                           
 22577 ;; *************** function _ui_disp_menu_epr_ilp_scale_adj *****************
 22578 ;; Defined at:
 22579 ;;		line 719 in file "src/api/ui.c"
 22580 ;; Parameters:    Size  Location     Type
 22581 ;;		None
 22582 ;; Auto vars:     Size  Location     Type
 22583 ;;  buf             6   42[BANK0 ] unsigned char [6]
 22584 ;; Return value:  Size  Location     Type
 22585 ;;                  1    wreg      void 
 22586 ;; Registers used:
 22587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22588 ;; Tracked objects:
 22589 ;;		On entry : 0/0
 22590 ;;		On exit  : 0/0
 22591 ;;		Unchanged: 0/0
 22592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22594 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22596 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22597 ;;Total ram usage:        6 bytes
 22598 ;; Hardware stack levels used:    1
 22599 ;; Hardware stack levels required when called:   10
 22600 ;; This function calls:
 22601 ;;		_lcd_disp_all
 22602 ;;		_lcd_disp_logo
 22603 ;;		_m_mem_cpy
 22604 ;;		_ui_disp_adj_xfloat_pt
 22605 ;; This function is called by:
 22606 ;;		_ui_disp_menu
 22607 ;; This function uses a non-reentrant model
 22608 ;;
 22609                           
 22610                           	psect	text121
 22611  006F9C                     __ptext121:
 22612                           	opt stack 0
 22613  006F9C                     _ui_disp_menu_epr_ilp_scale_adj:
 22614                           	opt stack 18
 22615                           
 22616                           ;ui.c: 721: uint8_t buf[6];
 22617                           ;ui.c: 722: lcd_disp_all(0x00);;
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;incstack = 0
 22621  006F9C  0E00               	movlw	0
 22622  006F9E  EC28  F04F         	call	_lcd_disp_all
 22623                           
 22624                           ;ui.c: 723: lcd_disp_logo(1);
 22625  006FA2  0E01               	movlw	1
 22626  006FA4  EC10  F04F         	call	_lcd_disp_logo
 22627                           
 22628                           ;ui.c: 724: switch(subMenu){
 22629  006FA8  D03C               	goto	l16480
 22630  006FAA                     l16470:
 22631  006FAA  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22632  006FAC  0100               	movlb	0	; () banked
 22633  006FAE  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22634  006FB0  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22635  006FB2  0100               	movlb	0	; () banked
 22636  006FB4  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22637  006FB6  0EDC               	movlw	low STR_27
 22638  006FB8  0100               	movlb	0	; () banked
 22639  006FBA  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22640  006FBC  0EF3               	movlw	high STR_27
 22641  006FBE  0100               	movlb	0	; () banked
 22642  006FC0  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22643  006FC2  EC94  F045         	call	_m_mem_cpy	;wreg free
 22644  006FC6  D03B               	goto	l16482
 22645  006FC8                     l16472:
 22646  006FC8  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22647  006FCA  0100               	movlb	0	; () banked
 22648  006FCC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22649  006FCE  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22650  006FD0  0100               	movlb	0	; () banked
 22651  006FD2  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22652  006FD4  0EAF               	movlw	low STR_28
 22653  006FD6  0100               	movlb	0	; () banked
 22654  006FD8  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22655  006FDA  0EF3               	movlw	high STR_28
 22656  006FDC  0100               	movlb	0	; () banked
 22657  006FDE  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22658  006FE0  EC94  F045         	call	_m_mem_cpy	;wreg free
 22659  006FE4  D02C               	goto	l16482
 22660  006FE6                     l16474:
 22661  006FE6  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22662  006FE8  0100               	movlb	0	; () banked
 22663  006FEA  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22664  006FEC  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22665  006FEE  0100               	movlb	0	; () banked
 22666  006FF0  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22667  006FF2  0EE1               	movlw	low STR_29
 22668  006FF4  0100               	movlb	0	; () banked
 22669  006FF6  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22670  006FF8  0EF3               	movlw	high STR_29
 22671  006FFA  0100               	movlb	0	; () banked
 22672  006FFC  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22673  006FFE  EC94  F045         	call	_m_mem_cpy	;wreg free
 22674  007002  D01D               	goto	l16482
 22675  007004                     l16476:
 22676  007004  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22677  007006  0100               	movlb	0	; () banked
 22678  007008  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22679  00700A  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22680  00700C  0100               	movlb	0	; () banked
 22681  00700E  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22682  007010  0EB4               	movlw	low STR_30
 22683  007012  0100               	movlb	0	; () banked
 22684  007014  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22685  007016  0EF3               	movlw	high STR_30
 22686  007018  0100               	movlb	0	; () banked
 22687  00701A  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22688  00701C  EC94  F045         	call	_m_mem_cpy	;wreg free
 22689  007020  D00E               	goto	l16482
 22690  007022                     l16480:
 22691  007022  5032               	movf	_subMenu,w,c	;volatile
 22692                           
 22693                           ; Switch size 1, requested type "space"
 22694                           ; Number of cases is 4, Range of values is 0 to 3
 22695                           ; switch strategies available:
 22696                           ; Name         Instructions Cycles
 22697                           ; simple_byte           13     7 (average)
 22698                           ;	Chosen strategy is simple_byte
 22699  007024  0A00               	xorlw	0	; case 0
 22700  007026  B4D8               	btfsc	status,2,c
 22701  007028  D7C0               	goto	l16470
 22702  00702A  0A01               	xorlw	1	; case 1
 22703  00702C  B4D8               	btfsc	status,2,c
 22704  00702E  D7CC               	goto	l16472
 22705  007030  0A03               	xorlw	3	; case 2
 22706  007032  B4D8               	btfsc	status,2,c
 22707  007034  D7D8               	goto	l16474
 22708  007036  0A01               	xorlw	1	; case 3
 22709  007038  A4D8               	btfss	status,2,c
 22710  00703A  0012               	return	
 22711  00703C  D7E3               	goto	l16476
 22712  00703E                     l16482:
 22713                           
 22714                           ;ui.c: 731: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 22715  00703E  0E8A               	movlw	low ui_disp_menu_epr_ilp_scale_adj@buf
 22716  007040  0100               	movlb	0	; () banked
 22717  007042  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22718  007044  0E00               	movlw	high ui_disp_menu_epr_ilp_scale_adj@buf
 22719  007046  0100               	movlb	0	; () banked
 22720  007048  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22721  00704A  0E35               	movlw	low _m_floatAdj
 22722  00704C  0100               	movlb	0	; () banked
 22723  00704E  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22724  007050  0E00               	movlw	high _m_floatAdj
 22725  007052  0100               	movlb	0	; () banked
 22726  007054  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22727  007056  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22728  00705A  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22729  00705E  0012               	return		;funcret
 22730  007060                     __end_of_ui_disp_menu_epr_ilp_scale_adj:
 22731                           	opt stack 0
 22732                           tosu	equ	0xFFF
 22733                           tosh	equ	0xFFE
 22734                           tosl	equ	0xFFD
 22735                           pclath	equ	0xFFA
 22736                           tblptru	equ	0xFF8
 22737                           tblptrh	equ	0xFF7
 22738                           tblptrl	equ	0xFF6
 22739                           tablat	equ	0xFF5
 22740                           prodh	equ	0xFF4
 22741                           prodl	equ	0xFF3
 22742                           intcon	equ	0xFF2
 22743                           indf0	equ	0xFEF
 22744                           postinc0	equ	0xFEE
 22745                           fsr0h	equ	0xFEA
 22746                           fsr0l	equ	0xFE9
 22747                           wreg	equ	0xFE8
 22748                           indf1	equ	0xFE7
 22749                           postinc1	equ	0xFE6
 22750                           postdec1	equ	0xFE5
 22751                           plusw1	equ	0xFE3
 22752                           fsr1h	equ	0xFE2
 22753                           fsr1l	equ	0xFE1
 22754                           indf2	equ	0xFDF
 22755                           postinc2	equ	0xFDE
 22756                           postdec2	equ	0xFDD
 22757                           plusw2	equ	0xFDB
 22758                           fsr2h	equ	0xFDA
 22759                           fsr2l	equ	0xFD9
 22760                           status	equ	0xFD8
 22761                           
 22762 ;; *************** function _ui_disp_menu_epr_calib_adj *****************
 22763 ;; Defined at:
 22764 ;;		line 704 in file "src/api/ui.c"
 22765 ;; Parameters:    Size  Location     Type
 22766 ;;		None
 22767 ;; Auto vars:     Size  Location     Type
 22768 ;;  buf             6   42[BANK0 ] unsigned char [6]
 22769 ;; Return value:  Size  Location     Type
 22770 ;;                  1    wreg      void 
 22771 ;; Registers used:
 22772 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22773 ;; Tracked objects:
 22774 ;;		On entry : 0/0
 22775 ;;		On exit  : 0/0
 22776 ;;		Unchanged: 0/0
 22777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22779 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22781 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22782 ;;Total ram usage:        6 bytes
 22783 ;; Hardware stack levels used:    1
 22784 ;; Hardware stack levels required when called:   10
 22785 ;; This function calls:
 22786 ;;		_lcd_disp_all
 22787 ;;		_lcd_disp_logo
 22788 ;;		_m_mem_cpy
 22789 ;;		_ui_disp_adj_xfloat_pt
 22790 ;; This function is called by:
 22791 ;;		_ui_disp_menu
 22792 ;; This function uses a non-reentrant model
 22793 ;;
 22794                           
 22795                           	psect	text122
 22796  007060                     __ptext122:
 22797                           	opt stack 0
 22798  007060                     _ui_disp_menu_epr_calib_adj:
 22799                           	opt stack 18
 22800                           
 22801                           ;ui.c: 706: uint8_t buf[6];
 22802                           ;ui.c: 707: lcd_disp_all(0x00);;
 22803                           
 22804                           ;incstack = 0
 22805  007060  0E00               	movlw	0
 22806  007062  EC28  F04F         	call	_lcd_disp_all
 22807                           
 22808                           ;ui.c: 708: lcd_disp_logo(1);
 22809  007066  0E01               	movlw	1
 22810  007068  EC10  F04F         	call	_lcd_disp_logo
 22811                           
 22812                           ;ui.c: 709: switch(subMenu){
 22813  00706C  D03C               	goto	l16464
 22814  00706E                     l16454:
 22815  00706E  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22816  007070  0100               	movlb	0	; () banked
 22817  007072  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22818  007074  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22819  007076  0100               	movlb	0	; () banked
 22820  007078  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22821  00707A  0E91               	movlw	low STR_23
 22822  00707C  0100               	movlb	0	; () banked
 22823  00707E  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22824  007080  0EF3               	movlw	high STR_23
 22825  007082  0100               	movlb	0	; () banked
 22826  007084  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22827  007086  EC94  F045         	call	_m_mem_cpy	;wreg free
 22828  00708A  D03A               	goto	l16466
 22829  00708C                     l16456:
 22830  00708C  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22831  00708E  0100               	movlb	0	; () banked
 22832  007090  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22833  007092  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22834  007094  0100               	movlb	0	; () banked
 22835  007096  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22836  007098  0EA0               	movlw	low STR_24
 22837  00709A  0100               	movlb	0	; () banked
 22838  00709C  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22839  00709E  0EF3               	movlw	high STR_24
 22840  0070A0  0100               	movlb	0	; () banked
 22841  0070A2  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22842  0070A4  EC94  F045         	call	_m_mem_cpy	;wreg free
 22843  0070A8  D02B               	goto	l16466
 22844  0070AA                     l16458:
 22845  0070AA  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22846  0070AC  0100               	movlb	0	; () banked
 22847  0070AE  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22848  0070B0  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22849  0070B2  0100               	movlb	0	; () banked
 22850  0070B4  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22851  0070B6  0E96               	movlw	low STR_25
 22852  0070B8  0100               	movlb	0	; () banked
 22853  0070BA  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22854  0070BC  0EF3               	movlw	high STR_25
 22855  0070BE  0100               	movlb	0	; () banked
 22856  0070C0  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22857  0070C2  EC94  F045         	call	_m_mem_cpy	;wreg free
 22858  0070C6  D01C               	goto	l16466
 22859  0070C8                     l16460:
 22860  0070C8  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22861  0070CA  0100               	movlb	0	; () banked
 22862  0070CC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 22863  0070CE  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22864  0070D0  0100               	movlb	0	; () banked
 22865  0070D2  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 22866  0070D4  0EA5               	movlw	low STR_26
 22867  0070D6  0100               	movlb	0	; () banked
 22868  0070D8  6F62               	movwf	m_mem_cpy@s& (0+255),b
 22869  0070DA  0EF3               	movlw	high STR_26
 22870  0070DC  0100               	movlb	0	; () banked
 22871  0070DE  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 22872  0070E0  EC94  F045         	call	_m_mem_cpy	;wreg free
 22873                           
 22874                           ;ui.c: 715: }
 22875                           
 22876                           ;ui.c: 714: default: break;
 22877  0070E4  D00D               	goto	l16466
 22878  0070E6                     l16464:
 22879  0070E6  5032               	movf	_subMenu,w,c	;volatile
 22880                           
 22881                           ; Switch size 1, requested type "space"
 22882                           ; Number of cases is 4, Range of values is 0 to 3
 22883                           ; switch strategies available:
 22884                           ; Name         Instructions Cycles
 22885                           ; simple_byte           13     7 (average)
 22886                           ;	Chosen strategy is simple_byte
 22887  0070E8  0A00               	xorlw	0	; case 0
 22888  0070EA  B4D8               	btfsc	status,2,c
 22889  0070EC  D7C0               	goto	l16454
 22890  0070EE  0A01               	xorlw	1	; case 1
 22891  0070F0  B4D8               	btfsc	status,2,c
 22892  0070F2  D7CC               	goto	l16456
 22893  0070F4  0A03               	xorlw	3	; case 2
 22894  0070F6  B4D8               	btfsc	status,2,c
 22895  0070F8  D7D8               	goto	l16458
 22896  0070FA  0A01               	xorlw	1	; case 3
 22897  0070FC  B4D8               	btfsc	status,2,c
 22898  0070FE  D7E4               	goto	l16460
 22899  007100                     l16466:
 22900                           
 22901                           ;ui.c: 716: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 22902  007100  0E8A               	movlw	low ui_disp_menu_epr_calib_adj@buf
 22903  007102  0100               	movlb	0	; () banked
 22904  007104  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 22905  007106  0E00               	movlw	high ui_disp_menu_epr_calib_adj@buf
 22906  007108  0100               	movlb	0	; () banked
 22907  00710A  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 22908  00710C  0E35               	movlw	low _m_floatAdj
 22909  00710E  0100               	movlb	0	; () banked
 22910  007110  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 22911  007112  0E00               	movlw	high _m_floatAdj
 22912  007114  0100               	movlb	0	; () banked
 22913  007116  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 22914  007118  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 22915  00711C  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 22916  007120  0012               	return		;funcret
 22917  007122                     __end_of_ui_disp_menu_epr_calib_adj:
 22918                           	opt stack 0
 22919                           tosu	equ	0xFFF
 22920                           tosh	equ	0xFFE
 22921                           tosl	equ	0xFFD
 22922                           pclath	equ	0xFFA
 22923                           tblptru	equ	0xFF8
 22924                           tblptrh	equ	0xFF7
 22925                           tblptrl	equ	0xFF6
 22926                           tablat	equ	0xFF5
 22927                           prodh	equ	0xFF4
 22928                           prodl	equ	0xFF3
 22929                           intcon	equ	0xFF2
 22930                           indf0	equ	0xFEF
 22931                           postinc0	equ	0xFEE
 22932                           fsr0h	equ	0xFEA
 22933                           fsr0l	equ	0xFE9
 22934                           wreg	equ	0xFE8
 22935                           indf1	equ	0xFE7
 22936                           postinc1	equ	0xFE6
 22937                           postdec1	equ	0xFE5
 22938                           plusw1	equ	0xFE3
 22939                           fsr1h	equ	0xFE2
 22940                           fsr1l	equ	0xFE1
 22941                           indf2	equ	0xFDF
 22942                           postinc2	equ	0xFDE
 22943                           postdec2	equ	0xFDD
 22944                           plusw2	equ	0xFDB
 22945                           fsr2h	equ	0xFDA
 22946                           fsr2l	equ	0xFD9
 22947                           status	equ	0xFD8
 22948                           
 22949 ;; *************** function _ui_disp_menu_density_adj *****************
 22950 ;; Defined at:
 22951 ;;		line 499 in file "src/api/ui.c"
 22952 ;; Parameters:    Size  Location     Type
 22953 ;;		None
 22954 ;; Auto vars:     Size  Location     Type
 22955 ;;		None
 22956 ;; Return value:  Size  Location     Type
 22957 ;;                  1    wreg      void 
 22958 ;; Registers used:
 22959 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22960 ;; Tracked objects:
 22961 ;;		On entry : 0/0
 22962 ;;		On exit  : 0/0
 22963 ;;		Unchanged: 0/0
 22964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22969 ;;Total ram usage:        0 bytes
 22970 ;; Hardware stack levels used:    1
 22971 ;; Hardware stack levels required when called:   10
 22972 ;; This function calls:
 22973 ;;		_lcd_disp_all
 22974 ;;		_lcd_disp_logo
 22975 ;;		_ui_disp_adj_xfloat_pt
 22976 ;; This function is called by:
 22977 ;;		_ui_disp_menu
 22978 ;; This function uses a non-reentrant model
 22979 ;;
 22980                           
 22981                           	psect	text123
 22982  009EAE                     __ptext123:
 22983                           	opt stack 0
 22984  009EAE                     _ui_disp_menu_density_adj:
 22985                           	opt stack 18
 22986                           
 22987                           ;ui.c: 501: lcd_disp_all(0x00);;
 22988                           
 22989                           ;incstack = 0
 22990  009EAE  0E00               	movlw	0
 22991  009EB0  EC28  F04F         	call	_lcd_disp_all
 22992                           
 22993                           ;ui.c: 502: lcd_disp_logo(1);
 22994  009EB4  0E01               	movlw	1
 22995  009EB6  EC10  F04F         	call	_lcd_disp_logo
 22996                           
 22997                           ;ui.c: 503: ui_disp_adj_xfloat_pt((uint8_t*)"   p",&m_floatAdj,adjLocation);
 22998  009EBA  0EEB               	movlw	low STR_6
 22999  009EBC  0100               	movlb	0	; () banked
 23000  009EBE  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 23001  009EC0  0EF3               	movlw	high STR_6
 23002  009EC2  0100               	movlb	0	; () banked
 23003  009EC4  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 23004  009EC6  0E35               	movlw	low _m_floatAdj
 23005  009EC8  0100               	movlb	0	; () banked
 23006  009ECA  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 23007  009ECC  0E00               	movlw	high _m_floatAdj
 23008  009ECE  0100               	movlb	0	; () banked
 23009  009ED0  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 23010  009ED2  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 23011  009ED6  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 23012  009EDA  0012               	return		;funcret
 23013  009EDC                     __end_of_ui_disp_menu_density_adj:
 23014                           	opt stack 0
 23015                           tosu	equ	0xFFF
 23016                           tosh	equ	0xFFE
 23017                           tosl	equ	0xFFD
 23018                           pclath	equ	0xFFA
 23019                           tblptru	equ	0xFF8
 23020                           tblptrh	equ	0xFF7
 23021                           tblptrl	equ	0xFF6
 23022                           tablat	equ	0xFF5
 23023                           prodh	equ	0xFF4
 23024                           prodl	equ	0xFF3
 23025                           intcon	equ	0xFF2
 23026                           indf0	equ	0xFEF
 23027                           postinc0	equ	0xFEE
 23028                           fsr0h	equ	0xFEA
 23029                           fsr0l	equ	0xFE9
 23030                           wreg	equ	0xFE8
 23031                           indf1	equ	0xFE7
 23032                           postinc1	equ	0xFE6
 23033                           postdec1	equ	0xFE5
 23034                           plusw1	equ	0xFE3
 23035                           fsr1h	equ	0xFE2
 23036                           fsr1l	equ	0xFE1
 23037                           indf2	equ	0xFDF
 23038                           postinc2	equ	0xFDE
 23039                           postdec2	equ	0xFDD
 23040                           plusw2	equ	0xFDB
 23041                           fsr2h	equ	0xFDA
 23042                           fsr2l	equ	0xFD9
 23043                           status	equ	0xFD8
 23044                           
 23045 ;; *************** function _ui_disp_menu_calib_pr_adj *****************
 23046 ;; Defined at:
 23047 ;;		line 588 in file "src/api/ui.c"
 23048 ;; Parameters:    Size  Location     Type
 23049 ;;		None
 23050 ;; Auto vars:     Size  Location     Type
 23051 ;;  buf            10   42[BANK0 ] unsigned char [10]
 23052 ;;  t8              1   52[BANK0 ] unsigned char 
 23053 ;; Return value:  Size  Location     Type
 23054 ;;                  1    wreg      void 
 23055 ;; Registers used:
 23056 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23057 ;; Tracked objects:
 23058 ;;		On entry : 0/0
 23059 ;;		On exit  : 0/0
 23060 ;;		Unchanged: 0/0
 23061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23063 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23065 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23066 ;;Total ram usage:       11 bytes
 23067 ;; Hardware stack levels used:    1
 23068 ;; Hardware stack levels required when called:   10
 23069 ;; This function calls:
 23070 ;;		___awmod
 23071 ;;		___lbdiv
 23072 ;;		_lcd_disp_all
 23073 ;;		_lcd_disp_logo
 23074 ;;		_lcd_disp_refresh
 23075 ;;		_lcd_show_string
 23076 ;;		_m_mem_cpy
 23077 ;;		_ui_disp_adj_xfloat_pt
 23078 ;; This function is called by:
 23079 ;;		_ui_disp_menu
 23080 ;; This function uses a non-reentrant model
 23081 ;;
 23082                           
 23083                           	psect	text124
 23084  0066A8                     __ptext124:
 23085                           	opt stack 0
 23086  0066A8                     _ui_disp_menu_calib_pr_adj:
 23087                           	opt stack 18
 23088                           
 23089                           ;ui.c: 590: uint8_t t8;
 23090                           ;ui.c: 591: uint8_t buf[10];
 23091                           ;ui.c: 592: lcd_disp_all(0x00);;
 23092                           
 23093                           ;incstack = 0
 23094  0066A8  0E00               	movlw	0
 23095  0066AA  EC28  F04F         	call	_lcd_disp_all
 23096                           
 23097                           ;ui.c: 593: lcd_disp_logo(1);
 23098  0066AE  0E01               	movlw	1
 23099  0066B0  EC10  F04F         	call	_lcd_disp_logo
 23100                           
 23101                           ;ui.c: 594: buf[0]=' ';
 23102  0066B4  0E20               	movlw	32
 23103  0066B6  0100               	movlb	0	; () banked
 23104  0066B8  6F8A               	movwf	ui_disp_menu_calib_pr_adj@buf& (0+255),b
 23105                           
 23106                           ; BSR set to: 0
 23107                           ;ui.c: 598: buf[1]='p';
 23108  0066BA  0E70               	movlw	112
 23109  0066BC  0100               	movlb	0	; () banked
 23110  0066BE  6F8B               	movwf	(ui_disp_menu_calib_pr_adj@buf+1)& (0+255),b
 23111                           
 23112                           ; BSR set to: 0
 23113                           ;ui.c: 599: t8=calibCol;
 23114  0066C0  C030  F094         	movff	_calibCol,ui_disp_menu_calib_pr_adj@t8	;volatile
 23115                           
 23116                           ; BSR set to: 0
 23117                           ;ui.c: 600: buf[3]='0'+t8%10;
 23118  0066C4  C094  F060         	movff	ui_disp_menu_calib_pr_adj@t8,___awmod@dividend
 23119  0066C8  0100               	movlb	0	; () banked
 23120  0066CA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23121  0066CC  0E00               	movlw	0
 23122  0066CE  0100               	movlb	0	; () banked
 23123  0066D0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23124  0066D2  0E0A               	movlw	10
 23125  0066D4  6F62               	movwf	___awmod@divisor& (0+255),b
 23126  0066D6  EC14  F03D         	call	___awmod	;wreg free
 23127  0066DA  0100               	movlb	0	; () banked
 23128  0066DC  5160               	movf	?___awmod& (0+255),w,b
 23129  0066DE  0F30               	addlw	48
 23130  0066E0  0100               	movlb	0	; () banked
 23131  0066E2  6F8D               	movwf	(ui_disp_menu_calib_pr_adj@buf+3)& (0+255),b
 23132                           
 23133                           ; BSR set to: 0
 23134                           ;ui.c: 601: t8/=10;
 23135  0066E4  0E0A               	movlw	10
 23136  0066E6  6E20               	movwf	___lbdiv@divisor,c
 23137  0066E8  0100               	movlb	0	; () banked
 23138  0066EA  5194               	movf	ui_disp_menu_calib_pr_adj@t8& (0+255),w,b
 23139  0066EC  EC70  F04B         	call	___lbdiv
 23140  0066F0  0100               	movlb	0	; () banked
 23141  0066F2  6F94               	movwf	ui_disp_menu_calib_pr_adj@t8& (0+255),b
 23142                           
 23143                           ; BSR set to: 0
 23144                           ;ui.c: 602: buf[2]='0'+t8%10;
 23145  0066F4  C094  F060         	movff	ui_disp_menu_calib_pr_adj@t8,___awmod@dividend
 23146  0066F8  0100               	movlb	0	; () banked
 23147  0066FA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23148  0066FC  0E00               	movlw	0
 23149  0066FE  0100               	movlb	0	; () banked
 23150  006700  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23151  006702  0E0A               	movlw	10
 23152  006704  6F62               	movwf	___awmod@divisor& (0+255),b
 23153  006706  EC14  F03D         	call	___awmod	;wreg free
 23154  00670A  0100               	movlb	0	; () banked
 23155  00670C  5160               	movf	?___awmod& (0+255),w,b
 23156  00670E  0F30               	addlw	48
 23157  006710  0100               	movlb	0	; () banked
 23158  006712  6F8C               	movwf	(ui_disp_menu_calib_pr_adj@buf+2)& (0+255),b
 23159                           
 23160                           ; BSR set to: 0
 23161                           ;ui.c: 603: buf[4]='\0';
 23162  006714  0E00               	movlw	0
 23163  006716  0100               	movlb	0	; () banked
 23164  006718  6F8E               	movwf	(ui_disp_menu_calib_pr_adj@buf+4)& (0+255),b
 23165                           
 23166                           ; BSR set to: 0
 23167                           ;ui.c: 604: if(calibCol){
 23168  00671A  5030               	movf	_calibCol,w,c	;volatile
 23169  00671C  B4D8               	btfsc	status,2,c
 23170  00671E  D011               	goto	l16362
 23171                           
 23172                           ; BSR set to: 0
 23173                           ;ui.c: 605: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 23174  006720  0E8A               	movlw	low ui_disp_menu_calib_pr_adj@buf
 23175  006722  0100               	movlb	0	; () banked
 23176  006724  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 23177  006726  0E00               	movlw	high ui_disp_menu_calib_pr_adj@buf
 23178  006728  0100               	movlb	0	; () banked
 23179  00672A  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 23180  00672C  0E35               	movlw	low _m_floatAdj
 23181  00672E  0100               	movlb	0	; () banked
 23182  006730  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 23183  006732  0E00               	movlw	high _m_floatAdj
 23184  006734  0100               	movlb	0	; () banked
 23185  006736  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 23186  006738  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 23187  00673C  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 23188                           
 23189                           ;ui.c: 606: }else{
 23190  006740  0012               	return	
 23191  006742                     l16362:
 23192                           
 23193                           ;ui.c: 607: m_mem_cpy(buf+4,"    ");
 23194  006742  0E8E               	movlw	low (ui_disp_menu_calib_pr_adj@buf+4)
 23195  006744  0100               	movlb	0	; () banked
 23196  006746  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23197  006748  0E00               	movlw	high (ui_disp_menu_calib_pr_adj@buf+4)
 23198  00674A  0100               	movlb	0	; () banked
 23199  00674C  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23200  00674E  0E7A               	movlw	low (STR_2+4)
 23201  006750  0100               	movlb	0	; () banked
 23202  006752  6F62               	movwf	m_mem_cpy@s& (0+255),b
 23203  006754  0EF3               	movlw	high (STR_2+4)
 23204  006756  0100               	movlb	0	; () banked
 23205  006758  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 23206  00675A  EC94  F045         	call	_m_mem_cpy	;wreg free
 23207                           
 23208                           ;ui.c: 608: t8=*((uint8_t*)(&adjValue));
 23209  00675E  C039  F094         	movff	_adjValue,ui_disp_menu_calib_pr_adj@t8
 23210                           
 23211                           ;ui.c: 609: buf[7]='0'+ t8;
 23212  006762  0100               	movlb	0	; () banked
 23213  006764  5194               	movf	ui_disp_menu_calib_pr_adj@t8& (0+255),w,b
 23214  006766  0F30               	addlw	48
 23215  006768  0100               	movlb	0	; () banked
 23216  00676A  6F91               	movwf	(ui_disp_menu_calib_pr_adj@buf+7)& (0+255),b
 23217                           
 23218                           ; BSR set to: 0
 23219                           ;ui.c: 610: buf[8]='\0';
 23220  00676C  0E00               	movlw	0
 23221  00676E  0100               	movlb	0	; () banked
 23222  006770  6F92               	movwf	(ui_disp_menu_calib_pr_adj@buf+8)& (0+255),b
 23223                           
 23224                           ; BSR set to: 0
 23225                           ;ui.c: 611: lcd_show_string(buf);
 23226  006772  0E8A               	movlw	low ui_disp_menu_calib_pr_adj@buf
 23227  006774  0100               	movlb	0	; () banked
 23228  006776  6F73               	movwf	lcd_show_string@str& (0+255),b
 23229  006778  0E00               	movlw	high ui_disp_menu_calib_pr_adj@buf
 23230  00677A  0100               	movlb	0	; () banked
 23231  00677C  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 23232  00677E  EC27  F045         	call	_lcd_show_string	;wreg free
 23233                           
 23234                           ;ui.c: 612: lcd_disp_refresh();
 23235  006782  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 23236  006786  0012               	return	
 23237  006788                     __end_of_ui_disp_menu_calib_pr_adj:
 23238                           	opt stack 0
 23239                           tosu	equ	0xFFF
 23240                           tosh	equ	0xFFE
 23241                           tosl	equ	0xFFD
 23242                           pclath	equ	0xFFA
 23243                           tblptru	equ	0xFF8
 23244                           tblptrh	equ	0xFF7
 23245                           tblptrl	equ	0xFF6
 23246                           tablat	equ	0xFF5
 23247                           prodh	equ	0xFF4
 23248                           prodl	equ	0xFF3
 23249                           intcon	equ	0xFF2
 23250                           indf0	equ	0xFEF
 23251                           postinc0	equ	0xFEE
 23252                           fsr0h	equ	0xFEA
 23253                           fsr0l	equ	0xFE9
 23254                           wreg	equ	0xFE8
 23255                           indf1	equ	0xFE7
 23256                           postinc1	equ	0xFE6
 23257                           postdec1	equ	0xFE5
 23258                           plusw1	equ	0xFE3
 23259                           fsr1h	equ	0xFE2
 23260                           fsr1l	equ	0xFE1
 23261                           indf2	equ	0xFDF
 23262                           postinc2	equ	0xFDE
 23263                           postdec2	equ	0xFDD
 23264                           plusw2	equ	0xFDB
 23265                           fsr2h	equ	0xFDA
 23266                           fsr2l	equ	0xFD9
 23267                           status	equ	0xFD8
 23268                           
 23269 ;; *************** function _ui_disp_menu_calib_diff_adj *****************
 23270 ;; Defined at:
 23271 ;;		line 560 in file "src/api/ui.c"
 23272 ;; Parameters:    Size  Location     Type
 23273 ;;		None
 23274 ;; Auto vars:     Size  Location     Type
 23275 ;;  buf            10   42[BANK0 ] unsigned char [10]
 23276 ;;  t8              1   52[BANK0 ] unsigned char 
 23277 ;; Return value:  Size  Location     Type
 23278 ;;                  1    wreg      void 
 23279 ;; Registers used:
 23280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23281 ;; Tracked objects:
 23282 ;;		On entry : 0/0
 23283 ;;		On exit  : 0/0
 23284 ;;		Unchanged: 0/0
 23285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23287 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23289 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23290 ;;Total ram usage:       11 bytes
 23291 ;; Hardware stack levels used:    1
 23292 ;; Hardware stack levels required when called:   10
 23293 ;; This function calls:
 23294 ;;		___awmod
 23295 ;;		___lbdiv
 23296 ;;		_lcd_disp_all
 23297 ;;		_lcd_disp_logo
 23298 ;;		_lcd_disp_refresh
 23299 ;;		_lcd_show_string
 23300 ;;		_m_mem_cpy
 23301 ;;		_ui_disp_adj_xfloat_pt
 23302 ;; This function is called by:
 23303 ;;		_ui_disp_menu
 23304 ;; This function uses a non-reentrant model
 23305 ;;
 23306                           
 23307                           	psect	text125
 23308  0064B4                     __ptext125:
 23309                           	opt stack 0
 23310  0064B4                     _ui_disp_menu_calib_diff_adj:
 23311                           	opt stack 18
 23312                           
 23313                           ;ui.c: 562: uint8_t t8;
 23314                           ;ui.c: 563: uint8_t buf[10];
 23315                           ;ui.c: 564: lcd_disp_all(0x00);;
 23316                           
 23317                           ;incstack = 0
 23318  0064B4  0E00               	movlw	0
 23319  0064B6  EC28  F04F         	call	_lcd_disp_all
 23320                           
 23321                           ;ui.c: 565: lcd_disp_logo(1);
 23322  0064BA  0E01               	movlw	1
 23323  0064BC  EC10  F04F         	call	_lcd_disp_logo
 23324                           
 23325                           ;ui.c: 566: buf[0]=' ';
 23326  0064C0  0E20               	movlw	32
 23327  0064C2  0100               	movlb	0	; () banked
 23328  0064C4  6F8A               	movwf	ui_disp_menu_calib_diff_adj@buf& (0+255),b
 23329                           
 23330                           ; BSR set to: 0
 23331                           ;ui.c: 567: if(calibRow==0)buf[1]='d';
 23332  0064C6  5031               	movf	_calibRow,w,c	;volatile
 23333  0064C8  A4D8               	btfss	status,2,c
 23334  0064CA  D002               	goto	l16308
 23335                           
 23336                           ; BSR set to: 0
 23337  0064CC  0E64               	movlw	100
 23338  0064CE  D00A               	goto	L22
 23339  0064D0                     l16308:
 23340                           
 23341                           ; BSR set to: 0
 23342                           ;ui.c: 568: else if(calibRow==1)buf[1]='c';
 23343  0064D0  0431               	decf	_calibRow,w,c	;volatile
 23344  0064D2  A4D8               	btfss	status,2,c
 23345  0064D4  D002               	goto	l16312
 23346                           
 23347                           ; BSR set to: 0
 23348  0064D6  0E63               	movlw	99
 23349  0064D8  D005               	goto	L22
 23350  0064DA                     l16312:
 23351                           
 23352                           ; BSR set to: 0
 23353                           ;ui.c: 569: else if(calibRow==2)buf[1]='G';
 23354  0064DA  0E02               	movlw	2
 23355  0064DC  1831               	xorwf	_calibRow,w,c	;volatile
 23356  0064DE  A4D8               	btfss	status,2,c
 23357  0064E0  D003               	goto	l16316
 23358                           
 23359                           ; BSR set to: 0
 23360  0064E2  0E47               	movlw	71
 23361  0064E4                     L22:
 23362  0064E4  0100               	movlb	0	; () banked
 23363  0064E6  6F8B               	movwf	(ui_disp_menu_calib_diff_adj@buf+1)& (0+255),b
 23364  0064E8                     l16316:
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;ui.c: 571: t8=calibCol;
 23368  0064E8  C030  F094         	movff	_calibCol,ui_disp_menu_calib_diff_adj@t8	;volatile
 23369                           
 23370                           ; BSR set to: 0
 23371                           ;ui.c: 572: buf[3]='0'+t8%10;
 23372  0064EC  C094  F060         	movff	ui_disp_menu_calib_diff_adj@t8,___awmod@dividend
 23373  0064F0  0100               	movlb	0	; () banked
 23374  0064F2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23375  0064F4  0E00               	movlw	0
 23376  0064F6  0100               	movlb	0	; () banked
 23377  0064F8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23378  0064FA  0E0A               	movlw	10
 23379  0064FC  6F62               	movwf	___awmod@divisor& (0+255),b
 23380  0064FE  EC14  F03D         	call	___awmod	;wreg free
 23381  006502  0100               	movlb	0	; () banked
 23382  006504  5160               	movf	?___awmod& (0+255),w,b
 23383  006506  0F30               	addlw	48
 23384  006508  0100               	movlb	0	; () banked
 23385  00650A  6F8D               	movwf	(ui_disp_menu_calib_diff_adj@buf+3)& (0+255),b
 23386                           
 23387                           ; BSR set to: 0
 23388                           ;ui.c: 573: t8/=10;
 23389  00650C  0E0A               	movlw	10
 23390  00650E  6E20               	movwf	___lbdiv@divisor,c
 23391  006510  0100               	movlb	0	; () banked
 23392  006512  5194               	movf	ui_disp_menu_calib_diff_adj@t8& (0+255),w,b
 23393  006514  EC70  F04B         	call	___lbdiv
 23394  006518  0100               	movlb	0	; () banked
 23395  00651A  6F94               	movwf	ui_disp_menu_calib_diff_adj@t8& (0+255),b
 23396                           
 23397                           ; BSR set to: 0
 23398                           ;ui.c: 574: buf[2]='0'+t8%10;
 23399  00651C  C094  F060         	movff	ui_disp_menu_calib_diff_adj@t8,___awmod@dividend
 23400  006520  0100               	movlb	0	; () banked
 23401  006522  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23402  006524  0E00               	movlw	0
 23403  006526  0100               	movlb	0	; () banked
 23404  006528  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23405  00652A  0E0A               	movlw	10
 23406  00652C  6F62               	movwf	___awmod@divisor& (0+255),b
 23407  00652E  EC14  F03D         	call	___awmod	;wreg free
 23408  006532  0100               	movlb	0	; () banked
 23409  006534  5160               	movf	?___awmod& (0+255),w,b
 23410  006536  0F30               	addlw	48
 23411  006538  0100               	movlb	0	; () banked
 23412  00653A  6F8C               	movwf	(ui_disp_menu_calib_diff_adj@buf+2)& (0+255),b
 23413                           
 23414                           ; BSR set to: 0
 23415                           ;ui.c: 575: buf[4]='\0';
 23416  00653C  0E00               	movlw	0
 23417  00653E  0100               	movlb	0	; () banked
 23418  006540  6F8E               	movwf	(ui_disp_menu_calib_diff_adj@buf+4)& (0+255),b
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;ui.c: 576: if(calibCol){
 23422  006542  5030               	movf	_calibCol,w,c	;volatile
 23423  006544  B4D8               	btfsc	status,2,c
 23424  006546  D011               	goto	l16330
 23425                           
 23426                           ; BSR set to: 0
 23427                           ;ui.c: 577: ui_disp_adj_xfloat_pt(buf,&m_floatAdj,adjLocation);
 23428  006548  0E8A               	movlw	low ui_disp_menu_calib_diff_adj@buf
 23429  00654A  0100               	movlb	0	; () banked
 23430  00654C  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 23431  00654E  0E00               	movlw	high ui_disp_menu_calib_diff_adj@buf
 23432  006550  0100               	movlb	0	; () banked
 23433  006552  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 23434  006554  0E35               	movlw	low _m_floatAdj
 23435  006556  0100               	movlb	0	; () banked
 23436  006558  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 23437  00655A  0E00               	movlw	high _m_floatAdj
 23438  00655C  0100               	movlb	0	; () banked
 23439  00655E  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 23440  006560  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 23441  006564  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 23442                           
 23443                           ;ui.c: 578: }else{
 23444  006568  0012               	return	
 23445  00656A                     l16330:
 23446                           
 23447                           ;ui.c: 579: m_mem_cpy(buf+4,(uint8_t*)"    ");
 23448  00656A  0E8E               	movlw	low (ui_disp_menu_calib_diff_adj@buf+4)
 23449  00656C  0100               	movlb	0	; () banked
 23450  00656E  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23451  006570  0E00               	movlw	high (ui_disp_menu_calib_diff_adj@buf+4)
 23452  006572  0100               	movlb	0	; () banked
 23453  006574  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23454  006576  0E7A               	movlw	low (STR_2+4)
 23455  006578  0100               	movlb	0	; () banked
 23456  00657A  6F62               	movwf	m_mem_cpy@s& (0+255),b
 23457  00657C  0EF3               	movlw	high (STR_2+4)
 23458  00657E  0100               	movlb	0	; () banked
 23459  006580  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 23460  006582  EC94  F045         	call	_m_mem_cpy	;wreg free
 23461                           
 23462                           ;ui.c: 580: t8=*((uint8_t*)(&adjValue));
 23463  006586  C039  F094         	movff	_adjValue,ui_disp_menu_calib_diff_adj@t8
 23464                           
 23465                           ;ui.c: 581: buf[7]='0'+ t8;;
 23466  00658A  0100               	movlb	0	; () banked
 23467  00658C  5194               	movf	ui_disp_menu_calib_diff_adj@t8& (0+255),w,b
 23468  00658E  0F30               	addlw	48
 23469  006590  0100               	movlb	0	; () banked
 23470  006592  6F91               	movwf	(ui_disp_menu_calib_diff_adj@buf+7)& (0+255),b
 23471                           
 23472                           ; BSR set to: 0
 23473                           ;ui.c: 582: buf[8]='\0';
 23474  006594  0E00               	movlw	0
 23475  006596  0100               	movlb	0	; () banked
 23476  006598  6F92               	movwf	(ui_disp_menu_calib_diff_adj@buf+8)& (0+255),b
 23477                           
 23478                           ; BSR set to: 0
 23479                           ;ui.c: 583: lcd_show_string(buf);
 23480  00659A  0E8A               	movlw	low ui_disp_menu_calib_diff_adj@buf
 23481  00659C  0100               	movlb	0	; () banked
 23482  00659E  6F73               	movwf	lcd_show_string@str& (0+255),b
 23483  0065A0  0E00               	movlw	high ui_disp_menu_calib_diff_adj@buf
 23484  0065A2  0100               	movlb	0	; () banked
 23485  0065A4  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 23486  0065A6  EC27  F045         	call	_lcd_show_string	;wreg free
 23487                           
 23488                           ;ui.c: 584: lcd_disp_refresh();
 23489  0065AA  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 23490  0065AE  0012               	return	
 23491  0065B0                     __end_of_ui_disp_menu_calib_diff_adj:
 23492                           	opt stack 0
 23493                           tosu	equ	0xFFF
 23494                           tosh	equ	0xFFE
 23495                           tosl	equ	0xFFD
 23496                           pclath	equ	0xFFA
 23497                           tblptru	equ	0xFF8
 23498                           tblptrh	equ	0xFF7
 23499                           tblptrl	equ	0xFF6
 23500                           tablat	equ	0xFF5
 23501                           prodh	equ	0xFF4
 23502                           prodl	equ	0xFF3
 23503                           intcon	equ	0xFF2
 23504                           indf0	equ	0xFEF
 23505                           postinc0	equ	0xFEE
 23506                           fsr0h	equ	0xFEA
 23507                           fsr0l	equ	0xFE9
 23508                           wreg	equ	0xFE8
 23509                           indf1	equ	0xFE7
 23510                           postinc1	equ	0xFE6
 23511                           postdec1	equ	0xFE5
 23512                           plusw1	equ	0xFE3
 23513                           fsr1h	equ	0xFE2
 23514                           fsr1l	equ	0xFE1
 23515                           indf2	equ	0xFDF
 23516                           postinc2	equ	0xFDE
 23517                           postdec2	equ	0xFDD
 23518                           plusw2	equ	0xFDB
 23519                           fsr2h	equ	0xFDA
 23520                           fsr2l	equ	0xFD9
 23521                           status	equ	0xFD8
 23522                           
 23523 ;; *************** function ___lbdiv *****************
 23524 ;; Defined at:
 23525 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbdiv.c"
 23526 ;; Parameters:    Size  Location     Type
 23527 ;;  dividend        1    wreg     unsigned char 
 23528 ;;  divisor         1   31[COMRAM] unsigned char 
 23529 ;; Auto vars:     Size  Location     Type
 23530 ;;  dividend        1    0[BANK0 ] unsigned char 
 23531 ;;  quotient        1    2[BANK0 ] unsigned char 
 23532 ;;  counter         1    1[BANK0 ] unsigned char 
 23533 ;; Return value:  Size  Location     Type
 23534 ;;                  1    wreg      unsigned char 
 23535 ;; Registers used:
 23536 ;;		wreg, status,2, status,0
 23537 ;; Tracked objects:
 23538 ;;		On entry : 0/0
 23539 ;;		On exit  : 0/0
 23540 ;;		Unchanged: 0/0
 23541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23542 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23543 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23545 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23546 ;;Total ram usage:        4 bytes
 23547 ;; Hardware stack levels used:    1
 23548 ;; Hardware stack levels required when called:    4
 23549 ;; This function calls:
 23550 ;;		Nothing
 23551 ;; This function is called by:
 23552 ;;		_ui_disp_menu_calib_diff_adj
 23553 ;;		_ui_disp_menu_calib_pr_adj
 23554 ;;		_lcd_disp_battary
 23555 ;;		_lcd_disp_rf
 23556 ;;		_lcd_disp_light
 23557 ;; This function uses a non-reentrant model
 23558 ;;
 23559                           
 23560                           	psect	text126
 23561  0096E0                     __ptext126:
 23562                           	opt stack 0
 23563  0096E0                     ___lbdiv:
 23564                           	opt stack 23
 23565                           
 23566                           ;incstack = 0
 23567                           ;___lbdiv@dividend stored from wreg
 23568  0096E0  0100               	movlb	0	; () banked
 23569  0096E2  6F60               	movwf	___lbdiv@dividend& (0+255),b
 23570  0096E4  0E00               	movlw	0
 23571  0096E6  0100               	movlb	0	; () banked
 23572  0096E8  6F62               	movwf	___lbdiv@quotient& (0+255),b
 23573                           
 23574                           ; BSR set to: 0
 23575  0096EA  5020               	movf	___lbdiv@divisor,w,c
 23576  0096EC  B4D8               	btfsc	status,2,c
 23577  0096EE  D01C               	goto	l15636
 23578                           
 23579                           ; BSR set to: 0
 23580  0096F0  0E01               	movlw	1
 23581  0096F2  0100               	movlb	0	; () banked
 23582  0096F4  6F61               	movwf	___lbdiv@counter& (0+255),b
 23583  0096F6  D004               	goto	l15624
 23584  0096F8                     l15620:
 23585                           
 23586                           ; BSR set to: 0
 23587  0096F8  90D8               	bcf	status,0,c
 23588  0096FA  3620               	rlcf	___lbdiv@divisor,f,c
 23589                           
 23590                           ; BSR set to: 0
 23591  0096FC  0100               	movlb	0	; () banked
 23592  0096FE  2B61               	incf	___lbdiv@counter& (0+255),f,b
 23593  009700                     l15624:
 23594                           
 23595                           ; BSR set to: 0
 23596  009700  AE20               	btfss	___lbdiv@divisor,7,c
 23597  009702  D7FA               	goto	l15620
 23598  009704                     l15626:
 23599                           
 23600                           ; BSR set to: 0
 23601  009704  0100               	movlb	0	; () banked
 23602  009706  90D8               	bcf	status,0,c
 23603  009708  3762               	rlcf	___lbdiv@quotient& (0+255),f,b
 23604  00970A  5020               	movf	___lbdiv@divisor,w,c
 23605  00970C  0100               	movlb	0	; () banked
 23606  00970E  5D60               	subwf	___lbdiv@dividend& (0+255),w,b
 23607  009710  A0D8               	btfss	status,0,c
 23608  009712  D005               	goto	l15632
 23609                           
 23610                           ; BSR set to: 0
 23611  009714  5020               	movf	___lbdiv@divisor,w,c
 23612  009716  0100               	movlb	0	; () banked
 23613  009718  5F60               	subwf	___lbdiv@dividend& (0+255),f,b
 23614                           
 23615                           ; BSR set to: 0
 23616  00971A  0100               	movlb	0	; () banked
 23617  00971C  8162               	bsf	___lbdiv@quotient& (0+255),0,b
 23618  00971E                     l15632:
 23619                           
 23620                           ; BSR set to: 0
 23621  00971E  90D8               	bcf	status,0,c
 23622  009720  3220               	rrcf	___lbdiv@divisor,f,c
 23623                           
 23624                           ; BSR set to: 0
 23625  009722  0100               	movlb	0	; () banked
 23626  009724  2F61               	decfsz	___lbdiv@counter& (0+255),f,b
 23627  009726  D7EE               	goto	l15626
 23628  009728                     l15636:
 23629                           
 23630                           ; BSR set to: 0
 23631  009728  0100               	movlb	0	; () banked
 23632  00972A  5162               	movf	___lbdiv@quotient& (0+255),w,b
 23633  00972C  0012               	return	
 23634  00972E                     __end_of___lbdiv:
 23635                           	opt stack 0
 23636                           tosu	equ	0xFFF
 23637                           tosh	equ	0xFFE
 23638                           tosl	equ	0xFFD
 23639                           pclath	equ	0xFFA
 23640                           tblptru	equ	0xFF8
 23641                           tblptrh	equ	0xFF7
 23642                           tblptrl	equ	0xFF6
 23643                           tablat	equ	0xFF5
 23644                           prodh	equ	0xFF4
 23645                           prodl	equ	0xFF3
 23646                           intcon	equ	0xFF2
 23647                           indf0	equ	0xFEF
 23648                           postinc0	equ	0xFEE
 23649                           fsr0h	equ	0xFEA
 23650                           fsr0l	equ	0xFE9
 23651                           wreg	equ	0xFE8
 23652                           indf1	equ	0xFE7
 23653                           postinc1	equ	0xFE6
 23654                           postdec1	equ	0xFE5
 23655                           plusw1	equ	0xFE3
 23656                           fsr1h	equ	0xFE2
 23657                           fsr1l	equ	0xFE1
 23658                           indf2	equ	0xFDF
 23659                           postinc2	equ	0xFDE
 23660                           postdec2	equ	0xFDD
 23661                           plusw2	equ	0xFDB
 23662                           fsr2h	equ	0xFDA
 23663                           fsr2l	equ	0xFD9
 23664                           status	equ	0xFD8
 23665                           
 23666 ;; *************** function _ui_disp_menu_bzero_adj *****************
 23667 ;; Defined at:
 23668 ;;		line 553 in file "src/api/ui.c"
 23669 ;; Parameters:    Size  Location     Type
 23670 ;;		None
 23671 ;; Auto vars:     Size  Location     Type
 23672 ;;		None
 23673 ;; Return value:  Size  Location     Type
 23674 ;;                  1    wreg      void 
 23675 ;; Registers used:
 23676 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23677 ;; Tracked objects:
 23678 ;;		On entry : 0/0
 23679 ;;		On exit  : 0/0
 23680 ;;		Unchanged: 0/0
 23681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23686 ;;Total ram usage:        0 bytes
 23687 ;; Hardware stack levels used:    1
 23688 ;; Hardware stack levels required when called:   10
 23689 ;; This function calls:
 23690 ;;		_lcd_disp_all
 23691 ;;		_lcd_disp_logo
 23692 ;;		_ui_disp_adj_xfloat_pt
 23693 ;; This function is called by:
 23694 ;;		_ui_disp_menu
 23695 ;; This function uses a non-reentrant model
 23696 ;;
 23697                           
 23698                           	psect	text127
 23699  009EDC                     __ptext127:
 23700                           	opt stack 0
 23701  009EDC                     _ui_disp_menu_bzero_adj:
 23702                           	opt stack 18
 23703                           
 23704                           ;ui.c: 555: lcd_disp_all(0x00);;
 23705                           
 23706                           ; BSR set to: 0
 23707                           ;incstack = 0
 23708  009EDC  0E00               	movlw	0
 23709  009EDE  EC28  F04F         	call	_lcd_disp_all
 23710                           
 23711                           ;ui.c: 556: lcd_disp_logo(1);
 23712  009EE2  0E01               	movlw	1
 23713  009EE4  EC10  F04F         	call	_lcd_disp_logo
 23714                           
 23715                           ;ui.c: 557: ui_disp_adj_xfloat_pt((uint8_t*)"  Hb",&m_floatAdj,adjLocation);
 23716  009EE8  0EB9               	movlw	low STR_12
 23717  009EEA  0100               	movlb	0	; () banked
 23718  009EEC  6F76               	movwf	ui_disp_adj_xfloat_pt@str& (0+255),b
 23719  009EEE  0EF3               	movlw	high STR_12
 23720  009EF0  0100               	movlb	0	; () banked
 23721  009EF2  6F77               	movwf	(ui_disp_adj_xfloat_pt@str+1)& (0+255),b
 23722  009EF4  0E35               	movlw	low _m_floatAdj
 23723  009EF6  0100               	movlb	0	; () banked
 23724  009EF8  6F78               	movwf	ui_disp_adj_xfloat_pt@xpf& (0+255),b
 23725  009EFA  0E00               	movlw	high _m_floatAdj
 23726  009EFC  0100               	movlb	0	; () banked
 23727  009EFE  6F79               	movwf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),b
 23728  009F00  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfloat_pt@loc	;volatile
 23729  009F04  ECE8  F01A         	call	_ui_disp_adj_xfloat_pt	;wreg free
 23730  009F08  0012               	return		;funcret
 23731  009F0A                     __end_of_ui_disp_menu_bzero_adj:
 23732                           	opt stack 0
 23733                           tosu	equ	0xFFF
 23734                           tosh	equ	0xFFE
 23735                           tosl	equ	0xFFD
 23736                           pclath	equ	0xFFA
 23737                           tblptru	equ	0xFF8
 23738                           tblptrh	equ	0xFF7
 23739                           tblptrl	equ	0xFF6
 23740                           tablat	equ	0xFF5
 23741                           prodh	equ	0xFF4
 23742                           prodl	equ	0xFF3
 23743                           intcon	equ	0xFF2
 23744                           indf0	equ	0xFEF
 23745                           postinc0	equ	0xFEE
 23746                           fsr0h	equ	0xFEA
 23747                           fsr0l	equ	0xFE9
 23748                           wreg	equ	0xFE8
 23749                           indf1	equ	0xFE7
 23750                           postinc1	equ	0xFE6
 23751                           postdec1	equ	0xFE5
 23752                           plusw1	equ	0xFE3
 23753                           fsr1h	equ	0xFE2
 23754                           fsr1l	equ	0xFE1
 23755                           indf2	equ	0xFDF
 23756                           postinc2	equ	0xFDE
 23757                           postdec2	equ	0xFDD
 23758                           plusw2	equ	0xFDB
 23759                           fsr2h	equ	0xFDA
 23760                           fsr2l	equ	0xFD9
 23761                           status	equ	0xFD8
 23762                           
 23763 ;; *************** function _ui_disp_adj_xfloat_pt *****************
 23764 ;; Defined at:
 23765 ;;		line 204 in file "src/api/ui.c"
 23766 ;; Parameters:    Size  Location     Type
 23767 ;;  str             2   22[BANK0 ] PTR unsigned char 
 23768 ;;		 -> ui_disp_menu_epr_ilp_scale_adj@buf(6), ui_disp_menu_epr_calib_adj@buf(6), ui_disp_menu_warn_v_adj@buf(6), ui_dis
      +p_menu_calib_pr_adj@buf(10), 
 23769 ;;		 -> ui_disp_menu_calib_diff_adj@buf(10), STR_12(5), STR_11(5), STR_10(5), 
 23770 ;;		 -> STR_9(5), STR_6(5), 
 23771 ;;  xpf             2   24[BANK0 ] PTR struct .
 23772 ;;		 -> m_floatAdj(4), 
 23773 ;;  loc             1   26[BANK0 ] unsigned char 
 23774 ;; Auto vars:     Size  Location     Type
 23775 ;;  buf            10   29[BANK0 ] unsigned char [10]
 23776 ;;  x               2   39[BANK0 ] unsigned int 
 23777 ;;  t8              1   41[BANK0 ] unsigned char 
 23778 ;; Return value:  Size  Location     Type
 23779 ;;                  1    wreg      void 
 23780 ;; Registers used:
 23781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23782 ;; Tracked objects:
 23783 ;;		On entry : 0/0
 23784 ;;		On exit  : 0/0
 23785 ;;		Unchanged: 0/0
 23786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23787 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23788 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23790 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23791 ;;Total ram usage:       20 bytes
 23792 ;; Hardware stack levels used:    1
 23793 ;; Hardware stack levels required when called:    9
 23794 ;; This function calls:
 23795 ;;		___x_arrange_str
 23796 ;;		_lcd_disp_refresh
 23797 ;;		_lcd_show_dp
 23798 ;;		_lcd_show_string
 23799 ;;		_m_int16_2_str_4
 23800 ;;		_m_mem_cpy
 23801 ;; This function is called by:
 23802 ;;		_ui_disp_menu_density_adj
 23803 ;;		_ui_disp_menu_h_adj
 23804 ;;		_ui_disp_menu_d_adj
 23805 ;;		_ui_disp_menu_bzero_adj
 23806 ;;		_ui_disp_menu_calib_diff_adj
 23807 ;;		_ui_disp_menu_calib_pr_adj
 23808 ;;		_ui_disp_menu_warn_v_adj
 23809 ;;		_ui_disp_menu_epr_calib_adj
 23810 ;;		_ui_disp_menu_epr_ilp_scale_adj
 23811 ;; This function uses a non-reentrant model
 23812 ;;
 23813                           
 23814                           	psect	text128
 23815  0035D0                     __ptext128:
 23816                           	opt stack 0
 23817  0035D0                     _ui_disp_adj_xfloat_pt:
 23818                           	opt stack 18
 23819                           
 23820                           ;ui.c: 207: uint8_t buf[10];
 23821                           ;ui.c: 209: uint16_t x;
 23822                           ;ui.c: 210: uint8_t t8;
 23823                           ;ui.c: 218: x=xpf->stru.significand;
 23824                           
 23825                           ;incstack = 0
 23826  0035D0  C078  FFD9         	movff	ui_disp_adj_xfloat_pt@xpf,fsr2l
 23827  0035D4  C079  FFDA         	movff	ui_disp_adj_xfloat_pt@xpf+1,fsr2h
 23828  0035D8  CFDE F087          	movff	postinc2,ui_disp_adj_xfloat_pt@x
 23829  0035DC  CFDD F088          	movff	postdec2,ui_disp_adj_xfloat_pt@x+1
 23830                           
 23831                           ;ui.c: 219: m_mem_cpy(buf,str);
 23832  0035E0  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 23833  0035E2  0100               	movlb	0	; () banked
 23834  0035E4  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23835  0035E6  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 23836  0035E8  0100               	movlb	0	; () banked
 23837  0035EA  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23838  0035EC  C076  F062         	movff	ui_disp_adj_xfloat_pt@str,m_mem_cpy@s
 23839  0035F0  C077  F063         	movff	ui_disp_adj_xfloat_pt@str+1,m_mem_cpy@s+1
 23840  0035F4  EC94  F045         	call	_m_mem_cpy	;wreg free
 23841                           
 23842                           ;ui.c: 220: if(xpf->stru.sign==0){
 23843  0035F8  0100               	movlb	0	; () banked
 23844  0035FA  EE20 F003          	lfsr	2,3
 23845  0035FE  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 23846  003600  26D9               	addwf	fsr2l,f,c
 23847  003602  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 23848  003604  22DA               	addwfc	fsr2h,f,c
 23849  003606  50DF               	movf	indf2,w,c
 23850  003608  A4D8               	btfss	status,2,c
 23851  00360A  D072               	goto	l14784
 23852                           
 23853                           ; BSR set to: 0
 23854                           ;ui.c: 221: if(x>9999)x=9999;
 23855  00360C  0E10               	movlw	16
 23856  00360E  0100               	movlb	0	; () banked
 23857  003610  5D87               	subwf	ui_disp_adj_xfloat_pt@x& (0+255),w,b
 23858  003612  0E27               	movlw	39
 23859  003614  0100               	movlb	0	; () banked
 23860  003616  5988               	subwfb	(ui_disp_adj_xfloat_pt@x+1)& (0+255),w,b
 23861  003618  A0D8               	btfss	status,0,c
 23862  00361A  D005               	goto	l14752
 23863                           
 23864                           ; BSR set to: 0
 23865  00361C  0E27               	movlw	39
 23866  00361E  0100               	movlb	0	; () banked
 23867  003620  6F88               	movwf	(ui_disp_adj_xfloat_pt@x+1)& (0+255),b
 23868  003622  0E0F               	movlw	15
 23869  003624  6F87               	movwf	ui_disp_adj_xfloat_pt@x& (0+255),b
 23870  003626                     l14752:
 23871                           
 23872                           ; BSR set to: 0
 23873                           ;ui.c: 222: m_int16_2_str_4(buf+4,x);
 23874  003626  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 23875  003628  0100               	movlb	0	; () banked
 23876  00362A  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 23877  00362C  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 23878  00362E  0100               	movlb	0	; () banked
 23879  003630  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 23880  003632  C087  F06A         	movff	ui_disp_adj_xfloat_pt@x,m_int16_2_str_4@x
 23881  003636  C088  F06B         	movff	ui_disp_adj_xfloat_pt@x+1,m_int16_2_str_4@x+1
 23882  00363A  ECAD  F027         	call	_m_int16_2_str_4	;wreg free
 23883                           
 23884                           ;ui.c: 223: __x_arrange_str(buf,8);
 23885  00363E  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 23886  003640  0100               	movlb	0	; () banked
 23887  003642  6F60               	movwf	___x_arrange_str@str& (0+255),b
 23888  003644  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 23889  003646  0100               	movlb	0	; () banked
 23890  003648  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 23891  00364A  0E08               	movlw	8
 23892  00364C  0100               	movlb	0	; () banked
 23893  00364E  6F62               	movwf	___x_arrange_str@len& (0+255),b
 23894  003650  ECBC  F048         	call	___x_arrange_str	;wreg free
 23895                           
 23896                           ;ui.c: 224: t8=xpf->stru.exponent;
 23897  003654  0100               	movlb	0	; () banked
 23898  003656  EE20 F002          	lfsr	2,2
 23899  00365A  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 23900  00365C  26D9               	addwf	fsr2l,f,c
 23901  00365E  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 23902  003660  22DA               	addwfc	fsr2h,f,c
 23903  003662  50DF               	movf	indf2,w,c
 23904  003664  0100               	movlb	0	; () banked
 23905  003666  6F89               	movwf	ui_disp_adj_xfloat_pt@t8& (0+255),b
 23906                           
 23907                           ; BSR set to: 0
 23908                           ;ui.c: 225: lcd_show_dp(4+t8,1);
 23909  003668  0E01               	movlw	1
 23910  00366A  0100               	movlb	0	; () banked
 23911  00366C  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23912  00366E  0100               	movlb	0	; () banked
 23913  003670  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23914  003672  0F04               	addlw	4
 23915  003674  EC5E  F045         	call	_lcd_show_dp
 23916                           
 23917                           ;ui.c: 226: if(loc<4){
 23918  003678  0E04               	movlw	4
 23919  00367A  0100               	movlb	0	; () banked
 23920  00367C  617A               	cpfslt	ui_disp_adj_xfloat_pt@loc& (0+255),b
 23921  00367E  D007               	goto	l14770
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;ui.c: 227: loc=3-loc;
 23925  003680  0100               	movlb	0	; () banked
 23926  003682  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23927  003684  0800               	sublw	0
 23928  003686  0F03               	addlw	3
 23929  003688  0100               	movlb	0	; () banked
 23930  00368A  6F7A               	movwf	ui_disp_adj_xfloat_pt@loc& (0+255),b
 23931  00368C  D078               	goto	l14806
 23932  00368E                     l14770:
 23933                           
 23934                           ; BSR set to: 0
 23935  00368E  0E04               	movlw	4
 23936  003690  0100               	movlb	0	; () banked
 23937  003692  197A               	xorwf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 23938  003694  A4D8               	btfss	status,2,c
 23939  003696  D00F               	goto	l828
 23940                           
 23941                           ; BSR set to: 0
 23942                           ;ui.c: 230: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))lcd_show_dp(4+t8,0);
 23943  003698  010F               	movlb	15	; () banked
 23944  00369A  B75F               	btfsc	95,3,b	;volatile
 23945  00369C  D0BB               	goto	l14826
 23946                           
 23947                           ; BSR set to: 15
 23948  00369E  5034               	movf	_lcdTwinkle,w,c
 23949  0036A0  A4D8               	btfss	status,2,c
 23950  0036A2  D0B8               	goto	l14826
 23951                           
 23952                           ; BSR set to: 15
 23953  0036A4  0E00               	movlw	0
 23954  0036A6  0100               	movlb	0	; () banked
 23955  0036A8  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23956  0036AA  0100               	movlb	0	; () banked
 23957  0036AC  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23958  0036AE  0F04               	addlw	4
 23959  0036B0  EC5E  F045         	call	_lcd_show_dp
 23960                           
 23961                           ;ui.c: 231: }else{
 23962  0036B4  D0AF               	goto	l14826
 23963  0036B6                     l828:
 23964                           
 23965                           ; BSR set to: 0
 23966                           ;ui.c: 232: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0)){
 23967  0036B6  010F               	movlb	15	; () banked
 23968  0036B8  B75F               	btfsc	95,3,b	;volatile
 23969  0036BA  D0AC               	goto	l14826
 23970                           
 23971                           ; BSR set to: 15
 23972  0036BC  5034               	movf	_lcdTwinkle,w,c
 23973  0036BE  A4D8               	btfss	status,2,c
 23974  0036C0  D0A9               	goto	l14826
 23975                           
 23976                           ; BSR set to: 15
 23977                           ;ui.c: 233: m_mem_cpy(buf+4,(uint8_t*)("    "));
 23978  0036C2  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 23979  0036C4  0100               	movlb	0	; () banked
 23980  0036C6  6F60               	movwf	m_mem_cpy@d& (0+255),b
 23981  0036C8  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 23982  0036CA  0100               	movlb	0	; () banked
 23983  0036CC  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 23984  0036CE  0E7A               	movlw	low (STR_2+4)
 23985  0036D0  0100               	movlb	0	; () banked
 23986  0036D2  6F62               	movwf	m_mem_cpy@s& (0+255),b
 23987  0036D4  0EF3               	movlw	high (STR_2+4)
 23988  0036D6  0100               	movlb	0	; () banked
 23989  0036D8  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 23990  0036DA  EC94  F045         	call	_m_mem_cpy	;wreg free
 23991                           
 23992                           ;ui.c: 234: lcd_show_dp(4+t8,0);
 23993  0036DE  0E00               	movlw	0
 23994  0036E0  0100               	movlb	0	; () banked
 23995  0036E2  6F70               	movwf	lcd_show_dp@show& (0+255),b
 23996  0036E4  0100               	movlb	0	; () banked
 23997  0036E6  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 23998  0036E8  0F04               	addlw	4
 23999  0036EA  EC5E  F045         	call	_lcd_show_dp
 24000                           
 24001                           ;ui.c: 235: }
 24002                           ;ui.c: 236: }
 24003                           ;ui.c: 237: }else{
 24004  0036EE  D092               	goto	l14826
 24005  0036F0                     l14784:
 24006                           
 24007                           ;ui.c: 238: if(loc==0)return;
 24008  0036F0  0100               	movlb	0	; () banked
 24009  0036F2  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 24010  0036F4  0100               	movlb	0	; () banked
 24011  0036F6  B4D8               	btfsc	status,2,c
 24012  0036F8  0012               	return	
 24013                           
 24014                           ; BSR set to: 0
 24015                           ;ui.c: 239: if(x>9999)x=9999;
 24016                           
 24017                           ; BSR set to: 0
 24018                           
 24019                           ; BSR set to: 0
 24020  0036FA  0E10               	movlw	16
 24021  0036FC  0100               	movlb	0	; () banked
 24022  0036FE  5D87               	subwf	ui_disp_adj_xfloat_pt@x& (0+255),w,b
 24023  003700  0E27               	movlw	39
 24024  003702  0100               	movlb	0	; () banked
 24025  003704  5988               	subwfb	(ui_disp_adj_xfloat_pt@x+1)& (0+255),w,b
 24026  003706  A0D8               	btfss	status,0,c
 24027  003708  D005               	goto	l14792
 24028                           
 24029                           ; BSR set to: 0
 24030  00370A  0E27               	movlw	39
 24031  00370C  0100               	movlb	0	; () banked
 24032  00370E  6F88               	movwf	(ui_disp_adj_xfloat_pt@x+1)& (0+255),b
 24033  003710  0E0F               	movlw	15
 24034  003712  6F87               	movwf	ui_disp_adj_xfloat_pt@x& (0+255),b
 24035  003714                     l14792:
 24036                           
 24037                           ; BSR set to: 0
 24038                           ;ui.c: 241: m_int16_2_str_4(buf+5,x);
 24039  003714  0E82               	movlw	low (ui_disp_adj_xfloat_pt@buf+5)
 24040  003716  0100               	movlb	0	; () banked
 24041  003718  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 24042  00371A  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+5)
 24043  00371C  0100               	movlb	0	; () banked
 24044  00371E  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 24045  003720  C087  F06A         	movff	ui_disp_adj_xfloat_pt@x,m_int16_2_str_4@x
 24046  003724  C088  F06B         	movff	ui_disp_adj_xfloat_pt@x+1,m_int16_2_str_4@x+1
 24047  003728  ECAD  F027         	call	_m_int16_2_str_4	;wreg free
 24048                           
 24049                           ;ui.c: 242: buf[4]='-';
 24050  00372C  0E2D               	movlw	45
 24051  00372E  0100               	movlb	0	; () banked
 24052  003730  6F81               	movwf	(ui_disp_adj_xfloat_pt@buf+4)& (0+255),b
 24053                           
 24054                           ; BSR set to: 0
 24055                           ;ui.c: 243: __x_arrange_str(buf,8);
 24056  003732  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 24057  003734  0100               	movlb	0	; () banked
 24058  003736  6F60               	movwf	___x_arrange_str@str& (0+255),b
 24059  003738  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 24060  00373A  0100               	movlb	0	; () banked
 24061  00373C  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 24062  00373E  0E08               	movlw	8
 24063  003740  0100               	movlb	0	; () banked
 24064  003742  6F62               	movwf	___x_arrange_str@len& (0+255),b
 24065  003744  ECBC  F048         	call	___x_arrange_str	;wreg free
 24066                           
 24067                           ;ui.c: 244: t8=xpf->stru.exponent;
 24068  003748  0100               	movlb	0	; () banked
 24069  00374A  EE20 F002          	lfsr	2,2
 24070  00374E  5178               	movf	ui_disp_adj_xfloat_pt@xpf& (0+255),w,b
 24071  003750  26D9               	addwf	fsr2l,f,c
 24072  003752  5179               	movf	(ui_disp_adj_xfloat_pt@xpf+1)& (0+255),w,b
 24073  003754  22DA               	addwfc	fsr2h,f,c
 24074  003756  50DF               	movf	indf2,w,c
 24075  003758  0100               	movlb	0	; () banked
 24076  00375A  6F89               	movwf	ui_disp_adj_xfloat_pt@t8& (0+255),b
 24077                           
 24078                           ; BSR set to: 0
 24079                           ;ui.c: 245: lcd_show_dp(4+1+t8,1);
 24080  00375C  0E01               	movlw	1
 24081  00375E  0100               	movlb	0	; () banked
 24082  003760  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24083  003762  0100               	movlb	0	; () banked
 24084  003764  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 24085  003766  0F05               	addlw	5
 24086  003768  EC5E  F045         	call	_lcd_show_dp
 24087                           
 24088                           ;ui.c: 246: if(loc<4){
 24089  00376C  0E04               	movlw	4
 24090  00376E  0100               	movlb	0	; () banked
 24091  003770  617A               	cpfslt	ui_disp_adj_xfloat_pt@loc& (0+255),b
 24092  003772  D020               	goto	l14812
 24093                           
 24094                           ; BSR set to: 0
 24095                           ;ui.c: 247: loc=3-loc+1;
 24096  003774  0100               	movlb	0	; () banked
 24097  003776  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 24098  003778  0800               	sublw	0
 24099  00377A  0F04               	addlw	4
 24100  00377C  D785               	goto	L23
 24101  00377E                     l14806:
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;ui.c: 248: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))buf[4+loc]=' ';
 24105  00377E  010F               	movlb	15	; () banked
 24106  003780  B75F               	btfsc	95,3,b	;volatile
 24107  003782  D048               	goto	l14826
 24108                           
 24109                           ; BSR set to: 15
 24110  003784  5034               	movf	_lcdTwinkle,w,c
 24111  003786  A4D8               	btfss	status,2,c
 24112  003788  D045               	goto	l14826
 24113                           
 24114                           ; BSR set to: 15
 24115  00378A  0100               	movlb	0	; () banked
 24116  00378C  517A               	movf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 24117  00378E  0100               	movlb	0	; () banked
 24118  003790  6F7B               	movwf	??_ui_disp_adj_xfloat_pt& (0+255),b
 24119  003792  6B7C               	clrf	(??_ui_disp_adj_xfloat_pt+1)& (0+255),b
 24120  003794  0E04               	movlw	4
 24121  003796  0100               	movlb	0	; () banked
 24122  003798  277B               	addwf	??_ui_disp_adj_xfloat_pt& (0+255),f,b
 24123  00379A  0E00               	movlw	0
 24124  00379C  237C               	addwfc	(??_ui_disp_adj_xfloat_pt+1)& (0+255),f,b
 24125  00379E  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 24126  0037A0  0100               	movlb	0	; () banked
 24127  0037A2  257B               	addwf	??_ui_disp_adj_xfloat_pt& (0+255),w,b
 24128  0037A4  6ED9               	movwf	fsr2l,c
 24129  0037A6  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 24130  0037A8  0100               	movlb	0	; () banked
 24131  0037AA  217C               	addwfc	(??_ui_disp_adj_xfloat_pt+1)& (0+255),w,b
 24132  0037AC  6EDA               	movwf	fsr2h,c
 24133  0037AE  0E20               	movlw	32
 24134  0037B0  6EDF               	movwf	indf2,c
 24135                           
 24136                           ; BSR set to: 0
 24137                           ;ui.c: 249: }else if(loc==4){
 24138  0037B2  D030               	goto	l14826
 24139  0037B4                     l14812:
 24140                           
 24141                           ; BSR set to: 0
 24142  0037B4  0E04               	movlw	4
 24143  0037B6  0100               	movlb	0	; () banked
 24144  0037B8  197A               	xorwf	ui_disp_adj_xfloat_pt@loc& (0+255),w,b
 24145  0037BA  A4D8               	btfss	status,2,c
 24146  0037BC  D00F               	goto	l839
 24147                           
 24148                           ; BSR set to: 0
 24149                           ;ui.c: 250: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0))lcd_show_dp(4+1+t8,0);
 24150  0037BE  010F               	movlb	15	; () banked
 24151  0037C0  B75F               	btfsc	95,3,b	;volatile
 24152  0037C2  D028               	goto	l14826
 24153                           
 24154                           ; BSR set to: 15
 24155  0037C4  5034               	movf	_lcdTwinkle,w,c
 24156  0037C6  A4D8               	btfss	status,2,c
 24157  0037C8  D025               	goto	l14826
 24158                           
 24159                           ; BSR set to: 15
 24160  0037CA  0E00               	movlw	0
 24161  0037CC  0100               	movlb	0	; () banked
 24162  0037CE  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24163  0037D0  0100               	movlb	0	; () banked
 24164  0037D2  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 24165  0037D4  0F05               	addlw	5
 24166  0037D6  EC5E  F045         	call	_lcd_show_dp
 24167                           
 24168                           ;ui.c: 251: }else{
 24169  0037DA  D01C               	goto	l14826
 24170  0037DC                     l839:
 24171                           
 24172                           ; BSR set to: 0
 24173                           ;ui.c: 252: if(!(RTCCFGbits.HALFSEC) && !(lcdTwinkle>0)){
 24174  0037DC  010F               	movlb	15	; () banked
 24175  0037DE  B75F               	btfsc	95,3,b	;volatile
 24176  0037E0  D019               	goto	l14826
 24177                           
 24178                           ; BSR set to: 15
 24179  0037E2  5034               	movf	_lcdTwinkle,w,c
 24180  0037E4  A4D8               	btfss	status,2,c
 24181  0037E6  D016               	goto	l14826
 24182                           
 24183                           ; BSR set to: 15
 24184                           ;ui.c: 253: m_mem_cpy(buf+4,(uint8_t*)("    "));
 24185  0037E8  0E81               	movlw	low (ui_disp_adj_xfloat_pt@buf+4)
 24186  0037EA  0100               	movlb	0	; () banked
 24187  0037EC  6F60               	movwf	m_mem_cpy@d& (0+255),b
 24188  0037EE  0E00               	movlw	high (ui_disp_adj_xfloat_pt@buf+4)
 24189  0037F0  0100               	movlb	0	; () banked
 24190  0037F2  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 24191  0037F4  0E7A               	movlw	low (STR_2+4)
 24192  0037F6  0100               	movlb	0	; () banked
 24193  0037F8  6F62               	movwf	m_mem_cpy@s& (0+255),b
 24194  0037FA  0EF3               	movlw	high (STR_2+4)
 24195  0037FC  0100               	movlb	0	; () banked
 24196  0037FE  6F63               	movwf	(m_mem_cpy@s+1)& (0+255),b
 24197  003800  EC94  F045         	call	_m_mem_cpy	;wreg free
 24198                           
 24199                           ;ui.c: 254: lcd_show_dp(4+1+t8,0);
 24200  003804  0E00               	movlw	0
 24201  003806  0100               	movlb	0	; () banked
 24202  003808  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24203  00380A  0100               	movlb	0	; () banked
 24204  00380C  5189               	movf	ui_disp_adj_xfloat_pt@t8& (0+255),w,b
 24205  00380E  0F05               	addlw	5
 24206  003810  EC5E  F045         	call	_lcd_show_dp
 24207  003814                     l14826:
 24208                           
 24209                           ;ui.c: 255: }
 24210                           ;ui.c: 256: }
 24211                           ;ui.c: 257: }
 24212                           ;ui.c: 258: lcd_show_string(buf);
 24213  003814  0E7D               	movlw	low ui_disp_adj_xfloat_pt@buf
 24214  003816  0100               	movlb	0	; () banked
 24215  003818  6F73               	movwf	lcd_show_string@str& (0+255),b
 24216  00381A  0E00               	movlw	high ui_disp_adj_xfloat_pt@buf
 24217  00381C  0100               	movlb	0	; () banked
 24218  00381E  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 24219  003820  EC27  F045         	call	_lcd_show_string	;wreg free
 24220                           
 24221                           ;ui.c: 259: lcd_disp_refresh();
 24222  003824  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 24223  003828  0012               	return		;funcret
 24224  00382A                     __end_of_ui_disp_adj_xfloat_pt:
 24225                           	opt stack 0
 24226                           tosu	equ	0xFFF
 24227                           tosh	equ	0xFFE
 24228                           tosl	equ	0xFFD
 24229                           pclath	equ	0xFFA
 24230                           tblptru	equ	0xFF8
 24231                           tblptrh	equ	0xFF7
 24232                           tblptrl	equ	0xFF6
 24233                           tablat	equ	0xFF5
 24234                           prodh	equ	0xFF4
 24235                           prodl	equ	0xFF3
 24236                           intcon	equ	0xFF2
 24237                           indf0	equ	0xFEF
 24238                           postinc0	equ	0xFEE
 24239                           fsr0h	equ	0xFEA
 24240                           fsr0l	equ	0xFE9
 24241                           wreg	equ	0xFE8
 24242                           indf1	equ	0xFE7
 24243                           postinc1	equ	0xFE6
 24244                           postdec1	equ	0xFE5
 24245                           plusw1	equ	0xFE3
 24246                           fsr1h	equ	0xFE2
 24247                           fsr1l	equ	0xFE1
 24248                           indf2	equ	0xFDF
 24249                           postinc2	equ	0xFDE
 24250                           postdec2	equ	0xFDD
 24251                           plusw2	equ	0xFDB
 24252                           fsr2h	equ	0xFDA
 24253                           fsr2l	equ	0xFD9
 24254                           status	equ	0xFD8
 24255                           
 24256 ;; *************** function _ui_disp_menu_bar_full_adj *****************
 24257 ;; Defined at:
 24258 ;;		line 734 in file "src/api/ui.c"
 24259 ;; Parameters:    Size  Location     Type
 24260 ;;		None
 24261 ;; Auto vars:     Size  Location     Type
 24262 ;;		None
 24263 ;; Return value:  Size  Location     Type
 24264 ;;                  1    wreg      void 
 24265 ;; Registers used:
 24266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24267 ;; Tracked objects:
 24268 ;;		On entry : 0/0
 24269 ;;		On exit  : 0/0
 24270 ;;		Unchanged: 0/0
 24271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24276 ;;Total ram usage:        0 bytes
 24277 ;; Hardware stack levels used:    1
 24278 ;; Hardware stack levels required when called:   11
 24279 ;; This function calls:
 24280 ;;		_lcd_disp_all
 24281 ;;		_lcd_disp_logo
 24282 ;;		_ui_disp_adj_xfixed_pt_dp
 24283 ;; This function is called by:
 24284 ;;		_ui_disp_menu
 24285 ;; This function uses a non-reentrant model
 24286 ;;
 24287                           
 24288                           	psect	text129
 24289  009CD0                     __ptext129:
 24290                           	opt stack 0
 24291  009CD0                     _ui_disp_menu_bar_full_adj:
 24292                           	opt stack 17
 24293                           
 24294                           ;ui.c: 736: lcd_disp_all(0x00);;
 24295                           
 24296                           ;incstack = 0
 24297  009CD0  0E00               	movlw	0
 24298  009CD2  EC28  F04F         	call	_lcd_disp_all
 24299                           
 24300                           ;ui.c: 737: lcd_disp_logo(1);
 24301  009CD6  0E01               	movlw	1
 24302  009CD8  EC10  F04F         	call	_lcd_disp_logo
 24303                           
 24304                           ;ui.c: 738: ui_disp_adj_xfixed_pt_dp((uint8_t*)" scl",(int16_t)adjValue,adjLocation,0);
 24305  009CDC  0EE6               	movlw	low STR_31
 24306  009CDE  0100               	movlb	0	; () banked
 24307  009CE0  6F76               	movwf	ui_disp_adj_xfixed_pt_dp@str& (0+255),b
 24308  009CE2  0EF3               	movlw	high STR_31
 24309  009CE4  0100               	movlb	0	; () banked
 24310  009CE6  6F77               	movwf	(ui_disp_adj_xfixed_pt_dp@str+1)& (0+255),b
 24311  009CE8  C039  F078         	movff	_adjValue,ui_disp_adj_xfixed_pt_dp@x	;volatile
 24312  009CEC  C03A  F079         	movff	_adjValue+1,ui_disp_adj_xfixed_pt_dp@x+1	;volatile
 24313  009CF0  C03F  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt_dp@loc	;volatile
 24314  009CF4  0E00               	movlw	0
 24315  009CF6  0100               	movlb	0	; () banked
 24316  009CF8  6F7B               	movwf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),b
 24317  009CFA  EC9F  F034         	call	_ui_disp_adj_xfixed_pt_dp	;wreg free
 24318  009CFE  0012               	return		;funcret
 24319  009D00                     __end_of_ui_disp_menu_bar_full_adj:
 24320                           	opt stack 0
 24321                           tosu	equ	0xFFF
 24322                           tosh	equ	0xFFE
 24323                           tosl	equ	0xFFD
 24324                           pclath	equ	0xFFA
 24325                           tblptru	equ	0xFF8
 24326                           tblptrh	equ	0xFF7
 24327                           tblptrl	equ	0xFF6
 24328                           tablat	equ	0xFF5
 24329                           prodh	equ	0xFF4
 24330                           prodl	equ	0xFF3
 24331                           intcon	equ	0xFF2
 24332                           indf0	equ	0xFEF
 24333                           postinc0	equ	0xFEE
 24334                           fsr0h	equ	0xFEA
 24335                           fsr0l	equ	0xFE9
 24336                           wreg	equ	0xFE8
 24337                           indf1	equ	0xFE7
 24338                           postinc1	equ	0xFE6
 24339                           postdec1	equ	0xFE5
 24340                           plusw1	equ	0xFE3
 24341                           fsr1h	equ	0xFE2
 24342                           fsr1l	equ	0xFE1
 24343                           indf2	equ	0xFDF
 24344                           postinc2	equ	0xFDE
 24345                           postdec2	equ	0xFDD
 24346                           plusw2	equ	0xFDB
 24347                           fsr2h	equ	0xFDA
 24348                           fsr2l	equ	0xFD9
 24349                           status	equ	0xFD8
 24350                           
 24351 ;; *************** function _ui_disp_adj_xfixed_pt_dp *****************
 24352 ;; Defined at:
 24353 ;;		line 308 in file "src/api/ui.c"
 24354 ;; Parameters:    Size  Location     Type
 24355 ;;  str             2   22[BANK0 ] PTR unsigned char 
 24356 ;;		 -> STR_31(5), ui_disp_menu_poly_c_adj@buf(6), 
 24357 ;;  x               2   24[BANK0 ] unsigned int 
 24358 ;;  loc             1   26[BANK0 ] unsigned char 
 24359 ;;  dploc           1   27[BANK0 ] unsigned char 
 24360 ;; Auto vars:     Size  Location     Type
 24361 ;;  buf            10   30[BANK0 ] unsigned char [10]
 24362 ;; Return value:  Size  Location     Type
 24363 ;;                  1    wreg      void 
 24364 ;; Registers used:
 24365 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24366 ;; Tracked objects:
 24367 ;;		On entry : 0/0
 24368 ;;		On exit  : 0/0
 24369 ;;		Unchanged: 0/0
 24370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24371 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24372 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24374 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24375 ;;Total ram usage:       18 bytes
 24376 ;; Hardware stack levels used:    1
 24377 ;; Hardware stack levels required when called:   10
 24378 ;; This function calls:
 24379 ;;		___x_arrange_str
 24380 ;;		_lcd_disp_refresh
 24381 ;;		_lcd_show_dp
 24382 ;;		_lcd_show_string
 24383 ;;		_m_int16_2_str_4
 24384 ;;		_m_mem_cpy
 24385 ;;		_ui_disp_clear_num_dp
 24386 ;; This function is called by:
 24387 ;;		_ui_disp_menu_poly_c_adj
 24388 ;;		_ui_disp_menu_bar_full_adj
 24389 ;; This function uses a non-reentrant model
 24390 ;;
 24391                           
 24392                           	psect	text130
 24393  00693E                     __ptext130:
 24394                           	opt stack 0
 24395  00693E                     _ui_disp_adj_xfixed_pt_dp:
 24396                           	opt stack 17
 24397                           
 24398                           ;ui.c: 310: uint8_t buf[10];
 24399                           ;ui.c: 311: ui_disp_clear_num_dp();
 24400                           
 24401                           ;incstack = 0
 24402  00693E  EC74  F049         	call	_ui_disp_clear_num_dp	;wreg free
 24403                           
 24404                           ;ui.c: 312: if(x>9999)x=9999;
 24405  006942  0E10               	movlw	16
 24406  006944  0100               	movlb	0	; () banked
 24407  006946  5D78               	subwf	ui_disp_adj_xfixed_pt_dp@x& (0+255),w,b
 24408  006948  0E27               	movlw	39
 24409  00694A  0100               	movlb	0	; () banked
 24410  00694C  5979               	subwfb	(ui_disp_adj_xfixed_pt_dp@x+1)& (0+255),w,b
 24411  00694E  A0D8               	btfss	status,0,c
 24412  006950  D005               	goto	l15390
 24413                           
 24414                           ; BSR set to: 0
 24415  006952  0E27               	movlw	39
 24416  006954  0100               	movlb	0	; () banked
 24417  006956  6F79               	movwf	(ui_disp_adj_xfixed_pt_dp@x+1)& (0+255),b
 24418  006958  0E0F               	movlw	15
 24419  00695A  6F78               	movwf	ui_disp_adj_xfixed_pt_dp@x& (0+255),b
 24420  00695C                     l15390:
 24421                           
 24422                           ; BSR set to: 0
 24423                           ;ui.c: 313: m_mem_cpy(buf,str);
 24424  00695C  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24425  00695E  0100               	movlb	0	; () banked
 24426  006960  6F60               	movwf	m_mem_cpy@d& (0+255),b
 24427  006962  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24428  006964  0100               	movlb	0	; () banked
 24429  006966  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
 24430  006968  C076  F062         	movff	ui_disp_adj_xfixed_pt_dp@str,m_mem_cpy@s
 24431  00696C  C077  F063         	movff	ui_disp_adj_xfixed_pt_dp@str+1,m_mem_cpy@s+1
 24432  006970  EC94  F045         	call	_m_mem_cpy	;wreg free
 24433                           
 24434                           ;ui.c: 314: m_int16_2_str_4(buf+4,x);
 24435  006974  0E82               	movlw	low (ui_disp_adj_xfixed_pt_dp@buf+4)
 24436  006976  0100               	movlb	0	; () banked
 24437  006978  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
 24438  00697A  0E00               	movlw	high (ui_disp_adj_xfixed_pt_dp@buf+4)
 24439  00697C  0100               	movlb	0	; () banked
 24440  00697E  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
 24441  006980  C078  F06A         	movff	ui_disp_adj_xfixed_pt_dp@x,m_int16_2_str_4@x
 24442  006984  C079  F06B         	movff	ui_disp_adj_xfixed_pt_dp@x+1,m_int16_2_str_4@x+1
 24443  006988  ECAD  F027         	call	_m_int16_2_str_4	;wreg free
 24444                           
 24445                           ;ui.c: 315: __x_arrange_str(buf,8);
 24446  00698C  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24447  00698E  0100               	movlb	0	; () banked
 24448  006990  6F60               	movwf	___x_arrange_str@str& (0+255),b
 24449  006992  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24450  006994  0100               	movlb	0	; () banked
 24451  006996  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
 24452  006998  0E08               	movlw	8
 24453  00699A  0100               	movlb	0	; () banked
 24454  00699C  6F62               	movwf	___x_arrange_str@len& (0+255),b
 24455  00699E  ECBC  F048         	call	___x_arrange_str	;wreg free
 24456                           
 24457                           ;ui.c: 316: if(loc>3)loc=3;
 24458  0069A2  0E03               	movlw	3
 24459  0069A4  0100               	movlb	0	; () banked
 24460  0069A6  657A               	cpfsgt	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 24461  0069A8  D003               	goto	l15400
 24462                           
 24463                           ; BSR set to: 0
 24464  0069AA  0E03               	movlw	3
 24465  0069AC  0100               	movlb	0	; () banked
 24466  0069AE  6F7A               	movwf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 24467  0069B0                     l15400:
 24468                           
 24469                           ; BSR set to: 0
 24470                           ;ui.c: 317: loc=3-loc;
 24471  0069B0  0100               	movlb	0	; () banked
 24472  0069B2  517A               	movf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),w,b
 24473  0069B4  0800               	sublw	0
 24474  0069B6  0F03               	addlw	3
 24475  0069B8  0100               	movlb	0	; () banked
 24476  0069BA  6F7A               	movwf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),b
 24477                           
 24478                           ; BSR set to: 0
 24479                           ;ui.c: 318: if(!(lcdTwinkle>0)){
 24480  0069BC  5034               	movf	_lcdTwinkle,w,c
 24481  0069BE  A4D8               	btfss	status,2,c
 24482  0069C0  D017               	goto	l15408
 24483                           
 24484                           ; BSR set to: 0
 24485                           ;ui.c: 319: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
 24486  0069C2  010F               	movlb	15	; () banked
 24487  0069C4  B75F               	btfsc	95,3,b	;volatile
 24488  0069C6  D014               	goto	l15408
 24489                           
 24490                           ; BSR set to: 15
 24491  0069C8  0100               	movlb	0	; () banked
 24492  0069CA  517A               	movf	ui_disp_adj_xfixed_pt_dp@loc& (0+255),w,b
 24493  0069CC  0100               	movlb	0	; () banked
 24494  0069CE  6F7C               	movwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),b
 24495  0069D0  6B7D               	clrf	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),b
 24496  0069D2  0E04               	movlw	4
 24497  0069D4  0100               	movlb	0	; () banked
 24498  0069D6  277C               	addwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),f,b
 24499  0069D8  0E00               	movlw	0
 24500  0069DA  237D               	addwfc	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),f,b
 24501  0069DC  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24502  0069DE  0100               	movlb	0	; () banked
 24503  0069E0  257C               	addwf	??_ui_disp_adj_xfixed_pt_dp& (0+255),w,b
 24504  0069E2  6ED9               	movwf	fsr2l,c
 24505  0069E4  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24506  0069E6  0100               	movlb	0	; () banked
 24507  0069E8  217D               	addwfc	(??_ui_disp_adj_xfixed_pt_dp+1)& (0+255),w,b
 24508  0069EA  6EDA               	movwf	fsr2h,c
 24509  0069EC  0E20               	movlw	32
 24510  0069EE  6EDF               	movwf	indf2,c
 24511  0069F0                     l15408:
 24512                           
 24513                           ;ui.c: 320: }
 24514                           ;ui.c: 321: lcd_show_dp(4+dploc,1);
 24515  0069F0  0E01               	movlw	1
 24516  0069F2  0100               	movlb	0	; () banked
 24517  0069F4  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24518  0069F6  0100               	movlb	0	; () banked
 24519  0069F8  517B               	movf	ui_disp_adj_xfixed_pt_dp@dploc& (0+255),w,b
 24520  0069FA  0F04               	addlw	4
 24521  0069FC  EC5E  F045         	call	_lcd_show_dp
 24522                           
 24523                           ;ui.c: 322: lcd_show_string(buf);
 24524  006A00  0E7E               	movlw	low ui_disp_adj_xfixed_pt_dp@buf
 24525  006A02  0100               	movlb	0	; () banked
 24526  006A04  6F73               	movwf	lcd_show_string@str& (0+255),b
 24527  006A06  0E00               	movlw	high ui_disp_adj_xfixed_pt_dp@buf
 24528  006A08  0100               	movlb	0	; () banked
 24529  006A0A  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 24530  006A0C  EC27  F045         	call	_lcd_show_string	;wreg free
 24531                           
 24532                           ;ui.c: 323: lcd_disp_refresh();
 24533  006A10  EC5C  F048         	call	_lcd_disp_refresh	;wreg free
 24534  006A14  0012               	return		;funcret
 24535  006A16                     __end_of_ui_disp_adj_xfixed_pt_dp:
 24536                           	opt stack 0
 24537                           tosu	equ	0xFFF
 24538                           tosh	equ	0xFFE
 24539                           tosl	equ	0xFFD
 24540                           pclath	equ	0xFFA
 24541                           tblptru	equ	0xFF8
 24542                           tblptrh	equ	0xFF7
 24543                           tblptrl	equ	0xFF6
 24544                           tablat	equ	0xFF5
 24545                           prodh	equ	0xFF4
 24546                           prodl	equ	0xFF3
 24547                           intcon	equ	0xFF2
 24548                           indf0	equ	0xFEF
 24549                           postinc0	equ	0xFEE
 24550                           fsr0h	equ	0xFEA
 24551                           fsr0l	equ	0xFE9
 24552                           wreg	equ	0xFE8
 24553                           indf1	equ	0xFE7
 24554                           postinc1	equ	0xFE6
 24555                           postdec1	equ	0xFE5
 24556                           plusw1	equ	0xFE3
 24557                           fsr1h	equ	0xFE2
 24558                           fsr1l	equ	0xFE1
 24559                           indf2	equ	0xFDF
 24560                           postinc2	equ	0xFDE
 24561                           postdec2	equ	0xFDD
 24562                           plusw2	equ	0xFDB
 24563                           fsr2h	equ	0xFDA
 24564                           fsr2l	equ	0xFD9
 24565                           status	equ	0xFD8
 24566                           
 24567 ;; *************** function _ui_disp_clear_num_dp *****************
 24568 ;; Defined at:
 24569 ;;		line 193 in file "src/api/ui.c"
 24570 ;; Parameters:    Size  Location     Type
 24571 ;;		None
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;		None
 24574 ;; Return value:  Size  Location     Type
 24575 ;;                  1    wreg      void 
 24576 ;; Registers used:
 24577 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24578 ;; Tracked objects:
 24579 ;;		On entry : 0/0
 24580 ;;		On exit  : 0/0
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24587 ;;Total ram usage:        0 bytes
 24588 ;; Hardware stack levels used:    1
 24589 ;; Hardware stack levels required when called:    9
 24590 ;; This function calls:
 24591 ;;		_lcd_show_dp
 24592 ;;		_lcd_show_string
 24593 ;; This function is called by:
 24594 ;;		_ui_disp_adj_xfixed_pt
 24595 ;;		_ui_disp_adj_xfixed_pt_dp
 24596 ;; This function uses a non-reentrant model
 24597 ;;
 24598                           
 24599                           	psect	text131
 24600  0092E8                     __ptext131:
 24601                           	opt stack 0
 24602  0092E8                     _ui_disp_clear_num_dp:
 24603                           	opt stack 17
 24604                           
 24605                           ;ui.c: 195: lcd_show_string((uint8_t*)"        ");
 24606                           
 24607                           ;incstack = 0
 24608  0092E8  0E76               	movlw	low STR_2
 24609  0092EA  0100               	movlb	0	; () banked
 24610  0092EC  6F73               	movwf	lcd_show_string@str& (0+255),b
 24611  0092EE  0EF3               	movlw	high STR_2
 24612  0092F0  0100               	movlb	0	; () banked
 24613  0092F2  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
 24614  0092F4  EC27  F045         	call	_lcd_show_string	;wreg free
 24615                           
 24616                           ;ui.c: 196: lcd_show_dp(0,0);
 24617  0092F8  0E00               	movlw	0
 24618  0092FA  0100               	movlb	0	; () banked
 24619  0092FC  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24620  0092FE  0E00               	movlw	0
 24621  009300  EC5E  F045         	call	_lcd_show_dp
 24622                           
 24623                           ;ui.c: 197: lcd_show_dp(1,0);
 24624  009304  0E00               	movlw	0
 24625  009306  0100               	movlb	0	; () banked
 24626  009308  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24627  00930A  0E01               	movlw	1
 24628  00930C  EC5E  F045         	call	_lcd_show_dp
 24629                           
 24630                           ;ui.c: 198: lcd_show_dp(2,0);
 24631  009310  0E00               	movlw	0
 24632  009312  0100               	movlb	0	; () banked
 24633  009314  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24634  009316  0E02               	movlw	2
 24635  009318  EC5E  F045         	call	_lcd_show_dp
 24636                           
 24637                           ;ui.c: 199: lcd_show_dp(4,0);
 24638  00931C  0E00               	movlw	0
 24639  00931E  0100               	movlb	0	; () banked
 24640  009320  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24641  009322  0E04               	movlw	4
 24642  009324  EC5E  F045         	call	_lcd_show_dp
 24643                           
 24644                           ;ui.c: 200: lcd_show_dp(5,0);
 24645  009328  0E00               	movlw	0
 24646  00932A  0100               	movlb	0	; () banked
 24647  00932C  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24648  00932E  0E05               	movlw	5
 24649  009330  EC5E  F045         	call	_lcd_show_dp
 24650                           
 24651                           ;ui.c: 201: lcd_show_dp(6,0);
 24652  009334  0E00               	movlw	0
 24653  009336  0100               	movlb	0	; () banked
 24654  009338  6F70               	movwf	lcd_show_dp@show& (0+255),b
 24655  00933A  0E06               	movlw	6
 24656  00933C  EC5E  F045         	call	_lcd_show_dp
 24657  009340  0012               	return		;funcret
 24658  009342                     __end_of_ui_disp_clear_num_dp:
 24659                           	opt stack 0
 24660                           tosu	equ	0xFFF
 24661                           tosh	equ	0xFFE
 24662                           tosl	equ	0xFFD
 24663                           pclath	equ	0xFFA
 24664                           tblptru	equ	0xFF8
 24665                           tblptrh	equ	0xFF7
 24666                           tblptrl	equ	0xFF6
 24667                           tablat	equ	0xFF5
 24668                           prodh	equ	0xFF4
 24669                           prodl	equ	0xFF3
 24670                           intcon	equ	0xFF2
 24671                           indf0	equ	0xFEF
 24672                           postinc0	equ	0xFEE
 24673                           fsr0h	equ	0xFEA
 24674                           fsr0l	equ	0xFE9
 24675                           wreg	equ	0xFE8
 24676                           indf1	equ	0xFE7
 24677                           postinc1	equ	0xFE6
 24678                           postdec1	equ	0xFE5
 24679                           plusw1	equ	0xFE3
 24680                           fsr1h	equ	0xFE2
 24681                           fsr1l	equ	0xFE1
 24682                           indf2	equ	0xFDF
 24683                           postinc2	equ	0xFDE
 24684                           postdec2	equ	0xFDD
 24685                           plusw2	equ	0xFDB
 24686                           fsr2h	equ	0xFDA
 24687                           fsr2l	equ	0xFD9
 24688                           status	equ	0xFD8
 24689                           
 24690 ;; *************** function _lcd_show_string *****************
 24691 ;; Defined at:
 24692 ;;		line 562 in file "src/driver/lcd.c"
 24693 ;; Parameters:    Size  Location     Type
 24694 ;;  str             2   19[BANK0 ] PTR unsigned char 
 24695 ;;		 -> ui_disp_menu_work_mode_adj@buf(10), ui_disp_menu_calib_pr_adj@buf(10), ui_disp_menu_calib_diff_adj@buf(10), ui_d
      +isp_adj_xfixed_pt_dp@buf(10), 
 24696 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
 24697 ;; Auto vars:     Size  Location     Type
 24698 ;;  t8              1   21[BANK0 ] unsigned char 
 24699 ;; Return value:  Size  Location     Type
 24700 ;;                  1    wreg      void 
 24701 ;; Registers used:
 24702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24703 ;; Tracked objects:
 24704 ;;		On entry : 0/0
 24705 ;;		On exit  : 0/0
 24706 ;;		Unchanged: 0/0
 24707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24711 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24712 ;;Total ram usage:        3 bytes
 24713 ;; Hardware stack levels used:    1
 24714 ;; Hardware stack levels required when called:    8
 24715 ;; This function calls:
 24716 ;;		_lcd_show_chr
 24717 ;; This function is called by:
 24718 ;;		_ui_disp_clear_num_dp
 24719 ;;		_ui_disp_adj_xfloat_pt
 24720 ;;		_ui_disp_adj_xfixed_pt
 24721 ;;		_ui_disp_adj_xfixed_pt_dp
 24722 ;;		_ui_disp_menu_calib_diff_adj
 24723 ;;		_ui_disp_menu_calib_pr_adj
 24724 ;;		_ui_disp_menu_work_mode_adj
 24725 ;;		_ui_disp_rtc_mm_ss
 24726 ;; This function uses a non-reentrant model
 24727 ;;
 24728                           
 24729                           	psect	text132
 24730  008A4E                     __ptext132:
 24731                           	opt stack 0
 24732  008A4E                     _lcd_show_string:
 24733                           	opt stack 19
 24734                           
 24735                           ;lcd.c: 564: uint8_t t8=0;
 24736                           
 24737                           ;incstack = 0
 24738  008A4E  0E00               	movlw	0
 24739  008A50  0100               	movlb	0	; () banked
 24740  008A52  6F75               	movwf	lcd_show_string@t8& (0+255),b
 24741                           
 24742                           ;lcd.c: 565: while(*str!='\0' && t8<8){
 24743  008A54  D01B               	goto	l14052
 24744  008A56                     l14046:
 24745                           
 24746                           ; BSR set to: 0
 24747                           ;lcd.c: 566: lcd_show_chr(t8,*str);
 24748  008A56  C073  FFF6         	movff	lcd_show_string@str,tblptrl
 24749  008A5A  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
 24750  008A5E  6AF8               	clrf	tblptru,c
 24751  008A60  0E0F               	movlw	(high __ramtop+-1)
 24752  008A62  64F7               	cpfsgt	tblptrh,c
 24753  008A64  D003               	bra	u12897
 24754  008A66  0008               	tblrd		*
 24755  008A68  50F5               	movf	tablat,w,c
 24756  008A6A  D005               	bra	u12890
 24757  008A6C                     u12897:
 24758  008A6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 24759  008A70  CFF7 FFEA          	movff	tblptrh,fsr0h
 24760  008A74  50EF               	movf	indf0,w,c
 24761  008A76                     u12890:
 24762  008A76  0100               	movlb	0	; () banked
 24763  008A78  6F70               	movwf	lcd_show_chr@chr& (0+255),b
 24764  008A7A  0100               	movlb	0	; () banked
 24765  008A7C  5175               	movf	lcd_show_string@t8& (0+255),w,b
 24766  008A7E  EC4E  F03E         	call	_lcd_show_chr
 24767                           
 24768                           ;lcd.c: 567: str++;
 24769  008A82  0100               	movlb	0	; () banked
 24770  008A84  4B73               	infsnz	lcd_show_string@str& (0+255),f,b
 24771  008A86  2B74               	incf	(lcd_show_string@str+1)& (0+255),f,b
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;lcd.c: 568: t8++;
 24775  008A88  0100               	movlb	0	; () banked
 24776  008A8A  2B75               	incf	lcd_show_string@t8& (0+255),f,b
 24777  008A8C                     l14052:
 24778                           
 24779                           ; BSR set to: 0
 24780  008A8C  C073  FFF6         	movff	lcd_show_string@str,tblptrl
 24781  008A90  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
 24782  008A94  6AF8               	clrf	tblptru,c
 24783  008A96  0E0F               	movlw	(high __ramtop+-1)
 24784  008A98  64F7               	cpfsgt	tblptrh,c
 24785  008A9A  D003               	bra	u12907
 24786  008A9C  0008               	tblrd		*
 24787  008A9E  50F5               	movf	tablat,w,c
 24788  008AA0  D005               	bra	u12900
 24789  008AA2                     u12907:
 24790  008AA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 24791  008AA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 24792  008AAA  50EF               	movf	indf0,w,c
 24793  008AAC                     u12900:
 24794  008AAC  0900               	iorlw	0
 24795  008AAE  B4D8               	btfsc	status,2,c
 24796  008AB0  0012               	return	
 24797  008AB2  0E07               	movlw	7
 24798  008AB4  0100               	movlb	0	; () banked
 24799  008AB6  6575               	cpfsgt	lcd_show_string@t8& (0+255),b
 24800  008AB8  D7CE               	goto	l14046
 24801  008ABA  0012               	return	
 24802  008ABC                     __end_of_lcd_show_string:
 24803                           	opt stack 0
 24804                           tosu	equ	0xFFF
 24805                           tosh	equ	0xFFE
 24806                           tosl	equ	0xFFD
 24807                           pclath	equ	0xFFA
 24808                           tblptru	equ	0xFF8
 24809                           tblptrh	equ	0xFF7
 24810                           tblptrl	equ	0xFF6
 24811                           tablat	equ	0xFF5
 24812                           prodh	equ	0xFF4
 24813                           prodl	equ	0xFF3
 24814                           intcon	equ	0xFF2
 24815                           indf0	equ	0xFEF
 24816                           postinc0	equ	0xFEE
 24817                           fsr0h	equ	0xFEA
 24818                           fsr0l	equ	0xFE9
 24819                           wreg	equ	0xFE8
 24820                           indf1	equ	0xFE7
 24821                           postinc1	equ	0xFE6
 24822                           postdec1	equ	0xFE5
 24823                           plusw1	equ	0xFE3
 24824                           fsr1h	equ	0xFE2
 24825                           fsr1l	equ	0xFE1
 24826                           indf2	equ	0xFDF
 24827                           postinc2	equ	0xFDE
 24828                           postdec2	equ	0xFDD
 24829                           plusw2	equ	0xFDB
 24830                           fsr2h	equ	0xFDA
 24831                           fsr2l	equ	0xFD9
 24832                           status	equ	0xFD8
 24833                           
 24834 ;; *************** function _lcd_show_chr *****************
 24835 ;; Defined at:
 24836 ;;		line 517 in file "src/driver/lcd.c"
 24837 ;; Parameters:    Size  Location     Type
 24838 ;;  loc             1    wreg     unsigned char 
 24839 ;;  chr             1   16[BANK0 ] unsigned char 
 24840 ;; Auto vars:     Size  Location     Type
 24841 ;;  loc             1   17[BANK0 ] unsigned char 
 24842 ;;  code            1   18[BANK0 ] unsigned char 
 24843 ;; Return value:  Size  Location     Type
 24844 ;;                  1    wreg      void 
 24845 ;; Registers used:
 24846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24847 ;; Tracked objects:
 24848 ;;		On entry : 0/0
 24849 ;;		On exit  : 0/0
 24850 ;;		Unchanged: 0/0
 24851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24852 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24855 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24856 ;;Total ram usage:        3 bytes
 24857 ;; Hardware stack levels used:    1
 24858 ;; Hardware stack levels required when called:    7
 24859 ;; This function calls:
 24860 ;;		_lcd_disp_chr_loc_0
 24861 ;;		_lcd_disp_chr_loc_1
 24862 ;;		_lcd_disp_chr_loc_2
 24863 ;;		_lcd_disp_chr_loc_3
 24864 ;;		_lcd_disp_chr_loc_4
 24865 ;;		_lcd_disp_chr_loc_5
 24866 ;;		_lcd_disp_chr_loc_6
 24867 ;;		_lcd_disp_chr_loc_7
 24868 ;;		_lcd_disp_get_code
 24869 ;; This function is called by:
 24870 ;;		_lcd_show_string_l0
 24871 ;;		_lcd_show_string_l1
 24872 ;;		_lcd_show_string
 24873 ;;		_lcd_show_chr_lc
 24874 ;; This function uses a non-reentrant model
 24875 ;;
 24876                           
 24877                           	psect	text133
 24878  007C9C                     __ptext133:
 24879                           	opt stack 0
 24880  007C9C                     _lcd_show_chr:
 24881                           	opt stack 21
 24882                           
 24883                           ;incstack = 0
 24884                           ;lcd_show_chr@loc stored from wreg
 24885  007C9C  0100               	movlb	0	; () banked
 24886  007C9E  6F71               	movwf	lcd_show_chr@loc& (0+255),b
 24887                           
 24888                           ;lcd.c: 519: uint8_t code=lcd_disp_get_code(chr);
 24889  007CA0  0100               	movlb	0	; () banked
 24890  007CA2  5170               	movf	lcd_show_chr@chr& (0+255),w,b
 24891  007CA4  EC8D  F048         	call	_lcd_disp_get_code
 24892  007CA8  0100               	movlb	0	; () banked
 24893  007CAA  6F72               	movwf	lcd_show_chr@code& (0+255),b
 24894                           
 24895                           ;lcd.c: 520: switch(loc){
 24896  007CAC  D028               	goto	l13348
 24897  007CAE                     l13330:
 24898                           
 24899                           ; BSR set to: 0
 24900  007CAE  0100               	movlb	0	; () banked
 24901  007CB0  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24902  007CB2  EC92  F040         	call	_lcd_disp_chr_loc_0
 24903  007CB6  0012               	return	
 24904  007CB8                     l13332:
 24905  007CB8  0100               	movlb	0	; () banked
 24906  007CBA  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24907  007CBC  EC4A  F040         	call	_lcd_disp_chr_loc_1
 24908  007CC0  0012               	return	
 24909  007CC2                     l13334:
 24910  007CC2  0100               	movlb	0	; () banked
 24911  007CC4  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24912  007CC6  EC02  F040         	call	_lcd_disp_chr_loc_2
 24913  007CCA  0012               	return	
 24914  007CCC                     l13336:
 24915  007CCC  0100               	movlb	0	; () banked
 24916  007CCE  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24917  007CD0  ECBA  F03F         	call	_lcd_disp_chr_loc_3
 24918  007CD4  0012               	return	
 24919  007CD6                     l13338:
 24920  007CD6  0100               	movlb	0	; () banked
 24921  007CD8  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24922  007CDA  EC72  F03F         	call	_lcd_disp_chr_loc_4
 24923  007CDE  0012               	return	
 24924  007CE0                     l13340:
 24925  007CE0  0100               	movlb	0	; () banked
 24926  007CE2  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24927  007CE4  EC2A  F03F         	call	_lcd_disp_chr_loc_5
 24928  007CE8  0012               	return	
 24929  007CEA                     l13342:
 24930  007CEA  0100               	movlb	0	; () banked
 24931  007CEC  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24932  007CEE  ECE2  F03E         	call	_lcd_disp_chr_loc_6
 24933  007CF2  0012               	return	
 24934  007CF4                     l13344:
 24935  007CF4  0100               	movlb	0	; () banked
 24936  007CF6  5172               	movf	lcd_show_chr@code& (0+255),w,b
 24937  007CF8  EC9A  F03E         	call	_lcd_disp_chr_loc_7
 24938                           
 24939                           ;lcd.c: 530: }
 24940                           
 24941                           ;lcd.c: 529: default:break;
 24942  007CFC  0012               	return	
 24943  007CFE                     l13348:
 24944  007CFE  0100               	movlb	0	; () banked
 24945  007D00  5171               	movf	lcd_show_chr@loc& (0+255),w,b
 24946                           
 24947                           ; Switch size 1, requested type "space"
 24948                           ; Number of cases is 8, Range of values is 0 to 7
 24949                           ; switch strategies available:
 24950                           ; Name         Instructions Cycles
 24951                           ; simple_byte           25    13 (average)
 24952                           ;	Chosen strategy is simple_byte
 24953  007D02  0A00               	xorlw	0	; case 0
 24954  007D04  B4D8               	btfsc	status,2,c
 24955  007D06  D7D3               	goto	l13330
 24956  007D08  0A01               	xorlw	1	; case 1
 24957  007D0A  B4D8               	btfsc	status,2,c
 24958  007D0C  D7D5               	goto	l13332
 24959  007D0E  0A03               	xorlw	3	; case 2
 24960  007D10  B4D8               	btfsc	status,2,c
 24961  007D12  D7D7               	goto	l13334
 24962  007D14  0A01               	xorlw	1	; case 3
 24963  007D16  B4D8               	btfsc	status,2,c
 24964  007D18  D7D9               	goto	l13336
 24965  007D1A  0A07               	xorlw	7	; case 4
 24966  007D1C  B4D8               	btfsc	status,2,c
 24967  007D1E  D7DB               	goto	l13338
 24968  007D20  0A01               	xorlw	1	; case 5
 24969  007D22  B4D8               	btfsc	status,2,c
 24970  007D24  D7DD               	goto	l13340
 24971  007D26  0A03               	xorlw	3	; case 6
 24972  007D28  B4D8               	btfsc	status,2,c
 24973  007D2A  D7DF               	goto	l13342
 24974  007D2C  0A01               	xorlw	1	; case 7
 24975  007D2E  A4D8               	btfss	status,2,c
 24976  007D30  0012               	return	
 24977  007D32  D7E0               	goto	l13344
 24978  007D34                     __end_of_lcd_show_chr:
 24979                           	opt stack 0
 24980                           tosu	equ	0xFFF
 24981                           tosh	equ	0xFFE
 24982                           tosl	equ	0xFFD
 24983                           pclath	equ	0xFFA
 24984                           tblptru	equ	0xFF8
 24985                           tblptrh	equ	0xFF7
 24986                           tblptrl	equ	0xFF6
 24987                           tablat	equ	0xFF5
 24988                           prodh	equ	0xFF4
 24989                           prodl	equ	0xFF3
 24990                           intcon	equ	0xFF2
 24991                           indf0	equ	0xFEF
 24992                           postinc0	equ	0xFEE
 24993                           fsr0h	equ	0xFEA
 24994                           fsr0l	equ	0xFE9
 24995                           wreg	equ	0xFE8
 24996                           indf1	equ	0xFE7
 24997                           postinc1	equ	0xFE6
 24998                           postdec1	equ	0xFE5
 24999                           plusw1	equ	0xFE3
 25000                           fsr1h	equ	0xFE2
 25001                           fsr1l	equ	0xFE1
 25002                           indf2	equ	0xFDF
 25003                           postinc2	equ	0xFDE
 25004                           postdec2	equ	0xFDD
 25005                           plusw2	equ	0xFDB
 25006                           fsr2h	equ	0xFDA
 25007                           fsr2l	equ	0xFD9
 25008                           status	equ	0xFD8
 25009                           
 25010 ;; *************** function _lcd_disp_get_code *****************
 25011 ;; Defined at:
 25012 ;;		line 479 in file "src/driver/lcd.c"
 25013 ;; Parameters:    Size  Location     Type
 25014 ;;  chr             1    wreg     unsigned char 
 25015 ;; Auto vars:     Size  Location     Type
 25016 ;;  chr             1    0[BANK0 ] unsigned char 
 25017 ;;  i               1    2[BANK0 ] unsigned char 
 25018 ;;  ret             1    1[BANK0 ] unsigned char 
 25019 ;; Return value:  Size  Location     Type
 25020 ;;                  1    wreg      unsigned char 
 25021 ;; Registers used:
 25022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 25023 ;; Tracked objects:
 25024 ;;		On entry : 0/0
 25025 ;;		On exit  : 0/0
 25026 ;;		Unchanged: 0/0
 25027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25029 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25031 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25032 ;;Total ram usage:        3 bytes
 25033 ;; Hardware stack levels used:    1
 25034 ;; Hardware stack levels required when called:    4
 25035 ;; This function calls:
 25036 ;;		Nothing
 25037 ;; This function is called by:
 25038 ;;		_lcd_show_chr
 25039 ;; This function uses a non-reentrant model
 25040 ;;
 25041                           
 25042                           	psect	text134
 25043  00911A                     __ptext134:
 25044                           	opt stack 0
 25045  00911A                     _lcd_disp_get_code:
 25046                           	opt stack 23
 25047                           
 25048                           ;incstack = 0
 25049                           ;lcd_disp_get_code@chr stored from wreg
 25050  00911A  0100               	movlb	0	; () banked
 25051  00911C  6F60               	movwf	lcd_disp_get_code@chr& (0+255),b
 25052                           
 25053                           ;lcd.c: 481: uint8_t i;
 25054                           ;lcd.c: 482: uint8_t ret;
 25055                           ;lcd.c: 483: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
 25056  00911E  0E00               	movlw	0
 25057  009120  0100               	movlb	0	; () banked
 25058  009122  6F62               	movwf	lcd_disp_get_code@i& (0+255),b
 25059  009124                     l13186:
 25060                           
 25061                           ; BSR set to: 0
 25062  009124  0E2A               	movlw	42
 25063  009126  0100               	movlb	0	; () banked
 25064  009128  6562               	cpfsgt	lcd_disp_get_code@i& (0+255),b
 25065  00912A  D001               	goto	l13190
 25066  00912C  D012               	goto	l13198
 25067  00912E                     l13190:
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;lcd.c: 484: if(chr==LCDDigitalIndexTable[i])break;
 25071  00912E  0100               	movlb	0	; () banked
 25072  009130  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 25073  009132  0D01               	mullw	1
 25074  009134  0EB7               	movlw	low _LCDDigitalIndexTable
 25075  009136  24F3               	addwf	prodl,w,c
 25076  009138  6EF6               	movwf	tblptrl,c
 25077  00913A  0EEE               	movlw	high _LCDDigitalIndexTable
 25078  00913C  20F4               	addwfc	prodh,w,c
 25079  00913E  6EF7               	movwf	tblptrh,c
 25080  009140                     	if	0	;There are less than 3 active tblptr bytes
 25081  009140                     	endif
 25082  009140  0008               	tblrd		*
 25083  009142  50F5               	movf	tablat,w,c
 25084  009144  0100               	movlb	0	; () banked
 25085  009146  1960               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
 25086  009148  B4D8               	btfsc	status,2,c
 25087  00914A  D003               	goto	l13198
 25088                           
 25089                           ; BSR set to: 0
 25090                           
 25091                           ; BSR set to: 0
 25092                           
 25093                           ; BSR set to: 0
 25094  00914C  0100               	movlb	0	; () banked
 25095  00914E  2B62               	incf	lcd_disp_get_code@i& (0+255),f,b
 25096  009150  D7E9               	goto	l13186
 25097  009152                     l13198:
 25098                           
 25099                           ; BSR set to: 0
 25100                           ;lcd.c: 485: }
 25101                           ;lcd.c: 486: if(i<sizeof(LCDDigitalIndexTable)){
 25102  009152  0E2B               	movlw	43
 25103  009154  0100               	movlb	0	; () banked
 25104  009156  6162               	cpfslt	lcd_disp_get_code@i& (0+255),b
 25105  009158  D00C               	goto	l13202
 25106                           
 25107                           ; BSR set to: 0
 25108                           ;lcd.c: 487: ret= LCDDigitalTable[i];
 25109  00915A  0100               	movlb	0	; () banked
 25110  00915C  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
 25111  00915E  0D01               	mullw	1
 25112  009160  0EE2               	movlw	low _LCDDigitalTable
 25113  009162  24F3               	addwf	prodl,w,c
 25114  009164  6EF6               	movwf	tblptrl,c
 25115  009166  0EEE               	movlw	high _LCDDigitalTable
 25116  009168  20F4               	addwfc	prodh,w,c
 25117  00916A  6EF7               	movwf	tblptrh,c
 25118  00916C                     	if	0	;There are less than 3 active tblptr bytes
 25119  00916C                     	endif
 25120  00916C  0008               	tblrd		*
 25121  00916E  CFF5 F061          	movff	tablat,lcd_disp_get_code@ret
 25122  009172                     l13202:
 25123                           
 25124                           ; BSR set to: 0
 25125                           ;lcd.c: 488: }
 25126                           ;lcd.c: 489: return ret;
 25127  009172  0100               	movlb	0	; () banked
 25128  009174  5161               	movf	lcd_disp_get_code@ret& (0+255),w,b
 25129  009176  0012               	return	
 25130  009178                     __end_of_lcd_disp_get_code:
 25131                           	opt stack 0
 25132                           tosu	equ	0xFFF
 25133                           tosh	equ	0xFFE
 25134                           tosl	equ	0xFFD
 25135                           pclath	equ	0xFFA
 25136                           tblptru	equ	0xFF8
 25137                           tblptrh	equ	0xFF7
 25138                           tblptrl	equ	0xFF6
 25139                           tablat	equ	0xFF5
 25140                           prodh	equ	0xFF4
 25141                           prodl	equ	0xFF3
 25142                           intcon	equ	0xFF2
 25143                           indf0	equ	0xFEF
 25144                           postinc0	equ	0xFEE
 25145                           fsr0h	equ	0xFEA
 25146                           fsr0l	equ	0xFE9
 25147                           wreg	equ	0xFE8
 25148                           indf1	equ	0xFE7
 25149                           postinc1	equ	0xFE6
 25150                           postdec1	equ	0xFE5
 25151                           plusw1	equ	0xFE3
 25152                           fsr1h	equ	0xFE2
 25153                           fsr1l	equ	0xFE1
 25154                           indf2	equ	0xFDF
 25155                           postinc2	equ	0xFDE
 25156                           postdec2	equ	0xFDD
 25157                           plusw2	equ	0xFDB
 25158                           fsr2h	equ	0xFDA
 25159                           fsr2l	equ	0xFD9
 25160                           status	equ	0xFD8
 25161                           
 25162 ;; *************** function _lcd_disp_chr_loc_7 *****************
 25163 ;; Defined at:
 25164 ;;		line 357 in file "src/driver/lcd.c"
 25165 ;; Parameters:    Size  Location     Type
 25166 ;;  code            1    wreg     unsigned char 
 25167 ;; Auto vars:     Size  Location     Type
 25168 ;;  code            1   31[COMRAM] unsigned char 
 25169 ;; Return value:  Size  Location     Type
 25170 ;;                  1    wreg      void 
 25171 ;; Registers used:
 25172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25173 ;; Tracked objects:
 25174 ;;		On entry : 0/0
 25175 ;;		On exit  : 0/0
 25176 ;;		Unchanged: 0/0
 25177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25182 ;;Total ram usage:        1 bytes
 25183 ;; Hardware stack levels used:    1
 25184 ;; Hardware stack levels required when called:    6
 25185 ;; This function calls:
 25186 ;;		_lcd_set_com_seg
 25187 ;; This function is called by:
 25188 ;;		_lcd_show_chr
 25189 ;; This function uses a non-reentrant model
 25190 ;;
 25191                           
 25192                           	psect	text135
 25193  007D34                     __ptext135:
 25194                           	opt stack 0
 25195  007D34                     _lcd_disp_chr_loc_7:
 25196                           	opt stack 21
 25197                           
 25198                           ; BSR set to: 0
 25199                           ;incstack = 0
 25200                           ;lcd_disp_chr_loc_7@code stored from wreg
 25201  007D34  6E20               	movwf	lcd_disp_chr_loc_7@code,c
 25202                           
 25203                           ;lcd.c: 359: lcd_set_com_seg(0,19,code&0x08);
 25204  007D36  0E13               	movlw	19
 25205  007D38  0100               	movlb	0	; () banked
 25206  007D3A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25207  007D3C  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25208  007D3E  0B08               	andlw	8
 25209  007D40  0100               	movlb	0	; () banked
 25210  007D42  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25211  007D44  0E00               	movlw	0
 25212  007D46  EC06  F037         	call	_lcd_set_com_seg
 25213                           
 25214                           ;lcd.c: 360: lcd_set_com_seg(1,19,code&0x10);
 25215  007D4A  0E13               	movlw	19
 25216  007D4C  0100               	movlb	0	; () banked
 25217  007D4E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25218  007D50  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25219  007D52  0B10               	andlw	16
 25220  007D54  0100               	movlb	0	; () banked
 25221  007D56  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25222  007D58  0E01               	movlw	1
 25223  007D5A  EC06  F037         	call	_lcd_set_com_seg
 25224                           
 25225                           ;lcd.c: 361: lcd_set_com_seg(2,19,code&0x20);
 25226  007D5E  0E13               	movlw	19
 25227  007D60  0100               	movlb	0	; () banked
 25228  007D62  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25229  007D64  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25230  007D66  0B20               	andlw	32
 25231  007D68  0100               	movlb	0	; () banked
 25232  007D6A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25233  007D6C  0E02               	movlw	2
 25234  007D6E  EC06  F037         	call	_lcd_set_com_seg
 25235                           
 25236                           ;lcd.c: 362: lcd_set_com_seg(3,19,code&0x01);
 25237  007D72  0E13               	movlw	19
 25238  007D74  0100               	movlb	0	; () banked
 25239  007D76  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25240  007D78  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25241  007D7A  0B01               	andlw	1
 25242  007D7C  0100               	movlb	0	; () banked
 25243  007D7E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25244  007D80  0E03               	movlw	3
 25245  007D82  EC06  F037         	call	_lcd_set_com_seg
 25246                           
 25247                           ;lcd.c: 364: lcd_set_com_seg(1,40,code&0x04);
 25248  007D86  0E28               	movlw	40
 25249  007D88  0100               	movlb	0	; () banked
 25250  007D8A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25251  007D8C  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25252  007D8E  0B04               	andlw	4
 25253  007D90  0100               	movlb	0	; () banked
 25254  007D92  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25255  007D94  0E01               	movlw	1
 25256  007D96  EC06  F037         	call	_lcd_set_com_seg
 25257                           
 25258                           ;lcd.c: 365: lcd_set_com_seg(2,40,code&0x40);
 25259  007D9A  0E28               	movlw	40
 25260  007D9C  0100               	movlb	0	; () banked
 25261  007D9E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25262  007DA0  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25263  007DA2  0B40               	andlw	64
 25264  007DA4  0100               	movlb	0	; () banked
 25265  007DA6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25266  007DA8  0E02               	movlw	2
 25267  007DAA  EC06  F037         	call	_lcd_set_com_seg
 25268                           
 25269                           ;lcd.c: 366: lcd_set_com_seg(3,40,code&0x02);
 25270  007DAE  0E28               	movlw	40
 25271  007DB0  0100               	movlb	0	; () banked
 25272  007DB2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25273  007DB4  5020               	movf	lcd_disp_chr_loc_7@code,w,c
 25274  007DB6  0B02               	andlw	2
 25275  007DB8  0100               	movlb	0	; () banked
 25276  007DBA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25277  007DBC  0E03               	movlw	3
 25278  007DBE  EC06  F037         	call	_lcd_set_com_seg
 25279  007DC2  0012               	return		;funcret
 25280  007DC4                     __end_of_lcd_disp_chr_loc_7:
 25281                           	opt stack 0
 25282                           tosu	equ	0xFFF
 25283                           tosh	equ	0xFFE
 25284                           tosl	equ	0xFFD
 25285                           pclath	equ	0xFFA
 25286                           tblptru	equ	0xFF8
 25287                           tblptrh	equ	0xFF7
 25288                           tblptrl	equ	0xFF6
 25289                           tablat	equ	0xFF5
 25290                           prodh	equ	0xFF4
 25291                           prodl	equ	0xFF3
 25292                           intcon	equ	0xFF2
 25293                           indf0	equ	0xFEF
 25294                           postinc0	equ	0xFEE
 25295                           fsr0h	equ	0xFEA
 25296                           fsr0l	equ	0xFE9
 25297                           wreg	equ	0xFE8
 25298                           indf1	equ	0xFE7
 25299                           postinc1	equ	0xFE6
 25300                           postdec1	equ	0xFE5
 25301                           plusw1	equ	0xFE3
 25302                           fsr1h	equ	0xFE2
 25303                           fsr1l	equ	0xFE1
 25304                           indf2	equ	0xFDF
 25305                           postinc2	equ	0xFDE
 25306                           postdec2	equ	0xFDD
 25307                           plusw2	equ	0xFDB
 25308                           fsr2h	equ	0xFDA
 25309                           fsr2l	equ	0xFD9
 25310                           status	equ	0xFD8
 25311                           
 25312 ;; *************** function _lcd_disp_chr_loc_6 *****************
 25313 ;; Defined at:
 25314 ;;		line 338 in file "src/driver/lcd.c"
 25315 ;; Parameters:    Size  Location     Type
 25316 ;;  code            1    wreg     unsigned char 
 25317 ;; Auto vars:     Size  Location     Type
 25318 ;;  code            1   31[COMRAM] unsigned char 
 25319 ;; Return value:  Size  Location     Type
 25320 ;;                  1    wreg      void 
 25321 ;; Registers used:
 25322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25323 ;; Tracked objects:
 25324 ;;		On entry : 0/0
 25325 ;;		On exit  : 0/0
 25326 ;;		Unchanged: 0/0
 25327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25332 ;;Total ram usage:        1 bytes
 25333 ;; Hardware stack levels used:    1
 25334 ;; Hardware stack levels required when called:    6
 25335 ;; This function calls:
 25336 ;;		_lcd_set_com_seg
 25337 ;; This function is called by:
 25338 ;;		_lcd_show_chr
 25339 ;; This function uses a non-reentrant model
 25340 ;;
 25341                           
 25342                           	psect	text136
 25343  007DC4                     __ptext136:
 25344                           	opt stack 0
 25345  007DC4                     _lcd_disp_chr_loc_6:
 25346                           	opt stack 21
 25347                           
 25348                           ;incstack = 0
 25349                           ;lcd_disp_chr_loc_6@code stored from wreg
 25350  007DC4  6E20               	movwf	lcd_disp_chr_loc_6@code,c
 25351                           
 25352                           ;lcd.c: 340: lcd_set_com_seg(0,14,code&0x08);
 25353  007DC6  0E0E               	movlw	14
 25354  007DC8  0100               	movlb	0	; () banked
 25355  007DCA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25356  007DCC  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25357  007DCE  0B08               	andlw	8
 25358  007DD0  0100               	movlb	0	; () banked
 25359  007DD2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25360  007DD4  0E00               	movlw	0
 25361  007DD6  EC06  F037         	call	_lcd_set_com_seg
 25362                           
 25363                           ;lcd.c: 341: lcd_set_com_seg(1,14,code&0x10);
 25364  007DDA  0E0E               	movlw	14
 25365  007DDC  0100               	movlb	0	; () banked
 25366  007DDE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25367  007DE0  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25368  007DE2  0B10               	andlw	16
 25369  007DE4  0100               	movlb	0	; () banked
 25370  007DE6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25371  007DE8  0E01               	movlw	1
 25372  007DEA  EC06  F037         	call	_lcd_set_com_seg
 25373                           
 25374                           ;lcd.c: 342: lcd_set_com_seg(2,14,code&0x20);
 25375  007DEE  0E0E               	movlw	14
 25376  007DF0  0100               	movlb	0	; () banked
 25377  007DF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25378  007DF4  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25379  007DF6  0B20               	andlw	32
 25380  007DF8  0100               	movlb	0	; () banked
 25381  007DFA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25382  007DFC  0E02               	movlw	2
 25383  007DFE  EC06  F037         	call	_lcd_set_com_seg
 25384                           
 25385                           ;lcd.c: 343: lcd_set_com_seg(3,14,code&0x01);
 25386  007E02  0E0E               	movlw	14
 25387  007E04  0100               	movlb	0	; () banked
 25388  007E06  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25389  007E08  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25390  007E0A  0B01               	andlw	1
 25391  007E0C  0100               	movlb	0	; () banked
 25392  007E0E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25393  007E10  0E03               	movlw	3
 25394  007E12  EC06  F037         	call	_lcd_set_com_seg
 25395                           
 25396                           ;lcd.c: 345: lcd_set_com_seg(1,15,code&0x04);
 25397  007E16  0E0F               	movlw	15
 25398  007E18  0100               	movlb	0	; () banked
 25399  007E1A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25400  007E1C  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25401  007E1E  0B04               	andlw	4
 25402  007E20  0100               	movlb	0	; () banked
 25403  007E22  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25404  007E24  0E01               	movlw	1
 25405  007E26  EC06  F037         	call	_lcd_set_com_seg
 25406                           
 25407                           ;lcd.c: 346: lcd_set_com_seg(2,15,code&0x40);
 25408  007E2A  0E0F               	movlw	15
 25409  007E2C  0100               	movlb	0	; () banked
 25410  007E2E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25411  007E30  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25412  007E32  0B40               	andlw	64
 25413  007E34  0100               	movlb	0	; () banked
 25414  007E36  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25415  007E38  0E02               	movlw	2
 25416  007E3A  EC06  F037         	call	_lcd_set_com_seg
 25417                           
 25418                           ;lcd.c: 347: lcd_set_com_seg(3,15,code&0x02);
 25419  007E3E  0E0F               	movlw	15
 25420  007E40  0100               	movlb	0	; () banked
 25421  007E42  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25422  007E44  5020               	movf	lcd_disp_chr_loc_6@code,w,c
 25423  007E46  0B02               	andlw	2
 25424  007E48  0100               	movlb	0	; () banked
 25425  007E4A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25426  007E4C  0E03               	movlw	3
 25427  007E4E  EC06  F037         	call	_lcd_set_com_seg
 25428  007E52  0012               	return		;funcret
 25429  007E54                     __end_of_lcd_disp_chr_loc_6:
 25430                           	opt stack 0
 25431                           tosu	equ	0xFFF
 25432                           tosh	equ	0xFFE
 25433                           tosl	equ	0xFFD
 25434                           pclath	equ	0xFFA
 25435                           tblptru	equ	0xFF8
 25436                           tblptrh	equ	0xFF7
 25437                           tblptrl	equ	0xFF6
 25438                           tablat	equ	0xFF5
 25439                           prodh	equ	0xFF4
 25440                           prodl	equ	0xFF3
 25441                           intcon	equ	0xFF2
 25442                           indf0	equ	0xFEF
 25443                           postinc0	equ	0xFEE
 25444                           fsr0h	equ	0xFEA
 25445                           fsr0l	equ	0xFE9
 25446                           wreg	equ	0xFE8
 25447                           indf1	equ	0xFE7
 25448                           postinc1	equ	0xFE6
 25449                           postdec1	equ	0xFE5
 25450                           plusw1	equ	0xFE3
 25451                           fsr1h	equ	0xFE2
 25452                           fsr1l	equ	0xFE1
 25453                           indf2	equ	0xFDF
 25454                           postinc2	equ	0xFDE
 25455                           postdec2	equ	0xFDD
 25456                           plusw2	equ	0xFDB
 25457                           fsr2h	equ	0xFDA
 25458                           fsr2l	equ	0xFD9
 25459                           status	equ	0xFD8
 25460                           
 25461 ;; *************** function _lcd_disp_chr_loc_5 *****************
 25462 ;; Defined at:
 25463 ;;		line 319 in file "src/driver/lcd.c"
 25464 ;; Parameters:    Size  Location     Type
 25465 ;;  code            1    wreg     unsigned char 
 25466 ;; Auto vars:     Size  Location     Type
 25467 ;;  code            1   31[COMRAM] unsigned char 
 25468 ;; Return value:  Size  Location     Type
 25469 ;;                  1    wreg      void 
 25470 ;; Registers used:
 25471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25472 ;; Tracked objects:
 25473 ;;		On entry : 0/0
 25474 ;;		On exit  : 0/0
 25475 ;;		Unchanged: 0/0
 25476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25481 ;;Total ram usage:        1 bytes
 25482 ;; Hardware stack levels used:    1
 25483 ;; Hardware stack levels required when called:    6
 25484 ;; This function calls:
 25485 ;;		_lcd_set_com_seg
 25486 ;; This function is called by:
 25487 ;;		_lcd_show_chr
 25488 ;; This function uses a non-reentrant model
 25489 ;;
 25490                           
 25491                           	psect	text137
 25492  007E54                     __ptext137:
 25493                           	opt stack 0
 25494  007E54                     _lcd_disp_chr_loc_5:
 25495                           	opt stack 21
 25496                           
 25497                           ;incstack = 0
 25498                           ;lcd_disp_chr_loc_5@code stored from wreg
 25499  007E54  6E20               	movwf	lcd_disp_chr_loc_5@code,c
 25500                           
 25501                           ;lcd.c: 321: lcd_set_com_seg(0,38,code&0x08);
 25502  007E56  0E26               	movlw	38
 25503  007E58  0100               	movlb	0	; () banked
 25504  007E5A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25505  007E5C  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25506  007E5E  0B08               	andlw	8
 25507  007E60  0100               	movlb	0	; () banked
 25508  007E62  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25509  007E64  0E00               	movlw	0
 25510  007E66  EC06  F037         	call	_lcd_set_com_seg
 25511                           
 25512                           ;lcd.c: 322: lcd_set_com_seg(1,38,code&0x10);
 25513  007E6A  0E26               	movlw	38
 25514  007E6C  0100               	movlb	0	; () banked
 25515  007E6E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25516  007E70  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25517  007E72  0B10               	andlw	16
 25518  007E74  0100               	movlb	0	; () banked
 25519  007E76  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25520  007E78  0E01               	movlw	1
 25521  007E7A  EC06  F037         	call	_lcd_set_com_seg
 25522                           
 25523                           ;lcd.c: 323: lcd_set_com_seg(2,38,code&0x20);
 25524  007E7E  0E26               	movlw	38
 25525  007E80  0100               	movlb	0	; () banked
 25526  007E82  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25527  007E84  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25528  007E86  0B20               	andlw	32
 25529  007E88  0100               	movlb	0	; () banked
 25530  007E8A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25531  007E8C  0E02               	movlw	2
 25532  007E8E  EC06  F037         	call	_lcd_set_com_seg
 25533                           
 25534                           ;lcd.c: 324: lcd_set_com_seg(3,38,code&0x01);
 25535  007E92  0E26               	movlw	38
 25536  007E94  0100               	movlb	0	; () banked
 25537  007E96  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25538  007E98  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25539  007E9A  0B01               	andlw	1
 25540  007E9C  0100               	movlb	0	; () banked
 25541  007E9E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25542  007EA0  0E03               	movlw	3
 25543  007EA2  EC06  F037         	call	_lcd_set_com_seg
 25544                           
 25545                           ;lcd.c: 326: lcd_set_com_seg(1,39,code&0x04);
 25546  007EA6  0E27               	movlw	39
 25547  007EA8  0100               	movlb	0	; () banked
 25548  007EAA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25549  007EAC  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25550  007EAE  0B04               	andlw	4
 25551  007EB0  0100               	movlb	0	; () banked
 25552  007EB2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25553  007EB4  0E01               	movlw	1
 25554  007EB6  EC06  F037         	call	_lcd_set_com_seg
 25555                           
 25556                           ;lcd.c: 327: lcd_set_com_seg(2,39,code&0x40);
 25557  007EBA  0E27               	movlw	39
 25558  007EBC  0100               	movlb	0	; () banked
 25559  007EBE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25560  007EC0  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25561  007EC2  0B40               	andlw	64
 25562  007EC4  0100               	movlb	0	; () banked
 25563  007EC6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25564  007EC8  0E02               	movlw	2
 25565  007ECA  EC06  F037         	call	_lcd_set_com_seg
 25566                           
 25567                           ;lcd.c: 328: lcd_set_com_seg(3,39,code&0x02);
 25568  007ECE  0E27               	movlw	39
 25569  007ED0  0100               	movlb	0	; () banked
 25570  007ED2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25571  007ED4  5020               	movf	lcd_disp_chr_loc_5@code,w,c
 25572  007ED6  0B02               	andlw	2
 25573  007ED8  0100               	movlb	0	; () banked
 25574  007EDA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25575  007EDC  0E03               	movlw	3
 25576  007EDE  EC06  F037         	call	_lcd_set_com_seg
 25577  007EE2  0012               	return		;funcret
 25578  007EE4                     __end_of_lcd_disp_chr_loc_5:
 25579                           	opt stack 0
 25580                           tosu	equ	0xFFF
 25581                           tosh	equ	0xFFE
 25582                           tosl	equ	0xFFD
 25583                           pclath	equ	0xFFA
 25584                           tblptru	equ	0xFF8
 25585                           tblptrh	equ	0xFF7
 25586                           tblptrl	equ	0xFF6
 25587                           tablat	equ	0xFF5
 25588                           prodh	equ	0xFF4
 25589                           prodl	equ	0xFF3
 25590                           intcon	equ	0xFF2
 25591                           indf0	equ	0xFEF
 25592                           postinc0	equ	0xFEE
 25593                           fsr0h	equ	0xFEA
 25594                           fsr0l	equ	0xFE9
 25595                           wreg	equ	0xFE8
 25596                           indf1	equ	0xFE7
 25597                           postinc1	equ	0xFE6
 25598                           postdec1	equ	0xFE5
 25599                           plusw1	equ	0xFE3
 25600                           fsr1h	equ	0xFE2
 25601                           fsr1l	equ	0xFE1
 25602                           indf2	equ	0xFDF
 25603                           postinc2	equ	0xFDE
 25604                           postdec2	equ	0xFDD
 25605                           plusw2	equ	0xFDB
 25606                           fsr2h	equ	0xFDA
 25607                           fsr2l	equ	0xFD9
 25608                           status	equ	0xFD8
 25609                           
 25610 ;; *************** function _lcd_disp_chr_loc_4 *****************
 25611 ;; Defined at:
 25612 ;;		line 300 in file "src/driver/lcd.c"
 25613 ;; Parameters:    Size  Location     Type
 25614 ;;  code            1    wreg     unsigned char 
 25615 ;; Auto vars:     Size  Location     Type
 25616 ;;  code            1   31[COMRAM] unsigned char 
 25617 ;; Return value:  Size  Location     Type
 25618 ;;                  1    wreg      void 
 25619 ;; Registers used:
 25620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25621 ;; Tracked objects:
 25622 ;;		On entry : 0/0
 25623 ;;		On exit  : 0/0
 25624 ;;		Unchanged: 0/0
 25625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25630 ;;Total ram usage:        1 bytes
 25631 ;; Hardware stack levels used:    1
 25632 ;; Hardware stack levels required when called:    6
 25633 ;; This function calls:
 25634 ;;		_lcd_set_com_seg
 25635 ;; This function is called by:
 25636 ;;		_lcd_show_chr
 25637 ;; This function uses a non-reentrant model
 25638 ;;
 25639                           
 25640                           	psect	text138
 25641  007EE4                     __ptext138:
 25642                           	opt stack 0
 25643  007EE4                     _lcd_disp_chr_loc_4:
 25644                           	opt stack 21
 25645                           
 25646                           ;incstack = 0
 25647                           ;lcd_disp_chr_loc_4@code stored from wreg
 25648  007EE4  6E20               	movwf	lcd_disp_chr_loc_4@code,c
 25649                           
 25650                           ;lcd.c: 302: lcd_set_com_seg(0,36,code&0x08);
 25651  007EE6  0E24               	movlw	36
 25652  007EE8  0100               	movlb	0	; () banked
 25653  007EEA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25654  007EEC  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25655  007EEE  0B08               	andlw	8
 25656  007EF0  0100               	movlb	0	; () banked
 25657  007EF2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25658  007EF4  0E00               	movlw	0
 25659  007EF6  EC06  F037         	call	_lcd_set_com_seg
 25660                           
 25661                           ;lcd.c: 303: lcd_set_com_seg(1,36,code&0x10);
 25662  007EFA  0E24               	movlw	36
 25663  007EFC  0100               	movlb	0	; () banked
 25664  007EFE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25665  007F00  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25666  007F02  0B10               	andlw	16
 25667  007F04  0100               	movlb	0	; () banked
 25668  007F06  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25669  007F08  0E01               	movlw	1
 25670  007F0A  EC06  F037         	call	_lcd_set_com_seg
 25671                           
 25672                           ;lcd.c: 304: lcd_set_com_seg(2,36,code&0x20);
 25673  007F0E  0E24               	movlw	36
 25674  007F10  0100               	movlb	0	; () banked
 25675  007F12  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25676  007F14  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25677  007F16  0B20               	andlw	32
 25678  007F18  0100               	movlb	0	; () banked
 25679  007F1A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25680  007F1C  0E02               	movlw	2
 25681  007F1E  EC06  F037         	call	_lcd_set_com_seg
 25682                           
 25683                           ;lcd.c: 305: lcd_set_com_seg(3,36,code&0x01);
 25684  007F22  0E24               	movlw	36
 25685  007F24  0100               	movlb	0	; () banked
 25686  007F26  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25687  007F28  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25688  007F2A  0B01               	andlw	1
 25689  007F2C  0100               	movlb	0	; () banked
 25690  007F2E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25691  007F30  0E03               	movlw	3
 25692  007F32  EC06  F037         	call	_lcd_set_com_seg
 25693                           
 25694                           ;lcd.c: 307: lcd_set_com_seg(1,37,code&0x04);
 25695  007F36  0E25               	movlw	37
 25696  007F38  0100               	movlb	0	; () banked
 25697  007F3A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25698  007F3C  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25699  007F3E  0B04               	andlw	4
 25700  007F40  0100               	movlb	0	; () banked
 25701  007F42  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25702  007F44  0E01               	movlw	1
 25703  007F46  EC06  F037         	call	_lcd_set_com_seg
 25704                           
 25705                           ;lcd.c: 308: lcd_set_com_seg(2,37,code&0x40);
 25706  007F4A  0E25               	movlw	37
 25707  007F4C  0100               	movlb	0	; () banked
 25708  007F4E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25709  007F50  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25710  007F52  0B40               	andlw	64
 25711  007F54  0100               	movlb	0	; () banked
 25712  007F56  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25713  007F58  0E02               	movlw	2
 25714  007F5A  EC06  F037         	call	_lcd_set_com_seg
 25715                           
 25716                           ;lcd.c: 309: lcd_set_com_seg(3,37,code&0x02);
 25717  007F5E  0E25               	movlw	37
 25718  007F60  0100               	movlb	0	; () banked
 25719  007F62  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25720  007F64  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 25721  007F66  0B02               	andlw	2
 25722  007F68  0100               	movlb	0	; () banked
 25723  007F6A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25724  007F6C  0E03               	movlw	3
 25725  007F6E  EC06  F037         	call	_lcd_set_com_seg
 25726  007F72  0012               	return		;funcret
 25727  007F74                     __end_of_lcd_disp_chr_loc_4:
 25728                           	opt stack 0
 25729                           tosu	equ	0xFFF
 25730                           tosh	equ	0xFFE
 25731                           tosl	equ	0xFFD
 25732                           pclath	equ	0xFFA
 25733                           tblptru	equ	0xFF8
 25734                           tblptrh	equ	0xFF7
 25735                           tblptrl	equ	0xFF6
 25736                           tablat	equ	0xFF5
 25737                           prodh	equ	0xFF4
 25738                           prodl	equ	0xFF3
 25739                           intcon	equ	0xFF2
 25740                           indf0	equ	0xFEF
 25741                           postinc0	equ	0xFEE
 25742                           fsr0h	equ	0xFEA
 25743                           fsr0l	equ	0xFE9
 25744                           wreg	equ	0xFE8
 25745                           indf1	equ	0xFE7
 25746                           postinc1	equ	0xFE6
 25747                           postdec1	equ	0xFE5
 25748                           plusw1	equ	0xFE3
 25749                           fsr1h	equ	0xFE2
 25750                           fsr1l	equ	0xFE1
 25751                           indf2	equ	0xFDF
 25752                           postinc2	equ	0xFDE
 25753                           postdec2	equ	0xFDD
 25754                           plusw2	equ	0xFDB
 25755                           fsr2h	equ	0xFDA
 25756                           fsr2l	equ	0xFD9
 25757                           status	equ	0xFD8
 25758                           
 25759 ;; *************** function _lcd_disp_chr_loc_3 *****************
 25760 ;; Defined at:
 25761 ;;		line 288 in file "src/driver/lcd.c"
 25762 ;; Parameters:    Size  Location     Type
 25763 ;;  code            1    wreg     unsigned char 
 25764 ;; Auto vars:     Size  Location     Type
 25765 ;;  code            1   31[COMRAM] unsigned char 
 25766 ;; Return value:  Size  Location     Type
 25767 ;;                  1    wreg      void 
 25768 ;; Registers used:
 25769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25770 ;; Tracked objects:
 25771 ;;		On entry : 0/0
 25772 ;;		On exit  : 0/0
 25773 ;;		Unchanged: 0/0
 25774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25779 ;;Total ram usage:        1 bytes
 25780 ;; Hardware stack levels used:    1
 25781 ;; Hardware stack levels required when called:    6
 25782 ;; This function calls:
 25783 ;;		_lcd_set_com_seg
 25784 ;; This function is called by:
 25785 ;;		_lcd_show_chr
 25786 ;; This function uses a non-reentrant model
 25787 ;;
 25788                           
 25789                           	psect	text139
 25790  007F74                     __ptext139:
 25791                           	opt stack 0
 25792  007F74                     _lcd_disp_chr_loc_3:
 25793                           	opt stack 21
 25794                           
 25795                           ;incstack = 0
 25796                           ;lcd_disp_chr_loc_3@code stored from wreg
 25797  007F74  6E20               	movwf	lcd_disp_chr_loc_3@code,c
 25798                           
 25799                           ;lcd.c: 290: lcd_set_com_seg(0,43,code&0x01);
 25800  007F76  0E2B               	movlw	43
 25801  007F78  0100               	movlb	0	; () banked
 25802  007F7A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25803  007F7C  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25804  007F7E  0B01               	andlw	1
 25805  007F80  0100               	movlb	0	; () banked
 25806  007F82  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25807  007F84  0E00               	movlw	0
 25808  007F86  EC06  F037         	call	_lcd_set_com_seg
 25809                           
 25810                           ;lcd.c: 291: lcd_set_com_seg(1,43,code&0x20);
 25811  007F8A  0E2B               	movlw	43
 25812  007F8C  0100               	movlb	0	; () banked
 25813  007F8E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25814  007F90  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25815  007F92  0B20               	andlw	32
 25816  007F94  0100               	movlb	0	; () banked
 25817  007F96  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25818  007F98  0E01               	movlw	1
 25819  007F9A  EC06  F037         	call	_lcd_set_com_seg
 25820                           
 25821                           ;lcd.c: 292: lcd_set_com_seg(2,43,code&0x10);
 25822  007F9E  0E2B               	movlw	43
 25823  007FA0  0100               	movlb	0	; () banked
 25824  007FA2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25825  007FA4  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25826  007FA6  0B10               	andlw	16
 25827  007FA8  0100               	movlb	0	; () banked
 25828  007FAA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25829  007FAC  0E02               	movlw	2
 25830  007FAE  EC06  F037         	call	_lcd_set_com_seg
 25831                           
 25832                           ;lcd.c: 293: lcd_set_com_seg(3,43,code&0x08);
 25833  007FB2  0E2B               	movlw	43
 25834  007FB4  0100               	movlb	0	; () banked
 25835  007FB6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25836  007FB8  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25837  007FBA  0B08               	andlw	8
 25838  007FBC  0100               	movlb	0	; () banked
 25839  007FBE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25840  007FC0  0E03               	movlw	3
 25841  007FC2  EC06  F037         	call	_lcd_set_com_seg
 25842                           
 25843                           ;lcd.c: 295: lcd_set_com_seg(0,42,code&0x02);
 25844  007FC6  0E2A               	movlw	42
 25845  007FC8  0100               	movlb	0	; () banked
 25846  007FCA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25847  007FCC  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25848  007FCE  0B02               	andlw	2
 25849  007FD0  0100               	movlb	0	; () banked
 25850  007FD2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25851  007FD4  0E00               	movlw	0
 25852  007FD6  EC06  F037         	call	_lcd_set_com_seg
 25853                           
 25854                           ;lcd.c: 296: lcd_set_com_seg(1,42,code&0x40);
 25855  007FDA  0E2A               	movlw	42
 25856  007FDC  0100               	movlb	0	; () banked
 25857  007FDE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25858  007FE0  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25859  007FE2  0B40               	andlw	64
 25860  007FE4  0100               	movlb	0	; () banked
 25861  007FE6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25862  007FE8  0E01               	movlw	1
 25863  007FEA  EC06  F037         	call	_lcd_set_com_seg
 25864                           
 25865                           ;lcd.c: 297: lcd_set_com_seg(2,42,code&0x04);
 25866  007FEE  0E2A               	movlw	42
 25867  007FF0  0100               	movlb	0	; () banked
 25868  007FF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25869  007FF4  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 25870  007FF6  0B04               	andlw	4
 25871  007FF8  0100               	movlb	0	; () banked
 25872  007FFA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25873  007FFC  0E02               	movlw	2
 25874  007FFE  EC06  F037         	call	_lcd_set_com_seg
 25875  008002  0012               	return		;funcret
 25876  008004                     __end_of_lcd_disp_chr_loc_3:
 25877                           	opt stack 0
 25878                           tosu	equ	0xFFF
 25879                           tosh	equ	0xFFE
 25880                           tosl	equ	0xFFD
 25881                           pclath	equ	0xFFA
 25882                           tblptru	equ	0xFF8
 25883                           tblptrh	equ	0xFF7
 25884                           tblptrl	equ	0xFF6
 25885                           tablat	equ	0xFF5
 25886                           prodh	equ	0xFF4
 25887                           prodl	equ	0xFF3
 25888                           intcon	equ	0xFF2
 25889                           indf0	equ	0xFEF
 25890                           postinc0	equ	0xFEE
 25891                           fsr0h	equ	0xFEA
 25892                           fsr0l	equ	0xFE9
 25893                           wreg	equ	0xFE8
 25894                           indf1	equ	0xFE7
 25895                           postinc1	equ	0xFE6
 25896                           postdec1	equ	0xFE5
 25897                           plusw1	equ	0xFE3
 25898                           fsr1h	equ	0xFE2
 25899                           fsr1l	equ	0xFE1
 25900                           indf2	equ	0xFDF
 25901                           postinc2	equ	0xFDE
 25902                           postdec2	equ	0xFDD
 25903                           plusw2	equ	0xFDB
 25904                           fsr2h	equ	0xFDA
 25905                           fsr2l	equ	0xFD9
 25906                           status	equ	0xFD8
 25907                           
 25908 ;; *************** function _lcd_disp_chr_loc_2 *****************
 25909 ;; Defined at:
 25910 ;;		line 269 in file "src/driver/lcd.c"
 25911 ;; Parameters:    Size  Location     Type
 25912 ;;  code            1    wreg     unsigned char 
 25913 ;; Auto vars:     Size  Location     Type
 25914 ;;  code            1   31[COMRAM] unsigned char 
 25915 ;; Return value:  Size  Location     Type
 25916 ;;                  1    wreg      void 
 25917 ;; Registers used:
 25918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25919 ;; Tracked objects:
 25920 ;;		On entry : 0/0
 25921 ;;		On exit  : 0/0
 25922 ;;		Unchanged: 0/0
 25923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25928 ;;Total ram usage:        1 bytes
 25929 ;; Hardware stack levels used:    1
 25930 ;; Hardware stack levels required when called:    6
 25931 ;; This function calls:
 25932 ;;		_lcd_set_com_seg
 25933 ;; This function is called by:
 25934 ;;		_lcd_show_chr
 25935 ;; This function uses a non-reentrant model
 25936 ;;
 25937                           
 25938                           	psect	text140
 25939  008004                     __ptext140:
 25940                           	opt stack 0
 25941  008004                     _lcd_disp_chr_loc_2:
 25942                           	opt stack 21
 25943                           
 25944                           ;incstack = 0
 25945                           ;lcd_disp_chr_loc_2@code stored from wreg
 25946  008004  6E20               	movwf	lcd_disp_chr_loc_2@code,c
 25947                           
 25948                           ;lcd.c: 271: lcd_set_com_seg(0,21,code&0x01);
 25949  008006  0E15               	movlw	21
 25950  008008  0100               	movlb	0	; () banked
 25951  00800A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25952  00800C  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25953  00800E  0B01               	andlw	1
 25954  008010  0100               	movlb	0	; () banked
 25955  008012  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25956  008014  0E00               	movlw	0
 25957  008016  EC06  F037         	call	_lcd_set_com_seg
 25958                           
 25959                           ;lcd.c: 272: lcd_set_com_seg(1,21,code&0x20);
 25960  00801A  0E15               	movlw	21
 25961  00801C  0100               	movlb	0	; () banked
 25962  00801E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25963  008020  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25964  008022  0B20               	andlw	32
 25965  008024  0100               	movlb	0	; () banked
 25966  008026  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25967  008028  0E01               	movlw	1
 25968  00802A  EC06  F037         	call	_lcd_set_com_seg
 25969                           
 25970                           ;lcd.c: 273: lcd_set_com_seg(2,21,code&0x10);
 25971  00802E  0E15               	movlw	21
 25972  008030  0100               	movlb	0	; () banked
 25973  008032  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25974  008034  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25975  008036  0B10               	andlw	16
 25976  008038  0100               	movlb	0	; () banked
 25977  00803A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25978  00803C  0E02               	movlw	2
 25979  00803E  EC06  F037         	call	_lcd_set_com_seg
 25980                           
 25981                           ;lcd.c: 274: lcd_set_com_seg(3,21,code&0x08);
 25982  008042  0E15               	movlw	21
 25983  008044  0100               	movlb	0	; () banked
 25984  008046  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25985  008048  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25986  00804A  0B08               	andlw	8
 25987  00804C  0100               	movlb	0	; () banked
 25988  00804E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 25989  008050  0E03               	movlw	3
 25990  008052  EC06  F037         	call	_lcd_set_com_seg
 25991                           
 25992                           ;lcd.c: 276: lcd_set_com_seg(0,20,code&0x02);
 25993  008056  0E14               	movlw	20
 25994  008058  0100               	movlb	0	; () banked
 25995  00805A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 25996  00805C  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 25997  00805E  0B02               	andlw	2
 25998  008060  0100               	movlb	0	; () banked
 25999  008062  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26000  008064  0E00               	movlw	0
 26001  008066  EC06  F037         	call	_lcd_set_com_seg
 26002                           
 26003                           ;lcd.c: 277: lcd_set_com_seg(1,20,code&0x40);
 26004  00806A  0E14               	movlw	20
 26005  00806C  0100               	movlb	0	; () banked
 26006  00806E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26007  008070  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 26008  008072  0B40               	andlw	64
 26009  008074  0100               	movlb	0	; () banked
 26010  008076  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26011  008078  0E01               	movlw	1
 26012  00807A  EC06  F037         	call	_lcd_set_com_seg
 26013                           
 26014                           ;lcd.c: 278: lcd_set_com_seg(2,20,code&0x04);
 26015  00807E  0E14               	movlw	20
 26016  008080  0100               	movlb	0	; () banked
 26017  008082  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26018  008084  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 26019  008086  0B04               	andlw	4
 26020  008088  0100               	movlb	0	; () banked
 26021  00808A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26022  00808C  0E02               	movlw	2
 26023  00808E  EC06  F037         	call	_lcd_set_com_seg
 26024  008092  0012               	return		;funcret
 26025  008094                     __end_of_lcd_disp_chr_loc_2:
 26026                           	opt stack 0
 26027                           tosu	equ	0xFFF
 26028                           tosh	equ	0xFFE
 26029                           tosl	equ	0xFFD
 26030                           pclath	equ	0xFFA
 26031                           tblptru	equ	0xFF8
 26032                           tblptrh	equ	0xFF7
 26033                           tblptrl	equ	0xFF6
 26034                           tablat	equ	0xFF5
 26035                           prodh	equ	0xFF4
 26036                           prodl	equ	0xFF3
 26037                           intcon	equ	0xFF2
 26038                           indf0	equ	0xFEF
 26039                           postinc0	equ	0xFEE
 26040                           fsr0h	equ	0xFEA
 26041                           fsr0l	equ	0xFE9
 26042                           wreg	equ	0xFE8
 26043                           indf1	equ	0xFE7
 26044                           postinc1	equ	0xFE6
 26045                           postdec1	equ	0xFE5
 26046                           plusw1	equ	0xFE3
 26047                           fsr1h	equ	0xFE2
 26048                           fsr1l	equ	0xFE1
 26049                           indf2	equ	0xFDF
 26050                           postinc2	equ	0xFDE
 26051                           postdec2	equ	0xFDD
 26052                           plusw2	equ	0xFDB
 26053                           fsr2h	equ	0xFDA
 26054                           fsr2l	equ	0xFD9
 26055                           status	equ	0xFD8
 26056                           
 26057 ;; *************** function _lcd_disp_chr_loc_1 *****************
 26058 ;; Defined at:
 26059 ;;		line 250 in file "src/driver/lcd.c"
 26060 ;; Parameters:    Size  Location     Type
 26061 ;;  code            1    wreg     unsigned char 
 26062 ;; Auto vars:     Size  Location     Type
 26063 ;;  code            1   31[COMRAM] unsigned char 
 26064 ;; Return value:  Size  Location     Type
 26065 ;;                  1    wreg      void 
 26066 ;; Registers used:
 26067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26068 ;; Tracked objects:
 26069 ;;		On entry : 0/0
 26070 ;;		On exit  : 0/0
 26071 ;;		Unchanged: 0/0
 26072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26077 ;;Total ram usage:        1 bytes
 26078 ;; Hardware stack levels used:    1
 26079 ;; Hardware stack levels required when called:    6
 26080 ;; This function calls:
 26081 ;;		_lcd_set_com_seg
 26082 ;; This function is called by:
 26083 ;;		_lcd_show_chr
 26084 ;; This function uses a non-reentrant model
 26085 ;;
 26086                           
 26087                           	psect	text141
 26088  008094                     __ptext141:
 26089                           	opt stack 0
 26090  008094                     _lcd_disp_chr_loc_1:
 26091                           	opt stack 21
 26092                           
 26093                           ;incstack = 0
 26094                           ;lcd_disp_chr_loc_1@code stored from wreg
 26095  008094  6E20               	movwf	lcd_disp_chr_loc_1@code,c
 26096                           
 26097                           ;lcd.c: 252: lcd_set_com_seg(0,23,code&0x01);
 26098  008096  0E17               	movlw	23
 26099  008098  0100               	movlb	0	; () banked
 26100  00809A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26101  00809C  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26102  00809E  0B01               	andlw	1
 26103  0080A0  0100               	movlb	0	; () banked
 26104  0080A2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26105  0080A4  0E00               	movlw	0
 26106  0080A6  EC06  F037         	call	_lcd_set_com_seg
 26107                           
 26108                           ;lcd.c: 253: lcd_set_com_seg(1,23,code&0x20);
 26109  0080AA  0E17               	movlw	23
 26110  0080AC  0100               	movlb	0	; () banked
 26111  0080AE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26112  0080B0  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26113  0080B2  0B20               	andlw	32
 26114  0080B4  0100               	movlb	0	; () banked
 26115  0080B6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26116  0080B8  0E01               	movlw	1
 26117  0080BA  EC06  F037         	call	_lcd_set_com_seg
 26118                           
 26119                           ;lcd.c: 254: lcd_set_com_seg(2,23,code&0x10);
 26120  0080BE  0E17               	movlw	23
 26121  0080C0  0100               	movlb	0	; () banked
 26122  0080C2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26123  0080C4  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26124  0080C6  0B10               	andlw	16
 26125  0080C8  0100               	movlb	0	; () banked
 26126  0080CA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26127  0080CC  0E02               	movlw	2
 26128  0080CE  EC06  F037         	call	_lcd_set_com_seg
 26129                           
 26130                           ;lcd.c: 255: lcd_set_com_seg(3,23,code&0x08);
 26131  0080D2  0E17               	movlw	23
 26132  0080D4  0100               	movlb	0	; () banked
 26133  0080D6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26134  0080D8  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26135  0080DA  0B08               	andlw	8
 26136  0080DC  0100               	movlb	0	; () banked
 26137  0080DE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26138  0080E0  0E03               	movlw	3
 26139  0080E2  EC06  F037         	call	_lcd_set_com_seg
 26140                           
 26141                           ;lcd.c: 257: lcd_set_com_seg(0,22,code&0x02);
 26142  0080E6  0E16               	movlw	22
 26143  0080E8  0100               	movlb	0	; () banked
 26144  0080EA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26145  0080EC  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26146  0080EE  0B02               	andlw	2
 26147  0080F0  0100               	movlb	0	; () banked
 26148  0080F2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26149  0080F4  0E00               	movlw	0
 26150  0080F6  EC06  F037         	call	_lcd_set_com_seg
 26151                           
 26152                           ;lcd.c: 258: lcd_set_com_seg(1,22,code&0x40);
 26153  0080FA  0E16               	movlw	22
 26154  0080FC  0100               	movlb	0	; () banked
 26155  0080FE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26156  008100  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26157  008102  0B40               	andlw	64
 26158  008104  0100               	movlb	0	; () banked
 26159  008106  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26160  008108  0E01               	movlw	1
 26161  00810A  EC06  F037         	call	_lcd_set_com_seg
 26162                           
 26163                           ;lcd.c: 259: lcd_set_com_seg(2,22,code&0x04);
 26164  00810E  0E16               	movlw	22
 26165  008110  0100               	movlb	0	; () banked
 26166  008112  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26167  008114  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 26168  008116  0B04               	andlw	4
 26169  008118  0100               	movlb	0	; () banked
 26170  00811A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26171  00811C  0E02               	movlw	2
 26172  00811E  EC06  F037         	call	_lcd_set_com_seg
 26173  008122  0012               	return		;funcret
 26174  008124                     __end_of_lcd_disp_chr_loc_1:
 26175                           	opt stack 0
 26176                           tosu	equ	0xFFF
 26177                           tosh	equ	0xFFE
 26178                           tosl	equ	0xFFD
 26179                           pclath	equ	0xFFA
 26180                           tblptru	equ	0xFF8
 26181                           tblptrh	equ	0xFF7
 26182                           tblptrl	equ	0xFF6
 26183                           tablat	equ	0xFF5
 26184                           prodh	equ	0xFF4
 26185                           prodl	equ	0xFF3
 26186                           intcon	equ	0xFF2
 26187                           indf0	equ	0xFEF
 26188                           postinc0	equ	0xFEE
 26189                           fsr0h	equ	0xFEA
 26190                           fsr0l	equ	0xFE9
 26191                           wreg	equ	0xFE8
 26192                           indf1	equ	0xFE7
 26193                           postinc1	equ	0xFE6
 26194                           postdec1	equ	0xFE5
 26195                           plusw1	equ	0xFE3
 26196                           fsr1h	equ	0xFE2
 26197                           fsr1l	equ	0xFE1
 26198                           indf2	equ	0xFDF
 26199                           postinc2	equ	0xFDE
 26200                           postdec2	equ	0xFDD
 26201                           plusw2	equ	0xFDB
 26202                           fsr2h	equ	0xFDA
 26203                           fsr2l	equ	0xFD9
 26204                           status	equ	0xFD8
 26205                           
 26206 ;; *************** function _lcd_disp_chr_loc_0 *****************
 26207 ;; Defined at:
 26208 ;;		line 230 in file "src/driver/lcd.c"
 26209 ;; Parameters:    Size  Location     Type
 26210 ;;  code            1    wreg     unsigned char 
 26211 ;; Auto vars:     Size  Location     Type
 26212 ;;  code            1   31[COMRAM] unsigned char 
 26213 ;; Return value:  Size  Location     Type
 26214 ;;                  1    wreg      void 
 26215 ;; Registers used:
 26216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26217 ;; Tracked objects:
 26218 ;;		On entry : 0/0
 26219 ;;		On exit  : 0/0
 26220 ;;		Unchanged: 0/0
 26221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26226 ;;Total ram usage:        1 bytes
 26227 ;; Hardware stack levels used:    1
 26228 ;; Hardware stack levels required when called:    6
 26229 ;; This function calls:
 26230 ;;		_lcd_set_com_seg
 26231 ;; This function is called by:
 26232 ;;		_lcd_show_chr
 26233 ;; This function uses a non-reentrant model
 26234 ;;
 26235                           
 26236                           	psect	text142
 26237  008124                     __ptext142:
 26238                           	opt stack 0
 26239  008124                     _lcd_disp_chr_loc_0:
 26240                           	opt stack 21
 26241                           
 26242                           ;incstack = 0
 26243                           ;lcd_disp_chr_loc_0@code stored from wreg
 26244  008124  6E20               	movwf	lcd_disp_chr_loc_0@code,c
 26245                           
 26246                           ;lcd.c: 232: lcd_set_com_seg(0,25,code&0x01);
 26247  008126  0E19               	movlw	25
 26248  008128  0100               	movlb	0	; () banked
 26249  00812A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26250  00812C  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26251  00812E  0B01               	andlw	1
 26252  008130  0100               	movlb	0	; () banked
 26253  008132  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26254  008134  0E00               	movlw	0
 26255  008136  EC06  F037         	call	_lcd_set_com_seg
 26256                           
 26257                           ;lcd.c: 233: lcd_set_com_seg(1,25,code&0x20);
 26258  00813A  0E19               	movlw	25
 26259  00813C  0100               	movlb	0	; () banked
 26260  00813E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26261  008140  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26262  008142  0B20               	andlw	32
 26263  008144  0100               	movlb	0	; () banked
 26264  008146  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26265  008148  0E01               	movlw	1
 26266  00814A  EC06  F037         	call	_lcd_set_com_seg
 26267                           
 26268                           ;lcd.c: 234: lcd_set_com_seg(2,25,code&0x10);
 26269  00814E  0E19               	movlw	25
 26270  008150  0100               	movlb	0	; () banked
 26271  008152  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26272  008154  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26273  008156  0B10               	andlw	16
 26274  008158  0100               	movlb	0	; () banked
 26275  00815A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26276  00815C  0E02               	movlw	2
 26277  00815E  EC06  F037         	call	_lcd_set_com_seg
 26278                           
 26279                           ;lcd.c: 235: lcd_set_com_seg(3,25,code&0x08);
 26280  008162  0E19               	movlw	25
 26281  008164  0100               	movlb	0	; () banked
 26282  008166  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26283  008168  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26284  00816A  0B08               	andlw	8
 26285  00816C  0100               	movlb	0	; () banked
 26286  00816E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26287  008170  0E03               	movlw	3
 26288  008172  EC06  F037         	call	_lcd_set_com_seg
 26289                           
 26290                           ;lcd.c: 237: lcd_set_com_seg(0,24,code&0x02);
 26291  008176  0E18               	movlw	24
 26292  008178  0100               	movlb	0	; () banked
 26293  00817A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26294  00817C  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26295  00817E  0B02               	andlw	2
 26296  008180  0100               	movlb	0	; () banked
 26297  008182  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26298  008184  0E00               	movlw	0
 26299  008186  EC06  F037         	call	_lcd_set_com_seg
 26300                           
 26301                           ;lcd.c: 238: lcd_set_com_seg(1,24,code&0x40);
 26302  00818A  0E18               	movlw	24
 26303  00818C  0100               	movlb	0	; () banked
 26304  00818E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26305  008190  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26306  008192  0B40               	andlw	64
 26307  008194  0100               	movlb	0	; () banked
 26308  008196  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26309  008198  0E01               	movlw	1
 26310  00819A  EC06  F037         	call	_lcd_set_com_seg
 26311                           
 26312                           ;lcd.c: 239: lcd_set_com_seg(2,24,code&0x04);
 26313  00819E  0E18               	movlw	24
 26314  0081A0  0100               	movlb	0	; () banked
 26315  0081A2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26316  0081A4  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 26317  0081A6  0B04               	andlw	4
 26318  0081A8  0100               	movlb	0	; () banked
 26319  0081AA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26320  0081AC  0E02               	movlw	2
 26321  0081AE  EC06  F037         	call	_lcd_set_com_seg
 26322  0081B2  0012               	return		;funcret
 26323  0081B4                     __end_of_lcd_disp_chr_loc_0:
 26324                           	opt stack 0
 26325                           tosu	equ	0xFFF
 26326                           tosh	equ	0xFFE
 26327                           tosl	equ	0xFFD
 26328                           pclath	equ	0xFFA
 26329                           tblptru	equ	0xFF8
 26330                           tblptrh	equ	0xFF7
 26331                           tblptrl	equ	0xFF6
 26332                           tablat	equ	0xFF5
 26333                           prodh	equ	0xFF4
 26334                           prodl	equ	0xFF3
 26335                           intcon	equ	0xFF2
 26336                           indf0	equ	0xFEF
 26337                           postinc0	equ	0xFEE
 26338                           fsr0h	equ	0xFEA
 26339                           fsr0l	equ	0xFE9
 26340                           wreg	equ	0xFE8
 26341                           indf1	equ	0xFE7
 26342                           postinc1	equ	0xFE6
 26343                           postdec1	equ	0xFE5
 26344                           plusw1	equ	0xFE3
 26345                           fsr1h	equ	0xFE2
 26346                           fsr1l	equ	0xFE1
 26347                           indf2	equ	0xFDF
 26348                           postinc2	equ	0xFDE
 26349                           postdec2	equ	0xFDD
 26350                           plusw2	equ	0xFDB
 26351                           fsr2h	equ	0xFDA
 26352                           fsr2l	equ	0xFD9
 26353                           status	equ	0xFD8
 26354                           
 26355 ;; *************** function _lcd_show_dp *****************
 26356 ;; Defined at:
 26357 ;;		line 502 in file "src/driver/lcd.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;  loc             1    wreg     unsigned char 
 26360 ;;  show            1   16[BANK0 ] unsigned char 
 26361 ;; Auto vars:     Size  Location     Type
 26362 ;;  loc             1   17[BANK0 ] unsigned char 
 26363 ;; Return value:  Size  Location     Type
 26364 ;;                  1    wreg      void 
 26365 ;; Registers used:
 26366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26367 ;; Tracked objects:
 26368 ;;		On entry : 0/0
 26369 ;;		On exit  : 0/0
 26370 ;;		Unchanged: 0/0
 26371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26372 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26375 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26376 ;;Total ram usage:        2 bytes
 26377 ;; Hardware stack levels used:    1
 26378 ;; Hardware stack levels required when called:    7
 26379 ;; This function calls:
 26380 ;;		_lcd_disp_dp_loc_0
 26381 ;;		_lcd_disp_dp_loc_1
 26382 ;;		_lcd_disp_dp_loc_2
 26383 ;;		_lcd_disp_dp_loc_4
 26384 ;;		_lcd_disp_dp_loc_5
 26385 ;;		_lcd_disp_dp_loc_6
 26386 ;; This function is called by:
 26387 ;;		_ui_disp_clear_num_dp
 26388 ;;		_ui_disp_adj_xfloat_pt
 26389 ;;		_ui_disp_adj_xfixed_pt_dp
 26390 ;;		_ui_disp_xfloat_pt
 26391 ;;		_ui_disp_rtc_mm_ss
 26392 ;; This function uses a non-reentrant model
 26393 ;;
 26394                           
 26395                           	psect	text143
 26396  008ABC                     __ptext143:
 26397                           	opt stack 0
 26398  008ABC                     _lcd_show_dp:
 26399                           	opt stack 19
 26400                           
 26401                           ;incstack = 0
 26402                           ;lcd_show_dp@loc stored from wreg
 26403  008ABC  0100               	movlb	0	; () banked
 26404  008ABE  6F71               	movwf	lcd_show_dp@loc& (0+255),b
 26405                           
 26406                           ;lcd.c: 504: switch(loc){
 26407  008AC0  D01E               	goto	l14042
 26408  008AC2                     l14028:
 26409  008AC2  0100               	movlb	0	; () banked
 26410  008AC4  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26411  008AC6  ECF8  F04E         	call	_lcd_disp_dp_loc_0
 26412  008ACA  0012               	return	
 26413  008ACC                     l14030:
 26414  008ACC  0100               	movlb	0	; () banked
 26415  008ACE  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26416  008AD0  ECE0  F04E         	call	_lcd_disp_dp_loc_1
 26417  008AD4  0012               	return	
 26418  008AD6                     l14032:
 26419  008AD6  0100               	movlb	0	; () banked
 26420  008AD8  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26421  008ADA  ECC8  F04E         	call	_lcd_disp_dp_loc_2
 26422  008ADE  0012               	return	
 26423  008AE0                     l14034:
 26424  008AE0  0100               	movlb	0	; () banked
 26425  008AE2  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26426  008AE4  ECB0  F04E         	call	_lcd_disp_dp_loc_4
 26427  008AE8  0012               	return	
 26428  008AEA                     l14036:
 26429  008AEA  0100               	movlb	0	; () banked
 26430  008AEC  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26431  008AEE  EC98  F04E         	call	_lcd_disp_dp_loc_5
 26432  008AF2  0012               	return	
 26433  008AF4                     l14038:
 26434  008AF4  0100               	movlb	0	; () banked
 26435  008AF6  5170               	movf	lcd_show_dp@show& (0+255),w,b
 26436  008AF8  EC80  F04E         	call	_lcd_disp_dp_loc_6
 26437                           
 26438                           ;lcd.c: 514: }
 26439                           
 26440                           ;lcd.c: 513: default:break;
 26441  008AFC  0012               	return	
 26442  008AFE                     l14042:
 26443  008AFE  0100               	movlb	0	; () banked
 26444  008B00  5171               	movf	lcd_show_dp@loc& (0+255),w,b
 26445                           
 26446                           ; Switch size 1, requested type "space"
 26447                           ; Number of cases is 6, Range of values is 0 to 6
 26448                           ; switch strategies available:
 26449                           ; Name         Instructions Cycles
 26450                           ; simple_byte           19    10 (average)
 26451                           ;	Chosen strategy is simple_byte
 26452  008B02  0A00               	xorlw	0	; case 0
 26453  008B04  B4D8               	btfsc	status,2,c
 26454  008B06  D7DD               	goto	l14028
 26455  008B08  0A01               	xorlw	1	; case 1
 26456  008B0A  B4D8               	btfsc	status,2,c
 26457  008B0C  D7DF               	goto	l14030
 26458  008B0E  0A03               	xorlw	3	; case 2
 26459  008B10  B4D8               	btfsc	status,2,c
 26460  008B12  D7E1               	goto	l14032
 26461  008B14  0A06               	xorlw	6	; case 4
 26462  008B16  B4D8               	btfsc	status,2,c
 26463  008B18  D7E3               	goto	l14034
 26464  008B1A  0A01               	xorlw	1	; case 5
 26465  008B1C  B4D8               	btfsc	status,2,c
 26466  008B1E  D7E5               	goto	l14036
 26467  008B20  0A03               	xorlw	3	; case 6
 26468  008B22  A4D8               	btfss	status,2,c
 26469  008B24  0012               	return	
 26470  008B26  D7E6               	goto	l14038
 26471  008B28                     __end_of_lcd_show_dp:
 26472                           	opt stack 0
 26473                           tosu	equ	0xFFF
 26474                           tosh	equ	0xFFE
 26475                           tosl	equ	0xFFD
 26476                           pclath	equ	0xFFA
 26477                           tblptru	equ	0xFF8
 26478                           tblptrh	equ	0xFF7
 26479                           tblptrl	equ	0xFF6
 26480                           tablat	equ	0xFF5
 26481                           prodh	equ	0xFF4
 26482                           prodl	equ	0xFF3
 26483                           intcon	equ	0xFF2
 26484                           indf0	equ	0xFEF
 26485                           postinc0	equ	0xFEE
 26486                           fsr0h	equ	0xFEA
 26487                           fsr0l	equ	0xFE9
 26488                           wreg	equ	0xFE8
 26489                           indf1	equ	0xFE7
 26490                           postinc1	equ	0xFE6
 26491                           postdec1	equ	0xFE5
 26492                           plusw1	equ	0xFE3
 26493                           fsr1h	equ	0xFE2
 26494                           fsr1l	equ	0xFE1
 26495                           indf2	equ	0xFDF
 26496                           postinc2	equ	0xFDE
 26497                           postdec2	equ	0xFDD
 26498                           plusw2	equ	0xFDB
 26499                           fsr2h	equ	0xFDA
 26500                           fsr2l	equ	0xFD9
 26501                           status	equ	0xFD8
 26502                           
 26503 ;; *************** function _lcd_disp_dp_loc_6 *****************
 26504 ;; Defined at:
 26505 ;;		line 349 in file "src/driver/lcd.c"
 26506 ;; Parameters:    Size  Location     Type
 26507 ;;  dp              1    wreg     unsigned char 
 26508 ;; Auto vars:     Size  Location     Type
 26509 ;;  dp              1   31[COMRAM] unsigned char 
 26510 ;; Return value:  Size  Location     Type
 26511 ;;                  1    wreg      void 
 26512 ;; Registers used:
 26513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26514 ;; Tracked objects:
 26515 ;;		On entry : 0/0
 26516 ;;		On exit  : 0/0
 26517 ;;		Unchanged: 0/0
 26518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26523 ;;Total ram usage:        1 bytes
 26524 ;; Hardware stack levels used:    1
 26525 ;; Hardware stack levels required when called:    6
 26526 ;; This function calls:
 26527 ;;		_lcd_set_com_seg
 26528 ;; This function is called by:
 26529 ;;		_lcd_show_dp
 26530 ;;		_lcd_clear_all_dp
 26531 ;; This function uses a non-reentrant model
 26532 ;;
 26533                           
 26534                           	psect	text144
 26535  009D00                     __ptext144:
 26536                           	opt stack 0
 26537  009D00                     _lcd_disp_dp_loc_6:
 26538                           	opt stack 19
 26539                           
 26540                           ;incstack = 0
 26541                           ;lcd_disp_dp_loc_6@dp stored from wreg
 26542  009D00  6E20               	movwf	lcd_disp_dp_loc_6@dp,c
 26543                           
 26544                           ;lcd.c: 351: if(dp)
 26545  009D02  5020               	movf	lcd_disp_dp_loc_6@dp,w,c
 26546  009D04  B4D8               	btfsc	status,2,c
 26547  009D06  D00A               	goto	l13326
 26548                           
 26549                           ;lcd.c: 352: lcd_set_com_seg(0,15,0x80);
 26550  009D08  0E0F               	movlw	15
 26551  009D0A  0100               	movlb	0	; () banked
 26552  009D0C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26553  009D0E  0E80               	movlw	128
 26554  009D10  0100               	movlb	0	; () banked
 26555  009D12  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26556  009D14  0E00               	movlw	0
 26557  009D16  EC06  F037         	call	_lcd_set_com_seg
 26558  009D1A  0012               	return	
 26559  009D1C                     l13326:
 26560                           
 26561                           ;lcd.c: 353: else
 26562                           ;lcd.c: 354: lcd_set_com_seg(0,15,0);
 26563  009D1C  0E0F               	movlw	15
 26564  009D1E  0100               	movlb	0	; () banked
 26565  009D20  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26566  009D22  0E00               	movlw	0
 26567  009D24  0100               	movlb	0	; () banked
 26568  009D26  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26569  009D28  0E00               	movlw	0
 26570  009D2A  EC06  F037         	call	_lcd_set_com_seg
 26571  009D2E  0012               	return	
 26572  009D30                     __end_of_lcd_disp_dp_loc_6:
 26573                           	opt stack 0
 26574                           tosu	equ	0xFFF
 26575                           tosh	equ	0xFFE
 26576                           tosl	equ	0xFFD
 26577                           pclath	equ	0xFFA
 26578                           tblptru	equ	0xFF8
 26579                           tblptrh	equ	0xFF7
 26580                           tblptrl	equ	0xFF6
 26581                           tablat	equ	0xFF5
 26582                           prodh	equ	0xFF4
 26583                           prodl	equ	0xFF3
 26584                           intcon	equ	0xFF2
 26585                           indf0	equ	0xFEF
 26586                           postinc0	equ	0xFEE
 26587                           fsr0h	equ	0xFEA
 26588                           fsr0l	equ	0xFE9
 26589                           wreg	equ	0xFE8
 26590                           indf1	equ	0xFE7
 26591                           postinc1	equ	0xFE6
 26592                           postdec1	equ	0xFE5
 26593                           plusw1	equ	0xFE3
 26594                           fsr1h	equ	0xFE2
 26595                           fsr1l	equ	0xFE1
 26596                           indf2	equ	0xFDF
 26597                           postinc2	equ	0xFDE
 26598                           postdec2	equ	0xFDD
 26599                           plusw2	equ	0xFDB
 26600                           fsr2h	equ	0xFDA
 26601                           fsr2l	equ	0xFD9
 26602                           status	equ	0xFD8
 26603                           
 26604 ;; *************** function _lcd_disp_dp_loc_5 *****************
 26605 ;; Defined at:
 26606 ;;		line 330 in file "src/driver/lcd.c"
 26607 ;; Parameters:    Size  Location     Type
 26608 ;;  dp              1    wreg     unsigned char 
 26609 ;; Auto vars:     Size  Location     Type
 26610 ;;  dp              1   31[COMRAM] unsigned char 
 26611 ;; Return value:  Size  Location     Type
 26612 ;;                  1    wreg      void 
 26613 ;; Registers used:
 26614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26615 ;; Tracked objects:
 26616 ;;		On entry : 0/0
 26617 ;;		On exit  : 0/0
 26618 ;;		Unchanged: 0/0
 26619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26624 ;;Total ram usage:        1 bytes
 26625 ;; Hardware stack levels used:    1
 26626 ;; Hardware stack levels required when called:    6
 26627 ;; This function calls:
 26628 ;;		_lcd_set_com_seg
 26629 ;; This function is called by:
 26630 ;;		_lcd_show_dp
 26631 ;;		_lcd_clear_all_dp
 26632 ;; This function uses a non-reentrant model
 26633 ;;
 26634                           
 26635                           	psect	text145
 26636  009D30                     __ptext145:
 26637                           	opt stack 0
 26638  009D30                     _lcd_disp_dp_loc_5:
 26639                           	opt stack 19
 26640                           
 26641                           ;incstack = 0
 26642                           ;lcd_disp_dp_loc_5@dp stored from wreg
 26643  009D30  6E20               	movwf	lcd_disp_dp_loc_5@dp,c
 26644                           
 26645                           ;lcd.c: 332: if(dp)
 26646  009D32  5020               	movf	lcd_disp_dp_loc_5@dp,w,c
 26647  009D34  B4D8               	btfsc	status,2,c
 26648  009D36  D00A               	goto	l13320
 26649                           
 26650                           ;lcd.c: 333: lcd_set_com_seg(0,39,0x80);
 26651  009D38  0E27               	movlw	39
 26652  009D3A  0100               	movlb	0	; () banked
 26653  009D3C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26654  009D3E  0E80               	movlw	128
 26655  009D40  0100               	movlb	0	; () banked
 26656  009D42  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26657  009D44  0E00               	movlw	0
 26658  009D46  EC06  F037         	call	_lcd_set_com_seg
 26659  009D4A  0012               	return	
 26660  009D4C                     l13320:
 26661                           
 26662                           ;lcd.c: 334: else
 26663                           ;lcd.c: 335: lcd_set_com_seg(0,39,0);
 26664  009D4C  0E27               	movlw	39
 26665  009D4E  0100               	movlb	0	; () banked
 26666  009D50  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26667  009D52  0E00               	movlw	0
 26668  009D54  0100               	movlb	0	; () banked
 26669  009D56  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26670  009D58  0E00               	movlw	0
 26671  009D5A  EC06  F037         	call	_lcd_set_com_seg
 26672  009D5E  0012               	return	
 26673  009D60                     __end_of_lcd_disp_dp_loc_5:
 26674                           	opt stack 0
 26675                           tosu	equ	0xFFF
 26676                           tosh	equ	0xFFE
 26677                           tosl	equ	0xFFD
 26678                           pclath	equ	0xFFA
 26679                           tblptru	equ	0xFF8
 26680                           tblptrh	equ	0xFF7
 26681                           tblptrl	equ	0xFF6
 26682                           tablat	equ	0xFF5
 26683                           prodh	equ	0xFF4
 26684                           prodl	equ	0xFF3
 26685                           intcon	equ	0xFF2
 26686                           indf0	equ	0xFEF
 26687                           postinc0	equ	0xFEE
 26688                           fsr0h	equ	0xFEA
 26689                           fsr0l	equ	0xFE9
 26690                           wreg	equ	0xFE8
 26691                           indf1	equ	0xFE7
 26692                           postinc1	equ	0xFE6
 26693                           postdec1	equ	0xFE5
 26694                           plusw1	equ	0xFE3
 26695                           fsr1h	equ	0xFE2
 26696                           fsr1l	equ	0xFE1
 26697                           indf2	equ	0xFDF
 26698                           postinc2	equ	0xFDE
 26699                           postdec2	equ	0xFDD
 26700                           plusw2	equ	0xFDB
 26701                           fsr2h	equ	0xFDA
 26702                           fsr2l	equ	0xFD9
 26703                           status	equ	0xFD8
 26704                           
 26705 ;; *************** function _lcd_disp_dp_loc_4 *****************
 26706 ;; Defined at:
 26707 ;;		line 311 in file "src/driver/lcd.c"
 26708 ;; Parameters:    Size  Location     Type
 26709 ;;  dp              1    wreg     unsigned char 
 26710 ;; Auto vars:     Size  Location     Type
 26711 ;;  dp              1   31[COMRAM] unsigned char 
 26712 ;; Return value:  Size  Location     Type
 26713 ;;                  1    wreg      void 
 26714 ;; Registers used:
 26715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26716 ;; Tracked objects:
 26717 ;;		On entry : 0/0
 26718 ;;		On exit  : 0/0
 26719 ;;		Unchanged: 0/0
 26720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26725 ;;Total ram usage:        1 bytes
 26726 ;; Hardware stack levels used:    1
 26727 ;; Hardware stack levels required when called:    6
 26728 ;; This function calls:
 26729 ;;		_lcd_set_com_seg
 26730 ;; This function is called by:
 26731 ;;		_lcd_show_dp
 26732 ;;		_lcd_clear_all_dp
 26733 ;; This function uses a non-reentrant model
 26734 ;;
 26735                           
 26736                           	psect	text146
 26737  009D60                     __ptext146:
 26738                           	opt stack 0
 26739  009D60                     _lcd_disp_dp_loc_4:
 26740                           	opt stack 19
 26741                           
 26742                           ;incstack = 0
 26743                           ;lcd_disp_dp_loc_4@dp stored from wreg
 26744  009D60  6E20               	movwf	lcd_disp_dp_loc_4@dp,c
 26745                           
 26746                           ;lcd.c: 313: if(dp)
 26747  009D62  5020               	movf	lcd_disp_dp_loc_4@dp,w,c
 26748  009D64  B4D8               	btfsc	status,2,c
 26749  009D66  D00A               	goto	l13314
 26750                           
 26751                           ;lcd.c: 314: lcd_set_com_seg(0,37,0x80);
 26752  009D68  0E25               	movlw	37
 26753  009D6A  0100               	movlb	0	; () banked
 26754  009D6C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26755  009D6E  0E80               	movlw	128
 26756  009D70  0100               	movlb	0	; () banked
 26757  009D72  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26758  009D74  0E00               	movlw	0
 26759  009D76  EC06  F037         	call	_lcd_set_com_seg
 26760  009D7A  0012               	return	
 26761  009D7C                     l13314:
 26762                           
 26763                           ;lcd.c: 315: else
 26764                           ;lcd.c: 316: lcd_set_com_seg(0,37,0);
 26765  009D7C  0E25               	movlw	37
 26766  009D7E  0100               	movlb	0	; () banked
 26767  009D80  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26768  009D82  0E00               	movlw	0
 26769  009D84  0100               	movlb	0	; () banked
 26770  009D86  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26771  009D88  0E00               	movlw	0
 26772  009D8A  EC06  F037         	call	_lcd_set_com_seg
 26773  009D8E  0012               	return	
 26774  009D90                     __end_of_lcd_disp_dp_loc_4:
 26775                           	opt stack 0
 26776                           tosu	equ	0xFFF
 26777                           tosh	equ	0xFFE
 26778                           tosl	equ	0xFFD
 26779                           pclath	equ	0xFFA
 26780                           tblptru	equ	0xFF8
 26781                           tblptrh	equ	0xFF7
 26782                           tblptrl	equ	0xFF6
 26783                           tablat	equ	0xFF5
 26784                           prodh	equ	0xFF4
 26785                           prodl	equ	0xFF3
 26786                           intcon	equ	0xFF2
 26787                           indf0	equ	0xFEF
 26788                           postinc0	equ	0xFEE
 26789                           fsr0h	equ	0xFEA
 26790                           fsr0l	equ	0xFE9
 26791                           wreg	equ	0xFE8
 26792                           indf1	equ	0xFE7
 26793                           postinc1	equ	0xFE6
 26794                           postdec1	equ	0xFE5
 26795                           plusw1	equ	0xFE3
 26796                           fsr1h	equ	0xFE2
 26797                           fsr1l	equ	0xFE1
 26798                           indf2	equ	0xFDF
 26799                           postinc2	equ	0xFDE
 26800                           postdec2	equ	0xFDD
 26801                           plusw2	equ	0xFDB
 26802                           fsr2h	equ	0xFDA
 26803                           fsr2l	equ	0xFD9
 26804                           status	equ	0xFD8
 26805                           
 26806 ;; *************** function _lcd_disp_dp_loc_2 *****************
 26807 ;; Defined at:
 26808 ;;		line 280 in file "src/driver/lcd.c"
 26809 ;; Parameters:    Size  Location     Type
 26810 ;;  dp              1    wreg     unsigned char 
 26811 ;; Auto vars:     Size  Location     Type
 26812 ;;  dp              1   31[COMRAM] unsigned char 
 26813 ;; Return value:  Size  Location     Type
 26814 ;;                  1    wreg      void 
 26815 ;; Registers used:
 26816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26817 ;; Tracked objects:
 26818 ;;		On entry : 0/0
 26819 ;;		On exit  : 0/0
 26820 ;;		Unchanged: 0/0
 26821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26826 ;;Total ram usage:        1 bytes
 26827 ;; Hardware stack levels used:    1
 26828 ;; Hardware stack levels required when called:    6
 26829 ;; This function calls:
 26830 ;;		_lcd_set_com_seg
 26831 ;; This function is called by:
 26832 ;;		_lcd_show_dp
 26833 ;;		_lcd_clear_all_dp
 26834 ;; This function uses a non-reentrant model
 26835 ;;
 26836                           
 26837                           	psect	text147
 26838  009D90                     __ptext147:
 26839                           	opt stack 0
 26840  009D90                     _lcd_disp_dp_loc_2:
 26841                           	opt stack 19
 26842                           
 26843                           ;incstack = 0
 26844                           ;lcd_disp_dp_loc_2@dp stored from wreg
 26845  009D90  6E20               	movwf	lcd_disp_dp_loc_2@dp,c
 26846                           
 26847                           ;lcd.c: 282: if(dp)
 26848  009D92  5020               	movf	lcd_disp_dp_loc_2@dp,w,c
 26849  009D94  B4D8               	btfsc	status,2,c
 26850  009D96  D00A               	goto	l13308
 26851                           
 26852                           ;lcd.c: 283: lcd_set_com_seg(3,20,0x80);
 26853  009D98  0E14               	movlw	20
 26854  009D9A  0100               	movlb	0	; () banked
 26855  009D9C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26856  009D9E  0E80               	movlw	128
 26857  009DA0  0100               	movlb	0	; () banked
 26858  009DA2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26859  009DA4  0E03               	movlw	3
 26860  009DA6  EC06  F037         	call	_lcd_set_com_seg
 26861  009DAA  0012               	return	
 26862  009DAC                     l13308:
 26863                           
 26864                           ;lcd.c: 284: else
 26865                           ;lcd.c: 285: lcd_set_com_seg(3,20,0);
 26866  009DAC  0E14               	movlw	20
 26867  009DAE  0100               	movlb	0	; () banked
 26868  009DB0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26869  009DB2  0E00               	movlw	0
 26870  009DB4  0100               	movlb	0	; () banked
 26871  009DB6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26872  009DB8  0E03               	movlw	3
 26873  009DBA  EC06  F037         	call	_lcd_set_com_seg
 26874  009DBE  0012               	return	
 26875  009DC0                     __end_of_lcd_disp_dp_loc_2:
 26876                           	opt stack 0
 26877                           tosu	equ	0xFFF
 26878                           tosh	equ	0xFFE
 26879                           tosl	equ	0xFFD
 26880                           pclath	equ	0xFFA
 26881                           tblptru	equ	0xFF8
 26882                           tblptrh	equ	0xFF7
 26883                           tblptrl	equ	0xFF6
 26884                           tablat	equ	0xFF5
 26885                           prodh	equ	0xFF4
 26886                           prodl	equ	0xFF3
 26887                           intcon	equ	0xFF2
 26888                           indf0	equ	0xFEF
 26889                           postinc0	equ	0xFEE
 26890                           fsr0h	equ	0xFEA
 26891                           fsr0l	equ	0xFE9
 26892                           wreg	equ	0xFE8
 26893                           indf1	equ	0xFE7
 26894                           postinc1	equ	0xFE6
 26895                           postdec1	equ	0xFE5
 26896                           plusw1	equ	0xFE3
 26897                           fsr1h	equ	0xFE2
 26898                           fsr1l	equ	0xFE1
 26899                           indf2	equ	0xFDF
 26900                           postinc2	equ	0xFDE
 26901                           postdec2	equ	0xFDD
 26902                           plusw2	equ	0xFDB
 26903                           fsr2h	equ	0xFDA
 26904                           fsr2l	equ	0xFD9
 26905                           status	equ	0xFD8
 26906                           
 26907 ;; *************** function _lcd_disp_dp_loc_1 *****************
 26908 ;; Defined at:
 26909 ;;		line 261 in file "src/driver/lcd.c"
 26910 ;; Parameters:    Size  Location     Type
 26911 ;;  dp              1    wreg     unsigned char 
 26912 ;; Auto vars:     Size  Location     Type
 26913 ;;  dp              1   31[COMRAM] unsigned char 
 26914 ;; Return value:  Size  Location     Type
 26915 ;;                  1    wreg      void 
 26916 ;; Registers used:
 26917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26918 ;; Tracked objects:
 26919 ;;		On entry : 0/0
 26920 ;;		On exit  : 0/0
 26921 ;;		Unchanged: 0/0
 26922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26927 ;;Total ram usage:        1 bytes
 26928 ;; Hardware stack levels used:    1
 26929 ;; Hardware stack levels required when called:    6
 26930 ;; This function calls:
 26931 ;;		_lcd_set_com_seg
 26932 ;; This function is called by:
 26933 ;;		_lcd_show_dp
 26934 ;;		_lcd_clear_all_dp
 26935 ;; This function uses a non-reentrant model
 26936 ;;
 26937                           
 26938                           	psect	text148
 26939  009DC0                     __ptext148:
 26940                           	opt stack 0
 26941  009DC0                     _lcd_disp_dp_loc_1:
 26942                           	opt stack 19
 26943                           
 26944                           ;incstack = 0
 26945                           ;lcd_disp_dp_loc_1@dp stored from wreg
 26946  009DC0  6E20               	movwf	lcd_disp_dp_loc_1@dp,c
 26947                           
 26948                           ;lcd.c: 263: if(dp)
 26949  009DC2  5020               	movf	lcd_disp_dp_loc_1@dp,w,c
 26950  009DC4  B4D8               	btfsc	status,2,c
 26951  009DC6  D00A               	goto	l13302
 26952                           
 26953                           ;lcd.c: 264: lcd_set_com_seg(3,22,0x80);
 26954  009DC8  0E16               	movlw	22
 26955  009DCA  0100               	movlb	0	; () banked
 26956  009DCC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26957  009DCE  0E80               	movlw	128
 26958  009DD0  0100               	movlb	0	; () banked
 26959  009DD2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26960  009DD4  0E03               	movlw	3
 26961  009DD6  EC06  F037         	call	_lcd_set_com_seg
 26962  009DDA  0012               	return	
 26963  009DDC                     l13302:
 26964                           
 26965                           ;lcd.c: 265: else
 26966                           ;lcd.c: 266: lcd_set_com_seg(3,22,0);
 26967  009DDC  0E16               	movlw	22
 26968  009DDE  0100               	movlb	0	; () banked
 26969  009DE0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 26970  009DE2  0E00               	movlw	0
 26971  009DE4  0100               	movlb	0	; () banked
 26972  009DE6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 26973  009DE8  0E03               	movlw	3
 26974  009DEA  EC06  F037         	call	_lcd_set_com_seg
 26975  009DEE  0012               	return	
 26976  009DF0                     __end_of_lcd_disp_dp_loc_1:
 26977                           	opt stack 0
 26978                           tosu	equ	0xFFF
 26979                           tosh	equ	0xFFE
 26980                           tosl	equ	0xFFD
 26981                           pclath	equ	0xFFA
 26982                           tblptru	equ	0xFF8
 26983                           tblptrh	equ	0xFF7
 26984                           tblptrl	equ	0xFF6
 26985                           tablat	equ	0xFF5
 26986                           prodh	equ	0xFF4
 26987                           prodl	equ	0xFF3
 26988                           intcon	equ	0xFF2
 26989                           indf0	equ	0xFEF
 26990                           postinc0	equ	0xFEE
 26991                           fsr0h	equ	0xFEA
 26992                           fsr0l	equ	0xFE9
 26993                           wreg	equ	0xFE8
 26994                           indf1	equ	0xFE7
 26995                           postinc1	equ	0xFE6
 26996                           postdec1	equ	0xFE5
 26997                           plusw1	equ	0xFE3
 26998                           fsr1h	equ	0xFE2
 26999                           fsr1l	equ	0xFE1
 27000                           indf2	equ	0xFDF
 27001                           postinc2	equ	0xFDE
 27002                           postdec2	equ	0xFDD
 27003                           plusw2	equ	0xFDB
 27004                           fsr2h	equ	0xFDA
 27005                           fsr2l	equ	0xFD9
 27006                           status	equ	0xFD8
 27007                           
 27008 ;; *************** function _lcd_disp_dp_loc_0 *****************
 27009 ;; Defined at:
 27010 ;;		line 242 in file "src/driver/lcd.c"
 27011 ;; Parameters:    Size  Location     Type
 27012 ;;  dp              1    wreg     unsigned char 
 27013 ;; Auto vars:     Size  Location     Type
 27014 ;;  dp              1   31[COMRAM] unsigned char 
 27015 ;; Return value:  Size  Location     Type
 27016 ;;                  1    wreg      void 
 27017 ;; Registers used:
 27018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27019 ;; Tracked objects:
 27020 ;;		On entry : 0/0
 27021 ;;		On exit  : 0/0
 27022 ;;		Unchanged: 0/0
 27023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27028 ;;Total ram usage:        1 bytes
 27029 ;; Hardware stack levels used:    1
 27030 ;; Hardware stack levels required when called:    6
 27031 ;; This function calls:
 27032 ;;		_lcd_set_com_seg
 27033 ;; This function is called by:
 27034 ;;		_lcd_show_dp
 27035 ;;		_lcd_clear_all_dp
 27036 ;; This function uses a non-reentrant model
 27037 ;;
 27038                           
 27039                           	psect	text149
 27040  009DF0                     __ptext149:
 27041                           	opt stack 0
 27042  009DF0                     _lcd_disp_dp_loc_0:
 27043                           	opt stack 19
 27044                           
 27045                           ;incstack = 0
 27046                           ;lcd_disp_dp_loc_0@dp stored from wreg
 27047  009DF0  6E20               	movwf	lcd_disp_dp_loc_0@dp,c
 27048                           
 27049                           ;lcd.c: 244: if(dp)
 27050  009DF2  5020               	movf	lcd_disp_dp_loc_0@dp,w,c
 27051  009DF4  B4D8               	btfsc	status,2,c
 27052  009DF6  D00A               	goto	l13296
 27053                           
 27054                           ;lcd.c: 245: lcd_set_com_seg(3,24,0x80);
 27055  009DF8  0E18               	movlw	24
 27056  009DFA  0100               	movlb	0	; () banked
 27057  009DFC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 27058  009DFE  0E80               	movlw	128
 27059  009E00  0100               	movlb	0	; () banked
 27060  009E02  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 27061  009E04  0E03               	movlw	3
 27062  009E06  EC06  F037         	call	_lcd_set_com_seg
 27063  009E0A  0012               	return	
 27064  009E0C                     l13296:
 27065                           
 27066                           ;lcd.c: 246: else
 27067                           ;lcd.c: 247: lcd_set_com_seg(3,24,0);
 27068  009E0C  0E18               	movlw	24
 27069  009E0E  0100               	movlb	0	; () banked
 27070  009E10  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 27071  009E12  0E00               	movlw	0
 27072  009E14  0100               	movlb	0	; () banked
 27073  009E16  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 27074  009E18  0E03               	movlw	3
 27075  009E1A  EC06  F037         	call	_lcd_set_com_seg
 27076  009E1E  0012               	return	
 27077  009E20                     __end_of_lcd_disp_dp_loc_0:
 27078                           	opt stack 0
 27079                           tosu	equ	0xFFF
 27080                           tosh	equ	0xFFE
 27081                           tosl	equ	0xFFD
 27082                           pclath	equ	0xFFA
 27083                           tblptru	equ	0xFF8
 27084                           tblptrh	equ	0xFF7
 27085                           tblptrl	equ	0xFF6
 27086                           tablat	equ	0xFF5
 27087                           prodh	equ	0xFF4
 27088                           prodl	equ	0xFF3
 27089                           intcon	equ	0xFF2
 27090                           indf0	equ	0xFEF
 27091                           postinc0	equ	0xFEE
 27092                           fsr0h	equ	0xFEA
 27093                           fsr0l	equ	0xFE9
 27094                           wreg	equ	0xFE8
 27095                           indf1	equ	0xFE7
 27096                           postinc1	equ	0xFE6
 27097                           postdec1	equ	0xFE5
 27098                           plusw1	equ	0xFE3
 27099                           fsr1h	equ	0xFE2
 27100                           fsr1l	equ	0xFE1
 27101                           indf2	equ	0xFDF
 27102                           postinc2	equ	0xFDE
 27103                           postdec2	equ	0xFDD
 27104                           plusw2	equ	0xFDB
 27105                           fsr2h	equ	0xFDA
 27106                           fsr2l	equ	0xFD9
 27107                           status	equ	0xFD8
 27108                           
 27109 ;; *************** function _m_mem_cpy *****************
 27110 ;; Defined at:
 27111 ;;		line 51 in file "src/depend/m_string.c"
 27112 ;; Parameters:    Size  Location     Type
 27113 ;;  d               2    0[BANK0 ] PTR unsigned char 
 27114 ;;		 -> ui_disp_menu_work_mode_adj@buf(10), ui_disp_menu_epr_ilp_scale_adj@buf(6), ui_disp_menu_epr_calib_adj@buf(6), ui
      +_disp_menu_warn_v_adj@buf(6), 
 27115 ;;		 -> ui_disp_menu_warn_t_adj@buf(6), ui_disp_menu_poly_c_adj@buf(6), ui_disp_menu_calib_pr_adj@buf(10), ui_disp_menu_
      +calib_diff_adj@buf(10), 
 27116 ;;		 -> ui_disp_menu_pos_adj@buf(6), ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat
      +_pt@buf(10), 
 27117 ;;  s               2    2[BANK0 ] PTR unsigned char 
 27118 ;;		 -> STR_33(9), STR_32(9), STR_31(5), STR_30(5), 
 27119 ;;		 -> STR_29(5), STR_28(5), STR_27(5), ui_disp_menu_epr_ilp_scale_adj@buf(6), 
 27120 ;;		 -> STR_26(5), STR_25(5), STR_24(5), STR_23(5), 
 27121 ;;		 -> ui_disp_menu_epr_calib_adj@buf(6), STR_22(5), ui_disp_menu_warn_v_adj@buf(6), STR_21(5), 
 27122 ;;		 -> STR_20(5), STR_19(5), STR_18(5), STR_17(5), 
 27123 ;;		 -> STR_16(5), STR_15(5), ui_disp_menu_poly_c_adj@buf(6), STR_14(5), 
 27124 ;;		 -> ui_disp_menu_calib_pr_adj@buf(10), STR_13(5), ui_disp_menu_calib_diff_adj@buf(10), STR_12(5), 
 27125 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(5), 
 27126 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
 27127 ;;		 -> STR_3(5), 
 27128 ;; Auto vars:     Size  Location     Type
 27129 ;;		None
 27130 ;; Return value:  Size  Location     Type
 27131 ;;                  1    wreg      void 
 27132 ;; Registers used:
 27133 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27134 ;; Tracked objects:
 27135 ;;		On entry : 0/0
 27136 ;;		On exit  : 0/0
 27137 ;;		Unchanged: 0/0
 27138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27139 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27142 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27143 ;;Total ram usage:        4 bytes
 27144 ;; Hardware stack levels used:    1
 27145 ;; Hardware stack levels required when called:    4
 27146 ;; This function calls:
 27147 ;;		Nothing
 27148 ;; This function is called by:
 27149 ;;		_ui_disp_adj_xfloat_pt
 27150 ;;		_ui_disp_adj_xfixed_pt
 27151 ;;		_ui_disp_adj_xfixed_pt_dp
 27152 ;;		_ui_disp_menu_pos_adj
 27153 ;;		_ui_disp_menu_calib_diff_adj
 27154 ;;		_ui_disp_menu_calib_pr_adj
 27155 ;;		_ui_disp_menu_poly_c_adj
 27156 ;;		_ui_disp_menu_warn_t_adj
 27157 ;;		_ui_disp_menu_warn_v_adj
 27158 ;;		_ui_disp_menu_epr_calib_adj
 27159 ;;		_ui_disp_menu_epr_ilp_scale_adj
 27160 ;;		_ui_disp_menu_work_mode_adj
 27161 ;; This function uses a non-reentrant model
 27162 ;;
 27163                           
 27164                           	psect	text150
 27165  008B28                     __ptext150:
 27166                           	opt stack 0
 27167  008B28                     _m_mem_cpy:
 27168                           	opt stack 23
 27169                           
 27170                           ;m_string.c: 53: while(*s!='\0')
 27171                           
 27172                           ;incstack = 0
 27173  008B28  D01B               	goto	l14064
 27174  008B2A                     l14058:
 27175                           
 27176                           ;m_string.c: 54: {
 27177                           ;m_string.c: 55: *d++=*s++;
 27178  008B2A  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 27179  008B2E  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 27180  008B32  6AF8               	clrf	tblptru,c
 27181  008B34  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 27182  008B38  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 27183  008B3C  0E0F               	movlw	(high __ramtop+-1)
 27184  008B3E  64F7               	cpfsgt	tblptrh,c
 27185  008B40  D003               	bra	u12937
 27186  008B42  0008               	tblrd		*
 27187  008B44  50F5               	movf	tablat,w,c
 27188  008B46  D005               	bra	u12930
 27189  008B48                     u12937:
 27190  008B48  CFF6 FFE9          	movff	tblptrl,fsr0l
 27191  008B4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 27192  008B50  50EF               	movf	indf0,w,c
 27193  008B52                     u12930:
 27194  008B52  6EDF               	movwf	indf2,c
 27195  008B54  0100               	movlb	0	; () banked
 27196  008B56  4B62               	infsnz	m_mem_cpy@s& (0+255),f,b
 27197  008B58  2B63               	incf	(m_mem_cpy@s+1)& (0+255),f,b
 27198                           
 27199                           ; BSR set to: 0
 27200  008B5A  0100               	movlb	0	; () banked
 27201  008B5C  4B60               	infsnz	m_mem_cpy@d& (0+255),f,b
 27202  008B5E  2B61               	incf	(m_mem_cpy@d+1)& (0+255),f,b
 27203  008B60                     l14064:
 27204  008B60  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 27205  008B64  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 27206  008B68  6AF8               	clrf	tblptru,c
 27207  008B6A  0E0F               	movlw	(high __ramtop+-1)
 27208  008B6C  64F7               	cpfsgt	tblptrh,c
 27209  008B6E  D003               	bra	u12947
 27210  008B70  0008               	tblrd		*
 27211  008B72  50F5               	movf	tablat,w,c
 27212  008B74  D005               	bra	u12940
 27213  008B76                     u12947:
 27214  008B76  CFF6 FFE9          	movff	tblptrl,fsr0l
 27215  008B7A  CFF7 FFEA          	movff	tblptrh,fsr0h
 27216  008B7E  50EF               	movf	indf0,w,c
 27217  008B80                     u12940:
 27218  008B80  0900               	iorlw	0
 27219  008B82  A4D8               	btfss	status,2,c
 27220  008B84  D7D2               	goto	l14058
 27221                           
 27222                           ;m_string.c: 56: }
 27223                           ;m_string.c: 57: *d='\0';
 27224  008B86  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 27225  008B8A  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 27226  008B8E  0E00               	movlw	0
 27227  008B90  6EDF               	movwf	indf2,c
 27228  008B92  0012               	return		;funcret
 27229  008B94                     __end_of_m_mem_cpy:
 27230                           	opt stack 0
 27231                           tosu	equ	0xFFF
 27232                           tosh	equ	0xFFE
 27233                           tosl	equ	0xFFD
 27234                           pclath	equ	0xFFA
 27235                           tblptru	equ	0xFF8
 27236                           tblptrh	equ	0xFF7
 27237                           tblptrl	equ	0xFF6
 27238                           tablat	equ	0xFF5
 27239                           prodh	equ	0xFF4
 27240                           prodl	equ	0xFF3
 27241                           intcon	equ	0xFF2
 27242                           indf0	equ	0xFEF
 27243                           postinc0	equ	0xFEE
 27244                           fsr0h	equ	0xFEA
 27245                           fsr0l	equ	0xFE9
 27246                           wreg	equ	0xFE8
 27247                           indf1	equ	0xFE7
 27248                           postinc1	equ	0xFE6
 27249                           postdec1	equ	0xFE5
 27250                           plusw1	equ	0xFE3
 27251                           fsr1h	equ	0xFE2
 27252                           fsr1l	equ	0xFE1
 27253                           indf2	equ	0xFDF
 27254                           postinc2	equ	0xFDE
 27255                           postdec2	equ	0xFDD
 27256                           plusw2	equ	0xFDB
 27257                           fsr2h	equ	0xFDA
 27258                           fsr2l	equ	0xFD9
 27259                           status	equ	0xFD8
 27260                           
 27261 ;; *************** function _m_int16_2_str_4 *****************
 27262 ;; Defined at:
 27263 ;;		line 260 in file "src/depend/m_string.c"
 27264 ;; Parameters:    Size  Location     Type
 27265 ;;  buf             2    8[BANK0 ] PTR unsigned char 
 27266 ;;		 -> ui_disp_xfloat_pt@buf(10), ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_p
      +t@buf(10), 
 27267 ;;  x               2   10[BANK0 ] int 
 27268 ;; Auto vars:     Size  Location     Type
 27269 ;;		None
 27270 ;; Return value:  Size  Location     Type
 27271 ;;                  1    wreg      void 
 27272 ;; Registers used:
 27273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27274 ;; Tracked objects:
 27275 ;;		On entry : 0/0
 27276 ;;		On exit  : 0/0
 27277 ;;		Unchanged: 0/0
 27278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27279 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27282 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27283 ;;Total ram usage:        4 bytes
 27284 ;; Hardware stack levels used:    1
 27285 ;; Hardware stack levels required when called:    5
 27286 ;; This function calls:
 27287 ;;		___awdiv
 27288 ;;		___awmod
 27289 ;; This function is called by:
 27290 ;;		_ui_disp_adj_xfloat_pt
 27291 ;;		_ui_disp_adj_xfixed_pt
 27292 ;;		_ui_disp_adj_xfixed_pt_dp
 27293 ;;		_ui_disp_xfloat_pt
 27294 ;; This function uses a non-reentrant model
 27295 ;;
 27296                           
 27297                           	psect	text151
 27298  004F5A                     __ptext151:
 27299                           	opt stack 0
 27300  004F5A                     _m_int16_2_str_4:
 27301                           	opt stack 21
 27302                           
 27303                           ;m_string.c: 262: if(x>9999)x=9999;
 27304                           
 27305                           ;incstack = 0
 27306  004F5A  0100               	movlb	0	; () banked
 27307  004F5C  BF6B               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
 27308  004F5E  D00D               	goto	l14072
 27309  004F60  0E10               	movlw	16
 27310  004F62  0100               	movlb	0	; () banked
 27311  004F64  5D6A               	subwf	m_int16_2_str_4@x& (0+255),w,b
 27312  004F66  0E27               	movlw	39
 27313  004F68  0100               	movlb	0	; () banked
 27314  004F6A  596B               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
 27315  004F6C  A0D8               	btfss	status,0,c
 27316  004F6E  D005               	goto	l14072
 27317                           
 27318                           ; BSR set to: 0
 27319  004F70  0E27               	movlw	39
 27320  004F72  0100               	movlb	0	; () banked
 27321  004F74  6F6B               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
 27322  004F76  0E0F               	movlw	15
 27323  004F78  6F6A               	movwf	m_int16_2_str_4@x& (0+255),b
 27324  004F7A                     l14072:
 27325                           
 27326                           ; BSR set to: 0
 27327                           ;m_string.c: 263: buf[3]=HexTable[x%10];
 27328  004F7A  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27329  004F7E  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27330  004F82  0E00               	movlw	0
 27331  004F84  0100               	movlb	0	; () banked
 27332  004F86  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27333  004F88  0E0A               	movlw	10
 27334  004F8A  6F62               	movwf	___awmod@divisor& (0+255),b
 27335  004F8C  EC14  F03D         	call	___awmod	;wreg free
 27336  004F90  0E0C               	movlw	low _HexTable
 27337  004F92  0100               	movlb	0	; () banked
 27338  004F94  2560               	addwf	?___awmod& (0+255),w,b
 27339  004F96  6EF6               	movwf	tblptrl,c
 27340  004F98  0EEF               	movlw	high _HexTable
 27341  004F9A  0100               	movlb	0	; () banked
 27342  004F9C  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27343  004F9E  6EF7               	movwf	tblptrh,c
 27344  004FA0                     	if	0	;There are less than 3 active tblptr bytes
 27345  004FA0                     	endif
 27346  004FA0  0100               	movlb	0	; () banked
 27347  004FA2  EE20 F003          	lfsr	2,3
 27348  004FA6  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 27349  004FA8  26D9               	addwf	fsr2l,f,c
 27350  004FAA  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 27351  004FAC  22DA               	addwfc	fsr2h,f,c
 27352  004FAE  0008               	tblrd		*
 27353  004FB0  CFF5 FFDF          	movff	tablat,indf2
 27354                           
 27355                           ; BSR set to: 0
 27356                           ;m_string.c: 264: x/=10;
 27357  004FB4  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 27358  004FB8  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 27359  004FBC  0E00               	movlw	0
 27360  004FBE  0100               	movlb	0	; () banked
 27361  004FC0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 27362  004FC2  0E0A               	movlw	10
 27363  004FC4  6F62               	movwf	___awdiv@divisor& (0+255),b
 27364  004FC6  ECF0  F038         	call	___awdiv	;wreg free
 27365  004FCA  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 27366  004FCE  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 27367                           
 27368                           ;m_string.c: 265: buf[2]=HexTable[x%10];
 27369  004FD2  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27370  004FD6  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27371  004FDA  0E00               	movlw	0
 27372  004FDC  0100               	movlb	0	; () banked
 27373  004FDE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27374  004FE0  0E0A               	movlw	10
 27375  004FE2  6F62               	movwf	___awmod@divisor& (0+255),b
 27376  004FE4  EC14  F03D         	call	___awmod	;wreg free
 27377  004FE8  0E0C               	movlw	low _HexTable
 27378  004FEA  0100               	movlb	0	; () banked
 27379  004FEC  2560               	addwf	?___awmod& (0+255),w,b
 27380  004FEE  6EF6               	movwf	tblptrl,c
 27381  004FF0  0EEF               	movlw	high _HexTable
 27382  004FF2  0100               	movlb	0	; () banked
 27383  004FF4  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27384  004FF6  6EF7               	movwf	tblptrh,c
 27385  004FF8                     	if	0	;There are less than 3 active tblptr bytes
 27386  004FF8                     	endif
 27387  004FF8  0100               	movlb	0	; () banked
 27388  004FFA  EE20 F002          	lfsr	2,2
 27389  004FFE  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 27390  005000  26D9               	addwf	fsr2l,f,c
 27391  005002  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 27392  005004  22DA               	addwfc	fsr2h,f,c
 27393  005006  0008               	tblrd		*
 27394  005008  CFF5 FFDF          	movff	tablat,indf2
 27395                           
 27396                           ; BSR set to: 0
 27397                           ;m_string.c: 266: x/=10;
 27398  00500C  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 27399  005010  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 27400  005014  0E00               	movlw	0
 27401  005016  0100               	movlb	0	; () banked
 27402  005018  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 27403  00501A  0E0A               	movlw	10
 27404  00501C  6F62               	movwf	___awdiv@divisor& (0+255),b
 27405  00501E  ECF0  F038         	call	___awdiv	;wreg free
 27406  005022  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 27407  005026  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 27408                           
 27409                           ;m_string.c: 267: buf[1]=HexTable[x%10];
 27410  00502A  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27411  00502E  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27412  005032  0E00               	movlw	0
 27413  005034  0100               	movlb	0	; () banked
 27414  005036  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27415  005038  0E0A               	movlw	10
 27416  00503A  6F62               	movwf	___awmod@divisor& (0+255),b
 27417  00503C  EC14  F03D         	call	___awmod	;wreg free
 27418  005040  0E0C               	movlw	low _HexTable
 27419  005042  0100               	movlb	0	; () banked
 27420  005044  2560               	addwf	?___awmod& (0+255),w,b
 27421  005046  6EF6               	movwf	tblptrl,c
 27422  005048  0EEF               	movlw	high _HexTable
 27423  00504A  0100               	movlb	0	; () banked
 27424  00504C  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27425  00504E  6EF7               	movwf	tblptrh,c
 27426  005050                     	if	0	;There are less than 3 active tblptr bytes
 27427  005050                     	endif
 27428  005050  0100               	movlb	0	; () banked
 27429  005052  EE20 F001          	lfsr	2,1
 27430  005056  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 27431  005058  26D9               	addwf	fsr2l,f,c
 27432  00505A  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 27433  00505C  22DA               	addwfc	fsr2h,f,c
 27434  00505E  0008               	tblrd		*
 27435  005060  CFF5 FFDF          	movff	tablat,indf2
 27436                           
 27437                           ; BSR set to: 0
 27438                           ;m_string.c: 268: x/=10;
 27439  005064  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 27440  005068  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 27441  00506C  0E00               	movlw	0
 27442  00506E  0100               	movlb	0	; () banked
 27443  005070  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 27444  005072  0E0A               	movlw	10
 27445  005074  6F62               	movwf	___awdiv@divisor& (0+255),b
 27446  005076  ECF0  F038         	call	___awdiv	;wreg free
 27447  00507A  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 27448  00507E  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 27449                           
 27450                           ;m_string.c: 269: buf[0]=HexTable[x%10];
 27451  005082  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 27452  005086  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 27453  00508A  0E00               	movlw	0
 27454  00508C  0100               	movlb	0	; () banked
 27455  00508E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 27456  005090  0E0A               	movlw	10
 27457  005092  6F62               	movwf	___awmod@divisor& (0+255),b
 27458  005094  EC14  F03D         	call	___awmod	;wreg free
 27459  005098  0E0C               	movlw	low _HexTable
 27460  00509A  0100               	movlb	0	; () banked
 27461  00509C  2560               	addwf	?___awmod& (0+255),w,b
 27462  00509E  6EF6               	movwf	tblptrl,c
 27463  0050A0  0EEF               	movlw	high _HexTable
 27464  0050A2  0100               	movlb	0	; () banked
 27465  0050A4  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 27466  0050A6  6EF7               	movwf	tblptrh,c
 27467  0050A8                     	if	0	;There are less than 3 active tblptr bytes
 27468  0050A8                     	endif
 27469  0050A8  C068  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
 27470  0050AC  C069  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
 27471  0050B0  0008               	tblrd		*
 27472  0050B2  CFF5 FFDF          	movff	tablat,indf2
 27473                           
 27474                           ; BSR set to: 0
 27475  0050B6  0012               	return		;funcret
 27476  0050B8                     __end_of_m_int16_2_str_4:
 27477                           	opt stack 0
 27478                           tosu	equ	0xFFF
 27479                           tosh	equ	0xFFE
 27480                           tosl	equ	0xFFD
 27481                           pclath	equ	0xFFA
 27482                           tblptru	equ	0xFF8
 27483                           tblptrh	equ	0xFF7
 27484                           tblptrl	equ	0xFF6
 27485                           tablat	equ	0xFF5
 27486                           prodh	equ	0xFF4
 27487                           prodl	equ	0xFF3
 27488                           intcon	equ	0xFF2
 27489                           indf0	equ	0xFEF
 27490                           postinc0	equ	0xFEE
 27491                           fsr0h	equ	0xFEA
 27492                           fsr0l	equ	0xFE9
 27493                           wreg	equ	0xFE8
 27494                           indf1	equ	0xFE7
 27495                           postinc1	equ	0xFE6
 27496                           postdec1	equ	0xFE5
 27497                           plusw1	equ	0xFE3
 27498                           fsr1h	equ	0xFE2
 27499                           fsr1l	equ	0xFE1
 27500                           indf2	equ	0xFDF
 27501                           postinc2	equ	0xFDE
 27502                           postdec2	equ	0xFDD
 27503                           plusw2	equ	0xFDB
 27504                           fsr2h	equ	0xFDA
 27505                           fsr2l	equ	0xFD9
 27506                           status	equ	0xFD8
 27507                           
 27508 ;; *************** function ___awmod *****************
 27509 ;; Defined at:
 27510 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 27511 ;; Parameters:    Size  Location     Type
 27512 ;;  dividend        2    0[BANK0 ] int 
 27513 ;;  divisor         2    2[BANK0 ] int 
 27514 ;; Auto vars:     Size  Location     Type
 27515 ;;  sign            1    5[BANK0 ] unsigned char 
 27516 ;;  counter         1    4[BANK0 ] unsigned char 
 27517 ;; Return value:  Size  Location     Type
 27518 ;;                  2    0[BANK0 ] int 
 27519 ;; Registers used:
 27520 ;;		wreg, status,2, status,0
 27521 ;; Tracked objects:
 27522 ;;		On entry : 0/0
 27523 ;;		On exit  : 0/0
 27524 ;;		Unchanged: 0/0
 27525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27530 ;;Total ram usage:        6 bytes
 27531 ;; Hardware stack levels used:    1
 27532 ;; Hardware stack levels required when called:    4
 27533 ;; This function calls:
 27534 ;;		Nothing
 27535 ;; This function is called by:
 27536 ;;		_ui_disp_menu_calib_diff_adj
 27537 ;;		_ui_disp_menu_calib_pr_adj
 27538 ;;		_m_int16_2_str_4
 27539 ;; This function uses a non-reentrant model
 27540 ;;
 27541                           
 27542                           	psect	text152
 27543  007A28                     __ptext152:
 27544                           	opt stack 0
 27545  007A28                     ___awmod:
 27546                           	opt stack 21
 27547                           
 27548                           ; BSR set to: 0
 27549                           ;incstack = 0
 27550  007A28  0E00               	movlw	0
 27551  007A2A  0100               	movlb	0	; () banked
 27552  007A2C  6F65               	movwf	___awmod@sign& (0+255),b
 27553                           
 27554                           ; BSR set to: 0
 27555  007A2E  0100               	movlb	0	; () banked
 27556  007A30  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 27557  007A32  D008               	goto	l13828
 27558                           
 27559                           ; BSR set to: 0
 27560  007A34  0100               	movlb	0	; () banked
 27561  007A36  6D60               	negf	___awmod@dividend& (0+255),b
 27562  007A38  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 27563  007A3A  B0D8               	btfsc	status,0,c
 27564  007A3C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 27565                           
 27566                           ; BSR set to: 0
 27567  007A3E  0E01               	movlw	1
 27568  007A40  0100               	movlb	0	; () banked
 27569  007A42  6F65               	movwf	___awmod@sign& (0+255),b
 27570  007A44                     l13828:
 27571                           
 27572                           ; BSR set to: 0
 27573  007A44  0100               	movlb	0	; () banked
 27574  007A46  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 27575  007A48  D005               	goto	l13832
 27576                           
 27577                           ; BSR set to: 0
 27578  007A4A  0100               	movlb	0	; () banked
 27579  007A4C  6D62               	negf	___awmod@divisor& (0+255),b
 27580  007A4E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 27581  007A50  B0D8               	btfsc	status,0,c
 27582  007A52  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 27583  007A54                     l13832:
 27584                           
 27585                           ; BSR set to: 0
 27586  007A54  0100               	movlb	0	; () banked
 27587  007A56  5162               	movf	___awmod@divisor& (0+255),w,b
 27588  007A58  0100               	movlb	0	; () banked
 27589  007A5A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 27590  007A5C  B4D8               	btfsc	status,2,c
 27591  007A5E  D026               	goto	l13848
 27592                           
 27593                           ; BSR set to: 0
 27594  007A60  0E01               	movlw	1
 27595  007A62  0100               	movlb	0	; () banked
 27596  007A64  6F64               	movwf	___awmod@counter& (0+255),b
 27597  007A66  D006               	goto	l13838
 27598  007A68                     l13836:
 27599                           
 27600                           ; BSR set to: 0
 27601  007A68  0100               	movlb	0	; () banked
 27602  007A6A  90D8               	bcf	status,0,c
 27603  007A6C  3762               	rlcf	___awmod@divisor& (0+255),f,b
 27604  007A6E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 27605  007A70  0100               	movlb	0	; () banked
 27606  007A72  2B64               	incf	___awmod@counter& (0+255),f,b
 27607  007A74                     l13838:
 27608                           
 27609                           ; BSR set to: 0
 27610  007A74  0100               	movlb	0	; () banked
 27611  007A76  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 27612  007A78  D7F7               	goto	l13836
 27613  007A7A                     l13840:
 27614                           
 27615                           ; BSR set to: 0
 27616  007A7A  0100               	movlb	0	; () banked
 27617  007A7C  5162               	movf	___awmod@divisor& (0+255),w,b
 27618  007A7E  0100               	movlb	0	; () banked
 27619  007A80  5D60               	subwf	___awmod@dividend& (0+255),w,b
 27620  007A82  0100               	movlb	0	; () banked
 27621  007A84  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 27622  007A86  0100               	movlb	0	; () banked
 27623  007A88  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 27624  007A8A  A0D8               	btfss	status,0,c
 27625  007A8C  D008               	goto	l13844
 27626                           
 27627                           ; BSR set to: 0
 27628  007A8E  0100               	movlb	0	; () banked
 27629  007A90  5162               	movf	___awmod@divisor& (0+255),w,b
 27630  007A92  0100               	movlb	0	; () banked
 27631  007A94  5F60               	subwf	___awmod@dividend& (0+255),f,b
 27632  007A96  0100               	movlb	0	; () banked
 27633  007A98  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 27634  007A9A  0100               	movlb	0	; () banked
 27635  007A9C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 27636  007A9E                     l13844:
 27637                           
 27638                           ; BSR set to: 0
 27639  007A9E  0100               	movlb	0	; () banked
 27640  007AA0  90D8               	bcf	status,0,c
 27641  007AA2  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 27642  007AA4  3362               	rrcf	___awmod@divisor& (0+255),f,b
 27643                           
 27644                           ; BSR set to: 0
 27645  007AA6  0100               	movlb	0	; () banked
 27646  007AA8  2F64               	decfsz	___awmod@counter& (0+255),f,b
 27647  007AAA  D7E7               	goto	l13840
 27648  007AAC                     l13848:
 27649                           
 27650                           ; BSR set to: 0
 27651  007AAC  0100               	movlb	0	; () banked
 27652  007AAE  5165               	movf	___awmod@sign& (0+255),w,b
 27653  007AB0  0100               	movlb	0	; () banked
 27654  007AB2  B4D8               	btfsc	status,2,c
 27655  007AB4  D005               	goto	l13852
 27656                           
 27657                           ; BSR set to: 0
 27658  007AB6  0100               	movlb	0	; () banked
 27659  007AB8  6D60               	negf	___awmod@dividend& (0+255),b
 27660  007ABA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 27661  007ABC  B0D8               	btfsc	status,0,c
 27662  007ABE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 27663  007AC0                     l13852:
 27664                           
 27665                           ; BSR set to: 0
 27666  007AC0  C060  F060         	movff	___awmod@dividend,?___awmod
 27667  007AC4  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 27668  007AC8  0012               	return	
 27669  007ACA                     __end_of___awmod:
 27670                           	opt stack 0
 27671                           tosu	equ	0xFFF
 27672                           tosh	equ	0xFFE
 27673                           tosl	equ	0xFFD
 27674                           pclath	equ	0xFFA
 27675                           tblptru	equ	0xFF8
 27676                           tblptrh	equ	0xFF7
 27677                           tblptrl	equ	0xFF6
 27678                           tablat	equ	0xFF5
 27679                           prodh	equ	0xFF4
 27680                           prodl	equ	0xFF3
 27681                           intcon	equ	0xFF2
 27682                           indf0	equ	0xFEF
 27683                           postinc0	equ	0xFEE
 27684                           fsr0h	equ	0xFEA
 27685                           fsr0l	equ	0xFE9
 27686                           wreg	equ	0xFE8
 27687                           indf1	equ	0xFE7
 27688                           postinc1	equ	0xFE6
 27689                           postdec1	equ	0xFE5
 27690                           plusw1	equ	0xFE3
 27691                           fsr1h	equ	0xFE2
 27692                           fsr1l	equ	0xFE1
 27693                           indf2	equ	0xFDF
 27694                           postinc2	equ	0xFDE
 27695                           postdec2	equ	0xFDD
 27696                           plusw2	equ	0xFDB
 27697                           fsr2h	equ	0xFDA
 27698                           fsr2l	equ	0xFD9
 27699                           status	equ	0xFD8
 27700                           
 27701 ;; *************** function _lcd_disp_refresh *****************
 27702 ;; Defined at:
 27703 ;;		line 575 in file "src/driver/lcd.c"
 27704 ;; Parameters:    Size  Location     Type
 27705 ;;		None
 27706 ;; Auto vars:     Size  Location     Type
 27707 ;;		None
 27708 ;; Return value:  Size  Location     Type
 27709 ;;                  1    wreg      void 
 27710 ;; Registers used:
 27711 ;;		None
 27712 ;; Tracked objects:
 27713 ;;		On entry : 0/0
 27714 ;;		On exit  : 0/0
 27715 ;;		Unchanged: 0/0
 27716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27721 ;;Total ram usage:        0 bytes
 27722 ;; Hardware stack levels used:    1
 27723 ;; Hardware stack levels required when called:    4
 27724 ;; This function calls:
 27725 ;;		Nothing
 27726 ;; This function is called by:
 27727 ;;		_ui_disp_start_cs600
 27728 ;;		_ui_disp_adj_xfloat_pt
 27729 ;;		_ui_disp_adj_xfixed_pt
 27730 ;;		_ui_disp_adj_xfixed_pt_dp
 27731 ;;		_ui_disp_menu_home
 27732 ;;		_ui_disp_menu_pos_adj
 27733 ;;		_ui_disp_menu_calib_diff_adj
 27734 ;;		_ui_disp_menu_calib_pr_adj
 27735 ;;		_ui_disp_menu_warn_t_adj
 27736 ;;		_ui_disp_menu_work_mode_adj
 27737 ;;		_ui_disp_all_on
 27738 ;;		_ui_disp_all_off
 27739 ;;		_ui_disp_rtc_mm_ss
 27740 ;;		_ui_disp_menu_home_test
 27741 ;; This function uses a non-reentrant model
 27742 ;;
 27743                           
 27744                           	psect	text153
 27745  0090B8                     __ptext153:
 27746                           	opt stack 0
 27747  0090B8                     _lcd_disp_refresh:
 27748                           	opt stack 25
 27749                           
 27750                           ;lcd.c: 578: LCDDATA0=pLCD[0];
 27751                           
 27752                           ; BSR set to: 0
 27753                           ;incstack = 0
 27754  0090B8  C100  FFBB         	movff	_pLCD,4027	;volatile
 27755                           
 27756                           ;lcd.c: 579: LCDDATA1=pLCD[1];
 27757  0090BC  C101  FFBC         	movff	_pLCD+1,4028	;volatile
 27758                           
 27759                           ;lcd.c: 580: LCDDATA2=pLCD[2];
 27760  0090C0  C102  FFBD         	movff	_pLCD+2,4029	;volatile
 27761                           
 27762                           ;lcd.c: 581: LCDDATA3=pLCD[3];
 27763  0090C4  C103  FFBE         	movff	_pLCD+3,4030	;volatile
 27764                           
 27765                           ;lcd.c: 582: LCDDATA4=pLCD[4];
 27766  0090C8  C104  FFBF         	movff	_pLCD+4,4031	;volatile
 27767                           
 27768                           ;lcd.c: 583: LCDDATA5=pLCD[5];
 27769  0090CC  C105  FF6B         	movff	_pLCD+5,3947	;volatile
 27770                           
 27771                           ;lcd.c: 584: LCDDATA6=pLCD[6];
 27772  0090D0  C106  FF6C         	movff	_pLCD+6,3948	;volatile
 27773                           
 27774                           ;lcd.c: 585: LCDDATA7=pLCD[7];
 27775  0090D4  C107  FF6D         	movff	_pLCD+7,3949	;volatile
 27776                           
 27777                           ;lcd.c: 586: LCDDATA8=pLCD[8];
 27778  0090D8  C108  FF6E         	movff	_pLCD+8,3950	;volatile
 27779                           
 27780                           ;lcd.c: 587: LCDDATA9=pLCD[9];
 27781  0090DC  C109  FF6F         	movff	_pLCD+9,3951	;volatile
 27782                           
 27783                           ;lcd.c: 589: LCDDATA10=pLCD[10];
 27784  0090E0  C10A  FF70         	movff	_pLCD+10,3952	;volatile
 27785                           
 27786                           ;lcd.c: 590: LCDDATA11=pLCD[11];
 27787  0090E4  C10B  FF71         	movff	_pLCD+11,3953	;volatile
 27788                           
 27789                           ;lcd.c: 591: LCDDATA12=pLCD[12];
 27790  0090E8  C10C  FF72         	movff	_pLCD+12,3954	;volatile
 27791                           
 27792                           ;lcd.c: 592: LCDDATA13=pLCD[13];
 27793  0090EC  C10D  FF73         	movff	_pLCD+13,3955	;volatile
 27794                           
 27795                           ;lcd.c: 593: LCDDATA14=pLCD[14];
 27796  0090F0  C10E  FF74         	movff	_pLCD+14,3956	;volatile
 27797                           
 27798                           ;lcd.c: 594: LCDDATA15=pLCD[15];
 27799  0090F4  C10F  FF75         	movff	_pLCD+15,3957	;volatile
 27800                           
 27801                           ;lcd.c: 595: LCDDATA16=pLCD[16];
 27802  0090F8  C110  FF76         	movff	_pLCD+16,3958	;volatile
 27803                           
 27804                           ;lcd.c: 596: LCDDATA17=pLCD[17];
 27805  0090FC  C111  FF77         	movff	_pLCD+17,3959	;volatile
 27806                           
 27807                           ;lcd.c: 597: LCDDATA18=pLCD[18];
 27808  009100  C112  FF78         	movff	_pLCD+18,3960	;volatile
 27809                           
 27810                           ;lcd.c: 598: LCDDATA19=pLCD[19];
 27811  009104  C113  FF79         	movff	_pLCD+19,3961	;volatile
 27812                           
 27813                           ;lcd.c: 600: LCDDATA20=pLCD[20];
 27814  009108  C114  FF7A         	movff	_pLCD+20,3962	;volatile
 27815                           
 27816                           ;lcd.c: 601: LCDDATA21=pLCD[21];
 27817  00910C  C115  FF7B         	movff	_pLCD+21,3963	;volatile
 27818                           
 27819                           ;lcd.c: 602: LCDDATA22=pLCD[22];
 27820  009110  C116  FF7C         	movff	_pLCD+22,3964	;volatile
 27821                           
 27822                           ;lcd.c: 603: LCDDATA23=pLCD[23];
 27823  009114  C117  FF7D         	movff	_pLCD+23,3965	;volatile
 27824  009118  0012               	return		;funcret
 27825  00911A                     __end_of_lcd_disp_refresh:
 27826                           	opt stack 0
 27827                           tosu	equ	0xFFF
 27828                           tosh	equ	0xFFE
 27829                           tosl	equ	0xFFD
 27830                           pclath	equ	0xFFA
 27831                           tblptru	equ	0xFF8
 27832                           tblptrh	equ	0xFF7
 27833                           tblptrl	equ	0xFF6
 27834                           tablat	equ	0xFF5
 27835                           prodh	equ	0xFF4
 27836                           prodl	equ	0xFF3
 27837                           intcon	equ	0xFF2
 27838                           indf0	equ	0xFEF
 27839                           postinc0	equ	0xFEE
 27840                           fsr0h	equ	0xFEA
 27841                           fsr0l	equ	0xFE9
 27842                           wreg	equ	0xFE8
 27843                           indf1	equ	0xFE7
 27844                           postinc1	equ	0xFE6
 27845                           postdec1	equ	0xFE5
 27846                           plusw1	equ	0xFE3
 27847                           fsr1h	equ	0xFE2
 27848                           fsr1l	equ	0xFE1
 27849                           indf2	equ	0xFDF
 27850                           postinc2	equ	0xFDE
 27851                           postdec2	equ	0xFDD
 27852                           plusw2	equ	0xFDB
 27853                           fsr2h	equ	0xFDA
 27854                           fsr2l	equ	0xFD9
 27855                           status	equ	0xFD8
 27856                           
 27857 ;; *************** function ___x_arrange_str *****************
 27858 ;; Defined at:
 27859 ;;		line 11 in file "src/api/ui.c"
 27860 ;; Parameters:    Size  Location     Type
 27861 ;;  str             2    0[BANK0 ] PTR unsigned char 
 27862 ;;		 -> ui_disp_adj_xfixed_pt_dp@buf(10), ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 27863 ;;  len             1    2[BANK0 ] unsigned char 
 27864 ;; Auto vars:     Size  Location     Type
 27865 ;;  i               1   31[COMRAM] unsigned char 
 27866 ;; Return value:  Size  Location     Type
 27867 ;;                  1    wreg      void 
 27868 ;; Registers used:
 27869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27870 ;; Tracked objects:
 27871 ;;		On entry : 0/0
 27872 ;;		On exit  : 0/0
 27873 ;;		Unchanged: 0/0
 27874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27875 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27878 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27879 ;;Total ram usage:        4 bytes
 27880 ;; Hardware stack levels used:    1
 27881 ;; Hardware stack levels required when called:    4
 27882 ;; This function calls:
 27883 ;;		Nothing
 27884 ;; This function is called by:
 27885 ;;		_ui_disp_adj_xfloat_pt
 27886 ;;		_ui_disp_adj_xfixed_pt
 27887 ;;		_ui_disp_adj_xfixed_pt_dp
 27888 ;; This function uses a non-reentrant model
 27889 ;;
 27890                           
 27891                           	psect	text154
 27892  009178                     __ptext154:
 27893                           	opt stack 0
 27894  009178                     ___x_arrange_str:
 27895                           	opt stack 22
 27896                           
 27897                           ;ui.c: 13: uint8_t i;
 27898                           ;ui.c: 14: for(i=0;i<len;i++){
 27899                           
 27900                           ;incstack = 0
 27901  009178  0E00               	movlw	0
 27902  00917A  6E20               	movwf	___x_arrange_str@i,c
 27903  00917C  D01A               	goto	l14020
 27904  00917E                     l14014:
 27905                           
 27906                           ;ui.c: 15: if(str[i]=='\0')str[i]=' ';
 27907  00917E  5020               	movf	___x_arrange_str@i,w,c
 27908  009180  0D01               	mullw	1
 27909  009182  50F3               	movf	prodl,w,c
 27910  009184  0100               	movlb	0	; () banked
 27911  009186  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 27912  009188  6ED9               	movwf	fsr2l,c
 27913  00918A  50F4               	movf	prodh,w,c
 27914  00918C  0100               	movlb	0	; () banked
 27915  00918E  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 27916  009190  6EDA               	movwf	fsr2h,c
 27917  009192  50DF               	movf	indf2,w,c
 27918  009194  A4D8               	btfss	status,2,c
 27919  009196  D00C               	goto	l14018
 27920                           
 27921                           ; BSR set to: 0
 27922  009198  5020               	movf	___x_arrange_str@i,w,c
 27923  00919A  0D01               	mullw	1
 27924  00919C  50F3               	movf	prodl,w,c
 27925  00919E  0100               	movlb	0	; () banked
 27926  0091A0  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 27927  0091A2  6ED9               	movwf	fsr2l,c
 27928  0091A4  50F4               	movf	prodh,w,c
 27929  0091A6  0100               	movlb	0	; () banked
 27930  0091A8  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 27931  0091AA  6EDA               	movwf	fsr2h,c
 27932  0091AC  0E20               	movlw	32
 27933  0091AE  6EDF               	movwf	indf2,c
 27934  0091B0                     l14018:
 27935                           
 27936                           ; BSR set to: 0
 27937  0091B0  2A20               	incf	___x_arrange_str@i,f,c
 27938  0091B2                     l14020:
 27939  0091B2  0100               	movlb	0	; () banked
 27940  0091B4  5162               	movf	___x_arrange_str@len& (0+255),w,b
 27941  0091B6  5C20               	subwf	___x_arrange_str@i,w,c
 27942  0091B8  A0D8               	btfss	status,0,c
 27943  0091BA  D7E1               	goto	l14014
 27944                           
 27945                           ; BSR set to: 0
 27946                           ;ui.c: 16: }
 27947                           ;ui.c: 17: str[i]='\0';
 27948                           
 27949                           ; BSR set to: 0
 27950  0091BC  5020               	movf	___x_arrange_str@i,w,c
 27951  0091BE  0D01               	mullw	1
 27952  0091C0  50F3               	movf	prodl,w,c
 27953  0091C2  0100               	movlb	0	; () banked
 27954  0091C4  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 27955  0091C6  6ED9               	movwf	fsr2l,c
 27956  0091C8  50F4               	movf	prodh,w,c
 27957  0091CA  0100               	movlb	0	; () banked
 27958  0091CC  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 27959  0091CE  6EDA               	movwf	fsr2h,c
 27960  0091D0  0E00               	movlw	0
 27961  0091D2  6EDF               	movwf	indf2,c
 27962                           
 27963                           ; BSR set to: 0
 27964  0091D4  0012               	return		;funcret
 27965  0091D6                     __end_of___x_arrange_str:
 27966                           	opt stack 0
 27967                           tosu	equ	0xFFF
 27968                           tosh	equ	0xFFE
 27969                           tosl	equ	0xFFD
 27970                           pclath	equ	0xFFA
 27971                           tblptru	equ	0xFF8
 27972                           tblptrh	equ	0xFF7
 27973                           tblptrl	equ	0xFF6
 27974                           tablat	equ	0xFF5
 27975                           prodh	equ	0xFF4
 27976                           prodl	equ	0xFF3
 27977                           intcon	equ	0xFF2
 27978                           indf0	equ	0xFEF
 27979                           postinc0	equ	0xFEE
 27980                           fsr0h	equ	0xFEA
 27981                           fsr0l	equ	0xFE9
 27982                           wreg	equ	0xFE8
 27983                           indf1	equ	0xFE7
 27984                           postinc1	equ	0xFE6
 27985                           postdec1	equ	0xFE5
 27986                           plusw1	equ	0xFE3
 27987                           fsr1h	equ	0xFE2
 27988                           fsr1l	equ	0xFE1
 27989                           indf2	equ	0xFDF
 27990                           postinc2	equ	0xFDE
 27991                           postdec2	equ	0xFDD
 27992                           plusw2	equ	0xFDB
 27993                           fsr2h	equ	0xFDA
 27994                           fsr2l	equ	0xFD9
 27995                           status	equ	0xFD8
 27996                           
 27997 ;; *************** function _lcd_disp_logo *****************
 27998 ;; Defined at:
 27999 ;;		line 382 in file "src/driver/lcd.c"
 28000 ;; Parameters:    Size  Location     Type
 28001 ;;  show            1    wreg     unsigned char 
 28002 ;; Auto vars:     Size  Location     Type
 28003 ;;  show            1   31[COMRAM] unsigned char 
 28004 ;; Return value:  Size  Location     Type
 28005 ;;                  1    wreg      void 
 28006 ;; Registers used:
 28007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28008 ;; Tracked objects:
 28009 ;;		On entry : 0/0
 28010 ;;		On exit  : 0/0
 28011 ;;		Unchanged: 0/0
 28012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28017 ;;Total ram usage:        1 bytes
 28018 ;; Hardware stack levels used:    1
 28019 ;; Hardware stack levels required when called:    6
 28020 ;; This function calls:
 28021 ;;		_lcd_set_com_seg
 28022 ;; This function is called by:
 28023 ;;		_ui_disp_start_cs600
 28024 ;;		_ui_disp_menu_psw_adj
 28025 ;;		_ui_disp_menu_home
 28026 ;;		_ui_disp_menu_density_adj
 28027 ;;		_ui_disp_menu_pos_adj
 28028 ;;		_ui_disp_menu_h_adj
 28029 ;;		_ui_disp_menu_d_adj
 28030 ;;		_ui_disp_menu_bzero_adj
 28031 ;;		_ui_disp_menu_calib_diff_adj
 28032 ;;		_ui_disp_menu_calib_pr_adj
 28033 ;;		_ui_disp_menu_poly_c_adj
 28034 ;;		_ui_disp_menu_warn_t_adj
 28035 ;;		_ui_disp_menu_warn_v_adj
 28036 ;;		_ui_disp_menu_epr_calib_adj
 28037 ;;		_ui_disp_menu_epr_ilp_scale_adj
 28038 ;;		_ui_disp_menu_bar_full_adj
 28039 ;;		_ui_disp_menu_work_mode_adj
 28040 ;; This function uses a non-reentrant model
 28041 ;;
 28042                           
 28043                           	psect	text155
 28044  009E20                     __ptext155:
 28045                           	opt stack 0
 28046  009E20                     _lcd_disp_logo:
 28047                           	opt stack 23
 28048                           
 28049                           ; BSR set to: 0
 28050                           ;incstack = 0
 28051                           ;lcd_disp_logo@show stored from wreg
 28052  009E20  6E20               	movwf	lcd_disp_logo@show,c
 28053                           
 28054                           ;lcd.c: 384: if(show)
 28055  009E22  5020               	movf	lcd_disp_logo@show,w,c
 28056  009E24  B4D8               	btfsc	status,2,c
 28057  009E26  D00A               	goto	l14714
 28058                           
 28059                           ;lcd.c: 385: lcd_set_com_seg(2,13,1);
 28060  009E28  0E0D               	movlw	13
 28061  009E2A  0100               	movlb	0	; () banked
 28062  009E2C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 28063  009E2E  0E01               	movlw	1
 28064  009E30  0100               	movlb	0	; () banked
 28065  009E32  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 28066  009E34  0E02               	movlw	2
 28067  009E36  EC06  F037         	call	_lcd_set_com_seg
 28068  009E3A  0012               	return	
 28069  009E3C                     l14714:
 28070                           
 28071                           ;lcd.c: 386: else
 28072                           ;lcd.c: 387: lcd_set_com_seg(2,13,0);
 28073  009E3C  0E0D               	movlw	13
 28074  009E3E  0100               	movlb	0	; () banked
 28075  009E40  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 28076  009E42  0E00               	movlw	0
 28077  009E44  0100               	movlb	0	; () banked
 28078  009E46  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 28079  009E48  0E02               	movlw	2
 28080  009E4A  EC06  F037         	call	_lcd_set_com_seg
 28081  009E4E  0012               	return	
 28082  009E50                     __end_of_lcd_disp_logo:
 28083                           	opt stack 0
 28084                           tosu	equ	0xFFF
 28085                           tosh	equ	0xFFE
 28086                           tosl	equ	0xFFD
 28087                           pclath	equ	0xFFA
 28088                           tblptru	equ	0xFF8
 28089                           tblptrh	equ	0xFF7
 28090                           tblptrl	equ	0xFF6
 28091                           tablat	equ	0xFF5
 28092                           prodh	equ	0xFF4
 28093                           prodl	equ	0xFF3
 28094                           intcon	equ	0xFF2
 28095                           indf0	equ	0xFEF
 28096                           postinc0	equ	0xFEE
 28097                           fsr0h	equ	0xFEA
 28098                           fsr0l	equ	0xFE9
 28099                           wreg	equ	0xFE8
 28100                           indf1	equ	0xFE7
 28101                           postinc1	equ	0xFE6
 28102                           postdec1	equ	0xFE5
 28103                           plusw1	equ	0xFE3
 28104                           fsr1h	equ	0xFE2
 28105                           fsr1l	equ	0xFE1
 28106                           indf2	equ	0xFDF
 28107                           postinc2	equ	0xFDE
 28108                           postdec2	equ	0xFDD
 28109                           plusw2	equ	0xFDB
 28110                           fsr2h	equ	0xFDA
 28111                           fsr2l	equ	0xFD9
 28112                           status	equ	0xFD8
 28113                           
 28114 ;; *************** function _lcd_set_com_seg *****************
 28115 ;; Defined at:
 28116 ;;		line 33 in file "src/driver/lcd.c"
 28117 ;; Parameters:    Size  Location     Type
 28118 ;;  com             1    wreg     unsigned char 
 28119 ;;  seg             1    8[BANK0 ] unsigned char 
 28120 ;;  show            1    9[BANK0 ] unsigned char 
 28121 ;; Auto vars:     Size  Location     Type
 28122 ;;  com             1   13[BANK0 ] unsigned char 
 28123 ;;  bits            1   15[BANK0 ] unsigned char 
 28124 ;;  offset          1   14[BANK0 ] unsigned char 
 28125 ;; Return value:  Size  Location     Type
 28126 ;;                  1    wreg      void 
 28127 ;; Registers used:
 28128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28129 ;; Tracked objects:
 28130 ;;		On entry : 0/0
 28131 ;;		On exit  : 0/0
 28132 ;;		Unchanged: 0/0
 28133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28135 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28136 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28137 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28138 ;;Total ram usage:        8 bytes
 28139 ;; Hardware stack levels used:    1
 28140 ;; Hardware stack levels required when called:    5
 28141 ;; This function calls:
 28142 ;;		___awdiv
 28143 ;; This function is called by:
 28144 ;;		_lcd_disp_level_bar
 28145 ;;		_lcd_disp_chr_loc_0
 28146 ;;		_lcd_disp_dp_loc_0
 28147 ;;		_lcd_disp_chr_loc_1
 28148 ;;		_lcd_disp_dp_loc_1
 28149 ;;		_lcd_disp_chr_loc_2
 28150 ;;		_lcd_disp_dp_loc_2
 28151 ;;		_lcd_disp_chr_loc_3
 28152 ;;		_lcd_disp_chr_loc_4
 28153 ;;		_lcd_disp_dp_loc_4
 28154 ;;		_lcd_disp_chr_loc_5
 28155 ;;		_lcd_disp_dp_loc_5
 28156 ;;		_lcd_disp_chr_loc_6
 28157 ;;		_lcd_disp_dp_loc_6
 28158 ;;		_lcd_disp_chr_loc_7
 28159 ;;		_lcd_disp_logo
 28160 ;;		_lcd_disp_unit_t
 28161 ;;		_lcd_disp_unit_1st_m
 28162 ;;		_lcd_disp_unit_1st_m3
 28163 ;;		_lcd_disp_unit_temperature
 28164 ;;		_lcd_disp_unit_2nd_m
 28165 ;;		_lcd_disp_unit_2nd_m3
 28166 ;;		_lcd_disp_unit_mpa
 28167 ;;		_lcd_disp_battary_bar
 28168 ;;		_lcd_disp_rf_bar
 28169 ;;		_lcd_disp_light_bar
 28170 ;; This function uses a non-reentrant model
 28171 ;;
 28172                           
 28173                           	psect	text156
 28174  006E0C                     __ptext156:
 28175                           	opt stack 0
 28176  006E0C                     _lcd_set_com_seg:
 28177                           	opt stack 21
 28178                           
 28179                           ;incstack = 0
 28180                           ;lcd_set_com_seg@com stored from wreg
 28181  006E0C  0100               	movlb	0	; () banked
 28182  006E0E  6F6D               	movwf	lcd_set_com_seg@com& (0+255),b
 28183                           
 28184                           ;lcd.c: 35: uint8_t offset;
 28185                           ;lcd.c: 36: uint8_t bits;
 28186                           ;lcd.c: 37: if(com>3)return;
 28187  006E10  0E03               	movlw	3
 28188  006E12  0100               	movlb	0	; () banked
 28189  006E14  656D               	cpfsgt	lcd_set_com_seg@com& (0+255),b
 28190  006E16  D001               	goto	l13144
 28191  006E18  0012               	return	
 28192  006E1A                     l13144:
 28193                           
 28194                           ; BSR set to: 0
 28195                           ;lcd.c: 38: if(seg>47)return;
 28196  006E1A  0E2F               	movlw	47
 28197  006E1C  0100               	movlb	0	; () banked
 28198  006E1E  6568               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
 28199  006E20  D001               	goto	l13148
 28200  006E22  0012               	return	
 28201  006E24                     l13148:
 28202                           
 28203                           ; BSR set to: 0
 28204                           ;lcd.c: 39: offset=com*6 + seg/8;
 28205  006E24  C068  F060         	movff	lcd_set_com_seg@seg,___awdiv@dividend
 28206  006E28  0100               	movlb	0	; () banked
 28207  006E2A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 28208  006E2C  0E00               	movlw	0
 28209  006E2E  0100               	movlb	0	; () banked
 28210  006E30  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 28211  006E32  0E08               	movlw	8
 28212  006E34  6F62               	movwf	___awdiv@divisor& (0+255),b
 28213  006E36  ECF0  F038         	call	___awdiv	;wreg free
 28214  006E3A  0100               	movlb	0	; () banked
 28215  006E3C  516D               	movf	lcd_set_com_seg@com& (0+255),w,b
 28216  006E3E  0D06               	mullw	6
 28217  006E40  50F3               	movf	prodl,w,c
 28218  006E42  0100               	movlb	0	; () banked
 28219  006E44  2560               	addwf	?___awdiv& (0+255),w,b
 28220  006E46  0100               	movlb	0	; () banked
 28221  006E48  6F6E               	movwf	lcd_set_com_seg@offset& (0+255),b
 28222                           
 28223                           ; BSR set to: 0
 28224                           ;lcd.c: 40: bits=seg%8;
 28225  006E4A  0100               	movlb	0	; () banked
 28226  006E4C  5168               	movf	lcd_set_com_seg@seg& (0+255),w,b
 28227  006E4E  0B07               	andlw	7
 28228  006E50  0100               	movlb	0	; () banked
 28229  006E52  6F6F               	movwf	lcd_set_com_seg@bits& (0+255),b
 28230                           
 28231                           ; BSR set to: 0
 28232                           ;lcd.c: 41: if(show){
 28233  006E54  0100               	movlb	0	; () banked
 28234  006E56  5169               	movf	lcd_set_com_seg@show& (0+255),w,b
 28235  006E58  0100               	movlb	0	; () banked
 28236  006E5A  B4D8               	btfsc	status,2,c
 28237  006E5C  D01B               	goto	l13156
 28238                           
 28239                           ; BSR set to: 0
 28240                           ;lcd.c: 42: pLCD[offset] |= (1<<bits);
 28241  006E5E  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 28242  006E62  0E01               	movlw	1
 28243  006E64  0100               	movlb	0	; () banked
 28244  006E66  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 28245  006E68  0100               	movlb	0	; () banked
 28246  006E6A  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 28247  006E6C  D003               	goto	u11584
 28248  006E6E                     u11585:
 28249  006E6E  0100               	movlb	0	; () banked
 28250  006E70  90D8               	bcf	status,0,c
 28251  006E72  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 28252  006E74                     u11584:
 28253  006E74  0100               	movlb	0	; () banked
 28254  006E76  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 28255  006E78  D7FA               	goto	u11585
 28256  006E7A  0100               	movlb	0	; () banked
 28257  006E7C  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 28258  006E7E  0D01               	mullw	1
 28259  006E80  0E00               	movlw	low _pLCD
 28260  006E82  24F3               	addwf	prodl,w,c
 28261  006E84  6ED9               	movwf	fsr2l,c
 28262  006E86  0E01               	movlw	high _pLCD
 28263  006E88  20F4               	addwfc	prodh,w,c
 28264  006E8A  6EDA               	movwf	fsr2h,c
 28265  006E8C  0100               	movlb	0	; () banked
 28266  006E8E  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 28267  006E90  12DF               	iorwf	indf2,f,c
 28268                           
 28269                           ;lcd.c: 43: }else{
 28270  006E92  0012               	return	
 28271  006E94                     l13156:
 28272                           
 28273                           ; BSR set to: 0
 28274                           ;lcd.c: 44: pLCD[offset] &= ~(1<<bits);
 28275  006E94  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 28276  006E98  0E01               	movlw	1
 28277  006E9A  0100               	movlb	0	; () banked
 28278  006E9C  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 28279  006E9E  0100               	movlb	0	; () banked
 28280  006EA0  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 28281  006EA2  D003               	goto	u11594
 28282  006EA4                     u11595:
 28283  006EA4  0100               	movlb	0	; () banked
 28284  006EA6  90D8               	bcf	status,0,c
 28285  006EA8  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 28286  006EAA                     u11594:
 28287  006EAA  0100               	movlb	0	; () banked
 28288  006EAC  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 28289  006EAE  D7FA               	goto	u11595
 28290  006EB0  0100               	movlb	0	; () banked
 28291  006EB2  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 28292  006EB4  0AFF               	xorlw	255
 28293  006EB6  0100               	movlb	0	; () banked
 28294  006EB8  6F6C               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
 28295  006EBA  0100               	movlb	0	; () banked
 28296  006EBC  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 28297  006EBE  0D01               	mullw	1
 28298  006EC0  0E00               	movlw	low _pLCD
 28299  006EC2  24F3               	addwf	prodl,w,c
 28300  006EC4  6ED9               	movwf	fsr2l,c
 28301  006EC6  0E01               	movlw	high _pLCD
 28302  006EC8  20F4               	addwfc	prodh,w,c
 28303  006ECA  6EDA               	movwf	fsr2h,c
 28304  006ECC  0100               	movlb	0	; () banked
 28305  006ECE  516C               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
 28306  006ED0  16DF               	andwf	indf2,f,c
 28307  006ED2  0012               	return	
 28308  006ED4                     __end_of_lcd_set_com_seg:
 28309                           	opt stack 0
 28310                           tosu	equ	0xFFF
 28311                           tosh	equ	0xFFE
 28312                           tosl	equ	0xFFD
 28313                           pclath	equ	0xFFA
 28314                           tblptru	equ	0xFF8
 28315                           tblptrh	equ	0xFF7
 28316                           tblptrl	equ	0xFF6
 28317                           tablat	equ	0xFF5
 28318                           prodh	equ	0xFF4
 28319                           prodl	equ	0xFF3
 28320                           intcon	equ	0xFF2
 28321                           indf0	equ	0xFEF
 28322                           postinc0	equ	0xFEE
 28323                           fsr0h	equ	0xFEA
 28324                           fsr0l	equ	0xFE9
 28325                           wreg	equ	0xFE8
 28326                           indf1	equ	0xFE7
 28327                           postinc1	equ	0xFE6
 28328                           postdec1	equ	0xFE5
 28329                           plusw1	equ	0xFE3
 28330                           fsr1h	equ	0xFE2
 28331                           fsr1l	equ	0xFE1
 28332                           indf2	equ	0xFDF
 28333                           postinc2	equ	0xFDE
 28334                           postdec2	equ	0xFDD
 28335                           plusw2	equ	0xFDB
 28336                           fsr2h	equ	0xFDA
 28337                           fsr2l	equ	0xFD9
 28338                           status	equ	0xFD8
 28339                           
 28340 ;; *************** function ___awdiv *****************
 28341 ;; Defined at:
 28342 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 28343 ;; Parameters:    Size  Location     Type
 28344 ;;  dividend        2    0[BANK0 ] int 
 28345 ;;  divisor         2    2[BANK0 ] int 
 28346 ;; Auto vars:     Size  Location     Type
 28347 ;;  quotient        2    6[BANK0 ] int 
 28348 ;;  sign            1    5[BANK0 ] unsigned char 
 28349 ;;  counter         1    4[BANK0 ] unsigned char 
 28350 ;; Return value:  Size  Location     Type
 28351 ;;                  2    0[BANK0 ] int 
 28352 ;; Registers used:
 28353 ;;		wreg, status,2, status,0
 28354 ;; Tracked objects:
 28355 ;;		On entry : 0/0
 28356 ;;		On exit  : 0/0
 28357 ;;		Unchanged: 0/0
 28358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28359 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28360 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28362 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28363 ;;Total ram usage:        8 bytes
 28364 ;; Hardware stack levels used:    1
 28365 ;; Hardware stack levels required when called:    4
 28366 ;; This function calls:
 28367 ;;		Nothing
 28368 ;; This function is called by:
 28369 ;;		_m_int16_2_str_4
 28370 ;;		_lcd_set_com_seg
 28371 ;; This function uses a non-reentrant model
 28372 ;;
 28373                           
 28374                           	psect	text157
 28375  0071E0                     __ptext157:
 28376                           	opt stack 0
 28377  0071E0                     ___awdiv:
 28378                           	opt stack 21
 28379                           
 28380                           ; BSR set to: 0
 28381                           ;incstack = 0
 28382  0071E0  0E00               	movlw	0
 28383  0071E2  0100               	movlb	0	; () banked
 28384  0071E4  6F65               	movwf	___awdiv@sign& (0+255),b
 28385                           
 28386                           ; BSR set to: 0
 28387  0071E6  0100               	movlb	0	; () banked
 28388  0071E8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28389  0071EA  D008               	goto	l13098
 28390                           
 28391                           ; BSR set to: 0
 28392  0071EC  0100               	movlb	0	; () banked
 28393  0071EE  6D62               	negf	___awdiv@divisor& (0+255),b
 28394  0071F0  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28395  0071F2  B0D8               	btfsc	status,0,c
 28396  0071F4  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28397                           
 28398                           ; BSR set to: 0
 28399  0071F6  0E01               	movlw	1
 28400  0071F8  0100               	movlb	0	; () banked
 28401  0071FA  6F65               	movwf	___awdiv@sign& (0+255),b
 28402  0071FC                     l13098:
 28403                           
 28404                           ; BSR set to: 0
 28405  0071FC  0100               	movlb	0	; () banked
 28406  0071FE  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28407  007200  D008               	goto	l13104
 28408                           
 28409                           ; BSR set to: 0
 28410  007202  0100               	movlb	0	; () banked
 28411  007204  6D60               	negf	___awdiv@dividend& (0+255),b
 28412  007206  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28413  007208  B0D8               	btfsc	status,0,c
 28414  00720A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28415                           
 28416                           ; BSR set to: 0
 28417  00720C  0E01               	movlw	1
 28418  00720E  0100               	movlb	0	; () banked
 28419  007210  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 28420  007212                     l13104:
 28421                           
 28422                           ; BSR set to: 0
 28423  007212  0E00               	movlw	0
 28424  007214  0100               	movlb	0	; () banked
 28425  007216  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 28426  007218  0E00               	movlw	0
 28427  00721A  6F66               	movwf	___awdiv@quotient& (0+255),b
 28428                           
 28429                           ; BSR set to: 0
 28430  00721C  0100               	movlb	0	; () banked
 28431  00721E  5162               	movf	___awdiv@divisor& (0+255),w,b
 28432  007220  0100               	movlb	0	; () banked
 28433  007222  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28434  007224  B4D8               	btfsc	status,2,c
 28435  007226  D02C               	goto	l13126
 28436                           
 28437                           ; BSR set to: 0
 28438  007228  0E01               	movlw	1
 28439  00722A  0100               	movlb	0	; () banked
 28440  00722C  6F64               	movwf	___awdiv@counter& (0+255),b
 28441  00722E  D006               	goto	l13112
 28442  007230                     l13110:
 28443                           
 28444                           ; BSR set to: 0
 28445  007230  0100               	movlb	0	; () banked
 28446  007232  90D8               	bcf	status,0,c
 28447  007234  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 28448  007236  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28449  007238  0100               	movlb	0	; () banked
 28450  00723A  2B64               	incf	___awdiv@counter& (0+255),f,b
 28451  00723C                     l13112:
 28452                           
 28453                           ; BSR set to: 0
 28454  00723C  0100               	movlb	0	; () banked
 28455  00723E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28456  007240  D7F7               	goto	l13110
 28457  007242                     l13114:
 28458                           
 28459                           ; BSR set to: 0
 28460  007242  0100               	movlb	0	; () banked
 28461  007244  90D8               	bcf	status,0,c
 28462  007246  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 28463  007248  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28464                           
 28465                           ; BSR set to: 0
 28466  00724A  0100               	movlb	0	; () banked
 28467  00724C  5162               	movf	___awdiv@divisor& (0+255),w,b
 28468  00724E  0100               	movlb	0	; () banked
 28469  007250  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 28470  007252  0100               	movlb	0	; () banked
 28471  007254  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28472  007256  0100               	movlb	0	; () banked
 28473  007258  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28474  00725A  A0D8               	btfss	status,0,c
 28475  00725C  D00A               	goto	l13122
 28476                           
 28477                           ; BSR set to: 0
 28478  00725E  0100               	movlb	0	; () banked
 28479  007260  5162               	movf	___awdiv@divisor& (0+255),w,b
 28480  007262  0100               	movlb	0	; () banked
 28481  007264  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 28482  007266  0100               	movlb	0	; () banked
 28483  007268  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28484  00726A  0100               	movlb	0	; () banked
 28485  00726C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28486                           
 28487                           ; BSR set to: 0
 28488  00726E  0100               	movlb	0	; () banked
 28489  007270  8166               	bsf	___awdiv@quotient& (0+255),0,b
 28490  007272                     l13122:
 28491                           
 28492                           ; BSR set to: 0
 28493  007272  0100               	movlb	0	; () banked
 28494  007274  90D8               	bcf	status,0,c
 28495  007276  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28496  007278  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 28497                           
 28498                           ; BSR set to: 0
 28499  00727A  0100               	movlb	0	; () banked
 28500  00727C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 28501  00727E  D7E1               	goto	l13114
 28502  007280                     l13126:
 28503                           
 28504                           ; BSR set to: 0
 28505  007280  0100               	movlb	0	; () banked
 28506  007282  5165               	movf	___awdiv@sign& (0+255),w,b
 28507  007284  0100               	movlb	0	; () banked
 28508  007286  B4D8               	btfsc	status,2,c
 28509  007288  D005               	goto	l13130
 28510                           
 28511                           ; BSR set to: 0
 28512  00728A  0100               	movlb	0	; () banked
 28513  00728C  6D66               	negf	___awdiv@quotient& (0+255),b
 28514  00728E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28515  007290  B0D8               	btfsc	status,0,c
 28516  007292  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28517  007294                     l13130:
 28518                           
 28519                           ; BSR set to: 0
 28520  007294  C066  F060         	movff	___awdiv@quotient,?___awdiv
 28521  007298  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 28522  00729C  0012               	return	
 28523  00729E                     __end_of___awdiv:
 28524                           	opt stack 0
 28525                           tosu	equ	0xFFF
 28526                           tosh	equ	0xFFE
 28527                           tosl	equ	0xFFD
 28528                           pclath	equ	0xFFA
 28529                           tblptru	equ	0xFF8
 28530                           tblptrh	equ	0xFF7
 28531                           tblptrl	equ	0xFF6
 28532                           tablat	equ	0xFF5
 28533                           prodh	equ	0xFF4
 28534                           prodl	equ	0xFF3
 28535                           intcon	equ	0xFF2
 28536                           indf0	equ	0xFEF
 28537                           postinc0	equ	0xFEE
 28538                           fsr0h	equ	0xFEA
 28539                           fsr0l	equ	0xFE9
 28540                           wreg	equ	0xFE8
 28541                           indf1	equ	0xFE7
 28542                           postinc1	equ	0xFE6
 28543                           postdec1	equ	0xFE5
 28544                           plusw1	equ	0xFE3
 28545                           fsr1h	equ	0xFE2
 28546                           fsr1l	equ	0xFE1
 28547                           indf2	equ	0xFDF
 28548                           postinc2	equ	0xFDE
 28549                           postdec2	equ	0xFDD
 28550                           plusw2	equ	0xFDB
 28551                           fsr2h	equ	0xFDA
 28552                           fsr2l	equ	0xFD9
 28553                           status	equ	0xFD8
 28554                           
 28555 ;; *************** function _lcd_disp_all *****************
 28556 ;; Defined at:
 28557 ;;		line 606 in file "src/driver/lcd.c"
 28558 ;; Parameters:    Size  Location     Type
 28559 ;;  x               1    wreg     unsigned char 
 28560 ;; Auto vars:     Size  Location     Type
 28561 ;;  x               1    0[BANK0 ] unsigned char 
 28562 ;;  i               1    1[BANK0 ] unsigned char 
 28563 ;; Return value:  Size  Location     Type
 28564 ;;                  1    wreg      void 
 28565 ;; Registers used:
 28566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28567 ;; Tracked objects:
 28568 ;;		On entry : 0/0
 28569 ;;		On exit  : 0/0
 28570 ;;		Unchanged: 0/0
 28571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28575 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28576 ;;Total ram usage:        2 bytes
 28577 ;; Hardware stack levels used:    1
 28578 ;; Hardware stack levels required when called:    4
 28579 ;; This function calls:
 28580 ;;		Nothing
 28581 ;; This function is called by:
 28582 ;;		_ui_disp_start_cs600
 28583 ;;		_ui_disp_menu_psw_adj
 28584 ;;		_ui_disp_menu_home
 28585 ;;		_ui_disp_menu_density_adj
 28586 ;;		_ui_disp_menu_pos_adj
 28587 ;;		_ui_disp_menu_h_adj
 28588 ;;		_ui_disp_menu_d_adj
 28589 ;;		_ui_disp_menu_bzero_adj
 28590 ;;		_ui_disp_menu_calib_diff_adj
 28591 ;;		_ui_disp_menu_calib_pr_adj
 28592 ;;		_ui_disp_menu_poly_c_adj
 28593 ;;		_ui_disp_menu_warn_t_adj
 28594 ;;		_ui_disp_menu_warn_v_adj
 28595 ;;		_ui_disp_menu_epr_calib_adj
 28596 ;;		_ui_disp_menu_epr_ilp_scale_adj
 28597 ;;		_ui_disp_menu_bar_full_adj
 28598 ;;		_ui_disp_menu_work_mode_adj
 28599 ;;		_lcd_config
 28600 ;;		_ui_disp_all_on
 28601 ;;		_ui_disp_all_off
 28602 ;;		_ui_disp_menu_home_test
 28603 ;; This function uses a non-reentrant model
 28604 ;;
 28605                           
 28606                           	psect	text158
 28607  009E50                     __ptext158:
 28608                           	opt stack 0
 28609  009E50                     _lcd_disp_all:
 28610                           	opt stack 25
 28611                           
 28612                           ; BSR set to: 0
 28613                           ;incstack = 0
 28614                           ;lcd_disp_all@x stored from wreg
 28615  009E50  0100               	movlb	0	; () banked
 28616  009E52  6F60               	movwf	lcd_disp_all@x& (0+255),b
 28617                           
 28618                           ;lcd.c: 608: uint8_t i;
 28619                           ;lcd.c: 609: for(i=0;i<24;i++)
 28620  009E54  0E00               	movlw	0
 28621  009E56  0100               	movlb	0	; () banked
 28622  009E58  6F61               	movwf	lcd_disp_all@i& (0+255),b
 28623  009E5A                     l14688:
 28624                           
 28625                           ; BSR set to: 0
 28626  009E5A  0E17               	movlw	23
 28627  009E5C  0100               	movlb	0	; () banked
 28628  009E5E  6561               	cpfsgt	lcd_disp_all@i& (0+255),b
 28629  009E60  D001               	goto	l14692
 28630  009E62  0012               	return	
 28631  009E64                     l14692:
 28632                           
 28633                           ; BSR set to: 0
 28634                           ;lcd.c: 610: {
 28635                           ;lcd.c: 611: pLCD[i]=x;
 28636  009E64  0100               	movlb	0	; () banked
 28637  009E66  5161               	movf	lcd_disp_all@i& (0+255),w,b
 28638  009E68  0D01               	mullw	1
 28639  009E6A  0E00               	movlw	low _pLCD
 28640  009E6C  24F3               	addwf	prodl,w,c
 28641  009E6E  6ED9               	movwf	fsr2l,c
 28642  009E70  0E01               	movlw	high _pLCD
 28643  009E72  20F4               	addwfc	prodh,w,c
 28644  009E74  6EDA               	movwf	fsr2h,c
 28645  009E76  C060  FFDF         	movff	lcd_disp_all@x,indf2
 28646                           
 28647                           ; BSR set to: 0
 28648  009E7A  0100               	movlb	0	; () banked
 28649  009E7C  2B61               	incf	lcd_disp_all@i& (0+255),f,b
 28650  009E7E  D7ED               	goto	l14688
 28651  009E80                     __end_of_lcd_disp_all:
 28652                           	opt stack 0
 28653                           tosu	equ	0xFFF
 28654                           tosh	equ	0xFFE
 28655                           tosl	equ	0xFFD
 28656                           pclath	equ	0xFFA
 28657                           tblptru	equ	0xFF8
 28658                           tblptrh	equ	0xFF7
 28659                           tblptrl	equ	0xFF6
 28660                           tablat	equ	0xFF5
 28661                           prodh	equ	0xFF4
 28662                           prodl	equ	0xFF3
 28663                           intcon	equ	0xFF2
 28664                           indf0	equ	0xFEF
 28665                           postinc0	equ	0xFEE
 28666                           fsr0h	equ	0xFEA
 28667                           fsr0l	equ	0xFE9
 28668                           wreg	equ	0xFE8
 28669                           indf1	equ	0xFE7
 28670                           postinc1	equ	0xFE6
 28671                           postdec1	equ	0xFE5
 28672                           plusw1	equ	0xFE3
 28673                           fsr1h	equ	0xFE2
 28674                           fsr1l	equ	0xFE1
 28675                           indf2	equ	0xFDF
 28676                           postinc2	equ	0xFDE
 28677                           postdec2	equ	0xFDD
 28678                           plusw2	equ	0xFDB
 28679                           fsr2h	equ	0xFDA
 28680                           fsr2l	equ	0xFD9
 28681                           status	equ	0xFD8
 28682                           
 28683 ;; *************** function _sample_function_enable_fi_in_rtc *****************
 28684 ;; Defined at:
 28685 ;;		line 162 in file "src/api/sample.c"
 28686 ;; Parameters:    Size  Location     Type
 28687 ;;		None
 28688 ;; Auto vars:     Size  Location     Type
 28689 ;;  ret             1  134[BANK0 ] unsigned char 
 28690 ;; Return value:  Size  Location     Type
 28691 ;;                  1    wreg      void 
 28692 ;; Registers used:
 28693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28694 ;; Tracked objects:
 28695 ;;		On entry : 0/0
 28696 ;;		On exit  : 0/0
 28697 ;;		Unchanged: 0/0
 28698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28702 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28703 ;;Total ram usage:        1 bytes
 28704 ;; Hardware stack levels used:    1
 28705 ;; Hardware stack levels required when called:    9
 28706 ;; This function calls:
 28707 ;;		_sample_all_power_off
 28708 ;;		_sample_all_power_on
 28709 ;;		_sample_call_cal_diff_pr
 28710 ;;		_sample_call_cal_in_soc
 28711 ;;		_sample_call_cal_pr
 28712 ;;		_sample_variable_init
 28713 ;; This function is called by:
 28714 ;;		_event_process_rtc
 28715 ;; This function uses a non-reentrant model
 28716 ;;
 28717                           
 28718                           	psect	text159
 28719  006AE6                     __ptext159:
 28720                           	opt stack 0
 28721  006AE6                     _sample_function_enable_fi_in_rtc:
 28722                           	opt stack 20
 28723                           
 28724                           ;sample.c: 164: uint8_t ret=0;
 28725                           
 28726                           ; BSR set to: 0
 28727                           ;incstack = 0
 28728  006AE6  0E00               	movlw	0
 28729  006AE8  0100               	movlb	0	; () banked
 28730  006AEA  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28731                           
 28732                           ; BSR set to: 0
 28733                           ;sample.c: 166: if(dwm==WORK_MODE){
 28734  006AEC  0100               	movlb	0	; () banked
 28735  006AEE  05FD               	decf	_dwm& (0+255),w,b	;volatile
 28736  006AF0  A4D8               	btfss	status,2,c
 28737  006AF2  D057               	goto	l17146
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;sample.c: 167: if(sensorSimpleEn){
 28741  006AF4  0100               	movlb	0	; () banked
 28742  006AF6  51F1               	movf	_sensorSimpleEn& (0+255),w,b	;volatile
 28743  006AF8  B4D8               	btfsc	status,2,c
 28744  006AFA  D015               	goto	l17114
 28745                           
 28746                           ; BSR set to: 0
 28747                           ;sample.c: 168: if(diffPrChipSampleFinish && PrChipSampleFinish && inSocAdcSampleFinish)
      +                          {
 28748  006AFC  0100               	movlb	0	; () banked
 28749  006AFE  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 28750  006B00  B4D8               	btfsc	status,2,c
 28751  006B02  0012               	return	
 28752                           
 28753                           ; BSR set to: 0
 28754  006B04  0100               	movlb	0	; () banked
 28755  006B06  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 28756  006B08  B4D8               	btfsc	status,2,c
 28757  006B0A  0012               	return	
 28758                           
 28759                           ; BSR set to: 0
 28760  006B0C  0100               	movlb	0	; () banked
 28761  006B0E  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 28762  006B10  B4D8               	btfsc	status,2,c
 28763  006B12  0012               	return	
 28764                           
 28765                           ; BSR set to: 0
 28766                           ;sample.c: 170: sensorSimpleEn=0;
 28767  006B14  0E00               	movlw	0
 28768  006B16  0100               	movlb	0	; () banked
 28769  006B18  6FF1               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 28770                           
 28771                           ; BSR set to: 0
 28772                           ;sample.c: 171: sample_all_power_off();
 28773  006B1A  ECAD  F051         	call	_sample_all_power_off	;wreg free
 28774                           
 28775                           ;sample.c: 172: sensorSimpleTsLong=0;
 28776  006B1E  0E00               	movlw	0
 28777  006B20  0100               	movlb	0	; () banked
 28778  006B22  6FF0               	movwf	_sensorSimpleTsLong& (0+255),b	;volatile
 28779                           
 28780                           ; BSR set to: 0
 28781                           ;sample.c: 173: }
 28782                           ;sample.c: 174: }else{
 28783  006B24  0012               	return	
 28784  006B26                     l17114:
 28785                           
 28786                           ; BSR set to: 0
 28787                           ;sample.c: 175: if(diffPrChipSampleFinish || PrChipSampleFinish || inSocAdcSampleFinish)
      +                          {
 28788  006B26  0100               	movlb	0	; () banked
 28789  006B28  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 28790  006B2A  A4D8               	btfss	status,2,c
 28791  006B2C  D008               	goto	l17120
 28792                           
 28793                           ; BSR set to: 0
 28794  006B2E  0100               	movlb	0	; () banked
 28795  006B30  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 28796  006B32  A4D8               	btfss	status,2,c
 28797  006B34  D004               	goto	l17120
 28798                           
 28799                           ; BSR set to: 0
 28800  006B36  0100               	movlb	0	; () banked
 28801  006B38  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 28802  006B3A  B4D8               	btfsc	status,2,c
 28803  006B3C  D023               	goto	l17136
 28804  006B3E                     l17120:
 28805                           
 28806                           ; BSR set to: 0
 28807                           ;sample.c: 177: if(diffPrChipSampleFinish)ret=sample_call_cal_diff_pr();
 28808  006B3E  0100               	movlb	0	; () banked
 28809  006B40  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 28810  006B42  B4D8               	btfsc	status,2,c
 28811  006B44  D004               	goto	l17124
 28812                           
 28813                           ; BSR set to: 0
 28814  006B46  ECBE  F050         	call	_sample_call_cal_diff_pr	;wreg free
 28815  006B4A  0100               	movlb	0	; () banked
 28816  006B4C  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28817  006B4E                     l17124:
 28818                           
 28819                           ; BSR set to: 0
 28820                           ;sample.c: 178: if(!ret && PrChipSampleFinish)ret=sample_call_cal_pr();
 28821  006B4E  0100               	movlb	0	; () banked
 28822  006B50  51E6               	movf	sample_function_enable_fi_in_rtc@ret& (0+255),w,b
 28823  006B52  0100               	movlb	0	; () banked
 28824  006B54  A4D8               	btfss	status,2,c
 28825  006B56  D008               	goto	l17130
 28826                           
 28827                           ; BSR set to: 0
 28828  006B58  0100               	movlb	0	; () banked
 28829  006B5A  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 28830  006B5C  B4D8               	btfsc	status,2,c
 28831  006B5E  D004               	goto	l17130
 28832                           
 28833                           ; BSR set to: 0
 28834  006B60  ECAF  F050         	call	_sample_call_cal_pr	;wreg free
 28835  006B64  0100               	movlb	0	; () banked
 28836  006B66  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28837  006B68                     l17130:
 28838                           
 28839                           ; BSR set to: 0
 28840                           ;sample.c: 179: if(!ret && inSocAdcSampleFinish)ret=sample_call_cal_in_soc();
 28841  006B68  0100               	movlb	0	; () banked
 28842  006B6A  51E6               	movf	sample_function_enable_fi_in_rtc@ret& (0+255),w,b
 28843  006B6C  0100               	movlb	0	; () banked
 28844  006B6E  A4D8               	btfss	status,2,c
 28845  006B70  0012               	return	
 28846                           
 28847                           ; BSR set to: 0
 28848  006B72  0100               	movlb	0	; () banked
 28849  006B74  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 28850  006B76  B4D8               	btfsc	status,2,c
 28851  006B78  0012               	return	
 28852                           
 28853                           ; BSR set to: 0
 28854  006B7A  EC6D  F050         	call	_sample_call_cal_in_soc	;wreg free
 28855  006B7E  0100               	movlb	0	; () banked
 28856  006B80  6FE6               	movwf	sample_function_enable_fi_in_rtc@ret& (0+255),b
 28857                           
 28858                           ; BSR set to: 0
 28859                           ;sample.c: 180: }else if(sensorSimpleTsLong>=100*2){
 28860  006B82  0012               	return	
 28861  006B84                     l17136:
 28862                           
 28863                           ; BSR set to: 0
 28864  006B84  0EC7               	movlw	199
 28865  006B86  0100               	movlb	0	; () banked
 28866  006B88  65F0               	cpfsgt	_sensorSimpleTsLong& (0+255),b	;volatile
 28867  006B8A  D008               	goto	l17144
 28868                           
 28869                           ; BSR set to: 0
 28870                           ;sample.c: 182: sensorSimpleEn=1;
 28871  006B8C  0E01               	movlw	1
 28872  006B8E  0100               	movlb	0	; () banked
 28873  006B90  6FF1               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;sample.c: 183: sample_all_power_on();
 28877  006B92  EC8A  F051         	call	_sample_all_power_on	;wreg free
 28878                           
 28879                           ;sample.c: 184: sample_variable_init();
 28880  006B96  EC52  F04A         	call	_sample_variable_init	;wreg free
 28881                           
 28882                           ;sample.c: 185: }else{
 28883  006B9A  0012               	return	
 28884  006B9C                     l17144:
 28885                           
 28886                           ;sample.c: 187: sensorSimpleTsLong++;
 28887  006B9C  0100               	movlb	0	; () banked
 28888  006B9E  2BF0               	incf	_sensorSimpleTsLong& (0+255),f,b	;volatile
 28889                           
 28890                           ; BSR set to: 0
 28891                           ;sample.c: 188: }
 28892                           ;sample.c: 189: }
 28893                           ;sample.c: 190: }else{
 28894                           
 28895                           ; BSR set to: 0
 28896                           
 28897                           ; BSR set to: 0
 28898  006BA0  0012               	return	
 28899  006BA2                     l17146:
 28900                           
 28901                           ; BSR set to: 0
 28902                           ;sample.c: 191: sensorSimpleEn=1;
 28903  006BA2  0E01               	movlw	1
 28904  006BA4  0100               	movlb	0	; () banked
 28905  006BA6  6FF1               	movwf	_sensorSimpleEn& (0+255),b	;volatile
 28906                           
 28907                           ; BSR set to: 0
 28908                           ;sample.c: 192: sample_all_power_on();
 28909  006BA8  EC8A  F051         	call	_sample_all_power_on	;wreg free
 28910                           
 28911                           ;sample.c: 193: sensorSimpleTsLong=0;
 28912  006BAC  0E00               	movlw	0
 28913  006BAE  0100               	movlb	0	; () banked
 28914  006BB0  6FF0               	movwf	_sensorSimpleTsLong& (0+255),b	;volatile
 28915  006BB2  0012               	return	
 28916  006BB4                     __end_of_sample_function_enable_fi_in_rtc:
 28917                           	opt stack 0
 28918                           tosu	equ	0xFFF
 28919                           tosh	equ	0xFFE
 28920                           tosl	equ	0xFFD
 28921                           pclath	equ	0xFFA
 28922                           tblptru	equ	0xFF8
 28923                           tblptrh	equ	0xFF7
 28924                           tblptrl	equ	0xFF6
 28925                           tablat	equ	0xFF5
 28926                           prodh	equ	0xFF4
 28927                           prodl	equ	0xFF3
 28928                           intcon	equ	0xFF2
 28929                           indf0	equ	0xFEF
 28930                           postinc0	equ	0xFEE
 28931                           fsr0h	equ	0xFEA
 28932                           fsr0l	equ	0xFE9
 28933                           wreg	equ	0xFE8
 28934                           indf1	equ	0xFE7
 28935                           postinc1	equ	0xFE6
 28936                           postdec1	equ	0xFE5
 28937                           plusw1	equ	0xFE3
 28938                           fsr1h	equ	0xFE2
 28939                           fsr1l	equ	0xFE1
 28940                           indf2	equ	0xFDF
 28941                           postinc2	equ	0xFDE
 28942                           postdec2	equ	0xFDD
 28943                           plusw2	equ	0xFDB
 28944                           fsr2h	equ	0xFDA
 28945                           fsr2l	equ	0xFD9
 28946                           status	equ	0xFD8
 28947                           
 28948 ;; *************** function _sample_variable_init *****************
 28949 ;; Defined at:
 28950 ;;		line 104 in file "src/api/sample.c"
 28951 ;; Parameters:    Size  Location     Type
 28952 ;;		None
 28953 ;; Auto vars:     Size  Location     Type
 28954 ;;		None
 28955 ;; Return value:  Size  Location     Type
 28956 ;;                  1    wreg      void 
 28957 ;; Registers used:
 28958 ;;		wreg, status,2
 28959 ;; Tracked objects:
 28960 ;;		On entry : 0/0
 28961 ;;		On exit  : 0/0
 28962 ;;		Unchanged: 0/0
 28963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28968 ;;Total ram usage:        0 bytes
 28969 ;; Hardware stack levels used:    1
 28970 ;; Hardware stack levels required when called:    4
 28971 ;; This function calls:
 28972 ;;		Nothing
 28973 ;; This function is called by:
 28974 ;;		_sample_function_enable_fi_in_rtc
 28975 ;; This function uses a non-reentrant model
 28976 ;;
 28977                           
 28978                           	psect	text160
 28979  0094A4                     __ptext160:
 28980                           	opt stack 0
 28981  0094A4                     _sample_variable_init:
 28982                           	opt stack 24
 28983                           
 28984                           ;sample.c: 106: diffPrChipSampleTimer=0;
 28985                           
 28986                           ;incstack = 0
 28987  0094A4  0E00               	movlw	0
 28988  0094A6  0101               	movlb	1	; () banked
 28989  0094A8  6F65               	movwf	(_diffPrChipSampleTimer+1)& (0+255),b	;volatile
 28990  0094AA  0E00               	movlw	0
 28991  0094AC  6F64               	movwf	_diffPrChipSampleTimer& (0+255),b	;volatile
 28992                           
 28993                           ;sample.c: 107: diffPrChipSampleCount=0;
 28994  0094AE  0E00               	movlw	0
 28995  0094B0  0100               	movlb	0	; () banked
 28996  0094B2  6FFA               	movwf	_diffPrChipSampleCount& (0+255),b	;volatile
 28997                           
 28998                           ;sample.c: 108: diffPrChipSampCh=0;
 28999  0094B4  0E00               	movlw	0
 29000  0094B6  0100               	movlb	0	; () banked
 29001  0094B8  6FF9               	movwf	_diffPrChipSampCh& (0+255),b	;volatile
 29002                           
 29003                           ;sample.c: 110: PrChipSampleTimer=0;
 29004  0094BA  0E00               	movlw	0
 29005  0094BC  0101               	movlb	1	; () banked
 29006  0094BE  6F63               	movwf	(_PrChipSampleTimer+1)& (0+255),b	;volatile
 29007  0094C0  0E00               	movlw	0
 29008  0094C2  6F62               	movwf	_PrChipSampleTimer& (0+255),b	;volatile
 29009                           
 29010                           ;sample.c: 111: prChipSampleCh=0;
 29011  0094C4  0E00               	movlw	0
 29012  0094C6  0100               	movlb	0	; () banked
 29013  0094C8  6FF7               	movwf	_prChipSampleCh& (0+255),b	;volatile
 29014                           
 29015                           ;sample.c: 112: prChipSampleCount=0;
 29016  0094CA  0E00               	movlw	0
 29017  0094CC  0100               	movlb	0	; () banked
 29018  0094CE  6FF6               	movwf	_prChipSampleCount& (0+255),b	;volatile
 29019                           
 29020                           ;sample.c: 114: inSocAdcSampleTimer=0;
 29021  0094D0  0E00               	movlw	0
 29022  0094D2  0101               	movlb	1	; () banked
 29023  0094D4  6F61               	movwf	(_inSocAdcSampleTimer+1)& (0+255),b	;volatile
 29024  0094D6  0E00               	movlw	0
 29025  0094D8  6F60               	movwf	_inSocAdcSampleTimer& (0+255),b	;volatile
 29026                           
 29027                           ;sample.c: 115: inSocAdcSampleCount=0;
 29028  0094DA  0E00               	movlw	0
 29029  0094DC  0100               	movlb	0	; () banked
 29030  0094DE  6FF4               	movwf	_inSocAdcSampleCount& (0+255),b	;volatile
 29031                           
 29032                           ;sample.c: 116: inSocAdcSampleCh=0;
 29033  0094E0  0E00               	movlw	0
 29034  0094E2  0100               	movlb	0	; () banked
 29035  0094E4  6FF3               	movwf	_inSocAdcSampleCh& (0+255),b	;volatile
 29036                           
 29037                           ;sample.c: 118: diffPrChipSampleFinish=0;
 29038  0094E6  0E00               	movlw	0
 29039  0094E8  0100               	movlb	0	; () banked
 29040  0094EA  6FF8               	movwf	_diffPrChipSampleFinish& (0+255),b
 29041                           
 29042                           ;sample.c: 119: PrChipSampleFinish=0;
 29043  0094EC  0E00               	movlw	0
 29044  0094EE  0100               	movlb	0	; () banked
 29045  0094F0  6FF5               	movwf	_PrChipSampleFinish& (0+255),b
 29046                           
 29047                           ;sample.c: 120: inSocAdcSampleFinish=0;
 29048  0094F2  0E00               	movlw	0
 29049  0094F4  0100               	movlb	0	; () banked
 29050  0094F6  6FF2               	movwf	_inSocAdcSampleFinish& (0+255),b
 29051                           
 29052                           ; BSR set to: 0
 29053  0094F8  0012               	return		;funcret
 29054  0094FA                     __end_of_sample_variable_init:
 29055                           	opt stack 0
 29056                           tosu	equ	0xFFF
 29057                           tosh	equ	0xFFE
 29058                           tosl	equ	0xFFD
 29059                           pclath	equ	0xFFA
 29060                           tblptru	equ	0xFF8
 29061                           tblptrh	equ	0xFF7
 29062                           tblptrl	equ	0xFF6
 29063                           tablat	equ	0xFF5
 29064                           prodh	equ	0xFF4
 29065                           prodl	equ	0xFF3
 29066                           intcon	equ	0xFF2
 29067                           indf0	equ	0xFEF
 29068                           postinc0	equ	0xFEE
 29069                           fsr0h	equ	0xFEA
 29070                           fsr0l	equ	0xFE9
 29071                           wreg	equ	0xFE8
 29072                           indf1	equ	0xFE7
 29073                           postinc1	equ	0xFE6
 29074                           postdec1	equ	0xFE5
 29075                           plusw1	equ	0xFE3
 29076                           fsr1h	equ	0xFE2
 29077                           fsr1l	equ	0xFE1
 29078                           indf2	equ	0xFDF
 29079                           postinc2	equ	0xFDE
 29080                           postdec2	equ	0xFDD
 29081                           plusw2	equ	0xFDB
 29082                           fsr2h	equ	0xFDA
 29083                           fsr2l	equ	0xFD9
 29084                           status	equ	0xFD8
 29085                           
 29086 ;; *************** function _sample_call_cal_pr *****************
 29087 ;; Defined at:
 29088 ;;		line 131 in file "src/api/sample.c"
 29089 ;; Parameters:    Size  Location     Type
 29090 ;;		None
 29091 ;; Auto vars:     Size  Location     Type
 29092 ;;		None
 29093 ;; Return value:  Size  Location     Type
 29094 ;;                  1    wreg      unsigned char 
 29095 ;; Registers used:
 29096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29097 ;; Tracked objects:
 29098 ;;		On entry : 0/0
 29099 ;;		On exit  : 0/0
 29100 ;;		Unchanged: 0/0
 29101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29106 ;;Total ram usage:        0 bytes
 29107 ;; Hardware stack levels used:    1
 29108 ;; Hardware stack levels required when called:    7
 29109 ;; This function calls:
 29110 ;;		_cal_press
 29111 ;;		_cal_pt100_temperature_ex
 29112 ;; This function is called by:
 29113 ;;		_sample_call_in_ticker
 29114 ;;		_sample_function_enable_fi_in_rtc
 29115 ;; This function uses a non-reentrant model
 29116 ;;
 29117                           
 29118                           	psect	text161
 29119  00A15E                     __ptext161:
 29120                           	opt stack 0
 29121  00A15E                     _sample_call_cal_pr:
 29122                           	opt stack 21
 29123                           
 29124                           ;sample.c: 133: if(!PrChipSampleFinish)return 0;
 29125                           
 29126                           ; BSR set to: 0
 29127                           ;incstack = 0
 29128  00A15E  0100               	movlb	0	; () banked
 29129  00A160  51F5               	movf	_PrChipSampleFinish& (0+255),w,b
 29130  00A162  A4D8               	btfss	status,2,c
 29131  00A164  D002               	goto	l16524
 29132                           
 29133                           ; BSR set to: 0
 29134  00A166  0E00               	movlw	0
 29135                           
 29136                           ; BSR set to: 0
 29137  00A168  0012               	return	
 29138  00A16A                     l16524:
 29139                           
 29140                           ; BSR set to: 0
 29141                           ;sample.c: 134: cal_press();
 29142  00A16A  EC6A  F042         	call	_cal_press	;wreg free
 29143                           
 29144                           ;sample.c: 135: cal_pt100_temperature_ex();
 29145  00A16E  EC76  F051         	call	_cal_pt100_temperature_ex	;wreg free
 29146                           
 29147                           ;sample.c: 136: PrChipSampleFinish=0;
 29148  00A172  0E00               	movlw	0
 29149  00A174  0100               	movlb	0	; () banked
 29150  00A176  6FF5               	movwf	_PrChipSampleFinish& (0+255),b
 29151                           
 29152                           ; BSR set to: 0
 29153                           ;sample.c: 137: return 1;
 29154  00A178  0E01               	movlw	1
 29155  00A17A  0012               	return	
 29156  00A17C                     __end_of_sample_call_cal_pr:
 29157                           	opt stack 0
 29158                           tosu	equ	0xFFF
 29159                           tosh	equ	0xFFE
 29160                           tosl	equ	0xFFD
 29161                           pclath	equ	0xFFA
 29162                           tblptru	equ	0xFF8
 29163                           tblptrh	equ	0xFF7
 29164                           tblptrl	equ	0xFF6
 29165                           tablat	equ	0xFF5
 29166                           prodh	equ	0xFF4
 29167                           prodl	equ	0xFF3
 29168                           intcon	equ	0xFF2
 29169                           indf0	equ	0xFEF
 29170                           postinc0	equ	0xFEE
 29171                           fsr0h	equ	0xFEA
 29172                           fsr0l	equ	0xFE9
 29173                           wreg	equ	0xFE8
 29174                           indf1	equ	0xFE7
 29175                           postinc1	equ	0xFE6
 29176                           postdec1	equ	0xFE5
 29177                           plusw1	equ	0xFE3
 29178                           fsr1h	equ	0xFE2
 29179                           fsr1l	equ	0xFE1
 29180                           indf2	equ	0xFDF
 29181                           postinc2	equ	0xFDE
 29182                           postdec2	equ	0xFDD
 29183                           plusw2	equ	0xFDB
 29184                           fsr2h	equ	0xFDA
 29185                           fsr2l	equ	0xFD9
 29186                           status	equ	0xFD8
 29187                           
 29188 ;; *************** function _cal_pt100_temperature_ex *****************
 29189 ;; Defined at:
 29190 ;;		line 617 in file "src/api/data.c"
 29191 ;; Parameters:    Size  Location     Type
 29192 ;;		None
 29193 ;; Auto vars:     Size  Location     Type
 29194 ;;		None
 29195 ;; Return value:  Size  Location     Type
 29196 ;;                  1    wreg      void 
 29197 ;; Registers used:
 29198 ;;		wreg, status,2
 29199 ;; Tracked objects:
 29200 ;;		On entry : 0/0
 29201 ;;		On exit  : 0/0
 29202 ;;		Unchanged: 0/0
 29203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29208 ;;Total ram usage:        0 bytes
 29209 ;; Hardware stack levels used:    1
 29210 ;; Hardware stack levels required when called:    4
 29211 ;; This function calls:
 29212 ;;		Nothing
 29213 ;; This function is called by:
 29214 ;;		_sample_call_cal_pr
 29215 ;; This function uses a non-reentrant model
 29216 ;;
 29217                           
 29218                           	psect	text162
 29219  00A2EC                     __ptext162:
 29220                           	opt stack 0
 29221  00A2EC                     _cal_pt100_temperature_ex:
 29222                           	opt stack 23
 29223                           
 29224                           ;data.c: 638: rtTemperatureEx= 0;
 29225                           
 29226                           ; BSR set to: 0
 29227                           ;incstack = 0
 29228  00A2EC  0E00               	movlw	0
 29229  00A2EE  0101               	movlb	1	; () banked
 29230  00A2F0  6F46               	movwf	_rtTemperatureEx& (0+255),b	;volatile
 29231  00A2F2  0E00               	movlw	0
 29232  00A2F4  6F47               	movwf	(_rtTemperatureEx+1)& (0+255),b	;volatile
 29233  00A2F6  0E00               	movlw	0
 29234  00A2F8  6F48               	movwf	(_rtTemperatureEx+2)& (0+255),b	;volatile
 29235  00A2FA  0E00               	movlw	0
 29236  00A2FC  6F49               	movwf	(_rtTemperatureEx+3)& (0+255),b	;volatile
 29237                           
 29238                           ; BSR set to: 1
 29239  00A2FE  0012               	return		;funcret
 29240  00A300                     __end_of_cal_pt100_temperature_ex:
 29241                           	opt stack 0
 29242                           tosu	equ	0xFFF
 29243                           tosh	equ	0xFFE
 29244                           tosl	equ	0xFFD
 29245                           pclath	equ	0xFFA
 29246                           tblptru	equ	0xFF8
 29247                           tblptrh	equ	0xFF7
 29248                           tblptrl	equ	0xFF6
 29249                           tablat	equ	0xFF5
 29250                           prodh	equ	0xFF4
 29251                           prodl	equ	0xFF3
 29252                           intcon	equ	0xFF2
 29253                           indf0	equ	0xFEF
 29254                           postinc0	equ	0xFEE
 29255                           fsr0h	equ	0xFEA
 29256                           fsr0l	equ	0xFE9
 29257                           wreg	equ	0xFE8
 29258                           indf1	equ	0xFE7
 29259                           postinc1	equ	0xFE6
 29260                           postdec1	equ	0xFE5
 29261                           plusw1	equ	0xFE3
 29262                           fsr1h	equ	0xFE2
 29263                           fsr1l	equ	0xFE1
 29264                           indf2	equ	0xFDF
 29265                           postinc2	equ	0xFDE
 29266                           postdec2	equ	0xFDD
 29267                           plusw2	equ	0xFDB
 29268                           fsr2h	equ	0xFDA
 29269                           fsr2l	equ	0xFD9
 29270                           status	equ	0xFD8
 29271                           
 29272 ;; *************** function _cal_press *****************
 29273 ;; Defined at:
 29274 ;;		line 571 in file "src/api/data.c"
 29275 ;; Parameters:    Size  Location     Type
 29276 ;;		None
 29277 ;; Auto vars:     Size  Location     Type
 29278 ;;  xin             8   61[BANK0 ] struct .
 29279 ;;  tabrow          2   59[BANK0 ] PTR struct .
 29280 ;;		 -> prCalibTabDef.prCalibRow(156), prCalibTabDef(162), 
 29281 ;;  ret             1   58[BANK0 ] unsigned char 
 29282 ;; Return value:  Size  Location     Type
 29283 ;;                  1    wreg      unsigned char 
 29284 ;; Registers used:
 29285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29286 ;; Tracked objects:
 29287 ;;		On entry : 0/0
 29288 ;;		On exit  : 0/0
 29289 ;;		Unchanged: 0/0
 29290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29292 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29294 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29295 ;;Total ram usage:       11 bytes
 29296 ;; Hardware stack levels used:    1
 29297 ;; Hardware stack levels required when called:    6
 29298 ;; This function calls:
 29299 ;;		_m_interp1_cal_p_v
 29300 ;; This function is called by:
 29301 ;;		_sample_call_cal_pr
 29302 ;; This function uses a non-reentrant model
 29303 ;;
 29304                           
 29305                           	psect	text163
 29306  0084D4                     __ptext163:
 29307                           	opt stack 0
 29308  0084D4                     _cal_press:
 29309                           	opt stack 21
 29310                           
 29311                           ;data.c: 573: uint8_t ret;
 29312                           ;data.c: 574: st_prData xin={0};
 29313                           
 29314                           ; BSR set to: 1
 29315                           ;incstack = 0
 29316  0084D4  EE21  F023         	lfsr	2,cal_press@F7863
 29317  0084D8  EE10  F09D         	lfsr	1,cal_press@xin
 29318  0084DC  0E07               	movlw	7
 29319  0084DE                     u14161:
 29320  0084DE  CFDB FFE3          	movff	plusw2,plusw1
 29321  0084E2  06E8               	decf	wreg,f,c
 29322  0084E4  E2FC               	bc	u14161
 29323                           
 29324                           ;data.c: 575: xin.pValue=0;
 29325  0084E6  0E00               	movlw	0
 29326  0084E8  0100               	movlb	0	; () banked
 29327  0084EA  6F9D               	movwf	cal_press@xin& (0+255),b
 29328  0084EC  0E00               	movlw	0
 29329  0084EE  6F9E               	movwf	(cal_press@xin+1)& (0+255),b
 29330  0084F0  0E00               	movlw	0
 29331  0084F2  6F9F               	movwf	(cal_press@xin+2)& (0+255),b
 29332  0084F4  0E00               	movlw	0
 29333  0084F6  6FA0               	movwf	(cal_press@xin+3)& (0+255),b
 29334                           
 29335                           ; BSR set to: 0
 29336                           ;data.c: 576: xin.pAdcValue=adc_pressure;
 29337  0084F8  C16E  F0A1         	movff	_adc_pressure,cal_press@xin+4	;volatile
 29338  0084FC  C16F  F0A2         	movff	_adc_pressure+1,cal_press@xin+5	;volatile
 29339                           
 29340                           ; BSR set to: 0
 29341                           ;data.c: 577: xin.tAdcValue=0;
 29342  008500  0E00               	movlw	0
 29343  008502  0100               	movlb	0	; () banked
 29344  008504  6FA4               	movwf	(cal_press@xin+7)& (0+255),b
 29345  008506  0E00               	movlw	0
 29346  008508  6FA3               	movwf	(cal_press@xin+6)& (0+255),b
 29347                           
 29348                           ; BSR set to: 0
 29349                           ;data.c: 578: st_prCalibRowDef* tabrow;
 29350                           ;data.c: 579: tabrow= &prCalibTabDef.prCalibRow[0];
 29351  00850A  0E04               	movlw	low (_prCalibTabDef+4)
 29352  00850C  0100               	movlb	0	; () banked
 29353  00850E  6F9B               	movwf	cal_press@tabrow& (0+255),b
 29354  008510  0E04               	movlw	high (_prCalibTabDef+4)
 29355  008512  0100               	movlb	0	; () banked
 29356  008514  6F9C               	movwf	(cal_press@tabrow+1)& (0+255),b
 29357                           
 29358                           ; BSR set to: 0
 29359                           ;data.c: 580: ret=m_interp1_cal_p_v(tabrow,&xin,(0));
 29360  008516  C09B  F07A         	movff	cal_press@tabrow,m_interp1_cal_p_v@tabrow
 29361  00851A  C09C  F07B         	movff	cal_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 29362  00851E  0E9D               	movlw	low cal_press@xin
 29363  008520  0100               	movlb	0	; () banked
 29364  008522  6F7C               	movwf	m_interp1_cal_p_v@xin& (0+255),b
 29365  008524  0E00               	movlw	high cal_press@xin
 29366  008526  0100               	movlb	0	; () banked
 29367  008528  6F7D               	movwf	(m_interp1_cal_p_v@xin+1)& (0+255),b
 29368  00852A  0E00               	movlw	0
 29369  00852C  0100               	movlb	0	; () banked
 29370  00852E  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 29371  008530  0E00               	movlw	0
 29372  008532  0100               	movlb	0	; () banked
 29373  008534  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 29374  008536  ECC2  F003         	call	_m_interp1_cal_p_v	;wreg free
 29375  00853A  0100               	movlb	0	; () banked
 29376  00853C  6F9A               	movwf	cal_press@ret& (0+255),b
 29377                           
 29378                           ; BSR set to: 0
 29379                           ;data.c: 581: rtPressure=xin.pValue;
 29380  00853E  C09D  F14A         	movff	cal_press@xin,_rtPressure	;volatile
 29381  008542  C09E  F14B         	movff	cal_press@xin+1,_rtPressure+1	;volatile
 29382  008546  C09F  F14C         	movff	cal_press@xin+2,_rtPressure+2	;volatile
 29383  00854A  C0A0  F14D         	movff	cal_press@xin+3,_rtPressure+3	;volatile
 29384  00854E  0012               	return	
 29385  008550                     __end_of_cal_press:
 29386                           	opt stack 0
 29387                           tosu	equ	0xFFF
 29388                           tosh	equ	0xFFE
 29389                           tosl	equ	0xFFD
 29390                           pclath	equ	0xFFA
 29391                           tblptru	equ	0xFF8
 29392                           tblptrh	equ	0xFF7
 29393                           tblptrl	equ	0xFF6
 29394                           tablat	equ	0xFF5
 29395                           prodh	equ	0xFF4
 29396                           prodl	equ	0xFF3
 29397                           intcon	equ	0xFF2
 29398                           indf0	equ	0xFEF
 29399                           postinc0	equ	0xFEE
 29400                           fsr0h	equ	0xFEA
 29401                           fsr0l	equ	0xFE9
 29402                           wreg	equ	0xFE8
 29403                           indf1	equ	0xFE7
 29404                           postinc1	equ	0xFE6
 29405                           postdec1	equ	0xFE5
 29406                           plusw1	equ	0xFE3
 29407                           fsr1h	equ	0xFE2
 29408                           fsr1l	equ	0xFE1
 29409                           indf2	equ	0xFDF
 29410                           postinc2	equ	0xFDE
 29411                           postdec2	equ	0xFDD
 29412                           plusw2	equ	0xFDB
 29413                           fsr2h	equ	0xFDA
 29414                           fsr2l	equ	0xFD9
 29415                           status	equ	0xFD8
 29416                           
 29417 ;; *************** function _sample_call_cal_in_soc *****************
 29418 ;; Defined at:
 29419 ;;		line 139 in file "src/api/sample.c"
 29420 ;; Parameters:    Size  Location     Type
 29421 ;;		None
 29422 ;; Auto vars:     Size  Location     Type
 29423 ;;		None
 29424 ;; Return value:  Size  Location     Type
 29425 ;;                  1    wreg      unsigned char 
 29426 ;; Registers used:
 29427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29428 ;; Tracked objects:
 29429 ;;		On entry : 0/0
 29430 ;;		On exit  : 0/0
 29431 ;;		Unchanged: 0/0
 29432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29437 ;;Total ram usage:        0 bytes
 29438 ;; Hardware stack levels used:    1
 29439 ;; Hardware stack levels required when called:    5
 29440 ;; This function calls:
 29441 ;;		_cal_additional_pressute
 29442 ;; This function is called by:
 29443 ;;		_sample_call_in_ticker
 29444 ;;		_sample_function_enable_fi_in_rtc
 29445 ;; This function uses a non-reentrant model
 29446 ;;
 29447                           
 29448                           	psect	text164
 29449  00A0DA                     __ptext164:
 29450                           	opt stack 0
 29451  00A0DA                     _sample_call_cal_in_soc:
 29452                           	opt stack 23
 29453                           
 29454                           ;sample.c: 141: if(!inSocAdcSampleFinish)return 0;
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;incstack = 0
 29458  00A0DA  0100               	movlb	0	; () banked
 29459  00A0DC  51F2               	movf	_inSocAdcSampleFinish& (0+255),w,b
 29460  00A0DE  A4D8               	btfss	status,2,c
 29461  00A0E0  D002               	goto	l11634
 29462                           
 29463                           ; BSR set to: 0
 29464  00A0E2  0E00               	movlw	0
 29465                           
 29466                           ; BSR set to: 0
 29467  00A0E4  0012               	return	
 29468  00A0E6                     l11634:
 29469                           
 29470                           ; BSR set to: 0
 29471                           ;sample.c: 142: cal_additional_pressute(0);
 29472  00A0E6  0E00               	movlw	0
 29473  00A0E8  ECE9  F050         	call	_cal_additional_pressute
 29474                           
 29475                           ;sample.c: 143: cal_additional_pressute(1);
 29476  00A0EC  0E01               	movlw	1
 29477  00A0EE  ECE9  F050         	call	_cal_additional_pressute
 29478                           
 29479                           ;sample.c: 144: inSocAdcSampleFinish=0;
 29480  00A0F2  0E00               	movlw	0
 29481  00A0F4  0100               	movlb	0	; () banked
 29482  00A0F6  6FF2               	movwf	_inSocAdcSampleFinish& (0+255),b
 29483                           
 29484                           ; BSR set to: 0
 29485                           ;sample.c: 145: return 1;
 29486  00A0F8  0E01               	movlw	1
 29487  00A0FA  0012               	return	
 29488  00A0FC                     __end_of_sample_call_cal_in_soc:
 29489                           	opt stack 0
 29490                           tosu	equ	0xFFF
 29491                           tosh	equ	0xFFE
 29492                           tosl	equ	0xFFD
 29493                           pclath	equ	0xFFA
 29494                           tblptru	equ	0xFF8
 29495                           tblptrh	equ	0xFF7
 29496                           tblptrl	equ	0xFF6
 29497                           tablat	equ	0xFF5
 29498                           prodh	equ	0xFF4
 29499                           prodl	equ	0xFF3
 29500                           intcon	equ	0xFF2
 29501                           indf0	equ	0xFEF
 29502                           postinc0	equ	0xFEE
 29503                           fsr0h	equ	0xFEA
 29504                           fsr0l	equ	0xFE9
 29505                           wreg	equ	0xFE8
 29506                           indf1	equ	0xFE7
 29507                           postinc1	equ	0xFE6
 29508                           postdec1	equ	0xFE5
 29509                           plusw1	equ	0xFE3
 29510                           fsr1h	equ	0xFE2
 29511                           fsr1l	equ	0xFE1
 29512                           indf2	equ	0xFDF
 29513                           postinc2	equ	0xFDE
 29514                           postdec2	equ	0xFDD
 29515                           plusw2	equ	0xFDB
 29516                           fsr2h	equ	0xFDA
 29517                           fsr2l	equ	0xFD9
 29518                           status	equ	0xFD8
 29519                           
 29520 ;; *************** function _cal_additional_pressute *****************
 29521 ;; Defined at:
 29522 ;;		line 641 in file "src/api/data.c"
 29523 ;; Parameters:    Size  Location     Type
 29524 ;;  index           1    wreg     unsigned char 
 29525 ;; Auto vars:     Size  Location     Type
 29526 ;;  index           1   31[COMRAM] unsigned char 
 29527 ;; Return value:  Size  Location     Type
 29528 ;;                  1    wreg      void 
 29529 ;; Registers used:
 29530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29531 ;; Tracked objects:
 29532 ;;		On entry : 0/0
 29533 ;;		On exit  : 0/0
 29534 ;;		Unchanged: 0/0
 29535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29540 ;;Total ram usage:        1 bytes
 29541 ;; Hardware stack levels used:    1
 29542 ;; Hardware stack levels required when called:    4
 29543 ;; This function calls:
 29544 ;;		Nothing
 29545 ;; This function is called by:
 29546 ;;		_sample_call_cal_in_soc
 29547 ;; This function uses a non-reentrant model
 29548 ;;
 29549                           
 29550                           	psect	text165
 29551  00A1D2                     __ptext165:
 29552                           	opt stack 0
 29553  00A1D2                     _cal_additional_pressute:
 29554                           	opt stack 23
 29555                           
 29556                           ; BSR set to: 0
 29557                           ;incstack = 0
 29558                           ;cal_additional_pressute@index stored from wreg
 29559  00A1D2  6E20               	movwf	cal_additional_pressute@index,c
 29560                           
 29561                           ;data.c: 656: rtExPressure[index]=0;
 29562  00A1D4  5020               	movf	cal_additional_pressute@index,w,c
 29563  00A1D6  0D04               	mullw	4
 29564  00A1D8  0E2B               	movlw	low _rtExPressure
 29565  00A1DA  24F3               	addwf	prodl,w,c
 29566  00A1DC  6ED9               	movwf	fsr2l,c
 29567  00A1DE  0E01               	movlw	high _rtExPressure
 29568  00A1E0  20F4               	addwfc	prodh,w,c
 29569  00A1E2  6EDA               	movwf	fsr2h,c
 29570  00A1E4  6ADE               	clrf	postinc2,c
 29571  00A1E6  6ADE               	clrf	postinc2,c
 29572  00A1E8  6ADE               	clrf	postinc2,c
 29573  00A1EA  6ADD               	clrf	postdec2,c
 29574  00A1EC  0012               	return		;funcret
 29575  00A1EE                     __end_of_cal_additional_pressute:
 29576                           	opt stack 0
 29577                           tosu	equ	0xFFF
 29578                           tosh	equ	0xFFE
 29579                           tosl	equ	0xFFD
 29580                           pclath	equ	0xFFA
 29581                           tblptru	equ	0xFF8
 29582                           tblptrh	equ	0xFF7
 29583                           tblptrl	equ	0xFF6
 29584                           tablat	equ	0xFF5
 29585                           prodh	equ	0xFF4
 29586                           prodl	equ	0xFF3
 29587                           intcon	equ	0xFF2
 29588                           indf0	equ	0xFEF
 29589                           postinc0	equ	0xFEE
 29590                           fsr0h	equ	0xFEA
 29591                           fsr0l	equ	0xFE9
 29592                           wreg	equ	0xFE8
 29593                           indf1	equ	0xFE7
 29594                           postinc1	equ	0xFE6
 29595                           postdec1	equ	0xFE5
 29596                           plusw1	equ	0xFE3
 29597                           fsr1h	equ	0xFE2
 29598                           fsr1l	equ	0xFE1
 29599                           indf2	equ	0xFDF
 29600                           postinc2	equ	0xFDE
 29601                           postdec2	equ	0xFDD
 29602                           plusw2	equ	0xFDB
 29603                           fsr2h	equ	0xFDA
 29604                           fsr2l	equ	0xFD9
 29605                           status	equ	0xFD8
 29606                           
 29607 ;; *************** function _sample_call_cal_diff_pr *****************
 29608 ;; Defined at:
 29609 ;;		line 123 in file "src/api/sample.c"
 29610 ;; Parameters:    Size  Location     Type
 29611 ;;		None
 29612 ;; Auto vars:     Size  Location     Type
 29613 ;;		None
 29614 ;; Return value:  Size  Location     Type
 29615 ;;                  1    wreg      unsigned char 
 29616 ;; Registers used:
 29617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29618 ;; Tracked objects:
 29619 ;;		On entry : 0/0
 29620 ;;		On exit  : 0/0
 29621 ;;		Unchanged: 0/0
 29622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29627 ;;Total ram usage:        0 bytes
 29628 ;; Hardware stack levels used:    1
 29629 ;; Hardware stack levels required when called:    8
 29630 ;; This function calls:
 29631 ;;		_cal_diff_press
 29632 ;;		_cal_pt100_temperature_in
 29633 ;; This function is called by:
 29634 ;;		_sample_call_in_ticker
 29635 ;;		_sample_function_enable_fi_in_rtc
 29636 ;; This function uses a non-reentrant model
 29637 ;;
 29638                           
 29639                           	psect	text166
 29640  00A17C                     __ptext166:
 29641                           	opt stack 0
 29642  00A17C                     _sample_call_cal_diff_pr:
 29643                           	opt stack 20
 29644                           
 29645                           ;sample.c: 125: if(!diffPrChipSampleFinish)return 0;
 29646                           
 29647                           ;incstack = 0
 29648  00A17C  0100               	movlb	0	; () banked
 29649  00A17E  51F8               	movf	_diffPrChipSampleFinish& (0+255),w,b
 29650  00A180  A4D8               	btfss	status,2,c
 29651  00A182  D002               	goto	l16508
 29652                           
 29653                           ; BSR set to: 0
 29654  00A184  0E00               	movlw	0
 29655                           
 29656                           ; BSR set to: 0
 29657  00A186  0012               	return	
 29658  00A188                     l16508:
 29659                           
 29660                           ; BSR set to: 0
 29661                           ;sample.c: 126: cal_diff_press();
 29662  00A188  EC9A  F02C         	call	_cal_diff_press	;wreg free
 29663                           
 29664                           ;sample.c: 127: cal_pt100_temperature_in();
 29665  00A18C  EC80  F051         	call	_cal_pt100_temperature_in	;wreg free
 29666                           
 29667                           ;sample.c: 128: diffPrChipSampleFinish=0;
 29668  00A190  0E00               	movlw	0
 29669  00A192  0100               	movlb	0	; () banked
 29670  00A194  6FF8               	movwf	_diffPrChipSampleFinish& (0+255),b
 29671                           
 29672                           ; BSR set to: 0
 29673                           ;sample.c: 129: return 1;
 29674  00A196  0E01               	movlw	1
 29675  00A198  0012               	return	
 29676  00A19A                     __end_of_sample_call_cal_diff_pr:
 29677                           	opt stack 0
 29678                           tosu	equ	0xFFF
 29679                           tosh	equ	0xFFE
 29680                           tosl	equ	0xFFD
 29681                           pclath	equ	0xFFA
 29682                           tblptru	equ	0xFF8
 29683                           tblptrh	equ	0xFF7
 29684                           tblptrl	equ	0xFF6
 29685                           tablat	equ	0xFF5
 29686                           prodh	equ	0xFF4
 29687                           prodl	equ	0xFF3
 29688                           intcon	equ	0xFF2
 29689                           indf0	equ	0xFEF
 29690                           postinc0	equ	0xFEE
 29691                           fsr0h	equ	0xFEA
 29692                           fsr0l	equ	0xFE9
 29693                           wreg	equ	0xFE8
 29694                           indf1	equ	0xFE7
 29695                           postinc1	equ	0xFE6
 29696                           postdec1	equ	0xFE5
 29697                           plusw1	equ	0xFE3
 29698                           fsr1h	equ	0xFE2
 29699                           fsr1l	equ	0xFE1
 29700                           indf2	equ	0xFDF
 29701                           postinc2	equ	0xFDE
 29702                           postdec2	equ	0xFDD
 29703                           plusw2	equ	0xFDB
 29704                           fsr2h	equ	0xFDA
 29705                           fsr2l	equ	0xFD9
 29706                           status	equ	0xFD8
 29707                           
 29708 ;; *************** function _cal_pt100_temperature_in *****************
 29709 ;; Defined at:
 29710 ;;		line 593 in file "src/api/data.c"
 29711 ;; Parameters:    Size  Location     Type
 29712 ;;		None
 29713 ;; Auto vars:     Size  Location     Type
 29714 ;;		None
 29715 ;; Return value:  Size  Location     Type
 29716 ;;                  1    wreg      void 
 29717 ;; Registers used:
 29718 ;;		wreg, status,2
 29719 ;; Tracked objects:
 29720 ;;		On entry : 0/0
 29721 ;;		On exit  : 0/0
 29722 ;;		Unchanged: 0/0
 29723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29728 ;;Total ram usage:        0 bytes
 29729 ;; Hardware stack levels used:    1
 29730 ;; Hardware stack levels required when called:    4
 29731 ;; This function calls:
 29732 ;;		Nothing
 29733 ;; This function is called by:
 29734 ;;		_sample_call_cal_diff_pr
 29735 ;; This function uses a non-reentrant model
 29736 ;;
 29737                           
 29738                           	psect	text167
 29739  00A300                     __ptext167:
 29740                           	opt stack 0
 29741  00A300                     _cal_pt100_temperature_in:
 29742                           	opt stack 23
 29743                           
 29744                           ;data.c: 614: rtTemperatureIn= 0;
 29745                           
 29746                           ; BSR set to: 0
 29747                           ;incstack = 0
 29748  00A300  0E00               	movlw	0
 29749  00A302  0101               	movlb	1	; () banked
 29750  00A304  6F4E               	movwf	_rtTemperatureIn& (0+255),b	;volatile
 29751  00A306  0E00               	movlw	0
 29752  00A308  6F4F               	movwf	(_rtTemperatureIn+1)& (0+255),b	;volatile
 29753  00A30A  0E00               	movlw	0
 29754  00A30C  6F50               	movwf	(_rtTemperatureIn+2)& (0+255),b	;volatile
 29755  00A30E  0E00               	movlw	0
 29756  00A310  6F51               	movwf	(_rtTemperatureIn+3)& (0+255),b	;volatile
 29757                           
 29758                           ; BSR set to: 1
 29759  00A312  0012               	return		;funcret
 29760  00A314                     __end_of_cal_pt100_temperature_in:
 29761                           	opt stack 0
 29762                           tosu	equ	0xFFF
 29763                           tosh	equ	0xFFE
 29764                           tosl	equ	0xFFD
 29765                           pclath	equ	0xFFA
 29766                           tblptru	equ	0xFF8
 29767                           tblptrh	equ	0xFF7
 29768                           tblptrl	equ	0xFF6
 29769                           tablat	equ	0xFF5
 29770                           prodh	equ	0xFF4
 29771                           prodl	equ	0xFF3
 29772                           intcon	equ	0xFF2
 29773                           indf0	equ	0xFEF
 29774                           postinc0	equ	0xFEE
 29775                           fsr0h	equ	0xFEA
 29776                           fsr0l	equ	0xFE9
 29777                           wreg	equ	0xFE8
 29778                           indf1	equ	0xFE7
 29779                           postinc1	equ	0xFE6
 29780                           postdec1	equ	0xFE5
 29781                           plusw1	equ	0xFE3
 29782                           fsr1h	equ	0xFE2
 29783                           fsr1l	equ	0xFE1
 29784                           indf2	equ	0xFDF
 29785                           postinc2	equ	0xFDE
 29786                           postdec2	equ	0xFDD
 29787                           plusw2	equ	0xFDB
 29788                           fsr2h	equ	0xFDA
 29789                           fsr2l	equ	0xFD9
 29790                           status	equ	0xFD8
 29791                           
 29792 ;; *************** function _cal_diff_press *****************
 29793 ;; Defined at:
 29794 ;;		line 535 in file "src/api/data.c"
 29795 ;; Parameters:    Size  Location     Type
 29796 ;;		None
 29797 ;; Auto vars:     Size  Location     Type
 29798 ;;  xin             2   26[BANK3 ] PTR struct .
 29799 ;;		 -> x_prDiffData(8), 
 29800 ;;  tabrow          2   24[BANK3 ] PTR struct .
 29801 ;;		 -> diff_prCalibTabDef.prCalibRow(156), diff_prCalibTabDef(162), 
 29802 ;;  i               1   28[BANK3 ] unsigned char 
 29803 ;; Return value:  Size  Location     Type
 29804 ;;                  1    wreg      unsigned char 
 29805 ;; Registers used:
 29806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29807 ;; Tracked objects:
 29808 ;;		On entry : 0/0
 29809 ;;		On exit  : 0/0
 29810 ;;		Unchanged: 0/0
 29811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29813 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29815 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29816 ;;Total ram usage:        5 bytes
 29817 ;; Hardware stack levels used:    1
 29818 ;; Hardware stack levels required when called:    7
 29819 ;; This function calls:
 29820 ;;		_cal_diff_hight_level
 29821 ;;		_cal_diff_hight_to_vol_h
 29822 ;;		_cal_diff_hight_to_vol_v
 29823 ;;		_cal_diff_p_to_h
 29824 ;;		_m_interp1_cal_p_t
 29825 ;;		_m_interp1_cal_p_v
 29826 ;;		_m_mem_set
 29827 ;; This function is called by:
 29828 ;;		_sample_call_cal_diff_pr
 29829 ;; This function uses a non-reentrant model
 29830 ;;
 29831                           
 29832                           	psect	text168
 29833  005934                     __ptext168:
 29834                           	opt stack 0
 29835  005934                     _cal_diff_press:
 29836                           	opt stack 20
 29837                           
 29838                           ;data.c: 537: st_prData* xin= &x_prDiffData;
 29839                           
 29840                           ; BSR set to: 1
 29841                           ;incstack = 0
 29842  005934  0EE8               	movlw	low _x_prDiffData
 29843  005936  0103               	movlb	3	; () banked
 29844  005938  6FE4               	movwf	cal_diff_press@xin& (0+255),b
 29845  00593A  0E01               	movlw	high _x_prDiffData
 29846  00593C  0103               	movlb	3	; () banked
 29847  00593E  6FE5               	movwf	(cal_diff_press@xin+1)& (0+255),b
 29848                           
 29849                           ; BSR set to: 3
 29850                           ;data.c: 539: m_mem_set((uint8_t*)tmpx,0,sizeof(tmpx));
 29851  005940  0EB2               	movlw	low _tmpx
 29852  005942  0100               	movlb	0	; () banked
 29853  005944  6F60               	movwf	m_mem_set@buf& (0+255),b
 29854  005946  0E03               	movlw	high _tmpx
 29855  005948  0100               	movlb	0	; () banked
 29856  00594A  6F61               	movwf	(m_mem_set@buf+1)& (0+255),b
 29857  00594C  0E00               	movlw	0
 29858  00594E  0100               	movlb	0	; () banked
 29859  005950  6F62               	movwf	m_mem_set@x& (0+255),b
 29860  005952  0E18               	movlw	24
 29861  005954  0100               	movlb	0	; () banked
 29862  005956  6F63               	movwf	m_mem_set@len& (0+255),b
 29863  005958  EC7E  F050         	call	_m_mem_set	;wreg free
 29864                           
 29865                           ;data.c: 540: uint8_t i=0;
 29866  00595C  0E00               	movlw	0
 29867  00595E  0103               	movlb	3	; () banked
 29868  005960  6FE6               	movwf	cal_diff_press@i& (0+255),b
 29869                           
 29870                           ; BSR set to: 3
 29871                           ;data.c: 541: st_prCalibRowDef* tabrow;
 29872                           ;data.c: 542: for(i=0;i<diff_prCalibTabDef.rowCount;i++){
 29873  005962  0E00               	movlw	0
 29874  005964  0103               	movlb	3	; () banked
 29875  005966  6FE6               	movwf	cal_diff_press@i& (0+255),b
 29876  005968  D022               	goto	l15034
 29877  00596A                     l15028:
 29878                           
 29879                           ; BSR set to: 3
 29880                           ;data.c: 543: tabrow = &(diff_prCalibTabDef.prCalibRow[i]);
 29881  00596A  0103               	movlb	3	; () banked
 29882  00596C  51E6               	movf	cal_diff_press@i& (0+255),w,b
 29883  00596E  0D34               	mullw	52
 29884  005970  0E14               	movlw	low (_diff_prCalibTabDef+4)
 29885  005972  24F3               	addwf	prodl,w,c
 29886  005974  0103               	movlb	3	; () banked
 29887  005976  6FE2               	movwf	cal_diff_press@tabrow& (0+255),b
 29888  005978  0E03               	movlw	high (_diff_prCalibTabDef+4)
 29889  00597A  20F4               	addwfc	prodh,w,c
 29890  00597C  0103               	movlb	3	; () banked
 29891  00597E  6FE3               	movwf	(cal_diff_press@tabrow+1)& (0+255),b
 29892                           
 29893                           ; BSR set to: 3
 29894                           ;data.c: 544: m_interp1_cal_p_v(tabrow,xin,&tmpx[i]);
 29895  005980  C3E2  F07A         	movff	cal_diff_press@tabrow,m_interp1_cal_p_v@tabrow
 29896  005984  C3E3  F07B         	movff	cal_diff_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 29897  005988  C3E4  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_v@xin
 29898  00598C  C3E5  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_v@xin+1
 29899  005990  0103               	movlb	3	; () banked
 29900  005992  51E6               	movf	cal_diff_press@i& (0+255),w,b
 29901  005994  0D08               	mullw	8
 29902  005996  0EB2               	movlw	low _tmpx
 29903  005998  24F3               	addwf	prodl,w,c
 29904  00599A  0100               	movlb	0	; () banked
 29905  00599C  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 29906  00599E  0E03               	movlw	high _tmpx
 29907  0059A0  20F4               	addwfc	prodh,w,c
 29908  0059A2  0100               	movlb	0	; () banked
 29909  0059A4  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 29910  0059A6  ECC2  F003         	call	_m_interp1_cal_p_v	;wreg free
 29911  0059AA  0103               	movlb	3	; () banked
 29912  0059AC  2BE6               	incf	cal_diff_press@i& (0+255),f,b
 29913  0059AE                     l15034:
 29914                           
 29915                           ; BSR set to: 3
 29916  0059AE  0103               	movlb	3	; () banked
 29917  0059B0  5110               	movf	_diff_prCalibTabDef& (0+255),w,b
 29918  0059B2  0103               	movlb	3	; () banked
 29919  0059B4  5DE6               	subwf	cal_diff_press@i& (0+255),w,b
 29920  0059B6  A0D8               	btfss	status,0,c
 29921  0059B8  D7D8               	goto	l15028
 29922                           
 29923                           ; BSR set to: 3
 29924                           ;data.c: 545: }
 29925                           ;data.c: 546: m_interp1_cal_p_t(&tmpx[0],xin,i);
 29926                           
 29927                           ; BSR set to: 3
 29928  0059BA  0EB2               	movlw	low _tmpx
 29929  0059BC  0100               	movlb	0	; () banked
 29930  0059BE  6F7A               	movwf	m_interp1_cal_p_t@tmpx& (0+255),b
 29931  0059C0  0E03               	movlw	high _tmpx
 29932  0059C2  0100               	movlb	0	; () banked
 29933  0059C4  6F7B               	movwf	(m_interp1_cal_p_t@tmpx+1)& (0+255),b
 29934  0059C6  C3E4  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_t@xin
 29935  0059CA  C3E5  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_t@xin+1
 29936  0059CE  C3E6  F07E         	movff	cal_diff_press@i,m_interp1_cal_p_t@tmpxLen
 29937  0059D2  EC5B  F00D         	call	_m_interp1_cal_p_t	;wreg free
 29938                           
 29939                           ;data.c: 548: rtDiffPressure=xin->pValue;
 29940  0059D6  C3E4  FFD9         	movff	cal_diff_press@xin,fsr2l
 29941  0059DA  C3E5  FFDA         	movff	cal_diff_press@xin+1,fsr2h
 29942  0059DE  CFDE F15A          	movff	postinc2,_rtDiffPressure	;volatile
 29943  0059E2  CFDE F15B          	movff	postinc2,_rtDiffPressure+1	;volatile
 29944  0059E6  CFDE F15C          	movff	postinc2,_rtDiffPressure+2	;volatile
 29945  0059EA  CFDE F15D          	movff	postinc2,_rtDiffPressure+3	;volatile
 29946                           
 29947                           ;data.c: 550: cal_diff_p_to_h(xin);
 29948  0059EE  C3E4  F0C2         	movff	cal_diff_press@xin,cal_diff_p_to_h@xin
 29949  0059F2  C3E5  F0C3         	movff	cal_diff_press@xin+1,cal_diff_p_to_h@xin+1
 29950  0059F6  EC4D  F02F         	call	_cal_diff_p_to_h	;wreg free
 29951                           
 29952                           ;data.c: 551: rtLevel=cal_diff_hight_level();
 29953  0059FA  EC4F  F018         	call	_cal_diff_hight_level	;wreg free
 29954  0059FE  0100               	movlb	0	; () banked
 29955  005A00  6FFE               	movwf	_rtLevel& (0+255),b	;volatile
 29956                           
 29957                           ; BSR set to: 0
 29958                           ;data.c: 552: if(stSysData.pos==HOTIZONTAL){
 29959  005A02  0102               	movlb	2	; () banked
 29960  005A04  5104               	movf	(_stSysData+4)& (0+255),w,b
 29961  005A06  A4D8               	btfss	status,2,c
 29962  005A08  D013               	goto	l15048
 29963                           
 29964                           ; BSR set to: 2
 29965                           ;data.c: 553: rtVolume=cal_diff_hight_to_vol_h(rtHight);
 29966  005A0A  C0E8  F3CA         	movff	_rtHight,cal_diff_hight_to_vol_h@h	;volatile
 29967  005A0E  C0E9  F3CB         	movff	_rtHight+1,cal_diff_hight_to_vol_h@h+1	;volatile
 29968  005A12  C0EA  F3CC         	movff	_rtHight+2,cal_diff_hight_to_vol_h@h+2	;volatile
 29969  005A16  C0EB  F3CD         	movff	_rtHight+3,cal_diff_hight_to_vol_h@h+3	;volatile
 29970  005A1A  ECAC  F019         	call	_cal_diff_hight_to_vol_h	;wreg free
 29971  005A1E  C3CA  F152         	movff	?_cal_diff_hight_to_vol_h,_rtVolume	;volatile
 29972  005A22  C3CB  F153         	movff	?_cal_diff_hight_to_vol_h+1,_rtVolume+1	;volatile
 29973  005A26  C3CC  F154         	movff	?_cal_diff_hight_to_vol_h+2,_rtVolume+2	;volatile
 29974  005A2A  C3CD  F155         	movff	?_cal_diff_hight_to_vol_h+3,_rtVolume+3	;volatile
 29975                           
 29976                           ;data.c: 554: }else{
 29977  005A2E  0012               	return	
 29978  005A30                     l15048:
 29979                           
 29980                           ;data.c: 555: rtVolume=cal_diff_hight_to_vol_v(rtHight);
 29981  005A30  C0E8  F3CA         	movff	_rtHight,cal_diff_hight_to_vol_v@h	;volatile
 29982  005A34  C0E9  F3CB         	movff	_rtHight+1,cal_diff_hight_to_vol_v@h+1	;volatile
 29983  005A38  C0EA  F3CC         	movff	_rtHight+2,cal_diff_hight_to_vol_v@h+2	;volatile
 29984  005A3C  C0EB  F3CD         	movff	_rtHight+3,cal_diff_hight_to_vol_v@h+3	;volatile
 29985  005A40  EC6E  F000         	call	_cal_diff_hight_to_vol_v	;wreg free
 29986  005A44  C3CA  F152         	movff	?_cal_diff_hight_to_vol_v,_rtVolume	;volatile
 29987  005A48  C3CB  F153         	movff	?_cal_diff_hight_to_vol_v+1,_rtVolume+1	;volatile
 29988  005A4C  C3CC  F154         	movff	?_cal_diff_hight_to_vol_v+2,_rtVolume+2	;volatile
 29989  005A50  C3CD  F155         	movff	?_cal_diff_hight_to_vol_v+3,_rtVolume+3	;volatile
 29990  005A54  0012               	return	
 29991  005A56                     __end_of_cal_diff_press:
 29992                           	opt stack 0
 29993                           tosu	equ	0xFFF
 29994                           tosh	equ	0xFFE
 29995                           tosl	equ	0xFFD
 29996                           pclath	equ	0xFFA
 29997                           tblptru	equ	0xFF8
 29998                           tblptrh	equ	0xFF7
 29999                           tblptrl	equ	0xFF6
 30000                           tablat	equ	0xFF5
 30001                           prodh	equ	0xFF4
 30002                           prodl	equ	0xFF3
 30003                           intcon	equ	0xFF2
 30004                           indf0	equ	0xFEF
 30005                           postinc0	equ	0xFEE
 30006                           fsr0h	equ	0xFEA
 30007                           fsr0l	equ	0xFE9
 30008                           wreg	equ	0xFE8
 30009                           indf1	equ	0xFE7
 30010                           postinc1	equ	0xFE6
 30011                           postdec1	equ	0xFE5
 30012                           plusw1	equ	0xFE3
 30013                           fsr1h	equ	0xFE2
 30014                           fsr1l	equ	0xFE1
 30015                           indf2	equ	0xFDF
 30016                           postinc2	equ	0xFDE
 30017                           postdec2	equ	0xFDD
 30018                           plusw2	equ	0xFDB
 30019                           fsr2h	equ	0xFDA
 30020                           fsr2l	equ	0xFD9
 30021                           status	equ	0xFD8
 30022                           
 30023 ;; *************** function _m_mem_set *****************
 30024 ;; Defined at:
 30025 ;;		line 32 in file "src/depend/m_string.c"
 30026 ;; Parameters:    Size  Location     Type
 30027 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 30028 ;;		 -> tmpx(24), 
 30029 ;;  x               1    2[BANK0 ] unsigned char 
 30030 ;;  len             1    3[BANK0 ] unsigned char 
 30031 ;; Auto vars:     Size  Location     Type
 30032 ;;		None
 30033 ;; Return value:  Size  Location     Type
 30034 ;;                  1    wreg      void 
 30035 ;; Registers used:
 30036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30037 ;; Tracked objects:
 30038 ;;		On entry : 0/0
 30039 ;;		On exit  : 0/0
 30040 ;;		Unchanged: 0/0
 30041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30042 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30045 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30046 ;;Total ram usage:        4 bytes
 30047 ;; Hardware stack levels used:    1
 30048 ;; Hardware stack levels required when called:    4
 30049 ;; This function calls:
 30050 ;;		Nothing
 30051 ;; This function is called by:
 30052 ;;		_cal_diff_press
 30053 ;; This function uses a non-reentrant model
 30054 ;;
 30055                           
 30056                           	psect	text169
 30057  00A0FC                     __ptext169:
 30058                           	opt stack 0
 30059  00A0FC                     _m_mem_set:
 30060                           	opt stack 22
 30061                           
 30062                           ;m_string.c: 34: while(len--)
 30063                           
 30064                           ;incstack = 0
 30065  00A0FC  D009               	goto	l14628
 30066  00A0FE                     l14624:
 30067                           
 30068                           ;m_string.c: 35: {
 30069                           ;m_string.c: 36: *buf++=x;
 30070  00A0FE  C060  FFD9         	movff	m_mem_set@buf,fsr2l
 30071  00A102  C061  FFDA         	movff	m_mem_set@buf+1,fsr2h
 30072  00A106  C062  FFDF         	movff	m_mem_set@x,indf2
 30073  00A10A  0100               	movlb	0	; () banked
 30074  00A10C  4B60               	infsnz	m_mem_set@buf& (0+255),f,b
 30075  00A10E  2B61               	incf	(m_mem_set@buf+1)& (0+255),f,b
 30076  00A110                     l14628:
 30077  00A110  0100               	movlb	0	; () banked
 30078  00A112  0763               	decf	m_mem_set@len& (0+255),f,b
 30079  00A114  0100               	movlb	0	; () banked
 30080  00A116  2963               	incf	m_mem_set@len& (0+255),w,b
 30081  00A118  B4D8               	btfsc	status,2,c
 30082  00A11A  0012               	return	
 30083  00A11C  D7F0               	goto	l14624
 30084  00A11E                     __end_of_m_mem_set:
 30085                           	opt stack 0
 30086                           tosu	equ	0xFFF
 30087                           tosh	equ	0xFFE
 30088                           tosl	equ	0xFFD
 30089                           pclath	equ	0xFFA
 30090                           tblptru	equ	0xFF8
 30091                           tblptrh	equ	0xFF7
 30092                           tblptrl	equ	0xFF6
 30093                           tablat	equ	0xFF5
 30094                           prodh	equ	0xFF4
 30095                           prodl	equ	0xFF3
 30096                           intcon	equ	0xFF2
 30097                           indf0	equ	0xFEF
 30098                           postinc0	equ	0xFEE
 30099                           fsr0h	equ	0xFEA
 30100                           fsr0l	equ	0xFE9
 30101                           wreg	equ	0xFE8
 30102                           indf1	equ	0xFE7
 30103                           postinc1	equ	0xFE6
 30104                           postdec1	equ	0xFE5
 30105                           plusw1	equ	0xFE3
 30106                           fsr1h	equ	0xFE2
 30107                           fsr1l	equ	0xFE1
 30108                           indf2	equ	0xFDF
 30109                           postinc2	equ	0xFDE
 30110                           postdec2	equ	0xFDD
 30111                           plusw2	equ	0xFDB
 30112                           fsr2h	equ	0xFDA
 30113                           fsr2l	equ	0xFD9
 30114                           status	equ	0xFD8
 30115                           
 30116 ;; *************** function _m_interp1_cal_p_v *****************
 30117 ;; Defined at:
 30118 ;;		line 339 in file "src/api/data.c"
 30119 ;; Parameters:    Size  Location     Type
 30120 ;;  tabrow          2   26[BANK0 ] PTR struct .
 30121 ;;		 -> prCalibTabDef.prCalibRow(156), diff_prCalibTabDef.prCalibRow(156), prCalibTabDef(162), diff_prCalibTabDef(162), 
 30122 ;;  xin             2   28[BANK0 ] PTR struct .
 30123 ;;		 -> cal_press@xin(8), x_prDiffData(8), 
 30124 ;;  xout            2   30[BANK0 ] PTR struct .
 30125 ;;		 -> tmpx(24), NULL(0), 
 30126 ;; Auto vars:     Size  Location     Type
 30127 ;;  pr              4   53[BANK0 ] long 
 30128 ;;  x               4   47[BANK0 ] long 
 30129 ;;  y               4   43[BANK0 ] long 
 30130 ;;  t16             2   51[BANK0 ] int 
 30131 ;;  i               1   57[BANK0 ] unsigned char 
 30132 ;; Return value:  Size  Location     Type
 30133 ;;                  1    wreg      unsigned char 
 30134 ;; Registers used:
 30135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30136 ;; Tracked objects:
 30137 ;;		On entry : 0/0
 30138 ;;		On exit  : 0/0
 30139 ;;		Unchanged: 0/0
 30140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30141 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30142 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30143 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30144 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30145 ;;Total ram usage:       32 bytes
 30146 ;; Hardware stack levels used:    1
 30147 ;; Hardware stack levels required when called:    5
 30148 ;; This function calls:
 30149 ;;		___aldiv
 30150 ;;		___lmul
 30151 ;; This function is called by:
 30152 ;;		_cal_diff_press
 30153 ;;		_cal_press
 30154 ;; This function uses a non-reentrant model
 30155 ;;
 30156                           
 30157                           	psect	text170
 30158  000784                     __ptext170:
 30159                           	opt stack 0
 30160  000784                     _m_interp1_cal_p_v:
 30161                           	opt stack 21
 30162                           
 30163                           ;data.c: 341: uint8_t i;
 30164                           ;data.c: 342: int32_t x,y,pr;
 30165                           ;data.c: 343: int16_t t16;
 30166                           ;data.c: 344: t16=xin->pAdcValue;
 30167                           
 30168                           ; BSR set to: 0
 30169                           ;incstack = 0
 30170  000784  0100               	movlb	0	; () banked
 30171  000786  EE20 F004          	lfsr	2,4
 30172  00078A  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 30173  00078C  26D9               	addwf	fsr2l,f,c
 30174  00078E  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 30175  000790  22DA               	addwfc	fsr2h,f,c
 30176  000792  CFDE F093          	movff	postinc2,m_interp1_cal_p_v@t16
 30177  000796  CFDD F094          	movff	postdec2,m_interp1_cal_p_v@t16+1
 30178                           
 30179                           ; BSR set to: 0
 30180                           ;data.c: 345: for(i=0;i< (tabrow->pCount) - 2 ;i++){
 30181  00079A  0E00               	movlw	0
 30182  00079C  0100               	movlb	0	; () banked
 30183  00079E  6F99               	movwf	m_interp1_cal_p_v@i& (0+255),b
 30184  0007A0  D0BE               	goto	l14452
 30185  0007A2                     l14440:
 30186                           
 30187                           ; BSR set to: 0
 30188                           ;data.c: 347: if(tabrow->prCalibPoint[i].pAdcValue < tabrow->prCalibPoint[i+1].pAdcValue
      +                          ){
 30189  0007A2  0100               	movlb	0	; () banked
 30190  0007A4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30191  0007A6  0100               	movlb	0	; () banked
 30192  0007A8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30193  0007AA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30194  0007AC  0100               	movlb	0	; () banked
 30195  0007AE  90D8               	bcf	status,0,c
 30196  0007B0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30197  0007B2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30198  0007B4  0100               	movlb	0	; () banked
 30199  0007B6  90D8               	bcf	status,0,c
 30200  0007B8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30201  0007BA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30202  0007BC  0100               	movlb	0	; () banked
 30203  0007BE  90D8               	bcf	status,0,c
 30204  0007C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30205  0007C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30206  0007C4  0E0C               	movlw	12
 30207  0007C6  0100               	movlb	0	; () banked
 30208  0007C8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30209  0007CA  0E00               	movlw	0
 30210  0007CC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30211  0007CE  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30212  0007D2  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30213  0007D6  0100               	movlb	0	; () banked
 30214  0007D8  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30215  0007DA  0100               	movlb	0	; () banked
 30216  0007DC  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30217  0007DE  0100               	movlb	0	; () banked
 30218  0007E0  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30219  0007E2  0100               	movlb	0	; () banked
 30220  0007E4  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30221  0007E6  0E04               	movlw	4
 30222  0007E8  0100               	movlb	0	; () banked
 30223  0007EA  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30224  0007EC  6ED9               	movwf	fsr2l,c
 30225  0007EE  0E00               	movlw	0
 30226  0007F0  0100               	movlb	0	; () banked
 30227  0007F2  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30228  0007F4  6EDA               	movwf	fsr2h,c
 30229  0007F6  0100               	movlb	0	; () banked
 30230  0007F8  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30231  0007FA  0D08               	mullw	8
 30232  0007FC  0E04               	movlw	4
 30233  0007FE  26F3               	addwf	prodl,f,c
 30234  000800  0E00               	movlw	0
 30235  000802  22F4               	addwfc	prodh,f,c
 30236  000804  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 30237  000808  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 30238  00080C  50F3               	movf	prodl,w,c
 30239  00080E  0100               	movlb	0	; () banked
 30240  000810  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30241  000812  50F4               	movf	prodh,w,c
 30242  000814  0100               	movlb	0	; () banked
 30243  000816  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30244  000818  0E04               	movlw	4
 30245  00081A  0100               	movlb	0	; () banked
 30246  00081C  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30247  00081E  6EE1               	movwf	fsr1l,c
 30248  000820  0E00               	movlw	0
 30249  000822  0100               	movlb	0	; () banked
 30250  000824  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 30251  000826  6EE2               	movwf	fsr1h,c
 30252  000828  50DE               	movf	postinc2,w,c
 30253  00082A  5CE6               	subwf	postinc1,w,c
 30254  00082C  50E6               	movf	postinc1,w,c
 30255  00082E  0A80               	xorlw	128
 30256  000830  0100               	movlb	0	; () banked
 30257  000832  6F8A               	movwf	(??_m_interp1_cal_p_v+10)& (0+255),b
 30258  000834  50DE               	movf	postinc2,w,c
 30259  000836  0A80               	xorlw	128
 30260  000838  0100               	movlb	0	; () banked
 30261  00083A  598A               	subwfb	(??_m_interp1_cal_p_v+10)& (0+255),w,b
 30262  00083C  B0D8               	btfsc	status,0,c
 30263  00083E  D039               	goto	l14446
 30264                           
 30265                           ; BSR set to: 0
 30266                           ;data.c: 348: if(t16 <= tabrow->prCalibPoint[i+1].pAdcValue)break;
 30267  000840  0100               	movlb	0	; () banked
 30268  000842  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30269  000844  0100               	movlb	0	; () banked
 30270  000846  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30271  000848  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30272  00084A  0100               	movlb	0	; () banked
 30273  00084C  90D8               	bcf	status,0,c
 30274  00084E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30275  000850  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30276  000852  0100               	movlb	0	; () banked
 30277  000854  90D8               	bcf	status,0,c
 30278  000856  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30279  000858  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30280  00085A  0100               	movlb	0	; () banked
 30281  00085C  90D8               	bcf	status,0,c
 30282  00085E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30283  000860  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30284  000862  0E0C               	movlw	12
 30285  000864  0100               	movlb	0	; () banked
 30286  000866  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30287  000868  0E00               	movlw	0
 30288  00086A  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30289  00086C  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30290  000870  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30291  000874  0100               	movlb	0	; () banked
 30292  000876  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30293  000878  0100               	movlb	0	; () banked
 30294  00087A  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30295  00087C  0100               	movlb	0	; () banked
 30296  00087E  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30297  000880  0100               	movlb	0	; () banked
 30298  000882  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30299  000884  0E04               	movlw	4
 30300  000886  0100               	movlb	0	; () banked
 30301  000888  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30302  00088A  6ED9               	movwf	fsr2l,c
 30303  00088C  0E00               	movlw	0
 30304  00088E  0100               	movlb	0	; () banked
 30305  000890  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30306  000892  6EDA               	movwf	fsr2h,c
 30307  000894  0100               	movlb	0	; () banked
 30308  000896  5193               	movf	m_interp1_cal_p_v@t16& (0+255),w,b
 30309  000898  5CDE               	subwf	postinc2,w,c
 30310  00089A  50DE               	movf	postinc2,w,c
 30311  00089C  0A80               	xorlw	128
 30312  00089E  0100               	movlb	0	; () banked
 30313  0008A0  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 30314  0008A2  0100               	movlb	0	; () banked
 30315  0008A4  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 30316  0008A6  0A80               	xorlw	128
 30317  0008A8  0100               	movlb	0	; () banked
 30318  0008AA  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30319  0008AC  B0D8               	btfsc	status,0,c
 30320  0008AE  D062               	goto	l14454
 30321  0008B0  D034               	goto	l14450
 30322  0008B2                     l14446:
 30323                           
 30324                           ; BSR set to: 0
 30325                           ;data.c: 350: if(t16 >= tabrow->prCalibPoint[i+1].pAdcValue)break;
 30326  0008B2  0100               	movlb	0	; () banked
 30327  0008B4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30328  0008B6  0100               	movlb	0	; () banked
 30329  0008B8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30330  0008BA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30331  0008BC  0100               	movlb	0	; () banked
 30332  0008BE  90D8               	bcf	status,0,c
 30333  0008C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30334  0008C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30335  0008C4  0100               	movlb	0	; () banked
 30336  0008C6  90D8               	bcf	status,0,c
 30337  0008C8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30338  0008CA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30339  0008CC  0100               	movlb	0	; () banked
 30340  0008CE  90D8               	bcf	status,0,c
 30341  0008D0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30342  0008D2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30343  0008D4  0E0C               	movlw	12
 30344  0008D6  0100               	movlb	0	; () banked
 30345  0008D8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30346  0008DA  0E00               	movlw	0
 30347  0008DC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30348  0008DE  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30349  0008E2  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30350  0008E6  0100               	movlb	0	; () banked
 30351  0008E8  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30352  0008EA  0100               	movlb	0	; () banked
 30353  0008EC  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30354  0008EE  0100               	movlb	0	; () banked
 30355  0008F0  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30356  0008F2  0100               	movlb	0	; () banked
 30357  0008F4  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30358  0008F6  0E04               	movlw	4
 30359  0008F8  0100               	movlb	0	; () banked
 30360  0008FA  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30361  0008FC  6ED9               	movwf	fsr2l,c
 30362  0008FE  0E00               	movlw	0
 30363  000900  0100               	movlb	0	; () banked
 30364  000902  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30365  000904  6EDA               	movwf	fsr2h,c
 30366  000906  50DE               	movf	postinc2,w,c
 30367  000908  0100               	movlb	0	; () banked
 30368  00090A  5D93               	subwf	m_interp1_cal_p_v@t16& (0+255),w,b
 30369  00090C  0100               	movlb	0	; () banked
 30370  00090E  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 30371  000910  0A80               	xorlw	128
 30372  000912  0100               	movlb	0	; () banked
 30373  000914  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 30374  000916  50DE               	movf	postinc2,w,c
 30375  000918  D7C6               	goto	L24
 30376  00091A                     l14450:
 30377                           
 30378                           ; BSR set to: 0
 30379  00091A  0100               	movlb	0	; () banked
 30380  00091C  2B99               	incf	m_interp1_cal_p_v@i& (0+255),f,b
 30381  00091E                     l14452:
 30382                           
 30383                           ; BSR set to: 0
 30384  00091E  0EFE               	movlw	254
 30385  000920  0100               	movlb	0	; () banked
 30386  000922  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30387  000924  0EFF               	movlw	255
 30388  000926  0100               	movlb	0	; () banked
 30389  000928  6F81               	movwf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30390  00092A  C07A  FFD9         	movff	m_interp1_cal_p_v@tabrow,fsr2l
 30391  00092E  C07B  FFDA         	movff	m_interp1_cal_p_v@tabrow+1,fsr2h
 30392  000932  50DF               	movf	indf2,w,c
 30393  000934  0100               	movlb	0	; () banked
 30394  000936  6F82               	movwf	(??_m_interp1_cal_p_v+2)& (0+255),b
 30395  000938  6B83               	clrf	(??_m_interp1_cal_p_v+3)& (0+255),b
 30396  00093A  0100               	movlb	0	; () banked
 30397  00093C  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30398  00093E  0100               	movlb	0	; () banked
 30399  000940  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30400  000942  0100               	movlb	0	; () banked
 30401  000944  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30402  000946  0100               	movlb	0	; () banked
 30403  000948  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30404  00094A  0100               	movlb	0	; () banked
 30405  00094C  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30406  00094E  0100               	movlb	0	; () banked
 30407  000950  6F84               	movwf	(??_m_interp1_cal_p_v+4)& (0+255),b
 30408  000952  6B85               	clrf	(??_m_interp1_cal_p_v+5)& (0+255),b
 30409  000954  0100               	movlb	0	; () banked
 30410  000956  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30411  000958  0100               	movlb	0	; () banked
 30412  00095A  5D84               	subwf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 30413  00095C  0100               	movlb	0	; () banked
 30414  00095E  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 30415  000960  0A80               	xorlw	128
 30416  000962  0100               	movlb	0	; () banked
 30417  000964  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 30418  000966  0100               	movlb	0	; () banked
 30419  000968  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30420  00096A  0A80               	xorlw	128
 30421  00096C  0100               	movlb	0	; () banked
 30422  00096E  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30423  000970  A0D8               	btfss	status,0,c
 30424  000972  D717               	goto	l14440
 30425  000974                     l14454:
 30426                           
 30427                           ; BSR set to: 0
 30428                           ;data.c: 351: }
 30429                           ;data.c: 352: }
 30430                           ;data.c: 353: pr=tabrow->prCalibPoint[i].pValue;
 30431  000974  0100               	movlb	0	; () banked
 30432  000976  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30433  000978  0D08               	mullw	8
 30434  00097A  0E04               	movlw	4
 30435  00097C  26F3               	addwf	prodl,f,c
 30436  00097E  0E00               	movlw	0
 30437  000980  22F4               	addwfc	prodh,f,c
 30438  000982  50F3               	movf	prodl,w,c
 30439  000984  0100               	movlb	0	; () banked
 30440  000986  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30441  000988  6ED9               	movwf	fsr2l,c
 30442  00098A  50F4               	movf	prodh,w,c
 30443  00098C  0100               	movlb	0	; () banked
 30444  00098E  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30445  000990  6EDA               	movwf	fsr2h,c
 30446  000992  CFDE F095          	movff	postinc2,m_interp1_cal_p_v@pr
 30447  000996  CFDE F096          	movff	postinc2,m_interp1_cal_p_v@pr+1
 30448  00099A  CFDE F097          	movff	postinc2,m_interp1_cal_p_v@pr+2
 30449  00099E  CFDE F098          	movff	postinc2,m_interp1_cal_p_v@pr+3
 30450                           
 30451                           ;data.c: 355: y = tabrow->prCalibPoint[i+1].pValue - tabrow->prCalibPoint[i].pValue ;
 30452  0009A2  0100               	movlb	0	; () banked
 30453  0009A4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30454  0009A6  0100               	movlb	0	; () banked
 30455  0009A8  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30456  0009AA  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30457  0009AC  0100               	movlb	0	; () banked
 30458  0009AE  90D8               	bcf	status,0,c
 30459  0009B0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30460  0009B2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30461  0009B4  0100               	movlb	0	; () banked
 30462  0009B6  90D8               	bcf	status,0,c
 30463  0009B8  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30464  0009BA  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30465  0009BC  0100               	movlb	0	; () banked
 30466  0009BE  90D8               	bcf	status,0,c
 30467  0009C0  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30468  0009C2  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30469  0009C4  0E0C               	movlw	12
 30470  0009C6  0100               	movlb	0	; () banked
 30471  0009C8  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30472  0009CA  0E00               	movlw	0
 30473  0009CC  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30474  0009CE  0100               	movlb	0	; () banked
 30475  0009D0  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30476  0009D2  0100               	movlb	0	; () banked
 30477  0009D4  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30478  0009D6  6ED9               	movwf	fsr2l,c
 30479  0009D8  0100               	movlb	0	; () banked
 30480  0009DA  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30481  0009DC  0100               	movlb	0	; () banked
 30482  0009DE  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30483  0009E0  6EDA               	movwf	fsr2h,c
 30484  0009E2  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 30485  0009E6  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_v+3
 30486  0009EA  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 30487  0009EE  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_v+5
 30488  0009F2  0100               	movlb	0	; () banked
 30489  0009F4  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30490  0009F6  0D08               	mullw	8
 30491  0009F8  0E04               	movlw	4
 30492  0009FA  26F3               	addwf	prodl,f,c
 30493  0009FC  0E00               	movlw	0
 30494  0009FE  22F4               	addwfc	prodh,f,c
 30495  000A00  50F3               	movf	prodl,w,c
 30496  000A02  0100               	movlb	0	; () banked
 30497  000A04  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30498  000A06  6ED9               	movwf	fsr2l,c
 30499  000A08  50F4               	movf	prodh,w,c
 30500  000A0A  0100               	movlb	0	; () banked
 30501  000A0C  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30502  000A0E  6EDA               	movwf	fsr2h,c
 30503  000A10  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_v+6
 30504  000A14  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_v+7
 30505  000A18  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 30506  000A1C  CFDE F089          	movff	postinc2,??_m_interp1_cal_p_v+9
 30507  000A20  0100               	movlb	0	; () banked
 30508  000A22  1F86               	comf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30509  000A24  1F87               	comf	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30510  000A26  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30511  000A28  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30512  000A2A  2B86               	incf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30513  000A2C  0E00               	movlw	0
 30514  000A2E  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30515  000A30  2388               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30516  000A32  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30517  000A34  0100               	movlb	0	; () banked
 30518  000A36  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30519  000A38  0100               	movlb	0	; () banked
 30520  000A3A  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30521  000A3C  0100               	movlb	0	; () banked
 30522  000A3E  6F8B               	movwf	m_interp1_cal_p_v@y& (0+255),b
 30523  000A40  0100               	movlb	0	; () banked
 30524  000A42  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30525  000A44  0100               	movlb	0	; () banked
 30526  000A46  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 30527  000A48  0100               	movlb	0	; () banked
 30528  000A4A  6F8C               	movwf	(m_interp1_cal_p_v@y+1)& (0+255),b
 30529  000A4C  0100               	movlb	0	; () banked
 30530  000A4E  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 30531  000A50  0100               	movlb	0	; () banked
 30532  000A52  2188               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),w,b
 30533  000A54  0100               	movlb	0	; () banked
 30534  000A56  6F8D               	movwf	(m_interp1_cal_p_v@y+2)& (0+255),b
 30535  000A58  0100               	movlb	0	; () banked
 30536  000A5A  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 30537  000A5C  0100               	movlb	0	; () banked
 30538  000A5E  2189               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),w,b
 30539  000A60  0100               	movlb	0	; () banked
 30540  000A62  6F8E               	movwf	(m_interp1_cal_p_v@y+3)& (0+255),b
 30541                           
 30542                           ;data.c: 356: x = (int32_t)(tabrow->prCalibPoint[i+1].pAdcValue - tabrow->prCalibPoint[i
      +                          ].pAdcValue);
 30543  000A64  0100               	movlb	0	; () banked
 30544  000A66  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30545  000A68  0100               	movlb	0	; () banked
 30546  000A6A  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 30547  000A6C  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 30548  000A6E  0100               	movlb	0	; () banked
 30549  000A70  90D8               	bcf	status,0,c
 30550  000A72  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30551  000A74  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30552  000A76  0100               	movlb	0	; () banked
 30553  000A78  90D8               	bcf	status,0,c
 30554  000A7A  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30555  000A7C  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30556  000A7E  0100               	movlb	0	; () banked
 30557  000A80  90D8               	bcf	status,0,c
 30558  000A82  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 30559  000A84  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30560  000A86  0E0C               	movlw	12
 30561  000A88  0100               	movlb	0	; () banked
 30562  000A8A  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30563  000A8C  0E00               	movlw	0
 30564  000A8E  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30565  000A90  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 30566  000A94  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 30567  000A98  0100               	movlb	0	; () banked
 30568  000A9A  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 30569  000A9C  0100               	movlb	0	; () banked
 30570  000A9E  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30571  000AA0  0100               	movlb	0	; () banked
 30572  000AA2  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30573  000AA4  0100               	movlb	0	; () banked
 30574  000AA6  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30575  000AA8  0E04               	movlw	4
 30576  000AAA  0100               	movlb	0	; () banked
 30577  000AAC  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 30578  000AAE  6ED9               	movwf	fsr2l,c
 30579  000AB0  0E00               	movlw	0
 30580  000AB2  0100               	movlb	0	; () banked
 30581  000AB4  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 30582  000AB6  6EDA               	movwf	fsr2h,c
 30583  000AB8  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 30584  000ABC  CFDD F085          	movff	postdec2,??_m_interp1_cal_p_v+5
 30585  000AC0  0100               	movlb	0	; () banked
 30586  000AC2  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30587  000AC4  0D08               	mullw	8
 30588  000AC6  0E04               	movlw	4
 30589  000AC8  26F3               	addwf	prodl,f,c
 30590  000ACA  0E00               	movlw	0
 30591  000ACC  22F4               	addwfc	prodh,f,c
 30592  000ACE  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 30593  000AD2  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 30594  000AD6  50F3               	movf	prodl,w,c
 30595  000AD8  0100               	movlb	0	; () banked
 30596  000ADA  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 30597  000ADC  50F4               	movf	prodh,w,c
 30598  000ADE  0100               	movlb	0	; () banked
 30599  000AE0  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 30600  000AE2  0E04               	movlw	4
 30601  000AE4  0100               	movlb	0	; () banked
 30602  000AE6  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 30603  000AE8  6ED9               	movwf	fsr2l,c
 30604  000AEA  0E00               	movlw	0
 30605  000AEC  0100               	movlb	0	; () banked
 30606  000AEE  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 30607  000AF0  6EDA               	movwf	fsr2h,c
 30608  000AF2  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 30609  000AF6  CFDD F089          	movff	postdec2,??_m_interp1_cal_p_v+9
 30610  000AFA  0100               	movlb	0	; () banked
 30611  000AFC  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30612  000AFE  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30613  000B00  4B88               	infsnz	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30614  000B02  2B89               	incf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30615  000B04  0100               	movlb	0	; () banked
 30616  000B06  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 30617  000B08  0100               	movlb	0	; () banked
 30618  000B0A  2788               	addwf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 30619  000B0C  0100               	movlb	0	; () banked
 30620  000B0E  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 30621  000B10  0100               	movlb	0	; () banked
 30622  000B12  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 30623  000B14  C088  F08F         	movff	??_m_interp1_cal_p_v+8,m_interp1_cal_p_v@x
 30624  000B18  C089  F090         	movff	??_m_interp1_cal_p_v+9,m_interp1_cal_p_v@x+1
 30625  000B1C  0100               	movlb	0	; () banked
 30626  000B1E  0E00               	movlw	0
 30627  000B20  BF90               	btfsc	(m_interp1_cal_p_v@x+1)& (0+255),7,b
 30628  000B22  0EFF               	movlw	-1
 30629  000B24  6F91               	movwf	(m_interp1_cal_p_v@x+2)& (0+255),b
 30630  000B26  6F92               	movwf	(m_interp1_cal_p_v@x+3)& (0+255),b
 30631                           
 30632                           ; BSR set to: 0
 30633                           ;data.c: 357: if(x != 0){
 30634  000B28  0100               	movlb	0	; () banked
 30635  000B2A  518F               	movf	m_interp1_cal_p_v@x& (0+255),w,b
 30636  000B2C  0100               	movlb	0	; () banked
 30637  000B2E  1190               	iorwf	(m_interp1_cal_p_v@x+1)& (0+255),w,b
 30638  000B30  0100               	movlb	0	; () banked
 30639  000B32  1191               	iorwf	(m_interp1_cal_p_v@x+2)& (0+255),w,b
 30640  000B34  0100               	movlb	0	; () banked
 30641  000B36  1192               	iorwf	(m_interp1_cal_p_v@x+3)& (0+255),w,b
 30642  000B38  B4D8               	btfsc	status,2,c
 30643  000B3A  D068               	goto	l14460
 30644                           
 30645                           ; BSR set to: 0
 30646                           ;data.c: 359: pr = pr + y*((int32_t)(t16 - tabrow->prCalibPoint[i].pAdcValue))/x;
 30647  000B3C  0100               	movlb	0	; () banked
 30648  000B3E  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30649  000B40  0D08               	mullw	8
 30650  000B42  0E04               	movlw	4
 30651  000B44  26F3               	addwf	prodl,f,c
 30652  000B46  0E00               	movlw	0
 30653  000B48  22F4               	addwfc	prodh,f,c
 30654  000B4A  C07A  F080         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v
 30655  000B4E  C07B  F081         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+1
 30656  000B52  50F3               	movf	prodl,w,c
 30657  000B54  0100               	movlb	0	; () banked
 30658  000B56  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 30659  000B58  50F4               	movf	prodh,w,c
 30660  000B5A  0100               	movlb	0	; () banked
 30661  000B5C  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 30662  000B5E  0E04               	movlw	4
 30663  000B60  0100               	movlb	0	; () banked
 30664  000B62  2580               	addwf	??_m_interp1_cal_p_v& (0+255),w,b
 30665  000B64  6ED9               	movwf	fsr2l,c
 30666  000B66  0E00               	movlw	0
 30667  000B68  0100               	movlb	0	; () banked
 30668  000B6A  2181               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 30669  000B6C  6EDA               	movwf	fsr2h,c
 30670  000B6E  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 30671  000B72  CFDD F083          	movff	postdec2,??_m_interp1_cal_p_v+3
 30672  000B76  0100               	movlb	0	; () banked
 30673  000B78  1F82               	comf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30674  000B7A  1F83               	comf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30675  000B7C  4B82               	infsnz	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30676  000B7E  2B83               	incf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30677  000B80  0100               	movlb	0	; () banked
 30678  000B82  5193               	movf	m_interp1_cal_p_v@t16& (0+255),w,b
 30679  000B84  0100               	movlb	0	; () banked
 30680  000B86  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 30681  000B88  0100               	movlb	0	; () banked
 30682  000B8A  5194               	movf	(m_interp1_cal_p_v@t16+1)& (0+255),w,b
 30683  000B8C  0100               	movlb	0	; () banked
 30684  000B8E  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 30685  000B90  C082  F060         	movff	??_m_interp1_cal_p_v+2,___lmul@multiplier
 30686  000B94  C083  F061         	movff	??_m_interp1_cal_p_v+3,___lmul@multiplier+1
 30687  000B98  0100               	movlb	0	; () banked
 30688  000B9A  0E00               	movlw	0
 30689  000B9C  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 30690  000B9E  0EFF               	movlw	-1
 30691  000BA0  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 30692  000BA2  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 30693  000BA4  C08B  F064         	movff	m_interp1_cal_p_v@y,___lmul@multiplicand
 30694  000BA8  C08C  F065         	movff	m_interp1_cal_p_v@y+1,___lmul@multiplicand+1
 30695  000BAC  C08D  F066         	movff	m_interp1_cal_p_v@y+2,___lmul@multiplicand+2
 30696  000BB0  C08E  F067         	movff	m_interp1_cal_p_v@y+3,___lmul@multiplicand+3
 30697  000BB4  EC99  F043         	call	___lmul	;wreg free
 30698  000BB8  C060  F06C         	movff	?___lmul,___aldiv@dividend
 30699  000BBC  C061  F06D         	movff	?___lmul+1,___aldiv@dividend+1
 30700  000BC0  C062  F06E         	movff	?___lmul+2,___aldiv@dividend+2
 30701  000BC4  C063  F06F         	movff	?___lmul+3,___aldiv@dividend+3
 30702  000BC8  C08F  F070         	movff	m_interp1_cal_p_v@x,___aldiv@divisor
 30703  000BCC  C090  F071         	movff	m_interp1_cal_p_v@x+1,___aldiv@divisor+1
 30704  000BD0  C091  F072         	movff	m_interp1_cal_p_v@x+2,___aldiv@divisor+2
 30705  000BD4  C092  F073         	movff	m_interp1_cal_p_v@x+3,___aldiv@divisor+3
 30706  000BD8  EC2B  F02D         	call	___aldiv	;wreg free
 30707  000BDC  0100               	movlb	0	; () banked
 30708  000BDE  5195               	movf	m_interp1_cal_p_v@pr& (0+255),w,b
 30709  000BE0  0100               	movlb	0	; () banked
 30710  000BE2  256C               	addwf	?___aldiv& (0+255),w,b
 30711  000BE4  0100               	movlb	0	; () banked
 30712  000BE6  6F95               	movwf	m_interp1_cal_p_v@pr& (0+255),b
 30713  000BE8  0100               	movlb	0	; () banked
 30714  000BEA  5196               	movf	(m_interp1_cal_p_v@pr+1)& (0+255),w,b
 30715  000BEC  0100               	movlb	0	; () banked
 30716  000BEE  216D               	addwfc	(?___aldiv+1)& (0+255),w,b
 30717  000BF0  0100               	movlb	0	; () banked
 30718  000BF2  6F96               	movwf	(m_interp1_cal_p_v@pr+1)& (0+255),b
 30719  000BF4  0100               	movlb	0	; () banked
 30720  000BF6  5197               	movf	(m_interp1_cal_p_v@pr+2)& (0+255),w,b
 30721  000BF8  0100               	movlb	0	; () banked
 30722  000BFA  216E               	addwfc	(?___aldiv+2)& (0+255),w,b
 30723  000BFC  0100               	movlb	0	; () banked
 30724  000BFE  6F97               	movwf	(m_interp1_cal_p_v@pr+2)& (0+255),b
 30725  000C00  0100               	movlb	0	; () banked
 30726  000C02  5198               	movf	(m_interp1_cal_p_v@pr+3)& (0+255),w,b
 30727  000C04  0100               	movlb	0	; () banked
 30728  000C06  216F               	addwfc	(?___aldiv+3)& (0+255),w,b
 30729  000C08  0100               	movlb	0	; () banked
 30730  000C0A  6F98               	movwf	(m_interp1_cal_p_v@pr+3)& (0+255),b
 30731  000C0C                     l14460:
 30732                           
 30733                           ; BSR set to: 0
 30734                           ;data.c: 360: }
 30735                           ;data.c: 361: xin->pValue=pr;
 30736  000C0C  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 30737  000C10  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 30738  000C14  C095  FFDE         	movff	m_interp1_cal_p_v@pr,postinc2
 30739  000C18  C096  FFDE         	movff	m_interp1_cal_p_v@pr+1,postinc2
 30740  000C1C  C097  FFDE         	movff	m_interp1_cal_p_v@pr+2,postinc2
 30741  000C20  C098  FFDE         	movff	m_interp1_cal_p_v@pr+3,postinc2
 30742                           
 30743                           ; BSR set to: 0
 30744                           ;data.c: 362: if(xout){
 30745  000C24  0100               	movlb	0	; () banked
 30746  000C26  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 30747  000C28  0100               	movlb	0	; () banked
 30748  000C2A  117F               	iorwf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 30749  000C2C  B4D8               	btfsc	status,2,c
 30750  000C2E  D030               	goto	l14470
 30751                           
 30752                           ; BSR set to: 0
 30753                           ;data.c: 363: xout->pValue = pr;
 30754  000C30  C07E  FFD9         	movff	m_interp1_cal_p_v@xout,fsr2l
 30755  000C34  C07F  FFDA         	movff	m_interp1_cal_p_v@xout+1,fsr2h
 30756  000C38  C095  FFDE         	movff	m_interp1_cal_p_v@pr,postinc2
 30757  000C3C  C096  FFDE         	movff	m_interp1_cal_p_v@pr+1,postinc2
 30758  000C40  C097  FFDE         	movff	m_interp1_cal_p_v@pr+2,postinc2
 30759  000C44  C098  FFDE         	movff	m_interp1_cal_p_v@pr+3,postinc2
 30760                           
 30761                           ; BSR set to: 0
 30762                           ;data.c: 364: xout->pAdcValue = xin->pAdcValue;
 30763  000C48  0100               	movlb	0	; () banked
 30764  000C4A  EE20 F004          	lfsr	2,4
 30765  000C4E  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 30766  000C50  26D9               	addwf	fsr2l,f,c
 30767  000C52  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 30768  000C54  22DA               	addwfc	fsr2h,f,c
 30769  000C56  0100               	movlb	0	; () banked
 30770  000C58  EE10 F004          	lfsr	1,4
 30771  000C5C  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 30772  000C5E  26E1               	addwf	fsr1l,f,c
 30773  000C60  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 30774  000C62  22E2               	addwfc	fsr1h,f,c
 30775  000C64  CFDE FFE6          	movff	postinc2,postinc1
 30776  000C68  CFDD FFE5          	movff	postdec2,postdec1
 30777                           
 30778                           ; BSR set to: 0
 30779                           ;data.c: 365: xout->tAdcValue = tabrow->prCalibPoint[0].tAdcValue;
 30780  000C6C  0100               	movlb	0	; () banked
 30781  000C6E  EE20 F00A          	lfsr	2,10
 30782  000C72  517A               	movf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 30783  000C74  26D9               	addwf	fsr2l,f,c
 30784  000C76  517B               	movf	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 30785  000C78  22DA               	addwfc	fsr2h,f,c
 30786  000C7A  0100               	movlb	0	; () banked
 30787  000C7C  EE10 F006          	lfsr	1,6
 30788  000C80  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 30789  000C82  26E1               	addwf	fsr1l,f,c
 30790  000C84  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 30791  000C86  22E2               	addwfc	fsr1h,f,c
 30792  000C88  CFDE FFE6          	movff	postinc2,postinc1
 30793  000C8C  CFDD FFE5          	movff	postdec2,postdec1
 30794  000C90                     l14470:
 30795                           
 30796                           ; BSR set to: 0
 30797                           ;data.c: 366: }
 30798                           ;data.c: 367: return i;
 30799  000C90  0100               	movlb	0	; () banked
 30800  000C92  5199               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 30801  000C94  0012               	return	
 30802  000C96                     __end_of_m_interp1_cal_p_v:
 30803                           	opt stack 0
 30804                           tosu	equ	0xFFF
 30805                           tosh	equ	0xFFE
 30806                           tosl	equ	0xFFD
 30807                           pclath	equ	0xFFA
 30808                           tblptru	equ	0xFF8
 30809                           tblptrh	equ	0xFF7
 30810                           tblptrl	equ	0xFF6
 30811                           tablat	equ	0xFF5
 30812                           prodh	equ	0xFF4
 30813                           prodl	equ	0xFF3
 30814                           intcon	equ	0xFF2
 30815                           indf0	equ	0xFEF
 30816                           postinc0	equ	0xFEE
 30817                           fsr0h	equ	0xFEA
 30818                           fsr0l	equ	0xFE9
 30819                           wreg	equ	0xFE8
 30820                           indf1	equ	0xFE7
 30821                           postinc1	equ	0xFE6
 30822                           postdec1	equ	0xFE5
 30823                           plusw1	equ	0xFE3
 30824                           fsr1h	equ	0xFE2
 30825                           fsr1l	equ	0xFE1
 30826                           indf2	equ	0xFDF
 30827                           postinc2	equ	0xFDE
 30828                           postdec2	equ	0xFDD
 30829                           plusw2	equ	0xFDB
 30830                           fsr2h	equ	0xFDA
 30831                           fsr2l	equ	0xFD9
 30832                           status	equ	0xFD8
 30833                           
 30834 ;; *************** function _m_interp1_cal_p_t *****************
 30835 ;; Defined at:
 30836 ;;		line 393 in file "src/api/data.c"
 30837 ;; Parameters:    Size  Location     Type
 30838 ;;  tmpx            2   26[BANK0 ] PTR struct .
 30839 ;;		 -> tmpx(24), 
 30840 ;;  xin             2   28[BANK0 ] PTR struct .
 30841 ;;		 -> x_prDiffData(8), 
 30842 ;;  tmpxLen         1   30[BANK0 ] unsigned char 
 30843 ;; Auto vars:     Size  Location     Type
 30844 ;;  pr              4   50[BANK0 ] long 
 30845 ;;  x               4   46[BANK0 ] long 
 30846 ;;  y               4   42[BANK0 ] long 
 30847 ;;  t16             2   54[BANK0 ] int 
 30848 ;;  i               1   56[BANK0 ] unsigned char 
 30849 ;; Return value:  Size  Location     Type
 30850 ;;                  1    wreg      unsigned char 
 30851 ;; Registers used:
 30852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30853 ;; Tracked objects:
 30854 ;;		On entry : 0/0
 30855 ;;		On exit  : 0/0
 30856 ;;		Unchanged: 0/0
 30857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30858 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30859 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30860 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30861 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30862 ;;Total ram usage:       31 bytes
 30863 ;; Hardware stack levels used:    1
 30864 ;; Hardware stack levels required when called:    5
 30865 ;; This function calls:
 30866 ;;		___aldiv
 30867 ;;		___lmul
 30868 ;; This function is called by:
 30869 ;;		_cal_diff_press
 30870 ;; This function uses a non-reentrant model
 30871 ;;
 30872                           
 30873                           	psect	text171
 30874  001AB6                     __ptext171:
 30875                           	opt stack 0
 30876  001AB6                     _m_interp1_cal_p_t:
 30877                           	opt stack 21
 30878                           
 30879                           ;data.c: 395: uint8_t i;
 30880                           ;data.c: 396: int16_t t16;
 30881                           ;data.c: 397: int32_t x,y,pr;
 30882                           ;data.c: 398: t16=xin->tAdcValue;
 30883                           
 30884                           ; BSR set to: 0
 30885                           ;incstack = 0
 30886  001AB6  0100               	movlb	0	; () banked
 30887  001AB8  EE20 F006          	lfsr	2,6
 30888  001ABC  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 30889  001ABE  26D9               	addwf	fsr2l,f,c
 30890  001AC0  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 30891  001AC2  22DA               	addwfc	fsr2h,f,c
 30892  001AC4  CFDE F096          	movff	postinc2,m_interp1_cal_p_t@t16
 30893  001AC8  CFDD F097          	movff	postdec2,m_interp1_cal_p_t@t16+1
 30894                           
 30895                           ; BSR set to: 0
 30896                           ;data.c: 399: for(i=0;i<tmpxLen-2;i++){
 30897  001ACC  0E00               	movlw	0
 30898  001ACE  0100               	movlb	0	; () banked
 30899  001AD0  6F98               	movwf	m_interp1_cal_p_t@i& (0+255),b
 30900  001AD2  D0BA               	goto	l14490
 30901  001AD4                     l14478:
 30902                           
 30903                           ; BSR set to: 0
 30904                           ;data.c: 400: if(tmpx[i].tAdcValue < tmpx[i+1].tAdcValue){
 30905  001AD4  0100               	movlb	0	; () banked
 30906  001AD6  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30907  001AD8  0100               	movlb	0	; () banked
 30908  001ADA  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30909  001ADC  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30910  001ADE  0100               	movlb	0	; () banked
 30911  001AE0  90D8               	bcf	status,0,c
 30912  001AE2  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30913  001AE4  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30914  001AE6  0100               	movlb	0	; () banked
 30915  001AE8  90D8               	bcf	status,0,c
 30916  001AEA  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30917  001AEC  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30918  001AEE  0100               	movlb	0	; () banked
 30919  001AF0  90D8               	bcf	status,0,c
 30920  001AF2  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30921  001AF4  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30922  001AF6  0E08               	movlw	8
 30923  001AF8  0100               	movlb	0	; () banked
 30924  001AFA  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30925  001AFC  0E00               	movlw	0
 30926  001AFE  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30927  001B00  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 30928  001B04  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 30929  001B08  0100               	movlb	0	; () banked
 30930  001B0A  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 30931  001B0C  0100               	movlb	0	; () banked
 30932  001B0E  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 30933  001B10  0100               	movlb	0	; () banked
 30934  001B12  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 30935  001B14  0100               	movlb	0	; () banked
 30936  001B16  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 30937  001B18  0E06               	movlw	6
 30938  001B1A  0100               	movlb	0	; () banked
 30939  001B1C  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 30940  001B1E  6ED9               	movwf	fsr2l,c
 30941  001B20  0E00               	movlw	0
 30942  001B22  0100               	movlb	0	; () banked
 30943  001B24  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 30944  001B26  6EDA               	movwf	fsr2h,c
 30945  001B28  0100               	movlb	0	; () banked
 30946  001B2A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30947  001B2C  0D08               	mullw	8
 30948  001B2E  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 30949  001B32  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 30950  001B36  50F3               	movf	prodl,w,c
 30951  001B38  0100               	movlb	0	; () banked
 30952  001B3A  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 30953  001B3C  50F4               	movf	prodh,w,c
 30954  001B3E  0100               	movlb	0	; () banked
 30955  001B40  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 30956  001B42  0E06               	movlw	6
 30957  001B44  0100               	movlb	0	; () banked
 30958  001B46  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 30959  001B48  6EE1               	movwf	fsr1l,c
 30960  001B4A  0E00               	movlw	0
 30961  001B4C  0100               	movlb	0	; () banked
 30962  001B4E  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 30963  001B50  6EE2               	movwf	fsr1h,c
 30964  001B52  50DE               	movf	postinc2,w,c
 30965  001B54  5CE6               	subwf	postinc1,w,c
 30966  001B56  50E6               	movf	postinc1,w,c
 30967  001B58  0A80               	xorlw	128
 30968  001B5A  0100               	movlb	0	; () banked
 30969  001B5C  6F89               	movwf	(??_m_interp1_cal_p_t+10)& (0+255),b
 30970  001B5E  50DE               	movf	postinc2,w,c
 30971  001B60  0A80               	xorlw	128
 30972  001B62  0100               	movlb	0	; () banked
 30973  001B64  5989               	subwfb	(??_m_interp1_cal_p_t+10)& (0+255),w,b
 30974  001B66  B0D8               	btfsc	status,0,c
 30975  001B68  D039               	goto	l14484
 30976                           
 30977                           ; BSR set to: 0
 30978                           ;data.c: 401: if(t16 <= tmpx[i+1].tAdcValue)break;
 30979  001B6A  0100               	movlb	0	; () banked
 30980  001B6C  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 30981  001B6E  0100               	movlb	0	; () banked
 30982  001B70  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 30983  001B72  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 30984  001B74  0100               	movlb	0	; () banked
 30985  001B76  90D8               	bcf	status,0,c
 30986  001B78  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30987  001B7A  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30988  001B7C  0100               	movlb	0	; () banked
 30989  001B7E  90D8               	bcf	status,0,c
 30990  001B80  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30991  001B82  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30992  001B84  0100               	movlb	0	; () banked
 30993  001B86  90D8               	bcf	status,0,c
 30994  001B88  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 30995  001B8A  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 30996  001B8C  0E08               	movlw	8
 30997  001B8E  0100               	movlb	0	; () banked
 30998  001B90  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 30999  001B92  0E00               	movlw	0
 31000  001B94  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31001  001B96  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 31002  001B9A  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 31003  001B9E  0100               	movlb	0	; () banked
 31004  001BA0  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31005  001BA2  0100               	movlb	0	; () banked
 31006  001BA4  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31007  001BA6  0100               	movlb	0	; () banked
 31008  001BA8  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31009  001BAA  0100               	movlb	0	; () banked
 31010  001BAC  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31011  001BAE  0E06               	movlw	6
 31012  001BB0  0100               	movlb	0	; () banked
 31013  001BB2  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31014  001BB4  6ED9               	movwf	fsr2l,c
 31015  001BB6  0E00               	movlw	0
 31016  001BB8  0100               	movlb	0	; () banked
 31017  001BBA  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31018  001BBC  6EDA               	movwf	fsr2h,c
 31019  001BBE  0100               	movlb	0	; () banked
 31020  001BC0  5196               	movf	m_interp1_cal_p_t@t16& (0+255),w,b
 31021  001BC2  5CDE               	subwf	postinc2,w,c
 31022  001BC4  50DE               	movf	postinc2,w,c
 31023  001BC6  0A80               	xorlw	128
 31024  001BC8  0100               	movlb	0	; () banked
 31025  001BCA  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 31026  001BCC  0100               	movlb	0	; () banked
 31027  001BCE  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 31028  001BD0  0A80               	xorlw	128
 31029  001BD2  0100               	movlb	0	; () banked
 31030  001BD4  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31031  001BD6  B0D8               	btfsc	status,0,c
 31032  001BD8  D05F               	goto	l14492
 31033  001BDA  D034               	goto	l14488
 31034  001BDC                     l14484:
 31035                           
 31036                           ; BSR set to: 0
 31037                           ;data.c: 403: if(t16 >= tmpx[i+1].tAdcValue)break;
 31038  001BDC  0100               	movlb	0	; () banked
 31039  001BDE  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31040  001BE0  0100               	movlb	0	; () banked
 31041  001BE2  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31042  001BE4  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31043  001BE6  0100               	movlb	0	; () banked
 31044  001BE8  90D8               	bcf	status,0,c
 31045  001BEA  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31046  001BEC  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31047  001BEE  0100               	movlb	0	; () banked
 31048  001BF0  90D8               	bcf	status,0,c
 31049  001BF2  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31050  001BF4  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31051  001BF6  0100               	movlb	0	; () banked
 31052  001BF8  90D8               	bcf	status,0,c
 31053  001BFA  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31054  001BFC  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31055  001BFE  0E08               	movlw	8
 31056  001C00  0100               	movlb	0	; () banked
 31057  001C02  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31058  001C04  0E00               	movlw	0
 31059  001C06  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31060  001C08  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 31061  001C0C  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 31062  001C10  0100               	movlb	0	; () banked
 31063  001C12  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31064  001C14  0100               	movlb	0	; () banked
 31065  001C16  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31066  001C18  0100               	movlb	0	; () banked
 31067  001C1A  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31068  001C1C  0100               	movlb	0	; () banked
 31069  001C1E  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31070  001C20  0E06               	movlw	6
 31071  001C22  0100               	movlb	0	; () banked
 31072  001C24  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31073  001C26  6ED9               	movwf	fsr2l,c
 31074  001C28  0E00               	movlw	0
 31075  001C2A  0100               	movlb	0	; () banked
 31076  001C2C  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31077  001C2E  6EDA               	movwf	fsr2h,c
 31078  001C30  50DE               	movf	postinc2,w,c
 31079  001C32  0100               	movlb	0	; () banked
 31080  001C34  5D96               	subwf	m_interp1_cal_p_t@t16& (0+255),w,b
 31081  001C36  0100               	movlb	0	; () banked
 31082  001C38  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 31083  001C3A  0A80               	xorlw	128
 31084  001C3C  0100               	movlb	0	; () banked
 31085  001C3E  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 31086  001C40  50DE               	movf	postinc2,w,c
 31087  001C42  D7C6               	goto	L25
 31088  001C44                     l14488:
 31089                           
 31090                           ; BSR set to: 0
 31091  001C44  0100               	movlb	0	; () banked
 31092  001C46  2B98               	incf	m_interp1_cal_p_t@i& (0+255),f,b
 31093  001C48                     l14490:
 31094                           
 31095                           ; BSR set to: 0
 31096  001C48  0EFE               	movlw	254
 31097  001C4A  0100               	movlb	0	; () banked
 31098  001C4C  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31099  001C4E  0EFF               	movlw	255
 31100  001C50  0100               	movlb	0	; () banked
 31101  001C52  6F80               	movwf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31102  001C54  0100               	movlb	0	; () banked
 31103  001C56  517E               	movf	m_interp1_cal_p_t@tmpxLen& (0+255),w,b
 31104  001C58  0100               	movlb	0	; () banked
 31105  001C5A  6F81               	movwf	(??_m_interp1_cal_p_t+2)& (0+255),b
 31106  001C5C  6B82               	clrf	(??_m_interp1_cal_p_t+3)& (0+255),b
 31107  001C5E  0100               	movlb	0	; () banked
 31108  001C60  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31109  001C62  0100               	movlb	0	; () banked
 31110  001C64  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31111  001C66  0100               	movlb	0	; () banked
 31112  001C68  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31113  001C6A  0100               	movlb	0	; () banked
 31114  001C6C  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31115  001C6E  0100               	movlb	0	; () banked
 31116  001C70  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31117  001C72  0100               	movlb	0	; () banked
 31118  001C74  6F83               	movwf	(??_m_interp1_cal_p_t+4)& (0+255),b
 31119  001C76  6B84               	clrf	(??_m_interp1_cal_p_t+5)& (0+255),b
 31120  001C78  0100               	movlb	0	; () banked
 31121  001C7A  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31122  001C7C  0100               	movlb	0	; () banked
 31123  001C7E  5D83               	subwf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 31124  001C80  0100               	movlb	0	; () banked
 31125  001C82  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 31126  001C84  0A80               	xorlw	128
 31127  001C86  0100               	movlb	0	; () banked
 31128  001C88  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 31129  001C8A  0100               	movlb	0	; () banked
 31130  001C8C  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31131  001C8E  0A80               	xorlw	128
 31132  001C90  0100               	movlb	0	; () banked
 31133  001C92  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31134  001C94  A0D8               	btfss	status,0,c
 31135  001C96  D71E               	goto	l14478
 31136  001C98                     l14492:
 31137                           
 31138                           ; BSR set to: 0
 31139                           ;data.c: 404: }
 31140                           ;data.c: 405: }
 31141                           ;data.c: 406: pr=tmpx[i].pValue;
 31142  001C98  0100               	movlb	0	; () banked
 31143  001C9A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31144  001C9C  0D08               	mullw	8
 31145  001C9E  50F3               	movf	prodl,w,c
 31146  001CA0  0100               	movlb	0	; () banked
 31147  001CA2  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 31148  001CA4  6ED9               	movwf	fsr2l,c
 31149  001CA6  50F4               	movf	prodh,w,c
 31150  001CA8  0100               	movlb	0	; () banked
 31151  001CAA  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 31152  001CAC  6EDA               	movwf	fsr2h,c
 31153  001CAE  CFDE F092          	movff	postinc2,m_interp1_cal_p_t@pr
 31154  001CB2  CFDE F093          	movff	postinc2,m_interp1_cal_p_t@pr+1
 31155  001CB6  CFDE F094          	movff	postinc2,m_interp1_cal_p_t@pr+2
 31156  001CBA  CFDE F095          	movff	postinc2,m_interp1_cal_p_t@pr+3
 31157                           
 31158                           ;data.c: 407: y=(tmpx[i+1].pValue-tmpx[i].pValue);
 31159  001CBE  0100               	movlb	0	; () banked
 31160  001CC0  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31161  001CC2  0100               	movlb	0	; () banked
 31162  001CC4  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31163  001CC6  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31164  001CC8  0100               	movlb	0	; () banked
 31165  001CCA  90D8               	bcf	status,0,c
 31166  001CCC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31167  001CCE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31168  001CD0  0100               	movlb	0	; () banked
 31169  001CD2  90D8               	bcf	status,0,c
 31170  001CD4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31171  001CD6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31172  001CD8  0100               	movlb	0	; () banked
 31173  001CDA  90D8               	bcf	status,0,c
 31174  001CDC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31175  001CDE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31176  001CE0  0E08               	movlw	8
 31177  001CE2  0100               	movlb	0	; () banked
 31178  001CE4  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31179  001CE6  0E00               	movlw	0
 31180  001CE8  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31181  001CEA  0100               	movlb	0	; () banked
 31182  001CEC  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31183  001CEE  0100               	movlb	0	; () banked
 31184  001CF0  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 31185  001CF2  6ED9               	movwf	fsr2l,c
 31186  001CF4  0100               	movlb	0	; () banked
 31187  001CF6  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31188  001CF8  0100               	movlb	0	; () banked
 31189  001CFA  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 31190  001CFC  6EDA               	movwf	fsr2h,c
 31191  001CFE  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 31192  001D02  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_t+3
 31193  001D06  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 31194  001D0A  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_t+5
 31195  001D0E  0100               	movlb	0	; () banked
 31196  001D10  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31197  001D12  0D08               	mullw	8
 31198  001D14  50F3               	movf	prodl,w,c
 31199  001D16  0100               	movlb	0	; () banked
 31200  001D18  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 31201  001D1A  6ED9               	movwf	fsr2l,c
 31202  001D1C  50F4               	movf	prodh,w,c
 31203  001D1E  0100               	movlb	0	; () banked
 31204  001D20  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 31205  001D22  6EDA               	movwf	fsr2h,c
 31206  001D24  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_t+6
 31207  001D28  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_t+7
 31208  001D2C  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 31209  001D30  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_t+9
 31210  001D34  0100               	movlb	0	; () banked
 31211  001D36  1F85               	comf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 31212  001D38  1F86               	comf	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 31213  001D3A  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31214  001D3C  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31215  001D3E  2B85               	incf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 31216  001D40  0E00               	movlw	0
 31217  001D42  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 31218  001D44  2387               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31219  001D46  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31220  001D48  0100               	movlb	0	; () banked
 31221  001D4A  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31222  001D4C  0100               	movlb	0	; () banked
 31223  001D4E  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31224  001D50  0100               	movlb	0	; () banked
 31225  001D52  6F8A               	movwf	m_interp1_cal_p_t@y& (0+255),b
 31226  001D54  0100               	movlb	0	; () banked
 31227  001D56  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31228  001D58  0100               	movlb	0	; () banked
 31229  001D5A  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 31230  001D5C  0100               	movlb	0	; () banked
 31231  001D5E  6F8B               	movwf	(m_interp1_cal_p_t@y+1)& (0+255),b
 31232  001D60  0100               	movlb	0	; () banked
 31233  001D62  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 31234  001D64  0100               	movlb	0	; () banked
 31235  001D66  2187               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),w,b
 31236  001D68  0100               	movlb	0	; () banked
 31237  001D6A  6F8C               	movwf	(m_interp1_cal_p_t@y+2)& (0+255),b
 31238  001D6C  0100               	movlb	0	; () banked
 31239  001D6E  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 31240  001D70  0100               	movlb	0	; () banked
 31241  001D72  2188               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),w,b
 31242  001D74  0100               	movlb	0	; () banked
 31243  001D76  6F8D               	movwf	(m_interp1_cal_p_t@y+3)& (0+255),b
 31244                           
 31245                           ;data.c: 408: x=(int32_t)(tmpx[i+1].tAdcValue-tmpx[i].tAdcValue);
 31246  001D78  0100               	movlb	0	; () banked
 31247  001D7A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31248  001D7C  0100               	movlb	0	; () banked
 31249  001D7E  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 31250  001D80  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 31251  001D82  0100               	movlb	0	; () banked
 31252  001D84  90D8               	bcf	status,0,c
 31253  001D86  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31254  001D88  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31255  001D8A  0100               	movlb	0	; () banked
 31256  001D8C  90D8               	bcf	status,0,c
 31257  001D8E  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31258  001D90  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31259  001D92  0100               	movlb	0	; () banked
 31260  001D94  90D8               	bcf	status,0,c
 31261  001D96  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 31262  001D98  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31263  001D9A  0E08               	movlw	8
 31264  001D9C  0100               	movlb	0	; () banked
 31265  001D9E  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31266  001DA0  0E00               	movlw	0
 31267  001DA2  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31268  001DA4  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 31269  001DA8  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 31270  001DAC  0100               	movlb	0	; () banked
 31271  001DAE  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 31272  001DB0  0100               	movlb	0	; () banked
 31273  001DB2  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31274  001DB4  0100               	movlb	0	; () banked
 31275  001DB6  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31276  001DB8  0100               	movlb	0	; () banked
 31277  001DBA  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31278  001DBC  0E06               	movlw	6
 31279  001DBE  0100               	movlb	0	; () banked
 31280  001DC0  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 31281  001DC2  6ED9               	movwf	fsr2l,c
 31282  001DC4  0E00               	movlw	0
 31283  001DC6  0100               	movlb	0	; () banked
 31284  001DC8  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 31285  001DCA  6EDA               	movwf	fsr2h,c
 31286  001DCC  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 31287  001DD0  CFDD F084          	movff	postdec2,??_m_interp1_cal_p_t+5
 31288  001DD4  0100               	movlb	0	; () banked
 31289  001DD6  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31290  001DD8  0D08               	mullw	8
 31291  001DDA  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 31292  001DDE  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 31293  001DE2  50F3               	movf	prodl,w,c
 31294  001DE4  0100               	movlb	0	; () banked
 31295  001DE6  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 31296  001DE8  50F4               	movf	prodh,w,c
 31297  001DEA  0100               	movlb	0	; () banked
 31298  001DEC  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 31299  001DEE  0E06               	movlw	6
 31300  001DF0  0100               	movlb	0	; () banked
 31301  001DF2  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 31302  001DF4  6ED9               	movwf	fsr2l,c
 31303  001DF6  0E00               	movlw	0
 31304  001DF8  0100               	movlb	0	; () banked
 31305  001DFA  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 31306  001DFC  6EDA               	movwf	fsr2h,c
 31307  001DFE  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 31308  001E02  CFDD F088          	movff	postdec2,??_m_interp1_cal_p_t+9
 31309  001E06  0100               	movlb	0	; () banked
 31310  001E08  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31311  001E0A  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31312  001E0C  4B87               	infsnz	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31313  001E0E  2B88               	incf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31314  001E10  0100               	movlb	0	; () banked
 31315  001E12  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 31316  001E14  0100               	movlb	0	; () banked
 31317  001E16  2787               	addwf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 31318  001E18  0100               	movlb	0	; () banked
 31319  001E1A  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 31320  001E1C  0100               	movlb	0	; () banked
 31321  001E1E  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 31322  001E20  C087  F08E         	movff	??_m_interp1_cal_p_t+8,m_interp1_cal_p_t@x
 31323  001E24  C088  F08F         	movff	??_m_interp1_cal_p_t+9,m_interp1_cal_p_t@x+1
 31324  001E28  0100               	movlb	0	; () banked
 31325  001E2A  0E00               	movlw	0
 31326  001E2C  BF8F               	btfsc	(m_interp1_cal_p_t@x+1)& (0+255),7,b
 31327  001E2E  0EFF               	movlw	-1
 31328  001E30  6F90               	movwf	(m_interp1_cal_p_t@x+2)& (0+255),b
 31329  001E32  6F91               	movwf	(m_interp1_cal_p_t@x+3)& (0+255),b
 31330                           
 31331                           ; BSR set to: 0
 31332                           ;data.c: 409: if(x!=0){
 31333  001E34  0100               	movlb	0	; () banked
 31334  001E36  518E               	movf	m_interp1_cal_p_t@x& (0+255),w,b
 31335  001E38  0100               	movlb	0	; () banked
 31336  001E3A  118F               	iorwf	(m_interp1_cal_p_t@x+1)& (0+255),w,b
 31337  001E3C  0100               	movlb	0	; () banked
 31338  001E3E  1190               	iorwf	(m_interp1_cal_p_t@x+2)& (0+255),w,b
 31339  001E40  0100               	movlb	0	; () banked
 31340  001E42  1191               	iorwf	(m_interp1_cal_p_t@x+3)& (0+255),w,b
 31341  001E44  B4D8               	btfsc	status,2,c
 31342  001E46  D064               	goto	l14498
 31343                           
 31344                           ; BSR set to: 0
 31345                           ;data.c: 411: pr = pr + y*((int32_t)(t16 - tmpx[i].tAdcValue))/x;
 31346  001E48  0100               	movlb	0	; () banked
 31347  001E4A  5198               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 31348  001E4C  0D08               	mullw	8
 31349  001E4E  C07A  F07F         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t
 31350  001E52  C07B  F080         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+1
 31351  001E56  50F3               	movf	prodl,w,c
 31352  001E58  0100               	movlb	0	; () banked
 31353  001E5A  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 31354  001E5C  50F4               	movf	prodh,w,c
 31355  001E5E  0100               	movlb	0	; () banked
 31356  001E60  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 31357  001E62  0E06               	movlw	6
 31358  001E64  0100               	movlb	0	; () banked
 31359  001E66  257F               	addwf	??_m_interp1_cal_p_t& (0+255),w,b
 31360  001E68  6ED9               	movwf	fsr2l,c
 31361  001E6A  0E00               	movlw	0
 31362  001E6C  0100               	movlb	0	; () banked
 31363  001E6E  2180               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 31364  001E70  6EDA               	movwf	fsr2h,c
 31365  001E72  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 31366  001E76  CFDD F082          	movff	postdec2,??_m_interp1_cal_p_t+3
 31367  001E7A  0100               	movlb	0	; () banked
 31368  001E7C  1F81               	comf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31369  001E7E  1F82               	comf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31370  001E80  4B81               	infsnz	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31371  001E82  2B82               	incf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31372  001E84  0100               	movlb	0	; () banked
 31373  001E86  5196               	movf	m_interp1_cal_p_t@t16& (0+255),w,b
 31374  001E88  0100               	movlb	0	; () banked
 31375  001E8A  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 31376  001E8C  0100               	movlb	0	; () banked
 31377  001E8E  5197               	movf	(m_interp1_cal_p_t@t16+1)& (0+255),w,b
 31378  001E90  0100               	movlb	0	; () banked
 31379  001E92  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 31380  001E94  C081  F060         	movff	??_m_interp1_cal_p_t+2,___lmul@multiplier
 31381  001E98  C082  F061         	movff	??_m_interp1_cal_p_t+3,___lmul@multiplier+1
 31382  001E9C  0100               	movlb	0	; () banked
 31383  001E9E  0E00               	movlw	0
 31384  001EA0  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 31385  001EA2  0EFF               	movlw	-1
 31386  001EA4  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 31387  001EA6  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 31388  001EA8  C08A  F064         	movff	m_interp1_cal_p_t@y,___lmul@multiplicand
 31389  001EAC  C08B  F065         	movff	m_interp1_cal_p_t@y+1,___lmul@multiplicand+1
 31390  001EB0  C08C  F066         	movff	m_interp1_cal_p_t@y+2,___lmul@multiplicand+2
 31391  001EB4  C08D  F067         	movff	m_interp1_cal_p_t@y+3,___lmul@multiplicand+3
 31392  001EB8  EC99  F043         	call	___lmul	;wreg free
 31393  001EBC  C060  F06C         	movff	?___lmul,___aldiv@dividend
 31394  001EC0  C061  F06D         	movff	?___lmul+1,___aldiv@dividend+1
 31395  001EC4  C062  F06E         	movff	?___lmul+2,___aldiv@dividend+2
 31396  001EC8  C063  F06F         	movff	?___lmul+3,___aldiv@dividend+3
 31397  001ECC  C08E  F070         	movff	m_interp1_cal_p_t@x,___aldiv@divisor
 31398  001ED0  C08F  F071         	movff	m_interp1_cal_p_t@x+1,___aldiv@divisor+1
 31399  001ED4  C090  F072         	movff	m_interp1_cal_p_t@x+2,___aldiv@divisor+2
 31400  001ED8  C091  F073         	movff	m_interp1_cal_p_t@x+3,___aldiv@divisor+3
 31401  001EDC  EC2B  F02D         	call	___aldiv	;wreg free
 31402  001EE0  0100               	movlb	0	; () banked
 31403  001EE2  5192               	movf	m_interp1_cal_p_t@pr& (0+255),w,b
 31404  001EE4  0100               	movlb	0	; () banked
 31405  001EE6  256C               	addwf	?___aldiv& (0+255),w,b
 31406  001EE8  0100               	movlb	0	; () banked
 31407  001EEA  6F92               	movwf	m_interp1_cal_p_t@pr& (0+255),b
 31408  001EEC  0100               	movlb	0	; () banked
 31409  001EEE  5193               	movf	(m_interp1_cal_p_t@pr+1)& (0+255),w,b
 31410  001EF0  0100               	movlb	0	; () banked
 31411  001EF2  216D               	addwfc	(?___aldiv+1)& (0+255),w,b
 31412  001EF4  0100               	movlb	0	; () banked
 31413  001EF6  6F93               	movwf	(m_interp1_cal_p_t@pr+1)& (0+255),b
 31414  001EF8  0100               	movlb	0	; () banked
 31415  001EFA  5194               	movf	(m_interp1_cal_p_t@pr+2)& (0+255),w,b
 31416  001EFC  0100               	movlb	0	; () banked
 31417  001EFE  216E               	addwfc	(?___aldiv+2)& (0+255),w,b
 31418  001F00  0100               	movlb	0	; () banked
 31419  001F02  6F94               	movwf	(m_interp1_cal_p_t@pr+2)& (0+255),b
 31420  001F04  0100               	movlb	0	; () banked
 31421  001F06  5195               	movf	(m_interp1_cal_p_t@pr+3)& (0+255),w,b
 31422  001F08  0100               	movlb	0	; () banked
 31423  001F0A  216F               	addwfc	(?___aldiv+3)& (0+255),w,b
 31424  001F0C  0100               	movlb	0	; () banked
 31425  001F0E  6F95               	movwf	(m_interp1_cal_p_t@pr+3)& (0+255),b
 31426  001F10                     l14498:
 31427                           
 31428                           ; BSR set to: 0
 31429                           ;data.c: 412: }
 31430                           ;data.c: 413: xin->pValue=pr;
 31431  001F10  C07C  FFD9         	movff	m_interp1_cal_p_t@xin,fsr2l
 31432  001F14  C07D  FFDA         	movff	m_interp1_cal_p_t@xin+1,fsr2h
 31433  001F18  C092  FFDE         	movff	m_interp1_cal_p_t@pr,postinc2
 31434  001F1C  C093  FFDE         	movff	m_interp1_cal_p_t@pr+1,postinc2
 31435  001F20  C094  FFDE         	movff	m_interp1_cal_p_t@pr+2,postinc2
 31436  001F24  C095  FFDE         	movff	m_interp1_cal_p_t@pr+3,postinc2
 31437  001F28  0012               	return	
 31438  001F2A                     __end_of_m_interp1_cal_p_t:
 31439                           	opt stack 0
 31440                           tosu	equ	0xFFF
 31441                           tosh	equ	0xFFE
 31442                           tosl	equ	0xFFD
 31443                           pclath	equ	0xFFA
 31444                           tblptru	equ	0xFF8
 31445                           tblptrh	equ	0xFF7
 31446                           tblptrl	equ	0xFF6
 31447                           tablat	equ	0xFF5
 31448                           prodh	equ	0xFF4
 31449                           prodl	equ	0xFF3
 31450                           intcon	equ	0xFF2
 31451                           indf0	equ	0xFEF
 31452                           postinc0	equ	0xFEE
 31453                           fsr0h	equ	0xFEA
 31454                           fsr0l	equ	0xFE9
 31455                           wreg	equ	0xFE8
 31456                           indf1	equ	0xFE7
 31457                           postinc1	equ	0xFE6
 31458                           postdec1	equ	0xFE5
 31459                           plusw1	equ	0xFE3
 31460                           fsr1h	equ	0xFE2
 31461                           fsr1l	equ	0xFE1
 31462                           indf2	equ	0xFDF
 31463                           postinc2	equ	0xFDE
 31464                           postdec2	equ	0xFDD
 31465                           plusw2	equ	0xFDB
 31466                           fsr2h	equ	0xFDA
 31467                           fsr2l	equ	0xFD9
 31468                           status	equ	0xFD8
 31469                           
 31470 ;; *************** function ___lmul *****************
 31471 ;; Defined at:
 31472 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 31473 ;; Parameters:    Size  Location     Type
 31474 ;;  multiplier      4    0[BANK0 ] unsigned long 
 31475 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 31476 ;; Auto vars:     Size  Location     Type
 31477 ;;  product         4    8[BANK0 ] unsigned long 
 31478 ;; Return value:  Size  Location     Type
 31479 ;;                  4    0[BANK0 ] unsigned long 
 31480 ;; Registers used:
 31481 ;;		wreg, status,2, status,0
 31482 ;; Tracked objects:
 31483 ;;		On entry : 0/0
 31484 ;;		On exit  : 0/0
 31485 ;;		Unchanged: 0/0
 31486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31487 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31490 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31491 ;;Total ram usage:       12 bytes
 31492 ;; Hardware stack levels used:    1
 31493 ;; Hardware stack levels required when called:    4
 31494 ;; This function calls:
 31495 ;;		Nothing
 31496 ;; This function is called by:
 31497 ;;		_m_interp1_cal_p_v
 31498 ;;		_m_interp1_cal_p_t
 31499 ;;		___mflot32_2_int32
 31500 ;;		_cal_pt100_temperature
 31501 ;;		_m_math_pow
 31502 ;; This function uses a non-reentrant model
 31503 ;;
 31504                           
 31505                           	psect	text172
 31506  008732                     __ptext172:
 31507                           	opt stack 0
 31508  008732                     ___lmul:
 31509                           	opt stack 22
 31510                           
 31511                           ; BSR set to: 0
 31512                           ;incstack = 0
 31513  008732  0E00               	movlw	0
 31514  008734  0100               	movlb	0	; () banked
 31515  008736  6F68               	movwf	___lmul@product& (0+255),b
 31516  008738  0E00               	movlw	0
 31517  00873A  6F69               	movwf	(___lmul@product+1)& (0+255),b
 31518  00873C  0E00               	movlw	0
 31519  00873E  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 31520  008740  0E00               	movlw	0
 31521  008742  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 31522  008744                     l14182:
 31523                           
 31524                           ; BSR set to: 0
 31525  008744  0100               	movlb	0	; () banked
 31526  008746  A160               	btfss	___lmul@multiplier& (0+255),0,b
 31527  008748  D010               	goto	l14186
 31528                           
 31529                           ; BSR set to: 0
 31530  00874A  0100               	movlb	0	; () banked
 31531  00874C  5164               	movf	___lmul@multiplicand& (0+255),w,b
 31532  00874E  0100               	movlb	0	; () banked
 31533  008750  2768               	addwf	___lmul@product& (0+255),f,b
 31534  008752  0100               	movlb	0	; () banked
 31535  008754  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 31536  008756  0100               	movlb	0	; () banked
 31537  008758  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 31538  00875A  0100               	movlb	0	; () banked
 31539  00875C  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 31540  00875E  0100               	movlb	0	; () banked
 31541  008760  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 31542  008762  0100               	movlb	0	; () banked
 31543  008764  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 31544  008766  0100               	movlb	0	; () banked
 31545  008768  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 31546  00876A                     l14186:
 31547                           
 31548                           ; BSR set to: 0
 31549  00876A  0100               	movlb	0	; () banked
 31550  00876C  90D8               	bcf	status,0,c
 31551  00876E  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 31552  008770  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 31553  008772  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 31554  008774  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 31555                           
 31556                           ; BSR set to: 0
 31557  008776  0100               	movlb	0	; () banked
 31558  008778  90D8               	bcf	status,0,c
 31559  00877A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 31560  00877C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 31561  00877E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 31562  008780  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 31563  008782  0100               	movlb	0	; () banked
 31564  008784  5160               	movf	___lmul@multiplier& (0+255),w,b
 31565  008786  0100               	movlb	0	; () banked
 31566  008788  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 31567  00878A  0100               	movlb	0	; () banked
 31568  00878C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 31569  00878E  0100               	movlb	0	; () banked
 31570  008790  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 31571  008792  A4D8               	btfss	status,2,c
 31572  008794  D7D7               	goto	l14182
 31573                           
 31574                           ; BSR set to: 0
 31575  008796  C068  F060         	movff	___lmul@product,?___lmul
 31576  00879A  C069  F061         	movff	___lmul@product+1,?___lmul+1
 31577  00879E  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 31578  0087A2  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 31579                           
 31580                           ; BSR set to: 0
 31581  0087A6  0012               	return		;funcret
 31582  0087A8                     __end_of___lmul:
 31583                           	opt stack 0
 31584                           tosu	equ	0xFFF
 31585                           tosh	equ	0xFFE
 31586                           tosl	equ	0xFFD
 31587                           pclath	equ	0xFFA
 31588                           tblptru	equ	0xFF8
 31589                           tblptrh	equ	0xFF7
 31590                           tblptrl	equ	0xFF6
 31591                           tablat	equ	0xFF5
 31592                           prodh	equ	0xFF4
 31593                           prodl	equ	0xFF3
 31594                           intcon	equ	0xFF2
 31595                           indf0	equ	0xFEF
 31596                           postinc0	equ	0xFEE
 31597                           fsr0h	equ	0xFEA
 31598                           fsr0l	equ	0xFE9
 31599                           wreg	equ	0xFE8
 31600                           indf1	equ	0xFE7
 31601                           postinc1	equ	0xFE6
 31602                           postdec1	equ	0xFE5
 31603                           plusw1	equ	0xFE3
 31604                           fsr1h	equ	0xFE2
 31605                           fsr1l	equ	0xFE1
 31606                           indf2	equ	0xFDF
 31607                           postinc2	equ	0xFDE
 31608                           postdec2	equ	0xFDD
 31609                           plusw2	equ	0xFDB
 31610                           fsr2h	equ	0xFDA
 31611                           fsr2l	equ	0xFD9
 31612                           status	equ	0xFD8
 31613                           
 31614 ;; *************** function ___aldiv *****************
 31615 ;; Defined at:
 31616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
 31617 ;; Parameters:    Size  Location     Type
 31618 ;;  dividend        4   12[BANK0 ] long 
 31619 ;;  divisor         4   16[BANK0 ] long 
 31620 ;; Auto vars:     Size  Location     Type
 31621 ;;  quotient        4   22[BANK0 ] long 
 31622 ;;  sign            1   21[BANK0 ] unsigned char 
 31623 ;;  counter         1   20[BANK0 ] unsigned char 
 31624 ;; Return value:  Size  Location     Type
 31625 ;;                  4   12[BANK0 ] long 
 31626 ;; Registers used:
 31627 ;;		wreg, status,2, status,0
 31628 ;; Tracked objects:
 31629 ;;		On entry : 0/0
 31630 ;;		On exit  : 0/0
 31631 ;;		Unchanged: 0/0
 31632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31634 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31636 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31637 ;;Total ram usage:       14 bytes
 31638 ;; Hardware stack levels used:    1
 31639 ;; Hardware stack levels required when called:    4
 31640 ;; This function calls:
 31641 ;;		Nothing
 31642 ;; This function is called by:
 31643 ;;		_m_interp1_cal_p_v
 31644 ;;		_m_interp1_cal_p_t
 31645 ;;		___x_sample_fliter
 31646 ;;		___x_sample_fifo
 31647 ;;		_cal_pt100_temperature
 31648 ;;		_m_int_2_str
 31649 ;; This function uses a non-reentrant model
 31650 ;;
 31651                           
 31652                           	psect	text173
 31653  005A56                     __ptext173:
 31654                           	opt stack 0
 31655  005A56                     ___aldiv:
 31656                           	opt stack 22
 31657                           
 31658                           ; BSR set to: 0
 31659                           ;incstack = 0
 31660  005A56  0E00               	movlw	0
 31661  005A58  0100               	movlb	0	; () banked
 31662  005A5A  6F75               	movwf	___aldiv@sign& (0+255),b
 31663                           
 31664                           ; BSR set to: 0
 31665  005A5C  0100               	movlb	0	; () banked
 31666  005A5E  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31667  005A60  D00C               	goto	l14198
 31668                           
 31669                           ; BSR set to: 0
 31670  005A62  0100               	movlb	0	; () banked
 31671  005A64  1F73               	comf	(___aldiv@divisor+3)& (0+255),f,b
 31672  005A66  1F72               	comf	(___aldiv@divisor+2)& (0+255),f,b
 31673  005A68  1F71               	comf	(___aldiv@divisor+1)& (0+255),f,b
 31674  005A6A  6D70               	negf	___aldiv@divisor& (0+255),b
 31675  005A6C  0E00               	movlw	0
 31676  005A6E  2371               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 31677  005A70  2372               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 31678  005A72  2373               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 31679                           
 31680                           ; BSR set to: 0
 31681  005A74  0E01               	movlw	1
 31682  005A76  0100               	movlb	0	; () banked
 31683  005A78  6F75               	movwf	___aldiv@sign& (0+255),b
 31684  005A7A                     l14198:
 31685                           
 31686                           ; BSR set to: 0
 31687  005A7A  0100               	movlb	0	; () banked
 31688  005A7C  AF6F               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 31689  005A7E  D00C               	goto	l14204
 31690                           
 31691                           ; BSR set to: 0
 31692  005A80  0100               	movlb	0	; () banked
 31693  005A82  1F6F               	comf	(___aldiv@dividend+3)& (0+255),f,b
 31694  005A84  1F6E               	comf	(___aldiv@dividend+2)& (0+255),f,b
 31695  005A86  1F6D               	comf	(___aldiv@dividend+1)& (0+255),f,b
 31696  005A88  6D6C               	negf	___aldiv@dividend& (0+255),b
 31697  005A8A  0E00               	movlw	0
 31698  005A8C  236D               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 31699  005A8E  236E               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 31700  005A90  236F               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 31701                           
 31702                           ; BSR set to: 0
 31703  005A92  0E01               	movlw	1
 31704  005A94  0100               	movlb	0	; () banked
 31705  005A96  1B75               	xorwf	___aldiv@sign& (0+255),f,b
 31706  005A98                     l14204:
 31707                           
 31708                           ; BSR set to: 0
 31709  005A98  0E00               	movlw	0
 31710  005A9A  0100               	movlb	0	; () banked
 31711  005A9C  6F76               	movwf	___aldiv@quotient& (0+255),b
 31712  005A9E  0E00               	movlw	0
 31713  005AA0  6F77               	movwf	(___aldiv@quotient+1)& (0+255),b
 31714  005AA2  0E00               	movlw	0
 31715  005AA4  6F78               	movwf	(___aldiv@quotient+2)& (0+255),b
 31716  005AA6  0E00               	movlw	0
 31717  005AA8  6F79               	movwf	(___aldiv@quotient+3)& (0+255),b
 31718                           
 31719                           ; BSR set to: 0
 31720  005AAA  0100               	movlb	0	; () banked
 31721  005AAC  5170               	movf	___aldiv@divisor& (0+255),w,b
 31722  005AAE  0100               	movlb	0	; () banked
 31723  005AB0  1171               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 31724  005AB2  0100               	movlb	0	; () banked
 31725  005AB4  1172               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 31726  005AB6  0100               	movlb	0	; () banked
 31727  005AB8  1173               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 31728  005ABA  B4D8               	btfsc	status,2,c
 31729  005ABC  D042               	goto	l14226
 31730                           
 31731                           ; BSR set to: 0
 31732  005ABE  0E01               	movlw	1
 31733  005AC0  0100               	movlb	0	; () banked
 31734  005AC2  6F74               	movwf	___aldiv@counter& (0+255),b
 31735  005AC4  D008               	goto	l14212
 31736  005AC6                     l14210:
 31737                           
 31738                           ; BSR set to: 0
 31739  005AC6  0100               	movlb	0	; () banked
 31740  005AC8  90D8               	bcf	status,0,c
 31741  005ACA  3770               	rlcf	___aldiv@divisor& (0+255),f,b
 31742  005ACC  3771               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 31743  005ACE  3772               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 31744  005AD0  3773               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 31745  005AD2  0100               	movlb	0	; () banked
 31746  005AD4  2B74               	incf	___aldiv@counter& (0+255),f,b
 31747  005AD6                     l14212:
 31748                           
 31749                           ; BSR set to: 0
 31750  005AD6  0100               	movlb	0	; () banked
 31751  005AD8  AF73               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 31752  005ADA  D7F5               	goto	l14210
 31753  005ADC                     l14214:
 31754                           
 31755                           ; BSR set to: 0
 31756  005ADC  0100               	movlb	0	; () banked
 31757  005ADE  90D8               	bcf	status,0,c
 31758  005AE0  3776               	rlcf	___aldiv@quotient& (0+255),f,b
 31759  005AE2  3777               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 31760  005AE4  3778               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 31761  005AE6  3779               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 31762                           
 31763                           ; BSR set to: 0
 31764  005AE8  0100               	movlb	0	; () banked
 31765  005AEA  5170               	movf	___aldiv@divisor& (0+255),w,b
 31766  005AEC  0100               	movlb	0	; () banked
 31767  005AEE  5D6C               	subwf	___aldiv@dividend& (0+255),w,b
 31768  005AF0  0100               	movlb	0	; () banked
 31769  005AF2  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31770  005AF4  0100               	movlb	0	; () banked
 31771  005AF6  596D               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 31772  005AF8  0100               	movlb	0	; () banked
 31773  005AFA  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31774  005AFC  0100               	movlb	0	; () banked
 31775  005AFE  596E               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 31776  005B00  0100               	movlb	0	; () banked
 31777  005B02  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31778  005B04  0100               	movlb	0	; () banked
 31779  005B06  596F               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 31780  005B08  A0D8               	btfss	status,0,c
 31781  005B0A  D012               	goto	l14222
 31782                           
 31783                           ; BSR set to: 0
 31784  005B0C  0100               	movlb	0	; () banked
 31785  005B0E  5170               	movf	___aldiv@divisor& (0+255),w,b
 31786  005B10  0100               	movlb	0	; () banked
 31787  005B12  5F6C               	subwf	___aldiv@dividend& (0+255),f,b
 31788  005B14  0100               	movlb	0	; () banked
 31789  005B16  5171               	movf	(___aldiv@divisor+1)& (0+255),w,b
 31790  005B18  0100               	movlb	0	; () banked
 31791  005B1A  5B6D               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 31792  005B1C  0100               	movlb	0	; () banked
 31793  005B1E  5172               	movf	(___aldiv@divisor+2)& (0+255),w,b
 31794  005B20  0100               	movlb	0	; () banked
 31795  005B22  5B6E               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 31796  005B24  0100               	movlb	0	; () banked
 31797  005B26  5173               	movf	(___aldiv@divisor+3)& (0+255),w,b
 31798  005B28  0100               	movlb	0	; () banked
 31799  005B2A  5B6F               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 31800                           
 31801                           ; BSR set to: 0
 31802  005B2C  0100               	movlb	0	; () banked
 31803  005B2E  8176               	bsf	___aldiv@quotient& (0+255),0,b
 31804  005B30                     l14222:
 31805                           
 31806                           ; BSR set to: 0
 31807  005B30  0100               	movlb	0	; () banked
 31808  005B32  90D8               	bcf	status,0,c
 31809  005B34  3373               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 31810  005B36  3372               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 31811  005B38  3371               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 31812  005B3A  3370               	rrcf	___aldiv@divisor& (0+255),f,b
 31813                           
 31814                           ; BSR set to: 0
 31815  005B3C  0100               	movlb	0	; () banked
 31816  005B3E  2F74               	decfsz	___aldiv@counter& (0+255),f,b
 31817  005B40  D7CD               	goto	l14214
 31818  005B42                     l14226:
 31819                           
 31820                           ; BSR set to: 0
 31821  005B42  0100               	movlb	0	; () banked
 31822  005B44  5175               	movf	___aldiv@sign& (0+255),w,b
 31823  005B46  0100               	movlb	0	; () banked
 31824  005B48  B4D8               	btfsc	status,2,c
 31825  005B4A  D009               	goto	l14230
 31826                           
 31827                           ; BSR set to: 0
 31828  005B4C  0100               	movlb	0	; () banked
 31829  005B4E  1F79               	comf	(___aldiv@quotient+3)& (0+255),f,b
 31830  005B50  1F78               	comf	(___aldiv@quotient+2)& (0+255),f,b
 31831  005B52  1F77               	comf	(___aldiv@quotient+1)& (0+255),f,b
 31832  005B54  6D76               	negf	___aldiv@quotient& (0+255),b
 31833  005B56  0E00               	movlw	0
 31834  005B58  2377               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 31835  005B5A  2378               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 31836  005B5C  2379               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 31837  005B5E                     l14230:
 31838                           
 31839                           ; BSR set to: 0
 31840  005B5E  C076  F06C         	movff	___aldiv@quotient,?___aldiv
 31841  005B62  C077  F06D         	movff	___aldiv@quotient+1,?___aldiv+1
 31842  005B66  C078  F06E         	movff	___aldiv@quotient+2,?___aldiv+2
 31843  005B6A  C079  F06F         	movff	___aldiv@quotient+3,?___aldiv+3
 31844  005B6E  0012               	return	
 31845  005B70                     __end_of___aldiv:
 31846                           	opt stack 0
 31847                           tosu	equ	0xFFF
 31848                           tosh	equ	0xFFE
 31849                           tosl	equ	0xFFD
 31850                           pclath	equ	0xFFA
 31851                           tblptru	equ	0xFF8
 31852                           tblptrh	equ	0xFF7
 31853                           tblptrl	equ	0xFF6
 31854                           tablat	equ	0xFF5
 31855                           prodh	equ	0xFF4
 31856                           prodl	equ	0xFF3
 31857                           intcon	equ	0xFF2
 31858                           indf0	equ	0xFEF
 31859                           postinc0	equ	0xFEE
 31860                           fsr0h	equ	0xFEA
 31861                           fsr0l	equ	0xFE9
 31862                           wreg	equ	0xFE8
 31863                           indf1	equ	0xFE7
 31864                           postinc1	equ	0xFE6
 31865                           postdec1	equ	0xFE5
 31866                           plusw1	equ	0xFE3
 31867                           fsr1h	equ	0xFE2
 31868                           fsr1l	equ	0xFE1
 31869                           indf2	equ	0xFDF
 31870                           postinc2	equ	0xFDE
 31871                           postdec2	equ	0xFDD
 31872                           plusw2	equ	0xFDB
 31873                           fsr2h	equ	0xFDA
 31874                           fsr2l	equ	0xFD9
 31875                           status	equ	0xFD8
 31876                           
 31877 ;; *************** function _cal_diff_p_to_h *****************
 31878 ;; Defined at:
 31879 ;;		line 521 in file "src/api/data.c"
 31880 ;; Parameters:    Size  Location     Type
 31881 ;;  xin             2   98[BANK0 ] PTR struct .
 31882 ;;		 -> x_prDiffData(8), 
 31883 ;; Auto vars:     Size  Location     Type
 31884 ;;  f1              4  104[BANK0 ] float 
 31885 ;;  f2              4  100[BANK0 ] float 
 31886 ;; Return value:  Size  Location     Type
 31887 ;;                  4   98[BANK0 ] long 
 31888 ;; Registers used:
 31889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31890 ;; Tracked objects:
 31891 ;;		On entry : 0/0
 31892 ;;		On exit  : 0/0
 31893 ;;		Unchanged: 0/0
 31894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31896 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31898 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31899 ;;Total ram usage:       10 bytes
 31900 ;; Hardware stack levels used:    1
 31901 ;; Hardware stack levels required when called:    5
 31902 ;; This function calls:
 31903 ;;		___fldiv
 31904 ;;		___flmul
 31905 ;;		___fltol
 31906 ;;		___xxtofl
 31907 ;; This function is called by:
 31908 ;;		_cal_diff_press
 31909 ;; This function uses a non-reentrant model
 31910 ;;
 31911                           
 31912                           	psect	text174
 31913  005E9A                     __ptext174:
 31914                           	opt stack 0
 31915  005E9A                     _cal_diff_p_to_h:
 31916                           	opt stack 21
 31917                           
 31918                           ;data.c: 523: float f1,f2;
 31919                           ;data.c: 525: f1=(float)(xin->pValue);
 31920                           
 31921                           ; BSR set to: 0
 31922                           ;incstack = 0
 31923  005E9A  C0C2  FFD9         	movff	cal_diff_p_to_h@xin,fsr2l
 31924  005E9E  C0C3  FFDA         	movff	cal_diff_p_to_h@xin+1,fsr2h
 31925  005EA2  CFDE F060          	movff	postinc2,___xxtofl@val
 31926  005EA6  CFDE F061          	movff	postinc2,___xxtofl@val+1
 31927  005EAA  CFDE F062          	movff	postinc2,___xxtofl@val+2
 31928  005EAE  CFDE F063          	movff	postinc2,___xxtofl@val+3
 31929  005EB2  0E01               	movlw	1
 31930  005EB4  ECDA  F01F         	call	___xxtofl
 31931  005EB8  C060  F0C8         	movff	?___xxtofl,cal_diff_p_to_h@f1
 31932  005EBC  C061  F0C9         	movff	?___xxtofl+1,cal_diff_p_to_h@f1+1
 31933  005EC0  C062  F0CA         	movff	?___xxtofl+2,cal_diff_p_to_h@f1+2
 31934  005EC4  C063  F0CB         	movff	?___xxtofl+3,cal_diff_p_to_h@f1+3
 31935                           
 31936                           ;data.c: 526: f2=(float)(stSysData.density);
 31937  005EC8  C206  F060         	movff	_stSysData+6,___xxtofl@val
 31938  005ECC  C207  F061         	movff	_stSysData+7,___xxtofl@val+1
 31939  005ED0  0100               	movlb	0	; () banked
 31940  005ED2  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 31941  005ED4  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 31942  005ED6  0E00               	movlw	0
 31943  005ED8  ECDA  F01F         	call	___xxtofl
 31944  005EDC  C060  F0C4         	movff	?___xxtofl,cal_diff_p_to_h@f2
 31945  005EE0  C061  F0C5         	movff	?___xxtofl+1,cal_diff_p_to_h@f2+1
 31946  005EE4  C062  F0C6         	movff	?___xxtofl+2,cal_diff_p_to_h@f2+2
 31947  005EE8  C063  F0C7         	movff	?___xxtofl+3,cal_diff_p_to_h@f2+3
 31948                           
 31949                           ;data.c: 527: f1=f1/(f2*9.8f);
 31950  005EEC  C0C8  F087         	movff	cal_diff_p_to_h@f1,___fldiv@b
 31951  005EF0  C0C9  F088         	movff	cal_diff_p_to_h@f1+1,___fldiv@b+1
 31952  005EF4  C0CA  F089         	movff	cal_diff_p_to_h@f1+2,___fldiv@b+2
 31953  005EF8  C0CB  F08A         	movff	cal_diff_p_to_h@f1+3,___fldiv@b+3
 31954  005EFC  0ECD               	movlw	205
 31955  005EFE  0100               	movlb	0	; () banked
 31956  005F00  6F72               	movwf	___flmul@a& (0+255),b
 31957  005F02  0ECC               	movlw	204
 31958  005F04  6F73               	movwf	(___flmul@a+1)& (0+255),b
 31959  005F06  0E1C               	movlw	28
 31960  005F08  6F74               	movwf	(___flmul@a+2)& (0+255),b
 31961  005F0A  0E41               	movlw	65
 31962  005F0C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 31963  005F0E  C0C4  F06E         	movff	cal_diff_p_to_h@f2,___flmul@b
 31964  005F12  C0C5  F06F         	movff	cal_diff_p_to_h@f2+1,___flmul@b+1
 31965  005F16  C0C6  F070         	movff	cal_diff_p_to_h@f2+2,___flmul@b+2
 31966  005F1A  C0C7  F071         	movff	cal_diff_p_to_h@f2+3,___flmul@b+3
 31967  005F1E  EC08  F00B         	call	___flmul	;wreg free
 31968  005F22  C06E  F08B         	movff	?___flmul,___fldiv@a
 31969  005F26  C06F  F08C         	movff	?___flmul+1,___fldiv@a+1
 31970  005F2A  C070  F08D         	movff	?___flmul+2,___fldiv@a+2
 31971  005F2E  C071  F08E         	movff	?___flmul+3,___fldiv@a+3
 31972  005F32  ECA9  F011         	call	___fldiv	;wreg free
 31973  005F36  C087  F0C8         	movff	?___fldiv,cal_diff_p_to_h@f1
 31974  005F3A  C088  F0C9         	movff	?___fldiv+1,cal_diff_p_to_h@f1+1
 31975  005F3E  C089  F0CA         	movff	?___fldiv+2,cal_diff_p_to_h@f1+2
 31976  005F42  C08A  F0CB         	movff	?___fldiv+3,cal_diff_p_to_h@f1+3
 31977                           
 31978                           ;data.c: 528: f1*=1000;
 31979  005F46  C0C8  F06E         	movff	cal_diff_p_to_h@f1,___flmul@b
 31980  005F4A  C0C9  F06F         	movff	cal_diff_p_to_h@f1+1,___flmul@b+1
 31981  005F4E  C0CA  F070         	movff	cal_diff_p_to_h@f1+2,___flmul@b+2
 31982  005F52  C0CB  F071         	movff	cal_diff_p_to_h@f1+3,___flmul@b+3
 31983  005F56  0E00               	movlw	0
 31984  005F58  0100               	movlb	0	; () banked
 31985  005F5A  6F72               	movwf	___flmul@a& (0+255),b
 31986  005F5C  0E00               	movlw	0
 31987  005F5E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 31988  005F60  0E7A               	movlw	122
 31989  005F62  6F74               	movwf	(___flmul@a+2)& (0+255),b
 31990  005F64  0E44               	movlw	68
 31991  005F66  6F75               	movwf	(___flmul@a+3)& (0+255),b
 31992  005F68  EC08  F00B         	call	___flmul	;wreg free
 31993  005F6C  C06E  F0C8         	movff	?___flmul,cal_diff_p_to_h@f1
 31994  005F70  C06F  F0C9         	movff	?___flmul+1,cal_diff_p_to_h@f1+1
 31995  005F74  C070  F0CA         	movff	?___flmul+2,cal_diff_p_to_h@f1+2
 31996  005F78  C071  F0CB         	movff	?___flmul+3,cal_diff_p_to_h@f1+3
 31997                           
 31998                           ;data.c: 529: rtHight=(int32_t)f1;
 31999  005F7C  C0C8  F0B8         	movff	cal_diff_p_to_h@f1,___fltol@f1
 32000  005F80  C0C9  F0B9         	movff	cal_diff_p_to_h@f1+1,___fltol@f1+1
 32001  005F84  C0CA  F0BA         	movff	cal_diff_p_to_h@f1+2,___fltol@f1+2
 32002  005F88  C0CB  F0BB         	movff	cal_diff_p_to_h@f1+3,___fltol@f1+3
 32003  005F8C  EC43  F02E         	call	___fltol	;wreg free
 32004  005F90  C0B8  F0E8         	movff	?___fltol,_rtHight	;volatile
 32005  005F94  C0B9  F0E9         	movff	?___fltol+1,_rtHight+1	;volatile
 32006  005F98  C0BA  F0EA         	movff	?___fltol+2,_rtHight+2	;volatile
 32007  005F9C  C0BB  F0EB         	movff	?___fltol+3,_rtHight+3	;volatile
 32008  005FA0  0012               	return	
 32009  005FA2                     __end_of_cal_diff_p_to_h:
 32010                           	opt stack 0
 32011                           tosu	equ	0xFFF
 32012                           tosh	equ	0xFFE
 32013                           tosl	equ	0xFFD
 32014                           pclath	equ	0xFFA
 32015                           tblptru	equ	0xFF8
 32016                           tblptrh	equ	0xFF7
 32017                           tblptrl	equ	0xFF6
 32018                           tablat	equ	0xFF5
 32019                           prodh	equ	0xFF4
 32020                           prodl	equ	0xFF3
 32021                           intcon	equ	0xFF2
 32022                           indf0	equ	0xFEF
 32023                           postinc0	equ	0xFEE
 32024                           fsr0h	equ	0xFEA
 32025                           fsr0l	equ	0xFE9
 32026                           wreg	equ	0xFE8
 32027                           indf1	equ	0xFE7
 32028                           postinc1	equ	0xFE6
 32029                           postdec1	equ	0xFE5
 32030                           plusw1	equ	0xFE3
 32031                           fsr1h	equ	0xFE2
 32032                           fsr1l	equ	0xFE1
 32033                           indf2	equ	0xFDF
 32034                           postinc2	equ	0xFDE
 32035                           postdec2	equ	0xFDD
 32036                           plusw2	equ	0xFDB
 32037                           fsr2h	equ	0xFDA
 32038                           fsr2l	equ	0xFD9
 32039                           status	equ	0xFD8
 32040                           
 32041 ;; *************** function _cal_diff_hight_to_vol_v *****************
 32042 ;; Defined at:
 32043 ;;		line 490 in file "src/api/data.c"
 32044 ;; Parameters:    Size  Location     Type
 32045 ;;  h               4    0[BANK3 ] long 
 32046 ;; Auto vars:     Size  Location     Type
 32047 ;;  f1              4   20[BANK3 ] float 
 32048 ;;  D               4   16[BANK3 ] float 
 32049 ;;  v2              4   12[BANK3 ] float 
 32050 ;;  v1              4    8[BANK3 ] float 
 32051 ;; Return value:  Size  Location     Type
 32052 ;;                  4    0[BANK3 ] long 
 32053 ;; Registers used:
 32054 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32055 ;; Tracked objects:
 32056 ;;		On entry : 0/0
 32057 ;;		On exit  : 0/0
 32058 ;;		Unchanged: 0/0
 32059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32060 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32061 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32063 ;;      Totals:         0       0       0       0      24       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32064 ;;Total ram usage:       24 bytes
 32065 ;; Hardware stack levels used:    1
 32066 ;; Hardware stack levels required when called:    6
 32067 ;; This function calls:
 32068 ;;		___fladd
 32069 ;;		___fldiv
 32070 ;;		___flge
 32071 ;;		___flmul
 32072 ;;		___flneg
 32073 ;;		___fltol
 32074 ;;		___xxtofl
 32075 ;;		_m_interp1_float_fast
 32076 ;; This function is called by:
 32077 ;;		_cal_diff_press
 32078 ;; This function uses a non-reentrant model
 32079 ;;
 32080                           
 32081                           	psect	text175
 32082  0000DC                     __ptext175:
 32083                           	opt stack 0
 32084  0000DC                     _cal_diff_hight_to_vol_v:
 32085                           	opt stack 20
 32086                           
 32087                           ;data.c: 492: float v1,v2;
 32088                           ;data.c: 493: float f1,D;
 32089                           ;data.c: 494: v1=(float)(stSysData.V1);
 32090                           
 32091                           ;incstack = 0
 32092  0000DC  C210  F060         	movff	_stSysData+16,___xxtofl@val
 32093  0000E0  C211  F061         	movff	_stSysData+17,___xxtofl@val+1
 32094  0000E4  C212  F062         	movff	_stSysData+18,___xxtofl@val+2
 32095  0000E8  C213  F063         	movff	_stSysData+19,___xxtofl@val+3
 32096  0000EC  0E01               	movlw	1
 32097  0000EE  ECDA  F01F         	call	___xxtofl
 32098  0000F2  C060  F3D2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v1
 32099  0000F6  C061  F3D3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v1+1
 32100  0000FA  C062  F3D4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v1+2
 32101  0000FE  C063  F3D5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v1+3
 32102                           
 32103                           ;data.c: 495: v2=(float)(stSysData.V2);
 32104  000102  C214  F060         	movff	_stSysData+20,___xxtofl@val
 32105  000106  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 32106  00010A  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 32107  00010E  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 32108  000112  0E01               	movlw	1
 32109  000114  ECDA  F01F         	call	___xxtofl
 32110  000118  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 32111  00011C  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 32112  000120  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 32113  000124  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 32114                           
 32115                           ;data.c: 497: f1=(float)h;
 32116  000128  C3CA  F060         	movff	cal_diff_hight_to_vol_v@h,___xxtofl@val
 32117  00012C  C3CB  F061         	movff	cal_diff_hight_to_vol_v@h+1,___xxtofl@val+1
 32118  000130  C3CC  F062         	movff	cal_diff_hight_to_vol_v@h+2,___xxtofl@val+2
 32119  000134  C3CD  F063         	movff	cal_diff_hight_to_vol_v@h+3,___xxtofl@val+3
 32120  000138  0E01               	movlw	1
 32121  00013A  ECDA  F01F         	call	___xxtofl
 32122  00013E  C060  F3DE         	movff	?___xxtofl,cal_diff_hight_to_vol_v@f1
 32123  000142  C061  F3DF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@f1+1
 32124  000146  C062  F3E0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@f1+2
 32125  00014A  C063  F3E1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@f1+3
 32126                           
 32127                           ;data.c: 498: D=(float)(stSysData.d);
 32128  00014E  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 32129  000152  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 32130  000156  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 32131  00015A  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 32132  00015E  0E00               	movlw	0
 32133  000160  ECDA  F01F         	call	___xxtofl
 32134  000164  C060  F3DA         	movff	?___xxtofl,cal_diff_hight_to_vol_v@D
 32135  000168  C061  F3DB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@D+1
 32136  00016C  C062  F3DC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@D+2
 32137  000170  C063  F3DD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@D+3
 32138                           
 32139                           ;data.c: 499: if(f1<D/4){
 32140  000174  C3DE  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 32141  000178  C3DF  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 32142  00017C  C3E0  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 32143  000180  C3E1  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 32144  000184  0E00               	movlw	0
 32145  000186  0100               	movlb	0	; () banked
 32146  000188  6F8B               	movwf	___fldiv@a& (0+255),b
 32147  00018A  0E00               	movlw	0
 32148  00018C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32149  00018E  0E80               	movlw	128
 32150  000190  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32151  000192  0E40               	movlw	64
 32152  000194  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32153  000196  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32154  00019A  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32155  00019E  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32156  0001A2  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32157  0001A6  ECA9  F011         	call	___fldiv	;wreg free
 32158  0001AA  C087  F0BC         	movff	?___fldiv,___flge@ff2
 32159  0001AE  C088  F0BD         	movff	?___fldiv+1,___flge@ff2+1
 32160  0001B2  C089  F0BE         	movff	?___fldiv+2,___flge@ff2+2
 32161  0001B6  C08A  F0BF         	movff	?___fldiv+3,___flge@ff2+3
 32162  0001BA  EC5D  F023         	call	___flge	;wreg free
 32163  0001BE  0100               	movlb	0	; () banked
 32164  0001C0  B0D8               	btfsc	status,0,c
 32165  0001C2  D070               	goto	l14584
 32166                           
 32167                           ; BSR set to: 0
 32168                           ;data.c: 500: f1=2*f1/D;
 32169  0001C4  0E00               	movlw	0
 32170  0001C6  0100               	movlb	0	; () banked
 32171  0001C8  6F72               	movwf	___flmul@a& (0+255),b
 32172  0001CA  0E00               	movlw	0
 32173  0001CC  6F73               	movwf	(___flmul@a+1)& (0+255),b
 32174  0001CE  0E00               	movlw	0
 32175  0001D0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 32176  0001D2  0E40               	movlw	64
 32177  0001D4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 32178  0001D6  C3DE  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 32179  0001DA  C3DF  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 32180  0001DE  C3E0  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 32181  0001E2  C3E1  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 32182  0001E6  EC08  F00B         	call	___flmul	;wreg free
 32183  0001EA  C06E  F087         	movff	?___flmul,___fldiv@b
 32184  0001EE  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 32185  0001F2  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 32186  0001F6  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 32187  0001FA  C3DA  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 32188  0001FE  C3DB  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 32189  000202  C3DC  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 32190  000206  C3DD  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 32191  00020A  ECA9  F011         	call	___fldiv	;wreg free
 32192  00020E  C087  F3DE         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 32193  000212  C088  F3DF         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 32194  000216  C089  F3E0         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 32195  00021A  C08A  F3E1         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 32196                           
 32197                           ;data.c: 501: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 32198  00021E  0E1D               	movlw	low _hKel
 32199  000220  0100               	movlb	0	; () banked
 32200  000222  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 32201  000224  0EEF               	movlw	high _hKel
 32202  000226  0100               	movlb	0	; () banked
 32203  000228  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 32204  00022A  C3DE  F0C6         	movff	cal_diff_hight_to_vol_v@f1,m_interp1_float_fast@in
 32205  00022E  C3DF  F0C7         	movff	cal_diff_hight_to_vol_v@f1+1,m_interp1_float_fast@in+1
 32206  000232  C3E0  F0C8         	movff	cal_diff_hight_to_vol_v@f1+2,m_interp1_float_fast@in+2
 32207  000236  C3E1  F0C9         	movff	cal_diff_hight_to_vol_v@f1+3,m_interp1_float_fast@in+3
 32208  00023A  0E00               	movlw	0
 32209  00023C  0100               	movlb	0	; () banked
 32210  00023E  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 32211  000240  0E65               	movlw	101
 32212  000242  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 32213  000244  EC95  F00F         	call	_m_interp1_float_fast	;wreg free
 32214  000248  C0C4  F3DE         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_v@f1
 32215  00024C  C0C5  F3DF         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_v@f1+1
 32216  000250  C0C6  F3E0         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_v@f1+2
 32217  000254  C0C7  F3E1         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_v@f1+3
 32218                           
 32219                           ;data.c: 502: v2=(float)(stSysData.V2);
 32220  000258  C214  F060         	movff	_stSysData+20,___xxtofl@val
 32221  00025C  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 32222  000260  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 32223  000264  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 32224  000268  0E01               	movlw	1
 32225  00026A  ECDA  F01F         	call	___xxtofl
 32226  00026E  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 32227  000272  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 32228  000276  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 32229  00027A  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 32230                           
 32231                           ;data.c: 503: return (int32_t)v2;
 32232  00027E  C3D6  F0B8         	movff	cal_diff_hight_to_vol_v@v2,___fltol@f1
 32233  000282  C3D7  F0B9         	movff	cal_diff_hight_to_vol_v@v2+1,___fltol@f1+1
 32234  000286  C3D8  F0BA         	movff	cal_diff_hight_to_vol_v@v2+2,___fltol@f1+2
 32235  00028A  C3D9  F0BB         	movff	cal_diff_hight_to_vol_v@v2+3,___fltol@f1+3
 32236  00028E  EC43  F02E         	call	___fltol	;wreg free
 32237  000292  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 32238  000296  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 32239  00029A  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 32240  00029E  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 32241                           
 32242                           ;data.c: 504: }else if(f1<D/4+stSysData.h){
 32243  0002A2  0012               	return	
 32244  0002A4                     l14584:
 32245  0002A4  C3DE  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 32246  0002A8  C3DF  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 32247  0002AC  C3E0  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 32248  0002B0  C3E1  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 32249  0002B4  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32250  0002B8  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32251  0002BC  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32252  0002C0  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32253  0002C4  0E01               	movlw	1
 32254  0002C6  ECDA  F01F         	call	___xxtofl
 32255  0002CA  C060  F0A8         	movff	?___xxtofl,___fladd@a
 32256  0002CE  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 32257  0002D2  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 32258  0002D6  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 32259  0002DA  0E00               	movlw	0
 32260  0002DC  0100               	movlb	0	; () banked
 32261  0002DE  6F8B               	movwf	___fldiv@a& (0+255),b
 32262  0002E0  0E00               	movlw	0
 32263  0002E2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32264  0002E4  0E80               	movlw	128
 32265  0002E6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32266  0002E8  0E40               	movlw	64
 32267  0002EA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32268  0002EC  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32269  0002F0  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32270  0002F4  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32271  0002F8  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32272  0002FC  ECA9  F011         	call	___fldiv	;wreg free
 32273  000300  C087  F0A4         	movff	?___fldiv,___fladd@b
 32274  000304  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 32275  000308  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 32276  00030C  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 32277  000310  ECB4  F008         	call	___fladd	;wreg free
 32278  000314  C0A4  F0BC         	movff	?___fladd,___flge@ff2
 32279  000318  C0A5  F0BD         	movff	?___fladd+1,___flge@ff2+1
 32280  00031C  C0A6  F0BE         	movff	?___fladd+2,___flge@ff2+2
 32281  000320  C0A7  F0BF         	movff	?___fladd+3,___flge@ff2+3
 32282  000324  EC5D  F023         	call	___flge	;wreg free
 32283  000328  0100               	movlb	0	; () banked
 32284  00032A  B0D8               	btfsc	status,0,c
 32285  00032C  D0AE               	goto	l14598
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;data.c: 505: f1=f1-D/4;
 32289  00032E  0E00               	movlw	0
 32290  000330  0100               	movlb	0	; () banked
 32291  000332  6F8B               	movwf	___fldiv@a& (0+255),b
 32292  000334  0E00               	movlw	0
 32293  000336  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32294  000338  0E80               	movlw	128
 32295  00033A  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32296  00033C  0E40               	movlw	64
 32297  00033E  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32298  000340  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32299  000344  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32300  000348  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32301  00034C  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32302  000350  ECA9  F011         	call	___fldiv	;wreg free
 32303  000354  C087  F0A0         	movff	?___fldiv,___flneg@f1
 32304  000358  C088  F0A1         	movff	?___fldiv+1,___flneg@f1+1
 32305  00035C  C089  F0A2         	movff	?___fldiv+2,___flneg@f1+2
 32306  000360  C08A  F0A3         	movff	?___fldiv+3,___flneg@f1+3
 32307  000364  EC76  F04D         	call	___flneg	;wreg free
 32308  000368  C0A0  F0A4         	movff	?___flneg,___fladd@b
 32309  00036C  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 32310  000370  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 32311  000374  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 32312  000378  C3DE  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 32313  00037C  C3DF  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 32314  000380  C3E0  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 32315  000384  C3E1  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 32316  000388  ECB4  F008         	call	___fladd	;wreg free
 32317  00038C  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32318  000390  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32319  000394  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32320  000398  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32321                           
 32322                           ;data.c: 506: v2=v2*(f1/stSysData.h);
 32323  00039C  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32324  0003A0  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32325  0003A4  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32326  0003A8  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32327  0003AC  0E01               	movlw	1
 32328  0003AE  ECDA  F01F         	call	___xxtofl
 32329  0003B2  C060  F08B         	movff	?___xxtofl,___fldiv@a
 32330  0003B6  C061  F08C         	movff	?___xxtofl+1,___fldiv@a+1
 32331  0003BA  C062  F08D         	movff	?___xxtofl+2,___fldiv@a+2
 32332  0003BE  C063  F08E         	movff	?___xxtofl+3,___fldiv@a+3
 32333  0003C2  C3DE  F087         	movff	cal_diff_hight_to_vol_v@f1,___fldiv@b
 32334  0003C6  C3DF  F088         	movff	cal_diff_hight_to_vol_v@f1+1,___fldiv@b+1
 32335  0003CA  C3E0  F089         	movff	cal_diff_hight_to_vol_v@f1+2,___fldiv@b+2
 32336  0003CE  C3E1  F08A         	movff	cal_diff_hight_to_vol_v@f1+3,___fldiv@b+3
 32337  0003D2  ECA9  F011         	call	___fldiv	;wreg free
 32338  0003D6  C087  F06E         	movff	?___fldiv,___flmul@b
 32339  0003DA  C088  F06F         	movff	?___fldiv+1,___flmul@b+1
 32340  0003DE  C089  F070         	movff	?___fldiv+2,___flmul@b+2
 32341  0003E2  C08A  F071         	movff	?___fldiv+3,___flmul@b+3
 32342  0003E6  C3D6  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 32343  0003EA  C3D7  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 32344  0003EE  C3D8  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 32345  0003F2  C3D9  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 32346  0003F6  EC08  F00B         	call	___flmul	;wreg free
 32347  0003FA  C06E  F3D6         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 32348  0003FE  C06F  F3D7         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 32349  000402  C070  F3D8         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 32350  000406  C071  F3D9         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 32351                           
 32352                           ;data.c: 507: v1=v1/2;
 32353  00040A  C3D2  F087         	movff	cal_diff_hight_to_vol_v@v1,___fldiv@b
 32354  00040E  C3D3  F088         	movff	cal_diff_hight_to_vol_v@v1+1,___fldiv@b+1
 32355  000412  C3D4  F089         	movff	cal_diff_hight_to_vol_v@v1+2,___fldiv@b+2
 32356  000416  C3D5  F08A         	movff	cal_diff_hight_to_vol_v@v1+3,___fldiv@b+3
 32357  00041A  0E00               	movlw	0
 32358  00041C  0100               	movlb	0	; () banked
 32359  00041E  6F8B               	movwf	___fldiv@a& (0+255),b
 32360  000420  0E00               	movlw	0
 32361  000422  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32362  000424  0E00               	movlw	0
 32363  000426  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32364  000428  0E40               	movlw	64
 32365  00042A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32366  00042C  ECA9  F011         	call	___fldiv	;wreg free
 32367  000430  C087  F3D2         	movff	?___fldiv,cal_diff_hight_to_vol_v@v1
 32368  000434  C088  F3D3         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@v1+1
 32369  000438  C089  F3D4         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@v1+2
 32370  00043C  C08A  F3D5         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@v1+3
 32371                           
 32372                           ;data.c: 508: return (int32_t)(v1+v2);
 32373  000440  C3D6  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 32374  000444  C3D7  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 32375  000448  C3D8  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 32376  00044C  C3D9  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 32377  000450  C3D2  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 32378  000454  C3D3  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 32379  000458  C3D4  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 32380  00045C  C3D5  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 32381  000460  ECB4  F008         	call	___fladd	;wreg free
 32382  000464  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 32383  000468  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 32384  00046C  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 32385  000470  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 32386  000474  EC43  F02E         	call	___fltol	;wreg free
 32387  000478  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 32388  00047C  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 32389  000480  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 32390  000484  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 32391                           
 32392                           ;data.c: 509: }else{
 32393  000488  0012               	return	
 32394  00048A                     l14598:
 32395                           
 32396                           ;data.c: 510: if(f1>(float)(stSysData.h)+D/2)f1=(float)(stSysData.h)+D/2;
 32397  00048A  0E00               	movlw	0
 32398  00048C  0100               	movlb	0	; () banked
 32399  00048E  6F8B               	movwf	___fldiv@a& (0+255),b
 32400  000490  0E00               	movlw	0
 32401  000492  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32402  000494  0E00               	movlw	0
 32403  000496  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32404  000498  0E40               	movlw	64
 32405  00049A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32406  00049C  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32407  0004A0  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32408  0004A4  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32409  0004A8  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32410  0004AC  ECA9  F011         	call	___fldiv	;wreg free
 32411  0004B0  C087  F0A8         	movff	?___fldiv,___fladd@a
 32412  0004B4  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 32413  0004B8  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 32414  0004BC  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 32415  0004C0  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32416  0004C4  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32417  0004C8  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32418  0004CC  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32419  0004D0  0E01               	movlw	1
 32420  0004D2  ECDA  F01F         	call	___xxtofl
 32421  0004D6  C060  F0A4         	movff	?___xxtofl,___fladd@b
 32422  0004DA  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 32423  0004DE  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 32424  0004E2  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 32425  0004E6  ECB4  F008         	call	___fladd	;wreg free
 32426  0004EA  C0A4  F0B8         	movff	?___fladd,___flge@ff1
 32427  0004EE  C0A5  F0B9         	movff	?___fladd+1,___flge@ff1+1
 32428  0004F2  C0A6  F0BA         	movff	?___fladd+2,___flge@ff1+2
 32429  0004F6  C0A7  F0BB         	movff	?___fladd+3,___flge@ff1+3
 32430  0004FA  C3DE  F0BC         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff2
 32431  0004FE  C3DF  F0BD         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff2+1
 32432  000502  C3E0  F0BE         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff2+2
 32433  000506  C3E1  F0BF         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff2+3
 32434  00050A  EC5D  F023         	call	___flge	;wreg free
 32435  00050E  0100               	movlb	0	; () banked
 32436  000510  B0D8               	btfsc	status,0,c
 32437  000512  D038               	goto	l176
 32438                           
 32439                           ; BSR set to: 0
 32440  000514  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32441  000518  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32442  00051C  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32443  000520  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32444  000524  0E01               	movlw	1
 32445  000526  ECDA  F01F         	call	___xxtofl
 32446  00052A  C060  F0A4         	movff	?___xxtofl,___fladd@b
 32447  00052E  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 32448  000532  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 32449  000536  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 32450  00053A  0E00               	movlw	0
 32451  00053C  0100               	movlb	0	; () banked
 32452  00053E  6F8B               	movwf	___fldiv@a& (0+255),b
 32453  000540  0E00               	movlw	0
 32454  000542  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32455  000544  0E00               	movlw	0
 32456  000546  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32457  000548  0E40               	movlw	64
 32458  00054A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32459  00054C  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32460  000550  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32461  000554  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32462  000558  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32463  00055C  ECA9  F011         	call	___fldiv	;wreg free
 32464  000560  C087  F0A8         	movff	?___fldiv,___fladd@a
 32465  000564  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 32466  000568  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 32467  00056C  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 32468  000570  ECB4  F008         	call	___fladd	;wreg free
 32469  000574  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32470  000578  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32471  00057C  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32472  000580  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32473  000584                     l176:
 32474                           
 32475                           ;data.c: 512: f1=f1-(D/4)-(float)(stSysData.h);
 32476  000584  C208  F060         	movff	_stSysData+8,___xxtofl@val
 32477  000588  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 32478  00058C  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 32479  000590  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 32480  000594  0E01               	movlw	1
 32481  000596  ECDA  F01F         	call	___xxtofl
 32482  00059A  C060  F0A8         	movff	?___xxtofl,___fladd@a
 32483  00059E  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 32484  0005A2  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 32485  0005A6  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 32486  0005AA  0E00               	movlw	0
 32487  0005AC  0100               	movlb	0	; () banked
 32488  0005AE  6F8B               	movwf	___fldiv@a& (0+255),b
 32489  0005B0  0E00               	movlw	0
 32490  0005B2  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 32491  0005B4  0E80               	movlw	128
 32492  0005B6  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 32493  0005B8  0E40               	movlw	64
 32494  0005BA  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 32495  0005BC  C3DA  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 32496  0005C0  C3DB  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 32497  0005C4  C3DC  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 32498  0005C8  C3DD  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 32499  0005CC  ECA9  F011         	call	___fldiv	;wreg free
 32500  0005D0  C087  F0A4         	movff	?___fldiv,___fladd@b
 32501  0005D4  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 32502  0005D8  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 32503  0005DC  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 32504  0005E0  ECB4  F008         	call	___fladd	;wreg free
 32505  0005E4  C0A4  F0A0         	movff	?___fladd,___flneg@f1
 32506  0005E8  C0A5  F0A1         	movff	?___fladd+1,___flneg@f1+1
 32507  0005EC  C0A6  F0A2         	movff	?___fladd+2,___flneg@f1+2
 32508  0005F0  C0A7  F0A3         	movff	?___fladd+3,___flneg@f1+3
 32509  0005F4  EC76  F04D         	call	___flneg	;wreg free
 32510  0005F8  C0A0  F3CE         	movff	?___flneg,_cal_diff_hight_to_vol_v$5872
 32511  0005FC  C0A1  F3CF         	movff	?___flneg+1,_cal_diff_hight_to_vol_v$5872+1
 32512  000600  C0A2  F3D0         	movff	?___flneg+2,_cal_diff_hight_to_vol_v$5872+2
 32513  000604  C0A3  F3D1         	movff	?___flneg+3,_cal_diff_hight_to_vol_v$5872+3
 32514                           
 32515                           ;data.c: 512: f1=f1-(D/4)-(float)(stSysData.h);
 32516  000608  C3CE  F0A4         	movff	_cal_diff_hight_to_vol_v$5872,___fladd@b
 32517  00060C  C3CF  F0A5         	movff	_cal_diff_hight_to_vol_v$5872+1,___fladd@b+1
 32518  000610  C3D0  F0A6         	movff	_cal_diff_hight_to_vol_v$5872+2,___fladd@b+2
 32519  000614  C3D1  F0A7         	movff	_cal_diff_hight_to_vol_v$5872+3,___fladd@b+3
 32520  000618  C3DE  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 32521  00061C  C3DF  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 32522  000620  C3E0  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 32523  000624  C3E1  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 32524  000628  ECB4  F008         	call	___fladd	;wreg free
 32525  00062C  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32526  000630  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32527  000634  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32528  000638  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32529                           
 32530                           ;data.c: 513: f1=2*f1/D;
 32531  00063C  0E00               	movlw	0
 32532  00063E  0100               	movlb	0	; () banked
 32533  000640  6F72               	movwf	___flmul@a& (0+255),b
 32534  000642  0E00               	movlw	0
 32535  000644  6F73               	movwf	(___flmul@a+1)& (0+255),b
 32536  000646  0E00               	movlw	0
 32537  000648  6F74               	movwf	(___flmul@a+2)& (0+255),b
 32538  00064A  0E40               	movlw	64
 32539  00064C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 32540  00064E  C3DE  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 32541  000652  C3DF  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 32542  000656  C3E0  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 32543  00065A  C3E1  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 32544  00065E  EC08  F00B         	call	___flmul	;wreg free
 32545  000662  C06E  F087         	movff	?___flmul,___fldiv@b
 32546  000666  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 32547  00066A  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 32548  00066E  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 32549  000672  C3DA  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 32550  000676  C3DB  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 32551  00067A  C3DC  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 32552  00067E  C3DD  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 32553  000682  ECA9  F011         	call	___fldiv	;wreg free
 32554  000686  C087  F3DE         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 32555  00068A  C088  F3DF         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 32556  00068E  C089  F3E0         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 32557  000692  C08A  F3E1         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 32558                           
 32559                           ;data.c: 514: f1=0.5-f1;
 32560  000696  C3DE  F0A0         	movff	cal_diff_hight_to_vol_v@f1,___flneg@f1
 32561  00069A  C3DF  F0A1         	movff	cal_diff_hight_to_vol_v@f1+1,___flneg@f1+1
 32562  00069E  C3E0  F0A2         	movff	cal_diff_hight_to_vol_v@f1+2,___flneg@f1+2
 32563  0006A2  C3E1  F0A3         	movff	cal_diff_hight_to_vol_v@f1+3,___flneg@f1+3
 32564  0006A6  EC76  F04D         	call	___flneg	;wreg free
 32565  0006AA  C0A0  F0A4         	movff	?___flneg,___fladd@b
 32566  0006AE  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 32567  0006B2  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 32568  0006B6  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 32569  0006BA  0E00               	movlw	0
 32570  0006BC  0100               	movlb	0	; () banked
 32571  0006BE  6FA8               	movwf	___fladd@a& (0+255),b
 32572  0006C0  0E00               	movlw	0
 32573  0006C2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 32574  0006C4  0E00               	movlw	0
 32575  0006C6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 32576  0006C8  0E3F               	movlw	63
 32577  0006CA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 32578  0006CC  ECB4  F008         	call	___fladd	;wreg free
 32579  0006D0  C0A4  F3DE         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 32580  0006D4  C0A5  F3DF         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 32581  0006D8  C0A6  F3E0         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 32582  0006DC  C0A7  F3E1         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 32583                           
 32584                           ;data.c: 515: v2=v2*(0.5+f1);
 32585  0006E0  0E00               	movlw	0
 32586  0006E2  0100               	movlb	0	; () banked
 32587  0006E4  6FA8               	movwf	___fladd@a& (0+255),b
 32588  0006E6  0E00               	movlw	0
 32589  0006E8  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 32590  0006EA  0E00               	movlw	0
 32591  0006EC  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 32592  0006EE  0E3F               	movlw	63
 32593  0006F0  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 32594  0006F2  C3DE  F0A4         	movff	cal_diff_hight_to_vol_v@f1,___fladd@b
 32595  0006F6  C3DF  F0A5         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@b+1
 32596  0006FA  C3E0  F0A6         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@b+2
 32597  0006FE  C3E1  F0A7         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@b+3
 32598  000702  ECB4  F008         	call	___fladd	;wreg free
 32599  000706  C0A4  F06E         	movff	?___fladd,___flmul@b
 32600  00070A  C0A5  F06F         	movff	?___fladd+1,___flmul@b+1
 32601  00070E  C0A6  F070         	movff	?___fladd+2,___flmul@b+2
 32602  000712  C0A7  F071         	movff	?___fladd+3,___flmul@b+3
 32603  000716  C3D6  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 32604  00071A  C3D7  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 32605  00071E  C3D8  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 32606  000722  C3D9  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 32607  000726  EC08  F00B         	call	___flmul	;wreg free
 32608  00072A  C06E  F3D6         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 32609  00072E  C06F  F3D7         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 32610  000732  C070  F3D8         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 32611  000736  C071  F3D9         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 32612                           
 32613                           ;data.c: 516: return (int32_t)(v1+v2);
 32614  00073A  C3D6  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 32615  00073E  C3D7  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 32616  000742  C3D8  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 32617  000746  C3D9  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 32618  00074A  C3D2  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 32619  00074E  C3D3  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 32620  000752  C3D4  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 32621  000756  C3D5  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 32622  00075A  ECB4  F008         	call	___fladd	;wreg free
 32623  00075E  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 32624  000762  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 32625  000766  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 32626  00076A  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 32627  00076E  EC43  F02E         	call	___fltol	;wreg free
 32628  000772  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 32629  000776  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 32630  00077A  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 32631  00077E  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 32632  000782  0012               	return	
 32633  000784                     __end_of_cal_diff_hight_to_vol_v:
 32634                           	opt stack 0
 32635                           tosu	equ	0xFFF
 32636                           tosh	equ	0xFFE
 32637                           tosl	equ	0xFFD
 32638                           pclath	equ	0xFFA
 32639                           tblptru	equ	0xFF8
 32640                           tblptrh	equ	0xFF7
 32641                           tblptrl	equ	0xFF6
 32642                           tablat	equ	0xFF5
 32643                           prodh	equ	0xFF4
 32644                           prodl	equ	0xFF3
 32645                           intcon	equ	0xFF2
 32646                           indf0	equ	0xFEF
 32647                           postinc0	equ	0xFEE
 32648                           fsr0h	equ	0xFEA
 32649                           fsr0l	equ	0xFE9
 32650                           wreg	equ	0xFE8
 32651                           indf1	equ	0xFE7
 32652                           postinc1	equ	0xFE6
 32653                           postdec1	equ	0xFE5
 32654                           plusw1	equ	0xFE3
 32655                           fsr1h	equ	0xFE2
 32656                           fsr1l	equ	0xFE1
 32657                           indf2	equ	0xFDF
 32658                           postinc2	equ	0xFDE
 32659                           postdec2	equ	0xFDD
 32660                           plusw2	equ	0xFDB
 32661                           fsr2h	equ	0xFDA
 32662                           fsr2l	equ	0xFD9
 32663                           status	equ	0xFD8
 32664                           
 32665 ;; *************** function _cal_diff_hight_to_vol_h *****************
 32666 ;; Defined at:
 32667 ;;		line 446 in file "src/api/data.c"
 32668 ;; Parameters:    Size  Location     Type
 32669 ;;  h               4    0[BANK3 ] long 
 32670 ;; Auto vars:     Size  Location     Type
 32671 ;;  f1              4   16[BANK3 ] float 
 32672 ;;  v1              4   12[BANK3 ] float 
 32673 ;;  f2              4    8[BANK3 ] float 
 32674 ;;  v2              4    4[BANK3 ] float 
 32675 ;; Return value:  Size  Location     Type
 32676 ;;                  4    0[BANK3 ] long 
 32677 ;; Registers used:
 32678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32679 ;; Tracked objects:
 32680 ;;		On entry : 0/0
 32681 ;;		On exit  : 0/0
 32682 ;;		Unchanged: 0/0
 32683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32684 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32685 ;;      Locals:         0       0       0       0      16       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32687 ;;      Totals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32688 ;;Total ram usage:       20 bytes
 32689 ;; Hardware stack levels used:    1
 32690 ;; Hardware stack levels required when called:    6
 32691 ;; This function calls:
 32692 ;;		___fladd
 32693 ;;		___fldiv
 32694 ;;		___flge
 32695 ;;		___flmul
 32696 ;;		___fltol
 32697 ;;		___xxtofl
 32698 ;;		_m_interp1_float_fast
 32699 ;; This function is called by:
 32700 ;;		_cal_diff_press
 32701 ;; This function uses a non-reentrant model
 32702 ;;
 32703                           
 32704                           	psect	text176
 32705  003358                     __ptext176:
 32706                           	opt stack 0
 32707  003358                     _cal_diff_hight_to_vol_h:
 32708                           	opt stack 20
 32709                           
 32710                           ;data.c: 448: float v1,v2;
 32711                           ;data.c: 449: float f1,f2;
 32712                           ;data.c: 450: f1=(float)h;
 32713                           
 32714                           ;incstack = 0
 32715  003358  C3CA  F060         	movff	cal_diff_hight_to_vol_h@h,___xxtofl@val
 32716  00335C  C3CB  F061         	movff	cal_diff_hight_to_vol_h@h+1,___xxtofl@val+1
 32717  003360  C3CC  F062         	movff	cal_diff_hight_to_vol_h@h+2,___xxtofl@val+2
 32718  003364  C3CD  F063         	movff	cal_diff_hight_to_vol_h@h+3,___xxtofl@val+3
 32719  003368  0E01               	movlw	1
 32720  00336A  ECDA  F01F         	call	___xxtofl
 32721  00336E  C060  F3DA         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f1
 32722  003372  C061  F3DB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f1+1
 32723  003376  C062  F3DC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f1+2
 32724  00337A  C063  F3DD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f1+3
 32725                           
 32726                           ;data.c: 451: if(f1<0.0)f1=0.0;
 32727  00337E  0103               	movlb	3	; () banked
 32728  003380  AFDD               	btfss	(cal_diff_hight_to_vol_h@f1+3)& (0+255),7,b
 32729  003382  D009               	goto	l14508
 32730                           
 32731                           ; BSR set to: 3
 32732  003384  0E00               	movlw	0
 32733  003386  0103               	movlb	3	; () banked
 32734  003388  6FDA               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 32735  00338A  0E00               	movlw	0
 32736  00338C  6FDB               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 32737  00338E  0E00               	movlw	0
 32738  003390  6FDC               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 32739  003392  0E00               	movlw	0
 32740  003394  6FDD               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 32741  003396                     l14508:
 32742                           
 32743                           ; BSR set to: 3
 32744                           ;data.c: 452: f2=(float)(stSysData.d);
 32745  003396  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 32746  00339A  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 32747  00339E  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 32748  0033A2  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 32749  0033A6  0E00               	movlw	0
 32750  0033A8  ECDA  F01F         	call	___xxtofl
 32751  0033AC  C060  F3D2         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f2
 32752  0033B0  C061  F3D3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f2+1
 32753  0033B4  C062  F3D4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f2+2
 32754  0033B8  C063  F3D5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f2+3
 32755                           
 32756                           ;data.c: 453: f1=f1/f2;
 32757  0033BC  C3DA  F087         	movff	cal_diff_hight_to_vol_h@f1,___fldiv@b
 32758  0033C0  C3DB  F088         	movff	cal_diff_hight_to_vol_h@f1+1,___fldiv@b+1
 32759  0033C4  C3DC  F089         	movff	cal_diff_hight_to_vol_h@f1+2,___fldiv@b+2
 32760  0033C8  C3DD  F08A         	movff	cal_diff_hight_to_vol_h@f1+3,___fldiv@b+3
 32761  0033CC  C3D2  F08B         	movff	cal_diff_hight_to_vol_h@f2,___fldiv@a
 32762  0033D0  C3D3  F08C         	movff	cal_diff_hight_to_vol_h@f2+1,___fldiv@a+1
 32763  0033D4  C3D4  F08D         	movff	cal_diff_hight_to_vol_h@f2+2,___fldiv@a+2
 32764  0033D8  C3D5  F08E         	movff	cal_diff_hight_to_vol_h@f2+3,___fldiv@a+3
 32765  0033DC  ECA9  F011         	call	___fldiv	;wreg free
 32766  0033E0  C087  F3DA         	movff	?___fldiv,cal_diff_hight_to_vol_h@f1
 32767  0033E4  C088  F3DB         	movff	?___fldiv+1,cal_diff_hight_to_vol_h@f1+1
 32768  0033E8  C089  F3DC         	movff	?___fldiv+2,cal_diff_hight_to_vol_h@f1+2
 32769  0033EC  C08A  F3DD         	movff	?___fldiv+3,cal_diff_hight_to_vol_h@f1+3
 32770                           
 32771                           ;data.c: 454: if(f1>1.0)f1=1.0;
 32772  0033F0  0E00               	movlw	0
 32773  0033F2  0100               	movlb	0	; () banked
 32774  0033F4  6FB8               	movwf	___flge@ff1& (0+255),b
 32775  0033F6  0E00               	movlw	0
 32776  0033F8  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 32777  0033FA  0E80               	movlw	128
 32778  0033FC  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 32779  0033FE  0E3F               	movlw	63
 32780  003400  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 32781  003402  C3DA  F0BC         	movff	cal_diff_hight_to_vol_h@f1,___flge@ff2
 32782  003406  C3DB  F0BD         	movff	cal_diff_hight_to_vol_h@f1+1,___flge@ff2+1
 32783  00340A  C3DC  F0BE         	movff	cal_diff_hight_to_vol_h@f1+2,___flge@ff2+2
 32784  00340E  C3DD  F0BF         	movff	cal_diff_hight_to_vol_h@f1+3,___flge@ff2+3
 32785  003412  EC5D  F023         	call	___flge	;wreg free
 32786  003416  0100               	movlb	0	; () banked
 32787  003418  B0D8               	btfsc	status,0,c
 32788  00341A  D009               	goto	l14516
 32789                           
 32790                           ; BSR set to: 0
 32791  00341C  0E00               	movlw	0
 32792  00341E  0103               	movlb	3	; () banked
 32793  003420  6FDA               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 32794  003422  0E00               	movlw	0
 32795  003424  6FDB               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 32796  003426  0E80               	movlw	128
 32797  003428  6FDC               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 32798  00342A  0E3F               	movlw	63
 32799  00342C  6FDD               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 32800  00342E                     l14516:
 32801                           
 32802                           ;data.c: 456: f2=f1;
 32803  00342E  C3DA  F3D2         	movff	cal_diff_hight_to_vol_h@f1,cal_diff_hight_to_vol_h@f2
 32804  003432  C3DB  F3D3         	movff	cal_diff_hight_to_vol_h@f1+1,cal_diff_hight_to_vol_h@f2+1
 32805  003436  C3DC  F3D4         	movff	cal_diff_hight_to_vol_h@f1+2,cal_diff_hight_to_vol_h@f2+2
 32806  00343A  C3DD  F3D5         	movff	cal_diff_hight_to_vol_h@f1+3,cal_diff_hight_to_vol_h@f2+3
 32807                           
 32808                           ;data.c: 457: f1=m_interp1_float_fast((float*)hKcy,f1,sizeof(hKcy)/sizeof(hKcy[0]));
 32809  00343E  0EB1               	movlw	low _hKcy
 32810  003440  0100               	movlb	0	; () banked
 32811  003442  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 32812  003444  0EF0               	movlw	high _hKcy
 32813  003446  0100               	movlb	0	; () banked
 32814  003448  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 32815  00344A  C3DA  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 32816  00344E  C3DB  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 32817  003452  C3DC  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 32818  003456  C3DD  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 32819  00345A  0E00               	movlw	0
 32820  00345C  0100               	movlb	0	; () banked
 32821  00345E  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 32822  003460  0E65               	movlw	101
 32823  003462  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 32824  003464  EC95  F00F         	call	_m_interp1_float_fast	;wreg free
 32825  003468  C0C4  F3DA         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 32826  00346C  C0C5  F3DB         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 32827  003470  C0C6  F3DC         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 32828  003474  C0C7  F3DD         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 32829                           
 32830                           ;data.c: 458: v1=(float)(stSysData.V1);
 32831  003478  C210  F060         	movff	_stSysData+16,___xxtofl@val
 32832  00347C  C211  F061         	movff	_stSysData+17,___xxtofl@val+1
 32833  003480  C212  F062         	movff	_stSysData+18,___xxtofl@val+2
 32834  003484  C213  F063         	movff	_stSysData+19,___xxtofl@val+3
 32835  003488  0E01               	movlw	1
 32836  00348A  ECDA  F01F         	call	___xxtofl
 32837  00348E  C060  F3D6         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v1
 32838  003492  C061  F3D7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v1+1
 32839  003496  C062  F3D8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v1+2
 32840  00349A  C063  F3D9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v1+3
 32841                           
 32842                           ;data.c: 459: v1=v1*f1;
 32843  00349E  C3D6  F06E         	movff	cal_diff_hight_to_vol_h@v1,___flmul@b
 32844  0034A2  C3D7  F06F         	movff	cal_diff_hight_to_vol_h@v1+1,___flmul@b+1
 32845  0034A6  C3D8  F070         	movff	cal_diff_hight_to_vol_h@v1+2,___flmul@b+2
 32846  0034AA  C3D9  F071         	movff	cal_diff_hight_to_vol_h@v1+3,___flmul@b+3
 32847  0034AE  C3DA  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 32848  0034B2  C3DB  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 32849  0034B6  C3DC  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 32850  0034BA  C3DD  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 32851  0034BE  EC08  F00B         	call	___flmul	;wreg free
 32852  0034C2  C06E  F3D6         	movff	?___flmul,cal_diff_hight_to_vol_h@v1
 32853  0034C6  C06F  F3D7         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v1+1
 32854  0034CA  C070  F3D8         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v1+2
 32855  0034CE  C071  F3D9         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v1+3
 32856                           
 32857                           ;data.c: 461: f1=f2;
 32858  0034D2  C3D2  F3DA         	movff	cal_diff_hight_to_vol_h@f2,cal_diff_hight_to_vol_h@f1
 32859  0034D6  C3D3  F3DB         	movff	cal_diff_hight_to_vol_h@f2+1,cal_diff_hight_to_vol_h@f1+1
 32860  0034DA  C3D4  F3DC         	movff	cal_diff_hight_to_vol_h@f2+2,cal_diff_hight_to_vol_h@f1+2
 32861  0034DE  C3D5  F3DD         	movff	cal_diff_hight_to_vol_h@f2+3,cal_diff_hight_to_vol_h@f1+3
 32862                           
 32863                           ;data.c: 462: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 32864  0034E2  0E1D               	movlw	low _hKel
 32865  0034E4  0100               	movlb	0	; () banked
 32866  0034E6  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 32867  0034E8  0EEF               	movlw	high _hKel
 32868  0034EA  0100               	movlb	0	; () banked
 32869  0034EC  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 32870  0034EE  C3DA  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 32871  0034F2  C3DB  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 32872  0034F6  C3DC  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 32873  0034FA  C3DD  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 32874  0034FE  0E00               	movlw	0
 32875  003500  0100               	movlb	0	; () banked
 32876  003502  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 32877  003504  0E65               	movlw	101
 32878  003506  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 32879  003508  EC95  F00F         	call	_m_interp1_float_fast	;wreg free
 32880  00350C  C0C4  F3DA         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 32881  003510  C0C5  F3DB         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 32882  003514  C0C6  F3DC         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 32883  003518  C0C7  F3DD         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 32884                           
 32885                           ;data.c: 463: v2=(float)(stSysData.V2);
 32886  00351C  C214  F060         	movff	_stSysData+20,___xxtofl@val
 32887  003520  C215  F061         	movff	_stSysData+21,___xxtofl@val+1
 32888  003524  C216  F062         	movff	_stSysData+22,___xxtofl@val+2
 32889  003528  C217  F063         	movff	_stSysData+23,___xxtofl@val+3
 32890  00352C  0E01               	movlw	1
 32891  00352E  ECDA  F01F         	call	___xxtofl
 32892  003532  C060  F3CE         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v2
 32893  003536  C061  F3CF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v2+1
 32894  00353A  C062  F3D0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v2+2
 32895  00353E  C063  F3D1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v2+3
 32896                           
 32897                           ;data.c: 464: v2=v2*f1;
 32898  003542  C3CE  F06E         	movff	cal_diff_hight_to_vol_h@v2,___flmul@b
 32899  003546  C3CF  F06F         	movff	cal_diff_hight_to_vol_h@v2+1,___flmul@b+1
 32900  00354A  C3D0  F070         	movff	cal_diff_hight_to_vol_h@v2+2,___flmul@b+2
 32901  00354E  C3D1  F071         	movff	cal_diff_hight_to_vol_h@v2+3,___flmul@b+3
 32902  003552  C3DA  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 32903  003556  C3DB  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 32904  00355A  C3DC  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 32905  00355E  C3DD  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 32906  003562  EC08  F00B         	call	___flmul	;wreg free
 32907  003566  C06E  F3CE         	movff	?___flmul,cal_diff_hight_to_vol_h@v2
 32908  00356A  C06F  F3CF         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v2+1
 32909  00356E  C070  F3D0         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v2+2
 32910  003572  C071  F3D1         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v2+3
 32911                           
 32912                           ;data.c: 466: v1=v1+v2;
 32913  003576  C3D6  F0A4         	movff	cal_diff_hight_to_vol_h@v1,___fladd@b
 32914  00357A  C3D7  F0A5         	movff	cal_diff_hight_to_vol_h@v1+1,___fladd@b+1
 32915  00357E  C3D8  F0A6         	movff	cal_diff_hight_to_vol_h@v1+2,___fladd@b+2
 32916  003582  C3D9  F0A7         	movff	cal_diff_hight_to_vol_h@v1+3,___fladd@b+3
 32917  003586  C3CE  F0A8         	movff	cal_diff_hight_to_vol_h@v2,___fladd@a
 32918  00358A  C3CF  F0A9         	movff	cal_diff_hight_to_vol_h@v2+1,___fladd@a+1
 32919  00358E  C3D0  F0AA         	movff	cal_diff_hight_to_vol_h@v2+2,___fladd@a+2
 32920  003592  C3D1  F0AB         	movff	cal_diff_hight_to_vol_h@v2+3,___fladd@a+3
 32921  003596  ECB4  F008         	call	___fladd	;wreg free
 32922  00359A  C0A4  F3D6         	movff	?___fladd,cal_diff_hight_to_vol_h@v1
 32923  00359E  C0A5  F3D7         	movff	?___fladd+1,cal_diff_hight_to_vol_h@v1+1
 32924  0035A2  C0A6  F3D8         	movff	?___fladd+2,cal_diff_hight_to_vol_h@v1+2
 32925  0035A6  C0A7  F3D9         	movff	?___fladd+3,cal_diff_hight_to_vol_h@v1+3
 32926                           
 32927                           ;data.c: 467: return (int32_t)v1;
 32928  0035AA  C3D6  F0B8         	movff	cal_diff_hight_to_vol_h@v1,___fltol@f1
 32929  0035AE  C3D7  F0B9         	movff	cal_diff_hight_to_vol_h@v1+1,___fltol@f1+1
 32930  0035B2  C3D8  F0BA         	movff	cal_diff_hight_to_vol_h@v1+2,___fltol@f1+2
 32931  0035B6  C3D9  F0BB         	movff	cal_diff_hight_to_vol_h@v1+3,___fltol@f1+3
 32932  0035BA  EC43  F02E         	call	___fltol	;wreg free
 32933  0035BE  C0B8  F3CA         	movff	?___fltol,?_cal_diff_hight_to_vol_h
 32934  0035C2  C0B9  F3CB         	movff	?___fltol+1,?_cal_diff_hight_to_vol_h+1
 32935  0035C6  C0BA  F3CC         	movff	?___fltol+2,?_cal_diff_hight_to_vol_h+2
 32936  0035CA  C0BB  F3CD         	movff	?___fltol+3,?_cal_diff_hight_to_vol_h+3
 32937  0035CE  0012               	return	
 32938  0035D0                     __end_of_cal_diff_hight_to_vol_h:
 32939                           	opt stack 0
 32940                           tosu	equ	0xFFF
 32941                           tosh	equ	0xFFE
 32942                           tosl	equ	0xFFD
 32943                           pclath	equ	0xFFA
 32944                           tblptru	equ	0xFF8
 32945                           tblptrh	equ	0xFF7
 32946                           tblptrl	equ	0xFF6
 32947                           tablat	equ	0xFF5
 32948                           prodh	equ	0xFF4
 32949                           prodl	equ	0xFF3
 32950                           intcon	equ	0xFF2
 32951                           indf0	equ	0xFEF
 32952                           postinc0	equ	0xFEE
 32953                           fsr0h	equ	0xFEA
 32954                           fsr0l	equ	0xFE9
 32955                           wreg	equ	0xFE8
 32956                           indf1	equ	0xFE7
 32957                           postinc1	equ	0xFE6
 32958                           postdec1	equ	0xFE5
 32959                           plusw1	equ	0xFE3
 32960                           fsr1h	equ	0xFE2
 32961                           fsr1l	equ	0xFE1
 32962                           indf2	equ	0xFDF
 32963                           postinc2	equ	0xFDE
 32964                           postdec2	equ	0xFDD
 32965                           plusw2	equ	0xFDB
 32966                           fsr2h	equ	0xFDA
 32967                           fsr2l	equ	0xFD9
 32968                           status	equ	0xFD8
 32969                           
 32970 ;; *************** function _m_interp1_float_fast *****************
 32971 ;; Defined at:
 32972 ;;		line 417 in file "src/api/data.c"
 32973 ;; Parameters:    Size  Location     Type
 32974 ;;  tab             2  100[BANK0 ] PTR float 
 32975 ;;		 -> hKel(404), hKcy(404), 
 32976 ;;  in              4  102[BANK0 ] float 
 32977 ;;  len             2  106[BANK0 ] int 
 32978 ;; Auto vars:     Size  Location     Type
 32979 ;;  f               4  128[BANK0 ] float 
 32980 ;;  y               4  120[BANK0 ] float 
 32981 ;;  x               4  116[BANK0 ] float 
 32982 ;;  i               2  132[BANK0 ] unsigned int 
 32983 ;; Return value:  Size  Location     Type
 32984 ;;                  4  100[BANK0 ] float 
 32985 ;; Registers used:
 32986 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32987 ;; Tracked objects:
 32988 ;;		On entry : 0/0
 32989 ;;		On exit  : 0/0
 32990 ;;		Unchanged: 0/0
 32991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32992 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32993 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32994 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32995 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32996 ;;Total ram usage:       34 bytes
 32997 ;; Hardware stack levels used:    1
 32998 ;; Hardware stack levels required when called:    5
 32999 ;; This function calls:
 33000 ;;		___fladd
 33001 ;;		___fldiv
 33002 ;;		___flge
 33003 ;;		___flmul
 33004 ;;		___flneg
 33005 ;;		___xxtofl
 33006 ;; This function is called by:
 33007 ;;		_cal_diff_hight_to_vol_h
 33008 ;;		_cal_diff_hight_to_vol_v
 33009 ;; This function uses a non-reentrant model
 33010 ;;
 33011                           
 33012                           	psect	text177
 33013  001F2A                     __ptext177:
 33014                           	opt stack 0
 33015  001F2A                     _m_interp1_float_fast:
 33016                           	opt stack 20
 33017                           
 33018                           ;data.c: 419: uint16_t i;
 33019                           ;data.c: 420: float f,x,y;
 33020                           ;data.c: 421: for(i=0;i<len-1;i++){
 33021                           
 33022                           ;incstack = 0
 33023  001F2A  0E00               	movlw	0
 33024  001F2C  0100               	movlb	0	; () banked
 33025  001F2E  6FE5               	movwf	(m_interp1_float_fast@i+1)& (0+255),b
 33026  001F30  0E00               	movlw	0
 33027  001F32  6FE4               	movwf	m_interp1_float_fast@i& (0+255),b
 33028  001F34  D0D0               	goto	l13970
 33029  001F36                     l13958:
 33030                           
 33031                           ; BSR set to: 0
 33032                           ;data.c: 422: if(tab[i]<tab[i+1]){
 33033  001F36  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33034  001F3A  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33035  001F3E  0100               	movlb	0	; () banked
 33036  001F40  90D8               	bcf	status,0,c
 33037  001F42  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33038  001F44  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33039  001F46  0100               	movlb	0	; () banked
 33040  001F48  90D8               	bcf	status,0,c
 33041  001F4A  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33042  001F4C  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33043  001F4E  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33044  001F52  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33045  001F56  0100               	movlb	0	; () banked
 33046  001F58  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33047  001F5A  0100               	movlb	0	; () banked
 33048  001F5C  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33049  001F5E  0100               	movlb	0	; () banked
 33050  001F60  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33051  001F62  0100               	movlb	0	; () banked
 33052  001F64  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33053  001F66  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33054  001F6A  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33055  001F6E                     	if	0	;tblptru may be non-zero
 33056  001F6E                     	endif
 33057  001F6E                     	if	0	;tblptru may be non-zero
 33058  001F6E                     	endif
 33059  001F6E  0009               	tblrd		*+
 33060  001F70  CFF5 F0B8          	movff	tablat,___flge@ff1
 33061  001F74  0009               	tblrd		*+
 33062  001F76  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 33063  001F7A  0009               	tblrd		*+
 33064  001F7C  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 33065  001F80  000A               	tblrd		*-
 33066  001F82  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 33067  001F86  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 33068  001F8A  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 33069  001F8E  0100               	movlb	0	; () banked
 33070  001F90  90D8               	bcf	status,0,c
 33071  001F92  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33072  001F94  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33073  001F96  0100               	movlb	0	; () banked
 33074  001F98  90D8               	bcf	status,0,c
 33075  001F9A  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33076  001F9C  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33077  001F9E  0E04               	movlw	4
 33078  001FA0  0100               	movlb	0	; () banked
 33079  001FA2  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33080  001FA4  0E00               	movlw	0
 33081  001FA6  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 33082  001FA8  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 33083  001FAC  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 33084  001FB0  0100               	movlb	0	; () banked
 33085  001FB2  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 33086  001FB4  0100               	movlb	0	; () banked
 33087  001FB6  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 33088  001FB8  0100               	movlb	0	; () banked
 33089  001FBA  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 33090  001FBC  0100               	movlb	0	; () banked
 33091  001FBE  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 33092  001FC0  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 33093  001FC4  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 33094  001FC8                     	if	0	;tblptru may be non-zero
 33095  001FC8                     	endif
 33096  001FC8                     	if	0	;tblptru may be non-zero
 33097  001FC8                     	endif
 33098  001FC8  0009               	tblrd		*+
 33099  001FCA  CFF5 F0BC          	movff	tablat,___flge@ff2
 33100  001FCE  0009               	tblrd		*+
 33101  001FD0  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 33102  001FD4  0009               	tblrd		*+
 33103  001FD6  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 33104  001FDA  000A               	tblrd		*-
 33105  001FDC  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 33106  001FE0  EC5D  F023         	call	___flge	;wreg free
 33107  001FE4  0100               	movlb	0	; () banked
 33108  001FE6  B0D8               	btfsc	status,0,c
 33109  001FE8  D03B               	goto	l13964
 33110                           
 33111                           ; BSR set to: 0
 33112                           ;data.c: 423: if(in<=tab[i+1])break;
 33113  001FEA  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33114  001FEE  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33115  001FF2  0100               	movlb	0	; () banked
 33116  001FF4  90D8               	bcf	status,0,c
 33117  001FF6  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33118  001FF8  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33119  001FFA  0100               	movlb	0	; () banked
 33120  001FFC  90D8               	bcf	status,0,c
 33121  001FFE  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33122  002000  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33123  002002  0E04               	movlw	4
 33124  002004  0100               	movlb	0	; () banked
 33125  002006  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 33126  002008  0E00               	movlw	0
 33127  00200A  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 33128  00200C  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33129  002010  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33130  002014  0100               	movlb	0	; () banked
 33131  002016  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33132  002018  0100               	movlb	0	; () banked
 33133  00201A  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33134  00201C  0100               	movlb	0	; () banked
 33135  00201E  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33136  002020  0100               	movlb	0	; () banked
 33137  002022  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33138  002024  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33139  002028  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33140  00202C                     	if	0	;tblptru may be non-zero
 33141  00202C                     	endif
 33142  00202C                     	if	0	;tblptru may be non-zero
 33143  00202C                     	endif
 33144  00202C  0009               	tblrd		*+
 33145  00202E  CFF5 F0B8          	movff	tablat,___flge@ff1
 33146  002032  0009               	tblrd		*+
 33147  002034  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 33148  002038  0009               	tblrd		*+
 33149  00203A  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 33150  00203E  000A               	tblrd		*-
 33151  002040  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 33152  002044  C0C6  F0BC         	movff	m_interp1_float_fast@in,___flge@ff2
 33153  002048  C0C7  F0BD         	movff	m_interp1_float_fast@in+1,___flge@ff2+1
 33154  00204C  C0C8  F0BE         	movff	m_interp1_float_fast@in+2,___flge@ff2+2
 33155  002050  C0C9  F0BF         	movff	m_interp1_float_fast@in+3,___flge@ff2+3
 33156  002054  EC5D  F023         	call	___flge	;wreg free
 33157  002058  0100               	movlb	0	; () banked
 33158  00205A  B0D8               	btfsc	status,0,c
 33159  00205C  D058               	goto	l13972
 33160  00205E  D038               	goto	l13968
 33161  002060                     l13964:
 33162                           
 33163                           ; BSR set to: 0
 33164                           ;data.c: 425: if(in>=tab[i+1])break;
 33165  002060  C0C6  F0B8         	movff	m_interp1_float_fast@in,___flge@ff1
 33166  002064  C0C7  F0B9         	movff	m_interp1_float_fast@in+1,___flge@ff1+1
 33167  002068  C0C8  F0BA         	movff	m_interp1_float_fast@in+2,___flge@ff1+2
 33168  00206C  C0C9  F0BB         	movff	m_interp1_float_fast@in+3,___flge@ff1+3
 33169  002070  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33170  002074  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33171  002078  0100               	movlb	0	; () banked
 33172  00207A  90D8               	bcf	status,0,c
 33173  00207C  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33174  00207E  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33175  002080  0100               	movlb	0	; () banked
 33176  002082  90D8               	bcf	status,0,c
 33177  002084  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33178  002086  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33179  002088  0E04               	movlw	4
 33180  00208A  0100               	movlb	0	; () banked
 33181  00208C  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 33182  00208E  0E00               	movlw	0
 33183  002090  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 33184  002092  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33185  002096  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33186  00209A  0100               	movlb	0	; () banked
 33187  00209C  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33188  00209E  0100               	movlb	0	; () banked
 33189  0020A0  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33190  0020A2  0100               	movlb	0	; () banked
 33191  0020A4  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33192  0020A6  0100               	movlb	0	; () banked
 33193  0020A8  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33194  0020AA  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33195  0020AE  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33196  0020B2                     	if	0	;tblptru may be non-zero
 33197  0020B2                     	endif
 33198  0020B2                     	if	0	;tblptru may be non-zero
 33199  0020B2                     	endif
 33200  0020B2  0009               	tblrd		*+
 33201  0020B4  CFF5 F0BC          	movff	tablat,___flge@ff2
 33202  0020B8  0009               	tblrd		*+
 33203  0020BA  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 33204  0020BE  0009               	tblrd		*+
 33205  0020C0  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 33206  0020C4  000A               	tblrd		*-
 33207  0020C6  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 33208  0020CA  EC5D  F023         	call	___flge	;wreg free
 33209  0020CE  D7C4               	goto	L26
 33210  0020D0                     l13968:
 33211                           
 33212                           ; BSR set to: 0
 33213  0020D0  0100               	movlb	0	; () banked
 33214  0020D2  4BE4               	infsnz	m_interp1_float_fast@i& (0+255),f,b
 33215  0020D4  2BE5               	incf	(m_interp1_float_fast@i+1)& (0+255),f,b
 33216  0020D6                     l13970:
 33217                           
 33218                           ; BSR set to: 0
 33219  0020D6  0EFF               	movlw	255
 33220  0020D8  0100               	movlb	0	; () banked
 33221  0020DA  6FCC               	movwf	??_m_interp1_float_fast& (0+255),b
 33222  0020DC  0EFF               	movlw	255
 33223  0020DE  0100               	movlb	0	; () banked
 33224  0020E0  6FCD               	movwf	(??_m_interp1_float_fast+1)& (0+255),b
 33225  0020E2  C0CA  F0CE         	movff	m_interp1_float_fast@len,??_m_interp1_float_fast+2
 33226  0020E6  C0CB  F0CF         	movff	m_interp1_float_fast@len+1,??_m_interp1_float_fast+3
 33227  0020EA  0100               	movlb	0	; () banked
 33228  0020EC  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33229  0020EE  0100               	movlb	0	; () banked
 33230  0020F0  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33231  0020F2  0100               	movlb	0	; () banked
 33232  0020F4  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33233  0020F6  0100               	movlb	0	; () banked
 33234  0020F8  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33235  0020FA  0100               	movlb	0	; () banked
 33236  0020FC  51CE               	movf	(??_m_interp1_float_fast+2)& (0+255),w,b
 33237  0020FE  0100               	movlb	0	; () banked
 33238  002100  5DE4               	subwf	m_interp1_float_fast@i& (0+255),w,b
 33239  002102  0100               	movlb	0	; () banked
 33240  002104  51CF               	movf	(??_m_interp1_float_fast+3)& (0+255),w,b
 33241  002106  0100               	movlb	0	; () banked
 33242  002108  59E5               	subwfb	(m_interp1_float_fast@i+1)& (0+255),w,b
 33243  00210A  A0D8               	btfss	status,0,c
 33244  00210C  D714               	goto	l13958
 33245  00210E                     l13972:
 33246                           
 33247                           ; BSR set to: 0
 33248                           ;data.c: 426: }
 33249                           ;data.c: 427: }
 33250                           ;data.c: 428: f=tab[i];
 33251  00210E  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33252  002112  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33253  002116  0100               	movlb	0	; () banked
 33254  002118  90D8               	bcf	status,0,c
 33255  00211A  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33256  00211C  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33257  00211E  0100               	movlb	0	; () banked
 33258  002120  90D8               	bcf	status,0,c
 33259  002122  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33260  002124  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33261  002126  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33262  00212A  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33263  00212E  0100               	movlb	0	; () banked
 33264  002130  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33265  002132  0100               	movlb	0	; () banked
 33266  002134  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33267  002136  0100               	movlb	0	; () banked
 33268  002138  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33269  00213A  0100               	movlb	0	; () banked
 33270  00213C  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33271  00213E  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33272  002142  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33273  002146                     	if	0	;tblptru may be non-zero
 33274  002146                     	endif
 33275  002146                     	if	0	;tblptru may be non-zero
 33276  002146                     	endif
 33277  002146  0009               	tblrd		*+
 33278  002148  CFF5 F0E0          	movff	tablat,m_interp1_float_fast@f
 33279  00214C  0009               	tblrd		*+
 33280  00214E  CFF5 F0E1          	movff	tablat,m_interp1_float_fast@f+1
 33281  002152  0009               	tblrd		*+
 33282  002154  CFF5 F0E2          	movff	tablat,m_interp1_float_fast@f+2
 33283  002158  000A               	tblrd		*-
 33284  00215A  CFF5 F0E3          	movff	tablat,m_interp1_float_fast@f+3
 33285                           
 33286                           ; BSR set to: 0
 33287                           ;data.c: 429: x=0.01f;
 33288  00215E  0E0A               	movlw	10
 33289  002160  0100               	movlb	0	; () banked
 33290  002162  6FD4               	movwf	m_interp1_float_fast@x& (0+255),b
 33291  002164  0ED7               	movlw	215
 33292  002166  6FD5               	movwf	(m_interp1_float_fast@x+1)& (0+255),b
 33293  002168  0E23               	movlw	35
 33294  00216A  6FD6               	movwf	(m_interp1_float_fast@x+2)& (0+255),b
 33295  00216C  0E3C               	movlw	60
 33296  00216E  6FD7               	movwf	(m_interp1_float_fast@x+3)& (0+255),b
 33297                           
 33298                           ; BSR set to: 0
 33299                           ;data.c: 430: y=tab[i+1]-tab[i];
 33300  002170  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 33301  002174  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 33302  002178  0100               	movlb	0	; () banked
 33303  00217A  90D8               	bcf	status,0,c
 33304  00217C  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33305  00217E  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33306  002180  0100               	movlb	0	; () banked
 33307  002182  90D8               	bcf	status,0,c
 33308  002184  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 33309  002186  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 33310  002188  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 33311  00218C  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 33312  002190  0100               	movlb	0	; () banked
 33313  002192  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 33314  002194  0100               	movlb	0	; () banked
 33315  002196  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 33316  002198  0100               	movlb	0	; () banked
 33317  00219A  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 33318  00219C  0100               	movlb	0	; () banked
 33319  00219E  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 33320  0021A0  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 33321  0021A4  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 33322  0021A8                     	if	0	;tblptru may be non-zero
 33323  0021A8                     	endif
 33324  0021A8                     	if	0	;tblptru may be non-zero
 33325  0021A8                     	endif
 33326  0021A8  0009               	tblrd		*+
 33327  0021AA  CFF5 F0A0          	movff	tablat,___flneg@f1
 33328  0021AE  0009               	tblrd		*+
 33329  0021B0  CFF5 F0A1          	movff	tablat,___flneg@f1+1
 33330  0021B4  0009               	tblrd		*+
 33331  0021B6  CFF5 F0A2          	movff	tablat,___flneg@f1+2
 33332  0021BA  000A               	tblrd		*-
 33333  0021BC  CFF5 F0A3          	movff	tablat,___flneg@f1+3
 33334  0021C0  EC76  F04D         	call	___flneg	;wreg free
 33335  0021C4  C0A0  F0A4         	movff	?___flneg,___fladd@b
 33336  0021C8  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 33337  0021CC  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 33338  0021D0  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 33339  0021D4  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 33340  0021D8  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 33341  0021DC  0100               	movlb	0	; () banked
 33342  0021DE  90D8               	bcf	status,0,c
 33343  0021E0  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33344  0021E2  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33345  0021E4  0100               	movlb	0	; () banked
 33346  0021E6  90D8               	bcf	status,0,c
 33347  0021E8  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33348  0021EA  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 33349  0021EC  0E04               	movlw	4
 33350  0021EE  0100               	movlb	0	; () banked
 33351  0021F0  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 33352  0021F2  0E00               	movlw	0
 33353  0021F4  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 33354  0021F6  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 33355  0021FA  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 33356  0021FE  0100               	movlb	0	; () banked
 33357  002200  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 33358  002202  0100               	movlb	0	; () banked
 33359  002204  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 33360  002206  0100               	movlb	0	; () banked
 33361  002208  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 33362  00220A  0100               	movlb	0	; () banked
 33363  00220C  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 33364  00220E  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 33365  002212  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 33366  002216                     	if	0	;tblptru may be non-zero
 33367  002216                     	endif
 33368  002216                     	if	0	;tblptru may be non-zero
 33369  002216                     	endif
 33370  002216  0009               	tblrd		*+
 33371  002218  CFF5 F0A8          	movff	tablat,___fladd@a
 33372  00221C  0009               	tblrd		*+
 33373  00221E  CFF5 F0A9          	movff	tablat,___fladd@a+1
 33374  002222  0009               	tblrd		*+
 33375  002224  CFF5 F0AA          	movff	tablat,___fladd@a+2
 33376  002228  000A               	tblrd		*-
 33377  00222A  CFF5 F0AB          	movff	tablat,___fladd@a+3
 33378  00222E  ECB4  F008         	call	___fladd	;wreg free
 33379  002232  C0A4  F0D8         	movff	?___fladd,m_interp1_float_fast@y
 33380  002236  C0A5  F0D9         	movff	?___fladd+1,m_interp1_float_fast@y+1
 33381  00223A  C0A6  F0DA         	movff	?___fladd+2,m_interp1_float_fast@y+2
 33382  00223E  C0A7  F0DB         	movff	?___fladd+3,m_interp1_float_fast@y+3
 33383                           
 33384                           ;data.c: 431: f=f+(in-0.01*i)*(y/x);
 33385  002242  C0C6  F0A8         	movff	m_interp1_float_fast@in,___fladd@a
 33386  002246  C0C7  F0A9         	movff	m_interp1_float_fast@in+1,___fladd@a+1
 33387  00224A  C0C8  F0AA         	movff	m_interp1_float_fast@in+2,___fladd@a+2
 33388  00224E  C0C9  F0AB         	movff	m_interp1_float_fast@in+3,___fladd@a+3
 33389  002252  0E0A               	movlw	10
 33390  002254  0100               	movlb	0	; () banked
 33391  002256  6F72               	movwf	___flmul@a& (0+255),b
 33392  002258  0ED7               	movlw	215
 33393  00225A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 33394  00225C  0E23               	movlw	35
 33395  00225E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 33396  002260  0E3C               	movlw	60
 33397  002262  6F75               	movwf	(___flmul@a+3)& (0+255),b
 33398  002264  C0E4  F060         	movff	m_interp1_float_fast@i,___xxtofl@val
 33399  002268  C0E5  F061         	movff	m_interp1_float_fast@i+1,___xxtofl@val+1
 33400  00226C  0100               	movlb	0	; () banked
 33401  00226E  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 33402  002270  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 33403  002272  0E00               	movlw	0
 33404  002274  ECDA  F01F         	call	___xxtofl
 33405  002278  C060  F06E         	movff	?___xxtofl,___flmul@b
 33406  00227C  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 33407  002280  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 33408  002284  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 33409  002288  EC08  F00B         	call	___flmul	;wreg free
 33410  00228C  C06E  F0A0         	movff	?___flmul,___flneg@f1
 33411  002290  C06F  F0A1         	movff	?___flmul+1,___flneg@f1+1
 33412  002294  C070  F0A2         	movff	?___flmul+2,___flneg@f1+2
 33413  002298  C071  F0A3         	movff	?___flmul+3,___flneg@f1+3
 33414  00229C  EC76  F04D         	call	___flneg	;wreg free
 33415  0022A0  C0A0  F0A4         	movff	?___flneg,___fladd@b
 33416  0022A4  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 33417  0022A8  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 33418  0022AC  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 33419  0022B0  ECB4  F008         	call	___fladd	;wreg free
 33420  0022B4  C0A4  F0DC         	movff	?___fladd,_m_interp1_float_fast$5869
 33421  0022B8  C0A5  F0DD         	movff	?___fladd+1,_m_interp1_float_fast$5869+1
 33422  0022BC  C0A6  F0DE         	movff	?___fladd+2,_m_interp1_float_fast$5869+2
 33423  0022C0  C0A7  F0DF         	movff	?___fladd+3,_m_interp1_float_fast$5869+3
 33424                           
 33425                           ;data.c: 431: f=f+(in-0.01*i)*(y/x);
 33426  0022C4  C0D4  F08B         	movff	m_interp1_float_fast@x,___fldiv@a
 33427  0022C8  C0D5  F08C         	movff	m_interp1_float_fast@x+1,___fldiv@a+1
 33428  0022CC  C0D6  F08D         	movff	m_interp1_float_fast@x+2,___fldiv@a+2
 33429  0022D0  C0D7  F08E         	movff	m_interp1_float_fast@x+3,___fldiv@a+3
 33430  0022D4  C0D8  F087         	movff	m_interp1_float_fast@y,___fldiv@b
 33431  0022D8  C0D9  F088         	movff	m_interp1_float_fast@y+1,___fldiv@b+1
 33432  0022DC  C0DA  F089         	movff	m_interp1_float_fast@y+2,___fldiv@b+2
 33433  0022E0  C0DB  F08A         	movff	m_interp1_float_fast@y+3,___fldiv@b+3
 33434  0022E4  ECA9  F011         	call	___fldiv	;wreg free
 33435  0022E8  C087  F072         	movff	?___fldiv,___flmul@a
 33436  0022EC  C088  F073         	movff	?___fldiv+1,___flmul@a+1
 33437  0022F0  C089  F074         	movff	?___fldiv+2,___flmul@a+2
 33438  0022F4  C08A  F075         	movff	?___fldiv+3,___flmul@a+3
 33439  0022F8  C0DC  F06E         	movff	_m_interp1_float_fast$5869,___flmul@b
 33440  0022FC  C0DD  F06F         	movff	_m_interp1_float_fast$5869+1,___flmul@b+1
 33441  002300  C0DE  F070         	movff	_m_interp1_float_fast$5869+2,___flmul@b+2
 33442  002304  C0DF  F071         	movff	_m_interp1_float_fast$5869+3,___flmul@b+3
 33443  002308  EC08  F00B         	call	___flmul	;wreg free
 33444  00230C  C06E  F0A4         	movff	?___flmul,___fladd@b
 33445  002310  C06F  F0A5         	movff	?___flmul+1,___fladd@b+1
 33446  002314  C070  F0A6         	movff	?___flmul+2,___fladd@b+2
 33447  002318  C071  F0A7         	movff	?___flmul+3,___fladd@b+3
 33448  00231C  C0E0  F0A8         	movff	m_interp1_float_fast@f,___fladd@a
 33449  002320  C0E1  F0A9         	movff	m_interp1_float_fast@f+1,___fladd@a+1
 33450  002324  C0E2  F0AA         	movff	m_interp1_float_fast@f+2,___fladd@a+2
 33451  002328  C0E3  F0AB         	movff	m_interp1_float_fast@f+3,___fladd@a+3
 33452  00232C  ECB4  F008         	call	___fladd	;wreg free
 33453  002330  C0A4  F0E0         	movff	?___fladd,m_interp1_float_fast@f
 33454  002334  C0A5  F0E1         	movff	?___fladd+1,m_interp1_float_fast@f+1
 33455  002338  C0A6  F0E2         	movff	?___fladd+2,m_interp1_float_fast@f+2
 33456  00233C  C0A7  F0E3         	movff	?___fladd+3,m_interp1_float_fast@f+3
 33457                           
 33458                           ;data.c: 432: return f;
 33459  002340  C0E0  F0C4         	movff	m_interp1_float_fast@f,?_m_interp1_float_fast
 33460  002344  C0E1  F0C5         	movff	m_interp1_float_fast@f+1,?_m_interp1_float_fast+1
 33461  002348  C0E2  F0C6         	movff	m_interp1_float_fast@f+2,?_m_interp1_float_fast+2
 33462  00234C  C0E3  F0C7         	movff	m_interp1_float_fast@f+3,?_m_interp1_float_fast+3
 33463  002350  0012               	return	
 33464  002352                     __end_of_m_interp1_float_fast:
 33465                           	opt stack 0
 33466                           tosu	equ	0xFFF
 33467                           tosh	equ	0xFFE
 33468                           tosl	equ	0xFFD
 33469                           pclath	equ	0xFFA
 33470                           tblptru	equ	0xFF8
 33471                           tblptrh	equ	0xFF7
 33472                           tblptrl	equ	0xFF6
 33473                           tablat	equ	0xFF5
 33474                           prodh	equ	0xFF4
 33475                           prodl	equ	0xFF3
 33476                           intcon	equ	0xFF2
 33477                           indf0	equ	0xFEF
 33478                           postinc0	equ	0xFEE
 33479                           fsr0h	equ	0xFEA
 33480                           fsr0l	equ	0xFE9
 33481                           wreg	equ	0xFE8
 33482                           indf1	equ	0xFE7
 33483                           postinc1	equ	0xFE6
 33484                           postdec1	equ	0xFE5
 33485                           plusw1	equ	0xFE3
 33486                           fsr1h	equ	0xFE2
 33487                           fsr1l	equ	0xFE1
 33488                           indf2	equ	0xFDF
 33489                           postinc2	equ	0xFDE
 33490                           postdec2	equ	0xFDD
 33491                           plusw2	equ	0xFDB
 33492                           fsr2h	equ	0xFDA
 33493                           fsr2l	equ	0xFD9
 33494                           status	equ	0xFD8
 33495                           
 33496 ;; *************** function ___flneg *****************
 33497 ;; Defined at:
 33498 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flneg.c"
 33499 ;; Parameters:    Size  Location     Type
 33500 ;;  f1              4   64[BANK0 ] float 
 33501 ;; Auto vars:     Size  Location     Type
 33502 ;;		None
 33503 ;; Return value:  Size  Location     Type
 33504 ;;                  4   64[BANK0 ] float 
 33505 ;; Registers used:
 33506 ;;		wreg, status,2, status,0
 33507 ;; Tracked objects:
 33508 ;;		On entry : 0/0
 33509 ;;		On exit  : 0/0
 33510 ;;		Unchanged: 0/0
 33511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33515 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33516 ;;Total ram usage:        4 bytes
 33517 ;; Hardware stack levels used:    1
 33518 ;; Hardware stack levels required when called:    4
 33519 ;; This function calls:
 33520 ;;		Nothing
 33521 ;; This function is called by:
 33522 ;;		_m_interp1_float_fast
 33523 ;;		_cal_diff_hight_to_vol_v
 33524 ;; This function uses a non-reentrant model
 33525 ;;
 33526                           
 33527                           	psect	text178
 33528  009AEC                     __ptext178:
 33529                           	opt stack 0
 33530  009AEC                     ___flneg:
 33531                           	opt stack 20
 33532                           
 33533                           ;incstack = 0
 33534  009AEC  0100               	movlb	0	; () banked
 33535  009AEE  51A0               	movf	___flneg@f1& (0+255),w,b
 33536  009AF0  0100               	movlb	0	; () banked
 33537  009AF2  11A1               	iorwf	(___flneg@f1+1)& (0+255),w,b
 33538  009AF4  0100               	movlb	0	; () banked
 33539  009AF6  11A2               	iorwf	(___flneg@f1+2)& (0+255),w,b
 33540  009AF8  0100               	movlb	0	; () banked
 33541  009AFA  11A3               	iorwf	(___flneg@f1+3)& (0+255),w,b
 33542  009AFC  B4D8               	btfsc	status,2,c
 33543  009AFE  D009               	goto	l13882
 33544                           
 33545                           ; BSR set to: 0
 33546  009B00  0E00               	movlw	0
 33547  009B02  0100               	movlb	0	; () banked
 33548  009B04  1BA0               	xorwf	___flneg@f1& (0+255),f,b
 33549  009B06  0E00               	movlw	0
 33550  009B08  1BA1               	xorwf	(___flneg@f1+1)& (0+255),f,b
 33551  009B0A  0E00               	movlw	0
 33552  009B0C  1BA2               	xorwf	(___flneg@f1+2)& (0+255),f,b
 33553  009B0E  0E80               	movlw	128
 33554  009B10  1BA3               	xorwf	(___flneg@f1+3)& (0+255),f,b
 33555  009B12                     l13882:
 33556                           
 33557                           ; BSR set to: 0
 33558  009B12  C0A0  F0A0         	movff	___flneg@f1,?___flneg
 33559  009B16  C0A1  F0A1         	movff	___flneg@f1+1,?___flneg+1
 33560  009B1A  C0A2  F0A2         	movff	___flneg@f1+2,?___flneg+2
 33561  009B1E  C0A3  F0A3         	movff	___flneg@f1+3,?___flneg+3
 33562  009B22  0012               	return	
 33563  009B24                     __end_of___flneg:
 33564                           	opt stack 0
 33565                           tosu	equ	0xFFF
 33566                           tosh	equ	0xFFE
 33567                           tosl	equ	0xFFD
 33568                           pclath	equ	0xFFA
 33569                           tblptru	equ	0xFF8
 33570                           tblptrh	equ	0xFF7
 33571                           tblptrl	equ	0xFF6
 33572                           tablat	equ	0xFF5
 33573                           prodh	equ	0xFF4
 33574                           prodl	equ	0xFF3
 33575                           intcon	equ	0xFF2
 33576                           indf0	equ	0xFEF
 33577                           postinc0	equ	0xFEE
 33578                           fsr0h	equ	0xFEA
 33579                           fsr0l	equ	0xFE9
 33580                           wreg	equ	0xFE8
 33581                           indf1	equ	0xFE7
 33582                           postinc1	equ	0xFE6
 33583                           postdec1	equ	0xFE5
 33584                           plusw1	equ	0xFE3
 33585                           fsr1h	equ	0xFE2
 33586                           fsr1l	equ	0xFE1
 33587                           indf2	equ	0xFDF
 33588                           postinc2	equ	0xFDE
 33589                           postdec2	equ	0xFDD
 33590                           plusw2	equ	0xFDB
 33591                           fsr2h	equ	0xFDA
 33592                           fsr2l	equ	0xFD9
 33593                           status	equ	0xFD8
 33594                           
 33595 ;; *************** function _cal_diff_hight_level *****************
 33596 ;; Defined at:
 33597 ;;		line 470 in file "src/api/data.c"
 33598 ;; Parameters:    Size  Location     Type
 33599 ;;		None
 33600 ;; Auto vars:     Size  Location     Type
 33601 ;;  f1              4  112[BANK0 ] float 
 33602 ;;  f2              4  108[BANK0 ] float 
 33603 ;; Return value:  Size  Location     Type
 33604 ;;                  1    wreg      unsigned char 
 33605 ;; Registers used:
 33606 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 33607 ;; Tracked objects:
 33608 ;;		On entry : 0/0
 33609 ;;		On exit  : 0/0
 33610 ;;		Unchanged: 0/0
 33611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33613 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33615 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33616 ;;Total ram usage:       16 bytes
 33617 ;; Hardware stack levels used:    1
 33618 ;; Hardware stack levels required when called:    5
 33619 ;; This function calls:
 33620 ;;		___fladd
 33621 ;;		___fldiv
 33622 ;;		___flge
 33623 ;;		___flmul
 33624 ;;		___fltol
 33625 ;;		___xxtofl
 33626 ;; This function is called by:
 33627 ;;		_cal_diff_press
 33628 ;; This function uses a non-reentrant model
 33629 ;;
 33630                           
 33631                           	psect	text179
 33632  00309E                     __ptext179:
 33633                           	opt stack 0
 33634  00309E                     _cal_diff_hight_level:
 33635                           	opt stack 21
 33636                           
 33637                           ;data.c: 472: float f1,f2;
 33638                           ;data.c: 473: if(stSysData.pos==HOTIZONTAL){
 33639                           
 33640                           ; BSR set to: 0
 33641                           ;incstack = 0
 33642  00309E  0102               	movlb	2	; () banked
 33643  0030A0  5104               	movf	(_stSysData+4)& (0+255),w,b
 33644  0030A2  A4D8               	btfss	status,2,c
 33645  0030A4  D014               	goto	l14542
 33646                           
 33647                           ; BSR set to: 2
 33648                           ;data.c: 474: f1=(float)stSysData.d;
 33649  0030A6  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 33650  0030AA  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 33651  0030AE  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 33652  0030B2  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 33653  0030B6  0E00               	movlw	0
 33654  0030B8  ECDA  F01F         	call	___xxtofl
 33655  0030BC  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 33656  0030C0  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 33657  0030C4  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 33658  0030C8  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 33659                           
 33660                           ;data.c: 475: }else{
 33661  0030CC  D077               	goto	l14544
 33662  0030CE                     l14542:
 33663                           
 33664                           ;data.c: 476: f1=(float)stSysData.h;
 33665  0030CE  C208  F060         	movff	_stSysData+8,___xxtofl@val
 33666  0030D2  C209  F061         	movff	_stSysData+9,___xxtofl@val+1
 33667  0030D6  C20A  F062         	movff	_stSysData+10,___xxtofl@val+2
 33668  0030DA  C20B  F063         	movff	_stSysData+11,___xxtofl@val+3
 33669  0030DE  0E01               	movlw	1
 33670  0030E0  ECDA  F01F         	call	___xxtofl
 33671  0030E4  C060  F0D0         	movff	?___xxtofl,cal_diff_hight_level@f1
 33672  0030E8  C061  F0D1         	movff	?___xxtofl+1,cal_diff_hight_level@f1+1
 33673  0030EC  C062  F0D2         	movff	?___xxtofl+2,cal_diff_hight_level@f1+2
 33674  0030F0  C063  F0D3         	movff	?___xxtofl+3,cal_diff_hight_level@f1+3
 33675                           
 33676                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 33677  0030F4  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 33678  0030F8  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 33679  0030FC  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 33680  003100  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 33681  003104  0E00               	movlw	0
 33682  003106  ECDA  F01F         	call	___xxtofl
 33683  00310A  C060  F0A8         	movff	?___xxtofl,___fladd@a
 33684  00310E  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 33685  003112  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 33686  003116  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 33687  00311A  C20C  F060         	movff	_stSysData+12,___xxtofl@val
 33688  00311E  C20D  F061         	movff	_stSysData+13,___xxtofl@val+1
 33689  003122  C20E  F062         	movff	_stSysData+14,___xxtofl@val+2
 33690  003126  C20F  F063         	movff	_stSysData+15,___xxtofl@val+3
 33691  00312A  0E00               	movlw	0
 33692  00312C  ECDA  F01F         	call	___xxtofl
 33693  003130  C060  F0A4         	movff	?___xxtofl,___fladd@b
 33694  003134  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 33695  003138  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 33696  00313C  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 33697  003140  ECB4  F008         	call	___fladd	;wreg free
 33698  003144  C0A4  F0C4         	movff	?___fladd,_cal_diff_hight_level$5870
 33699  003148  C0A5  F0C5         	movff	?___fladd+1,_cal_diff_hight_level$5870+1
 33700  00314C  C0A6  F0C6         	movff	?___fladd+2,_cal_diff_hight_level$5870+2
 33701  003150  C0A7  F0C7         	movff	?___fladd+3,_cal_diff_hight_level$5870+3
 33702                           
 33703                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 33704  003154  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 33705  003158  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 33706  00315C  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 33707  003160  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 33708  003164  C0C4  F0A4         	movff	_cal_diff_hight_level$5870,___fladd@b
 33709  003168  C0C5  F0A5         	movff	_cal_diff_hight_level$5870+1,___fladd@b+1
 33710  00316C  C0C6  F0A6         	movff	_cal_diff_hight_level$5870+2,___fladd@b+2
 33711  003170  C0C7  F0A7         	movff	_cal_diff_hight_level$5870+3,___fladd@b+3
 33712  003174  ECB4  F008         	call	___fladd	;wreg free
 33713  003178  C0A4  F0C8         	movff	?___fladd,_cal_diff_hight_level$5871
 33714  00317C  C0A5  F0C9         	movff	?___fladd+1,_cal_diff_hight_level$5871+1
 33715  003180  C0A6  F0CA         	movff	?___fladd+2,_cal_diff_hight_level$5871+2
 33716  003184  C0A7  F0CB         	movff	?___fladd+3,_cal_diff_hight_level$5871+3
 33717                           
 33718                           ;data.c: 477: f1=(f1+stSysData.d)+(f1+stSysData.d);
 33719  003188  C0C8  F0A4         	movff	_cal_diff_hight_level$5871,___fladd@b
 33720  00318C  C0C9  F0A5         	movff	_cal_diff_hight_level$5871+1,___fladd@b+1
 33721  003190  C0CA  F0A6         	movff	_cal_diff_hight_level$5871+2,___fladd@b+2
 33722  003194  C0CB  F0A7         	movff	_cal_diff_hight_level$5871+3,___fladd@b+3
 33723  003198  C0D0  F0A8         	movff	cal_diff_hight_level@f1,___fladd@a
 33724  00319C  C0D1  F0A9         	movff	cal_diff_hight_level@f1+1,___fladd@a+1
 33725  0031A0  C0D2  F0AA         	movff	cal_diff_hight_level@f1+2,___fladd@a+2
 33726  0031A4  C0D3  F0AB         	movff	cal_diff_hight_level@f1+3,___fladd@a+3
 33727  0031A8  ECB4  F008         	call	___fladd	;wreg free
 33728  0031AC  C0A4  F0D0         	movff	?___fladd,cal_diff_hight_level@f1
 33729  0031B0  C0A5  F0D1         	movff	?___fladd+1,cal_diff_hight_level@f1+1
 33730  0031B4  C0A6  F0D2         	movff	?___fladd+2,cal_diff_hight_level@f1+2
 33731  0031B8  C0A7  F0D3         	movff	?___fladd+3,cal_diff_hight_level@f1+3
 33732  0031BC                     l14544:
 33733                           
 33734                           ;data.c: 478: }
 33735                           ;data.c: 479: f1=f1*(stSysData.maxValueForlevelBar)/100;
 33736  0031BC  C0D0  F072         	movff	cal_diff_hight_level@f1,___flmul@a
 33737  0031C0  C0D1  F073         	movff	cal_diff_hight_level@f1+1,___flmul@a+1
 33738  0031C4  C0D2  F074         	movff	cal_diff_hight_level@f1+2,___flmul@a+2
 33739  0031C8  C0D3  F075         	movff	cal_diff_hight_level@f1+3,___flmul@a+3
 33740  0031CC  0102               	movlb	2	; () banked
 33741  0031CE  5105               	movf	(_stSysData+5)& (0+255),w,b
 33742  0031D0  0100               	movlb	0	; () banked
 33743  0031D2  6F60               	movwf	___xxtofl@val& (0+255),b
 33744  0031D4  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 33745  0031D6  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 33746  0031D8  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 33747  0031DA  0E00               	movlw	0
 33748  0031DC  ECDA  F01F         	call	___xxtofl
 33749  0031E0  C060  F06E         	movff	?___xxtofl,___flmul@b
 33750  0031E4  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 33751  0031E8  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 33752  0031EC  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 33753  0031F0  EC08  F00B         	call	___flmul	;wreg free
 33754  0031F4  C06E  F087         	movff	?___flmul,___fldiv@b
 33755  0031F8  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 33756  0031FC  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 33757  003200  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 33758  003204  0E00               	movlw	0
 33759  003206  0100               	movlb	0	; () banked
 33760  003208  6F8B               	movwf	___fldiv@a& (0+255),b
 33761  00320A  0E00               	movlw	0
 33762  00320C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 33763  00320E  0EC8               	movlw	200
 33764  003210  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 33765  003212  0E42               	movlw	66
 33766  003214  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 33767  003216  ECA9  F011         	call	___fldiv	;wreg free
 33768  00321A  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 33769  00321E  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 33770  003222  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 33771  003226  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 33772                           
 33773                           ;data.c: 480: if(f1==0)f1=1;
 33774  00322A  0100               	movlb	0	; () banked
 33775  00322C  51D0               	movf	cal_diff_hight_level@f1& (0+255),w,b
 33776  00322E  0100               	movlb	0	; () banked
 33777  003230  11D1               	iorwf	(cal_diff_hight_level@f1+1)& (0+255),w,b
 33778  003232  0100               	movlb	0	; () banked
 33779  003234  11D2               	iorwf	(cal_diff_hight_level@f1+2)& (0+255),w,b
 33780  003236  0100               	movlb	0	; () banked
 33781  003238  11D3               	iorwf	(cal_diff_hight_level@f1+3)& (0+255),w,b
 33782  00323A  A4D8               	btfss	status,2,c
 33783  00323C  D009               	goto	l14550
 33784                           
 33785                           ; BSR set to: 0
 33786  00323E  0E00               	movlw	0
 33787  003240  0100               	movlb	0	; () banked
 33788  003242  6FD0               	movwf	cal_diff_hight_level@f1& (0+255),b
 33789  003244  0E00               	movlw	0
 33790  003246  6FD1               	movwf	(cal_diff_hight_level@f1+1)& (0+255),b
 33791  003248  0E80               	movlw	128
 33792  00324A  6FD2               	movwf	(cal_diff_hight_level@f1+2)& (0+255),b
 33793  00324C  0E3F               	movlw	63
 33794  00324E  6FD3               	movwf	(cal_diff_hight_level@f1+3)& (0+255),b
 33795  003250                     l14550:
 33796                           
 33797                           ; BSR set to: 0
 33798                           ;data.c: 481: f2=(float)rtHight;
 33799  003250  C0E8  F060         	movff	_rtHight,___xxtofl@val	;volatile
 33800  003254  C0E9  F061         	movff	_rtHight+1,___xxtofl@val+1	;volatile
 33801  003258  C0EA  F062         	movff	_rtHight+2,___xxtofl@val+2	;volatile
 33802  00325C  C0EB  F063         	movff	_rtHight+3,___xxtofl@val+3	;volatile
 33803  003260  0E01               	movlw	1
 33804  003262  ECDA  F01F         	call	___xxtofl
 33805  003266  C060  F0CC         	movff	?___xxtofl,cal_diff_hight_level@f2
 33806  00326A  C061  F0CD         	movff	?___xxtofl+1,cal_diff_hight_level@f2+1
 33807  00326E  C062  F0CE         	movff	?___xxtofl+2,cal_diff_hight_level@f2+2
 33808  003272  C063  F0CF         	movff	?___xxtofl+3,cal_diff_hight_level@f2+3
 33809                           
 33810                           ;data.c: 482: if(f2<0.0)f2=0.0;
 33811  003276  0100               	movlb	0	; () banked
 33812  003278  AFCF               	btfss	(cal_diff_hight_level@f2+3)& (0+255),7,b
 33813  00327A  D009               	goto	l14556
 33814                           
 33815                           ; BSR set to: 0
 33816  00327C  0E00               	movlw	0
 33817  00327E  0100               	movlb	0	; () banked
 33818  003280  6FCC               	movwf	cal_diff_hight_level@f2& (0+255),b
 33819  003282  0E00               	movlw	0
 33820  003284  6FCD               	movwf	(cal_diff_hight_level@f2+1)& (0+255),b
 33821  003286  0E00               	movlw	0
 33822  003288  6FCE               	movwf	(cal_diff_hight_level@f2+2)& (0+255),b
 33823  00328A  0E00               	movlw	0
 33824  00328C  6FCF               	movwf	(cal_diff_hight_level@f2+3)& (0+255),b
 33825  00328E                     l14556:
 33826                           
 33827                           ; BSR set to: 0
 33828                           ;data.c: 483: f1=f2/f1;
 33829  00328E  C0CC  F087         	movff	cal_diff_hight_level@f2,___fldiv@b
 33830  003292  C0CD  F088         	movff	cal_diff_hight_level@f2+1,___fldiv@b+1
 33831  003296  C0CE  F089         	movff	cal_diff_hight_level@f2+2,___fldiv@b+2
 33832  00329A  C0CF  F08A         	movff	cal_diff_hight_level@f2+3,___fldiv@b+3
 33833  00329E  C0D0  F08B         	movff	cal_diff_hight_level@f1,___fldiv@a
 33834  0032A2  C0D1  F08C         	movff	cal_diff_hight_level@f1+1,___fldiv@a+1
 33835  0032A6  C0D2  F08D         	movff	cal_diff_hight_level@f1+2,___fldiv@a+2
 33836  0032AA  C0D3  F08E         	movff	cal_diff_hight_level@f1+3,___fldiv@a+3
 33837  0032AE  ECA9  F011         	call	___fldiv	;wreg free
 33838  0032B2  C087  F0D0         	movff	?___fldiv,cal_diff_hight_level@f1
 33839  0032B6  C088  F0D1         	movff	?___fldiv+1,cal_diff_hight_level@f1+1
 33840  0032BA  C089  F0D2         	movff	?___fldiv+2,cal_diff_hight_level@f1+2
 33841  0032BE  C08A  F0D3         	movff	?___fldiv+3,cal_diff_hight_level@f1+3
 33842                           
 33843                           ;data.c: 484: f1*=100;
 33844  0032C2  C0D0  F06E         	movff	cal_diff_hight_level@f1,___flmul@b
 33845  0032C6  C0D1  F06F         	movff	cal_diff_hight_level@f1+1,___flmul@b+1
 33846  0032CA  C0D2  F070         	movff	cal_diff_hight_level@f1+2,___flmul@b+2
 33847  0032CE  C0D3  F071         	movff	cal_diff_hight_level@f1+3,___flmul@b+3
 33848  0032D2  0E00               	movlw	0
 33849  0032D4  0100               	movlb	0	; () banked
 33850  0032D6  6F72               	movwf	___flmul@a& (0+255),b
 33851  0032D8  0E00               	movlw	0
 33852  0032DA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 33853  0032DC  0EC8               	movlw	200
 33854  0032DE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 33855  0032E0  0E42               	movlw	66
 33856  0032E2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 33857  0032E4  EC08  F00B         	call	___flmul	;wreg free
 33858  0032E8  C06E  F0D0         	movff	?___flmul,cal_diff_hight_level@f1
 33859  0032EC  C06F  F0D1         	movff	?___flmul+1,cal_diff_hight_level@f1+1
 33860  0032F0  C070  F0D2         	movff	?___flmul+2,cal_diff_hight_level@f1+2
 33861  0032F4  C071  F0D3         	movff	?___flmul+3,cal_diff_hight_level@f1+3
 33862                           
 33863                           ;data.c: 485: if(f1>100)f1=100;
 33864  0032F8  0E00               	movlw	0
 33865  0032FA  0100               	movlb	0	; () banked
 33866  0032FC  6FB8               	movwf	___flge@ff1& (0+255),b
 33867  0032FE  0E00               	movlw	0
 33868  003300  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 33869  003302  0EC8               	movlw	200
 33870  003304  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 33871  003306  0E42               	movlw	66
 33872  003308  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 33873  00330A  C0D0  F0BC         	movff	cal_diff_hight_level@f1,___flge@ff2
 33874  00330E  C0D1  F0BD         	movff	cal_diff_hight_level@f1+1,___flge@ff2+1
 33875  003312  C0D2  F0BE         	movff	cal_diff_hight_level@f1+2,___flge@ff2+2
 33876  003316  C0D3  F0BF         	movff	cal_diff_hight_level@f1+3,___flge@ff2+3
 33877  00331A  EC5D  F023         	call	___flge	;wreg free
 33878  00331E  0100               	movlb	0	; () banked
 33879  003320  B0D8               	btfsc	status,0,c
 33880  003322  D009               	goto	l14564
 33881                           
 33882                           ; BSR set to: 0
 33883  003324  0E00               	movlw	0
 33884  003326  0100               	movlb	0	; () banked
 33885  003328  6FD0               	movwf	cal_diff_hight_level@f1& (0+255),b
 33886  00332A  0E00               	movlw	0
 33887  00332C  6FD1               	movwf	(cal_diff_hight_level@f1+1)& (0+255),b
 33888  00332E  0EC8               	movlw	200
 33889  003330  6FD2               	movwf	(cal_diff_hight_level@f1+2)& (0+255),b
 33890  003332  0E42               	movlw	66
 33891  003334  6FD3               	movwf	(cal_diff_hight_level@f1+3)& (0+255),b
 33892  003336                     l14564:
 33893                           
 33894                           ; BSR set to: 0
 33895                           ;data.c: 486: rtLevel=(uint8_t)f1;
 33896  003336  C0D0  F0B8         	movff	cal_diff_hight_level@f1,___fltol@f1
 33897  00333A  C0D1  F0B9         	movff	cal_diff_hight_level@f1+1,___fltol@f1+1
 33898  00333E  C0D2  F0BA         	movff	cal_diff_hight_level@f1+2,___fltol@f1+2
 33899  003342  C0D3  F0BB         	movff	cal_diff_hight_level@f1+3,___fltol@f1+3
 33900  003346  EC43  F02E         	call	___fltol	;wreg free
 33901  00334A  0100               	movlb	0	; () banked
 33902  00334C  51B8               	movf	?___fltol& (0+255),w,b
 33903  00334E  0100               	movlb	0	; () banked
 33904  003350  6FFE               	movwf	_rtLevel& (0+255),b	;volatile
 33905                           
 33906                           ; BSR set to: 0
 33907                           ;data.c: 487: return rtLevel;
 33908  003352  0100               	movlb	0	; () banked
 33909  003354  51FE               	movf	_rtLevel& (0+255),w,b	;volatile
 33910  003356  0012               	return	
 33911  003358                     __end_of_cal_diff_hight_level:
 33912                           	opt stack 0
 33913                           tosu	equ	0xFFF
 33914                           tosh	equ	0xFFE
 33915                           tosl	equ	0xFFD
 33916                           pclath	equ	0xFFA
 33917                           tblptru	equ	0xFF8
 33918                           tblptrh	equ	0xFF7
 33919                           tblptrl	equ	0xFF6
 33920                           tablat	equ	0xFF5
 33921                           prodh	equ	0xFF4
 33922                           prodl	equ	0xFF3
 33923                           intcon	equ	0xFF2
 33924                           indf0	equ	0xFEF
 33925                           postinc0	equ	0xFEE
 33926                           fsr0h	equ	0xFEA
 33927                           fsr0l	equ	0xFE9
 33928                           wreg	equ	0xFE8
 33929                           indf1	equ	0xFE7
 33930                           postinc1	equ	0xFE6
 33931                           postdec1	equ	0xFE5
 33932                           plusw1	equ	0xFE3
 33933                           fsr1h	equ	0xFE2
 33934                           fsr1l	equ	0xFE1
 33935                           indf2	equ	0xFDF
 33936                           postinc2	equ	0xFDE
 33937                           postdec2	equ	0xFDD
 33938                           plusw2	equ	0xFDB
 33939                           fsr2h	equ	0xFDA
 33940                           fsr2l	equ	0xFD9
 33941                           status	equ	0xFD8
 33942                           
 33943 ;; *************** function ___flge *****************
 33944 ;; Defined at:
 33945 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flge.c"
 33946 ;; Parameters:    Size  Location     Type
 33947 ;;  ff1             4   88[BANK0 ] unsigned char 
 33948 ;;  ff2             4   92[BANK0 ] unsigned char 
 33949 ;; Auto vars:     Size  Location     Type
 33950 ;;		None
 33951 ;; Return value:  Size  Location     Type
 33952 ;;		None               void
 33953 ;; Registers used:
 33954 ;;		wreg, status,2, status,0
 33955 ;; Tracked objects:
 33956 ;;		On entry : 0/0
 33957 ;;		On exit  : 0/0
 33958 ;;		Unchanged: 0/0
 33959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33960 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33962 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33963 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33964 ;;Total ram usage:       12 bytes
 33965 ;; Hardware stack levels used:    1
 33966 ;; Hardware stack levels required when called:    4
 33967 ;; This function calls:
 33968 ;;		Nothing
 33969 ;; This function is called by:
 33970 ;;		_m_interp1_float_fast
 33971 ;;		_cal_diff_hight_to_vol_h
 33972 ;;		_cal_diff_hight_level
 33973 ;;		_cal_diff_hight_to_vol_v
 33974 ;; This function uses a non-reentrant model
 33975 ;;
 33976                           
 33977                           	psect	text180
 33978  0046BA                     __ptext180:
 33979                           	opt stack 0
 33980  0046BA                     ___flge:
 33981                           	opt stack 20
 33982                           
 33983                           ; BSR set to: 0
 33984                           ;incstack = 0
 33985  0046BA  0E00               	movlw	0
 33986  0046BC  0100               	movlb	0	; () banked
 33987  0046BE  15B8               	andwf	___flge@ff1& (0+255),w,b
 33988  0046C0  0100               	movlb	0	; () banked
 33989  0046C2  6FC0               	movwf	??___flge& (0+255),b
 33990  0046C4  0E00               	movlw	0
 33991  0046C6  0100               	movlb	0	; () banked
 33992  0046C8  15B9               	andwf	(___flge@ff1+1)& (0+255),w,b
 33993  0046CA  0100               	movlb	0	; () banked
 33994  0046CC  6FC1               	movwf	(??___flge+1)& (0+255),b
 33995  0046CE  0E80               	movlw	128
 33996  0046D0  0100               	movlb	0	; () banked
 33997  0046D2  15BA               	andwf	(___flge@ff1+2)& (0+255),w,b
 33998  0046D4  0100               	movlb	0	; () banked
 33999  0046D6  6FC2               	movwf	(??___flge+2)& (0+255),b
 34000  0046D8  0E7F               	movlw	127
 34001  0046DA  0100               	movlb	0	; () banked
 34002  0046DC  15BB               	andwf	(___flge@ff1+3)& (0+255),w,b
 34003  0046DE  0100               	movlb	0	; () banked
 34004  0046E0  6FC3               	movwf	(??___flge+3)& (0+255),b
 34005  0046E2  0100               	movlb	0	; () banked
 34006  0046E4  51C0               	movf	??___flge& (0+255),w,b
 34007  0046E6  0100               	movlb	0	; () banked
 34008  0046E8  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 34009  0046EA  0100               	movlb	0	; () banked
 34010  0046EC  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 34011  0046EE  0100               	movlb	0	; () banked
 34012  0046F0  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 34013  0046F2  A4D8               	btfss	status,2,c
 34014  0046F4  D009               	goto	l13860
 34015                           
 34016                           ; BSR set to: 0
 34017  0046F6  0E00               	movlw	0
 34018  0046F8  0100               	movlb	0	; () banked
 34019  0046FA  6FB8               	movwf	___flge@ff1& (0+255),b
 34020  0046FC  0E00               	movlw	0
 34021  0046FE  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 34022  004700  0E00               	movlw	0
 34023  004702  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 34024  004704  0E00               	movlw	0
 34025  004706  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 34026  004708                     l13860:
 34027                           
 34028                           ; BSR set to: 0
 34029  004708  0E00               	movlw	0
 34030  00470A  0100               	movlb	0	; () banked
 34031  00470C  15BC               	andwf	___flge@ff2& (0+255),w,b
 34032  00470E  0100               	movlb	0	; () banked
 34033  004710  6FC0               	movwf	??___flge& (0+255),b
 34034  004712  0E00               	movlw	0
 34035  004714  0100               	movlb	0	; () banked
 34036  004716  15BD               	andwf	(___flge@ff2+1)& (0+255),w,b
 34037  004718  0100               	movlb	0	; () banked
 34038  00471A  6FC1               	movwf	(??___flge+1)& (0+255),b
 34039  00471C  0E80               	movlw	128
 34040  00471E  0100               	movlb	0	; () banked
 34041  004720  15BE               	andwf	(___flge@ff2+2)& (0+255),w,b
 34042  004722  0100               	movlb	0	; () banked
 34043  004724  6FC2               	movwf	(??___flge+2)& (0+255),b
 34044  004726  0E7F               	movlw	127
 34045  004728  0100               	movlb	0	; () banked
 34046  00472A  15BF               	andwf	(___flge@ff2+3)& (0+255),w,b
 34047  00472C  0100               	movlb	0	; () banked
 34048  00472E  6FC3               	movwf	(??___flge+3)& (0+255),b
 34049  004730  0100               	movlb	0	; () banked
 34050  004732  51C0               	movf	??___flge& (0+255),w,b
 34051  004734  0100               	movlb	0	; () banked
 34052  004736  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 34053  004738  0100               	movlb	0	; () banked
 34054  00473A  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 34055  00473C  0100               	movlb	0	; () banked
 34056  00473E  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 34057  004740  A4D8               	btfss	status,2,c
 34058  004742  D009               	goto	l13864
 34059                           
 34060                           ; BSR set to: 0
 34061  004744  0E00               	movlw	0
 34062  004746  0100               	movlb	0	; () banked
 34063  004748  6FBC               	movwf	___flge@ff2& (0+255),b
 34064  00474A  0E00               	movlw	0
 34065  00474C  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 34066  00474E  0E00               	movlw	0
 34067  004750  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 34068  004752  0E00               	movlw	0
 34069  004754  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 34070  004756                     l13864:
 34071                           
 34072                           ; BSR set to: 0
 34073  004756  0100               	movlb	0	; () banked
 34074  004758  AFBB               	btfss	(___flge@ff1+3)& (0+255),7,b
 34075  00475A  D026               	goto	l13868
 34076                           
 34077                           ; BSR set to: 0
 34078  00475C  C0B8  F0C0         	movff	___flge@ff1,??___flge
 34079  004760  C0B9  F0C1         	movff	___flge@ff1+1,??___flge+1
 34080  004764  C0BA  F0C2         	movff	___flge@ff1+2,??___flge+2
 34081  004768  C0BB  F0C3         	movff	___flge@ff1+3,??___flge+3
 34082  00476C  0100               	movlb	0	; () banked
 34083  00476E  1FC0               	comf	??___flge& (0+255),f,b
 34084  004770  1FC1               	comf	(??___flge+1)& (0+255),f,b
 34085  004772  1FC2               	comf	(??___flge+2)& (0+255),f,b
 34086  004774  1FC3               	comf	(??___flge+3)& (0+255),f,b
 34087  004776  2BC0               	incf	??___flge& (0+255),f,b
 34088  004778  0E00               	movlw	0
 34089  00477A  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 34090  00477C  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 34091  00477E  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 34092  004780  0E00               	movlw	0
 34093  004782  0100               	movlb	0	; () banked
 34094  004784  25C0               	addwf	??___flge& (0+255),w,b
 34095  004786  0100               	movlb	0	; () banked
 34096  004788  6FB8               	movwf	___flge@ff1& (0+255),b
 34097  00478A  0E00               	movlw	0
 34098  00478C  0100               	movlb	0	; () banked
 34099  00478E  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 34100  004790  0100               	movlb	0	; () banked
 34101  004792  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 34102  004794  0E00               	movlw	0
 34103  004796  0100               	movlb	0	; () banked
 34104  004798  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 34105  00479A  0100               	movlb	0	; () banked
 34106  00479C  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 34107  00479E  0E80               	movlw	128
 34108  0047A0  0100               	movlb	0	; () banked
 34109  0047A2  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 34110  0047A4  0100               	movlb	0	; () banked
 34111  0047A6  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 34112  0047A8                     l13868:
 34113                           
 34114                           ; BSR set to: 0
 34115  0047A8  0100               	movlb	0	; () banked
 34116  0047AA  AFBF               	btfss	(___flge@ff2+3)& (0+255),7,b
 34117  0047AC  D026               	goto	l2623
 34118                           
 34119                           ; BSR set to: 0
 34120  0047AE  C0BC  F0C0         	movff	___flge@ff2,??___flge
 34121  0047B2  C0BD  F0C1         	movff	___flge@ff2+1,??___flge+1
 34122  0047B6  C0BE  F0C2         	movff	___flge@ff2+2,??___flge+2
 34123  0047BA  C0BF  F0C3         	movff	___flge@ff2+3,??___flge+3
 34124  0047BE  0100               	movlb	0	; () banked
 34125  0047C0  1FC0               	comf	??___flge& (0+255),f,b
 34126  0047C2  1FC1               	comf	(??___flge+1)& (0+255),f,b
 34127  0047C4  1FC2               	comf	(??___flge+2)& (0+255),f,b
 34128  0047C6  1FC3               	comf	(??___flge+3)& (0+255),f,b
 34129  0047C8  2BC0               	incf	??___flge& (0+255),f,b
 34130  0047CA  0E00               	movlw	0
 34131  0047CC  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 34132  0047CE  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 34133  0047D0  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 34134  0047D2  0E00               	movlw	0
 34135  0047D4  0100               	movlb	0	; () banked
 34136  0047D6  25C0               	addwf	??___flge& (0+255),w,b
 34137  0047D8  0100               	movlb	0	; () banked
 34138  0047DA  6FBC               	movwf	___flge@ff2& (0+255),b
 34139  0047DC  0E00               	movlw	0
 34140  0047DE  0100               	movlb	0	; () banked
 34141  0047E0  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 34142  0047E2  0100               	movlb	0	; () banked
 34143  0047E4  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 34144  0047E6  0E00               	movlw	0
 34145  0047E8  0100               	movlb	0	; () banked
 34146  0047EA  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 34147  0047EC  0100               	movlb	0	; () banked
 34148  0047EE  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 34149  0047F0  0E80               	movlw	128
 34150  0047F2  0100               	movlb	0	; () banked
 34151  0047F4  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 34152  0047F6  0100               	movlb	0	; () banked
 34153  0047F8  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 34154  0047FA                     l2623:
 34155                           
 34156                           ; BSR set to: 0
 34157  0047FA  0E00               	movlw	0
 34158  0047FC  0100               	movlb	0	; () banked
 34159  0047FE  1BB8               	xorwf	___flge@ff1& (0+255),f,b
 34160  004800  0E00               	movlw	0
 34161  004802  1BB9               	xorwf	(___flge@ff1+1)& (0+255),f,b
 34162  004804  0E00               	movlw	0
 34163  004806  1BBA               	xorwf	(___flge@ff1+2)& (0+255),f,b
 34164  004808  0E80               	movlw	128
 34165  00480A  1BBB               	xorwf	(___flge@ff1+3)& (0+255),f,b
 34166  00480C  0E00               	movlw	0
 34167  00480E  0100               	movlb	0	; () banked
 34168  004810  1BBC               	xorwf	___flge@ff2& (0+255),f,b
 34169  004812  0E00               	movlw	0
 34170  004814  1BBD               	xorwf	(___flge@ff2+1)& (0+255),f,b
 34171  004816  0E00               	movlw	0
 34172  004818  1BBE               	xorwf	(___flge@ff2+2)& (0+255),f,b
 34173  00481A  0E80               	movlw	128
 34174  00481C  1BBF               	xorwf	(___flge@ff2+3)& (0+255),f,b
 34175  00481E  0100               	movlb	0	; () banked
 34176  004820  51BC               	movf	___flge@ff2& (0+255),w,b
 34177  004822  0100               	movlb	0	; () banked
 34178  004824  5DB8               	subwf	___flge@ff1& (0+255),w,b
 34179  004826  0100               	movlb	0	; () banked
 34180  004828  51BD               	movf	(___flge@ff2+1)& (0+255),w,b
 34181  00482A  0100               	movlb	0	; () banked
 34182  00482C  59B9               	subwfb	(___flge@ff1+1)& (0+255),w,b
 34183  00482E  0100               	movlb	0	; () banked
 34184  004830  51BE               	movf	(___flge@ff2+2)& (0+255),w,b
 34185  004832  0100               	movlb	0	; () banked
 34186  004834  59BA               	subwfb	(___flge@ff1+2)& (0+255),w,b
 34187  004836  0100               	movlb	0	; () banked
 34188  004838  51BF               	movf	(___flge@ff2+3)& (0+255),w,b
 34189  00483A  0100               	movlb	0	; () banked
 34190  00483C  59BB               	subwfb	(___flge@ff1+3)& (0+255),w,b
 34191  00483E  B0D8               	btfsc	status,0,c
 34192  004840  D002               	goto	l13874
 34193                           
 34194                           ; BSR set to: 0
 34195  004842  90D8               	bcf	status,0,c
 34196  004844  0012               	return	
 34197  004846                     l13874:
 34198                           
 34199                           ; BSR set to: 0
 34200  004846  80D8               	bsf	status,0,c
 34201                           
 34202                           ; BSR set to: 0
 34203  004848  0012               	return	
 34204  00484A                     __end_of___flge:
 34205                           	opt stack 0
 34206                           tosu	equ	0xFFF
 34207                           tosh	equ	0xFFE
 34208                           tosl	equ	0xFFD
 34209                           pclath	equ	0xFFA
 34210                           tblptru	equ	0xFF8
 34211                           tblptrh	equ	0xFF7
 34212                           tblptrl	equ	0xFF6
 34213                           tablat	equ	0xFF5
 34214                           prodh	equ	0xFF4
 34215                           prodl	equ	0xFF3
 34216                           intcon	equ	0xFF2
 34217                           indf0	equ	0xFEF
 34218                           postinc0	equ	0xFEE
 34219                           fsr0h	equ	0xFEA
 34220                           fsr0l	equ	0xFE9
 34221                           wreg	equ	0xFE8
 34222                           indf1	equ	0xFE7
 34223                           postinc1	equ	0xFE6
 34224                           postdec1	equ	0xFE5
 34225                           plusw1	equ	0xFE3
 34226                           fsr1h	equ	0xFE2
 34227                           fsr1l	equ	0xFE1
 34228                           indf2	equ	0xFDF
 34229                           postinc2	equ	0xFDE
 34230                           postdec2	equ	0xFDD
 34231                           plusw2	equ	0xFDB
 34232                           fsr2h	equ	0xFDA
 34233                           fsr2l	equ	0xFD9
 34234                           status	equ	0xFD8
 34235                           
 34236 ;; *************** function ___fladd *****************
 34237 ;; Defined at:
 34238 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcadd.c"
 34239 ;; Parameters:    Size  Location     Type
 34240 ;;  b               4   68[BANK0 ] unsigned char 
 34241 ;;  a               4   72[BANK0 ] unsigned char 
 34242 ;; Auto vars:     Size  Location     Type
 34243 ;;  grs             1   87[BANK0 ] unsigned char 
 34244 ;;  bexp            1   86[BANK0 ] unsigned char 
 34245 ;;  aexp            1   85[BANK0 ] unsigned char 
 34246 ;;  signs           1   84[BANK0 ] unsigned char 
 34247 ;; Return value:  Size  Location     Type
 34248 ;;                  4   68[BANK0 ] unsigned char 
 34249 ;; Registers used:
 34250 ;;		wreg, status,2, status,0
 34251 ;; Tracked objects:
 34252 ;;		On entry : 0/0
 34253 ;;		On exit  : 0/0
 34254 ;;		Unchanged: 0/0
 34255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34256 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34257 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34258 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34259 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34260 ;;Total ram usage:       20 bytes
 34261 ;; Hardware stack levels used:    1
 34262 ;; Hardware stack levels required when called:    4
 34263 ;; This function calls:
 34264 ;;		Nothing
 34265 ;; This function is called by:
 34266 ;;		_m_interp1_float_fast
 34267 ;;		_cal_diff_hight_to_vol_h
 34268 ;;		_cal_diff_hight_level
 34269 ;;		_cal_diff_hight_to_vol_v
 34270 ;; This function uses a non-reentrant model
 34271 ;;
 34272                           
 34273                           	psect	text181
 34274  001168                     __ptext181:
 34275                           	opt stack 0
 34276  001168                     ___fladd:
 34277                           	opt stack 20
 34278                           
 34279                           ; BSR set to: 0
 34280                           ;incstack = 0
 34281  001168  0100               	movlb	0	; () banked
 34282  00116A  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 34283  00116C  0B80               	andlw	128
 34284  00116E  0100               	movlb	0	; () banked
 34285  001170  6FB4               	movwf	___fladd@signs& (0+255),b
 34286  001172  0100               	movlb	0	; () banked
 34287  001174  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 34288  001176  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 34289  001178  0100               	movlb	0	; () banked
 34290  00117A  6FB6               	movwf	___fladd@bexp& (0+255),b
 34291                           
 34292                           ; BSR set to: 0
 34293  00117C  0100               	movlb	0	; () banked
 34294  00117E  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 34295  001180  D002               	goto	l13358
 34296                           
 34297                           ; BSR set to: 0
 34298  001182  0100               	movlb	0	; () banked
 34299  001184  81B6               	bsf	___fladd@bexp& (0+255),0,b
 34300  001186                     l13358:
 34301                           
 34302                           ; BSR set to: 0
 34303  001186  0100               	movlb	0	; () banked
 34304  001188  51B6               	movf	___fladd@bexp& (0+255),w,b
 34305  00118A  0100               	movlb	0	; () banked
 34306  00118C  B4D8               	btfsc	status,2,c
 34307  00118E  D012               	goto	l13368
 34308                           
 34309                           ; BSR set to: 0
 34310  001190  0100               	movlb	0	; () banked
 34311  001192  29B6               	incf	___fladd@bexp& (0+255),w,b
 34312  001194  A4D8               	btfss	status,2,c
 34313  001196  D009               	goto	l13364
 34314                           
 34315                           ; BSR set to: 0
 34316  001198  0E00               	movlw	0
 34317  00119A  0100               	movlb	0	; () banked
 34318  00119C  6FA4               	movwf	___fladd@b& (0+255),b
 34319  00119E  0E00               	movlw	0
 34320  0011A0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34321  0011A2  0E00               	movlw	0
 34322  0011A4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34323  0011A6  0E00               	movlw	0
 34324  0011A8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34325  0011AA                     l13364:
 34326                           
 34327                           ; BSR set to: 0
 34328  0011AA  0100               	movlb	0	; () banked
 34329  0011AC  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 34330                           
 34331                           ; BSR set to: 0
 34332  0011AE  0E00               	movlw	0
 34333  0011B0  0100               	movlb	0	; () banked
 34334  0011B2  D008               	goto	L27
 34335  0011B4                     l13368:
 34336                           
 34337                           ; BSR set to: 0
 34338  0011B4  0E00               	movlw	0
 34339  0011B6  0100               	movlb	0	; () banked
 34340  0011B8  6FA4               	movwf	___fladd@b& (0+255),b
 34341  0011BA  0E00               	movlw	0
 34342  0011BC  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34343  0011BE  0E00               	movlw	0
 34344  0011C0  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34345  0011C2  0E00               	movlw	0
 34346  0011C4                     L27:
 34347  0011C4  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34348                           
 34349                           ; BSR set to: 0
 34350                           
 34351                           ; BSR set to: 0
 34352  0011C6  0100               	movlb	0	; () banked
 34353  0011C8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34354  0011CA  0B80               	andlw	128
 34355  0011CC  0100               	movlb	0	; () banked
 34356  0011CE  6FB5               	movwf	___fladd@aexp& (0+255),b
 34357                           
 34358                           ; BSR set to: 0
 34359  0011D0  0100               	movlb	0	; () banked
 34360  0011D2  51B4               	movf	___fladd@signs& (0+255),w,b
 34361  0011D4  0100               	movlb	0	; () banked
 34362  0011D6  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 34363  0011D8  B4D8               	btfsc	status,2,c
 34364  0011DA  D002               	goto	l13376
 34365                           
 34366                           ; BSR set to: 0
 34367  0011DC  0100               	movlb	0	; () banked
 34368  0011DE  8DB4               	bsf	___fladd@signs& (0+255),6,b
 34369  0011E0                     l13376:
 34370                           
 34371                           ; BSR set to: 0
 34372  0011E0  0100               	movlb	0	; () banked
 34373  0011E2  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34374  0011E4  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 34375  0011E6  0100               	movlb	0	; () banked
 34376  0011E8  6FB5               	movwf	___fladd@aexp& (0+255),b
 34377                           
 34378                           ; BSR set to: 0
 34379  0011EA  0100               	movlb	0	; () banked
 34380  0011EC  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 34381  0011EE  D002               	goto	l13382
 34382                           
 34383                           ; BSR set to: 0
 34384  0011F0  0100               	movlb	0	; () banked
 34385  0011F2  81B5               	bsf	___fladd@aexp& (0+255),0,b
 34386  0011F4                     l13382:
 34387                           
 34388                           ; BSR set to: 0
 34389  0011F4  0100               	movlb	0	; () banked
 34390  0011F6  51B5               	movf	___fladd@aexp& (0+255),w,b
 34391  0011F8  0100               	movlb	0	; () banked
 34392  0011FA  B4D8               	btfsc	status,2,c
 34393  0011FC  D012               	goto	l13392
 34394                           
 34395                           ; BSR set to: 0
 34396  0011FE  0100               	movlb	0	; () banked
 34397  001200  29B5               	incf	___fladd@aexp& (0+255),w,b
 34398  001202  A4D8               	btfss	status,2,c
 34399  001204  D009               	goto	l13388
 34400                           
 34401                           ; BSR set to: 0
 34402  001206  0E00               	movlw	0
 34403  001208  0100               	movlb	0	; () banked
 34404  00120A  6FA8               	movwf	___fladd@a& (0+255),b
 34405  00120C  0E00               	movlw	0
 34406  00120E  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 34407  001210  0E00               	movlw	0
 34408  001212  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 34409  001214  0E00               	movlw	0
 34410  001216  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 34411  001218                     l13388:
 34412                           
 34413                           ; BSR set to: 0
 34414  001218  0100               	movlb	0	; () banked
 34415  00121A  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 34416                           
 34417                           ; BSR set to: 0
 34418  00121C  0E00               	movlw	0
 34419  00121E  0100               	movlb	0	; () banked
 34420  001220  D008               	goto	L28
 34421  001222                     l13392:
 34422                           
 34423                           ; BSR set to: 0
 34424  001222  0E00               	movlw	0
 34425  001224  0100               	movlb	0	; () banked
 34426  001226  6FA8               	movwf	___fladd@a& (0+255),b
 34427  001228  0E00               	movlw	0
 34428  00122A  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 34429  00122C  0E00               	movlw	0
 34430  00122E  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 34431  001230  0E00               	movlw	0
 34432  001232                     L28:
 34433  001232  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 34434                           
 34435                           ; BSR set to: 0
 34436                           
 34437                           ; BSR set to: 0
 34438  001234  0100               	movlb	0	; () banked
 34439  001236  51B6               	movf	___fladd@bexp& (0+255),w,b
 34440  001238  0100               	movlb	0	; () banked
 34441  00123A  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 34442  00123C  B0D8               	btfsc	status,0,c
 34443  00123E  D024               	goto	l13430
 34444                           
 34445                           ; BSR set to: 0
 34446  001240  0100               	movlb	0	; () banked
 34447  001242  ADB4               	btfss	___fladd@signs& (0+255),6,b
 34448  001244  D003               	goto	l13400
 34449                           
 34450                           ; BSR set to: 0
 34451  001246  0E80               	movlw	128
 34452  001248  0100               	movlb	0	; () banked
 34453  00124A  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 34454  00124C                     l13400:
 34455                           
 34456                           ; BSR set to: 0
 34457  00124C  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 34458                           
 34459                           ; BSR set to: 0
 34460  001250  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 34461                           
 34462                           ; BSR set to: 0
 34463  001254  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 34464                           
 34465                           ; BSR set to: 0
 34466  001258  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 34467                           
 34468                           ; BSR set to: 0
 34469  00125C  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 34470                           
 34471                           ; BSR set to: 0
 34472  001260  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 34473                           
 34474                           ; BSR set to: 0
 34475  001264  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 34476                           
 34477                           ; BSR set to: 0
 34478  001268  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 34479                           
 34480                           ; BSR set to: 0
 34481  00126C  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 34482                           
 34483                           ; BSR set to: 0
 34484  001270  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 34485                           
 34486                           ; BSR set to: 0
 34487  001274  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 34488                           
 34489                           ; BSR set to: 0
 34490  001278  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 34491                           
 34492                           ; BSR set to: 0
 34493  00127C  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 34494                           
 34495                           ; BSR set to: 0
 34496  001280  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 34497                           
 34498                           ; BSR set to: 0
 34499  001284  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 34500  001288                     l13430:
 34501                           
 34502                           ; BSR set to: 0
 34503  001288  0E00               	movlw	0
 34504  00128A  0100               	movlb	0	; () banked
 34505  00128C  6FB7               	movwf	___fladd@grs& (0+255),b
 34506                           
 34507                           ; BSR set to: 0
 34508  00128E  0100               	movlb	0	; () banked
 34509  001290  51B6               	movf	___fladd@bexp& (0+255),w,b
 34510  001292  0100               	movlb	0	; () banked
 34511  001294  6FAC               	movwf	??___fladd& (0+255),b
 34512  001296  6BAD               	clrf	(??___fladd+1)& (0+255),b
 34513  001298  0100               	movlb	0	; () banked
 34514  00129A  1FAC               	comf	??___fladd& (0+255),f,b
 34515  00129C  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 34516  00129E  4BAC               	infsnz	??___fladd& (0+255),f,b
 34517  0012A0  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 34518  0012A2  0100               	movlb	0	; () banked
 34519  0012A4  51B5               	movf	___fladd@aexp& (0+255),w,b
 34520  0012A6  0100               	movlb	0	; () banked
 34521  0012A8  6FAE               	movwf	(??___fladd+2)& (0+255),b
 34522  0012AA  6BAF               	clrf	(??___fladd+3)& (0+255),b
 34523  0012AC  0100               	movlb	0	; () banked
 34524  0012AE  51AC               	movf	??___fladd& (0+255),w,b
 34525  0012B0  0100               	movlb	0	; () banked
 34526  0012B2  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 34527  0012B4  0100               	movlb	0	; () banked
 34528  0012B6  51AD               	movf	(??___fladd+1)& (0+255),w,b
 34529  0012B8  0100               	movlb	0	; () banked
 34530  0012BA  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 34531  0012BC  0100               	movlb	0	; () banked
 34532  0012BE  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 34533  0012C0  D03D               	goto	l2861
 34534  0012C2  0100               	movlb	0	; () banked
 34535  0012C4  51AF               	movf	(??___fladd+3)& (0+255),w,b
 34536  0012C6  E105               	bnz	u11860
 34537  0012C8  0E1A               	movlw	26
 34538  0012CA  0100               	movlb	0	; () banked
 34539  0012CC  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 34540  0012CE  A0D8               	btfss	status,0,c
 34541  0012D0  D035               	goto	l2861
 34542  0012D2                     u11860:
 34543                           
 34544                           ; BSR set to: 0
 34545  0012D2  0100               	movlb	0	; () banked
 34546  0012D4  51A4               	movf	___fladd@b& (0+255),w,b
 34547  0012D6  0100               	movlb	0	; () banked
 34548  0012D8  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 34549  0012DA  0100               	movlb	0	; () banked
 34550  0012DC  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 34551  0012DE  0100               	movlb	0	; () banked
 34552  0012E0  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 34553  0012E2  B4D8               	btfsc	status,2,c
 34554  0012E4  D002               	goto	u11870
 34555  0012E6  0E01               	movlw	1
 34556  0012E8  D001               	goto	u11880
 34557  0012EA                     u11870:
 34558  0012EA  0E00               	movlw	0
 34559  0012EC                     u11880:
 34560  0012EC  0100               	movlb	0	; () banked
 34561  0012EE  6FB7               	movwf	___fladd@grs& (0+255),b
 34562                           
 34563                           ; BSR set to: 0
 34564  0012F0  0E00               	movlw	0
 34565  0012F2  0100               	movlb	0	; () banked
 34566  0012F4  6FA4               	movwf	___fladd@b& (0+255),b
 34567  0012F6  0E00               	movlw	0
 34568  0012F8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34569  0012FA  0E00               	movlw	0
 34570  0012FC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34571  0012FE  0E00               	movlw	0
 34572  001300  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34573                           
 34574                           ; BSR set to: 0
 34575  001302  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 34576  001306  D020               	goto	l2860
 34577  001308                     l2862:
 34578                           
 34579                           ; BSR set to: 0
 34580  001308  0100               	movlb	0	; () banked
 34581  00130A  A1B7               	btfss	___fladd@grs& (0+255),0,b
 34582  00130C  D007               	goto	l13442
 34583                           
 34584                           ; BSR set to: 0
 34585  00130E  0100               	movlb	0	; () banked
 34586  001310  90D8               	bcf	status,0,c
 34587  001312  31B7               	rrcf	___fladd@grs& (0+255),w,b
 34588  001314  0901               	iorlw	1
 34589  001316  0100               	movlb	0	; () banked
 34590  001318  6FB7               	movwf	___fladd@grs& (0+255),b
 34591  00131A  D003               	goto	l13444
 34592  00131C                     l13442:
 34593                           
 34594                           ; BSR set to: 0
 34595  00131C  0100               	movlb	0	; () banked
 34596  00131E  90D8               	bcf	status,0,c
 34597  001320  33B7               	rrcf	___fladd@grs& (0+255),f,b
 34598  001322                     l13444:
 34599                           
 34600                           ; BSR set to: 0
 34601  001322  0100               	movlb	0	; () banked
 34602  001324  A1A4               	btfss	___fladd@b& (0+255),0,b
 34603  001326  D002               	goto	l13448
 34604                           
 34605                           ; BSR set to: 0
 34606  001328  0100               	movlb	0	; () banked
 34607  00132A  8FB7               	bsf	___fladd@grs& (0+255),7,b
 34608  00132C                     l13448:
 34609                           
 34610                           ; BSR set to: 0
 34611  00132C  0100               	movlb	0	; () banked
 34612  00132E  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 34613  001330  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 34614  001332  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 34615  001334  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 34616  001336  33A4               	rrcf	___fladd@b& (0+255),f,b
 34617                           
 34618                           ; BSR set to: 0
 34619  001338  0100               	movlb	0	; () banked
 34620  00133A  2BB6               	incf	___fladd@bexp& (0+255),f,b
 34621  00133C                     l2861:
 34622                           
 34623                           ; BSR set to: 0
 34624  00133C  0100               	movlb	0	; () banked
 34625  00133E  51B5               	movf	___fladd@aexp& (0+255),w,b
 34626  001340  0100               	movlb	0	; () banked
 34627  001342  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 34628  001344  A0D8               	btfss	status,0,c
 34629  001346  D7E0               	goto	l2862
 34630  001348                     l2860:
 34631                           
 34632                           ; BSR set to: 0
 34633  001348  0100               	movlb	0	; () banked
 34634  00134A  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 34635  00134C  D03F               	goto	l13476
 34636                           
 34637                           ; BSR set to: 0
 34638  00134E  0100               	movlb	0	; () banked
 34639  001350  51B6               	movf	___fladd@bexp& (0+255),w,b
 34640  001352  0100               	movlb	0	; () banked
 34641  001354  A4D8               	btfss	status,2,c
 34642  001356  D00A               	goto	l13458
 34643                           
 34644                           ; BSR set to: 0
 34645  001358  0E00               	movlw	0
 34646  00135A  0100               	movlb	0	; () banked
 34647  00135C  6FA4               	movwf	?___fladd& (0+255),b
 34648  00135E  0E00               	movlw	0
 34649  001360  6FA5               	movwf	(?___fladd+1)& (0+255),b
 34650  001362  0E00               	movlw	0
 34651  001364  6FA6               	movwf	(?___fladd+2)& (0+255),b
 34652  001366  0E00               	movlw	0
 34653  001368  6FA7               	movwf	(?___fladd+3)& (0+255),b
 34654                           
 34655                           ; BSR set to: 0
 34656  00136A  0012               	return	
 34657  00136C                     l13458:
 34658                           
 34659                           ; BSR set to: 0
 34660  00136C  0100               	movlb	0	; () banked
 34661  00136E  51A8               	movf	___fladd@a& (0+255),w,b
 34662  001370  0100               	movlb	0	; () banked
 34663  001372  27A4               	addwf	___fladd@b& (0+255),f,b
 34664  001374  0100               	movlb	0	; () banked
 34665  001376  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34666  001378  0100               	movlb	0	; () banked
 34667  00137A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 34668  00137C  0100               	movlb	0	; () banked
 34669  00137E  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34670  001380  0100               	movlb	0	; () banked
 34671  001382  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 34672  001384  0100               	movlb	0	; () banked
 34673  001386  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34674  001388  0100               	movlb	0	; () banked
 34675  00138A  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 34676                           
 34677                           ; BSR set to: 0
 34678  00138C  0100               	movlb	0	; () banked
 34679  00138E  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 34680  001390  D0CC               	goto	l13512
 34681                           
 34682                           ; BSR set to: 0
 34683  001392  0100               	movlb	0	; () banked
 34684  001394  A1B7               	btfss	___fladd@grs& (0+255),0,b
 34685  001396  D009               	goto	l13466
 34686                           
 34687                           ; BSR set to: 0
 34688  001398  0100               	movlb	0	; () banked
 34689  00139A  90D8               	bcf	status,0,c
 34690  00139C  33B7               	rrcf	___fladd@grs& (0+255),f,b
 34691  00139E  0100               	movlb	0	; () banked
 34692  0013A0  51B7               	movf	___fladd@grs& (0+255),w,b
 34693  0013A2  0901               	iorlw	1
 34694  0013A4  0100               	movlb	0	; () banked
 34695  0013A6  6FB7               	movwf	___fladd@grs& (0+255),b
 34696  0013A8  D003               	goto	l13468
 34697  0013AA                     l13466:
 34698                           
 34699                           ; BSR set to: 0
 34700  0013AA  0100               	movlb	0	; () banked
 34701  0013AC  90D8               	bcf	status,0,c
 34702  0013AE  33B7               	rrcf	___fladd@grs& (0+255),f,b
 34703  0013B0                     l13468:
 34704                           
 34705                           ; BSR set to: 0
 34706  0013B0  0100               	movlb	0	; () banked
 34707  0013B2  A1A4               	btfss	___fladd@b& (0+255),0,b
 34708  0013B4  D002               	goto	l13472
 34709                           
 34710                           ; BSR set to: 0
 34711  0013B6  0100               	movlb	0	; () banked
 34712  0013B8  8FB7               	bsf	___fladd@grs& (0+255),7,b
 34713  0013BA                     l13472:
 34714                           
 34715                           ; BSR set to: 0
 34716  0013BA  0100               	movlb	0	; () banked
 34717  0013BC  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 34718  0013BE  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 34719  0013C0  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 34720  0013C2  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 34721  0013C4  33A4               	rrcf	___fladd@b& (0+255),f,b
 34722                           
 34723                           ; BSR set to: 0
 34724  0013C6  0100               	movlb	0	; () banked
 34725  0013C8  2BB6               	incf	___fladd@bexp& (0+255),f,b
 34726                           
 34727                           ; BSR set to: 0
 34728  0013CA  D0AF               	goto	l13512
 34729  0013CC                     l13476:
 34730                           
 34731                           ; BSR set to: 0
 34732  0013CC  0100               	movlb	0	; () banked
 34733  0013CE  51A8               	movf	___fladd@a& (0+255),w,b
 34734  0013D0  0100               	movlb	0	; () banked
 34735  0013D2  5DA4               	subwf	___fladd@b& (0+255),w,b
 34736  0013D4  0100               	movlb	0	; () banked
 34737  0013D6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34738  0013D8  0100               	movlb	0	; () banked
 34739  0013DA  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 34740  0013DC  0100               	movlb	0	; () banked
 34741  0013DE  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34742  0013E0  0100               	movlb	0	; () banked
 34743  0013E2  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 34744  0013E4  0100               	movlb	0	; () banked
 34745  0013E6  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 34746  0013E8  0A80               	xorlw	128
 34747  0013EA  0100               	movlb	0	; () banked
 34748  0013EC  6FAC               	movwf	??___fladd& (0+255),b
 34749  0013EE  0100               	movlb	0	; () banked
 34750  0013F0  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34751  0013F2  0A80               	xorlw	128
 34752  0013F4  0100               	movlb	0	; () banked
 34753  0013F6  59AC               	subwfb	??___fladd& (0+255),w,b
 34754  0013F8  B0D8               	btfsc	status,0,c
 34755  0013FA  D050               	goto	l13486
 34756                           
 34757                           ; BSR set to: 0
 34758  0013FC  C0A4  F0AC         	movff	___fladd@b,??___fladd
 34759  001400  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 34760  001404  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 34761  001408  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 34762  00140C  0100               	movlb	0	; () banked
 34763  00140E  1FAC               	comf	??___fladd& (0+255),f,b
 34764  001410  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 34765  001412  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 34766  001414  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 34767  001416  2BAC               	incf	??___fladd& (0+255),f,b
 34768  001418  0E00               	movlw	0
 34769  00141A  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 34770  00141C  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 34771  00141E  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 34772  001420  0100               	movlb	0	; () banked
 34773  001422  51A8               	movf	___fladd@a& (0+255),w,b
 34774  001424  0100               	movlb	0	; () banked
 34775  001426  25AC               	addwf	??___fladd& (0+255),w,b
 34776  001428  0100               	movlb	0	; () banked
 34777  00142A  6FB0               	movwf	(??___fladd+4)& (0+255),b
 34778  00142C  0100               	movlb	0	; () banked
 34779  00142E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34780  001430  0100               	movlb	0	; () banked
 34781  001432  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 34782  001434  0100               	movlb	0	; () banked
 34783  001436  6FB1               	movwf	(??___fladd+5)& (0+255),b
 34784  001438  0100               	movlb	0	; () banked
 34785  00143A  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34786  00143C  0100               	movlb	0	; () banked
 34787  00143E  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 34788  001440  0100               	movlb	0	; () banked
 34789  001442  6FB2               	movwf	(??___fladd+6)& (0+255),b
 34790  001444  0100               	movlb	0	; () banked
 34791  001446  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34792  001448  0100               	movlb	0	; () banked
 34793  00144A  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 34794  00144C  0100               	movlb	0	; () banked
 34795  00144E  6FB3               	movwf	(??___fladd+7)& (0+255),b
 34796  001450  0EFF               	movlw	255
 34797  001452  0100               	movlb	0	; () banked
 34798  001454  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 34799  001456  0100               	movlb	0	; () banked
 34800  001458  6FA4               	movwf	___fladd@b& (0+255),b
 34801  00145A  0EFF               	movlw	255
 34802  00145C  0100               	movlb	0	; () banked
 34803  00145E  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 34804  001460  0100               	movlb	0	; () banked
 34805  001462  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 34806  001464  0EFF               	movlw	255
 34807  001466  0100               	movlb	0	; () banked
 34808  001468  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 34809  00146A  0100               	movlb	0	; () banked
 34810  00146C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 34811  00146E  0EFF               	movlw	255
 34812  001470  0100               	movlb	0	; () banked
 34813  001472  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 34814  001474  0100               	movlb	0	; () banked
 34815  001476  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 34816  001478  0E80               	movlw	128
 34817  00147A  0100               	movlb	0	; () banked
 34818  00147C  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 34819                           
 34820                           ; BSR set to: 0
 34821  00147E  0100               	movlb	0	; () banked
 34822  001480  6DB7               	negf	___fladd@grs& (0+255),b
 34823                           
 34824                           ; BSR set to: 0
 34825  001482  0100               	movlb	0	; () banked
 34826  001484  51B7               	movf	___fladd@grs& (0+255),w,b
 34827  001486  0100               	movlb	0	; () banked
 34828  001488  A4D8               	btfss	status,2,c
 34829  00148A  D018               	goto	l2877
 34830                           
 34831                           ; BSR set to: 0
 34832  00148C  0E01               	movlw	1
 34833  00148E  0100               	movlb	0	; () banked
 34834  001490  27A4               	addwf	___fladd@b& (0+255),f,b
 34835  001492  0E00               	movlw	0
 34836  001494  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 34837  001496  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 34838  001498  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 34839                           
 34840                           ; BSR set to: 0
 34841  00149A  D010               	goto	l2877
 34842  00149C                     l13486:
 34843                           
 34844                           ; BSR set to: 0
 34845  00149C  0100               	movlb	0	; () banked
 34846  00149E  51A8               	movf	___fladd@a& (0+255),w,b
 34847  0014A0  0100               	movlb	0	; () banked
 34848  0014A2  5FA4               	subwf	___fladd@b& (0+255),f,b
 34849  0014A4  0100               	movlb	0	; () banked
 34850  0014A6  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 34851  0014A8  0100               	movlb	0	; () banked
 34852  0014AA  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 34853  0014AC  0100               	movlb	0	; () banked
 34854  0014AE  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 34855  0014B0  0100               	movlb	0	; () banked
 34856  0014B2  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 34857  0014B4  0100               	movlb	0	; () banked
 34858  0014B6  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 34859  0014B8  0100               	movlb	0	; () banked
 34860  0014BA  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 34861  0014BC                     l2877:
 34862                           
 34863                           ; BSR set to: 0
 34864  0014BC  0100               	movlb	0	; () banked
 34865  0014BE  51A4               	movf	___fladd@b& (0+255),w,b
 34866  0014C0  0100               	movlb	0	; () banked
 34867  0014C2  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 34868  0014C4  0100               	movlb	0	; () banked
 34869  0014C6  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 34870  0014C8  0100               	movlb	0	; () banked
 34871  0014CA  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 34872  0014CC  A4D8               	btfss	status,2,c
 34873  0014CE  D02A               	goto	l13510
 34874                           
 34875                           ; BSR set to: 0
 34876  0014D0  0100               	movlb	0	; () banked
 34877  0014D2  51B7               	movf	___fladd@grs& (0+255),w,b
 34878  0014D4  0100               	movlb	0	; () banked
 34879  0014D6  A4D8               	btfss	status,2,c
 34880  0014D8  D025               	goto	l13510
 34881                           
 34882                           ; BSR set to: 0
 34883  0014DA  0E00               	movlw	0
 34884  0014DC  0100               	movlb	0	; () banked
 34885  0014DE  6FA4               	movwf	?___fladd& (0+255),b
 34886  0014E0  0E00               	movlw	0
 34887  0014E2  6FA5               	movwf	(?___fladd+1)& (0+255),b
 34888  0014E4  0E00               	movlw	0
 34889  0014E6  6FA6               	movwf	(?___fladd+2)& (0+255),b
 34890  0014E8  0E00               	movlw	0
 34891  0014EA  6FA7               	movwf	(?___fladd+3)& (0+255),b
 34892                           
 34893                           ; BSR set to: 0
 34894  0014EC  0012               	return	
 34895  0014EE                     l13494:
 34896                           
 34897                           ; BSR set to: 0
 34898  0014EE  0100               	movlb	0	; () banked
 34899  0014F0  90D8               	bcf	status,0,c
 34900  0014F2  37A4               	rlcf	___fladd@b& (0+255),f,b
 34901  0014F4  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 34902  0014F6  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 34903  0014F8  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 34904                           
 34905                           ; BSR set to: 0
 34906  0014FA  0100               	movlb	0	; () banked
 34907  0014FC  AFB7               	btfss	___fladd@grs& (0+255),7,b
 34908  0014FE  D002               	goto	l13500
 34909                           
 34910                           ; BSR set to: 0
 34911  001500  0100               	movlb	0	; () banked
 34912  001502  81A4               	bsf	___fladd@b& (0+255),0,b
 34913  001504                     l13500:
 34914                           
 34915                           ; BSR set to: 0
 34916  001504  0100               	movlb	0	; () banked
 34917  001506  A1B7               	btfss	___fladd@grs& (0+255),0,b
 34918  001508  D003               	goto	l13504
 34919                           
 34920                           ; BSR set to: 0
 34921  00150A  80D8               	bsf	status,0,c
 34922  00150C  0100               	movlb	0	; () banked
 34923  00150E  D002               	goto	L29
 34924  001510                     l13504:
 34925                           
 34926                           ; BSR set to: 0
 34927  001510  0100               	movlb	0	; () banked
 34928  001512  90D8               	bcf	status,0,c
 34929  001514                     L29:
 34930  001514  37B7               	rlcf	___fladd@grs& (0+255),f,b
 34931                           
 34932                           ; BSR set to: 0
 34933                           
 34934                           ; BSR set to: 0
 34935  001516  0100               	movlb	0	; () banked
 34936  001518  51B6               	movf	___fladd@bexp& (0+255),w,b
 34937  00151A  0100               	movlb	0	; () banked
 34938  00151C  B4D8               	btfsc	status,2,c
 34939  00151E  D002               	goto	l13510
 34940                           
 34941                           ; BSR set to: 0
 34942  001520  0100               	movlb	0	; () banked
 34943  001522  07B6               	decf	___fladd@bexp& (0+255),f,b
 34944  001524                     l13510:
 34945                           
 34946                           ; BSR set to: 0
 34947  001524  0100               	movlb	0	; () banked
 34948  001526  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 34949  001528  D7E2               	goto	l13494
 34950  00152A                     l13512:
 34951                           
 34952                           ; BSR set to: 0
 34953  00152A  0E00               	movlw	0
 34954  00152C  0100               	movlb	0	; () banked
 34955  00152E  6FB5               	movwf	___fladd@aexp& (0+255),b
 34956                           
 34957                           ; BSR set to: 0
 34958  001530  0100               	movlb	0	; () banked
 34959  001532  AFB7               	btfss	___fladd@grs& (0+255),7,b
 34960  001534  D00D               	goto	l2886
 34961                           
 34962                           ; BSR set to: 0
 34963  001536  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 34964  00153A  0E7F               	movlw	127
 34965  00153C  0100               	movlb	0	; () banked
 34966  00153E  17AC               	andwf	??___fladd& (0+255),f,b
 34967  001540  A4D8               	btfss	status,2,c
 34968  001542  D003               	goto	l13520
 34969                           
 34970                           ; BSR set to: 0
 34971                           
 34972                           ; BSR set to: 0
 34973  001544  0100               	movlb	0	; () banked
 34974  001546  A1A4               	btfss	___fladd@b& (0+255),0,b
 34975  001548  D003               	goto	l2886
 34976  00154A                     l13520:
 34977                           
 34978                           ; BSR set to: 0
 34979  00154A  0E01               	movlw	1
 34980  00154C  0100               	movlb	0	; () banked
 34981  00154E  6FB5               	movwf	___fladd@aexp& (0+255),b
 34982  001550                     l2886:
 34983                           
 34984                           ; BSR set to: 0
 34985  001550  0100               	movlb	0	; () banked
 34986  001552  51B5               	movf	___fladd@aexp& (0+255),w,b
 34987  001554  0100               	movlb	0	; () banked
 34988  001556  B4D8               	btfsc	status,2,c
 34989  001558  D026               	goto	l13530
 34990                           
 34991                           ; BSR set to: 0
 34992  00155A  0E01               	movlw	1
 34993  00155C  0100               	movlb	0	; () banked
 34994  00155E  27A4               	addwf	___fladd@b& (0+255),f,b
 34995  001560  0E00               	movlw	0
 34996  001562  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 34997  001564  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 34998  001566  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 34999                           
 35000                           ; BSR set to: 0
 35001  001568  0100               	movlb	0	; () banked
 35002  00156A  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 35003  00156C  D01C               	goto	l13530
 35004                           
 35005                           ; BSR set to: 0
 35006  00156E  C0A4  F0AC         	movff	___fladd@b,??___fladd
 35007  001572  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 35008  001576  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 35009  00157A  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 35010  00157E  0100               	movlb	0	; () banked
 35011  001580  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 35012  001582  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 35013  001584  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 35014  001586  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 35015  001588  33AC               	rrcf	??___fladd& (0+255),f,b
 35016  00158A  C0AC  F0A4         	movff	??___fladd,___fladd@b
 35017  00158E  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 35018  001592  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 35019  001596  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 35020  00159A  0100               	movlb	0	; () banked
 35021  00159C  29B6               	incf	___fladd@bexp& (0+255),w,b
 35022  00159E  B4D8               	btfsc	status,2,c
 35023  0015A0  D002               	goto	l13530
 35024                           
 35025                           ; BSR set to: 0
 35026  0015A2  0100               	movlb	0	; () banked
 35027  0015A4  2BB6               	incf	___fladd@bexp& (0+255),f,b
 35028  0015A6                     l13530:
 35029                           
 35030                           ; BSR set to: 0
 35031  0015A6  0100               	movlb	0	; () banked
 35032  0015A8  29B6               	incf	___fladd@bexp& (0+255),w,b
 35033  0015AA  B4D8               	btfsc	status,2,c
 35034  0015AC  D005               	goto	l13534
 35035                           
 35036                           ; BSR set to: 0
 35037  0015AE  0100               	movlb	0	; () banked
 35038  0015B0  51B6               	movf	___fladd@bexp& (0+255),w,b
 35039  0015B2  0100               	movlb	0	; () banked
 35040  0015B4  A4D8               	btfss	status,2,c
 35041  0015B6  D011               	goto	l13538
 35042  0015B8                     l13534:
 35043                           
 35044                           ; BSR set to: 0
 35045  0015B8  0E00               	movlw	0
 35046  0015BA  0100               	movlb	0	; () banked
 35047  0015BC  6FA4               	movwf	___fladd@b& (0+255),b
 35048  0015BE  0E00               	movlw	0
 35049  0015C0  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 35050  0015C2  0E00               	movlw	0
 35051  0015C4  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 35052  0015C6  0E00               	movlw	0
 35053  0015C8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 35054  0015CA  0100               	movlb	0	; () banked
 35055  0015CC  51B6               	movf	___fladd@bexp& (0+255),w,b
 35056  0015CE  0100               	movlb	0	; () banked
 35057  0015D0  A4D8               	btfss	status,2,c
 35058  0015D2  D003               	goto	l13538
 35059                           
 35060                           ; BSR set to: 0
 35061  0015D4  0E00               	movlw	0
 35062  0015D6  0100               	movlb	0	; () banked
 35063  0015D8  6FB4               	movwf	___fladd@signs& (0+255),b
 35064  0015DA                     l13538:
 35065                           
 35066                           ; BSR set to: 0
 35067  0015DA  0100               	movlb	0	; () banked
 35068  0015DC  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 35069  0015DE  D003               	goto	l13542
 35070                           
 35071                           ; BSR set to: 0
 35072  0015E0  0100               	movlb	0	; () banked
 35073  0015E2  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 35074  0015E4  D002               	goto	l13544
 35075  0015E6                     l13542:
 35076                           
 35077                           ; BSR set to: 0
 35078  0015E6  0100               	movlb	0	; () banked
 35079  0015E8  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 35080  0015EA                     l13544:
 35081                           
 35082                           ; BSR set to: 0
 35083  0015EA  0100               	movlb	0	; () banked
 35084  0015EC  90D8               	bcf	status,0,c
 35085  0015EE  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 35086  0015F0  0100               	movlb	0	; () banked
 35087  0015F2  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 35088                           
 35089                           ; BSR set to: 0
 35090  0015F4  0100               	movlb	0	; () banked
 35091  0015F6  AFB4               	btfss	___fladd@signs& (0+255),7,b
 35092  0015F8  D002               	goto	l13550
 35093                           
 35094                           ; BSR set to: 0
 35095  0015FA  0100               	movlb	0	; () banked
 35096  0015FC  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 35097  0015FE                     l13550:
 35098                           
 35099                           ; BSR set to: 0
 35100  0015FE  C0A4  F0A4         	movff	___fladd@b,?___fladd
 35101  001602  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 35102  001606  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 35103  00160A  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 35104  00160E  0012               	return	
 35105  001610                     __end_of___fladd:
 35106                           	opt stack 0
 35107                           tosu	equ	0xFFF
 35108                           tosh	equ	0xFFE
 35109                           tosl	equ	0xFFD
 35110                           pclath	equ	0xFFA
 35111                           tblptru	equ	0xFF8
 35112                           tblptrh	equ	0xFF7
 35113                           tblptrl	equ	0xFF6
 35114                           tablat	equ	0xFF5
 35115                           prodh	equ	0xFF4
 35116                           prodl	equ	0xFF3
 35117                           intcon	equ	0xFF2
 35118                           indf0	equ	0xFEF
 35119                           postinc0	equ	0xFEE
 35120                           fsr0h	equ	0xFEA
 35121                           fsr0l	equ	0xFE9
 35122                           wreg	equ	0xFE8
 35123                           indf1	equ	0xFE7
 35124                           postinc1	equ	0xFE6
 35125                           postdec1	equ	0xFE5
 35126                           plusw1	equ	0xFE3
 35127                           fsr1h	equ	0xFE2
 35128                           fsr1l	equ	0xFE1
 35129                           indf2	equ	0xFDF
 35130                           postinc2	equ	0xFDE
 35131                           postdec2	equ	0xFDD
 35132                           plusw2	equ	0xFDB
 35133                           fsr2h	equ	0xFDA
 35134                           fsr2l	equ	0xFD9
 35135                           status	equ	0xFD8
 35136                           
 35137 ;; *************** function _sample_all_power_on *****************
 35138 ;; Defined at:
 35139 ;;		line 88 in file "src/api/sample.c"
 35140 ;; Parameters:    Size  Location     Type
 35141 ;;		None
 35142 ;; Auto vars:     Size  Location     Type
 35143 ;;		None
 35144 ;; Return value:  Size  Location     Type
 35145 ;;                  1    wreg      void 
 35146 ;; Registers used:
 35147 ;;		wreg, status,2, status,0
 35148 ;; Tracked objects:
 35149 ;;		On entry : 0/0
 35150 ;;		On exit  : 0/0
 35151 ;;		Unchanged: 0/0
 35152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35157 ;;Total ram usage:        0 bytes
 35158 ;; Hardware stack levels used:    1
 35159 ;; Hardware stack levels required when called:    4
 35160 ;; This function calls:
 35161 ;;		Nothing
 35162 ;; This function is called by:
 35163 ;;		_sample_function_enable_fi_in_rtc
 35164 ;; This function uses a non-reentrant model
 35165 ;;
 35166                           
 35167                           	psect	text182
 35168  00A314                     __ptext182:
 35169                           	opt stack 0
 35170  00A314                     _sample_all_power_on:
 35171                           	opt stack 24
 35172                           
 35173                           ;sample.c: 90: if(!sensorPowerOn){
 35174                           
 35175                           ; BSR set to: 0
 35176                           ;incstack = 0
 35177  00A314  502F               	movf	_sensorPowerOn,w,c	;volatile
 35178  00A316  A4D8               	btfss	status,2,c
 35179  00A318  0012               	return	
 35180                           
 35181                           ;sample.c: 91: do{ do{TRISH &= ~(1<<3);}while(0);; do{LATH |= (1<<3);}while(0);; }while(
      +                          0);;
 35182  00A31A  9699               	bcf	3993,3,c	;volatile
 35183  00A31C  8690               	bsf	3984,3,c	;volatile
 35184                           
 35185                           ;sample.c: 92: do{ do{TRISB &= ~(1<<5);}while(0);; do{LATB |= (1<<5);}while(0);; }while(
      +                          0);;
 35186  00A31E  9A93               	bcf	3987,5,c	;volatile
 35187  00A320  8A8A               	bsf	3978,5,c	;volatile
 35188                           
 35189                           ;sample.c: 93: sensorPowerOn=1;
 35190  00A322  0E01               	movlw	1
 35191  00A324  6E2F               	movwf	_sensorPowerOn,c	;volatile
 35192  00A326  0012               	return	
 35193  00A328                     __end_of_sample_all_power_on:
 35194                           	opt stack 0
 35195                           tosu	equ	0xFFF
 35196                           tosh	equ	0xFFE
 35197                           tosl	equ	0xFFD
 35198                           pclath	equ	0xFFA
 35199                           tblptru	equ	0xFF8
 35200                           tblptrh	equ	0xFF7
 35201                           tblptrl	equ	0xFF6
 35202                           tablat	equ	0xFF5
 35203                           prodh	equ	0xFF4
 35204                           prodl	equ	0xFF3
 35205                           intcon	equ	0xFF2
 35206                           indf0	equ	0xFEF
 35207                           postinc0	equ	0xFEE
 35208                           fsr0h	equ	0xFEA
 35209                           fsr0l	equ	0xFE9
 35210                           wreg	equ	0xFE8
 35211                           indf1	equ	0xFE7
 35212                           postinc1	equ	0xFE6
 35213                           postdec1	equ	0xFE5
 35214                           plusw1	equ	0xFE3
 35215                           fsr1h	equ	0xFE2
 35216                           fsr1l	equ	0xFE1
 35217                           indf2	equ	0xFDF
 35218                           postinc2	equ	0xFDE
 35219                           postdec2	equ	0xFDD
 35220                           plusw2	equ	0xFDB
 35221                           fsr2h	equ	0xFDA
 35222                           fsr2l	equ	0xFD9
 35223                           status	equ	0xFD8
 35224                           
 35225 ;; *************** function _sample_all_power_off *****************
 35226 ;; Defined at:
 35227 ;;		line 97 in file "src/api/sample.c"
 35228 ;; Parameters:    Size  Location     Type
 35229 ;;		None
 35230 ;; Auto vars:     Size  Location     Type
 35231 ;;		None
 35232 ;; Return value:  Size  Location     Type
 35233 ;;                  1    wreg      void 
 35234 ;; Registers used:
 35235 ;;		wreg, status,2, status,0
 35236 ;; Tracked objects:
 35237 ;;		On entry : 0/0
 35238 ;;		On exit  : 0/0
 35239 ;;		Unchanged: 0/0
 35240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35245 ;;Total ram usage:        0 bytes
 35246 ;; Hardware stack levels used:    1
 35247 ;; Hardware stack levels required when called:    4
 35248 ;; This function calls:
 35249 ;;		Nothing
 35250 ;; This function is called by:
 35251 ;;		_sample_function_enable_fi_in_rtc
 35252 ;; This function uses a non-reentrant model
 35253 ;;
 35254                           
 35255                           	psect	text183
 35256  00A35A                     __ptext183:
 35257                           	opt stack 0
 35258  00A35A                     _sample_all_power_off:
 35259                           	opt stack 24
 35260                           
 35261                           ;incstack = 0
 35262                           ;sample.c: 99: do{ do{TRISH &= ~(1<<3);}while(0);; do{LATH &= ~(1<<3);}while(0);; }while
      +                          (0);;
 35263  00A35A  9699               	bcf	3993,3,c	;volatile
 35264  00A35C  9690               	bcf	3984,3,c	;volatile
 35265                           
 35266                           ;sample.c: 100: do{ do{TRISB &= ~(1<<5);}while(0);; do{LATB &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 35267  00A35E  9A93               	bcf	3987,5,c	;volatile
 35268  00A360  9A8A               	bcf	3978,5,c	;volatile
 35269                           
 35270                           ;sample.c: 101: sensorPowerOn=0;
 35271  00A362  0E00               	movlw	0
 35272  00A364  6E2F               	movwf	_sensorPowerOn,c	;volatile
 35273  00A366  0012               	return		;funcret
 35274  00A368                     __end_of_sample_all_power_off:
 35275                           	opt stack 0
 35276                           tosu	equ	0xFFF
 35277                           tosh	equ	0xFFE
 35278                           tosl	equ	0xFFD
 35279                           pclath	equ	0xFFA
 35280                           tblptru	equ	0xFF8
 35281                           tblptrh	equ	0xFF7
 35282                           tblptrl	equ	0xFF6
 35283                           tablat	equ	0xFF5
 35284                           prodh	equ	0xFF4
 35285                           prodl	equ	0xFF3
 35286                           intcon	equ	0xFF2
 35287                           indf0	equ	0xFEF
 35288                           postinc0	equ	0xFEE
 35289                           fsr0h	equ	0xFEA
 35290                           fsr0l	equ	0xFE9
 35291                           wreg	equ	0xFE8
 35292                           indf1	equ	0xFE7
 35293                           postinc1	equ	0xFE6
 35294                           postdec1	equ	0xFE5
 35295                           plusw1	equ	0xFE3
 35296                           fsr1h	equ	0xFE2
 35297                           fsr1l	equ	0xFE1
 35298                           indf2	equ	0xFDF
 35299                           postinc2	equ	0xFDE
 35300                           postdec2	equ	0xFDD
 35301                           plusw2	equ	0xFDB
 35302                           fsr2h	equ	0xFDA
 35303                           fsr2l	equ	0xFD9
 35304                           status	equ	0xFD8
 35305                           
 35306 ;; *************** function _data_init_all *****************
 35307 ;; Defined at:
 35308 ;;		line 438 in file "src/api/data.c"
 35309 ;; Parameters:    Size  Location     Type
 35310 ;;		None
 35311 ;; Auto vars:     Size  Location     Type
 35312 ;;		None
 35313 ;; Return value:  Size  Location     Type
 35314 ;;                  1    wreg      void 
 35315 ;; Registers used:
 35316 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35317 ;; Tracked objects:
 35318 ;;		On entry : 0/0
 35319 ;;		On exit  : 0/0
 35320 ;;		Unchanged: 0/0
 35321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35326 ;;Total ram usage:        0 bytes
 35327 ;; Hardware stack levels used:    1
 35328 ;; Hardware stack levels required when called:   10
 35329 ;; This function calls:
 35330 ;;		_calib_data_init_diff_pr
 35331 ;;		_calib_data_init_pr
 35332 ;;		_data_sys_init
 35333 ;; This function is called by:
 35334 ;;		_main
 35335 ;; This function uses a non-reentrant model
 35336 ;;
 35337                           
 35338                           	psect	text184
 35339  00A368                     __ptext184:
 35340                           	opt stack 0
 35341  00A368                     _data_init_all:
 35342                           	opt stack 20
 35343                           
 35344                           ;data.c: 440: data_sys_init();
 35345                           
 35346                           ;incstack = 0
 35347  00A368  EC25  F024         	call	_data_sys_init	;wreg free
 35348                           
 35349                           ;data.c: 441: calib_data_init_diff_pr();
 35350  00A36C  EC05  F02C         	call	_calib_data_init_diff_pr	;wreg free
 35351                           
 35352                           ;data.c: 442: calib_data_init_pr();
 35353  00A370  EC70  F02B         	call	_calib_data_init_pr	;wreg free
 35354  00A374  0012               	return		;funcret
 35355  00A376                     __end_of_data_init_all:
 35356                           	opt stack 0
 35357                           tosu	equ	0xFFF
 35358                           tosh	equ	0xFFE
 35359                           tosl	equ	0xFFD
 35360                           pclath	equ	0xFFA
 35361                           tblptru	equ	0xFF8
 35362                           tblptrh	equ	0xFF7
 35363                           tblptrl	equ	0xFF6
 35364                           tablat	equ	0xFF5
 35365                           prodh	equ	0xFF4
 35366                           prodl	equ	0xFF3
 35367                           intcon	equ	0xFF2
 35368                           indf0	equ	0xFEF
 35369                           postinc0	equ	0xFEE
 35370                           fsr0h	equ	0xFEA
 35371                           fsr0l	equ	0xFE9
 35372                           wreg	equ	0xFE8
 35373                           indf1	equ	0xFE7
 35374                           postinc1	equ	0xFE6
 35375                           postdec1	equ	0xFE5
 35376                           plusw1	equ	0xFE3
 35377                           fsr1h	equ	0xFE2
 35378                           fsr1l	equ	0xFE1
 35379                           indf2	equ	0xFDF
 35380                           postinc2	equ	0xFDE
 35381                           postdec2	equ	0xFDD
 35382                           plusw2	equ	0xFDB
 35383                           fsr2h	equ	0xFDA
 35384                           fsr2l	equ	0xFD9
 35385                           status	equ	0xFD8
 35386                           
 35387 ;; *************** function _data_sys_init *****************
 35388 ;; Defined at:
 35389 ;;		line 163 in file "src/api/data.c"
 35390 ;; Parameters:    Size  Location     Type
 35391 ;;		None
 35392 ;; Auto vars:     Size  Location     Type
 35393 ;;  buf             2  131[BANK0 ] PTR unsigned char 
 35394 ;;		 -> stSysData(240), 
 35395 ;;  stp             2  129[BANK0 ] PTR struct .
 35396 ;;		 -> stSysData(240), 
 35397 ;;  t16             2  126[BANK0 ] unsigned int 
 35398 ;;  ret             1  128[BANK0 ] unsigned char 
 35399 ;; Return value:  Size  Location     Type
 35400 ;;                  1    wreg      unsigned char 
 35401 ;; Registers used:
 35402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35403 ;; Tracked objects:
 35404 ;;		On entry : 0/0
 35405 ;;		On exit  : 0/0
 35406 ;;		Unchanged: 0/0
 35407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35409 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35411 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35412 ;;Total ram usage:        7 bytes
 35413 ;; Hardware stack levels used:    1
 35414 ;; Hardware stack levels required when called:    7
 35415 ;; This function calls:
 35416 ;;		_crc_append
 35417 ;;		_crc_verify
 35418 ;;		_data_sys_cal_v1
 35419 ;;		_data_sys_cal_v2
 35420 ;;		_m_flash_read
 35421 ;;		_m_flash_write
 35422 ;;		_m_mem_cpy_len
 35423 ;; This function is called by:
 35424 ;;		_data_init_all
 35425 ;; This function uses a non-reentrant model
 35426 ;;
 35427                           
 35428                           	psect	text185
 35429  00484A                     __ptext185:
 35430                           	opt stack 0
 35431  00484A                     _data_sys_init:
 35432                           	opt stack 22
 35433                           
 35434                           ;data.c: 165: uint8_t ret;
 35435                           ;data.c: 166: uint16_t t16;
 35436                           ;data.c: 167: t16=sizeof(st_sysDataDef);
 35437                           
 35438                           ;incstack = 0
 35439  00484A  0E00               	movlw	0
 35440  00484C  0100               	movlb	0	; () banked
 35441  00484E  6FDF               	movwf	(data_sys_init@t16+1)& (0+255),b
 35442  004850  0EF0               	movlw	240
 35443  004852  6FDE               	movwf	data_sys_init@t16& (0+255),b
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;data.c: 168: uint8_t* buf=(uint8_t*)(&stSysData);
 35447  004854  0E00               	movlw	low _stSysData
 35448  004856  0100               	movlb	0	; () banked
 35449  004858  6FE3               	movwf	data_sys_init@buf& (0+255),b
 35450  00485A  0E02               	movlw	high _stSysData
 35451  00485C  0100               	movlb	0	; () banked
 35452  00485E  6FE4               	movwf	(data_sys_init@buf+1)& (0+255),b
 35453                           
 35454                           ; BSR set to: 0
 35455                           ;data.c: 169: st_sysDataDef* stp=(st_sysDataDef*)buf;
 35456  004860  C0E3  F0E1         	movff	data_sys_init@buf,data_sys_init@stp
 35457  004864  C0E4  F0E2         	movff	data_sys_init@buf+1,data_sys_init@stp+1
 35458                           
 35459                           ; BSR set to: 0
 35460                           ;data.c: 171: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 35461  004868  0E00               	movlw	0
 35462  00486A  0100               	movlb	0	; () banked
 35463  00486C  6F60               	movwf	m_flash_read@addr& (0+255),b
 35464  00486E  0EF4               	movlw	244
 35465  004870  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 35466  004872  0E00               	movlw	0
 35467  004874  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 35468  004876  0E00               	movlw	0
 35469  004878  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 35470  00487A  C0E3  F064         	movff	data_sys_init@buf,m_flash_read@buf
 35471  00487E  C0E4  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 35472  004882  0E00               	movlw	0
 35473  004884  0100               	movlb	0	; () banked
 35474  004886  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 35475  004888  0EF0               	movlw	240
 35476  00488A  6F66               	movwf	m_flash_read@len& (0+255),b
 35477  00488C  EC2B  F042         	call	_m_flash_read	;wreg free
 35478                           
 35479                           ;data.c: 172: ret=crc_verify(buf,sizeof(st_sysDataDef));
 35480  004890  C0E3  F06C         	movff	data_sys_init@buf,crc_verify@message
 35481  004894  C0E4  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 35482  004898  0E00               	movlw	0
 35483  00489A  0100               	movlb	0	; () banked
 35484  00489C  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 35485  00489E  0EF0               	movlw	240
 35486  0048A0  6F6E               	movwf	crc_verify@n& (0+255),b
 35487  0048A2  EC21  F041         	call	_crc_verify	;wreg free
 35488  0048A6  0100               	movlb	0	; () banked
 35489  0048A8  6FE0               	movwf	data_sys_init@ret& (0+255),b
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;data.c: 173: if(!ret){
 35493  0048AA  0100               	movlb	0	; () banked
 35494  0048AC  51E0               	movf	data_sys_init@ret& (0+255),w,b
 35495  0048AE  0100               	movlb	0	; () banked
 35496  0048B0  A4D8               	btfss	status,2,c
 35497  0048B2  0012               	return	
 35498                           
 35499                           ; BSR set to: 0
 35500                           ;data.c: 174: m_mem_cpy_len(buf,(uint8_t*)(&defultSystemData),sizeof(st_sysDataDef));
 35501  0048B4  C0E3  F060         	movff	data_sys_init@buf,m_mem_cpy_len@d
 35502  0048B8  C0E4  F061         	movff	data_sys_init@buf+1,m_mem_cpy_len@d+1
 35503  0048BC  0E45               	movlw	low _defultSystemData
 35504  0048BE  0100               	movlb	0	; () banked
 35505  0048C0  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 35506  0048C2  0EF2               	movlw	high _defultSystemData
 35507  0048C4  0100               	movlb	0	; () banked
 35508  0048C6  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 35509  0048C8  0E00               	movlw	0
 35510  0048CA  0100               	movlb	0	; () banked
 35511  0048CC  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 35512  0048CE  0EF0               	movlw	240
 35513  0048D0  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 35514  0048D2  EC97  F04B         	call	_m_mem_cpy_len	;wreg free
 35515                           
 35516                           ;data.c: 175: stp->V1=data_sys_cal_v1(stp);
 35517  0048D6  C0E1  F0C2         	movff	data_sys_init@stp,data_sys_cal_v1@stp
 35518  0048DA  C0E2  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v1@stp+1
 35519  0048DE  EC15  F01C         	call	_data_sys_cal_v1	;wreg free
 35520  0048E2  0100               	movlb	0	; () banked
 35521  0048E4  EE20 F010          	lfsr	2,16
 35522  0048E8  51E1               	movf	data_sys_init@stp& (0+255),w,b
 35523  0048EA  26D9               	addwf	fsr2l,f,c
 35524  0048EC  51E2               	movf	(data_sys_init@stp+1)& (0+255),w,b
 35525  0048EE  22DA               	addwfc	fsr2h,f,c
 35526  0048F0  0100               	movlb	0	; () banked
 35527  0048F2  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 35528  0048F6  0100               	movlb	0	; () banked
 35529  0048F8  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 35530  0048FC  0100               	movlb	0	; () banked
 35531  0048FE  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 35532  004902  0100               	movlb	0	; () banked
 35533  004904  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 35534                           
 35535                           ; BSR set to: 0
 35536                           ;data.c: 176: stp->V2=data_sys_cal_v2(stp);
 35537  004908  C0E1  F0C2         	movff	data_sys_init@stp,data_sys_cal_v2@stp
 35538  00490C  C0E2  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v2@stp+1
 35539  004910  ECFB  F026         	call	_data_sys_cal_v2	;wreg free
 35540  004914  0100               	movlb	0	; () banked
 35541  004916  EE20 F014          	lfsr	2,20
 35542  00491A  51E1               	movf	data_sys_init@stp& (0+255),w,b
 35543  00491C  26D9               	addwf	fsr2l,f,c
 35544  00491E  51E2               	movf	(data_sys_init@stp+1)& (0+255),w,b
 35545  004920  22DA               	addwfc	fsr2h,f,c
 35546  004922  0100               	movlb	0	; () banked
 35547  004924  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 35548  004928  0100               	movlb	0	; () banked
 35549  00492A  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 35550  00492E  0100               	movlb	0	; () banked
 35551  004930  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 35552  004934  0100               	movlb	0	; () banked
 35553  004936  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 35554                           
 35555                           ; BSR set to: 0
 35556                           ;data.c: 177: crc_append(buf,sizeof(st_sysDataDef)-2);
 35557  00493A  C0E3  F06C         	movff	data_sys_init@buf,crc_append@message
 35558  00493E  C0E4  F06D         	movff	data_sys_init@buf+1,crc_append@message+1
 35559  004942  0E00               	movlw	0
 35560  004944  0100               	movlb	0	; () banked
 35561  004946  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 35562  004948  0EEE               	movlw	238
 35563  00494A  6F6E               	movwf	crc_append@n& (0+255),b
 35564  00494C  EC65  F047         	call	_crc_append	;wreg free
 35565                           
 35566                           ;data.c: 178: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 35567  004950  0E00               	movlw	0
 35568  004952  0100               	movlb	0	; () banked
 35569  004954  6F6E               	movwf	m_flash_write@addr& (0+255),b
 35570  004956  0EF4               	movlw	244
 35571  004958  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 35572  00495A  0E00               	movlw	0
 35573  00495C  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 35574  00495E  0E00               	movlw	0
 35575  004960  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 35576  004962  C0E3  F072         	movff	data_sys_init@buf,m_flash_write@buf
 35577  004966  C0E4  F073         	movff	data_sys_init@buf+1,m_flash_write@buf+1
 35578  00496A  0E00               	movlw	0
 35579  00496C  0100               	movlb	0	; () banked
 35580  00496E  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 35581  004970  0EF0               	movlw	240
 35582  004972  6F74               	movwf	m_flash_write@len& (0+255),b
 35583  004974  ECA5  F029         	call	_m_flash_write	;wreg free
 35584                           
 35585                           ;data.c: 179: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 35586  004978  0E00               	movlw	0
 35587  00497A  0100               	movlb	0	; () banked
 35588  00497C  6F60               	movwf	m_flash_read@addr& (0+255),b
 35589  00497E  0EF4               	movlw	244
 35590  004980  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 35591  004982  0E00               	movlw	0
 35592  004984  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 35593  004986  0E00               	movlw	0
 35594  004988  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 35595  00498A  C0E3  F064         	movff	data_sys_init@buf,m_flash_read@buf
 35596  00498E  C0E4  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 35597  004992  0E00               	movlw	0
 35598  004994  0100               	movlb	0	; () banked
 35599  004996  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 35600  004998  0EF0               	movlw	240
 35601  00499A  6F66               	movwf	m_flash_read@len& (0+255),b
 35602  00499C  EC2B  F042         	call	_m_flash_read	;wreg free
 35603                           
 35604                           ;data.c: 180: ret=crc_verify(buf,sizeof(st_sysDataDef));
 35605  0049A0  C0E3  F06C         	movff	data_sys_init@buf,crc_verify@message
 35606  0049A4  C0E4  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 35607  0049A8  0E00               	movlw	0
 35608  0049AA  0100               	movlb	0	; () banked
 35609  0049AC  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 35610  0049AE  0EF0               	movlw	240
 35611  0049B0  6F6E               	movwf	crc_verify@n& (0+255),b
 35612  0049B2  EC21  F041         	call	_crc_verify	;wreg free
 35613  0049B6  0100               	movlb	0	; () banked
 35614  0049B8  6FE0               	movwf	data_sys_init@ret& (0+255),b
 35615                           
 35616                           ; BSR set to: 0
 35617  0049BA  0012               	return	
 35618  0049BC                     __end_of_data_sys_init:
 35619                           	opt stack 0
 35620                           tosu	equ	0xFFF
 35621                           tosh	equ	0xFFE
 35622                           tosl	equ	0xFFD
 35623                           pclath	equ	0xFFA
 35624                           tblptru	equ	0xFF8
 35625                           tblptrh	equ	0xFF7
 35626                           tblptrl	equ	0xFF6
 35627                           tablat	equ	0xFF5
 35628                           prodh	equ	0xFF4
 35629                           prodl	equ	0xFF3
 35630                           intcon	equ	0xFF2
 35631                           indf0	equ	0xFEF
 35632                           postinc0	equ	0xFEE
 35633                           fsr0h	equ	0xFEA
 35634                           fsr0l	equ	0xFE9
 35635                           wreg	equ	0xFE8
 35636                           indf1	equ	0xFE7
 35637                           postinc1	equ	0xFE6
 35638                           postdec1	equ	0xFE5
 35639                           plusw1	equ	0xFE3
 35640                           fsr1h	equ	0xFE2
 35641                           fsr1l	equ	0xFE1
 35642                           indf2	equ	0xFDF
 35643                           postinc2	equ	0xFDE
 35644                           postdec2	equ	0xFDD
 35645                           plusw2	equ	0xFDB
 35646                           fsr2h	equ	0xFDA
 35647                           fsr2l	equ	0xFD9
 35648                           status	equ	0xFD8
 35649                           
 35650 ;; *************** function _m_flash_write *****************
 35651 ;; Defined at:
 35652 ;;		line 63 in file "src/driver/m_flash.c"
 35653 ;; Parameters:    Size  Location     Type
 35654 ;;  addr            4   14[BANK0 ] unsigned long 
 35655 ;;  buf             2   18[BANK0 ] PTR unsigned char 
 35656 ;;		 -> m_flash_test@tmp(16), stSysData(240), 
 35657 ;;  len             2   20[BANK0 ] unsigned int 
 35658 ;; Auto vars:     Size  Location     Type
 35659 ;;  pageAddr        4   26[BANK0 ] unsigned long 
 35660 ;;  t16             2   33[BANK0 ] unsigned int 
 35661 ;;  tmpBuf          2   31[BANK0 ] PTR unsigned char 
 35662 ;;		 -> globleBuffer(256), 
 35663 ;;  j               1   30[BANK0 ] unsigned char 
 35664 ;;  i               1   25[BANK0 ] unsigned char 
 35665 ;;  writeTimes      1   24[BANK0 ] unsigned char 
 35666 ;; Return value:  Size  Location     Type
 35667 ;;                  2   14[BANK0 ] unsigned int 
 35668 ;; Registers used:
 35669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35670 ;; Tracked objects:
 35671 ;;		On entry : 0/0
 35672 ;;		On exit  : 0/0
 35673 ;;		Unchanged: 0/0
 35674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35675 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35676 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35677 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35678 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35679 ;;Total ram usage:       21 bytes
 35680 ;; Hardware stack levels used:    1
 35681 ;; Hardware stack levels required when called:    6
 35682 ;; This function calls:
 35683 ;;		_m_flash_erase
 35684 ;;		_m_flash_read
 35685 ;;		_m_flash_unlock
 35686 ;;		_m_mem_cpy_len
 35687 ;; This function is called by:
 35688 ;;		_data_sys_init
 35689 ;;		___sys_data_save_write_flash
 35690 ;;		_data_sys_save
 35691 ;;		_m_flash_test
 35692 ;; This function uses a non-reentrant model
 35693 ;;
 35694                           
 35695                           	psect	text186
 35696  00534A                     __ptext186:
 35697                           	opt stack 0
 35698  00534A                     _m_flash_write:
 35699                           	opt stack 20
 35700                           
 35701                           ;m_flash.c: 65: uint8_t i,j,writeTimes;
 35702                           ;m_flash.c: 66: uint32_t pageAddr;
 35703                           ;m_flash.c: 67: uint16_t t16;
 35704                           ;m_flash.c: 68: uint8_t* tmpBuf=globleBuffer;
 35705                           
 35706                           ; BSR set to: 0
 35707                           ;incstack = 0
 35708  00534A  0E00               	movlw	low _globleBuffer
 35709  00534C  0100               	movlb	0	; () banked
 35710  00534E  6F7F               	movwf	m_flash_write@tmpBuf& (0+255),b
 35711  005350  0E05               	movlw	high _globleBuffer
 35712  005352  0100               	movlb	0	; () banked
 35713  005354  6F80               	movwf	(m_flash_write@tmpBuf+1)& (0+255),b
 35714                           
 35715                           ;m_flash.c: 70: t16=addr & ((1024)-1);
 35716  005356  0EFF               	movlw	255
 35717  005358  0100               	movlb	0	; () banked
 35718  00535A  156E               	andwf	m_flash_write@addr& (0+255),w,b
 35719  00535C  0100               	movlb	0	; () banked
 35720  00535E  6F81               	movwf	m_flash_write@t16& (0+255),b
 35721  005360  0E03               	movlw	3
 35722  005362  0100               	movlb	0	; () banked
 35723  005364  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 35724  005366  0100               	movlb	0	; () banked
 35725  005368  6F82               	movwf	(m_flash_write@t16+1)& (0+255),b
 35726                           
 35727                           ;m_flash.c: 71: if(t16+len>(64)*4)return 0;
 35728  00536A  0100               	movlb	0	; () banked
 35729  00536C  5174               	movf	m_flash_write@len& (0+255),w,b
 35730  00536E  0100               	movlb	0	; () banked
 35731  005370  2581               	addwf	m_flash_write@t16& (0+255),w,b
 35732  005372  0100               	movlb	0	; () banked
 35733  005374  6F76               	movwf	??_m_flash_write& (0+255),b
 35734  005376  0100               	movlb	0	; () banked
 35735  005378  5175               	movf	(m_flash_write@len+1)& (0+255),w,b
 35736  00537A  0100               	movlb	0	; () banked
 35737  00537C  2182               	addwfc	(m_flash_write@t16+1)& (0+255),w,b
 35738  00537E  0100               	movlb	0	; () banked
 35739  005380  6F77               	movwf	(??_m_flash_write+1)& (0+255),b
 35740  005382  0100               	movlb	0	; () banked
 35741  005384  0576               	decf	??_m_flash_write& (0+255),w,b
 35742  005386  0E01               	movlw	1
 35743  005388  0100               	movlb	0	; () banked
 35744  00538A  5977               	subwfb	(??_m_flash_write+1)& (0+255),w,b
 35745  00538C  B0D8               	btfsc	status,0,c
 35746  00538E  0012               	return	
 35747                           
 35748                           ; BSR set to: 0
 35749                           ;m_flash.c: 73: pageAddr=addr & ~((1024)-1);
 35750                           
 35751                           ; BSR set to: 0
 35752                           
 35753                           ; BSR set to: 0
 35754                           ;	Return value of _m_flash_write is never used
 35755  005390  0E00               	movlw	0
 35756  005392  0100               	movlb	0	; () banked
 35757  005394  156E               	andwf	m_flash_write@addr& (0+255),w,b
 35758  005396  0100               	movlb	0	; () banked
 35759  005398  6F7A               	movwf	m_flash_write@pageAddr& (0+255),b
 35760  00539A  0EFC               	movlw	252
 35761  00539C  0100               	movlb	0	; () banked
 35762  00539E  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 35763  0053A0  0100               	movlb	0	; () banked
 35764  0053A2  6F7B               	movwf	(m_flash_write@pageAddr+1)& (0+255),b
 35765  0053A4  0EFF               	movlw	255
 35766  0053A6  0100               	movlb	0	; () banked
 35767  0053A8  1570               	andwf	(m_flash_write@addr+2)& (0+255),w,b
 35768  0053AA  0100               	movlb	0	; () banked
 35769  0053AC  6F7C               	movwf	(m_flash_write@pageAddr+2)& (0+255),b
 35770  0053AE  0EFF               	movlw	255
 35771  0053B0  0100               	movlb	0	; () banked
 35772  0053B2  1571               	andwf	(m_flash_write@addr+3)& (0+255),w,b
 35773  0053B4  0100               	movlb	0	; () banked
 35774  0053B6  6F7D               	movwf	(m_flash_write@pageAddr+3)& (0+255),b
 35775                           
 35776                           ; BSR set to: 0
 35777                           ;m_flash.c: 74: m_flash_read(pageAddr,tmpBuf,(64)*4);
 35778  0053B8  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_read@addr
 35779  0053BC  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_read@addr+1
 35780  0053C0  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_read@addr+2
 35781  0053C4  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_read@addr+3
 35782  0053C8  C07F  F064         	movff	m_flash_write@tmpBuf,m_flash_read@buf
 35783  0053CC  C080  F065         	movff	m_flash_write@tmpBuf+1,m_flash_read@buf+1
 35784  0053D0  0E01               	movlw	1
 35785  0053D2  0100               	movlb	0	; () banked
 35786  0053D4  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 35787  0053D6  0E00               	movlw	0
 35788  0053D8  6F66               	movwf	m_flash_read@len& (0+255),b
 35789  0053DA  EC2B  F042         	call	_m_flash_read	;wreg free
 35790                           
 35791                           ;m_flash.c: 75: m_mem_cpy_len(tmpBuf+t16,buf,len);
 35792  0053DE  0100               	movlb	0	; () banked
 35793  0053E0  5181               	movf	m_flash_write@t16& (0+255),w,b
 35794  0053E2  0100               	movlb	0	; () banked
 35795  0053E4  257F               	addwf	m_flash_write@tmpBuf& (0+255),w,b
 35796  0053E6  0100               	movlb	0	; () banked
 35797  0053E8  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 35798  0053EA  0100               	movlb	0	; () banked
 35799  0053EC  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 35800  0053EE  0100               	movlb	0	; () banked
 35801  0053F0  2180               	addwfc	(m_flash_write@tmpBuf+1)& (0+255),w,b
 35802  0053F2  0100               	movlb	0	; () banked
 35803  0053F4  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 35804  0053F6  C072  F062         	movff	m_flash_write@buf,m_mem_cpy_len@s
 35805  0053FA  C073  F063         	movff	m_flash_write@buf+1,m_mem_cpy_len@s+1
 35806  0053FE  C074  F064         	movff	m_flash_write@len,m_mem_cpy_len@len
 35807  005402  C075  F065         	movff	m_flash_write@len+1,m_mem_cpy_len@len+1
 35808  005406  EC97  F04B         	call	_m_mem_cpy_len	;wreg free
 35809                           
 35810                           ;m_flash.c: 77: m_flash_erase(pageAddr);
 35811  00540A  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_erase@addr
 35812  00540E  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_erase@addr+1
 35813  005412  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_erase@addr+2
 35814  005416  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_erase@addr+3
 35815  00541A  ECA1  F049         	call	_m_flash_erase	;wreg free
 35816                           
 35817                           ;m_flash.c: 79: writeTimes=(64)*4/(64);
 35818  00541E  0E04               	movlw	4
 35819  005420  0100               	movlb	0	; () banked
 35820  005422  6F78               	movwf	m_flash_write@writeTimes& (0+255),b
 35821                           
 35822                           ; BSR set to: 0
 35823                           ;m_flash.c: 80: t16=(uint16_t)(tmpBuf);
 35824  005424  C07F  F081         	movff	m_flash_write@tmpBuf,m_flash_write@t16
 35825  005428  C080  F082         	movff	m_flash_write@tmpBuf+1,m_flash_write@t16+1
 35826                           
 35827                           ; BSR set to: 0
 35828                           ;m_flash.c: 82: FSR0L=(uint8_t)(t16&0x00ff);
 35829  00542C  C081  FFE9         	movff	m_flash_write@t16,fsr0l	;volatile
 35830                           
 35831                           ; BSR set to: 0
 35832                           ;m_flash.c: 83: t16>>=8;
 35833  005430  0100               	movlb	0	; () banked
 35834  005432  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 35835  005434  6F81               	movwf	m_flash_write@t16& (0+255),b
 35836  005436  6B82               	clrf	(m_flash_write@t16+1)& (0+255),b
 35837                           
 35838                           ; BSR set to: 0
 35839                           ;m_flash.c: 84: FSR0H=(uint8_t)(t16&0x00ff);
 35840  005438  C081  FFEA         	movff	m_flash_write@t16,fsr0h	;volatile
 35841                           
 35842                           ; BSR set to: 0
 35843                           ;m_flash.c: 86: for(i=0;i<writeTimes;i++){
 35844  00543C  0E00               	movlw	0
 35845  00543E  0100               	movlb	0	; () banked
 35846  005440  6F79               	movwf	m_flash_write@i& (0+255),b
 35847  005442  D017               	goto	l14434
 35848  005444                     l14418:
 35849                           
 35850                           ; BSR set to: 0
 35851                           ;m_flash.c: 87: for(j=0;j<(64);j++){
 35852  005444  0E00               	movlw	0
 35853  005446  0100               	movlb	0	; () banked
 35854  005448  6F7E               	movwf	m_flash_write@j& (0+255),b
 35855  00544A                     l14420:
 35856                           
 35857                           ; BSR set to: 0
 35858  00544A  0E3F               	movlw	63
 35859  00544C  0100               	movlb	0	; () banked
 35860  00544E  657E               	cpfsgt	m_flash_write@j& (0+255),b
 35861  005450  D001               	goto	l2235
 35862  005452  D007               	goto	l2236
 35863  005454                     l2235:
 35864                           
 35865                           ; BSR set to: 0
 35866  005454  CFEE FFE8          	movff	postinc0,wreg	;# 
 35867  005458  6EF5               	movwf	tablat,c	;# 
 35868  00545A  000D               	tblwt		*+	;# 
 35869  00545C  0100               	movlb	0	; () banked
 35870  00545E  2B7E               	incf	m_flash_write@j& (0+255),f,b
 35871  005460  D7F4               	goto	l14420
 35872  005462                     l2236:
 35873                           
 35874                           ; BSR set to: 0
 35875  005462  000A               	tblrd		*-	;# 
 35876                           
 35877                           ;m_flash.c: 93: EECON1bits.WREN=1;
 35878  005464  84A6               	bsf	4006,2,c	;volatile
 35879                           
 35880                           ;m_flash.c: 94: m_flash_unlock();
 35881  005466  ECF7  F050         	call	_m_flash_unlock	;wreg free
 35882                           
 35883                           ;m_flash.c: 95: EECON1bits.WREN=0;
 35884  00546A  94A6               	bcf	4006,2,c	;volatile
 35885  00546C  000D               	tblwt		*+	;# 
 35886  00546E  0100               	movlb	0	; () banked
 35887  005470  2B79               	incf	m_flash_write@i& (0+255),f,b
 35888  005472                     l14434:
 35889                           
 35890                           ; BSR set to: 0
 35891  005472  0100               	movlb	0	; () banked
 35892  005474  5178               	movf	m_flash_write@writeTimes& (0+255),w,b
 35893  005476  0100               	movlb	0	; () banked
 35894  005478  5D79               	subwf	m_flash_write@i& (0+255),w,b
 35895  00547A  B0D8               	btfsc	status,0,c
 35896  00547C  0012               	return	
 35897  00547E  D7E2               	goto	l14418
 35898  005480                     __end_of_m_flash_write:
 35899                           	opt stack 0
 35900                           tosu	equ	0xFFF
 35901                           tosh	equ	0xFFE
 35902                           tosl	equ	0xFFD
 35903                           pclath	equ	0xFFA
 35904                           tblptru	equ	0xFF8
 35905                           tblptrh	equ	0xFF7
 35906                           tblptrl	equ	0xFF6
 35907                           tablat	equ	0xFF5
 35908                           prodh	equ	0xFF4
 35909                           prodl	equ	0xFF3
 35910                           intcon	equ	0xFF2
 35911                           indf0	equ	0xFEF
 35912                           postinc0	equ	0xFEE
 35913                           fsr0h	equ	0xFEA
 35914                           fsr0l	equ	0xFE9
 35915                           wreg	equ	0xFE8
 35916                           indf1	equ	0xFE7
 35917                           postinc1	equ	0xFE6
 35918                           postdec1	equ	0xFE5
 35919                           plusw1	equ	0xFE3
 35920                           fsr1h	equ	0xFE2
 35921                           fsr1l	equ	0xFE1
 35922                           indf2	equ	0xFDF
 35923                           postinc2	equ	0xFDE
 35924                           postdec2	equ	0xFDD
 35925                           plusw2	equ	0xFDB
 35926                           fsr2h	equ	0xFDA
 35927                           fsr2l	equ	0xFD9
 35928                           status	equ	0xFD8
 35929                           
 35930 ;; *************** function _m_flash_read *****************
 35931 ;; Defined at:
 35932 ;;		line 46 in file "src/driver/m_flash.c"
 35933 ;; Parameters:    Size  Location     Type
 35934 ;;  addr            4    0[BANK0 ] unsigned long 
 35935 ;;  buf             2    4[BANK0 ] PTR unsigned char 
 35936 ;;		 -> m_flash_test@tmp(16), globleBuffer(256), stSysData(240), 
 35937 ;;  len             2    6[BANK0 ] unsigned int 
 35938 ;; Auto vars:     Size  Location     Type
 35939 ;;  t32             4   10[BANK0 ] unsigned long 
 35940 ;;  i               2    8[BANK0 ] unsigned int 
 35941 ;; Return value:  Size  Location     Type
 35942 ;;                  2    0[BANK0 ] unsigned int 
 35943 ;; Registers used:
 35944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35945 ;; Tracked objects:
 35946 ;;		On entry : 0/0
 35947 ;;		On exit  : 0/0
 35948 ;;		Unchanged: 0/0
 35949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35950 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35951 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35953 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35954 ;;Total ram usage:       14 bytes
 35955 ;; Hardware stack levels used:    1
 35956 ;; Hardware stack levels required when called:    4
 35957 ;; This function calls:
 35958 ;;		Nothing
 35959 ;; This function is called by:
 35960 ;;		_data_sys_init
 35961 ;;		___sys_data_save_write_flash
 35962 ;;		_m_flash_write
 35963 ;;		_data_sys_save
 35964 ;;		_m_flash_test
 35965 ;; This function uses a non-reentrant model
 35966 ;;
 35967                           
 35968                           	psect	text187
 35969  008456                     __ptext187:
 35970                           	opt stack 0
 35971  008456                     _m_flash_read:
 35972                           	opt stack 21
 35973                           
 35974                           ;m_flash.c: 48: uint16_t i;
 35975                           ;m_flash.c: 49: uint32_t t32=addr;
 35976                           
 35977                           ; BSR set to: 0
 35978                           ;incstack = 0
 35979  008456  C060  F06A         	movff	m_flash_read@addr,m_flash_read@t32
 35980  00845A  C061  F06B         	movff	m_flash_read@addr+1,m_flash_read@t32+1
 35981  00845E  C062  F06C         	movff	m_flash_read@addr+2,m_flash_read@t32+2
 35982  008462  C063  F06D         	movff	m_flash_read@addr+3,m_flash_read@t32+3
 35983                           
 35984                           ;m_flash.c: 51: TBLPTRL=(uint8_t)(t32 & 0xfful);
 35985  008466  C06A  FFF6         	movff	m_flash_read@t32,tblptrl	;volatile
 35986                           
 35987                           ;m_flash.c: 52: t32>>=8;
 35988  00846A  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 35989  00846E  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 35990  008472  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 35991  008476  0100               	movlb	0	; () banked
 35992  008478  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 35993                           
 35994                           ; BSR set to: 0
 35995                           ;m_flash.c: 53: TBLPTRH=(uint8_t)(t32 & 0xfful);
 35996  00847A  C06A  FFF7         	movff	m_flash_read@t32,tblptrh	;volatile
 35997                           
 35998                           ;m_flash.c: 54: t32>>=8;
 35999  00847E  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 36000  008482  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 36001  008486  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 36002  00848A  0100               	movlb	0	; () banked
 36003  00848C  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 36004                           
 36005                           ; BSR set to: 0
 36006                           ;m_flash.c: 55: TBLPTRU=(uint8_t)(t32 & 0xfful);
 36007  00848E  C06A  FFF8         	movff	m_flash_read@t32,tblptru	;volatile
 36008                           
 36009                           ; BSR set to: 0
 36010                           ;m_flash.c: 57: for(i=0;i<len;i++){
 36011  008492  0E00               	movlw	0
 36012  008494  0100               	movlb	0	; () banked
 36013  008496  6F69               	movwf	(m_flash_read@i+1)& (0+255),b
 36014  008498  0E00               	movlw	0
 36015  00849A  6F68               	movwf	m_flash_read@i& (0+255),b
 36016  00849C  D010               	goto	l13942
 36017  00849E                     l2226:
 36018                           
 36019                           ; BSR set to: 0
 36020  00849E  0009               	tblrd		*+	;# 
 36021                           
 36022                           ;m_flash.c: 59: buf[i]=TABLAT;
 36023  0084A0  0100               	movlb	0	; () banked
 36024  0084A2  5168               	movf	m_flash_read@i& (0+255),w,b
 36025  0084A4  0100               	movlb	0	; () banked
 36026  0084A6  2564               	addwf	m_flash_read@buf& (0+255),w,b
 36027  0084A8  6ED9               	movwf	fsr2l,c
 36028  0084AA  0100               	movlb	0	; () banked
 36029  0084AC  5169               	movf	(m_flash_read@i+1)& (0+255),w,b
 36030  0084AE  0100               	movlb	0	; () banked
 36031  0084B0  2165               	addwfc	(m_flash_read@buf+1)& (0+255),w,b
 36032  0084B2  6EDA               	movwf	fsr2h,c
 36033  0084B4  CFF5 FFDF          	movff	tablat,indf2	;volatile
 36034                           
 36035                           ; BSR set to: 0
 36036  0084B8  0100               	movlb	0	; () banked
 36037  0084BA  4B68               	infsnz	m_flash_read@i& (0+255),f,b
 36038  0084BC  2B69               	incf	(m_flash_read@i+1)& (0+255),f,b
 36039  0084BE                     l13942:
 36040                           
 36041                           ; BSR set to: 0
 36042  0084BE  0100               	movlb	0	; () banked
 36043  0084C0  5166               	movf	m_flash_read@len& (0+255),w,b
 36044  0084C2  0100               	movlb	0	; () banked
 36045  0084C4  5D68               	subwf	m_flash_read@i& (0+255),w,b
 36046  0084C6  0100               	movlb	0	; () banked
 36047  0084C8  5167               	movf	(m_flash_read@len+1)& (0+255),w,b
 36048  0084CA  0100               	movlb	0	; () banked
 36049  0084CC  5969               	subwfb	(m_flash_read@i+1)& (0+255),w,b
 36050  0084CE  B0D8               	btfsc	status,0,c
 36051  0084D0  0012               	return	
 36052  0084D2  D7E5               	goto	l2226
 36053  0084D4                     __end_of_m_flash_read:
 36054                           	opt stack 0
 36055                           tosu	equ	0xFFF
 36056                           tosh	equ	0xFFE
 36057                           tosl	equ	0xFFD
 36058                           pclath	equ	0xFFA
 36059                           tblptru	equ	0xFF8
 36060                           tblptrh	equ	0xFF7
 36061                           tblptrl	equ	0xFF6
 36062                           tablat	equ	0xFF5
 36063                           prodh	equ	0xFF4
 36064                           prodl	equ	0xFF3
 36065                           intcon	equ	0xFF2
 36066                           indf0	equ	0xFEF
 36067                           postinc0	equ	0xFEE
 36068                           fsr0h	equ	0xFEA
 36069                           fsr0l	equ	0xFE9
 36070                           wreg	equ	0xFE8
 36071                           indf1	equ	0xFE7
 36072                           postinc1	equ	0xFE6
 36073                           postdec1	equ	0xFE5
 36074                           plusw1	equ	0xFE3
 36075                           fsr1h	equ	0xFE2
 36076                           fsr1l	equ	0xFE1
 36077                           indf2	equ	0xFDF
 36078                           postinc2	equ	0xFDE
 36079                           postdec2	equ	0xFDD
 36080                           plusw2	equ	0xFDB
 36081                           fsr2h	equ	0xFDA
 36082                           fsr2l	equ	0xFD9
 36083                           status	equ	0xFD8
 36084                           
 36085 ;; *************** function _m_flash_erase *****************
 36086 ;; Defined at:
 36087 ;;		line 30 in file "src/driver/m_flash.c"
 36088 ;; Parameters:    Size  Location     Type
 36089 ;;  addr            4    0[BANK0 ] unsigned long 
 36090 ;; Auto vars:     Size  Location     Type
 36091 ;;  t32             4    4[BANK0 ] unsigned long 
 36092 ;; Return value:  Size  Location     Type
 36093 ;;                  1    wreg      void 
 36094 ;; Registers used:
 36095 ;;		wreg, status,2, status,0, cstack
 36096 ;; Tracked objects:
 36097 ;;		On entry : 0/0
 36098 ;;		On exit  : 0/0
 36099 ;;		Unchanged: 0/0
 36100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36102 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36105 ;;Total ram usage:        8 bytes
 36106 ;; Hardware stack levels used:    1
 36107 ;; Hardware stack levels required when called:    5
 36108 ;; This function calls:
 36109 ;;		_m_flash_unlock
 36110 ;; This function is called by:
 36111 ;;		_m_flash_write
 36112 ;; This function uses a non-reentrant model
 36113 ;;
 36114                           
 36115                           	psect	text188
 36116  009342                     __ptext188:
 36117                           	opt stack 0
 36118  009342                     _m_flash_erase:
 36119                           	opt stack 20
 36120                           
 36121                           ;m_flash.c: 32: uint32_t t32=addr;
 36122                           
 36123                           ; BSR set to: 0
 36124                           ;incstack = 0
 36125  009342  C060  F064         	movff	m_flash_erase@addr,m_flash_erase@t32
 36126  009346  C061  F065         	movff	m_flash_erase@addr+1,m_flash_erase@t32+1
 36127  00934A  C062  F066         	movff	m_flash_erase@addr+2,m_flash_erase@t32+2
 36128  00934E  C063  F067         	movff	m_flash_erase@addr+3,m_flash_erase@t32+3
 36129                           
 36130                           ;m_flash.c: 33: t32 &= (~0x3fful);
 36131  009352  0E00               	movlw	0
 36132  009354  0100               	movlb	0	; () banked
 36133  009356  1764               	andwf	m_flash_erase@t32& (0+255),f,b
 36134  009358  0EFC               	movlw	252
 36135  00935A  1765               	andwf	(m_flash_erase@t32+1)& (0+255),f,b
 36136  00935C  0EFF               	movlw	255
 36137  00935E  1766               	andwf	(m_flash_erase@t32+2)& (0+255),f,b
 36138  009360  0EFF               	movlw	255
 36139  009362  1767               	andwf	(m_flash_erase@t32+3)& (0+255),f,b
 36140                           
 36141                           ; BSR set to: 0
 36142                           ;m_flash.c: 36: TBLPTRL=(uint8_t)(t32 & 0xfful);
 36143  009364  C064  FFF6         	movff	m_flash_erase@t32,tblptrl	;volatile
 36144                           
 36145                           ; BSR set to: 0
 36146                           ;m_flash.c: 37: t32>>=8;
 36147  009368  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 36148  00936C  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 36149  009370  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 36150  009374  0100               	movlb	0	; () banked
 36151  009376  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 36152                           
 36153                           ; BSR set to: 0
 36154                           ;m_flash.c: 38: TBLPTRH=(uint8_t)(t32 & 0xfful);
 36155  009378  C064  FFF7         	movff	m_flash_erase@t32,tblptrh	;volatile
 36156                           
 36157                           ; BSR set to: 0
 36158                           ;m_flash.c: 39: t32>>=8;
 36159  00937C  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 36160  009380  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 36161  009384  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 36162  009388  0100               	movlb	0	; () banked
 36163  00938A  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 36164                           
 36165                           ; BSR set to: 0
 36166                           ;m_flash.c: 40: TBLPTRU=(uint8_t)(t32 & 0xfful);
 36167  00938C  C064  FFF8         	movff	m_flash_erase@t32,tblptru	;volatile
 36168                           
 36169                           ; BSR set to: 0
 36170                           ;m_flash.c: 41: EECON1bits.WREN=1;
 36171  009390  84A6               	bsf	4006,2,c	;volatile
 36172                           
 36173                           ; BSR set to: 0
 36174                           ;m_flash.c: 42: EECON1bits.FREE=1;
 36175  009392  88A6               	bsf	4006,4,c	;volatile
 36176                           
 36177                           ; BSR set to: 0
 36178                           ;m_flash.c: 43: m_flash_unlock();
 36179  009394  ECF7  F050         	call	_m_flash_unlock	;wreg free
 36180                           
 36181                           ;m_flash.c: 44: EECON1bits.WREN=0;
 36182  009398  94A6               	bcf	4006,2,c	;volatile
 36183  00939A  0012               	return		;funcret
 36184  00939C                     __end_of_m_flash_erase:
 36185                           	opt stack 0
 36186                           tosu	equ	0xFFF
 36187                           tosh	equ	0xFFE
 36188                           tosl	equ	0xFFD
 36189                           pclath	equ	0xFFA
 36190                           tblptru	equ	0xFF8
 36191                           tblptrh	equ	0xFF7
 36192                           tblptrl	equ	0xFF6
 36193                           tablat	equ	0xFF5
 36194                           prodh	equ	0xFF4
 36195                           prodl	equ	0xFF3
 36196                           intcon	equ	0xFF2
 36197                           indf0	equ	0xFEF
 36198                           postinc0	equ	0xFEE
 36199                           fsr0h	equ	0xFEA
 36200                           fsr0l	equ	0xFE9
 36201                           wreg	equ	0xFE8
 36202                           indf1	equ	0xFE7
 36203                           postinc1	equ	0xFE6
 36204                           postdec1	equ	0xFE5
 36205                           plusw1	equ	0xFE3
 36206                           fsr1h	equ	0xFE2
 36207                           fsr1l	equ	0xFE1
 36208                           indf2	equ	0xFDF
 36209                           postinc2	equ	0xFDE
 36210                           postdec2	equ	0xFDD
 36211                           plusw2	equ	0xFDB
 36212                           fsr2h	equ	0xFDA
 36213                           fsr2l	equ	0xFD9
 36214                           status	equ	0xFD8
 36215                           
 36216 ;; *************** function _m_flash_unlock *****************
 36217 ;; Defined at:
 36218 ;;		line 9 in file "src/driver/m_flash.c"
 36219 ;; Parameters:    Size  Location     Type
 36220 ;;		None
 36221 ;; Auto vars:     Size  Location     Type
 36222 ;;  oldGIE          1   31[COMRAM] volatile unsigned char 
 36223 ;; Return value:  Size  Location     Type
 36224 ;;                  1    wreg      void 
 36225 ;; Registers used:
 36226 ;;		None
 36227 ;; Tracked objects:
 36228 ;;		On entry : 0/0
 36229 ;;		On exit  : 0/0
 36230 ;;		Unchanged: 0/0
 36231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36236 ;;Total ram usage:        1 bytes
 36237 ;; Hardware stack levels used:    1
 36238 ;; Hardware stack levels required when called:    4
 36239 ;; This function calls:
 36240 ;;		Nothing
 36241 ;; This function is called by:
 36242 ;;		_m_flash_erase
 36243 ;;		_m_flash_write
 36244 ;; This function uses a non-reentrant model
 36245 ;;
 36246                           
 36247                           	psect	text189
 36248  00A1EE                     __ptext189:
 36249                           	opt stack 0
 36250  00A1EE                     _m_flash_unlock:
 36251                           	opt stack 21
 36252                           
 36253                           ;m_flash.c: 11: volatile unsigned char oldGIE;
 36254                           ;m_flash.c: 14: oldGIE=INTCON;
 36255                           
 36256                           ;incstack = 0
 36257  00A1EE  CFF2 F020          	movff	intcon,m_flash_unlock@oldGIE	;volatile
 36258                           
 36259                           ;m_flash.c: 15: INTCONbits.GIE = 0;
 36260  00A1F2  9EF2               	bcf	intcon,7,c	;volatile
 36261                           
 36262                           ;m_flash.c: 16: __nop();
 36263  00A1F4  F000               	nop	
 36264  00A1F6  0E55               	movlw	85	;# 
 36265  00A1F8  6EA7               	movwf	4007,c	;# 
 36266  00A1FA  0EAA               	movlw	170	;# 
 36267  00A1FC  6EA7               	movwf	4007,c	;# 
 36268                           
 36269                           ;m_flash.c: 22: EECON1bits.WR=1;
 36270  00A1FE  82A6               	bsf	4006,1,c	;volatile
 36271                           
 36272                           ;m_flash.c: 23: __nop();
 36273  00A200  F000               	nop	
 36274                           
 36275                           ;m_flash.c: 27: INTCON=oldGIE;
 36276  00A202  C020  FFF2         	movff	m_flash_unlock@oldGIE,intcon	;volatile
 36277                           
 36278                           ;m_flash.c: 28: return;
 36279  00A206  0012               	return		;funcret
 36280  00A208                     __end_of_m_flash_unlock:
 36281                           	opt stack 0
 36282                           tosu	equ	0xFFF
 36283                           tosh	equ	0xFFE
 36284                           tosl	equ	0xFFD
 36285                           pclath	equ	0xFFA
 36286                           tblptru	equ	0xFF8
 36287                           tblptrh	equ	0xFF7
 36288                           tblptrl	equ	0xFF6
 36289                           tablat	equ	0xFF5
 36290                           prodh	equ	0xFF4
 36291                           prodl	equ	0xFF3
 36292                           intcon	equ	0xFF2
 36293                           indf0	equ	0xFEF
 36294                           postinc0	equ	0xFEE
 36295                           fsr0h	equ	0xFEA
 36296                           fsr0l	equ	0xFE9
 36297                           wreg	equ	0xFE8
 36298                           indf1	equ	0xFE7
 36299                           postinc1	equ	0xFE6
 36300                           postdec1	equ	0xFE5
 36301                           plusw1	equ	0xFE3
 36302                           fsr1h	equ	0xFE2
 36303                           fsr1l	equ	0xFE1
 36304                           indf2	equ	0xFDF
 36305                           postinc2	equ	0xFDE
 36306                           postdec2	equ	0xFDD
 36307                           plusw2	equ	0xFDB
 36308                           fsr2h	equ	0xFDA
 36309                           fsr2l	equ	0xFD9
 36310                           status	equ	0xFD8
 36311                           
 36312 ;; *************** function _data_sys_cal_v2 *****************
 36313 ;; Defined at:
 36314 ;;		line 153 in file "src/api/data.c"
 36315 ;; Parameters:    Size  Location     Type
 36316 ;;  stp             2   98[BANK0 ] PTR struct .
 36317 ;;		 -> stSysData(240), 
 36318 ;; Auto vars:     Size  Location     Type
 36319 ;;  d               4  114[BANK0 ] float 
 36320 ;;  f               4  110[BANK0 ] float 
 36321 ;; Return value:  Size  Location     Type
 36322 ;;                  4   98[BANK0 ] unsigned long 
 36323 ;; Registers used:
 36324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36325 ;; Tracked objects:
 36326 ;;		On entry : 0/0
 36327 ;;		On exit  : 0/0
 36328 ;;		Unchanged: 0/0
 36329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36330 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36331 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36333 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36334 ;;Total ram usage:       20 bytes
 36335 ;; Hardware stack levels used:    1
 36336 ;; Hardware stack levels required when called:    5
 36337 ;; This function calls:
 36338 ;;		___fldiv
 36339 ;;		___flmul
 36340 ;;		___fltol
 36341 ;;		___xxtofl
 36342 ;; This function is called by:
 36343 ;;		_data_sys_init
 36344 ;;		___sys_data_save_write_flash
 36345 ;; This function uses a non-reentrant model
 36346 ;;
 36347                           
 36348                           	psect	text190
 36349  004DF6                     __ptext190:
 36350                           	opt stack 0
 36351  004DF6                     _data_sys_cal_v2:
 36352                           	opt stack 21
 36353                           
 36354                           ;data.c: 155: float d,f;
 36355                           ;data.c: 156: d=(float)(stp->d);
 36356                           
 36357                           ;incstack = 0
 36358  004DF6  0100               	movlb	0	; () banked
 36359  004DF8  EE20 F00C          	lfsr	2,12
 36360  004DFC  51C2               	movf	data_sys_cal_v2@stp& (0+255),w,b
 36361  004DFE  26D9               	addwf	fsr2l,f,c
 36362  004E00  51C3               	movf	(data_sys_cal_v2@stp+1)& (0+255),w,b
 36363  004E02  22DA               	addwfc	fsr2h,f,c
 36364  004E04  CFDE F060          	movff	postinc2,___xxtofl@val
 36365  004E08  CFDE F061          	movff	postinc2,___xxtofl@val+1
 36366  004E0C  CFDE F062          	movff	postinc2,___xxtofl@val+2
 36367  004E10  CFDE F063          	movff	postinc2,___xxtofl@val+3
 36368  004E14  0E00               	movlw	0
 36369  004E16  ECDA  F01F         	call	___xxtofl
 36370  004E1A  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v2@d
 36371  004E1E  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v2@d+1
 36372  004E22  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v2@d+2
 36373  004E26  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v2@d+3
 36374                           
 36375                           ;data.c: 157: d=d/1000;
 36376  004E2A  C0D2  F087         	movff	data_sys_cal_v2@d,___fldiv@b
 36377  004E2E  C0D3  F088         	movff	data_sys_cal_v2@d+1,___fldiv@b+1
 36378  004E32  C0D4  F089         	movff	data_sys_cal_v2@d+2,___fldiv@b+2
 36379  004E36  C0D5  F08A         	movff	data_sys_cal_v2@d+3,___fldiv@b+3
 36380  004E3A  0E00               	movlw	0
 36381  004E3C  0100               	movlb	0	; () banked
 36382  004E3E  6F8B               	movwf	___fldiv@a& (0+255),b
 36383  004E40  0E00               	movlw	0
 36384  004E42  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36385  004E44  0E7A               	movlw	122
 36386  004E46  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36387  004E48  0E44               	movlw	68
 36388  004E4A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36389  004E4C  ECA9  F011         	call	___fldiv	;wreg free
 36390  004E50  C087  F0D2         	movff	?___fldiv,data_sys_cal_v2@d
 36391  004E54  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v2@d+1
 36392  004E58  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v2@d+2
 36393  004E5C  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v2@d+3
 36394                           
 36395                           ;data.c: 158: f=0.2618f*d*d*d;
 36396  004E60  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 36397  004E64  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 36398  004E68  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 36399  004E6C  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 36400  004E70  C0D2  F06E         	movff	data_sys_cal_v2@d,___flmul@b
 36401  004E74  C0D3  F06F         	movff	data_sys_cal_v2@d+1,___flmul@b+1
 36402  004E78  C0D4  F070         	movff	data_sys_cal_v2@d+2,___flmul@b+2
 36403  004E7C  C0D5  F071         	movff	data_sys_cal_v2@d+3,___flmul@b+3
 36404  004E80  EC08  F00B         	call	___flmul	;wreg free
 36405  004E84  C06E  F0C6         	movff	?___flmul,_data_sys_cal_v2$5867
 36406  004E88  C06F  F0C7         	movff	?___flmul+1,_data_sys_cal_v2$5867+1
 36407  004E8C  C070  F0C8         	movff	?___flmul+2,_data_sys_cal_v2$5867+2
 36408  004E90  C071  F0C9         	movff	?___flmul+3,_data_sys_cal_v2$5867+3
 36409                           
 36410                           ;data.c: 158: f=0.2618f*d*d*d;
 36411  004E94  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 36412  004E98  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 36413  004E9C  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 36414  004EA0  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 36415  004EA4  C0C6  F06E         	movff	_data_sys_cal_v2$5867,___flmul@b
 36416  004EA8  C0C7  F06F         	movff	_data_sys_cal_v2$5867+1,___flmul@b+1
 36417  004EAC  C0C8  F070         	movff	_data_sys_cal_v2$5867+2,___flmul@b+2
 36418  004EB0  C0C9  F071         	movff	_data_sys_cal_v2$5867+3,___flmul@b+3
 36419  004EB4  EC08  F00B         	call	___flmul	;wreg free
 36420  004EB8  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v2$5868
 36421  004EBC  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v2$5868+1
 36422  004EC0  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v2$5868+2
 36423  004EC4  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v2$5868+3
 36424                           
 36425                           ;data.c: 158: f=0.2618f*d*d*d;
 36426  004EC8  C0CA  F06E         	movff	_data_sys_cal_v2$5868,___flmul@b
 36427  004ECC  C0CB  F06F         	movff	_data_sys_cal_v2$5868+1,___flmul@b+1
 36428  004ED0  C0CC  F070         	movff	_data_sys_cal_v2$5868+2,___flmul@b+2
 36429  004ED4  C0CD  F071         	movff	_data_sys_cal_v2$5868+3,___flmul@b+3
 36430  004ED8  0EA6               	movlw	166
 36431  004EDA  0100               	movlb	0	; () banked
 36432  004EDC  6F72               	movwf	___flmul@a& (0+255),b
 36433  004EDE  0E0A               	movlw	10
 36434  004EE0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36435  004EE2  0E86               	movlw	134
 36436  004EE4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36437  004EE6  0E3E               	movlw	62
 36438  004EE8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36439  004EEA  EC08  F00B         	call	___flmul	;wreg free
 36440  004EEE  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 36441  004EF2  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 36442  004EF6  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 36443  004EFA  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 36444                           
 36445                           ;data.c: 159: f*=1000;
 36446  004EFE  C0CE  F06E         	movff	data_sys_cal_v2@f,___flmul@b
 36447  004F02  C0CF  F06F         	movff	data_sys_cal_v2@f+1,___flmul@b+1
 36448  004F06  C0D0  F070         	movff	data_sys_cal_v2@f+2,___flmul@b+2
 36449  004F0A  C0D1  F071         	movff	data_sys_cal_v2@f+3,___flmul@b+3
 36450  004F0E  0E00               	movlw	0
 36451  004F10  0100               	movlb	0	; () banked
 36452  004F12  6F72               	movwf	___flmul@a& (0+255),b
 36453  004F14  0E00               	movlw	0
 36454  004F16  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36455  004F18  0E7A               	movlw	122
 36456  004F1A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36457  004F1C  0E44               	movlw	68
 36458  004F1E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36459  004F20  EC08  F00B         	call	___flmul	;wreg free
 36460  004F24  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 36461  004F28  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 36462  004F2C  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 36463  004F30  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 36464                           
 36465                           ;data.c: 160: return (uint32_t)f;
 36466  004F34  C0CE  F0B8         	movff	data_sys_cal_v2@f,___fltol@f1
 36467  004F38  C0CF  F0B9         	movff	data_sys_cal_v2@f+1,___fltol@f1+1
 36468  004F3C  C0D0  F0BA         	movff	data_sys_cal_v2@f+2,___fltol@f1+2
 36469  004F40  C0D1  F0BB         	movff	data_sys_cal_v2@f+3,___fltol@f1+3
 36470  004F44  EC43  F02E         	call	___fltol	;wreg free
 36471  004F48  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v2
 36472  004F4C  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v2+1
 36473  004F50  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v2+2
 36474  004F54  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v2+3
 36475  004F58  0012               	return	
 36476  004F5A                     __end_of_data_sys_cal_v2:
 36477                           	opt stack 0
 36478                           tosu	equ	0xFFF
 36479                           tosh	equ	0xFFE
 36480                           tosl	equ	0xFFD
 36481                           pclath	equ	0xFFA
 36482                           tblptru	equ	0xFF8
 36483                           tblptrh	equ	0xFF7
 36484                           tblptrl	equ	0xFF6
 36485                           tablat	equ	0xFF5
 36486                           prodh	equ	0xFF4
 36487                           prodl	equ	0xFF3
 36488                           intcon	equ	0xFF2
 36489                           indf0	equ	0xFEF
 36490                           postinc0	equ	0xFEE
 36491                           fsr0h	equ	0xFEA
 36492                           fsr0l	equ	0xFE9
 36493                           wreg	equ	0xFE8
 36494                           indf1	equ	0xFE7
 36495                           postinc1	equ	0xFE6
 36496                           postdec1	equ	0xFE5
 36497                           plusw1	equ	0xFE3
 36498                           fsr1h	equ	0xFE2
 36499                           fsr1l	equ	0xFE1
 36500                           indf2	equ	0xFDF
 36501                           postinc2	equ	0xFDE
 36502                           postdec2	equ	0xFDD
 36503                           plusw2	equ	0xFDB
 36504                           fsr2h	equ	0xFDA
 36505                           fsr2l	equ	0xFD9
 36506                           status	equ	0xFD8
 36507                           
 36508 ;; *************** function _data_sys_cal_v1 *****************
 36509 ;; Defined at:
 36510 ;;		line 141 in file "src/api/data.c"
 36511 ;; Parameters:    Size  Location     Type
 36512 ;;  stp             2   98[BANK0 ] PTR struct .
 36513 ;;		 -> stSysData(240), 
 36514 ;; Auto vars:     Size  Location     Type
 36515 ;;  r               4  122[BANK0 ] float 
 36516 ;;  f               4  118[BANK0 ] float 
 36517 ;;  h               4  114[BANK0 ] float 
 36518 ;; Return value:  Size  Location     Type
 36519 ;;                  4   98[BANK0 ] unsigned long 
 36520 ;; Registers used:
 36521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36522 ;; Tracked objects:
 36523 ;;		On entry : 0/0
 36524 ;;		On exit  : 0/0
 36525 ;;		Unchanged: 0/0
 36526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36528 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36530 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36531 ;;Total ram usage:       28 bytes
 36532 ;; Hardware stack levels used:    1
 36533 ;; Hardware stack levels required when called:    5
 36534 ;; This function calls:
 36535 ;;		___fldiv
 36536 ;;		___flmul
 36537 ;;		___fltol
 36538 ;;		___xxtofl
 36539 ;; This function is called by:
 36540 ;;		_data_sys_init
 36541 ;;		___sys_data_save_write_flash
 36542 ;; This function uses a non-reentrant model
 36543 ;;
 36544                           
 36545                           	psect	text191
 36546  00382A                     __ptext191:
 36547                           	opt stack 0
 36548  00382A                     _data_sys_cal_v1:
 36549                           	opt stack 21
 36550                           
 36551                           ;data.c: 143: float r,h,f;
 36552                           ;data.c: 144: r=(float)(stp->d);
 36553                           
 36554                           ;incstack = 0
 36555  00382A  0100               	movlb	0	; () banked
 36556  00382C  EE20 F00C          	lfsr	2,12
 36557  003830  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 36558  003832  26D9               	addwf	fsr2l,f,c
 36559  003834  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 36560  003836  22DA               	addwfc	fsr2h,f,c
 36561  003838  CFDE F060          	movff	postinc2,___xxtofl@val
 36562  00383C  CFDE F061          	movff	postinc2,___xxtofl@val+1
 36563  003840  CFDE F062          	movff	postinc2,___xxtofl@val+2
 36564  003844  CFDE F063          	movff	postinc2,___xxtofl@val+3
 36565  003848  0E00               	movlw	0
 36566  00384A  ECDA  F01F         	call	___xxtofl
 36567  00384E  C060  F0DA         	movff	?___xxtofl,data_sys_cal_v1@r
 36568  003852  C061  F0DB         	movff	?___xxtofl+1,data_sys_cal_v1@r+1
 36569  003856  C062  F0DC         	movff	?___xxtofl+2,data_sys_cal_v1@r+2
 36570  00385A  C063  F0DD         	movff	?___xxtofl+3,data_sys_cal_v1@r+3
 36571                           
 36572                           ;data.c: 145: h=(float)(stp->h);
 36573  00385E  0100               	movlb	0	; () banked
 36574  003860  EE20 F008          	lfsr	2,8
 36575  003864  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 36576  003866  26D9               	addwf	fsr2l,f,c
 36577  003868  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 36578  00386A  22DA               	addwfc	fsr2h,f,c
 36579  00386C  CFDE F060          	movff	postinc2,___xxtofl@val
 36580  003870  CFDE F061          	movff	postinc2,___xxtofl@val+1
 36581  003874  CFDE F062          	movff	postinc2,___xxtofl@val+2
 36582  003878  CFDE F063          	movff	postinc2,___xxtofl@val+3
 36583  00387C  0E01               	movlw	1
 36584  00387E  ECDA  F01F         	call	___xxtofl
 36585  003882  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v1@h
 36586  003886  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v1@h+1
 36587  00388A  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v1@h+2
 36588  00388E  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v1@h+3
 36589                           
 36590                           ;data.c: 146: r=r/1000/2;
 36591  003892  0E00               	movlw	0
 36592  003894  0100               	movlb	0	; () banked
 36593  003896  6F8B               	movwf	___fldiv@a& (0+255),b
 36594  003898  0E00               	movlw	0
 36595  00389A  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36596  00389C  0E7A               	movlw	122
 36597  00389E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36598  0038A0  0E44               	movlw	68
 36599  0038A2  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36600  0038A4  C0DA  F087         	movff	data_sys_cal_v1@r,___fldiv@b
 36601  0038A8  C0DB  F088         	movff	data_sys_cal_v1@r+1,___fldiv@b+1
 36602  0038AC  C0DC  F089         	movff	data_sys_cal_v1@r+2,___fldiv@b+2
 36603  0038B0  C0DD  F08A         	movff	data_sys_cal_v1@r+3,___fldiv@b+3
 36604  0038B4  ECA9  F011         	call	___fldiv	;wreg free
 36605  0038B8  C087  F0C6         	movff	?___fldiv,_data_sys_cal_v1$5864
 36606  0038BC  C088  F0C7         	movff	?___fldiv+1,_data_sys_cal_v1$5864+1
 36607  0038C0  C089  F0C8         	movff	?___fldiv+2,_data_sys_cal_v1$5864+2
 36608  0038C4  C08A  F0C9         	movff	?___fldiv+3,_data_sys_cal_v1$5864+3
 36609                           
 36610                           ;data.c: 146: r=r/1000/2;
 36611  0038C8  C0C6  F087         	movff	_data_sys_cal_v1$5864,___fldiv@b
 36612  0038CC  C0C7  F088         	movff	_data_sys_cal_v1$5864+1,___fldiv@b+1
 36613  0038D0  C0C8  F089         	movff	_data_sys_cal_v1$5864+2,___fldiv@b+2
 36614  0038D4  C0C9  F08A         	movff	_data_sys_cal_v1$5864+3,___fldiv@b+3
 36615  0038D8  0E00               	movlw	0
 36616  0038DA  0100               	movlb	0	; () banked
 36617  0038DC  6F8B               	movwf	___fldiv@a& (0+255),b
 36618  0038DE  0E00               	movlw	0
 36619  0038E0  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36620  0038E2  0E00               	movlw	0
 36621  0038E4  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36622  0038E6  0E40               	movlw	64
 36623  0038E8  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36624  0038EA  ECA9  F011         	call	___fldiv	;wreg free
 36625  0038EE  C087  F0DA         	movff	?___fldiv,data_sys_cal_v1@r
 36626  0038F2  C088  F0DB         	movff	?___fldiv+1,data_sys_cal_v1@r+1
 36627  0038F6  C089  F0DC         	movff	?___fldiv+2,data_sys_cal_v1@r+2
 36628  0038FA  C08A  F0DD         	movff	?___fldiv+3,data_sys_cal_v1@r+3
 36629                           
 36630                           ;data.c: 147: h=h/1000;
 36631  0038FE  C0D2  F087         	movff	data_sys_cal_v1@h,___fldiv@b
 36632  003902  C0D3  F088         	movff	data_sys_cal_v1@h+1,___fldiv@b+1
 36633  003906  C0D4  F089         	movff	data_sys_cal_v1@h+2,___fldiv@b+2
 36634  00390A  C0D5  F08A         	movff	data_sys_cal_v1@h+3,___fldiv@b+3
 36635  00390E  0E00               	movlw	0
 36636  003910  0100               	movlb	0	; () banked
 36637  003912  6F8B               	movwf	___fldiv@a& (0+255),b
 36638  003914  0E00               	movlw	0
 36639  003916  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 36640  003918  0E7A               	movlw	122
 36641  00391A  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 36642  00391C  0E44               	movlw	68
 36643  00391E  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 36644  003920  ECA9  F011         	call	___fldiv	;wreg free
 36645  003924  C087  F0D2         	movff	?___fldiv,data_sys_cal_v1@h
 36646  003928  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v1@h+1
 36647  00392C  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v1@h+2
 36648  003930  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v1@h+3
 36649                           
 36650                           ;data.c: 148: f=h*(r*r)*3.1416f;
 36651  003934  C0DA  F072         	movff	data_sys_cal_v1@r,___flmul@a
 36652  003938  C0DB  F073         	movff	data_sys_cal_v1@r+1,___flmul@a+1
 36653  00393C  C0DC  F074         	movff	data_sys_cal_v1@r+2,___flmul@a+2
 36654  003940  C0DD  F075         	movff	data_sys_cal_v1@r+3,___flmul@a+3
 36655  003944  C0DA  F06E         	movff	data_sys_cal_v1@r,___flmul@b
 36656  003948  C0DB  F06F         	movff	data_sys_cal_v1@r+1,___flmul@b+1
 36657  00394C  C0DC  F070         	movff	data_sys_cal_v1@r+2,___flmul@b+2
 36658  003950  C0DD  F071         	movff	data_sys_cal_v1@r+3,___flmul@b+3
 36659  003954  EC08  F00B         	call	___flmul	;wreg free
 36660  003958  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v1$5865
 36661  00395C  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v1$5865+1
 36662  003960  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v1$5865+2
 36663  003964  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v1$5865+3
 36664                           
 36665                           ;data.c: 148: f=h*(r*r)*3.1416f;
 36666  003968  C0D2  F072         	movff	data_sys_cal_v1@h,___flmul@a
 36667  00396C  C0D3  F073         	movff	data_sys_cal_v1@h+1,___flmul@a+1
 36668  003970  C0D4  F074         	movff	data_sys_cal_v1@h+2,___flmul@a+2
 36669  003974  C0D5  F075         	movff	data_sys_cal_v1@h+3,___flmul@a+3
 36670  003978  C0CA  F06E         	movff	_data_sys_cal_v1$5865,___flmul@b
 36671  00397C  C0CB  F06F         	movff	_data_sys_cal_v1$5865+1,___flmul@b+1
 36672  003980  C0CC  F070         	movff	_data_sys_cal_v1$5865+2,___flmul@b+2
 36673  003984  C0CD  F071         	movff	_data_sys_cal_v1$5865+3,___flmul@b+3
 36674  003988  EC08  F00B         	call	___flmul	;wreg free
 36675  00398C  C06E  F0CE         	movff	?___flmul,_data_sys_cal_v1$5866
 36676  003990  C06F  F0CF         	movff	?___flmul+1,_data_sys_cal_v1$5866+1
 36677  003994  C070  F0D0         	movff	?___flmul+2,_data_sys_cal_v1$5866+2
 36678  003998  C071  F0D1         	movff	?___flmul+3,_data_sys_cal_v1$5866+3
 36679                           
 36680                           ;data.c: 148: f=h*(r*r)*3.1416f;
 36681  00399C  C0CE  F06E         	movff	_data_sys_cal_v1$5866,___flmul@b
 36682  0039A0  C0CF  F06F         	movff	_data_sys_cal_v1$5866+1,___flmul@b+1
 36683  0039A4  C0D0  F070         	movff	_data_sys_cal_v1$5866+2,___flmul@b+2
 36684  0039A8  C0D1  F071         	movff	_data_sys_cal_v1$5866+3,___flmul@b+3
 36685  0039AC  0EF9               	movlw	249
 36686  0039AE  0100               	movlb	0	; () banked
 36687  0039B0  6F72               	movwf	___flmul@a& (0+255),b
 36688  0039B2  0E0F               	movlw	15
 36689  0039B4  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36690  0039B6  0E49               	movlw	73
 36691  0039B8  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36692  0039BA  0E40               	movlw	64
 36693  0039BC  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36694  0039BE  EC08  F00B         	call	___flmul	;wreg free
 36695  0039C2  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 36696  0039C6  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 36697  0039CA  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 36698  0039CE  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 36699                           
 36700                           ;data.c: 149: f*=1000;
 36701  0039D2  C0D6  F06E         	movff	data_sys_cal_v1@f,___flmul@b
 36702  0039D6  C0D7  F06F         	movff	data_sys_cal_v1@f+1,___flmul@b+1
 36703  0039DA  C0D8  F070         	movff	data_sys_cal_v1@f+2,___flmul@b+2
 36704  0039DE  C0D9  F071         	movff	data_sys_cal_v1@f+3,___flmul@b+3
 36705  0039E2  0E00               	movlw	0
 36706  0039E4  0100               	movlb	0	; () banked
 36707  0039E6  6F72               	movwf	___flmul@a& (0+255),b
 36708  0039E8  0E00               	movlw	0
 36709  0039EA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 36710  0039EC  0E7A               	movlw	122
 36711  0039EE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 36712  0039F0  0E44               	movlw	68
 36713  0039F2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 36714  0039F4  EC08  F00B         	call	___flmul	;wreg free
 36715  0039F8  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 36716  0039FC  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 36717  003A00  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 36718  003A04  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 36719                           
 36720                           ;data.c: 150: return (uint32_t)f;
 36721  003A08  C0D6  F0B8         	movff	data_sys_cal_v1@f,___fltol@f1
 36722  003A0C  C0D7  F0B9         	movff	data_sys_cal_v1@f+1,___fltol@f1+1
 36723  003A10  C0D8  F0BA         	movff	data_sys_cal_v1@f+2,___fltol@f1+2
 36724  003A14  C0D9  F0BB         	movff	data_sys_cal_v1@f+3,___fltol@f1+3
 36725  003A18  EC43  F02E         	call	___fltol	;wreg free
 36726  003A1C  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v1
 36727  003A20  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v1+1
 36728  003A24  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v1+2
 36729  003A28  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v1+3
 36730  003A2C  0012               	return	
 36731  003A2E                     __end_of_data_sys_cal_v1:
 36732                           	opt stack 0
 36733                           tosu	equ	0xFFF
 36734                           tosh	equ	0xFFE
 36735                           tosl	equ	0xFFD
 36736                           pclath	equ	0xFFA
 36737                           tblptru	equ	0xFF8
 36738                           tblptrh	equ	0xFF7
 36739                           tblptrl	equ	0xFF6
 36740                           tablat	equ	0xFF5
 36741                           prodh	equ	0xFF4
 36742                           prodl	equ	0xFF3
 36743                           intcon	equ	0xFF2
 36744                           indf0	equ	0xFEF
 36745                           postinc0	equ	0xFEE
 36746                           fsr0h	equ	0xFEA
 36747                           fsr0l	equ	0xFE9
 36748                           wreg	equ	0xFE8
 36749                           indf1	equ	0xFE7
 36750                           postinc1	equ	0xFE6
 36751                           postdec1	equ	0xFE5
 36752                           plusw1	equ	0xFE3
 36753                           fsr1h	equ	0xFE2
 36754                           fsr1l	equ	0xFE1
 36755                           indf2	equ	0xFDF
 36756                           postinc2	equ	0xFDE
 36757                           postdec2	equ	0xFDD
 36758                           plusw2	equ	0xFDB
 36759                           fsr2h	equ	0xFDA
 36760                           fsr2l	equ	0xFD9
 36761                           status	equ	0xFD8
 36762                           
 36763 ;; *************** function ___xxtofl *****************
 36764 ;; Defined at:
 36765 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\xxtofl.c"
 36766 ;; Parameters:    Size  Location     Type
 36767 ;;  sign            1    wreg     unsigned char 
 36768 ;;  val             4    0[BANK0 ] long 
 36769 ;; Auto vars:     Size  Location     Type
 36770 ;;  sign            1    8[BANK0 ] unsigned char 
 36771 ;;  arg             4   10[BANK0 ] unsigned long 
 36772 ;;  exp             1    9[BANK0 ] unsigned char 
 36773 ;; Return value:  Size  Location     Type
 36774 ;;                  4    0[BANK0 ] unsigned char 
 36775 ;; Registers used:
 36776 ;;		wreg, status,2, status,0
 36777 ;; Tracked objects:
 36778 ;;		On entry : 0/0
 36779 ;;		On exit  : 0/0
 36780 ;;		Unchanged: 0/0
 36781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36783 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36784 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36785 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36786 ;;Total ram usage:       14 bytes
 36787 ;; Hardware stack levels used:    1
 36788 ;; Hardware stack levels required when called:    4
 36789 ;; This function calls:
 36790 ;;		Nothing
 36791 ;; This function is called by:
 36792 ;;		_data_sys_cal_v1
 36793 ;;		_data_sys_cal_v2
 36794 ;;		_m_interp1_float_fast
 36795 ;;		_cal_diff_hight_to_vol_h
 36796 ;;		_cal_diff_hight_level
 36797 ;;		_cal_diff_hight_to_vol_v
 36798 ;;		_cal_diff_p_to_h
 36799 ;; This function uses a non-reentrant model
 36800 ;;
 36801                           
 36802                           	psect	text192
 36803  003FB4                     __ptext192:
 36804                           	opt stack 0
 36805  003FB4                     ___xxtofl:
 36806                           	opt stack 21
 36807                           
 36808                           ;incstack = 0
 36809                           ;___xxtofl@sign stored from wreg
 36810  003FB4  0100               	movlb	0	; () banked
 36811  003FB6  6F68               	movwf	___xxtofl@sign& (0+255),b
 36812  003FB8  0100               	movlb	0	; () banked
 36813  003FBA  5168               	movf	___xxtofl@sign& (0+255),w,b
 36814  003FBC  0100               	movlb	0	; () banked
 36815  003FBE  B4D8               	btfsc	status,2,c
 36816  003FC0  D01E               	goto	l2968
 36817                           
 36818                           ; BSR set to: 0
 36819  003FC2  0100               	movlb	0	; () banked
 36820  003FC4  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 36821  003FC6  D01B               	goto	l2968
 36822                           
 36823                           ; BSR set to: 0
 36824  003FC8  C060  F064         	movff	___xxtofl@val,??___xxtofl
 36825  003FCC  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 36826  003FD0  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 36827  003FD4  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 36828  003FD8  0100               	movlb	0	; () banked
 36829  003FDA  1F64               	comf	??___xxtofl& (0+255),f,b
 36830  003FDC  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 36831  003FDE  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 36832  003FE0  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 36833  003FE2  2B64               	incf	??___xxtofl& (0+255),f,b
 36834  003FE4  0E00               	movlw	0
 36835  003FE6  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 36836  003FE8  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 36837  003FEA  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 36838  003FEC  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 36839  003FF0  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 36840  003FF4  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 36841  003FF8  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 36842  003FFC  D008               	goto	l13892
 36843  003FFE                     l2968:
 36844                           
 36845                           ; BSR set to: 0
 36846  003FFE  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 36847  004002  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 36848  004006  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 36849  00400A  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 36850  00400E                     l13892:
 36851                           
 36852                           ; BSR set to: 0
 36853  00400E  0100               	movlb	0	; () banked
 36854  004010  5160               	movf	___xxtofl@val& (0+255),w,b
 36855  004012  0100               	movlb	0	; () banked
 36856  004014  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 36857  004016  0100               	movlb	0	; () banked
 36858  004018  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 36859  00401A  0100               	movlb	0	; () banked
 36860  00401C  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 36861  00401E  A4D8               	btfss	status,2,c
 36862  004020  D00A               	goto	l13898
 36863                           
 36864                           ; BSR set to: 0
 36865  004022  0E00               	movlw	0
 36866  004024  0100               	movlb	0	; () banked
 36867  004026  6F60               	movwf	?___xxtofl& (0+255),b
 36868  004028  0E00               	movlw	0
 36869  00402A  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 36870  00402C  0E00               	movlw	0
 36871  00402E  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 36872  004030  0E00               	movlw	0
 36873  004032  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 36874                           
 36875                           ; BSR set to: 0
 36876  004034  0012               	return	
 36877  004036                     l13898:
 36878                           
 36879                           ; BSR set to: 0
 36880  004036  0E96               	movlw	150
 36881  004038  0100               	movlb	0	; () banked
 36882  00403A  6F69               	movwf	___xxtofl@exp& (0+255),b
 36883  00403C  D008               	goto	l13902
 36884  00403E                     l13900:
 36885                           
 36886                           ; BSR set to: 0
 36887  00403E  0100               	movlb	0	; () banked
 36888  004040  2B69               	incf	___xxtofl@exp& (0+255),f,b
 36889  004042  0100               	movlb	0	; () banked
 36890  004044  90D8               	bcf	status,0,c
 36891  004046  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 36892  004048  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 36893  00404A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 36894  00404C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 36895  00404E                     l13902:
 36896                           
 36897                           ; BSR set to: 0
 36898  00404E  0E00               	movlw	0
 36899  004050  0100               	movlb	0	; () banked
 36900  004052  156A               	andwf	___xxtofl@arg& (0+255),w,b
 36901  004054  0100               	movlb	0	; () banked
 36902  004056  6F64               	movwf	??___xxtofl& (0+255),b
 36903  004058  0E00               	movlw	0
 36904  00405A  0100               	movlb	0	; () banked
 36905  00405C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 36906  00405E  0100               	movlb	0	; () banked
 36907  004060  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 36908  004062  0E00               	movlw	0
 36909  004064  0100               	movlb	0	; () banked
 36910  004066  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 36911  004068  0100               	movlb	0	; () banked
 36912  00406A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 36913  00406C  0EFE               	movlw	254
 36914  00406E  0100               	movlb	0	; () banked
 36915  004070  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 36916  004072  0100               	movlb	0	; () banked
 36917  004074  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 36918  004076  0100               	movlb	0	; () banked
 36919  004078  5164               	movf	??___xxtofl& (0+255),w,b
 36920  00407A  0100               	movlb	0	; () banked
 36921  00407C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 36922  00407E  0100               	movlb	0	; () banked
 36923  004080  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 36924  004082  0100               	movlb	0	; () banked
 36925  004084  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 36926  004086  B4D8               	btfsc	status,2,c
 36927  004088  D010               	goto	l2975
 36928  00408A  D7D9               	goto	l13900
 36929  00408C                     l13904:
 36930                           
 36931                           ; BSR set to: 0
 36932  00408C  0100               	movlb	0	; () banked
 36933  00408E  2B69               	incf	___xxtofl@exp& (0+255),f,b
 36934                           
 36935                           ; BSR set to: 0
 36936  004090  0E01               	movlw	1
 36937  004092  0100               	movlb	0	; () banked
 36938  004094  276A               	addwf	___xxtofl@arg& (0+255),f,b
 36939  004096  0E00               	movlw	0
 36940  004098  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 36941  00409A  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 36942  00409C  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 36943                           
 36944                           ; BSR set to: 0
 36945  00409E  0100               	movlb	0	; () banked
 36946  0040A0  90D8               	bcf	status,0,c
 36947  0040A2  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 36948  0040A4  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 36949  0040A6  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 36950  0040A8  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 36951  0040AA                     l2975:
 36952                           
 36953                           ; BSR set to: 0
 36954  0040AA  0E00               	movlw	0
 36955  0040AC  0100               	movlb	0	; () banked
 36956  0040AE  156A               	andwf	___xxtofl@arg& (0+255),w,b
 36957  0040B0  0100               	movlb	0	; () banked
 36958  0040B2  6F64               	movwf	??___xxtofl& (0+255),b
 36959  0040B4  0E00               	movlw	0
 36960  0040B6  0100               	movlb	0	; () banked
 36961  0040B8  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 36962  0040BA  0100               	movlb	0	; () banked
 36963  0040BC  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 36964  0040BE  0E00               	movlw	0
 36965  0040C0  0100               	movlb	0	; () banked
 36966  0040C2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 36967  0040C4  0100               	movlb	0	; () banked
 36968  0040C6  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 36969  0040C8  0EFF               	movlw	255
 36970  0040CA  0100               	movlb	0	; () banked
 36971  0040CC  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 36972  0040CE  0100               	movlb	0	; () banked
 36973  0040D0  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 36974  0040D2  0100               	movlb	0	; () banked
 36975  0040D4  5164               	movf	??___xxtofl& (0+255),w,b
 36976  0040D6  0100               	movlb	0	; () banked
 36977  0040D8  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 36978  0040DA  0100               	movlb	0	; () banked
 36979  0040DC  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 36980  0040DE  0100               	movlb	0	; () banked
 36981  0040E0  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 36982  0040E2  B4D8               	btfsc	status,2,c
 36983  0040E4  D009               	goto	l13912
 36984  0040E6  D7D2               	goto	l13904
 36985  0040E8                     l13910:
 36986                           
 36987                           ; BSR set to: 0
 36988  0040E8  0100               	movlb	0	; () banked
 36989  0040EA  0769               	decf	___xxtofl@exp& (0+255),f,b
 36990  0040EC  0100               	movlb	0	; () banked
 36991  0040EE  90D8               	bcf	status,0,c
 36992  0040F0  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 36993  0040F2  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 36994  0040F4  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 36995  0040F6  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 36996  0040F8                     l13912:
 36997                           
 36998                           ; BSR set to: 0
 36999  0040F8  0100               	movlb	0	; () banked
 37000  0040FA  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 37001  0040FC  D004               	goto	l2982
 37002                           
 37003                           ; BSR set to: 0
 37004  0040FE  0E02               	movlw	2
 37005  004100  0100               	movlb	0	; () banked
 37006  004102  6169               	cpfslt	___xxtofl@exp& (0+255),b
 37007  004104  D7F1               	goto	l13910
 37008  004106                     l2982:
 37009                           
 37010                           ; BSR set to: 0
 37011  004106  0100               	movlb	0	; () banked
 37012  004108  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 37013  00410A  D009               	goto	l2983
 37014                           
 37015                           ; BSR set to: 0
 37016  00410C  0EFF               	movlw	255
 37017  00410E  0100               	movlb	0	; () banked
 37018  004110  176A               	andwf	___xxtofl@arg& (0+255),f,b
 37019  004112  0EFF               	movlw	255
 37020  004114  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 37021  004116  0E7F               	movlw	127
 37022  004118  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 37023  00411A  0EFF               	movlw	255
 37024  00411C  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 37025  00411E                     l2983:
 37026                           
 37027                           ; BSR set to: 0
 37028  00411E  0100               	movlb	0	; () banked
 37029  004120  90D8               	bcf	status,0,c
 37030  004122  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 37031  004124  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 37032  004128  0100               	movlb	0	; () banked
 37033  00412A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 37034  00412C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 37035  00412E  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 37036  004130  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 37037  004134  0100               	movlb	0	; () banked
 37038  004136  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 37039  004138  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 37040  00413A  6B64               	clrf	??___xxtofl& (0+255),b
 37041  00413C  0100               	movlb	0	; () banked
 37042  00413E  5164               	movf	??___xxtofl& (0+255),w,b
 37043  004140  0100               	movlb	0	; () banked
 37044  004142  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 37045  004144  0100               	movlb	0	; () banked
 37046  004146  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 37047  004148  0100               	movlb	0	; () banked
 37048  00414A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 37049  00414C  0100               	movlb	0	; () banked
 37050  00414E  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 37051  004150  0100               	movlb	0	; () banked
 37052  004152  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 37053  004154  0100               	movlb	0	; () banked
 37054  004156  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 37055  004158  0100               	movlb	0	; () banked
 37056  00415A  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 37057                           
 37058                           ; BSR set to: 0
 37059  00415C  0100               	movlb	0	; () banked
 37060  00415E  5168               	movf	___xxtofl@sign& (0+255),w,b
 37061  004160  0100               	movlb	0	; () banked
 37062  004162  B4D8               	btfsc	status,2,c
 37063  004164  D005               	goto	l13924
 37064                           
 37065                           ; BSR set to: 0
 37066  004166  0100               	movlb	0	; () banked
 37067  004168  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 37068  00416A  D002               	goto	l13924
 37069                           
 37070                           ; BSR set to: 0
 37071  00416C  0100               	movlb	0	; () banked
 37072  00416E  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 37073  004170                     l13924:
 37074                           
 37075                           ; BSR set to: 0
 37076  004170  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 37077  004174  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 37078  004178  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 37079  00417C  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 37080  004180  0012               	return	
 37081  004182                     __end_of___xxtofl:
 37082                           	opt stack 0
 37083                           tosu	equ	0xFFF
 37084                           tosh	equ	0xFFE
 37085                           tosl	equ	0xFFD
 37086                           pclath	equ	0xFFA
 37087                           tblptru	equ	0xFF8
 37088                           tblptrh	equ	0xFF7
 37089                           tblptrl	equ	0xFF6
 37090                           tablat	equ	0xFF5
 37091                           prodh	equ	0xFF4
 37092                           prodl	equ	0xFF3
 37093                           intcon	equ	0xFF2
 37094                           indf0	equ	0xFEF
 37095                           postinc0	equ	0xFEE
 37096                           fsr0h	equ	0xFEA
 37097                           fsr0l	equ	0xFE9
 37098                           wreg	equ	0xFE8
 37099                           indf1	equ	0xFE7
 37100                           postinc1	equ	0xFE6
 37101                           postdec1	equ	0xFE5
 37102                           plusw1	equ	0xFE3
 37103                           fsr1h	equ	0xFE2
 37104                           fsr1l	equ	0xFE1
 37105                           indf2	equ	0xFDF
 37106                           postinc2	equ	0xFDE
 37107                           postdec2	equ	0xFDD
 37108                           plusw2	equ	0xFDB
 37109                           fsr2h	equ	0xFDA
 37110                           fsr2l	equ	0xFD9
 37111                           status	equ	0xFD8
 37112                           
 37113 ;; *************** function ___fltol *****************
 37114 ;; Defined at:
 37115 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fltol.c"
 37116 ;; Parameters:    Size  Location     Type
 37117 ;;  f1              4   88[BANK0 ] unsigned char 
 37118 ;; Auto vars:     Size  Location     Type
 37119 ;;  exp1            1   97[BANK0 ] unsigned char 
 37120 ;;  sign1           1   96[BANK0 ] unsigned char 
 37121 ;; Return value:  Size  Location     Type
 37122 ;;                  4   88[BANK0 ] long 
 37123 ;; Registers used:
 37124 ;;		wreg, status,2, status,0
 37125 ;; Tracked objects:
 37126 ;;		On entry : 0/0
 37127 ;;		On exit  : 0/0
 37128 ;;		Unchanged: 0/0
 37129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37133 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37134 ;;Total ram usage:       10 bytes
 37135 ;; Hardware stack levels used:    1
 37136 ;; Hardware stack levels required when called:    4
 37137 ;; This function calls:
 37138 ;;		Nothing
 37139 ;; This function is called by:
 37140 ;;		_data_sys_cal_v1
 37141 ;;		_data_sys_cal_v2
 37142 ;;		_cal_diff_hight_to_vol_h
 37143 ;;		_cal_diff_hight_level
 37144 ;;		_cal_diff_hight_to_vol_v
 37145 ;;		_cal_diff_p_to_h
 37146 ;; This function uses a non-reentrant model
 37147 ;;
 37148                           
 37149                           	psect	text193
 37150  005C86                     __ptext193:
 37151                           	opt stack 0
 37152  005C86                     ___fltol:
 37153                           	opt stack 21
 37154                           
 37155                           ; BSR set to: 0
 37156                           ;incstack = 0
 37157  005C86  0100               	movlb	0	; () banked
 37158  005C88  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 37159  005C8A  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 37160  005C8C  0100               	movlb	0	; () banked
 37161  005C8E  6FC1               	movwf	___fltol@exp1& (0+255),b
 37162  005C90  0100               	movlb	0	; () banked
 37163  005C92  51C1               	movf	___fltol@exp1& (0+255),w,b
 37164  005C94  A4D8               	btfss	status,2,c
 37165  005C96  D00A               	goto	l14240
 37166                           
 37167                           ; BSR set to: 0
 37168  005C98  0E00               	movlw	0
 37169  005C9A  0100               	movlb	0	; () banked
 37170  005C9C  6FB8               	movwf	?___fltol& (0+255),b
 37171  005C9E  0E00               	movlw	0
 37172  005CA0  6FB9               	movwf	(?___fltol+1)& (0+255),b
 37173  005CA2  0E00               	movlw	0
 37174  005CA4  6FBA               	movwf	(?___fltol+2)& (0+255),b
 37175  005CA6  0E00               	movlw	0
 37176  005CA8  6FBB               	movwf	(?___fltol+3)& (0+255),b
 37177                           
 37178                           ; BSR set to: 0
 37179  005CAA  0012               	return	
 37180  005CAC                     l14240:
 37181                           
 37182                           ; BSR set to: 0
 37183  005CAC  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 37184  005CB0  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 37185  005CB4  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 37186  005CB8  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 37187  005CBC  0E20               	movlw	32
 37188  005CBE  D006               	goto	u13100
 37189  005CC0                     u13105:
 37190  005CC0  0100               	movlb	0	; () banked
 37191  005CC2  90D8               	bcf	status,0,c
 37192  005CC4  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 37193  005CC6  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 37194  005CC8  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 37195  005CCA  33BC               	rrcf	??___fltol& (0+255),f,b
 37196  005CCC                     u13100:
 37197  005CCC  2EE8               	decfsz	wreg,f,c
 37198  005CCE  D7F8               	goto	u13105
 37199  005CD0  0100               	movlb	0	; () banked
 37200  005CD2  51BC               	movf	??___fltol& (0+255),w,b
 37201  005CD4  0100               	movlb	0	; () banked
 37202  005CD6  6FC0               	movwf	___fltol@sign1& (0+255),b
 37203                           
 37204                           ; BSR set to: 0
 37205  005CD8  0100               	movlb	0	; () banked
 37206  005CDA  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 37207                           
 37208                           ; BSR set to: 0
 37209  005CDC  0EFF               	movlw	255
 37210  005CDE  0100               	movlb	0	; () banked
 37211  005CE0  17B8               	andwf	___fltol@f1& (0+255),f,b
 37212  005CE2  0EFF               	movlw	255
 37213  005CE4  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 37214  005CE6  0EFF               	movlw	255
 37215  005CE8  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 37216  005CEA  0E00               	movlw	0
 37217  005CEC  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 37218                           
 37219                           ; BSR set to: 0
 37220  005CEE  0E96               	movlw	150
 37221  005CF0  0100               	movlb	0	; () banked
 37222  005CF2  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 37223                           
 37224                           ; BSR set to: 0
 37225  005CF4  0100               	movlb	0	; () banked
 37226  005CF6  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 37227  005CF8  D01A               	goto	l14260
 37228                           
 37229                           ; BSR set to: 0
 37230  005CFA  0100               	movlb	0	; () banked
 37231  005CFC  51C1               	movf	___fltol@exp1& (0+255),w,b
 37232  005CFE  0A80               	xorlw	128
 37233  005D00  0F97               	addlw	151
 37234  005D02  B0D8               	btfsc	status,0,c
 37235  005D04  D00A               	goto	l14256
 37236                           
 37237                           ; BSR set to: 0
 37238  005D06  0E00               	movlw	0
 37239  005D08  0100               	movlb	0	; () banked
 37240  005D0A  6FB8               	movwf	?___fltol& (0+255),b
 37241  005D0C  0E00               	movlw	0
 37242  005D0E  6FB9               	movwf	(?___fltol+1)& (0+255),b
 37243  005D10  0E00               	movlw	0
 37244  005D12  6FBA               	movwf	(?___fltol+2)& (0+255),b
 37245  005D14  0E00               	movlw	0
 37246  005D16  6FBB               	movwf	(?___fltol+3)& (0+255),b
 37247                           
 37248                           ; BSR set to: 0
 37249  005D18  0012               	return	
 37250  005D1A                     l14256:
 37251                           
 37252                           ; BSR set to: 0
 37253  005D1A  0100               	movlb	0	; () banked
 37254  005D1C  90D8               	bcf	status,0,c
 37255  005D1E  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 37256  005D20  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 37257  005D22  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 37258  005D24  33B8               	rrcf	___fltol@f1& (0+255),f,b
 37259                           
 37260                           ; BSR set to: 0
 37261  005D26  0100               	movlb	0	; () banked
 37262  005D28  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 37263  005D2A  D7F7               	goto	l14256
 37264                           
 37265                           ; BSR set to: 0
 37266  005D2C  D01B               	goto	l14270
 37267  005D2E                     l14260:
 37268                           
 37269                           ; BSR set to: 0
 37270  005D2E  0E1F               	movlw	31
 37271  005D30  0100               	movlb	0	; () banked
 37272  005D32  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 37273  005D34  D012               	goto	l14268
 37274                           
 37275                           ; BSR set to: 0
 37276  005D36  0E00               	movlw	0
 37277  005D38  0100               	movlb	0	; () banked
 37278  005D3A  6FB8               	movwf	?___fltol& (0+255),b
 37279  005D3C  0E00               	movlw	0
 37280  005D3E  6FB9               	movwf	(?___fltol+1)& (0+255),b
 37281  005D40  0E00               	movlw	0
 37282  005D42  6FBA               	movwf	(?___fltol+2)& (0+255),b
 37283  005D44  0E00               	movlw	0
 37284  005D46  6FBB               	movwf	(?___fltol+3)& (0+255),b
 37285                           
 37286                           ; BSR set to: 0
 37287  005D48  0012               	return	
 37288  005D4A                     l14266:
 37289                           
 37290                           ; BSR set to: 0
 37291  005D4A  0100               	movlb	0	; () banked
 37292  005D4C  90D8               	bcf	status,0,c
 37293  005D4E  37B8               	rlcf	___fltol@f1& (0+255),f,b
 37294  005D50  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 37295  005D52  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 37296  005D54  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 37297  005D56  0100               	movlb	0	; () banked
 37298  005D58  07C1               	decf	___fltol@exp1& (0+255),f,b
 37299  005D5A                     l14268:
 37300                           
 37301                           ; BSR set to: 0
 37302  005D5A  0100               	movlb	0	; () banked
 37303  005D5C  51C1               	movf	___fltol@exp1& (0+255),w,b
 37304  005D5E  0100               	movlb	0	; () banked
 37305  005D60  A4D8               	btfss	status,2,c
 37306  005D62  D7F3               	goto	l14266
 37307  005D64                     l14270:
 37308                           
 37309                           ; BSR set to: 0
 37310  005D64  0100               	movlb	0	; () banked
 37311  005D66  51C0               	movf	___fltol@sign1& (0+255),w,b
 37312  005D68  0100               	movlb	0	; () banked
 37313  005D6A  B4D8               	btfsc	status,2,c
 37314  005D6C  D009               	goto	l14274
 37315                           
 37316                           ; BSR set to: 0
 37317  005D6E  0100               	movlb	0	; () banked
 37318  005D70  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 37319  005D72  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 37320  005D74  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 37321  005D76  6DB8               	negf	___fltol@f1& (0+255),b
 37322  005D78  0E00               	movlw	0
 37323  005D7A  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 37324  005D7C  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 37325  005D7E  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 37326  005D80                     l14274:
 37327                           
 37328                           ; BSR set to: 0
 37329  005D80  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 37330  005D84  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 37331  005D88  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 37332  005D8C  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 37333  005D90  0012               	return	
 37334  005D92                     __end_of___fltol:
 37335                           	opt stack 0
 37336                           tosu	equ	0xFFF
 37337                           tosh	equ	0xFFE
 37338                           tosl	equ	0xFFD
 37339                           pclath	equ	0xFFA
 37340                           tblptru	equ	0xFF8
 37341                           tblptrh	equ	0xFF7
 37342                           tblptrl	equ	0xFF6
 37343                           tablat	equ	0xFF5
 37344                           prodh	equ	0xFF4
 37345                           prodl	equ	0xFF3
 37346                           intcon	equ	0xFF2
 37347                           indf0	equ	0xFEF
 37348                           postinc0	equ	0xFEE
 37349                           fsr0h	equ	0xFEA
 37350                           fsr0l	equ	0xFE9
 37351                           wreg	equ	0xFE8
 37352                           indf1	equ	0xFE7
 37353                           postinc1	equ	0xFE6
 37354                           postdec1	equ	0xFE5
 37355                           plusw1	equ	0xFE3
 37356                           fsr1h	equ	0xFE2
 37357                           fsr1l	equ	0xFE1
 37358                           indf2	equ	0xFDF
 37359                           postinc2	equ	0xFDE
 37360                           postdec2	equ	0xFDD
 37361                           plusw2	equ	0xFDB
 37362                           fsr2h	equ	0xFDA
 37363                           fsr2l	equ	0xFD9
 37364                           status	equ	0xFD8
 37365                           
 37366 ;; *************** function ___flmul *****************
 37367 ;; Defined at:
 37368 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcmul.c"
 37369 ;; Parameters:    Size  Location     Type
 37370 ;;  b               4   14[BANK0 ] long 
 37371 ;;  a               4   18[BANK0 ] long 
 37372 ;; Auto vars:     Size  Location     Type
 37373 ;;  prod            4   33[BANK0 ] struct .
 37374 ;;  grs             4   28[BANK0 ] unsigned long 
 37375 ;;  temp            2   37[BANK0 ] struct .
 37376 ;;  bexp            1   32[BANK0 ] unsigned char 
 37377 ;;  aexp            1   27[BANK0 ] unsigned char 
 37378 ;;  sign            1   26[BANK0 ] unsigned char 
 37379 ;; Return value:  Size  Location     Type
 37380 ;;                  4   14[BANK0 ] unsigned char 
 37381 ;; Registers used:
 37382 ;;		wreg, status,2, status,0, prodl, prodh
 37383 ;; Tracked objects:
 37384 ;;		On entry : 0/0
 37385 ;;		On exit  : 0/0
 37386 ;;		Unchanged: 0/0
 37387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37388 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37389 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37390 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37391 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37392 ;;Total ram usage:       25 bytes
 37393 ;; Hardware stack levels used:    1
 37394 ;; Hardware stack levels required when called:    4
 37395 ;; This function calls:
 37396 ;;		Nothing
 37397 ;; This function is called by:
 37398 ;;		_data_sys_cal_v1
 37399 ;;		_data_sys_cal_v2
 37400 ;;		_m_interp1_float_fast
 37401 ;;		_cal_diff_hight_to_vol_h
 37402 ;;		_cal_diff_hight_level
 37403 ;;		_cal_diff_hight_to_vol_v
 37404 ;;		_cal_diff_p_to_h
 37405 ;; This function uses a non-reentrant model
 37406 ;;
 37407                           
 37408                           	psect	text194
 37409  001610                     __ptext194:
 37410                           	opt stack 0
 37411  001610                     ___flmul:
 37412                           	opt stack 21
 37413                           
 37414                           ; BSR set to: 0
 37415                           ;incstack = 0
 37416  001610  0100               	movlb	0	; () banked
 37417  001612  5171               	movf	(___flmul@b+3)& (0+255),w,b
 37418  001614  0B80               	andlw	128
 37419  001616  0100               	movlb	0	; () banked
 37420  001618  6F7A               	movwf	___flmul@sign& (0+255),b
 37421  00161A  0100               	movlb	0	; () banked
 37422  00161C  5171               	movf	(___flmul@b+3)& (0+255),w,b
 37423  00161E  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 37424  001620  0100               	movlb	0	; () banked
 37425  001622  6F80               	movwf	___flmul@bexp& (0+255),b
 37426                           
 37427                           ; BSR set to: 0
 37428  001624  0100               	movlb	0	; () banked
 37429  001626  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 37430  001628  D002               	goto	l13696
 37431                           
 37432                           ; BSR set to: 0
 37433  00162A  0100               	movlb	0	; () banked
 37434  00162C  8180               	bsf	___flmul@bexp& (0+255),0,b
 37435  00162E                     l13696:
 37436                           
 37437                           ; BSR set to: 0
 37438  00162E  0100               	movlb	0	; () banked
 37439  001630  5180               	movf	___flmul@bexp& (0+255),w,b
 37440  001632  0100               	movlb	0	; () banked
 37441  001634  B4D8               	btfsc	status,2,c
 37442  001636  D010               	goto	l13704
 37443                           
 37444                           ; BSR set to: 0
 37445  001638  0100               	movlb	0	; () banked
 37446  00163A  2980               	incf	___flmul@bexp& (0+255),w,b
 37447  00163C  A4D8               	btfss	status,2,c
 37448  00163E  D009               	goto	l13702
 37449                           
 37450                           ; BSR set to: 0
 37451  001640  0E00               	movlw	0
 37452  001642  0100               	movlb	0	; () banked
 37453  001644  6F6E               	movwf	___flmul@b& (0+255),b
 37454  001646  0E00               	movlw	0
 37455  001648  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 37456  00164A  0E00               	movlw	0
 37457  00164C  6F70               	movwf	(___flmul@b+2)& (0+255),b
 37458  00164E  0E00               	movlw	0
 37459  001650  6F71               	movwf	(___flmul@b+3)& (0+255),b
 37460  001652                     l13702:
 37461                           
 37462                           ; BSR set to: 0
 37463  001652  0100               	movlb	0	; () banked
 37464  001654  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 37465  001656  D009               	goto	l13706
 37466  001658                     l13704:
 37467                           
 37468                           ; BSR set to: 0
 37469  001658  0E00               	movlw	0
 37470  00165A  0100               	movlb	0	; () banked
 37471  00165C  6F6E               	movwf	___flmul@b& (0+255),b
 37472  00165E  0E00               	movlw	0
 37473  001660  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 37474  001662  0E00               	movlw	0
 37475  001664  6F70               	movwf	(___flmul@b+2)& (0+255),b
 37476  001666  0E00               	movlw	0
 37477  001668  6F71               	movwf	(___flmul@b+3)& (0+255),b
 37478  00166A                     l13706:
 37479                           
 37480                           ; BSR set to: 0
 37481  00166A  0100               	movlb	0	; () banked
 37482  00166C  5175               	movf	(___flmul@a+3)& (0+255),w,b
 37483  00166E  0B80               	andlw	128
 37484  001670  0100               	movlb	0	; () banked
 37485  001672  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 37486                           
 37487                           ; BSR set to: 0
 37488  001674  0100               	movlb	0	; () banked
 37489  001676  5175               	movf	(___flmul@a+3)& (0+255),w,b
 37490  001678  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 37491  00167A  0100               	movlb	0	; () banked
 37492  00167C  6F7B               	movwf	___flmul@aexp& (0+255),b
 37493                           
 37494                           ; BSR set to: 0
 37495  00167E  0100               	movlb	0	; () banked
 37496  001680  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 37497  001682  D002               	goto	l13714
 37498                           
 37499                           ; BSR set to: 0
 37500  001684  0100               	movlb	0	; () banked
 37501  001686  817B               	bsf	___flmul@aexp& (0+255),0,b
 37502  001688                     l13714:
 37503                           
 37504                           ; BSR set to: 0
 37505  001688  0100               	movlb	0	; () banked
 37506  00168A  517B               	movf	___flmul@aexp& (0+255),w,b
 37507  00168C  0100               	movlb	0	; () banked
 37508  00168E  B4D8               	btfsc	status,2,c
 37509  001690  D010               	goto	l13722
 37510                           
 37511                           ; BSR set to: 0
 37512  001692  0100               	movlb	0	; () banked
 37513  001694  297B               	incf	___flmul@aexp& (0+255),w,b
 37514  001696  A4D8               	btfss	status,2,c
 37515  001698  D009               	goto	l13720
 37516                           
 37517                           ; BSR set to: 0
 37518  00169A  0E00               	movlw	0
 37519  00169C  0100               	movlb	0	; () banked
 37520  00169E  6F72               	movwf	___flmul@a& (0+255),b
 37521  0016A0  0E00               	movlw	0
 37522  0016A2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 37523  0016A4  0E00               	movlw	0
 37524  0016A6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 37525  0016A8  0E00               	movlw	0
 37526  0016AA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 37527  0016AC                     l13720:
 37528                           
 37529                           ; BSR set to: 0
 37530  0016AC  0100               	movlb	0	; () banked
 37531  0016AE  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 37532  0016B0  D009               	goto	l2946
 37533  0016B2                     l13722:
 37534                           
 37535                           ; BSR set to: 0
 37536  0016B2  0E00               	movlw	0
 37537  0016B4  0100               	movlb	0	; () banked
 37538  0016B6  6F72               	movwf	___flmul@a& (0+255),b
 37539  0016B8  0E00               	movlw	0
 37540  0016BA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 37541  0016BC  0E00               	movlw	0
 37542  0016BE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 37543  0016C0  0E00               	movlw	0
 37544  0016C2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 37545  0016C4                     l2946:
 37546                           
 37547                           ; BSR set to: 0
 37548  0016C4  0100               	movlb	0	; () banked
 37549  0016C6  517B               	movf	___flmul@aexp& (0+255),w,b
 37550  0016C8  0100               	movlb	0	; () banked
 37551  0016CA  B4D8               	btfsc	status,2,c
 37552  0016CC  D005               	goto	l13726
 37553                           
 37554                           ; BSR set to: 0
 37555  0016CE  0100               	movlb	0	; () banked
 37556  0016D0  5180               	movf	___flmul@bexp& (0+255),w,b
 37557  0016D2  0100               	movlb	0	; () banked
 37558  0016D4  A4D8               	btfss	status,2,c
 37559  0016D6  D00A               	goto	l13730
 37560  0016D8                     l13726:
 37561                           
 37562                           ; BSR set to: 0
 37563  0016D8  0E00               	movlw	0
 37564  0016DA  0100               	movlb	0	; () banked
 37565  0016DC  6F6E               	movwf	?___flmul& (0+255),b
 37566  0016DE  0E00               	movlw	0
 37567  0016E0  6F6F               	movwf	(?___flmul+1)& (0+255),b
 37568  0016E2  0E00               	movlw	0
 37569  0016E4  6F70               	movwf	(?___flmul+2)& (0+255),b
 37570  0016E6  0E00               	movlw	0
 37571  0016E8  6F71               	movwf	(?___flmul+3)& (0+255),b
 37572                           
 37573                           ; BSR set to: 0
 37574  0016EA  0012               	return	
 37575  0016EC                     l13730:
 37576                           
 37577                           ; BSR set to: 0
 37578  0016EC  0100               	movlb	0	; () banked
 37579  0016EE  5174               	movf	(___flmul@a+2)& (0+255),w,b
 37580  0016F0  0100               	movlb	0	; () banked
 37581  0016F2  036E               	mulwf	___flmul@b& (0+255),b
 37582  0016F4  CFF3 F085          	movff	prodl,___flmul@temp
 37583  0016F8  CFF4 F086          	movff	prodh,___flmul@temp+1
 37584                           
 37585                           ; BSR set to: 0
 37586  0016FC  0100               	movlb	0	; () banked
 37587  0016FE  5185               	movf	___flmul@temp& (0+255),w,b
 37588  001700  0100               	movlb	0	; () banked
 37589  001702  6F7C               	movwf	___flmul@grs& (0+255),b
 37590  001704  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 37591  001706  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 37592  001708  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 37593                           
 37594                           ; BSR set to: 0
 37595  00170A  0100               	movlb	0	; () banked
 37596  00170C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37597  00170E  0100               	movlb	0	; () banked
 37598  001710  6F81               	movwf	___flmul@prod& (0+255),b
 37599  001712  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 37600  001714  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 37601  001716  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 37602  001718  0100               	movlb	0	; () banked
 37603  00171A  5173               	movf	(___flmul@a+1)& (0+255),w,b
 37604  00171C  0100               	movlb	0	; () banked
 37605  00171E  036F               	mulwf	(___flmul@b+1)& (0+255),b
 37606  001720  CFF3 F085          	movff	prodl,___flmul@temp
 37607  001724  CFF4 F086          	movff	prodh,___flmul@temp+1
 37608                           
 37609                           ; BSR set to: 0
 37610  001728  0100               	movlb	0	; () banked
 37611  00172A  5185               	movf	___flmul@temp& (0+255),w,b
 37612  00172C  0100               	movlb	0	; () banked
 37613  00172E  277C               	addwf	___flmul@grs& (0+255),f,b
 37614  001730  0E00               	movlw	0
 37615  001732  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37616  001734  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37617  001736  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37618                           
 37619                           ; BSR set to: 0
 37620  001738  0100               	movlb	0	; () banked
 37621  00173A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37622  00173C  0100               	movlb	0	; () banked
 37623  00173E  2781               	addwf	___flmul@prod& (0+255),f,b
 37624  001740  0E00               	movlw	0
 37625  001742  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37626  001744  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37627  001746  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37628  001748  0100               	movlb	0	; () banked
 37629  00174A  5172               	movf	___flmul@a& (0+255),w,b
 37630  00174C  0100               	movlb	0	; () banked
 37631  00174E  0370               	mulwf	(___flmul@b+2)& (0+255),b
 37632  001750  CFF3 F085          	movff	prodl,___flmul@temp
 37633  001754  CFF4 F086          	movff	prodh,___flmul@temp+1
 37634                           
 37635                           ; BSR set to: 0
 37636  001758  0100               	movlb	0	; () banked
 37637  00175A  5185               	movf	___flmul@temp& (0+255),w,b
 37638  00175C  0100               	movlb	0	; () banked
 37639  00175E  277C               	addwf	___flmul@grs& (0+255),f,b
 37640  001760  0E00               	movlw	0
 37641  001762  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37642  001764  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37643  001766  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37644                           
 37645                           ; BSR set to: 0
 37646  001768  0100               	movlb	0	; () banked
 37647  00176A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37648  00176C  0100               	movlb	0	; () banked
 37649  00176E  2781               	addwf	___flmul@prod& (0+255),f,b
 37650  001770  0E00               	movlw	0
 37651  001772  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37652  001774  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37653  001776  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37654                           
 37655                           ; BSR set to: 0
 37656  001778  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 37657  00177C  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 37658  001780  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 37659  001784  0100               	movlb	0	; () banked
 37660  001786  6B7C               	clrf	___flmul@grs& (0+255),b
 37661                           
 37662                           ; BSR set to: 0
 37663  001788  0100               	movlb	0	; () banked
 37664  00178A  5172               	movf	___flmul@a& (0+255),w,b
 37665  00178C  0100               	movlb	0	; () banked
 37666  00178E  036F               	mulwf	(___flmul@b+1)& (0+255),b
 37667  001790  CFF3 F085          	movff	prodl,___flmul@temp
 37668  001794  CFF4 F086          	movff	prodh,___flmul@temp+1
 37669                           
 37670                           ; BSR set to: 0
 37671  001798  0100               	movlb	0	; () banked
 37672  00179A  5185               	movf	___flmul@temp& (0+255),w,b
 37673  00179C  0100               	movlb	0	; () banked
 37674  00179E  277C               	addwf	___flmul@grs& (0+255),f,b
 37675  0017A0  0100               	movlb	0	; () banked
 37676  0017A2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37677  0017A4  0100               	movlb	0	; () banked
 37678  0017A6  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37679  0017A8  0E00               	movlw	0
 37680  0017AA  0100               	movlb	0	; () banked
 37681  0017AC  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37682  0017AE  0E00               	movlw	0
 37683  0017B0  0100               	movlb	0	; () banked
 37684  0017B2  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37685                           
 37686                           ; BSR set to: 0
 37687  0017B4  0100               	movlb	0	; () banked
 37688  0017B6  5173               	movf	(___flmul@a+1)& (0+255),w,b
 37689  0017B8  0100               	movlb	0	; () banked
 37690  0017BA  036E               	mulwf	___flmul@b& (0+255),b
 37691  0017BC  CFF3 F085          	movff	prodl,___flmul@temp
 37692  0017C0  CFF4 F086          	movff	prodh,___flmul@temp+1
 37693                           
 37694                           ; BSR set to: 0
 37695  0017C4  0100               	movlb	0	; () banked
 37696  0017C6  5185               	movf	___flmul@temp& (0+255),w,b
 37697  0017C8  0100               	movlb	0	; () banked
 37698  0017CA  277C               	addwf	___flmul@grs& (0+255),f,b
 37699  0017CC  0100               	movlb	0	; () banked
 37700  0017CE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37701  0017D0  0100               	movlb	0	; () banked
 37702  0017D2  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37703  0017D4  0E00               	movlw	0
 37704  0017D6  0100               	movlb	0	; () banked
 37705  0017D8  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37706  0017DA  0E00               	movlw	0
 37707  0017DC  0100               	movlb	0	; () banked
 37708  0017DE  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37709                           
 37710                           ; BSR set to: 0
 37711  0017E0  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 37712  0017E4  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 37713  0017E8  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 37714  0017EC  0100               	movlb	0	; () banked
 37715  0017EE  6B7C               	clrf	___flmul@grs& (0+255),b
 37716  0017F0  0100               	movlb	0	; () banked
 37717  0017F2  5172               	movf	___flmul@a& (0+255),w,b
 37718  0017F4  0100               	movlb	0	; () banked
 37719  0017F6  036E               	mulwf	___flmul@b& (0+255),b
 37720  0017F8  CFF3 F085          	movff	prodl,___flmul@temp
 37721  0017FC  CFF4 F086          	movff	prodh,___flmul@temp+1
 37722                           
 37723                           ; BSR set to: 0
 37724  001800  0100               	movlb	0	; () banked
 37725  001802  5185               	movf	___flmul@temp& (0+255),w,b
 37726  001804  0100               	movlb	0	; () banked
 37727  001806  277C               	addwf	___flmul@grs& (0+255),f,b
 37728  001808  0100               	movlb	0	; () banked
 37729  00180A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37730  00180C  0100               	movlb	0	; () banked
 37731  00180E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 37732  001810  0E00               	movlw	0
 37733  001812  0100               	movlb	0	; () banked
 37734  001814  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 37735  001816  0E00               	movlw	0
 37736  001818  0100               	movlb	0	; () banked
 37737  00181A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 37738                           
 37739                           ; BSR set to: 0
 37740  00181C  0100               	movlb	0	; () banked
 37741  00181E  5174               	movf	(___flmul@a+2)& (0+255),w,b
 37742  001820  0100               	movlb	0	; () banked
 37743  001822  036F               	mulwf	(___flmul@b+1)& (0+255),b
 37744  001824  CFF3 F085          	movff	prodl,___flmul@temp
 37745  001828  CFF4 F086          	movff	prodh,___flmul@temp+1
 37746  00182C  0100               	movlb	0	; () banked
 37747  00182E  5185               	movf	___flmul@temp& (0+255),w,b
 37748  001830  0100               	movlb	0	; () banked
 37749  001832  2781               	addwf	___flmul@prod& (0+255),f,b
 37750  001834  0100               	movlb	0	; () banked
 37751  001836  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37752  001838  0100               	movlb	0	; () banked
 37753  00183A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37754  00183C  0E00               	movlw	0
 37755  00183E  0100               	movlb	0	; () banked
 37756  001840  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37757  001842  0E00               	movlw	0
 37758  001844  0100               	movlb	0	; () banked
 37759  001846  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37760                           
 37761                           ; BSR set to: 0
 37762  001848  0100               	movlb	0	; () banked
 37763  00184A  5173               	movf	(___flmul@a+1)& (0+255),w,b
 37764  00184C  0100               	movlb	0	; () banked
 37765  00184E  0370               	mulwf	(___flmul@b+2)& (0+255),b
 37766  001850  CFF3 F085          	movff	prodl,___flmul@temp
 37767  001854  CFF4 F086          	movff	prodh,___flmul@temp+1
 37768                           
 37769                           ; BSR set to: 0
 37770  001858  0100               	movlb	0	; () banked
 37771  00185A  5185               	movf	___flmul@temp& (0+255),w,b
 37772  00185C  0100               	movlb	0	; () banked
 37773  00185E  2781               	addwf	___flmul@prod& (0+255),f,b
 37774  001860  0100               	movlb	0	; () banked
 37775  001862  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37776  001864  0100               	movlb	0	; () banked
 37777  001866  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37778  001868  0E00               	movlw	0
 37779  00186A  0100               	movlb	0	; () banked
 37780  00186C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37781  00186E  0E00               	movlw	0
 37782  001870  0100               	movlb	0	; () banked
 37783  001872  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37784  001874  0100               	movlb	0	; () banked
 37785  001876  5174               	movf	(___flmul@a+2)& (0+255),w,b
 37786  001878  0100               	movlb	0	; () banked
 37787  00187A  0370               	mulwf	(___flmul@b+2)& (0+255),b
 37788  00187C  CFF3 F085          	movff	prodl,___flmul@temp
 37789  001880  CFF4 F086          	movff	prodh,___flmul@temp+1
 37790                           
 37791                           ; BSR set to: 0
 37792  001884  0100               	movlb	0	; () banked
 37793  001886  5185               	movf	___flmul@temp& (0+255),w,b
 37794  001888  0100               	movlb	0	; () banked
 37795  00188A  6F76               	movwf	??___flmul& (0+255),b
 37796  00188C  0100               	movlb	0	; () banked
 37797  00188E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 37798  001890  0100               	movlb	0	; () banked
 37799  001892  6F77               	movwf	(??___flmul+1)& (0+255),b
 37800  001894  0100               	movlb	0	; () banked
 37801  001896  6B78               	clrf	(??___flmul+2)& (0+255),b
 37802  001898  0100               	movlb	0	; () banked
 37803  00189A  6B79               	clrf	(??___flmul+3)& (0+255),b
 37804  00189C  C078  F079         	movff	??___flmul+2,??___flmul+3
 37805  0018A0  C077  F078         	movff	??___flmul+1,??___flmul+2
 37806  0018A4  C076  F077         	movff	??___flmul,??___flmul+1
 37807  0018A8  0100               	movlb	0	; () banked
 37808  0018AA  6B76               	clrf	??___flmul& (0+255),b
 37809  0018AC  0100               	movlb	0	; () banked
 37810  0018AE  5176               	movf	??___flmul& (0+255),w,b
 37811  0018B0  0100               	movlb	0	; () banked
 37812  0018B2  2781               	addwf	___flmul@prod& (0+255),f,b
 37813  0018B4  0100               	movlb	0	; () banked
 37814  0018B6  5177               	movf	(??___flmul+1)& (0+255),w,b
 37815  0018B8  0100               	movlb	0	; () banked
 37816  0018BA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37817  0018BC  0100               	movlb	0	; () banked
 37818  0018BE  5178               	movf	(??___flmul+2)& (0+255),w,b
 37819  0018C0  0100               	movlb	0	; () banked
 37820  0018C2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37821  0018C4  0100               	movlb	0	; () banked
 37822  0018C6  5179               	movf	(??___flmul+3)& (0+255),w,b
 37823  0018C8  0100               	movlb	0	; () banked
 37824  0018CA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37825                           
 37826                           ; BSR set to: 0
 37827  0018CC  C07C  F076         	movff	___flmul@grs,??___flmul
 37828  0018D0  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 37829  0018D4  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 37830  0018D8  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 37831  0018DC  0E19               	movlw	25
 37832  0018DE  D006               	goto	u12470
 37833  0018E0                     u12475:
 37834  0018E0  0100               	movlb	0	; () banked
 37835  0018E2  90D8               	bcf	status,0,c
 37836  0018E4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 37837  0018E6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 37838  0018E8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 37839  0018EA  3376               	rrcf	??___flmul& (0+255),f,b
 37840  0018EC                     u12470:
 37841  0018EC  2EE8               	decfsz	wreg,f,c
 37842  0018EE  D7F8               	goto	u12475
 37843  0018F0  0100               	movlb	0	; () banked
 37844  0018F2  5176               	movf	??___flmul& (0+255),w,b
 37845  0018F4  0100               	movlb	0	; () banked
 37846  0018F6  2781               	addwf	___flmul@prod& (0+255),f,b
 37847  0018F8  0100               	movlb	0	; () banked
 37848  0018FA  5177               	movf	(??___flmul+1)& (0+255),w,b
 37849  0018FC  0100               	movlb	0	; () banked
 37850  0018FE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37851  001900  0100               	movlb	0	; () banked
 37852  001902  5178               	movf	(??___flmul+2)& (0+255),w,b
 37853  001904  0100               	movlb	0	; () banked
 37854  001906  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37855  001908  0100               	movlb	0	; () banked
 37856  00190A  5179               	movf	(??___flmul+3)& (0+255),w,b
 37857  00190C  0100               	movlb	0	; () banked
 37858  00190E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37859                           
 37860                           ; BSR set to: 0
 37861  001910  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 37862  001914  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 37863  001918  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 37864  00191C  0100               	movlb	0	; () banked
 37865  00191E  6B7C               	clrf	___flmul@grs& (0+255),b
 37866                           
 37867                           ; BSR set to: 0
 37868  001920  0100               	movlb	0	; () banked
 37869  001922  517B               	movf	___flmul@aexp& (0+255),w,b
 37870  001924  C080  F076         	movff	___flmul@bexp,??___flmul
 37871  001928  0100               	movlb	0	; () banked
 37872  00192A  6B77               	clrf	(??___flmul+1)& (0+255),b
 37873  00192C  0100               	movlb	0	; () banked
 37874  00192E  2776               	addwf	??___flmul& (0+255),f,b
 37875  001930  0E00               	movlw	0
 37876  001932  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 37877  001934  0E82               	movlw	130
 37878  001936  0100               	movlb	0	; () banked
 37879  001938  2576               	addwf	??___flmul& (0+255),w,b
 37880  00193A  0100               	movlb	0	; () banked
 37881  00193C  6F85               	movwf	___flmul@temp& (0+255),b
 37882  00193E  0EFF               	movlw	255
 37883  001940  0100               	movlb	0	; () banked
 37884  001942  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 37885  001944  0100               	movlb	0	; () banked
 37886  001946  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 37887  001948  D015               	goto	l13778
 37888  00194A                     l13772:
 37889                           
 37890                           ; BSR set to: 0
 37891  00194A  0100               	movlb	0	; () banked
 37892  00194C  90D8               	bcf	status,0,c
 37893  00194E  3781               	rlcf	___flmul@prod& (0+255),f,b
 37894  001950  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 37895  001952  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 37896  001954  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 37897                           
 37898                           ; BSR set to: 0
 37899  001956  0100               	movlb	0	; () banked
 37900  001958  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 37901  00195A  D002               	goto	l2953
 37902                           
 37903                           ; BSR set to: 0
 37904  00195C  0100               	movlb	0	; () banked
 37905  00195E  8181               	bsf	___flmul@prod& (0+255),0,b
 37906  001960                     l2953:
 37907                           
 37908                           ; BSR set to: 0
 37909  001960  0100               	movlb	0	; () banked
 37910  001962  90D8               	bcf	status,0,c
 37911  001964  377C               	rlcf	___flmul@grs& (0+255),f,b
 37912  001966  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 37913  001968  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 37914  00196A  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 37915  00196C  0100               	movlb	0	; () banked
 37916  00196E  0785               	decf	___flmul@temp& (0+255),f,b
 37917  001970  A0D8               	btfss	status,0,c
 37918  001972  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 37919  001974                     l13778:
 37920                           
 37921                           ; BSR set to: 0
 37922  001974  0100               	movlb	0	; () banked
 37923  001976  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 37924  001978  D7E8               	goto	l13772
 37925                           
 37926                           ; BSR set to: 0
 37927                           
 37928                           ; BSR set to: 0
 37929  00197A  0E00               	movlw	0
 37930  00197C  0100               	movlb	0	; () banked
 37931  00197E  6F7B               	movwf	___flmul@aexp& (0+255),b
 37932                           
 37933                           ; BSR set to: 0
 37934  001980  0100               	movlb	0	; () banked
 37935  001982  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 37936  001984  D024               	goto	l2955
 37937                           
 37938                           ; BSR set to: 0
 37939  001986  0EFF               	movlw	255
 37940  001988  0100               	movlb	0	; () banked
 37941  00198A  157C               	andwf	___flmul@grs& (0+255),w,b
 37942  00198C  0100               	movlb	0	; () banked
 37943  00198E  6F76               	movwf	??___flmul& (0+255),b
 37944  001990  0EFF               	movlw	255
 37945  001992  0100               	movlb	0	; () banked
 37946  001994  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 37947  001996  0100               	movlb	0	; () banked
 37948  001998  6F77               	movwf	(??___flmul+1)& (0+255),b
 37949  00199A  0EFF               	movlw	255
 37950  00199C  0100               	movlb	0	; () banked
 37951  00199E  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 37952  0019A0  0100               	movlb	0	; () banked
 37953  0019A2  6F78               	movwf	(??___flmul+2)& (0+255),b
 37954  0019A4  0E7F               	movlw	127
 37955  0019A6  0100               	movlb	0	; () banked
 37956  0019A8  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 37957  0019AA  0100               	movlb	0	; () banked
 37958  0019AC  6F79               	movwf	(??___flmul+3)& (0+255),b
 37959  0019AE  0100               	movlb	0	; () banked
 37960  0019B0  5176               	movf	??___flmul& (0+255),w,b
 37961  0019B2  0100               	movlb	0	; () banked
 37962  0019B4  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 37963  0019B6  0100               	movlb	0	; () banked
 37964  0019B8  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 37965  0019BA  0100               	movlb	0	; () banked
 37966  0019BC  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 37967  0019BE  A4D8               	btfss	status,2,c
 37968  0019C0  D003               	goto	l13788
 37969                           
 37970                           ; BSR set to: 0
 37971                           
 37972                           ; BSR set to: 0
 37973  0019C2  0100               	movlb	0	; () banked
 37974  0019C4  A181               	btfss	___flmul@prod& (0+255),0,b
 37975  0019C6  D003               	goto	l2955
 37976  0019C8                     l13788:
 37977                           
 37978                           ; BSR set to: 0
 37979  0019C8  0E01               	movlw	1
 37980  0019CA  0100               	movlb	0	; () banked
 37981  0019CC  6F7B               	movwf	___flmul@aexp& (0+255),b
 37982  0019CE                     l2955:
 37983                           
 37984                           ; BSR set to: 0
 37985  0019CE  0100               	movlb	0	; () banked
 37986  0019D0  517B               	movf	___flmul@aexp& (0+255),w,b
 37987  0019D2  0100               	movlb	0	; () banked
 37988  0019D4  B4D8               	btfsc	status,2,c
 37989  0019D6  D023               	goto	l13798
 37990                           
 37991                           ; BSR set to: 0
 37992  0019D8  0E01               	movlw	1
 37993  0019DA  0100               	movlb	0	; () banked
 37994  0019DC  2781               	addwf	___flmul@prod& (0+255),f,b
 37995  0019DE  0E00               	movlw	0
 37996  0019E0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 37997  0019E2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 37998  0019E4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 37999                           
 38000                           ; BSR set to: 0
 38001  0019E6  0100               	movlb	0	; () banked
 38002  0019E8  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 38003  0019EA  D019               	goto	l13798
 38004                           
 38005                           ; BSR set to: 0
 38006  0019EC  C081  F076         	movff	___flmul@prod,??___flmul
 38007  0019F0  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 38008  0019F4  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 38009  0019F8  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 38010  0019FC  0100               	movlb	0	; () banked
 38011  0019FE  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 38012  001A00  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 38013  001A02  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 38014  001A04  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 38015  001A06  3376               	rrcf	??___flmul& (0+255),f,b
 38016  001A08  C076  F081         	movff	??___flmul,___flmul@prod
 38017  001A0C  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 38018  001A10  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 38019  001A14  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 38020                           
 38021                           ; BSR set to: 0
 38022  001A18  0100               	movlb	0	; () banked
 38023  001A1A  4B85               	infsnz	___flmul@temp& (0+255),f,b
 38024  001A1C  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 38025  001A1E                     l13798:
 38026                           
 38027                           ; BSR set to: 0
 38028  001A1E  0100               	movlb	0	; () banked
 38029  001A20  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 38030  001A22  D010               	goto	l13802
 38031  001A24  0100               	movlb	0	; () banked
 38032  001A26  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 38033  001A28  E104               	bnz	u12550
 38034  001A2A  0100               	movlb	0	; () banked
 38035  001A2C  2985               	incf	___flmul@temp& (0+255),w,b
 38036  001A2E  A0D8               	btfss	status,0,c
 38037  001A30  D009               	goto	l13802
 38038  001A32                     u12550:
 38039                           
 38040                           ; BSR set to: 0
 38041  001A32  0E00               	movlw	0
 38042  001A34  0100               	movlb	0	; () banked
 38043  001A36  6F81               	movwf	___flmul@prod& (0+255),b
 38044  001A38  0E00               	movlw	0
 38045  001A3A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 38046  001A3C  0E80               	movlw	128
 38047  001A3E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 38048  001A40  0E7F               	movlw	127
 38049  001A42  D02B               	goto	L30
 38050  001A44                     l13802:
 38051                           
 38052                           ; BSR set to: 0
 38053  001A44  0100               	movlb	0	; () banked
 38054  001A46  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 38055  001A48  D007               	goto	l13804
 38056  001A4A  0100               	movlb	0	; () banked
 38057  001A4C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 38058  001A4E  E111               	bnz	l2963
 38059  001A50  0100               	movlb	0	; () banked
 38060  001A52  0585               	decf	___flmul@temp& (0+255),w,b
 38061  001A54  B0D8               	btfsc	status,0,c
 38062  001A56  D00D               	goto	l2963
 38063  001A58                     l13804:
 38064                           
 38065                           ; BSR set to: 0
 38066  001A58  0E00               	movlw	0
 38067  001A5A  0100               	movlb	0	; () banked
 38068  001A5C  6F81               	movwf	___flmul@prod& (0+255),b
 38069  001A5E  0E00               	movlw	0
 38070  001A60  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 38071  001A62  0E00               	movlw	0
 38072  001A64  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 38073  001A66  0E00               	movlw	0
 38074  001A68  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 38075  001A6A  0E00               	movlw	0
 38076  001A6C  0100               	movlb	0	; () banked
 38077  001A6E  6F7A               	movwf	___flmul@sign& (0+255),b
 38078  001A70  D015               	goto	l13814
 38079  001A72                     l2963:
 38080                           
 38081                           ; BSR set to: 0
 38082  001A72  C085  F080         	movff	___flmul@temp,___flmul@bexp
 38083                           
 38084                           ; BSR set to: 0
 38085  001A76  0EFF               	movlw	255
 38086  001A78  0100               	movlb	0	; () banked
 38087  001A7A  1781               	andwf	___flmul@prod& (0+255),f,b
 38088  001A7C  0EFF               	movlw	255
 38089  001A7E  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 38090  001A80  0E7F               	movlw	127
 38091  001A82  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 38092  001A84  0E00               	movlw	0
 38093  001A86  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 38094                           
 38095                           ; BSR set to: 0
 38096  001A88  0100               	movlb	0	; () banked
 38097  001A8A  A180               	btfss	___flmul@bexp& (0+255),0,b
 38098  001A8C  D002               	goto	l13812
 38099                           
 38100                           ; BSR set to: 0
 38101  001A8E  0100               	movlb	0	; () banked
 38102  001A90  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 38103  001A92                     l13812:
 38104                           
 38105                           ; BSR set to: 0
 38106  001A92  0100               	movlb	0	; () banked
 38107  001A94  90D8               	bcf	status,0,c
 38108  001A96  3180               	rrcf	___flmul@bexp& (0+255),w,b
 38109  001A98  0100               	movlb	0	; () banked
 38110  001A9A                     L30:
 38111  001A9A  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 38112  001A9C                     l13814:
 38113                           
 38114                           ; BSR set to: 0
 38115  001A9C  0100               	movlb	0	; () banked
 38116  001A9E  517A               	movf	___flmul@sign& (0+255),w,b
 38117  001AA0  0100               	movlb	0	; () banked
 38118  001AA2  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 38119                           
 38120                           ; BSR set to: 0
 38121  001AA4  C081  F06E         	movff	___flmul@prod,?___flmul
 38122  001AA8  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 38123  001AAC  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 38124  001AB0  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 38125  001AB4  0012               	return	
 38126  001AB6                     __end_of___flmul:
 38127                           	opt stack 0
 38128                           tosu	equ	0xFFF
 38129                           tosh	equ	0xFFE
 38130                           tosl	equ	0xFFD
 38131                           pclath	equ	0xFFA
 38132                           tblptru	equ	0xFF8
 38133                           tblptrh	equ	0xFF7
 38134                           tblptrl	equ	0xFF6
 38135                           tablat	equ	0xFF5
 38136                           prodh	equ	0xFF4
 38137                           prodl	equ	0xFF3
 38138                           intcon	equ	0xFF2
 38139                           indf0	equ	0xFEF
 38140                           postinc0	equ	0xFEE
 38141                           fsr0h	equ	0xFEA
 38142                           fsr0l	equ	0xFE9
 38143                           wreg	equ	0xFE8
 38144                           indf1	equ	0xFE7
 38145                           postinc1	equ	0xFE6
 38146                           postdec1	equ	0xFE5
 38147                           plusw1	equ	0xFE3
 38148                           fsr1h	equ	0xFE2
 38149                           fsr1l	equ	0xFE1
 38150                           indf2	equ	0xFDF
 38151                           postinc2	equ	0xFDE
 38152                           postdec2	equ	0xFDD
 38153                           plusw2	equ	0xFDB
 38154                           fsr2h	equ	0xFDA
 38155                           fsr2l	equ	0xFD9
 38156                           status	equ	0xFD8
 38157                           
 38158 ;; *************** function ___fldiv *****************
 38159 ;; Defined at:
 38160 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcdiv.c"
 38161 ;; Parameters:    Size  Location     Type
 38162 ;;  b               4   39[BANK0 ] unsigned char 
 38163 ;;  a               4   43[BANK0 ] unsigned char 
 38164 ;; Auto vars:     Size  Location     Type
 38165 ;;  grs             4   58[BANK0 ] unsigned long 
 38166 ;;  rem             4   52[BANK0 ] unsigned long 
 38167 ;;  new_exp         2   56[BANK0 ] int 
 38168 ;;  aexp            1   63[BANK0 ] unsigned char 
 38169 ;;  bexp            1   62[BANK0 ] unsigned char 
 38170 ;;  sign            1   51[BANK0 ] unsigned char 
 38171 ;; Return value:  Size  Location     Type
 38172 ;;                  4   39[BANK0 ] unsigned char 
 38173 ;; Registers used:
 38174 ;;		wreg, status,2, status,0
 38175 ;; Tracked objects:
 38176 ;;		On entry : 0/0
 38177 ;;		On exit  : 0/0
 38178 ;;		Unchanged: 0/0
 38179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38180 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38181 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38183 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38184 ;;Total ram usage:       25 bytes
 38185 ;; Hardware stack levels used:    1
 38186 ;; Hardware stack levels required when called:    4
 38187 ;; This function calls:
 38188 ;;		Nothing
 38189 ;; This function is called by:
 38190 ;;		_data_sys_cal_v1
 38191 ;;		_data_sys_cal_v2
 38192 ;;		_m_interp1_float_fast
 38193 ;;		_cal_diff_hight_to_vol_h
 38194 ;;		_cal_diff_hight_level
 38195 ;;		_cal_diff_hight_to_vol_v
 38196 ;;		_cal_diff_p_to_h
 38197 ;; This function uses a non-reentrant model
 38198 ;;
 38199                           
 38200                           	psect	text195
 38201  002352                     __ptext195:
 38202                           	opt stack 0
 38203  002352                     ___fldiv:
 38204                           	opt stack 21
 38205                           
 38206                           ; BSR set to: 0
 38207                           ;incstack = 0
 38208  002352  0100               	movlb	0	; () banked
 38209  002354  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 38210  002356  0B80               	andlw	128
 38211  002358  0100               	movlb	0	; () banked
 38212  00235A  6F93               	movwf	___fldiv@sign& (0+255),b
 38213  00235C  0100               	movlb	0	; () banked
 38214  00235E  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 38215  002360  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 38216  002362  0100               	movlb	0	; () banked
 38217  002364  6F9E               	movwf	___fldiv@bexp& (0+255),b
 38218                           
 38219                           ; BSR set to: 0
 38220  002366  0100               	movlb	0	; () banked
 38221  002368  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 38222  00236A  D002               	goto	l13560
 38223                           
 38224                           ; BSR set to: 0
 38225  00236C  0100               	movlb	0	; () banked
 38226  00236E  819E               	bsf	___fldiv@bexp& (0+255),0,b
 38227  002370                     l13560:
 38228                           
 38229                           ; BSR set to: 0
 38230  002370  0100               	movlb	0	; () banked
 38231  002372  519E               	movf	___fldiv@bexp& (0+255),w,b
 38232  002374  0100               	movlb	0	; () banked
 38233  002376  B4D8               	btfsc	status,2,c
 38234  002378  D012               	goto	l13570
 38235                           
 38236                           ; BSR set to: 0
 38237  00237A  0100               	movlb	0	; () banked
 38238  00237C  299E               	incf	___fldiv@bexp& (0+255),w,b
 38239  00237E  A4D8               	btfss	status,2,c
 38240  002380  D009               	goto	l13566
 38241                           
 38242                           ; BSR set to: 0
 38243  002382  0E00               	movlw	0
 38244  002384  0100               	movlb	0	; () banked
 38245  002386  6F87               	movwf	___fldiv@b& (0+255),b
 38246  002388  0E00               	movlw	0
 38247  00238A  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38248  00238C  0E00               	movlw	0
 38249  00238E  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38250  002390  0E00               	movlw	0
 38251  002392  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38252  002394                     l13566:
 38253                           
 38254                           ; BSR set to: 0
 38255  002394  0100               	movlb	0	; () banked
 38256  002396  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 38257                           
 38258                           ; BSR set to: 0
 38259  002398  0E00               	movlw	0
 38260  00239A  0100               	movlb	0	; () banked
 38261  00239C  D008               	goto	L31
 38262  00239E                     l13570:
 38263                           
 38264                           ; BSR set to: 0
 38265  00239E  0E00               	movlw	0
 38266  0023A0  0100               	movlb	0	; () banked
 38267  0023A2  6F87               	movwf	___fldiv@b& (0+255),b
 38268  0023A4  0E00               	movlw	0
 38269  0023A6  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38270  0023A8  0E00               	movlw	0
 38271  0023AA  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38272  0023AC  0E00               	movlw	0
 38273  0023AE                     L31:
 38274  0023AE  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38275                           
 38276                           ; BSR set to: 0
 38277                           
 38278                           ; BSR set to: 0
 38279  0023B0  0100               	movlb	0	; () banked
 38280  0023B2  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38281  0023B4  0B80               	andlw	128
 38282  0023B6  0100               	movlb	0	; () banked
 38283  0023B8  1B93               	xorwf	___fldiv@sign& (0+255),f,b
 38284                           
 38285                           ; BSR set to: 0
 38286  0023BA  0100               	movlb	0	; () banked
 38287  0023BC  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38288  0023BE  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 38289  0023C0  0100               	movlb	0	; () banked
 38290  0023C2  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38291                           
 38292                           ; BSR set to: 0
 38293  0023C4  0100               	movlb	0	; () banked
 38294  0023C6  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
 38295  0023C8  D002               	goto	l13580
 38296                           
 38297                           ; BSR set to: 0
 38298  0023CA  0100               	movlb	0	; () banked
 38299  0023CC  819F               	bsf	___fldiv@aexp& (0+255),0,b
 38300  0023CE                     l13580:
 38301                           
 38302                           ; BSR set to: 0
 38303  0023CE  0100               	movlb	0	; () banked
 38304  0023D0  519F               	movf	___fldiv@aexp& (0+255),w,b
 38305  0023D2  0100               	movlb	0	; () banked
 38306  0023D4  B4D8               	btfsc	status,2,c
 38307  0023D6  D012               	goto	l13590
 38308                           
 38309                           ; BSR set to: 0
 38310  0023D8  0100               	movlb	0	; () banked
 38311  0023DA  299F               	incf	___fldiv@aexp& (0+255),w,b
 38312  0023DC  A4D8               	btfss	status,2,c
 38313  0023DE  D009               	goto	l13586
 38314                           
 38315                           ; BSR set to: 0
 38316  0023E0  0E00               	movlw	0
 38317  0023E2  0100               	movlb	0	; () banked
 38318  0023E4  6F8B               	movwf	___fldiv@a& (0+255),b
 38319  0023E6  0E00               	movlw	0
 38320  0023E8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 38321  0023EA  0E00               	movlw	0
 38322  0023EC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 38323  0023EE  0E00               	movlw	0
 38324  0023F0  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 38325  0023F2                     l13586:
 38326                           
 38327                           ; BSR set to: 0
 38328  0023F2  0100               	movlb	0	; () banked
 38329  0023F4  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 38330                           
 38331                           ; BSR set to: 0
 38332  0023F6  0E00               	movlw	0
 38333  0023F8  0100               	movlb	0	; () banked
 38334  0023FA  D008               	goto	L32
 38335  0023FC                     l13590:
 38336                           
 38337                           ; BSR set to: 0
 38338  0023FC  0E00               	movlw	0
 38339  0023FE  0100               	movlb	0	; () banked
 38340  002400  6F8B               	movwf	___fldiv@a& (0+255),b
 38341  002402  0E00               	movlw	0
 38342  002404  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 38343  002406  0E00               	movlw	0
 38344  002408  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 38345  00240A  0E00               	movlw	0
 38346  00240C                     L32:
 38347  00240C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 38348                           
 38349                           ; BSR set to: 0
 38350                           
 38351                           ; BSR set to: 0
 38352  00240E  0100               	movlb	0	; () banked
 38353  002410  518B               	movf	___fldiv@a& (0+255),w,b
 38354  002412  0100               	movlb	0	; () banked
 38355  002414  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 38356  002416  0100               	movlb	0	; () banked
 38357  002418  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 38358  00241A  0100               	movlb	0	; () banked
 38359  00241C  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 38360  00241E  A4D8               	btfss	status,2,c
 38361  002420  D017               	goto	l13602
 38362                           
 38363                           ; BSR set to: 0
 38364  002422  0E00               	movlw	0
 38365  002424  0100               	movlb	0	; () banked
 38366  002426  6F87               	movwf	___fldiv@b& (0+255),b
 38367  002428  0E00               	movlw	0
 38368  00242A  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38369  00242C  0E00               	movlw	0
 38370  00242E  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38371  002430  0E00               	movlw	0
 38372  002432  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38373                           
 38374                           ; BSR set to: 0
 38375  002434  0100               	movlb	0	; () banked
 38376  002436  0E80               	movlw	128
 38377  002438  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 38378  00243A  0E7F               	movlw	127
 38379  00243C  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 38380                           
 38381                           ; BSR set to: 0
 38382  00243E  C087  F087         	movff	___fldiv@b,?___fldiv
 38383  002442  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 38384  002446  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 38385  00244A  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 38386                           
 38387                           ; BSR set to: 0
 38388  00244E  0012               	return	
 38389  002450                     l13602:
 38390                           
 38391                           ; BSR set to: 0
 38392  002450  0100               	movlb	0	; () banked
 38393  002452  519E               	movf	___fldiv@bexp& (0+255),w,b
 38394  002454  0100               	movlb	0	; () banked
 38395  002456  A4D8               	btfss	status,2,c
 38396  002458  D012               	goto	l13610
 38397                           
 38398                           ; BSR set to: 0
 38399  00245A  0E00               	movlw	0
 38400  00245C  0100               	movlb	0	; () banked
 38401  00245E  6F87               	movwf	___fldiv@b& (0+255),b
 38402  002460  0E00               	movlw	0
 38403  002462  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38404  002464  0E00               	movlw	0
 38405  002466  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38406  002468  0E00               	movlw	0
 38407  00246A  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38408                           
 38409                           ; BSR set to: 0
 38410  00246C  C087  F087         	movff	___fldiv@b,?___fldiv
 38411  002470  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 38412  002474  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 38413  002478  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 38414                           
 38415                           ; BSR set to: 0
 38416  00247C  0012               	return	
 38417  00247E                     l13610:
 38418                           
 38419                           ; BSR set to: 0
 38420  00247E  0100               	movlb	0	; () banked
 38421  002480  519F               	movf	___fldiv@aexp& (0+255),w,b
 38422  002482  0100               	movlb	0	; () banked
 38423  002484  6F8F               	movwf	??___fldiv& (0+255),b
 38424  002486  6B90               	clrf	(??___fldiv+1)& (0+255),b
 38425  002488  0100               	movlb	0	; () banked
 38426  00248A  1F8F               	comf	??___fldiv& (0+255),f,b
 38427  00248C  1F90               	comf	(??___fldiv+1)& (0+255),f,b
 38428  00248E  4B8F               	infsnz	??___fldiv& (0+255),f,b
 38429  002490  2B90               	incf	(??___fldiv+1)& (0+255),f,b
 38430  002492  0100               	movlb	0	; () banked
 38431  002494  519E               	movf	___fldiv@bexp& (0+255),w,b
 38432  002496  0100               	movlb	0	; () banked
 38433  002498  6F91               	movwf	(??___fldiv+2)& (0+255),b
 38434  00249A  6B92               	clrf	(??___fldiv+3)& (0+255),b
 38435  00249C  0100               	movlb	0	; () banked
 38436  00249E  518F               	movf	??___fldiv& (0+255),w,b
 38437  0024A0  0100               	movlb	0	; () banked
 38438  0024A2  2791               	addwf	(??___fldiv+2)& (0+255),f,b
 38439  0024A4  0100               	movlb	0	; () banked
 38440  0024A6  5190               	movf	(??___fldiv+1)& (0+255),w,b
 38441  0024A8  0100               	movlb	0	; () banked
 38442  0024AA  2392               	addwfc	(??___fldiv+3)& (0+255),f,b
 38443  0024AC  0E7F               	movlw	127
 38444  0024AE  0100               	movlb	0	; () banked
 38445  0024B0  2591               	addwf	(??___fldiv+2)& (0+255),w,b
 38446  0024B2  0100               	movlb	0	; () banked
 38447  0024B4  6F98               	movwf	___fldiv@new_exp& (0+255),b
 38448  0024B6  0E00               	movlw	0
 38449  0024B8  0100               	movlb	0	; () banked
 38450  0024BA  2192               	addwfc	(??___fldiv+3)& (0+255),w,b
 38451  0024BC  0100               	movlb	0	; () banked
 38452  0024BE  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 38453                           
 38454                           ; BSR set to: 0
 38455  0024C0  C087  F094         	movff	___fldiv@b,___fldiv@rem
 38456  0024C4  C088  F095         	movff	___fldiv@b+1,___fldiv@rem+1
 38457  0024C8  C089  F096         	movff	___fldiv@b+2,___fldiv@rem+2
 38458  0024CC  C08A  F097         	movff	___fldiv@b+3,___fldiv@rem+3
 38459                           
 38460                           ; BSR set to: 0
 38461  0024D0  0E00               	movlw	0
 38462  0024D2  0100               	movlb	0	; () banked
 38463  0024D4  6F87               	movwf	___fldiv@b& (0+255),b
 38464  0024D6  0E00               	movlw	0
 38465  0024D8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38466  0024DA  0E00               	movlw	0
 38467  0024DC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38468  0024DE  0E00               	movlw	0
 38469  0024E0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38470                           
 38471                           ; BSR set to: 0
 38472  0024E2  0E00               	movlw	0
 38473  0024E4  0100               	movlb	0	; () banked
 38474  0024E6  6F9A               	movwf	___fldiv@grs& (0+255),b
 38475  0024E8  0E00               	movlw	0
 38476  0024EA  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
 38477  0024EC  0E00               	movlw	0
 38478  0024EE  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
 38479  0024F0  0E00               	movlw	0
 38480  0024F2  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
 38481                           
 38482                           ; BSR set to: 0
 38483  0024F4  0E00               	movlw	0
 38484  0024F6  0100               	movlb	0	; () banked
 38485  0024F8  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38486  0024FA  D042               	goto	l2916
 38487  0024FC                     l13620:
 38488                           
 38489                           ; BSR set to: 0
 38490  0024FC  0100               	movlb	0	; () banked
 38491  0024FE  519F               	movf	___fldiv@aexp& (0+255),w,b
 38492  002500  0100               	movlb	0	; () banked
 38493  002502  B4D8               	btfsc	status,2,c
 38494  002504  D017               	goto	l13628
 38495                           
 38496                           ; BSR set to: 0
 38497  002506  0100               	movlb	0	; () banked
 38498  002508  90D8               	bcf	status,0,c
 38499  00250A  3794               	rlcf	___fldiv@rem& (0+255),f,b
 38500  00250C  3795               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 38501  00250E  3796               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 38502  002510  3797               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 38503  002512  0100               	movlb	0	; () banked
 38504  002514  90D8               	bcf	status,0,c
 38505  002516  3787               	rlcf	___fldiv@b& (0+255),f,b
 38506  002518  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 38507  00251A  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 38508  00251C  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 38509                           
 38510                           ; BSR set to: 0
 38511  00251E  0100               	movlb	0	; () banked
 38512  002520  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 38513  002522  D002               	goto	l2919
 38514                           
 38515                           ; BSR set to: 0
 38516  002524  0100               	movlb	0	; () banked
 38517  002526  8187               	bsf	___fldiv@b& (0+255),0,b
 38518  002528                     l2919:
 38519                           
 38520                           ; BSR set to: 0
 38521  002528  0100               	movlb	0	; () banked
 38522  00252A  90D8               	bcf	status,0,c
 38523  00252C  379A               	rlcf	___fldiv@grs& (0+255),f,b
 38524  00252E  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 38525  002530  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 38526  002532  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 38527  002534                     l13628:
 38528                           
 38529                           ; BSR set to: 0
 38530  002534  0100               	movlb	0	; () banked
 38531  002536  518B               	movf	___fldiv@a& (0+255),w,b
 38532  002538  0100               	movlb	0	; () banked
 38533  00253A  5D94               	subwf	___fldiv@rem& (0+255),w,b
 38534  00253C  0100               	movlb	0	; () banked
 38535  00253E  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 38536  002540  0100               	movlb	0	; () banked
 38537  002542  5995               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 38538  002544  0100               	movlb	0	; () banked
 38539  002546  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 38540  002548  0100               	movlb	0	; () banked
 38541  00254A  5996               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 38542  00254C  0100               	movlb	0	; () banked
 38543  00254E  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38544  002550  0100               	movlb	0	; () banked
 38545  002552  5997               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 38546  002554  A0D8               	btfss	status,0,c
 38547  002556  D012               	goto	l13634
 38548                           
 38549                           ; BSR set to: 0
 38550  002558  0100               	movlb	0	; () banked
 38551  00255A  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 38552                           
 38553                           ; BSR set to: 0
 38554  00255C  0100               	movlb	0	; () banked
 38555  00255E  518B               	movf	___fldiv@a& (0+255),w,b
 38556  002560  0100               	movlb	0	; () banked
 38557  002562  5F94               	subwf	___fldiv@rem& (0+255),f,b
 38558  002564  0100               	movlb	0	; () banked
 38559  002566  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 38560  002568  0100               	movlb	0	; () banked
 38561  00256A  5B95               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 38562  00256C  0100               	movlb	0	; () banked
 38563  00256E  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 38564  002570  0100               	movlb	0	; () banked
 38565  002572  5B96               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 38566  002574  0100               	movlb	0	; () banked
 38567  002576  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 38568  002578  0100               	movlb	0	; () banked
 38569  00257A  5B97               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 38570  00257C                     l13634:
 38571                           
 38572                           ; BSR set to: 0
 38573  00257C  0100               	movlb	0	; () banked
 38574  00257E  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 38575  002580                     l2916:
 38576                           
 38577                           ; BSR set to: 0
 38578  002580  0E19               	movlw	25
 38579  002582  0100               	movlb	0	; () banked
 38580  002584  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 38581  002586  D7BA               	goto	l13620
 38582                           
 38583                           ; BSR set to: 0
 38584                           
 38585                           ; BSR set to: 0
 38586  002588  0100               	movlb	0	; () banked
 38587  00258A  5194               	movf	___fldiv@rem& (0+255),w,b
 38588  00258C  0100               	movlb	0	; () banked
 38589  00258E  1195               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 38590  002590  0100               	movlb	0	; () banked
 38591  002592  1196               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 38592  002594  0100               	movlb	0	; () banked
 38593  002596  1197               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 38594  002598  B4D8               	btfsc	status,2,c
 38595  00259A  D018               	goto	l13646
 38596                           
 38597                           ; BSR set to: 0
 38598  00259C  0100               	movlb	0	; () banked
 38599  00259E  819A               	bsf	___fldiv@grs& (0+255),0,b
 38600                           
 38601                           ; BSR set to: 0
 38602  0025A0  D015               	goto	l13646
 38603  0025A2                     l13640:
 38604                           
 38605                           ; BSR set to: 0
 38606  0025A2  0100               	movlb	0	; () banked
 38607  0025A4  90D8               	bcf	status,0,c
 38608  0025A6  3787               	rlcf	___fldiv@b& (0+255),f,b
 38609  0025A8  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 38610  0025AA  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 38611  0025AC  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 38612                           
 38613                           ; BSR set to: 0
 38614  0025AE  0100               	movlb	0	; () banked
 38615  0025B0  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 38616  0025B2  D002               	goto	l2925
 38617                           
 38618                           ; BSR set to: 0
 38619  0025B4  0100               	movlb	0	; () banked
 38620  0025B6  8187               	bsf	___fldiv@b& (0+255),0,b
 38621  0025B8                     l2925:
 38622                           
 38623                           ; BSR set to: 0
 38624  0025B8  0100               	movlb	0	; () banked
 38625  0025BA  90D8               	bcf	status,0,c
 38626  0025BC  379A               	rlcf	___fldiv@grs& (0+255),f,b
 38627  0025BE  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 38628  0025C0  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 38629  0025C2  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 38630  0025C4  0100               	movlb	0	; () banked
 38631  0025C6  0798               	decf	___fldiv@new_exp& (0+255),f,b
 38632  0025C8  A0D8               	btfss	status,0,c
 38633  0025CA  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 38634  0025CC                     l13646:
 38635                           
 38636                           ; BSR set to: 0
 38637  0025CC  0100               	movlb	0	; () banked
 38638  0025CE  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 38639  0025D0  D7E8               	goto	l13640
 38640                           
 38641                           ; BSR set to: 0
 38642                           
 38643                           ; BSR set to: 0
 38644  0025D2  0E00               	movlw	0
 38645  0025D4  0100               	movlb	0	; () banked
 38646  0025D6  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38647                           
 38648                           ; BSR set to: 0
 38649  0025D8  0100               	movlb	0	; () banked
 38650  0025DA  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 38651  0025DC  D024               	goto	l2927
 38652                           
 38653                           ; BSR set to: 0
 38654  0025DE  0EFF               	movlw	255
 38655  0025E0  0100               	movlb	0	; () banked
 38656  0025E2  159A               	andwf	___fldiv@grs& (0+255),w,b
 38657  0025E4  0100               	movlb	0	; () banked
 38658  0025E6  6F8F               	movwf	??___fldiv& (0+255),b
 38659  0025E8  0EFF               	movlw	255
 38660  0025EA  0100               	movlb	0	; () banked
 38661  0025EC  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 38662  0025EE  0100               	movlb	0	; () banked
 38663  0025F0  6F90               	movwf	(??___fldiv+1)& (0+255),b
 38664  0025F2  0EFF               	movlw	255
 38665  0025F4  0100               	movlb	0	; () banked
 38666  0025F6  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 38667  0025F8  0100               	movlb	0	; () banked
 38668  0025FA  6F91               	movwf	(??___fldiv+2)& (0+255),b
 38669  0025FC  0E7F               	movlw	127
 38670  0025FE  0100               	movlb	0	; () banked
 38671  002600  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 38672  002602  0100               	movlb	0	; () banked
 38673  002604  6F92               	movwf	(??___fldiv+3)& (0+255),b
 38674  002606  0100               	movlb	0	; () banked
 38675  002608  518F               	movf	??___fldiv& (0+255),w,b
 38676  00260A  0100               	movlb	0	; () banked
 38677  00260C  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 38678  00260E  0100               	movlb	0	; () banked
 38679  002610  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 38680  002612  0100               	movlb	0	; () banked
 38681  002614  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 38682  002616  A4D8               	btfss	status,2,c
 38683  002618  D003               	goto	l13656
 38684                           
 38685                           ; BSR set to: 0
 38686                           
 38687                           ; BSR set to: 0
 38688  00261A  0100               	movlb	0	; () banked
 38689  00261C  A187               	btfss	___fldiv@b& (0+255),0,b
 38690  00261E  D003               	goto	l2927
 38691  002620                     l13656:
 38692                           
 38693                           ; BSR set to: 0
 38694  002620  0E01               	movlw	1
 38695  002622  0100               	movlb	0	; () banked
 38696  002624  6F9F               	movwf	___fldiv@aexp& (0+255),b
 38697  002626                     l2927:
 38698                           
 38699                           ; BSR set to: 0
 38700  002626  0100               	movlb	0	; () banked
 38701  002628  519F               	movf	___fldiv@aexp& (0+255),w,b
 38702  00262A  0100               	movlb	0	; () banked
 38703  00262C  B4D8               	btfsc	status,2,c
 38704  00262E  D023               	goto	l13666
 38705                           
 38706                           ; BSR set to: 0
 38707  002630  0E01               	movlw	1
 38708  002632  0100               	movlb	0	; () banked
 38709  002634  2787               	addwf	___fldiv@b& (0+255),f,b
 38710  002636  0E00               	movlw	0
 38711  002638  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 38712  00263A  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 38713  00263C  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 38714                           
 38715                           ; BSR set to: 0
 38716  00263E  0100               	movlb	0	; () banked
 38717  002640  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 38718  002642  D019               	goto	l13666
 38719                           
 38720                           ; BSR set to: 0
 38721  002644  C087  F08F         	movff	___fldiv@b,??___fldiv
 38722  002648  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
 38723  00264C  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
 38724  002650  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
 38725  002654  0100               	movlb	0	; () banked
 38726  002656  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
 38727  002658  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
 38728  00265A  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
 38729  00265C  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
 38730  00265E  338F               	rrcf	??___fldiv& (0+255),f,b
 38731  002660  C08F  F087         	movff	??___fldiv,___fldiv@b
 38732  002664  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
 38733  002668  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
 38734  00266C  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
 38735                           
 38736                           ; BSR set to: 0
 38737  002670  0100               	movlb	0	; () banked
 38738  002672  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 38739  002674  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 38740  002676                     l13666:
 38741                           
 38742                           ; BSR set to: 0
 38743  002676  0100               	movlb	0	; () banked
 38744  002678  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 38745  00267A  D014               	goto	l13670
 38746  00267C  0100               	movlb	0	; () banked
 38747  00267E  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 38748  002680  E104               	bnz	u12360
 38749  002682  0100               	movlb	0	; () banked
 38750  002684  2998               	incf	___fldiv@new_exp& (0+255),w,b
 38751  002686  A0D8               	btfss	status,0,c
 38752  002688  D00D               	goto	l13670
 38753  00268A                     u12360:
 38754                           
 38755                           ; BSR set to: 0
 38756  00268A  0E00               	movlw	0
 38757  00268C  0100               	movlb	0	; () banked
 38758  00268E  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 38759  002690  6998               	setf	___fldiv@new_exp& (0+255),b
 38760  002692  0E00               	movlw	0
 38761  002694  0100               	movlb	0	; () banked
 38762  002696  6F87               	movwf	___fldiv@b& (0+255),b
 38763  002698  0E00               	movlw	0
 38764  00269A  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38765  00269C  0E00               	movlw	0
 38766  00269E  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38767  0026A0  0E00               	movlw	0
 38768  0026A2  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38769  0026A4                     l13670:
 38770                           
 38771                           ; BSR set to: 0
 38772  0026A4  0100               	movlb	0	; () banked
 38773  0026A6  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 38774  0026A8  D007               	goto	l13672
 38775  0026AA  0100               	movlb	0	; () banked
 38776  0026AC  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 38777  0026AE  E115               	bnz	l13674
 38778  0026B0  0100               	movlb	0	; () banked
 38779  0026B2  0598               	decf	___fldiv@new_exp& (0+255),w,b
 38780  0026B4  B0D8               	btfsc	status,0,c
 38781  0026B6  D011               	goto	l13674
 38782  0026B8                     l13672:
 38783                           
 38784                           ; BSR set to: 0
 38785  0026B8  0E00               	movlw	0
 38786  0026BA  0100               	movlb	0	; () banked
 38787  0026BC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 38788  0026BE  0E00               	movlw	0
 38789  0026C0  6F98               	movwf	___fldiv@new_exp& (0+255),b
 38790  0026C2  0E00               	movlw	0
 38791  0026C4  0100               	movlb	0	; () banked
 38792  0026C6  6F87               	movwf	___fldiv@b& (0+255),b
 38793  0026C8  0E00               	movlw	0
 38794  0026CA  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 38795  0026CC  0E00               	movlw	0
 38796  0026CE  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 38797  0026D0  0E00               	movlw	0
 38798  0026D2  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38799  0026D4  0E00               	movlw	0
 38800  0026D6  0100               	movlb	0	; () banked
 38801  0026D8  6F93               	movwf	___fldiv@sign& (0+255),b
 38802  0026DA                     l13674:
 38803                           
 38804                           ; BSR set to: 0
 38805  0026DA  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 38806                           
 38807                           ; BSR set to: 0
 38808  0026DE  0100               	movlb	0	; () banked
 38809  0026E0  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 38810  0026E2  D003               	goto	l13680
 38811                           
 38812                           ; BSR set to: 0
 38813  0026E4  0100               	movlb	0	; () banked
 38814  0026E6  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 38815  0026E8  D002               	goto	l13682
 38816  0026EA                     l13680:
 38817                           
 38818                           ; BSR set to: 0
 38819  0026EA  0100               	movlb	0	; () banked
 38820  0026EC  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 38821  0026EE                     l13682:
 38822                           
 38823                           ; BSR set to: 0
 38824  0026EE  0100               	movlb	0	; () banked
 38825  0026F0  90D8               	bcf	status,0,c
 38826  0026F2  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 38827  0026F4  0100               	movlb	0	; () banked
 38828  0026F6  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 38829                           
 38830                           ; BSR set to: 0
 38831  0026F8  0100               	movlb	0	; () banked
 38832  0026FA  5193               	movf	___fldiv@sign& (0+255),w,b
 38833  0026FC  0100               	movlb	0	; () banked
 38834  0026FE  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 38835                           
 38836                           ; BSR set to: 0
 38837  002700  C087  F087         	movff	___fldiv@b,?___fldiv
 38838  002704  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 38839  002708  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 38840  00270C  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 38841  002710  0012               	return	
 38842  002712                     __end_of___fldiv:
 38843                           	opt stack 0
 38844                           tosu	equ	0xFFF
 38845                           tosh	equ	0xFFE
 38846                           tosl	equ	0xFFD
 38847                           pclath	equ	0xFFA
 38848                           tblptru	equ	0xFF8
 38849                           tblptrh	equ	0xFF7
 38850                           tblptrl	equ	0xFF6
 38851                           tablat	equ	0xFF5
 38852                           prodh	equ	0xFF4
 38853                           prodl	equ	0xFF3
 38854                           intcon	equ	0xFF2
 38855                           indf0	equ	0xFEF
 38856                           postinc0	equ	0xFEE
 38857                           fsr0h	equ	0xFEA
 38858                           fsr0l	equ	0xFE9
 38859                           wreg	equ	0xFE8
 38860                           indf1	equ	0xFE7
 38861                           postinc1	equ	0xFE6
 38862                           postdec1	equ	0xFE5
 38863                           plusw1	equ	0xFE3
 38864                           fsr1h	equ	0xFE2
 38865                           fsr1l	equ	0xFE1
 38866                           indf2	equ	0xFDF
 38867                           postinc2	equ	0xFDE
 38868                           postdec2	equ	0xFDD
 38869                           plusw2	equ	0xFDB
 38870                           fsr2h	equ	0xFDA
 38871                           fsr2l	equ	0xFD9
 38872                           status	equ	0xFD8
 38873                           
 38874 ;; *************** function _calib_data_init_pr *****************
 38875 ;; Defined at:
 38876 ;;		line 283 in file "src/api/data.c"
 38877 ;; Parameters:    Size  Location     Type
 38878 ;;		None
 38879 ;; Auto vars:     Size  Location     Type
 38880 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 38881 ;;		 -> prCalibTabDef(162), 
 38882 ;;  t16             2   23[BANK0 ] unsigned int 
 38883 ;;  ret             1   22[BANK0 ] unsigned char 
 38884 ;; Return value:  Size  Location     Type
 38885 ;;                  1    wreg      unsigned char 
 38886 ;; Registers used:
 38887 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38888 ;; Tracked objects:
 38889 ;;		On entry : 0/0
 38890 ;;		On exit  : 0/0
 38891 ;;		Unchanged: 0/0
 38892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38894 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38896 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38897 ;;Total ram usage:        5 bytes
 38898 ;; Hardware stack levels used:    1
 38899 ;; Hardware stack levels required when called:    9
 38900 ;; This function calls:
 38901 ;;		_at24c02_init
 38902 ;;		_at24c02_read_n_byte
 38903 ;;		_at24c02_write_n_byte
 38904 ;;		_calib_data_set_default_pr
 38905 ;;		_crc_append
 38906 ;;		_crc_verify
 38907 ;; This function is called by:
 38908 ;;		_data_init_all
 38909 ;; This function uses a non-reentrant model
 38910 ;;
 38911                           
 38912                           	psect	text196
 38913  0056E0                     __ptext196:
 38914                           	opt stack 0
 38915  0056E0                     _calib_data_init_pr:
 38916                           	opt stack 20
 38917                           
 38918                           ;data.c: 285: uint8_t ret=0;
 38919                           
 38920                           ; BSR set to: 0
 38921                           ;incstack = 0
 38922  0056E0  0E00               	movlw	0
 38923  0056E2  0100               	movlb	0	; () banked
 38924  0056E4  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 38925                           
 38926                           ; BSR set to: 0
 38927                           ;data.c: 286: uint16_t t16;
 38928                           ;data.c: 287: uint8_t* buf=(uint8_t*)(&prCalibTabDef);
 38929  0056E6  0E00               	movlw	low _prCalibTabDef
 38930  0056E8  0100               	movlb	0	; () banked
 38931  0056EA  6F79               	movwf	calib_data_init_pr@buf& (0+255),b
 38932  0056EC  0E04               	movlw	high _prCalibTabDef
 38933  0056EE  0100               	movlb	0	; () banked
 38934  0056F0  6F7A               	movwf	(calib_data_init_pr@buf+1)& (0+255),b
 38935                           
 38936                           ; BSR set to: 0
 38937                           ;data.c: 289: p_prEepromObj=&at24c02Ch0;
 38938  0056F2  0E82               	movlw	low _at24c02Ch0
 38939  0056F4  6E27               	movwf	_p_prEepromObj,c
 38940  0056F6  0E01               	movlw	high _at24c02Ch0
 38941  0056F8  6E28               	movwf	_p_prEepromObj+1,c
 38942                           
 38943                           ; BSR set to: 0
 38944                           ;data.c: 290: at24c02_init(p_prEepromObj,0xaa);
 38945  0056FA  C027  F060         	movff	_p_prEepromObj,at24c02_init@pAt24c02
 38946  0056FE  C028  F061         	movff	_p_prEepromObj+1,at24c02_init@pAt24c02+1
 38947  005702  0EAA               	movlw	170
 38948  005704  0100               	movlb	0	; () banked
 38949  005706  6F62               	movwf	at24c02_init@slv& (0+255),b
 38950  005708  ECA8  F042         	call	_at24c02_init	;wreg free
 38951                           
 38952                           ;data.c: 291: t16=sizeof(prCalibTabDef);
 38953  00570C  0E00               	movlw	0
 38954  00570E  0100               	movlb	0	; () banked
 38955  005710  6F78               	movwf	(calib_data_init_pr@t16+1)& (0+255),b
 38956  005712  0EA2               	movlw	162
 38957  005714  6F77               	movwf	calib_data_init_pr@t16& (0+255),b
 38958                           
 38959                           ; BSR set to: 0
 38960                           ;data.c: 292: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 38961  005716  C027  F068         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 38962  00571A  C028  F069         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 38963  00571E  0E00               	movlw	0
 38964  005720  0100               	movlb	0	; () banked
 38965  005722  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 38966  005724  C079  F06B         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 38967  005728  C07A  F06C         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 38968  00572C  C077  F06D         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 38969  005730  C078  F06E         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 38970  005734  EC81  F022         	call	_at24c02_read_n_byte	;wreg free
 38971                           
 38972                           ;data.c: 293: ret=crc_verify(buf,t16);
 38973  005738  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 38974  00573C  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 38975  005740  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 38976  005744  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 38977  005748  EC21  F041         	call	_crc_verify	;wreg free
 38978  00574C  0100               	movlb	0	; () banked
 38979  00574E  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 38980                           
 38981                           ; BSR set to: 0
 38982                           ;data.c: 294: if(!ret){
 38983  005750  0100               	movlb	0	; () banked
 38984  005752  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 38985  005754  0100               	movlb	0	; () banked
 38986  005756  A4D8               	btfss	status,2,c
 38987  005758  0012               	return	
 38988                           
 38989                           ; BSR set to: 0
 38990                           ;data.c: 295: calib_data_set_default_pr();
 38991  00575A  ECC1  F020         	call	_calib_data_set_default_pr	;wreg free
 38992                           
 38993                           ;data.c: 296: crc_append(buf,t16-2);
 38994  00575E  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 38995  005762  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 38996  005766  0EFE               	movlw	254
 38997  005768  0100               	movlb	0	; () banked
 38998  00576A  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 38999  00576C  0100               	movlb	0	; () banked
 39000  00576E  6F6E               	movwf	crc_append@n& (0+255),b
 39001  005770  0EFF               	movlw	255
 39002  005772  0100               	movlb	0	; () banked
 39003  005774  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 39004  005776  0100               	movlb	0	; () banked
 39005  005778  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 39006  00577A  EC65  F047         	call	_crc_append	;wreg free
 39007                           
 39008                           ;data.c: 297: at24c02_write_n_byte(p_prEepromObj,0,buf,t16);
 39009  00577E  C027  F066         	movff	_p_prEepromObj,at24c02_write_n_byte@pAt24c02
 39010  005782  C028  F067         	movff	_p_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 39011  005786  0E00               	movlw	0
 39012  005788  0100               	movlb	0	; () banked
 39013  00578A  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 39014  00578C  C079  F069         	movff	calib_data_init_pr@buf,at24c02_write_n_byte@buf
 39015  005790  C07A  F06A         	movff	calib_data_init_pr@buf+1,at24c02_write_n_byte@buf+1
 39016  005794  C077  F06B         	movff	calib_data_init_pr@t16,at24c02_write_n_byte@len
 39017  005798  C078  F06C         	movff	calib_data_init_pr@t16+1,at24c02_write_n_byte@len+1
 39018  00579C  ECB8  F02D         	call	_at24c02_write_n_byte	;wreg free
 39019                           
 39020                           ;data.c: 298: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 39021  0057A0  C027  F068         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 39022  0057A4  C028  F069         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 39023  0057A8  0E00               	movlw	0
 39024  0057AA  0100               	movlb	0	; () banked
 39025  0057AC  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 39026  0057AE  C079  F06B         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 39027  0057B2  C07A  F06C         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 39028  0057B6  C077  F06D         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 39029  0057BA  C078  F06E         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 39030  0057BE  EC81  F022         	call	_at24c02_read_n_byte	;wreg free
 39031                           
 39032                           ;data.c: 299: ret=crc_verify(buf,t16);
 39033  0057C2  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 39034  0057C6  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 39035  0057CA  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 39036  0057CE  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 39037  0057D2  EC21  F041         	call	_crc_verify	;wreg free
 39038  0057D6  0100               	movlb	0	; () banked
 39039  0057D8  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 39040                           
 39041                           ; BSR set to: 0
 39042                           ;data.c: 300: if(!ret){
 39043  0057DA  0100               	movlb	0	; () banked
 39044  0057DC  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 39045  0057DE  0100               	movlb	0	; () banked
 39046  0057E0  A4D8               	btfss	status,2,c
 39047  0057E2  0012               	return	
 39048                           
 39049                           ; BSR set to: 0
 39050                           ;data.c: 301: calib_data_set_default_pr();
 39051  0057E4  ECC1  F020         	call	_calib_data_set_default_pr	;wreg free
 39052                           
 39053                           ;data.c: 302: crc_append(buf,t16-2);
 39054  0057E8  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 39055  0057EC  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 39056  0057F0  0EFE               	movlw	254
 39057  0057F2  0100               	movlb	0	; () banked
 39058  0057F4  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 39059  0057F6  0100               	movlb	0	; () banked
 39060  0057F8  6F6E               	movwf	crc_append@n& (0+255),b
 39061  0057FA  0EFF               	movlw	255
 39062  0057FC  0100               	movlb	0	; () banked
 39063  0057FE  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 39064  005800  0100               	movlb	0	; () banked
 39065  005802  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 39066  005804  EC65  F047         	call	_crc_append	;wreg free
 39067  005808  0012               	return	
 39068  00580A                     __end_of_calib_data_init_pr:
 39069                           	opt stack 0
 39070                           tosu	equ	0xFFF
 39071                           tosh	equ	0xFFE
 39072                           tosl	equ	0xFFD
 39073                           pclath	equ	0xFFA
 39074                           tblptru	equ	0xFF8
 39075                           tblptrh	equ	0xFF7
 39076                           tblptrl	equ	0xFF6
 39077                           tablat	equ	0xFF5
 39078                           prodh	equ	0xFF4
 39079                           prodl	equ	0xFF3
 39080                           intcon	equ	0xFF2
 39081                           indf0	equ	0xFEF
 39082                           postinc0	equ	0xFEE
 39083                           fsr0h	equ	0xFEA
 39084                           fsr0l	equ	0xFE9
 39085                           wreg	equ	0xFE8
 39086                           indf1	equ	0xFE7
 39087                           postinc1	equ	0xFE6
 39088                           postdec1	equ	0xFE5
 39089                           plusw1	equ	0xFE3
 39090                           fsr1h	equ	0xFE2
 39091                           fsr1l	equ	0xFE1
 39092                           indf2	equ	0xFDF
 39093                           postinc2	equ	0xFDE
 39094                           postdec2	equ	0xFDD
 39095                           plusw2	equ	0xFDB
 39096                           fsr2h	equ	0xFDA
 39097                           fsr2l	equ	0xFD9
 39098                           status	equ	0xFD8
 39099                           
 39100 ;; *************** function _calib_data_set_default_pr *****************
 39101 ;; Defined at:
 39102 ;;		line 242 in file "src/api/data.c"
 39103 ;; Parameters:    Size  Location     Type
 39104 ;;		None
 39105 ;; Auto vars:     Size  Location     Type
 39106 ;;  j               1   15[BANK0 ] unsigned char 
 39107 ;;  i               1   14[BANK0 ] unsigned char 
 39108 ;; Return value:  Size  Location     Type
 39109 ;;                  1    wreg      void 
 39110 ;; Registers used:
 39111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39112 ;; Tracked objects:
 39113 ;;		On entry : 0/0
 39114 ;;		On exit  : 0/0
 39115 ;;		Unchanged: 0/0
 39116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39119 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39120 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39121 ;;Total ram usage:        8 bytes
 39122 ;; Hardware stack levels used:    1
 39123 ;; Hardware stack levels required when called:    5
 39124 ;; This function calls:
 39125 ;;		___wmul
 39126 ;; This function is called by:
 39127 ;;		_calib_data_init_pr
 39128 ;; This function uses a non-reentrant model
 39129 ;;
 39130                           
 39131                           	psect	text197
 39132  004182                     __ptext197:
 39133                           	opt stack 0
 39134  004182                     _calib_data_set_default_pr:
 39135                           	opt stack 23
 39136                           
 39137                           ;data.c: 244: uint8_t i,j;
 39138                           ;data.c: 245: prCalibTabDef.rowCount=1;
 39139                           
 39140                           ;incstack = 0
 39141  004182  0E01               	movlw	1
 39142  004184  0104               	movlb	4	; () banked
 39143  004186  6F00               	movwf	_prCalibTabDef& (0+255),b
 39144                           
 39145                           ;data.c: 246: for(i=0;i<1;i++){
 39146  004188  0E00               	movlw	0
 39147  00418A  0100               	movlb	0	; () banked
 39148  00418C  6F6E               	movwf	calib_data_set_default_pr@i& (0+255),b
 39149  00418E  0100               	movlb	0	; () banked
 39150  004190  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39151  004192  0100               	movlb	0	; () banked
 39152  004194  A4D8               	btfss	status,2,c
 39153  004196  0012               	return	
 39154                           
 39155                           ; BSR set to: 0
 39156                           ;data.c: 247: prCalibTabDef.prCalibRow[i].pCount=6;
 39157                           
 39158                           ; BSR set to: 0
 39159                           
 39160                           ; BSR set to: 0
 39161  004198  0100               	movlb	0	; () banked
 39162  00419A  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39163  00419C  0D34               	mullw	52
 39164  00419E  0E04               	movlw	low (_prCalibTabDef+4)
 39165  0041A0  24F3               	addwf	prodl,w,c
 39166  0041A2  6ED9               	movwf	fsr2l,c
 39167  0041A4  0E04               	movlw	high (_prCalibTabDef+4)
 39168  0041A6  20F4               	addwfc	prodh,w,c
 39169  0041A8  6EDA               	movwf	fsr2h,c
 39170  0041AA  0E06               	movlw	6
 39171  0041AC  6EDF               	movwf	indf2,c
 39172                           
 39173                           ; BSR set to: 0
 39174                           ;data.c: 248: for(j=0;j<6;j++){
 39175  0041AE  0E00               	movlw	0
 39176  0041B0  0100               	movlb	0	; () banked
 39177  0041B2  6F6F               	movwf	calib_data_set_default_pr@j& (0+255),b
 39178  0041B4                     l15672:
 39179                           
 39180                           ; BSR set to: 0
 39181  0041B4  0E05               	movlw	5
 39182  0041B6  0100               	movlb	0	; () banked
 39183  0041B8  656F               	cpfsgt	calib_data_set_default_pr@j& (0+255),b
 39184  0041BA  D001               	goto	l15676
 39185  0041BC  D0C1               	goto	l15684
 39186  0041BE                     l15676:
 39187                           
 39188                           ; BSR set to: 0
 39189                           ;data.c: 249: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 39190  0041BE  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 39191  0041C2  0100               	movlb	0	; () banked
 39192  0041C4  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39193  0041C6  0E17               	movlw	23
 39194  0041C8  0100               	movlb	0	; () banked
 39195  0041CA  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39196  0041CC  0E70               	movlw	112
 39197  0041CE  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39198  0041D0  EC00  F04E         	call	___wmul	;wreg free
 39199  0041D4  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 39200  0041D8  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 39201  0041DC  C06E  F062         	movff	calib_data_set_default_pr@i,___wmul@multiplier
 39202  0041E0  0100               	movlb	0	; () banked
 39203  0041E2  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39204  0041E4  0E01               	movlw	1
 39205  0041E6  0100               	movlb	0	; () banked
 39206  0041E8  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39207  0041EA  0EF4               	movlw	244
 39208  0041EC  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39209  0041EE  EC00  F04E         	call	___wmul	;wreg free
 39210  0041F2  0100               	movlb	0	; () banked
 39211  0041F4  5162               	movf	?___wmul& (0+255),w,b
 39212  0041F6  0100               	movlb	0	; () banked
 39213  0041F8  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39214  0041FA  0100               	movlb	0	; () banked
 39215  0041FC  5163               	movf	(?___wmul+1)& (0+255),w,b
 39216  0041FE  0100               	movlb	0	; () banked
 39217  004200  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39218  004202  0100               	movlb	0	; () banked
 39219  004204  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 39220  004206  0D08               	mullw	8
 39221  004208  0E04               	movlw	4
 39222  00420A  26F3               	addwf	prodl,f,c
 39223  00420C  0E00               	movlw	0
 39224  00420E  22F4               	addwfc	prodh,f,c
 39225  004210  0E00               	movlw	low _prCalibTabDef
 39226  004212  0100               	movlb	0	; () banked
 39227  004214  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 39228  004216  0E04               	movlw	high _prCalibTabDef
 39229  004218  0100               	movlb	0	; () banked
 39230  00421A  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 39231  00421C  0E04               	movlw	4
 39232  00421E  0100               	movlb	0	; () banked
 39233  004220  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 39234  004222  0E00               	movlw	0
 39235  004224  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 39236  004226  50F3               	movf	prodl,w,c
 39237  004228  0100               	movlb	0	; () banked
 39238  00422A  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 39239  00422C  50F4               	movf	prodh,w,c
 39240  00422E  0100               	movlb	0	; () banked
 39241  004230  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 39242  004232  0100               	movlb	0	; () banked
 39243  004234  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39244  004236  0D34               	mullw	52
 39245  004238  50F3               	movf	prodl,w,c
 39246  00423A  0100               	movlb	0	; () banked
 39247  00423C  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 39248  00423E  50F4               	movf	prodh,w,c
 39249  004240  0100               	movlb	0	; () banked
 39250  004242  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 39251  004244  0E04               	movlw	4
 39252  004246  0100               	movlb	0	; () banked
 39253  004248  256A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),w,b
 39254  00424A  6ED9               	movwf	fsr2l,c
 39255  00424C  0E00               	movlw	0
 39256  00424E  0100               	movlb	0	; () banked
 39257  004250  216B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),w,b
 39258  004252  6EDA               	movwf	fsr2h,c
 39259  004254  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 39260  004258  C069  FFDD         	movff	??_calib_data_set_default_pr+1,postdec2
 39261                           
 39262                           ;data.c: 250: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 39263  00425C  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 39264  004260  0100               	movlb	0	; () banked
 39265  004262  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 39266  004264  0E17               	movlw	23
 39267  004266  0100               	movlb	0	; () banked
 39268  004268  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 39269  00426A  0E70               	movlw	112
 39270  00426C  6F64               	movwf	___wmul@multiplicand& (0+255),b
 39271  00426E  EC00  F04E         	call	___wmul	;wreg free
 39272  004272  0100               	movlb	0	; () banked
 39273  004274  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 39274  004278  0100               	movlb	0	; () banked
 39275  00427A  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 39276  00427E  0E00               	movlw	0
 39277  004280  0100               	movlb	0	; () banked
 39278  004282  BF69               	btfsc	(??_calib_data_set_default_pr+1)& (0+255),7,b
 39279  004284  0EFF               	movlw	255
 39280  004286  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 39281  004288  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 39282  00428A  0100               	movlb	0	; () banked
 39283  00428C  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 39284  00428E  0D08               	mullw	8
 39285  004290  0E04               	movlw	4
 39286  004292  26F3               	addwf	prodl,f,c
 39287  004294  0E00               	movlw	0
 39288  004296  22F4               	addwfc	prodh,f,c
 39289  004298  0E00               	movlw	low _prCalibTabDef
 39290  00429A  0100               	movlb	0	; () banked
 39291  00429C  6F6C               	movwf	(??_calib_data_set_default_pr+4)& (0+255),b
 39292  00429E  0E04               	movlw	high _prCalibTabDef
 39293  0042A0  0100               	movlb	0	; () banked
 39294  0042A2  6F6D               	movwf	(??_calib_data_set_default_pr+5)& (0+255),b
 39295  0042A4  0E04               	movlw	4
 39296  0042A6  0100               	movlb	0	; () banked
 39297  0042A8  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 39298  0042AA  0E00               	movlw	0
 39299  0042AC  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 39300  0042AE  50F3               	movf	prodl,w,c
 39301  0042B0  0100               	movlb	0	; () banked
 39302  0042B2  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 39303  0042B4  50F4               	movf	prodh,w,c
 39304  0042B6  0100               	movlb	0	; () banked
 39305  0042B8  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 39306  0042BA  0100               	movlb	0	; () banked
 39307  0042BC  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39308  0042BE  0D34               	mullw	52
 39309  0042C0  50F3               	movf	prodl,w,c
 39310  0042C2  0100               	movlb	0	; () banked
 39311  0042C4  256C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),w,b
 39312  0042C6  6ED9               	movwf	fsr2l,c
 39313  0042C8  50F4               	movf	prodh,w,c
 39314  0042CA  0100               	movlb	0	; () banked
 39315  0042CC  216D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),w,b
 39316  0042CE  6EDA               	movwf	fsr2h,c
 39317  0042D0  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 39318  0042D4  C069  FFDE         	movff	??_calib_data_set_default_pr+1,postinc2
 39319  0042D8  C06A  FFDE         	movff	??_calib_data_set_default_pr+2,postinc2
 39320  0042DC  C06B  FFDE         	movff	??_calib_data_set_default_pr+3,postinc2
 39321                           
 39322                           ; BSR set to: 0
 39323                           ;data.c: 251: prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=0;
 39324  0042E0  0100               	movlb	0	; () banked
 39325  0042E2  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 39326  0042E4  0D08               	mullw	8
 39327  0042E6  0E04               	movlw	4
 39328  0042E8  26F3               	addwf	prodl,f,c
 39329  0042EA  0E00               	movlw	0
 39330  0042EC  22F4               	addwfc	prodh,f,c
 39331  0042EE  0E00               	movlw	low _prCalibTabDef
 39332  0042F0  0100               	movlb	0	; () banked
 39333  0042F2  6F68               	movwf	??_calib_data_set_default_pr& (0+255),b
 39334  0042F4  0E04               	movlw	high _prCalibTabDef
 39335  0042F6  0100               	movlb	0	; () banked
 39336  0042F8  6F69               	movwf	(??_calib_data_set_default_pr+1)& (0+255),b
 39337  0042FA  0E04               	movlw	4
 39338  0042FC  0100               	movlb	0	; () banked
 39339  0042FE  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39340  004300  0E00               	movlw	0
 39341  004302  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39342  004304  50F3               	movf	prodl,w,c
 39343  004306  0100               	movlb	0	; () banked
 39344  004308  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39345  00430A  50F4               	movf	prodh,w,c
 39346  00430C  0100               	movlb	0	; () banked
 39347  00430E  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39348  004310  0100               	movlb	0	; () banked
 39349  004312  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 39350  004314  0D34               	mullw	52
 39351  004316  50F3               	movf	prodl,w,c
 39352  004318  0100               	movlb	0	; () banked
 39353  00431A  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 39354  00431C  50F4               	movf	prodh,w,c
 39355  00431E  0100               	movlb	0	; () banked
 39356  004320  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 39357  004322  0E06               	movlw	6
 39358  004324  0100               	movlb	0	; () banked
 39359  004326  2568               	addwf	??_calib_data_set_default_pr& (0+255),w,b
 39360  004328  6ED9               	movwf	fsr2l,c
 39361  00432A  0E00               	movlw	0
 39362  00432C  0100               	movlb	0	; () banked
 39363  00432E  2169               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),w,b
 39364  004330  6EDA               	movwf	fsr2h,c
 39365  004332  0E00               	movlw	0
 39366  004334  6EDE               	movwf	postinc2,c
 39367  004336  0E00               	movlw	0
 39368  004338  6EDD               	movwf	postdec2,c
 39369                           
 39370                           ; BSR set to: 0
 39371  00433A  0100               	movlb	0	; () banked
 39372  00433C  2B6F               	incf	calib_data_set_default_pr@j& (0+255),f,b
 39373  00433E  D73A               	goto	l15672
 39374  004340                     l15684:
 39375                           
 39376                           ; BSR set to: 0
 39377  004340  0100               	movlb	0	; () banked
 39378  004342  2B6E               	incf	calib_data_set_default_pr@i& (0+255),f,b
 39379  004344  D724               	goto	L33
 39380  004346                     __end_of_calib_data_set_default_pr:
 39381                           	opt stack 0
 39382                           tosu	equ	0xFFF
 39383                           tosh	equ	0xFFE
 39384                           tosl	equ	0xFFD
 39385                           pclath	equ	0xFFA
 39386                           tblptru	equ	0xFF8
 39387                           tblptrh	equ	0xFF7
 39388                           tblptrl	equ	0xFF6
 39389                           tablat	equ	0xFF5
 39390                           prodh	equ	0xFF4
 39391                           prodl	equ	0xFF3
 39392                           intcon	equ	0xFF2
 39393                           indf0	equ	0xFEF
 39394                           postinc0	equ	0xFEE
 39395                           fsr0h	equ	0xFEA
 39396                           fsr0l	equ	0xFE9
 39397                           wreg	equ	0xFE8
 39398                           indf1	equ	0xFE7
 39399                           postinc1	equ	0xFE6
 39400                           postdec1	equ	0xFE5
 39401                           plusw1	equ	0xFE3
 39402                           fsr1h	equ	0xFE2
 39403                           fsr1l	equ	0xFE1
 39404                           indf2	equ	0xFDF
 39405                           postinc2	equ	0xFDE
 39406                           postdec2	equ	0xFDD
 39407                           plusw2	equ	0xFDB
 39408                           fsr2h	equ	0xFDA
 39409                           fsr2l	equ	0xFD9
 39410                           status	equ	0xFD8
 39411                           
 39412 ;; *************** function _calib_data_init_diff_pr *****************
 39413 ;; Defined at:
 39414 ;;		line 257 in file "src/api/data.c"
 39415 ;; Parameters:    Size  Location     Type
 39416 ;;		None
 39417 ;; Auto vars:     Size  Location     Type
 39418 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 39419 ;;		 -> diff_prCalibTabDef(162), 
 39420 ;;  t16             2   23[BANK0 ] unsigned int 
 39421 ;;  ret             1   22[BANK0 ] unsigned char 
 39422 ;; Return value:  Size  Location     Type
 39423 ;;                  1    wreg      unsigned char 
 39424 ;; Registers used:
 39425 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39426 ;; Tracked objects:
 39427 ;;		On entry : 0/0
 39428 ;;		On exit  : 0/0
 39429 ;;		Unchanged: 0/0
 39430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39432 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39434 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39435 ;;Total ram usage:        5 bytes
 39436 ;; Hardware stack levels used:    1
 39437 ;; Hardware stack levels required when called:    9
 39438 ;; This function calls:
 39439 ;;		_at24c02_init
 39440 ;;		_at24c02_read_n_byte
 39441 ;;		_at24c02_write_n_byte
 39442 ;;		_calib_data_set_default_diff_pr
 39443 ;;		_crc_append
 39444 ;;		_crc_verify
 39445 ;; This function is called by:
 39446 ;;		_data_init_all
 39447 ;; This function uses a non-reentrant model
 39448 ;;
 39449                           
 39450                           	psect	text198
 39451  00580A                     __ptext198:
 39452                           	opt stack 0
 39453  00580A                     _calib_data_init_diff_pr:
 39454                           	opt stack 20
 39455                           
 39456                           ;data.c: 259: uint8_t ret=0;
 39457                           
 39458                           ; BSR set to: 0
 39459                           ;incstack = 0
 39460  00580A  0E00               	movlw	0
 39461  00580C  0100               	movlb	0	; () banked
 39462  00580E  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 39463                           
 39464                           ; BSR set to: 0
 39465                           ;data.c: 260: uint16_t t16;
 39466                           ;data.c: 261: uint8_t* buf=(uint8_t*)(&diff_prCalibTabDef);
 39467  005810  0E10               	movlw	low _diff_prCalibTabDef
 39468  005812  0100               	movlb	0	; () banked
 39469  005814  6F79               	movwf	calib_data_init_diff_pr@buf& (0+255),b
 39470  005816  0E03               	movlw	high _diff_prCalibTabDef
 39471  005818  0100               	movlb	0	; () banked
 39472  00581A  6F7A               	movwf	(calib_data_init_diff_pr@buf+1)& (0+255),b
 39473                           
 39474                           ; BSR set to: 0
 39475                           ;data.c: 263: pdiff_prEepromObj= &at24c02Ch1;
 39476  00581C  0E8D               	movlw	low _at24c02Ch1
 39477  00581E  6E29               	movwf	_pdiff_prEepromObj,c
 39478  005820  0E01               	movlw	high _at24c02Ch1
 39479  005822  6E2A               	movwf	_pdiff_prEepromObj+1,c
 39480                           
 39481                           ; BSR set to: 0
 39482                           ;data.c: 264: at24c02_init(pdiff_prEepromObj,0xaa);
 39483  005824  C029  F060         	movff	_pdiff_prEepromObj,at24c02_init@pAt24c02
 39484  005828  C02A  F061         	movff	_pdiff_prEepromObj+1,at24c02_init@pAt24c02+1
 39485  00582C  0EAA               	movlw	170
 39486  00582E  0100               	movlb	0	; () banked
 39487  005830  6F62               	movwf	at24c02_init@slv& (0+255),b
 39488  005832  ECA8  F042         	call	_at24c02_init	;wreg free
 39489                           
 39490                           ;data.c: 265: t16=sizeof(diff_prCalibTabDef);
 39491  005836  0E00               	movlw	0
 39492  005838  0100               	movlb	0	; () banked
 39493  00583A  6F78               	movwf	(calib_data_init_diff_pr@t16+1)& (0+255),b
 39494  00583C  0EA2               	movlw	162
 39495  00583E  6F77               	movwf	calib_data_init_diff_pr@t16& (0+255),b
 39496                           
 39497                           ; BSR set to: 0
 39498                           ;data.c: 266: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 39499  005840  C029  F068         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 39500  005844  C02A  F069         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 39501  005848  0E00               	movlw	0
 39502  00584A  0100               	movlb	0	; () banked
 39503  00584C  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 39504  00584E  C079  F06B         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 39505  005852  C07A  F06C         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 39506  005856  C077  F06D         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 39507  00585A  C078  F06E         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 39508  00585E  EC81  F022         	call	_at24c02_read_n_byte	;wreg free
 39509                           
 39510                           ;data.c: 267: ret=crc_verify(buf,t16);
 39511  005862  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 39512  005866  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 39513  00586A  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 39514  00586E  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 39515  005872  EC21  F041         	call	_crc_verify	;wreg free
 39516  005876  0100               	movlb	0	; () banked
 39517  005878  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 39518                           
 39519                           ; BSR set to: 0
 39520                           ;data.c: 268: if(!ret){
 39521  00587A  0100               	movlb	0	; () banked
 39522  00587C  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 39523  00587E  0100               	movlb	0	; () banked
 39524  005880  A4D8               	btfss	status,2,c
 39525  005882  0012               	return	
 39526                           
 39527                           ; BSR set to: 0
 39528                           ;data.c: 269: calib_data_set_default_diff_pr();
 39529  005884  EC17  F01D         	call	_calib_data_set_default_diff_pr	;wreg free
 39530                           
 39531                           ;data.c: 270: crc_append(buf,t16-2);
 39532  005888  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 39533  00588C  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 39534  005890  0EFE               	movlw	254
 39535  005892  0100               	movlb	0	; () banked
 39536  005894  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 39537  005896  0100               	movlb	0	; () banked
 39538  005898  6F6E               	movwf	crc_append@n& (0+255),b
 39539  00589A  0EFF               	movlw	255
 39540  00589C  0100               	movlb	0	; () banked
 39541  00589E  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 39542  0058A0  0100               	movlb	0	; () banked
 39543  0058A2  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 39544  0058A4  EC65  F047         	call	_crc_append	;wreg free
 39545                           
 39546                           ;data.c: 271: at24c02_write_n_byte(pdiff_prEepromObj,0,buf,t16);
 39547  0058A8  C029  F066         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 39548  0058AC  C02A  F067         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 39549  0058B0  0E00               	movlw	0
 39550  0058B2  0100               	movlb	0	; () banked
 39551  0058B4  6F68               	movwf	at24c02_write_n_byte@addr& (0+255),b
 39552  0058B6  C079  F069         	movff	calib_data_init_diff_pr@buf,at24c02_write_n_byte@buf
 39553  0058BA  C07A  F06A         	movff	calib_data_init_diff_pr@buf+1,at24c02_write_n_byte@buf+1
 39554  0058BE  C077  F06B         	movff	calib_data_init_diff_pr@t16,at24c02_write_n_byte@len
 39555  0058C2  C078  F06C         	movff	calib_data_init_diff_pr@t16+1,at24c02_write_n_byte@len+1
 39556  0058C6  ECB8  F02D         	call	_at24c02_write_n_byte	;wreg free
 39557                           
 39558                           ;data.c: 272: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 39559  0058CA  C029  F068         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 39560  0058CE  C02A  F069         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 39561  0058D2  0E00               	movlw	0
 39562  0058D4  0100               	movlb	0	; () banked
 39563  0058D6  6F6A               	movwf	at24c02_read_n_byte@addr& (0+255),b
 39564  0058D8  C079  F06B         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 39565  0058DC  C07A  F06C         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 39566  0058E0  C077  F06D         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 39567  0058E4  C078  F06E         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 39568  0058E8  EC81  F022         	call	_at24c02_read_n_byte	;wreg free
 39569                           
 39570                           ;data.c: 273: ret=crc_verify(buf,t16);
 39571  0058EC  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 39572  0058F0  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 39573  0058F4  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 39574  0058F8  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 39575  0058FC  EC21  F041         	call	_crc_verify	;wreg free
 39576  005900  0100               	movlb	0	; () banked
 39577  005902  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 39578                           
 39579                           ; BSR set to: 0
 39580                           ;data.c: 274: if(!ret){
 39581  005904  0100               	movlb	0	; () banked
 39582  005906  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 39583  005908  0100               	movlb	0	; () banked
 39584  00590A  A4D8               	btfss	status,2,c
 39585  00590C  0012               	return	
 39586                           
 39587                           ; BSR set to: 0
 39588                           ;data.c: 275: calib_data_set_default_diff_pr();
 39589  00590E  EC17  F01D         	call	_calib_data_set_default_diff_pr	;wreg free
 39590                           
 39591                           ;data.c: 276: crc_append(buf,t16-2);
 39592  005912  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 39593  005916  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 39594  00591A  0EFE               	movlw	254
 39595  00591C  0100               	movlb	0	; () banked
 39596  00591E  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 39597  005920  0100               	movlb	0	; () banked
 39598  005922  6F6E               	movwf	crc_append@n& (0+255),b
 39599  005924  0EFF               	movlw	255
 39600  005926  0100               	movlb	0	; () banked
 39601  005928  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 39602  00592A  0100               	movlb	0	; () banked
 39603  00592C  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 39604  00592E  EC65  F047         	call	_crc_append	;wreg free
 39605  005932  0012               	return	
 39606  005934                     __end_of_calib_data_init_diff_pr:
 39607                           	opt stack 0
 39608                           tosu	equ	0xFFF
 39609                           tosh	equ	0xFFE
 39610                           tosl	equ	0xFFD
 39611                           pclath	equ	0xFFA
 39612                           tblptru	equ	0xFF8
 39613                           tblptrh	equ	0xFF7
 39614                           tblptrl	equ	0xFF6
 39615                           tablat	equ	0xFF5
 39616                           prodh	equ	0xFF4
 39617                           prodl	equ	0xFF3
 39618                           intcon	equ	0xFF2
 39619                           indf0	equ	0xFEF
 39620                           postinc0	equ	0xFEE
 39621                           fsr0h	equ	0xFEA
 39622                           fsr0l	equ	0xFE9
 39623                           wreg	equ	0xFE8
 39624                           indf1	equ	0xFE7
 39625                           postinc1	equ	0xFE6
 39626                           postdec1	equ	0xFE5
 39627                           plusw1	equ	0xFE3
 39628                           fsr1h	equ	0xFE2
 39629                           fsr1l	equ	0xFE1
 39630                           indf2	equ	0xFDF
 39631                           postinc2	equ	0xFDE
 39632                           postdec2	equ	0xFDD
 39633                           plusw2	equ	0xFDB
 39634                           fsr2h	equ	0xFDA
 39635                           fsr2l	equ	0xFD9
 39636                           status	equ	0xFD8
 39637                           
 39638 ;; *************** function _crc_verify *****************
 39639 ;; Defined at:
 39640 ;;		line 76 in file "src/depend/crc16.c"
 39641 ;; Parameters:    Size  Location     Type
 39642 ;;  message         2   12[BANK0 ] PTR unsigned char 
 39643 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 39644 ;;  n               2   14[BANK0 ] unsigned int 
 39645 ;; Auto vars:     Size  Location     Type
 39646 ;;  expected        2   20[BANK0 ] unsigned int 
 39647 ;;  crccal          2   18[BANK0 ] unsigned int 
 39648 ;; Return value:  Size  Location     Type
 39649 ;;                  1    wreg      unsigned char 
 39650 ;; Registers used:
 39651 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39652 ;; Tracked objects:
 39653 ;;		On entry : 0/0
 39654 ;;		On exit  : 0/0
 39655 ;;		Unchanged: 0/0
 39656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39658 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39660 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39661 ;;Total ram usage:       10 bytes
 39662 ;; Hardware stack levels used:    1
 39663 ;; Hardware stack levels required when called:    5
 39664 ;; This function calls:
 39665 ;;		_crc_sum
 39666 ;;		_m_mem_cpy_len
 39667 ;; This function is called by:
 39668 ;;		_data_sys_init
 39669 ;;		_calib_data_init_diff_pr
 39670 ;;		_calib_data_init_pr
 39671 ;;		___sys_data_save_write_flash
 39672 ;;		_data_sys_save
 39673 ;; This function uses a non-reentrant model
 39674 ;;
 39675                           
 39676                           	psect	text199
 39677  008242                     __ptext199:
 39678                           	opt stack 0
 39679  008242                     _crc_verify:
 39680                           	opt stack 21
 39681                           
 39682                           ;crc16.c: 78: uint16_t expected,crccal;
 39683                           ;crc16.c: 81: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
 39684                           
 39685                           ;incstack = 0
 39686  008242  0E74               	movlw	low crc_verify@expected
 39687  008244  0100               	movlb	0	; () banked
 39688  008246  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 39689  008248  0E00               	movlw	high crc_verify@expected
 39690  00824A  0100               	movlb	0	; () banked
 39691  00824C  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 39692  00824E  0100               	movlb	0	; () banked
 39693  008250  516E               	movf	crc_verify@n& (0+255),w,b
 39694  008252  0100               	movlb	0	; () banked
 39695  008254  256C               	addwf	crc_verify@message& (0+255),w,b
 39696  008256  0100               	movlb	0	; () banked
 39697  008258  6F70               	movwf	??_crc_verify& (0+255),b
 39698  00825A  0100               	movlb	0	; () banked
 39699  00825C  516F               	movf	(crc_verify@n+1)& (0+255),w,b
 39700  00825E  0100               	movlb	0	; () banked
 39701  008260  216D               	addwfc	(crc_verify@message+1)& (0+255),w,b
 39702  008262  0100               	movlb	0	; () banked
 39703  008264  6F71               	movwf	(??_crc_verify+1)& (0+255),b
 39704  008266  0EFE               	movlw	254
 39705  008268  0100               	movlb	0	; () banked
 39706  00826A  2570               	addwf	??_crc_verify& (0+255),w,b
 39707  00826C  0100               	movlb	0	; () banked
 39708  00826E  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 39709  008270  0EFF               	movlw	255
 39710  008272  0100               	movlb	0	; () banked
 39711  008274  2171               	addwfc	(??_crc_verify+1)& (0+255),w,b
 39712  008276  0100               	movlb	0	; () banked
 39713  008278  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 39714  00827A  0E00               	movlw	0
 39715  00827C  0100               	movlb	0	; () banked
 39716  00827E  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 39717  008280  0E02               	movlw	2
 39718  008282  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 39719  008284  EC97  F04B         	call	_m_mem_cpy_len	;wreg free
 39720                           
 39721                           ;crc16.c: 82: crccal=crc_sum(message,n - 2);
 39722  008288  C06C  F060         	movff	crc_verify@message,crc_sum@puchMsg
 39723  00828C  C06D  F061         	movff	crc_verify@message+1,crc_sum@puchMsg+1
 39724  008290  0EFE               	movlw	254
 39725  008292  0100               	movlb	0	; () banked
 39726  008294  256E               	addwf	crc_verify@n& (0+255),w,b
 39727  008296  0100               	movlb	0	; () banked
 39728  008298  6F62               	movwf	crc_sum@usDataLen& (0+255),b
 39729  00829A  0EFF               	movlw	255
 39730  00829C  0100               	movlb	0	; () banked
 39731  00829E  216F               	addwfc	(crc_verify@n+1)& (0+255),w,b
 39732  0082A0  0100               	movlb	0	; () banked
 39733  0082A2  6F63               	movwf	(crc_sum@usDataLen+1)& (0+255),b
 39734  0082A4  EC65  F03D         	call	_crc_sum	;wreg free
 39735  0082A8  C060  F072         	movff	?_crc_sum,crc_verify@crccal
 39736  0082AC  C061  F073         	movff	?_crc_sum+1,crc_verify@crccal+1
 39737                           
 39738                           ;crc16.c: 83: if(expected!=crccal)return 0;
 39739  0082B0  0100               	movlb	0	; () banked
 39740  0082B2  5172               	movf	crc_verify@crccal& (0+255),w,b
 39741  0082B4  0100               	movlb	0	; () banked
 39742  0082B6  1974               	xorwf	crc_verify@expected& (0+255),w,b
 39743  0082B8  E106               	bnz	u13250
 39744  0082BA  0100               	movlb	0	; () banked
 39745  0082BC  5173               	movf	(crc_verify@crccal+1)& (0+255),w,b
 39746  0082BE  0100               	movlb	0	; () banked
 39747  0082C0  1975               	xorwf	(crc_verify@expected+1)& (0+255),w,b
 39748  0082C2  B4D8               	btfsc	status,2,c
 39749  0082C4  D002               	goto	l14384
 39750  0082C6                     u13250:
 39751                           
 39752                           ; BSR set to: 0
 39753  0082C6  0E00               	movlw	0
 39754                           
 39755                           ; BSR set to: 0
 39756  0082C8  0012               	return	
 39757  0082CA                     l14384:
 39758                           
 39759                           ; BSR set to: 0
 39760                           ;crc16.c: 84: return 1;
 39761  0082CA  0E01               	movlw	1
 39762  0082CC  0012               	return	
 39763  0082CE                     __end_of_crc_verify:
 39764                           	opt stack 0
 39765                           tosu	equ	0xFFF
 39766                           tosh	equ	0xFFE
 39767                           tosl	equ	0xFFD
 39768                           pclath	equ	0xFFA
 39769                           tblptru	equ	0xFF8
 39770                           tblptrh	equ	0xFF7
 39771                           tblptrl	equ	0xFF6
 39772                           tablat	equ	0xFF5
 39773                           prodh	equ	0xFF4
 39774                           prodl	equ	0xFF3
 39775                           intcon	equ	0xFF2
 39776                           indf0	equ	0xFEF
 39777                           postinc0	equ	0xFEE
 39778                           fsr0h	equ	0xFEA
 39779                           fsr0l	equ	0xFE9
 39780                           wreg	equ	0xFE8
 39781                           indf1	equ	0xFE7
 39782                           postinc1	equ	0xFE6
 39783                           postdec1	equ	0xFE5
 39784                           plusw1	equ	0xFE3
 39785                           fsr1h	equ	0xFE2
 39786                           fsr1l	equ	0xFE1
 39787                           indf2	equ	0xFDF
 39788                           postinc2	equ	0xFDE
 39789                           postdec2	equ	0xFDD
 39790                           plusw2	equ	0xFDB
 39791                           fsr2h	equ	0xFDA
 39792                           fsr2l	equ	0xFD9
 39793                           status	equ	0xFD8
 39794                           
 39795 ;; *************** function _m_mem_cpy_len *****************
 39796 ;; Defined at:
 39797 ;;		line 41 in file "src/depend/m_string.c"
 39798 ;; Parameters:    Size  Location     Type
 39799 ;;  d               2    0[BANK0 ] PTR unsigned char 
 39800 ;;		 -> m_flash_test@tmp(16), globleBuffer(256), crc_verify@expected(2), stSysData(240), 
 39801 ;;  s               2    2[BANK0 ] PTR unsigned char 
 39802 ;;		 -> flashTestbuf(65), m_flash_test@tmp(16), stSysData(240), defultSystemData(240), 
 39803 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 39804 ;;  len             2    4[BANK0 ] unsigned int 
 39805 ;; Auto vars:     Size  Location     Type
 39806 ;;		None
 39807 ;; Return value:  Size  Location     Type
 39808 ;;                  1    wreg      void 
 39809 ;; Registers used:
 39810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39811 ;; Tracked objects:
 39812 ;;		On entry : 0/0
 39813 ;;		On exit  : 0/0
 39814 ;;		Unchanged: 0/0
 39815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39816 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39820 ;;Total ram usage:        6 bytes
 39821 ;; Hardware stack levels used:    1
 39822 ;; Hardware stack levels required when called:    4
 39823 ;; This function calls:
 39824 ;;		Nothing
 39825 ;; This function is called by:
 39826 ;;		_data_sys_init
 39827 ;;		_crc_verify
 39828 ;;		_m_flash_write
 39829 ;;		_data_sys_save
 39830 ;;		_m_flash_test
 39831 ;; This function uses a non-reentrant model
 39832 ;;
 39833                           
 39834                           	psect	text200
 39835  00972E                     __ptext200:
 39836                           	opt stack 0
 39837  00972E                     _m_mem_cpy_len:
 39838                           	opt stack 21
 39839                           
 39840                           ;m_string.c: 44: while(len)
 39841                           
 39842                           ; BSR set to: 0
 39843                           ;incstack = 0
 39844  00972E  D01F               	goto	l13954
 39845  009730                     l13946:
 39846                           
 39847                           ;m_string.c: 45: {
 39848                           ;m_string.c: 46: *d++=*s++;
 39849  009730  C062  FFF6         	movff	m_mem_cpy_len@s,tblptrl
 39850  009734  C063  FFF7         	movff	m_mem_cpy_len@s+1,tblptrh
 39851  009738  6AF8               	clrf	tblptru,c
 39852  00973A  C060  FFD9         	movff	m_mem_cpy_len@d,fsr2l
 39853  00973E  C061  FFDA         	movff	m_mem_cpy_len@d+1,fsr2h
 39854  009742  0E0F               	movlw	(high __ramtop+-1)
 39855  009744  64F7               	cpfsgt	tblptrh,c
 39856  009746  D003               	bra	u12817
 39857  009748  0008               	tblrd		*
 39858  00974A  50F5               	movf	tablat,w,c
 39859  00974C  D005               	bra	u12810
 39860  00974E                     u12817:
 39861  00974E  CFF6 FFE9          	movff	tblptrl,fsr0l
 39862  009752  CFF7 FFEA          	movff	tblptrh,fsr0h
 39863  009756  50EF               	movf	indf0,w,c
 39864  009758                     u12810:
 39865  009758  6EDF               	movwf	indf2,c
 39866  00975A  0100               	movlb	0	; () banked
 39867  00975C  4B62               	infsnz	m_mem_cpy_len@s& (0+255),f,b
 39868  00975E  2B63               	incf	(m_mem_cpy_len@s+1)& (0+255),f,b
 39869                           
 39870                           ; BSR set to: 0
 39871  009760  0100               	movlb	0	; () banked
 39872  009762  4B60               	infsnz	m_mem_cpy_len@d& (0+255),f,b
 39873  009764  2B61               	incf	(m_mem_cpy_len@d+1)& (0+255),f,b
 39874                           
 39875                           ; BSR set to: 0
 39876                           ;m_string.c: 47: len--;
 39877  009766  0100               	movlb	0	; () banked
 39878  009768  0764               	decf	m_mem_cpy_len@len& (0+255),f,b
 39879  00976A  A0D8               	btfss	status,0,c
 39880  00976C  0765               	decf	(m_mem_cpy_len@len+1)& (0+255),f,b
 39881  00976E                     l13954:
 39882  00976E  0100               	movlb	0	; () banked
 39883  009770  5164               	movf	m_mem_cpy_len@len& (0+255),w,b
 39884  009772  0100               	movlb	0	; () banked
 39885  009774  1165               	iorwf	(m_mem_cpy_len@len+1)& (0+255),w,b
 39886  009776  B4D8               	btfsc	status,2,c
 39887  009778  0012               	return	
 39888  00977A  D7DA               	goto	l13946
 39889  00977C                     __end_of_m_mem_cpy_len:
 39890                           	opt stack 0
 39891                           tosu	equ	0xFFF
 39892                           tosh	equ	0xFFE
 39893                           tosl	equ	0xFFD
 39894                           pclath	equ	0xFFA
 39895                           tblptru	equ	0xFF8
 39896                           tblptrh	equ	0xFF7
 39897                           tblptrl	equ	0xFF6
 39898                           tablat	equ	0xFF5
 39899                           prodh	equ	0xFF4
 39900                           prodl	equ	0xFF3
 39901                           intcon	equ	0xFF2
 39902                           indf0	equ	0xFEF
 39903                           postinc0	equ	0xFEE
 39904                           fsr0h	equ	0xFEA
 39905                           fsr0l	equ	0xFE9
 39906                           wreg	equ	0xFE8
 39907                           indf1	equ	0xFE7
 39908                           postinc1	equ	0xFE6
 39909                           postdec1	equ	0xFE5
 39910                           plusw1	equ	0xFE3
 39911                           fsr1h	equ	0xFE2
 39912                           fsr1l	equ	0xFE1
 39913                           indf2	equ	0xFDF
 39914                           postinc2	equ	0xFDE
 39915                           postdec2	equ	0xFDD
 39916                           plusw2	equ	0xFDB
 39917                           fsr2h	equ	0xFDA
 39918                           fsr2l	equ	0xFD9
 39919                           status	equ	0xFD8
 39920                           
 39921 ;; *************** function _crc_append *****************
 39922 ;; Defined at:
 39923 ;;		line 86 in file "src/depend/crc16.c"
 39924 ;; Parameters:    Size  Location     Type
 39925 ;;  message         2   12[BANK0 ] PTR unsigned char 
 39926 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 39927 ;;  n               2   14[BANK0 ] unsigned int 
 39928 ;; Auto vars:     Size  Location     Type
 39929 ;;  crc             2   18[BANK0 ] unsigned int 
 39930 ;; Return value:  Size  Location     Type
 39931 ;;                  1    wreg      void 
 39932 ;; Registers used:
 39933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39934 ;; Tracked objects:
 39935 ;;		On entry : 0/0
 39936 ;;		On exit  : 0/0
 39937 ;;		Unchanged: 0/0
 39938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39939 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39941 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39942 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39943 ;;Total ram usage:        8 bytes
 39944 ;; Hardware stack levels used:    1
 39945 ;; Hardware stack levels required when called:    5
 39946 ;; This function calls:
 39947 ;;		_crc_sum
 39948 ;; This function is called by:
 39949 ;;		_data_sys_init
 39950 ;;		_calib_data_init_diff_pr
 39951 ;;		_calib_data_init_pr
 39952 ;;		___sys_data_save_write_flash
 39953 ;;		___set_short_diff_calib
 39954 ;;		___set_short_pr_calib
 39955 ;;		_data_sys_save
 39956 ;; This function uses a non-reentrant model
 39957 ;;
 39958                           
 39959                           	psect	text201
 39960  008ECA                     __ptext201:
 39961                           	opt stack 0
 39962  008ECA                     _crc_append:
 39963                           	opt stack 21
 39964                           
 39965                           ;crc16.c: 88: uint16_t crc;
 39966                           ;crc16.c: 89: crc = crc_sum(message, n);
 39967                           
 39968                           ; BSR set to: 0
 39969                           ;incstack = 0
 39970  008ECA  C06C  F060         	movff	crc_append@message,crc_sum@puchMsg
 39971  008ECE  C06D  F061         	movff	crc_append@message+1,crc_sum@puchMsg+1
 39972  008ED2  C06E  F062         	movff	crc_append@n,crc_sum@usDataLen
 39973  008ED6  C06F  F063         	movff	crc_append@n+1,crc_sum@usDataLen+1
 39974  008EDA  EC65  F03D         	call	_crc_sum	;wreg free
 39975  008EDE  C060  F072         	movff	?_crc_sum,crc_append@crc
 39976  008EE2  C061  F073         	movff	?_crc_sum+1,crc_append@crc+1
 39977                           
 39978                           ;crc16.c: 90: message[n] = (uint8_t)(crc & 0xff);
 39979  008EE6  0100               	movlb	0	; () banked
 39980  008EE8  516E               	movf	crc_append@n& (0+255),w,b
 39981  008EEA  0100               	movlb	0	; () banked
 39982  008EEC  256C               	addwf	crc_append@message& (0+255),w,b
 39983  008EEE  6ED9               	movwf	fsr2l,c
 39984  008EF0  0100               	movlb	0	; () banked
 39985  008EF2  516F               	movf	(crc_append@n+1)& (0+255),w,b
 39986  008EF4  0100               	movlb	0	; () banked
 39987  008EF6  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 39988  008EF8  6EDA               	movwf	fsr2h,c
 39989  008EFA  C072  FFDF         	movff	crc_append@crc,indf2
 39990                           
 39991                           ; BSR set to: 0
 39992                           ;crc16.c: 91: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
 39993  008EFE  0E01               	movlw	1
 39994  008F00  0100               	movlb	0	; () banked
 39995  008F02  256E               	addwf	crc_append@n& (0+255),w,b
 39996  008F04  0100               	movlb	0	; () banked
 39997  008F06  6F70               	movwf	??_crc_append& (0+255),b
 39998  008F08  0E00               	movlw	0
 39999  008F0A  0100               	movlb	0	; () banked
 40000  008F0C  216F               	addwfc	(crc_append@n+1)& (0+255),w,b
 40001  008F0E  0100               	movlb	0	; () banked
 40002  008F10  6F71               	movwf	(??_crc_append+1)& (0+255),b
 40003  008F12  0100               	movlb	0	; () banked
 40004  008F14  5170               	movf	??_crc_append& (0+255),w,b
 40005  008F16  0100               	movlb	0	; () banked
 40006  008F18  256C               	addwf	crc_append@message& (0+255),w,b
 40007  008F1A  6ED9               	movwf	fsr2l,c
 40008  008F1C  0100               	movlb	0	; () banked
 40009  008F1E  5171               	movf	(??_crc_append+1)& (0+255),w,b
 40010  008F20  0100               	movlb	0	; () banked
 40011  008F22  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 40012  008F24  6EDA               	movwf	fsr2h,c
 40013  008F26  0100               	movlb	0	; () banked
 40014  008F28  5173               	movf	(crc_append@crc+1)& (0+255),w,b
 40015  008F2A  6EDF               	movwf	indf2,c
 40016                           
 40017                           ; BSR set to: 0
 40018  008F2C  0012               	return		;funcret
 40019  008F2E                     __end_of_crc_append:
 40020                           	opt stack 0
 40021                           tosu	equ	0xFFF
 40022                           tosh	equ	0xFFE
 40023                           tosl	equ	0xFFD
 40024                           pclath	equ	0xFFA
 40025                           tblptru	equ	0xFF8
 40026                           tblptrh	equ	0xFF7
 40027                           tblptrl	equ	0xFF6
 40028                           tablat	equ	0xFF5
 40029                           prodh	equ	0xFF4
 40030                           prodl	equ	0xFF3
 40031                           intcon	equ	0xFF2
 40032                           indf0	equ	0xFEF
 40033                           postinc0	equ	0xFEE
 40034                           fsr0h	equ	0xFEA
 40035                           fsr0l	equ	0xFE9
 40036                           wreg	equ	0xFE8
 40037                           indf1	equ	0xFE7
 40038                           postinc1	equ	0xFE6
 40039                           postdec1	equ	0xFE5
 40040                           plusw1	equ	0xFE3
 40041                           fsr1h	equ	0xFE2
 40042                           fsr1l	equ	0xFE1
 40043                           indf2	equ	0xFDF
 40044                           postinc2	equ	0xFDE
 40045                           postdec2	equ	0xFDD
 40046                           plusw2	equ	0xFDB
 40047                           fsr2h	equ	0xFDA
 40048                           fsr2l	equ	0xFD9
 40049                           status	equ	0xFD8
 40050                           
 40051 ;; *************** function _crc_sum *****************
 40052 ;; Defined at:
 40053 ;;		line 61 in file "src/depend/crc16.c"
 40054 ;; Parameters:    Size  Location     Type
 40055 ;;  puchMsg         2    0[BANK0 ] PTR unsigned char 
 40056 ;;		 -> stSysData(240), prCalibTabDef(162), diff_prCalibTabDef(162), 
 40057 ;;  usDataLen       2    2[BANK0 ] unsigned int 
 40058 ;; Auto vars:     Size  Location     Type
 40059 ;;  uIndex          2    8[BANK0 ] unsigned int 
 40060 ;;  len             2    6[BANK0 ] unsigned int 
 40061 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
 40062 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
 40063 ;; Return value:  Size  Location     Type
 40064 ;;                  2    0[BANK0 ] unsigned int 
 40065 ;; Registers used:
 40066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40067 ;; Tracked objects:
 40068 ;;		On entry : 0/0
 40069 ;;		On exit  : 0/0
 40070 ;;		Unchanged: 0/0
 40071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40073 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40075 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40076 ;;Total ram usage:       12 bytes
 40077 ;; Hardware stack levels used:    1
 40078 ;; Hardware stack levels required when called:    4
 40079 ;; This function calls:
 40080 ;;		Nothing
 40081 ;; This function is called by:
 40082 ;;		_crc_verify
 40083 ;;		_crc_append
 40084 ;; This function uses a non-reentrant model
 40085 ;;
 40086                           
 40087                           	psect	text202
 40088  007ACA                     __ptext202:
 40089                           	opt stack 0
 40090  007ACA                     _crc_sum:
 40091                           	opt stack 21
 40092                           
 40093                           ;crc16.c: 63: uint16_t len;
 40094                           ;crc16.c: 64: len=usDataLen;
 40095                           
 40096                           ; BSR set to: 0
 40097                           ;incstack = 0
 40098  007ACA  C062  F066         	movff	crc_sum@usDataLen,crc_sum@len
 40099  007ACE  C063  F067         	movff	crc_sum@usDataLen+1,crc_sum@len+1
 40100                           
 40101                           ;crc16.c: 65: uint8_t uchCRCHi = 0xFF ;
 40102  007AD2  0100               	movlb	0	; () banked
 40103  007AD4  696A               	setf	crc_sum@uchCRCHi& (0+255),b
 40104                           
 40105                           ;crc16.c: 66: uint8_t uchCRCLo = 0xFF ;
 40106  007AD6  0100               	movlb	0	; () banked
 40107  007AD8  696B               	setf	crc_sum@uchCRCLo& (0+255),b
 40108                           
 40109                           ;crc16.c: 67: uint16_t uIndex ;
 40110                           ;crc16.c: 68: while (len--)
 40111  007ADA  D028               	goto	l14096
 40112  007ADC                     l14088:
 40113                           
 40114                           ; BSR set to: 0
 40115                           ;crc16.c: 69: {
 40116                           ;crc16.c: 70: uIndex = (uchCRCLo ^ *puchMsg++) ;
 40117  007ADC  C060  FFD9         	movff	crc_sum@puchMsg,fsr2l
 40118  007AE0  C061  FFDA         	movff	crc_sum@puchMsg+1,fsr2h
 40119  007AE4  50DF               	movf	indf2,w,c
 40120  007AE6  0100               	movlb	0	; () banked
 40121  007AE8  196B               	xorwf	crc_sum@uchCRCLo& (0+255),w,b
 40122  007AEA  0100               	movlb	0	; () banked
 40123  007AEC  6F64               	movwf	??_crc_sum& (0+255),b
 40124  007AEE  0100               	movlb	0	; () banked
 40125  007AF0  5164               	movf	??_crc_sum& (0+255),w,b
 40126  007AF2  0100               	movlb	0	; () banked
 40127  007AF4  6F68               	movwf	crc_sum@uIndex& (0+255),b
 40128  007AF6  6B69               	clrf	(crc_sum@uIndex+1)& (0+255),b
 40129                           
 40130                           ; BSR set to: 0
 40131  007AF8  0100               	movlb	0	; () banked
 40132  007AFA  4B60               	infsnz	crc_sum@puchMsg& (0+255),f,b
 40133  007AFC  2B61               	incf	(crc_sum@puchMsg+1)& (0+255),f,b
 40134                           
 40135                           ; BSR set to: 0
 40136                           ;crc16.c: 71: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
 40137  007AFE  0EB7               	movlw	low _auchCRCHi
 40138  007B00  0100               	movlb	0	; () banked
 40139  007B02  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 40140  007B04  6EF6               	movwf	tblptrl,c
 40141  007B06  0EED               	movlw	high _auchCRCHi
 40142  007B08  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 40143  007B0A  6EF7               	movwf	tblptrh,c
 40144  007B0C                     	if	0	;There are less than 3 active tblptr bytes
 40145  007B0C                     	endif
 40146  007B0C  0008               	tblrd		*
 40147  007B0E  50F5               	movf	tablat,w,c
 40148  007B10  0100               	movlb	0	; () banked
 40149  007B12  196A               	xorwf	crc_sum@uchCRCHi& (0+255),w,b
 40150  007B14  0100               	movlb	0	; () banked
 40151  007B16  6F6B               	movwf	crc_sum@uchCRCLo& (0+255),b
 40152                           
 40153                           ; BSR set to: 0
 40154                           ;crc16.c: 72: uchCRCHi = auchCRCLo[uIndex] ;
 40155  007B18  0EB7               	movlw	low _auchCRCLo
 40156  007B1A  0100               	movlb	0	; () banked
 40157  007B1C  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 40158  007B1E  6EF6               	movwf	tblptrl,c
 40159  007B20  0EEC               	movlw	high _auchCRCLo
 40160  007B22  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 40161  007B24  6EF7               	movwf	tblptrh,c
 40162  007B26                     	if	0	;There are less than 3 active tblptr bytes
 40163  007B26                     	endif
 40164  007B26  0008               	tblrd		*
 40165  007B28  CFF5 F06A          	movff	tablat,crc_sum@uchCRCHi
 40166  007B2C                     l14096:
 40167                           
 40168                           ; BSR set to: 0
 40169  007B2C  0100               	movlb	0	; () banked
 40170  007B2E  0766               	decf	crc_sum@len& (0+255),f,b
 40171  007B30  A0D8               	btfss	status,0,c
 40172  007B32  0767               	decf	(crc_sum@len+1)& (0+255),f,b
 40173  007B34  0100               	movlb	0	; () banked
 40174  007B36  2966               	incf	crc_sum@len& (0+255),w,b
 40175  007B38  E1D1               	bnz	l14088
 40176  007B3A  0100               	movlb	0	; () banked
 40177  007B3C  2967               	incf	(crc_sum@len+1)& (0+255),w,b
 40178  007B3E  A4D8               	btfss	status,2,c
 40179  007B40  D7CD               	goto	l14088
 40180                           
 40181                           ; BSR set to: 0
 40182                           ;crc16.c: 73: }
 40183                           ;crc16.c: 74: return (uchCRCHi << 8 | uchCRCLo) ;
 40184                           
 40185                           ; BSR set to: 0
 40186  007B42  0100               	movlb	0	; () banked
 40187  007B44  516B               	movf	crc_sum@uchCRCLo& (0+255),w,b
 40188  007B46  C06A  F064         	movff	crc_sum@uchCRCHi,??_crc_sum
 40189  007B4A  0100               	movlb	0	; () banked
 40190  007B4C  6B65               	clrf	(??_crc_sum+1)& (0+255),b
 40191  007B4E  C064  F065         	movff	??_crc_sum,??_crc_sum+1
 40192  007B52  0100               	movlb	0	; () banked
 40193  007B54  6B64               	clrf	??_crc_sum& (0+255),b
 40194  007B56  0100               	movlb	0	; () banked
 40195  007B58  1164               	iorwf	??_crc_sum& (0+255),w,b
 40196  007B5A  0100               	movlb	0	; () banked
 40197  007B5C  6F60               	movwf	?_crc_sum& (0+255),b
 40198  007B5E  0100               	movlb	0	; () banked
 40199  007B60  5165               	movf	(??_crc_sum+1)& (0+255),w,b
 40200  007B62  0100               	movlb	0	; () banked
 40201  007B64  6F61               	movwf	(?_crc_sum+1)& (0+255),b
 40202  007B66  0012               	return	
 40203  007B68                     __end_of_crc_sum:
 40204                           	opt stack 0
 40205                           tosu	equ	0xFFF
 40206                           tosh	equ	0xFFE
 40207                           tosl	equ	0xFFD
 40208                           pclath	equ	0xFFA
 40209                           tblptru	equ	0xFF8
 40210                           tblptrh	equ	0xFF7
 40211                           tblptrl	equ	0xFF6
 40212                           tablat	equ	0xFF5
 40213                           prodh	equ	0xFF4
 40214                           prodl	equ	0xFF3
 40215                           intcon	equ	0xFF2
 40216                           indf0	equ	0xFEF
 40217                           postinc0	equ	0xFEE
 40218                           fsr0h	equ	0xFEA
 40219                           fsr0l	equ	0xFE9
 40220                           wreg	equ	0xFE8
 40221                           indf1	equ	0xFE7
 40222                           postinc1	equ	0xFE6
 40223                           postdec1	equ	0xFE5
 40224                           plusw1	equ	0xFE3
 40225                           fsr1h	equ	0xFE2
 40226                           fsr1l	equ	0xFE1
 40227                           indf2	equ	0xFDF
 40228                           postinc2	equ	0xFDE
 40229                           postdec2	equ	0xFDD
 40230                           plusw2	equ	0xFDB
 40231                           fsr2h	equ	0xFDA
 40232                           fsr2l	equ	0xFD9
 40233                           status	equ	0xFD8
 40234                           
 40235 ;; *************** function _calib_data_set_default_diff_pr *****************
 40236 ;; Defined at:
 40237 ;;		line 227 in file "src/api/data.c"
 40238 ;; Parameters:    Size  Location     Type
 40239 ;;		None
 40240 ;; Auto vars:     Size  Location     Type
 40241 ;;  i               1   15[BANK0 ] unsigned char 
 40242 ;;  j               1   14[BANK0 ] unsigned char 
 40243 ;; Return value:  Size  Location     Type
 40244 ;;                  1    wreg      void 
 40245 ;; Registers used:
 40246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40247 ;; Tracked objects:
 40248 ;;		On entry : 0/0
 40249 ;;		On exit  : 0/0
 40250 ;;		Unchanged: 0/0
 40251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40254 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40255 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40256 ;;Total ram usage:        8 bytes
 40257 ;; Hardware stack levels used:    1
 40258 ;; Hardware stack levels required when called:    5
 40259 ;; This function calls:
 40260 ;;		___wmul
 40261 ;; This function is called by:
 40262 ;;		_calib_data_init_diff_pr
 40263 ;; This function uses a non-reentrant model
 40264 ;;
 40265                           
 40266                           	psect	text203
 40267  003A2E                     __ptext203:
 40268                           	opt stack 0
 40269  003A2E                     _calib_data_set_default_diff_pr:
 40270                           	opt stack 23
 40271                           
 40272                           ;data.c: 229: uint8_t i,j;
 40273                           ;data.c: 230: diff_prCalibTabDef.rowCount=3;
 40274                           
 40275                           ; BSR set to: 0
 40276                           ;incstack = 0
 40277  003A2E  0E03               	movlw	3
 40278  003A30  0103               	movlb	3	; () banked
 40279  003A32  6F10               	movwf	_diff_prCalibTabDef& (0+255),b
 40280                           
 40281                           ;data.c: 231: for(i=0;i<3;i++){
 40282  003A34  0E00               	movlw	0
 40283  003A36  0100               	movlb	0	; () banked
 40284  003A38  6F6F               	movwf	calib_data_set_default_diff_pr@i& (0+255),b
 40285  003A3A                     l15642:
 40286                           
 40287                           ; BSR set to: 0
 40288  003A3A  0E02               	movlw	2
 40289  003A3C  0100               	movlb	0	; () banked
 40290  003A3E  656F               	cpfsgt	calib_data_set_default_diff_pr@i& (0+255),b
 40291  003A40  D001               	goto	l15646
 40292  003A42  0012               	return	
 40293  003A44                     l15646:
 40294                           
 40295                           ; BSR set to: 0
 40296                           ;data.c: 232: diff_prCalibTabDef.prCalibRow[i].pCount=6;
 40297  003A44  0100               	movlb	0	; () banked
 40298  003A46  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40299  003A48  0D34               	mullw	52
 40300  003A4A  0E14               	movlw	low (_diff_prCalibTabDef+4)
 40301  003A4C  24F3               	addwf	prodl,w,c
 40302  003A4E  6ED9               	movwf	fsr2l,c
 40303  003A50  0E03               	movlw	high (_diff_prCalibTabDef+4)
 40304  003A52  20F4               	addwfc	prodh,w,c
 40305  003A54  6EDA               	movwf	fsr2h,c
 40306  003A56  0E06               	movlw	6
 40307  003A58  6EDF               	movwf	indf2,c
 40308                           
 40309                           ; BSR set to: 0
 40310                           ;data.c: 233: for(j=0;j<6;j++){
 40311  003A5A  0E00               	movlw	0
 40312  003A5C  0100               	movlb	0	; () banked
 40313  003A5E  6F6E               	movwf	calib_data_set_default_diff_pr@j& (0+255),b
 40314  003A60                     l15650:
 40315                           
 40316                           ; BSR set to: 0
 40317  003A60  0E05               	movlw	5
 40318  003A62  0100               	movlb	0	; () banked
 40319  003A64  656E               	cpfsgt	calib_data_set_default_diff_pr@j& (0+255),b
 40320  003A66  D001               	goto	l15654
 40321  003A68  D0CE               	goto	l15660
 40322  003A6A                     l15654:
 40323                           
 40324                           ; BSR set to: 0
 40325                           ;data.c: 234: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 40326  003A6A  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 40327  003A6E  0100               	movlb	0	; () banked
 40328  003A70  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40329  003A72  0E17               	movlw	23
 40330  003A74  0100               	movlb	0	; () banked
 40331  003A76  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40332  003A78  0E70               	movlw	112
 40333  003A7A  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40334  003A7C  EC00  F04E         	call	___wmul	;wreg free
 40335  003A80  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 40336  003A84  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 40337  003A88  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 40338  003A8C  0100               	movlb	0	; () banked
 40339  003A8E  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40340  003A90  0E01               	movlw	1
 40341  003A92  0100               	movlb	0	; () banked
 40342  003A94  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40343  003A96  0EF4               	movlw	244
 40344  003A98  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40345  003A9A  EC00  F04E         	call	___wmul	;wreg free
 40346  003A9E  0100               	movlb	0	; () banked
 40347  003AA0  5162               	movf	?___wmul& (0+255),w,b
 40348  003AA2  0100               	movlb	0	; () banked
 40349  003AA4  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40350  003AA6  0100               	movlb	0	; () banked
 40351  003AA8  5163               	movf	(?___wmul+1)& (0+255),w,b
 40352  003AAA  0100               	movlb	0	; () banked
 40353  003AAC  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40354  003AAE  0100               	movlb	0	; () banked
 40355  003AB0  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 40356  003AB2  0D08               	mullw	8
 40357  003AB4  0E04               	movlw	4
 40358  003AB6  26F3               	addwf	prodl,f,c
 40359  003AB8  0E00               	movlw	0
 40360  003ABA  22F4               	addwfc	prodh,f,c
 40361  003ABC  0E10               	movlw	low _diff_prCalibTabDef
 40362  003ABE  0100               	movlb	0	; () banked
 40363  003AC0  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 40364  003AC2  0E03               	movlw	high _diff_prCalibTabDef
 40365  003AC4  0100               	movlb	0	; () banked
 40366  003AC6  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 40367  003AC8  0E04               	movlw	4
 40368  003ACA  0100               	movlb	0	; () banked
 40369  003ACC  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 40370  003ACE  0E00               	movlw	0
 40371  003AD0  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 40372  003AD2  50F3               	movf	prodl,w,c
 40373  003AD4  0100               	movlb	0	; () banked
 40374  003AD6  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 40375  003AD8  50F4               	movf	prodh,w,c
 40376  003ADA  0100               	movlb	0	; () banked
 40377  003ADC  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 40378  003ADE  0100               	movlb	0	; () banked
 40379  003AE0  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40380  003AE2  0D34               	mullw	52
 40381  003AE4  50F3               	movf	prodl,w,c
 40382  003AE6  0100               	movlb	0	; () banked
 40383  003AE8  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 40384  003AEA  50F4               	movf	prodh,w,c
 40385  003AEC  0100               	movlb	0	; () banked
 40386  003AEE  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 40387  003AF0  0E04               	movlw	4
 40388  003AF2  0100               	movlb	0	; () banked
 40389  003AF4  256A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),w,b
 40390  003AF6  6ED9               	movwf	fsr2l,c
 40391  003AF8  0E00               	movlw	0
 40392  003AFA  0100               	movlb	0	; () banked
 40393  003AFC  216B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),w,b
 40394  003AFE  6EDA               	movwf	fsr2h,c
 40395  003B00  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 40396  003B04  C069  FFDD         	movff	??_calib_data_set_default_diff_pr+1,postdec2
 40397                           
 40398                           ;data.c: 235: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 40399  003B08  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 40400  003B0C  0100               	movlb	0	; () banked
 40401  003B0E  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40402  003B10  0E17               	movlw	23
 40403  003B12  0100               	movlb	0	; () banked
 40404  003B14  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40405  003B16  0E70               	movlw	112
 40406  003B18  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40407  003B1A  EC00  F04E         	call	___wmul	;wreg free
 40408  003B1E  0100               	movlb	0	; () banked
 40409  003B20  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 40410  003B24  0100               	movlb	0	; () banked
 40411  003B26  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 40412  003B2A  0E00               	movlw	0
 40413  003B2C  0100               	movlb	0	; () banked
 40414  003B2E  BF69               	btfsc	(??_calib_data_set_default_diff_pr+1)& (0+255),7,b
 40415  003B30  0EFF               	movlw	255
 40416  003B32  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 40417  003B34  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 40418  003B36  0100               	movlb	0	; () banked
 40419  003B38  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 40420  003B3A  0D08               	mullw	8
 40421  003B3C  0E04               	movlw	4
 40422  003B3E  26F3               	addwf	prodl,f,c
 40423  003B40  0E00               	movlw	0
 40424  003B42  22F4               	addwfc	prodh,f,c
 40425  003B44  0E10               	movlw	low _diff_prCalibTabDef
 40426  003B46  0100               	movlb	0	; () banked
 40427  003B48  6F6C               	movwf	(??_calib_data_set_default_diff_pr+4)& (0+255),b
 40428  003B4A  0E03               	movlw	high _diff_prCalibTabDef
 40429  003B4C  0100               	movlb	0	; () banked
 40430  003B4E  6F6D               	movwf	(??_calib_data_set_default_diff_pr+5)& (0+255),b
 40431  003B50  0E04               	movlw	4
 40432  003B52  0100               	movlb	0	; () banked
 40433  003B54  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 40434  003B56  0E00               	movlw	0
 40435  003B58  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 40436  003B5A  50F3               	movf	prodl,w,c
 40437  003B5C  0100               	movlb	0	; () banked
 40438  003B5E  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 40439  003B60  50F4               	movf	prodh,w,c
 40440  003B62  0100               	movlb	0	; () banked
 40441  003B64  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 40442  003B66  0100               	movlb	0	; () banked
 40443  003B68  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40444  003B6A  0D34               	mullw	52
 40445  003B6C  50F3               	movf	prodl,w,c
 40446  003B6E  0100               	movlb	0	; () banked
 40447  003B70  256C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),w,b
 40448  003B72  6ED9               	movwf	fsr2l,c
 40449  003B74  50F4               	movf	prodh,w,c
 40450  003B76  0100               	movlb	0	; () banked
 40451  003B78  216D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),w,b
 40452  003B7A  6EDA               	movwf	fsr2h,c
 40453  003B7C  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 40454  003B80  C069  FFDE         	movff	??_calib_data_set_default_diff_pr+1,postinc2
 40455  003B84  C06A  FFDE         	movff	??_calib_data_set_default_diff_pr+2,postinc2
 40456  003B88  C06B  FFDE         	movff	??_calib_data_set_default_diff_pr+3,postinc2
 40457                           
 40458                           ;data.c: 236: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=i*1000;
 40459  003B8C  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 40460  003B90  0100               	movlb	0	; () banked
 40461  003B92  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 40462  003B94  0E03               	movlw	3
 40463  003B96  0100               	movlb	0	; () banked
 40464  003B98  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 40465  003B9A  0EE8               	movlw	232
 40466  003B9C  6F64               	movwf	___wmul@multiplicand& (0+255),b
 40467  003B9E  EC00  F04E         	call	___wmul	;wreg free
 40468  003BA2  0100               	movlb	0	; () banked
 40469  003BA4  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 40470  003BA6  0D08               	mullw	8
 40471  003BA8  0E04               	movlw	4
 40472  003BAA  26F3               	addwf	prodl,f,c
 40473  003BAC  0E00               	movlw	0
 40474  003BAE  22F4               	addwfc	prodh,f,c
 40475  003BB0  0E10               	movlw	low _diff_prCalibTabDef
 40476  003BB2  0100               	movlb	0	; () banked
 40477  003BB4  6F68               	movwf	??_calib_data_set_default_diff_pr& (0+255),b
 40478  003BB6  0E03               	movlw	high _diff_prCalibTabDef
 40479  003BB8  0100               	movlb	0	; () banked
 40480  003BBA  6F69               	movwf	(??_calib_data_set_default_diff_pr+1)& (0+255),b
 40481  003BBC  0E04               	movlw	4
 40482  003BBE  0100               	movlb	0	; () banked
 40483  003BC0  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40484  003BC2  0E00               	movlw	0
 40485  003BC4  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40486  003BC6  50F3               	movf	prodl,w,c
 40487  003BC8  0100               	movlb	0	; () banked
 40488  003BCA  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40489  003BCC  50F4               	movf	prodh,w,c
 40490  003BCE  0100               	movlb	0	; () banked
 40491  003BD0  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40492  003BD2  0100               	movlb	0	; () banked
 40493  003BD4  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 40494  003BD6  0D34               	mullw	52
 40495  003BD8  50F3               	movf	prodl,w,c
 40496  003BDA  0100               	movlb	0	; () banked
 40497  003BDC  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 40498  003BDE  50F4               	movf	prodh,w,c
 40499  003BE0  0100               	movlb	0	; () banked
 40500  003BE2  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 40501  003BE4  0E06               	movlw	6
 40502  003BE6  0100               	movlb	0	; () banked
 40503  003BE8  2568               	addwf	??_calib_data_set_default_diff_pr& (0+255),w,b
 40504  003BEA  6ED9               	movwf	fsr2l,c
 40505  003BEC  0E00               	movlw	0
 40506  003BEE  0100               	movlb	0	; () banked
 40507  003BF0  2169               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),w,b
 40508  003BF2  6EDA               	movwf	fsr2h,c
 40509  003BF4  0100               	movlb	0	; () banked
 40510  003BF6  C062  FFDE         	movff	?___wmul,postinc2
 40511  003BFA  0100               	movlb	0	; () banked
 40512  003BFC  C063  FFDD         	movff	?___wmul+1,postdec2
 40513                           
 40514                           ; BSR set to: 0
 40515  003C00  0100               	movlb	0	; () banked
 40516  003C02  2B6E               	incf	calib_data_set_default_diff_pr@j& (0+255),f,b
 40517  003C04  D72D               	goto	l15650
 40518  003C06                     l15660:
 40519                           
 40520                           ; BSR set to: 0
 40521  003C06  0100               	movlb	0	; () banked
 40522  003C08  2B6F               	incf	calib_data_set_default_diff_pr@i& (0+255),f,b
 40523  003C0A  D717               	goto	l15642
 40524  003C0C                     __end_of_calib_data_set_default_diff_pr:
 40525                           	opt stack 0
 40526                           tosu	equ	0xFFF
 40527                           tosh	equ	0xFFE
 40528                           tosl	equ	0xFFD
 40529                           pclath	equ	0xFFA
 40530                           tblptru	equ	0xFF8
 40531                           tblptrh	equ	0xFF7
 40532                           tblptrl	equ	0xFF6
 40533                           tablat	equ	0xFF5
 40534                           prodh	equ	0xFF4
 40535                           prodl	equ	0xFF3
 40536                           intcon	equ	0xFF2
 40537                           indf0	equ	0xFEF
 40538                           postinc0	equ	0xFEE
 40539                           fsr0h	equ	0xFEA
 40540                           fsr0l	equ	0xFE9
 40541                           wreg	equ	0xFE8
 40542                           indf1	equ	0xFE7
 40543                           postinc1	equ	0xFE6
 40544                           postdec1	equ	0xFE5
 40545                           plusw1	equ	0xFE3
 40546                           fsr1h	equ	0xFE2
 40547                           fsr1l	equ	0xFE1
 40548                           indf2	equ	0xFDF
 40549                           postinc2	equ	0xFDE
 40550                           postdec2	equ	0xFDD
 40551                           plusw2	equ	0xFDB
 40552                           fsr2h	equ	0xFDA
 40553                           fsr2l	equ	0xFD9
 40554                           status	equ	0xFD8
 40555                           
 40556 ;; *************** function ___wmul *****************
 40557 ;; Defined at:
 40558 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 40559 ;; Parameters:    Size  Location     Type
 40560 ;;  multiplier      2    2[BANK0 ] unsigned int 
 40561 ;;  multiplicand    2    4[BANK0 ] unsigned int 
 40562 ;; Auto vars:     Size  Location     Type
 40563 ;;  product         2    6[BANK0 ] unsigned int 
 40564 ;; Return value:  Size  Location     Type
 40565 ;;                  2    2[BANK0 ] unsigned int 
 40566 ;; Registers used:
 40567 ;;		wreg, status,2, status,0, prodl, prodh
 40568 ;; Tracked objects:
 40569 ;;		On entry : 0/0
 40570 ;;		On exit  : 0/0
 40571 ;;		Unchanged: 0/0
 40572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40576 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40577 ;;Total ram usage:        6 bytes
 40578 ;; Hardware stack levels used:    1
 40579 ;; Hardware stack levels required when called:    4
 40580 ;; This function calls:
 40581 ;;		Nothing
 40582 ;; This function is called by:
 40583 ;;		_calib_data_set_default_diff_pr
 40584 ;;		_calib_data_set_default_pr
 40585 ;;		_key_adj_value_fixed
 40586 ;; This function uses a non-reentrant model
 40587 ;;
 40588                           
 40589                           	psect	text204
 40590  009C00                     __ptext204:
 40591                           	opt stack 0
 40592  009C00                     ___wmul:
 40593                           	opt stack 21
 40594                           
 40595                           ; BSR set to: 0
 40596                           ;incstack = 0
 40597  009C00  0100               	movlb	0	; () banked
 40598  009C02  5162               	movf	___wmul@multiplier& (0+255),w,b
 40599  009C04  0100               	movlb	0	; () banked
 40600  009C06  0364               	mulwf	___wmul@multiplicand& (0+255),b
 40601  009C08  CFF3 F066          	movff	prodl,___wmul@product
 40602  009C0C  CFF4 F067          	movff	prodh,___wmul@product+1
 40603  009C10  0100               	movlb	0	; () banked
 40604  009C12  5162               	movf	___wmul@multiplier& (0+255),w,b
 40605  009C14  0100               	movlb	0	; () banked
 40606  009C16  0365               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 40607  009C18  50F3               	movf	prodl,w,c
 40608  009C1A  0100               	movlb	0	; () banked
 40609  009C1C  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 40610  009C1E  0100               	movlb	0	; () banked
 40611  009C20  5163               	movf	(___wmul@multiplier+1)& (0+255),w,b
 40612  009C22  0100               	movlb	0	; () banked
 40613  009C24  0364               	mulwf	___wmul@multiplicand& (0+255),b
 40614  009C26  50F3               	movf	prodl,w,c
 40615  009C28  0100               	movlb	0	; () banked
 40616  009C2A  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 40617                           
 40618                           ; BSR set to: 0
 40619  009C2C  C066  F062         	movff	___wmul@product,?___wmul
 40620  009C30  C067  F063         	movff	___wmul@product+1,?___wmul+1
 40621  009C34  0012               	return	
 40622  009C36                     __end_of___wmul:
 40623                           	opt stack 0
 40624                           tosu	equ	0xFFF
 40625                           tosh	equ	0xFFE
 40626                           tosl	equ	0xFFD
 40627                           pclath	equ	0xFFA
 40628                           tblptru	equ	0xFF8
 40629                           tblptrh	equ	0xFF7
 40630                           tblptrl	equ	0xFF6
 40631                           tablat	equ	0xFF5
 40632                           prodh	equ	0xFF4
 40633                           prodl	equ	0xFF3
 40634                           intcon	equ	0xFF2
 40635                           indf0	equ	0xFEF
 40636                           postinc0	equ	0xFEE
 40637                           fsr0h	equ	0xFEA
 40638                           fsr0l	equ	0xFE9
 40639                           wreg	equ	0xFE8
 40640                           indf1	equ	0xFE7
 40641                           postinc1	equ	0xFE6
 40642                           postdec1	equ	0xFE5
 40643                           plusw1	equ	0xFE3
 40644                           fsr1h	equ	0xFE2
 40645                           fsr1l	equ	0xFE1
 40646                           indf2	equ	0xFDF
 40647                           postinc2	equ	0xFDE
 40648                           postdec2	equ	0xFDD
 40649                           plusw2	equ	0xFDB
 40650                           fsr2h	equ	0xFDA
 40651                           fsr2l	equ	0xFD9
 40652                           status	equ	0xFD8
 40653                           
 40654 ;; *************** function _at24c02_write_n_byte *****************
 40655 ;; Defined at:
 40656 ;;		line 70 in file "src/driver/ex_eeprom.c"
 40657 ;; Parameters:    Size  Location     Type
 40658 ;;  pAt24c02        2    6[BANK0 ] PTR struct .
 40659 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 40660 ;;  addr            1    8[BANK0 ] unsigned char 
 40661 ;;  buf             2    9[BANK0 ] PTR unsigned char 
 40662 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 40663 ;;  len             2   11[BANK0 ] unsigned int 
 40664 ;; Auto vars:     Size  Location     Type
 40665 ;;  i               2   13[BANK0 ] unsigned int 
 40666 ;; Return value:  Size  Location     Type
 40667 ;;                  1    wreg      void 
 40668 ;; Registers used:
 40669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 40670 ;; Tracked objects:
 40671 ;;		On entry : 0/0
 40672 ;;		On exit  : 0/0
 40673 ;;		Unchanged: 0/0
 40674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40675 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40678 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40679 ;;Total ram usage:        9 bytes
 40680 ;; Hardware stack levels used:    1
 40681 ;; Hardware stack levels required when called:    8
 40682 ;; This function calls:
 40683 ;;		_delay_ms
 40684 ;;		_iic_send_byte
 40685 ;;		_iic_start
 40686 ;;		_iic_stop
 40687 ;; This function is called by:
 40688 ;;		_calib_data_init_diff_pr
 40689 ;;		_calib_data_init_pr
 40690 ;;		___set_short_diff_calib
 40691 ;;		___set_short_pr_calib
 40692 ;; This function uses a non-reentrant model
 40693 ;;
 40694                           
 40695                           	psect	text205
 40696  005B70                     __ptext205:
 40697                           	opt stack 0
 40698  005B70                     _at24c02_write_n_byte:
 40699                           	opt stack 19
 40700                           
 40701                           ;ex_eeprom.c: 72: uint16_t i;
 40702                           ;ex_eeprom.c: 73: for(i=0;i<len;i++){
 40703                           
 40704                           ; BSR set to: 0
 40705                           ;incstack = 0
 40706  005B70  0E00               	movlw	0
 40707  005B72  0100               	movlb	0	; () banked
 40708  005B74  6F6E               	movwf	(at24c02_write_n_byte@i+1)& (0+255),b
 40709  005B76  0E00               	movlw	0
 40710  005B78  6F6D               	movwf	at24c02_write_n_byte@i& (0+255),b
 40711  005B7A  D07A               	goto	l15018
 40712  005B7C                     l15006:
 40713                           
 40714                           ; BSR set to: 0
 40715                           ;ex_eeprom.c: 74: pAt24c02->iic_start();
 40716  005B7C  0100               	movlb	0	; () banked
 40717  005B7E  EE20 F001          	lfsr	2,1
 40718  005B82  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40719  005B84  26D9               	addwf	fsr2l,f,c
 40720  005B86  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40721  005B88  22DA               	addwfc	fsr2h,f,c
 40722  005B8A  D801               	call	u14088
 40723  005B8C  D00A               	goto	u14089
 40724  005B8E                     u14088:
 40725  005B8E  0005               	push	
 40726  005B90  6EFA               	movwf	pclath,c
 40727  005B92  50DE               	movf	postinc2,w,c
 40728  005B94  6EFD               	movwf	tosl,c
 40729  005B96  50DE               	movf	postinc2,w,c
 40730  005B98  6EFE               	movwf	tosh,c
 40731  005B9A  50F8               	movf	tblptru,w,c
 40732  005B9C  6EFF               	movwf	tosu,c
 40733  005B9E  50FA               	movf	pclath,w,c
 40734  005BA0  0012               	return		;indir
 40735  005BA2                     u14089:
 40736                           
 40737                           ;ex_eeprom.c: 75: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 40738  005BA2  0100               	movlb	0	; () banked
 40739  005BA4  EE20 F005          	lfsr	2,5
 40740  005BA8  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40741  005BAA  26D9               	addwf	fsr2l,f,c
 40742  005BAC  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40743  005BAE  22DA               	addwfc	fsr2h,f,c
 40744  005BB0  D801               	call	u14098
 40745  005BB2  D00F               	goto	u14099
 40746  005BB4                     u14098:
 40747  005BB4  0005               	push	
 40748  005BB6  6EFA               	movwf	pclath,c
 40749  005BB8  50DE               	movf	postinc2,w,c
 40750  005BBA  6EFD               	movwf	tosl,c
 40751  005BBC  50DE               	movf	postinc2,w,c
 40752  005BBE  6EFE               	movwf	tosh,c
 40753  005BC0  50F8               	movf	tblptru,w,c
 40754  005BC2  6EFF               	movwf	tosu,c
 40755  005BC4  50FA               	movf	pclath,w,c
 40756  005BC6  C066  FFD9         	movff	at24c02_write_n_byte@pAt24c02,fsr2l
 40757  005BCA  C067  FFDA         	movff	at24c02_write_n_byte@pAt24c02+1,fsr2h
 40758  005BCE  50DF               	movf	indf2,w,c
 40759  005BD0  0012               	return		;indir
 40760  005BD2                     u14099:
 40761                           
 40762                           ;ex_eeprom.c: 76: pAt24c02->iic_send_byte(addr++);
 40763  005BD2  0100               	movlb	0	; () banked
 40764  005BD4  EE20 F005          	lfsr	2,5
 40765  005BD8  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40766  005BDA  26D9               	addwf	fsr2l,f,c
 40767  005BDC  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40768  005BDE  22DA               	addwfc	fsr2h,f,c
 40769  005BE0  D801               	call	u14108
 40770  005BE2  D00C               	goto	l15008
 40771  005BE4                     u14108:
 40772  005BE4  0005               	push	
 40773  005BE6  6EFA               	movwf	pclath,c
 40774  005BE8  50DE               	movf	postinc2,w,c
 40775  005BEA  6EFD               	movwf	tosl,c
 40776  005BEC  50DE               	movf	postinc2,w,c
 40777  005BEE  6EFE               	movwf	tosh,c
 40778  005BF0  50F8               	movf	tblptru,w,c
 40779  005BF2  6EFF               	movwf	tosu,c
 40780  005BF4  50FA               	movf	pclath,w,c
 40781  005BF6  0100               	movlb	0	; () banked
 40782  005BF8  5168               	movf	at24c02_write_n_byte@addr& (0+255),w,b
 40783  005BFA  0012               	return		;indir
 40784  005BFC                     l15008:
 40785  005BFC  0100               	movlb	0	; () banked
 40786  005BFE  2B68               	incf	at24c02_write_n_byte@addr& (0+255),f,b
 40787                           
 40788                           ; BSR set to: 0
 40789                           ;ex_eeprom.c: 78: pAt24c02->iic_send_byte(*buf++);
 40790  005C00  0100               	movlb	0	; () banked
 40791  005C02  EE20 F005          	lfsr	2,5
 40792  005C06  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40793  005C08  26D9               	addwf	fsr2l,f,c
 40794  005C0A  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40795  005C0C  22DA               	addwfc	fsr2h,f,c
 40796  005C0E  D801               	call	u14118
 40797  005C10  D00F               	goto	u14119
 40798  005C12                     u14118:
 40799  005C12  0005               	push	
 40800  005C14  6EFA               	movwf	pclath,c
 40801  005C16  50DE               	movf	postinc2,w,c
 40802  005C18  6EFD               	movwf	tosl,c
 40803  005C1A  50DE               	movf	postinc2,w,c
 40804  005C1C  6EFE               	movwf	tosh,c
 40805  005C1E  50F8               	movf	tblptru,w,c
 40806  005C20  6EFF               	movwf	tosu,c
 40807  005C22  50FA               	movf	pclath,w,c
 40808  005C24  C069  FFD9         	movff	at24c02_write_n_byte@buf,fsr2l
 40809  005C28  C06A  FFDA         	movff	at24c02_write_n_byte@buf+1,fsr2h
 40810  005C2C  50DF               	movf	indf2,w,c
 40811  005C2E  0012               	return		;indir
 40812  005C30                     u14119:
 40813  005C30  0100               	movlb	0	; () banked
 40814  005C32  4B69               	infsnz	at24c02_write_n_byte@buf& (0+255),f,b
 40815  005C34  2B6A               	incf	(at24c02_write_n_byte@buf+1)& (0+255),f,b
 40816                           
 40817                           ; BSR set to: 0
 40818                           ;ex_eeprom.c: 79: pAt24c02->iic_stop();
 40819  005C36  0100               	movlb	0	; () banked
 40820  005C38  EE20 F003          	lfsr	2,3
 40821  005C3C  5166               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 40822  005C3E  26D9               	addwf	fsr2l,f,c
 40823  005C40  5167               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 40824  005C42  22DA               	addwfc	fsr2h,f,c
 40825  005C44  D801               	call	u14128
 40826  005C46  D00A               	goto	l15014
 40827  005C48                     u14128:
 40828  005C48  0005               	push	
 40829  005C4A  6EFA               	movwf	pclath,c
 40830  005C4C  50DE               	movf	postinc2,w,c
 40831  005C4E  6EFD               	movwf	tosl,c
 40832  005C50  50DE               	movf	postinc2,w,c
 40833  005C52  6EFE               	movwf	tosh,c
 40834  005C54  50F8               	movf	tblptru,w,c
 40835  005C56  6EFF               	movwf	tosu,c
 40836  005C58  50FA               	movf	pclath,w,c
 40837  005C5A  0012               	return		;indir
 40838  005C5C                     l15014:
 40839                           
 40840                           ;ex_eeprom.c: 80: delay_ms(1);
 40841  005C5C  0E00               	movlw	0
 40842  005C5E  0100               	movlb	0	; () banked
 40843  005C60  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 40844  005C62  0E01               	movlw	1
 40845  005C64  6F64               	movwf	delay_ms@dly& (0+255),b
 40846  005C66  EC00  F050         	call	_delay_ms
 40847  005C6A  0100               	movlb	0	; () banked
 40848  005C6C  4B6D               	infsnz	at24c02_write_n_byte@i& (0+255),f,b
 40849  005C6E  2B6E               	incf	(at24c02_write_n_byte@i+1)& (0+255),f,b
 40850  005C70                     l15018:
 40851                           
 40852                           ; BSR set to: 0
 40853  005C70  0100               	movlb	0	; () banked
 40854  005C72  516B               	movf	at24c02_write_n_byte@len& (0+255),w,b
 40855  005C74  0100               	movlb	0	; () banked
 40856  005C76  5D6D               	subwf	at24c02_write_n_byte@i& (0+255),w,b
 40857  005C78  0100               	movlb	0	; () banked
 40858  005C7A  516C               	movf	(at24c02_write_n_byte@len+1)& (0+255),w,b
 40859  005C7C  0100               	movlb	0	; () banked
 40860  005C7E  596E               	subwfb	(at24c02_write_n_byte@i+1)& (0+255),w,b
 40861  005C80  B0D8               	btfsc	status,0,c
 40862  005C82  0012               	return	
 40863  005C84  D77B               	goto	l15006
 40864  005C86                     __end_of_at24c02_write_n_byte:
 40865                           	opt stack 0
 40866                           tosu	equ	0xFFF
 40867                           tosh	equ	0xFFE
 40868                           tosl	equ	0xFFD
 40869                           pclath	equ	0xFFA
 40870                           tblptru	equ	0xFF8
 40871                           tblptrh	equ	0xFF7
 40872                           tblptrl	equ	0xFF6
 40873                           tablat	equ	0xFF5
 40874                           prodh	equ	0xFF4
 40875                           prodl	equ	0xFF3
 40876                           intcon	equ	0xFF2
 40877                           indf0	equ	0xFEF
 40878                           postinc0	equ	0xFEE
 40879                           fsr0h	equ	0xFEA
 40880                           fsr0l	equ	0xFE9
 40881                           wreg	equ	0xFE8
 40882                           indf1	equ	0xFE7
 40883                           postinc1	equ	0xFE6
 40884                           postdec1	equ	0xFE5
 40885                           plusw1	equ	0xFE3
 40886                           fsr1h	equ	0xFE2
 40887                           fsr1l	equ	0xFE1
 40888                           indf2	equ	0xFDF
 40889                           postinc2	equ	0xFDE
 40890                           postdec2	equ	0xFDD
 40891                           plusw2	equ	0xFDB
 40892                           fsr2h	equ	0xFDA
 40893                           fsr2l	equ	0xFD9
 40894                           status	equ	0xFD8
 40895                           
 40896 ;; *************** function _delay_ms *****************
 40897 ;; Defined at:
 40898 ;;		line 97 in file "src/soc/clock.c"
 40899 ;; Parameters:    Size  Location     Type
 40900 ;;  dly             2    4[BANK0 ] unsigned int 
 40901 ;; Auto vars:     Size  Location     Type
 40902 ;;		None
 40903 ;; Return value:  Size  Location     Type
 40904 ;;                  1    wreg      void 
 40905 ;; Registers used:
 40906 ;;		wreg, status,2, status,0, cstack
 40907 ;; Tracked objects:
 40908 ;;		On entry : 0/0
 40909 ;;		On exit  : 0/0
 40910 ;;		Unchanged: 0/0
 40911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40916 ;;Total ram usage:        2 bytes
 40917 ;; Hardware stack levels used:    1
 40918 ;; Hardware stack levels required when called:    5
 40919 ;; This function calls:
 40920 ;;		_delay_us
 40921 ;; This function is called by:
 40922 ;;		_key_waite_release
 40923 ;;		_at24c02_write_n_byte
 40924 ;;		_key_polling
 40925 ;; This function uses a non-reentrant model
 40926 ;;
 40927                           
 40928                           	psect	text206
 40929  00A000                     __ptext206:
 40930                           	opt stack 0
 40931  00A000                     _delay_ms:
 40932                           	opt stack 22
 40933                           
 40934                           ;clock.c: 99: while(dly>0){
 40935                           
 40936                           ; BSR set to: 0
 40937                           ;incstack = 0
 40938  00A000  D00B               	goto	l14636
 40939  00A002                     l14632:
 40940                           
 40941                           ;clock.c: 100: delay_us(1000);
 40942  00A002  0E03               	movlw	3
 40943  00A004  0100               	movlb	0	; () banked
 40944  00A006  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 40945  00A008  0EE8               	movlw	232
 40946  00A00A  6F60               	movwf	delay_us@dly& (0+255),b
 40947  00A00C  ECAE  F04D         	call	_delay_us	;wreg free
 40948                           
 40949                           ;clock.c: 101: dly--;
 40950  00A010  0100               	movlb	0	; () banked
 40951  00A012  0764               	decf	delay_ms@dly& (0+255),f,b
 40952  00A014  A0D8               	btfss	status,0,c
 40953  00A016  0765               	decf	(delay_ms@dly+1)& (0+255),f,b
 40954  00A018                     l14636:
 40955  00A018  0100               	movlb	0	; () banked
 40956  00A01A  5164               	movf	delay_ms@dly& (0+255),w,b
 40957  00A01C  0100               	movlb	0	; () banked
 40958  00A01E  1165               	iorwf	(delay_ms@dly+1)& (0+255),w,b
 40959  00A020  B4D8               	btfsc	status,2,c
 40960  00A022  0012               	return	
 40961  00A024  D7EE               	goto	l14632
 40962  00A026                     __end_of_delay_ms:
 40963                           	opt stack 0
 40964                           tosu	equ	0xFFF
 40965                           tosh	equ	0xFFE
 40966                           tosl	equ	0xFFD
 40967                           pclath	equ	0xFFA
 40968                           tblptru	equ	0xFF8
 40969                           tblptrh	equ	0xFF7
 40970                           tblptrl	equ	0xFF6
 40971                           tablat	equ	0xFF5
 40972                           prodh	equ	0xFF4
 40973                           prodl	equ	0xFF3
 40974                           intcon	equ	0xFF2
 40975                           indf0	equ	0xFEF
 40976                           postinc0	equ	0xFEE
 40977                           fsr0h	equ	0xFEA
 40978                           fsr0l	equ	0xFE9
 40979                           wreg	equ	0xFE8
 40980                           indf1	equ	0xFE7
 40981                           postinc1	equ	0xFE6
 40982                           postdec1	equ	0xFE5
 40983                           plusw1	equ	0xFE3
 40984                           fsr1h	equ	0xFE2
 40985                           fsr1l	equ	0xFE1
 40986                           indf2	equ	0xFDF
 40987                           postinc2	equ	0xFDE
 40988                           postdec2	equ	0xFDD
 40989                           plusw2	equ	0xFDB
 40990                           fsr2h	equ	0xFDA
 40991                           fsr2l	equ	0xFD9
 40992                           status	equ	0xFD8
 40993                           
 40994 ;; *************** function _at24c02_read_n_byte *****************
 40995 ;; Defined at:
 40996 ;;		line 45 in file "src/driver/ex_eeprom.c"
 40997 ;; Parameters:    Size  Location     Type
 40998 ;;  pAt24c02        2    8[BANK0 ] PTR struct .
 40999 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 41000 ;;  addr            1   10[BANK0 ] unsigned char 
 41001 ;;  buf             2   11[BANK0 ] PTR unsigned char 
 41002 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 41003 ;;  len             2   13[BANK0 ] unsigned int 
 41004 ;; Auto vars:     Size  Location     Type
 41005 ;;  i               2   19[BANK0 ] unsigned int 
 41006 ;; Return value:  Size  Location     Type
 41007 ;;                  1    wreg      void 
 41008 ;; Registers used:
 41009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 41010 ;; Tracked objects:
 41011 ;;		On entry : 0/0
 41012 ;;		On exit  : 0/0
 41013 ;;		Unchanged: 0/0
 41014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41015 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41016 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41017 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41018 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41019 ;;Total ram usage:       13 bytes
 41020 ;; Hardware stack levels used:    1
 41021 ;; Hardware stack levels required when called:    8
 41022 ;; This function calls:
 41023 ;;		_iic_received_byte_if_ack
 41024 ;;		_iic_send_byte
 41025 ;;		_iic_start
 41026 ;;		_iic_stop
 41027 ;; This function is called by:
 41028 ;;		_calib_data_init_diff_pr
 41029 ;;		_calib_data_init_pr
 41030 ;; This function uses a non-reentrant model
 41031 ;;
 41032                           
 41033                           	psect	text207
 41034  004502                     __ptext207:
 41035                           	opt stack 0
 41036  004502                     _at24c02_read_n_byte:
 41037                           	opt stack 20
 41038                           
 41039                           ;ex_eeprom.c: 48: uint16_t i;
 41040                           ;ex_eeprom.c: 49: pAt24c02->iic_start();
 41041                           
 41042                           ; BSR set to: 0
 41043                           ;incstack = 0
 41044  004502  0100               	movlb	0	; () banked
 41045  004504  EE20 F001          	lfsr	2,1
 41046  004508  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41047  00450A  26D9               	addwf	fsr2l,f,c
 41048  00450C  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41049  00450E  22DA               	addwfc	fsr2h,f,c
 41050  004510  D801               	call	u14748
 41051  004512  D00A               	goto	u14749
 41052  004514                     u14748:
 41053  004514  0005               	push	
 41054  004516  6EFA               	movwf	pclath,c
 41055  004518  50DE               	movf	postinc2,w,c
 41056  00451A  6EFD               	movwf	tosl,c
 41057  00451C  50DE               	movf	postinc2,w,c
 41058  00451E  6EFE               	movwf	tosh,c
 41059  004520  50F8               	movf	tblptru,w,c
 41060  004522  6EFF               	movwf	tosu,c
 41061  004524  50FA               	movf	pclath,w,c
 41062  004526  0012               	return		;indir
 41063  004528                     u14749:
 41064                           
 41065                           ;ex_eeprom.c: 50: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 41066  004528  0100               	movlb	0	; () banked
 41067  00452A  EE20 F005          	lfsr	2,5
 41068  00452E  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41069  004530  26D9               	addwf	fsr2l,f,c
 41070  004532  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41071  004534  22DA               	addwfc	fsr2h,f,c
 41072  004536  D801               	call	u14758
 41073  004538  D00F               	goto	u14759
 41074  00453A                     u14758:
 41075  00453A  0005               	push	
 41076  00453C  6EFA               	movwf	pclath,c
 41077  00453E  50DE               	movf	postinc2,w,c
 41078  004540  6EFD               	movwf	tosl,c
 41079  004542  50DE               	movf	postinc2,w,c
 41080  004544  6EFE               	movwf	tosh,c
 41081  004546  50F8               	movf	tblptru,w,c
 41082  004548  6EFF               	movwf	tosu,c
 41083  00454A  50FA               	movf	pclath,w,c
 41084  00454C  C068  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 41085  004550  C069  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 41086  004554  50DF               	movf	indf2,w,c
 41087  004556  0012               	return		;indir
 41088  004558                     u14759:
 41089                           
 41090                           ;ex_eeprom.c: 51: pAt24c02->iic_send_byte(addr);
 41091  004558  0100               	movlb	0	; () banked
 41092  00455A  EE20 F005          	lfsr	2,5
 41093  00455E  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41094  004560  26D9               	addwf	fsr2l,f,c
 41095  004562  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41096  004564  22DA               	addwfc	fsr2h,f,c
 41097  004566  D801               	call	u14768
 41098  004568  D00C               	goto	u14769
 41099  00456A                     u14768:
 41100  00456A  0005               	push	
 41101  00456C  6EFA               	movwf	pclath,c
 41102  00456E  50DE               	movf	postinc2,w,c
 41103  004570  6EFD               	movwf	tosl,c
 41104  004572  50DE               	movf	postinc2,w,c
 41105  004574  6EFE               	movwf	tosh,c
 41106  004576  50F8               	movf	tblptru,w,c
 41107  004578  6EFF               	movwf	tosu,c
 41108  00457A  50FA               	movf	pclath,w,c
 41109  00457C  0100               	movlb	0	; () banked
 41110  00457E  516A               	movf	at24c02_read_n_byte@addr& (0+255),w,b
 41111  004580  0012               	return		;indir
 41112  004582                     u14769:
 41113                           
 41114                           ;ex_eeprom.c: 53: pAt24c02->iic_start();
 41115  004582  0100               	movlb	0	; () banked
 41116  004584  EE20 F001          	lfsr	2,1
 41117  004588  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41118  00458A  26D9               	addwf	fsr2l,f,c
 41119  00458C  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41120  00458E  22DA               	addwfc	fsr2h,f,c
 41121  004590  D801               	call	u14778
 41122  004592  D00A               	goto	u14779
 41123  004594                     u14778:
 41124  004594  0005               	push	
 41125  004596  6EFA               	movwf	pclath,c
 41126  004598  50DE               	movf	postinc2,w,c
 41127  00459A  6EFD               	movwf	tosl,c
 41128  00459C  50DE               	movf	postinc2,w,c
 41129  00459E  6EFE               	movwf	tosh,c
 41130  0045A0  50F8               	movf	tblptru,w,c
 41131  0045A2  6EFF               	movwf	tosu,c
 41132  0045A4  50FA               	movf	pclath,w,c
 41133  0045A6  0012               	return		;indir
 41134  0045A8                     u14779:
 41135                           
 41136                           ;ex_eeprom.c: 54: pAt24c02->iic_send_byte(pAt24c02->slaveAddr+1);
 41137  0045A8  0100               	movlb	0	; () banked
 41138  0045AA  EE20 F005          	lfsr	2,5
 41139  0045AE  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41140  0045B0  26D9               	addwf	fsr2l,f,c
 41141  0045B2  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41142  0045B4  22DA               	addwfc	fsr2h,f,c
 41143  0045B6  D801               	call	u14788
 41144  0045B8  D013               	goto	l15702
 41145  0045BA                     u14788:
 41146  0045BA  0005               	push	
 41147  0045BC  6EFA               	movwf	pclath,c
 41148  0045BE  50DE               	movf	postinc2,w,c
 41149  0045C0  6EFD               	movwf	tosl,c
 41150  0045C2  50DE               	movf	postinc2,w,c
 41151  0045C4  6EFE               	movwf	tosh,c
 41152  0045C6  50F8               	movf	tblptru,w,c
 41153  0045C8  6EFF               	movwf	tosu,c
 41154  0045CA  50FA               	movf	pclath,w,c
 41155  0045CC  C068  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 41156  0045D0  C069  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 41157  0045D4  50DF               	movf	indf2,w,c
 41158  0045D6  0100               	movlb	0	; () banked
 41159  0045D8  6F6F               	movwf	??_at24c02_read_n_byte& (0+255),b
 41160  0045DA  0100               	movlb	0	; () banked
 41161  0045DC  296F               	incf	??_at24c02_read_n_byte& (0+255),w,b
 41162  0045DE  0012               	return		;indir
 41163  0045E0                     l15702:
 41164                           
 41165                           ;ex_eeprom.c: 55: for(i=0;i<len-1;i++){
 41166  0045E0  0E00               	movlw	0
 41167  0045E2  0100               	movlb	0	; () banked
 41168  0045E4  6F74               	movwf	(at24c02_read_n_byte@i+1)& (0+255),b
 41169  0045E6  0E00               	movlw	0
 41170  0045E8  6F73               	movwf	at24c02_read_n_byte@i& (0+255),b
 41171  0045EA  D01F               	goto	l15710
 41172  0045EC                     l15704:
 41173                           
 41174                           ; BSR set to: 0
 41175                           ;ex_eeprom.c: 56: *buf++=pAt24c02->iic_received_byte_if_ack(IIC_ACK);
 41176  0045EC  0100               	movlb	0	; () banked
 41177  0045EE  EE20 F009          	lfsr	2,9
 41178  0045F2  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41179  0045F4  26D9               	addwf	fsr2l,f,c
 41180  0045F6  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41181  0045F8  22DA               	addwfc	fsr2h,f,c
 41182  0045FA  D801               	call	u14798
 41183  0045FC  D00B               	goto	u14799
 41184  0045FE                     u14798:
 41185  0045FE  0005               	push	
 41186  004600  6EFA               	movwf	pclath,c
 41187  004602  50DE               	movf	postinc2,w,c
 41188  004604  6EFD               	movwf	tosl,c
 41189  004606  50DE               	movf	postinc2,w,c
 41190  004608  6EFE               	movwf	tosh,c
 41191  00460A  50F8               	movf	tblptru,w,c
 41192  00460C  6EFF               	movwf	tosu,c
 41193  00460E  50FA               	movf	pclath,w,c
 41194  004610  0E00               	movlw	0
 41195  004612  0012               	return		;indir
 41196  004614                     u14799:
 41197  004614  C06B  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 41198  004618  C06C  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 41199  00461C  6EDF               	movwf	indf2,c
 41200  00461E  0100               	movlb	0	; () banked
 41201  004620  4B6B               	infsnz	at24c02_read_n_byte@buf& (0+255),f,b
 41202  004622  2B6C               	incf	(at24c02_read_n_byte@buf+1)& (0+255),f,b
 41203                           
 41204                           ; BSR set to: 0
 41205  004624  0100               	movlb	0	; () banked
 41206  004626  4B73               	infsnz	at24c02_read_n_byte@i& (0+255),f,b
 41207  004628  2B74               	incf	(at24c02_read_n_byte@i+1)& (0+255),f,b
 41208  00462A                     l15710:
 41209                           
 41210                           ; BSR set to: 0
 41211  00462A  0EFF               	movlw	255
 41212  00462C  0100               	movlb	0	; () banked
 41213  00462E  6F6F               	movwf	??_at24c02_read_n_byte& (0+255),b
 41214  004630  0EFF               	movlw	255
 41215  004632  0100               	movlb	0	; () banked
 41216  004634  6F70               	movwf	(??_at24c02_read_n_byte+1)& (0+255),b
 41217  004636  C06D  F071         	movff	at24c02_read_n_byte@len,??_at24c02_read_n_byte+2
 41218  00463A  C06E  F072         	movff	at24c02_read_n_byte@len+1,??_at24c02_read_n_byte+3
 41219  00463E  0100               	movlb	0	; () banked
 41220  004640  516F               	movf	??_at24c02_read_n_byte& (0+255),w,b
 41221  004642  0100               	movlb	0	; () banked
 41222  004644  2771               	addwf	(??_at24c02_read_n_byte+2)& (0+255),f,b
 41223  004646  0100               	movlb	0	; () banked
 41224  004648  5170               	movf	(??_at24c02_read_n_byte+1)& (0+255),w,b
 41225  00464A  0100               	movlb	0	; () banked
 41226  00464C  2372               	addwfc	(??_at24c02_read_n_byte+3)& (0+255),f,b
 41227  00464E  0100               	movlb	0	; () banked
 41228  004650  5171               	movf	(??_at24c02_read_n_byte+2)& (0+255),w,b
 41229  004652  0100               	movlb	0	; () banked
 41230  004654  5D73               	subwf	at24c02_read_n_byte@i& (0+255),w,b
 41231  004656  0100               	movlb	0	; () banked
 41232  004658  5172               	movf	(??_at24c02_read_n_byte+3)& (0+255),w,b
 41233  00465A  0100               	movlb	0	; () banked
 41234  00465C  5974               	subwfb	(at24c02_read_n_byte@i+1)& (0+255),w,b
 41235  00465E  A0D8               	btfss	status,0,c
 41236  004660  D7C5               	goto	l15704
 41237                           
 41238                           ; BSR set to: 0
 41239                           ;ex_eeprom.c: 57: }
 41240                           ;ex_eeprom.c: 58: *buf=pAt24c02->iic_received_byte_if_ack(IIC_NACK);
 41241                           
 41242                           ; BSR set to: 0
 41243  004662  0100               	movlb	0	; () banked
 41244  004664  EE20 F009          	lfsr	2,9
 41245  004668  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41246  00466A  26D9               	addwf	fsr2l,f,c
 41247  00466C  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41248  00466E  22DA               	addwfc	fsr2h,f,c
 41249  004670  D801               	call	u14818
 41250  004672  D00B               	goto	u14819
 41251  004674                     u14818:
 41252  004674  0005               	push	
 41253  004676  6EFA               	movwf	pclath,c
 41254  004678  50DE               	movf	postinc2,w,c
 41255  00467A  6EFD               	movwf	tosl,c
 41256  00467C  50DE               	movf	postinc2,w,c
 41257  00467E  6EFE               	movwf	tosh,c
 41258  004680  50F8               	movf	tblptru,w,c
 41259  004682  6EFF               	movwf	tosu,c
 41260  004684  50FA               	movf	pclath,w,c
 41261  004686  0E01               	movlw	1
 41262  004688  0012               	return		;indir
 41263  00468A                     u14819:
 41264  00468A  C06B  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 41265  00468E  C06C  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 41266  004692  6EDF               	movwf	indf2,c
 41267                           
 41268                           ;ex_eeprom.c: 59: pAt24c02->iic_stop();
 41269  004694  0100               	movlb	0	; () banked
 41270  004696  EE20 F003          	lfsr	2,3
 41271  00469A  5168               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 41272  00469C  26D9               	addwf	fsr2l,f,c
 41273  00469E  5169               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 41274  0046A0  22DA               	addwfc	fsr2h,f,c
 41275  0046A2  D801               	call	u14828
 41276  0046A4  0012               	return	
 41277  0046A6                     u14828:
 41278  0046A6  0005               	push	
 41279  0046A8  6EFA               	movwf	pclath,c
 41280  0046AA  50DE               	movf	postinc2,w,c
 41281  0046AC  6EFD               	movwf	tosl,c
 41282  0046AE  50DE               	movf	postinc2,w,c
 41283  0046B0  6EFE               	movwf	tosh,c
 41284  0046B2  50F8               	movf	tblptru,w,c
 41285  0046B4  6EFF               	movwf	tosu,c
 41286  0046B6  50FA               	movf	pclath,w,c
 41287  0046B8  0012               	return		;indir
 41288  0046BA                     __end_of_at24c02_read_n_byte:
 41289                           	opt stack 0
 41290                           tosu	equ	0xFFF
 41291                           tosh	equ	0xFFE
 41292                           tosl	equ	0xFFD
 41293                           pclath	equ	0xFFA
 41294                           tblptru	equ	0xFF8
 41295                           tblptrh	equ	0xFF7
 41296                           tblptrl	equ	0xFF6
 41297                           tablat	equ	0xFF5
 41298                           prodh	equ	0xFF4
 41299                           prodl	equ	0xFF3
 41300                           intcon	equ	0xFF2
 41301                           indf0	equ	0xFEF
 41302                           postinc0	equ	0xFEE
 41303                           fsr0h	equ	0xFEA
 41304                           fsr0l	equ	0xFE9
 41305                           wreg	equ	0xFE8
 41306                           indf1	equ	0xFE7
 41307                           postinc1	equ	0xFE6
 41308                           postdec1	equ	0xFE5
 41309                           plusw1	equ	0xFE3
 41310                           fsr1h	equ	0xFE2
 41311                           fsr1l	equ	0xFE1
 41312                           indf2	equ	0xFDF
 41313                           postinc2	equ	0xFDE
 41314                           postdec2	equ	0xFDD
 41315                           plusw2	equ	0xFDB
 41316                           fsr2h	equ	0xFDA
 41317                           fsr2l	equ	0xFD9
 41318                           status	equ	0xFD8
 41319                           
 41320 ;; *************** function _iic_start *****************
 41321 ;; Defined at:
 41322 ;;		line 19 in file "src/driver/i2c.c"
 41323 ;; Parameters:    Size  Location     Type
 41324 ;;		None
 41325 ;; Auto vars:     Size  Location     Type
 41326 ;;		None
 41327 ;; Return value:  Size  Location     Type
 41328 ;;                  1    wreg      void 
 41329 ;; Registers used:
 41330 ;;		wreg, status,2, status,0, cstack
 41331 ;; Tracked objects:
 41332 ;;		On entry : 0/0
 41333 ;;		On exit  : 0/0
 41334 ;;		Unchanged: 0/0
 41335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41340 ;;Total ram usage:        0 bytes
 41341 ;; Hardware stack levels used:    1
 41342 ;; Hardware stack levels required when called:    5
 41343 ;; This function calls:
 41344 ;;		_delay_us
 41345 ;; This function is called by:
 41346 ;;		_ads1115_init
 41347 ;;		_at24c02_init
 41348 ;;		_pcf8574_init
 41349 ;;		_ads1115_write_reg
 41350 ;;		_ads1115_read_reg
 41351 ;;		_at24c02_write_n_byte
 41352 ;;		_at24c02_read_n_byte
 41353 ;;		_pcf8574_write_singel
 41354 ;;		_ad421_write_via_pcf8574
 41355 ;; This function uses a non-reentrant model
 41356 ;;
 41357                           
 41358                           	psect	text208
 41359  009B24                     __ptext208:
 41360                           	opt stack 0
 41361  009B24                     _iic_start:
 41362                           	opt stack 21
 41363                           
 41364                           ;incstack = 0
 41365                           ;i2c.c: 21: do{TRISC &= ~(1<<3);}while(0);;;
 41366  009B24  9694               	bcf	3988,3,c	;volatile
 41367                           
 41368                           ;i2c.c: 22: do{TRISC &= ~(1<<4);}while(0);;;
 41369  009B26  9894               	bcf	3988,4,c	;volatile
 41370                           
 41371                           ;i2c.c: 24: do{LATC |= (1<<4);}while(0);;;
 41372  009B28  888B               	bsf	3979,4,c	;volatile
 41373                           
 41374                           ;i2c.c: 25: do{LATC |= (1<<3);}while(0);;;
 41375  009B2A  868B               	bsf	3979,3,c	;volatile
 41376                           
 41377                           ;i2c.c: 26: delay_us(3);
 41378  009B2C  0E00               	movlw	0
 41379  009B2E  0100               	movlb	0	; () banked
 41380  009B30  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41381  009B32  0E03               	movlw	3
 41382  009B34  6F60               	movwf	delay_us@dly& (0+255),b
 41383  009B36  ECAE  F04D         	call	_delay_us
 41384                           
 41385                           ;i2c.c: 27: do{LATC &= ~(1<<4);}while(0);;;
 41386  009B3A  988B               	bcf	3979,4,c	;volatile
 41387                           
 41388                           ;i2c.c: 28: delay_us(3);
 41389  009B3C  0E00               	movlw	0
 41390  009B3E  0100               	movlb	0	; () banked
 41391  009B40  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41392  009B42  0E03               	movlw	3
 41393  009B44  6F60               	movwf	delay_us@dly& (0+255),b
 41394  009B46  ECAE  F04D         	call	_delay_us	;wreg free
 41395                           
 41396                           ;i2c.c: 29: do{LATC &= ~(1<<3);}while(0);;;
 41397  009B4A  968B               	bcf	3979,3,c	;volatile
 41398                           
 41399                           ;i2c.c: 30: delay_us(3);
 41400  009B4C  0E00               	movlw	0
 41401  009B4E  0100               	movlb	0	; () banked
 41402  009B50  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41403  009B52  0E03               	movlw	3
 41404  009B54  6F60               	movwf	delay_us@dly& (0+255),b
 41405  009B56  ECAE  F04D         	call	_delay_us	;wreg free
 41406  009B5A  0012               	return		;funcret
 41407  009B5C                     __end_of_iic_start:
 41408                           	opt stack 0
 41409                           tosu	equ	0xFFF
 41410                           tosh	equ	0xFFE
 41411                           tosl	equ	0xFFD
 41412                           pclath	equ	0xFFA
 41413                           tblptru	equ	0xFF8
 41414                           tblptrh	equ	0xFF7
 41415                           tblptrl	equ	0xFF6
 41416                           tablat	equ	0xFF5
 41417                           prodh	equ	0xFF4
 41418                           prodl	equ	0xFF3
 41419                           intcon	equ	0xFF2
 41420                           indf0	equ	0xFEF
 41421                           postinc0	equ	0xFEE
 41422                           fsr0h	equ	0xFEA
 41423                           fsr0l	equ	0xFE9
 41424                           wreg	equ	0xFE8
 41425                           indf1	equ	0xFE7
 41426                           postinc1	equ	0xFE6
 41427                           postdec1	equ	0xFE5
 41428                           plusw1	equ	0xFE3
 41429                           fsr1h	equ	0xFE2
 41430                           fsr1l	equ	0xFE1
 41431                           indf2	equ	0xFDF
 41432                           postinc2	equ	0xFDE
 41433                           postdec2	equ	0xFDD
 41434                           plusw2	equ	0xFDB
 41435                           fsr2h	equ	0xFDA
 41436                           fsr2l	equ	0xFD9
 41437                           status	equ	0xFD8
 41438                           
 41439 ;; *************** function _iic_send_byte *****************
 41440 ;; Defined at:
 41441 ;;		line 84 in file "src/driver/i2c.c"
 41442 ;; Parameters:    Size  Location     Type
 41443 ;;  x               1    wreg     unsigned char 
 41444 ;; Auto vars:     Size  Location     Type
 41445 ;;  x               1    4[BANK0 ] unsigned char 
 41446 ;;  i               1    5[BANK0 ] unsigned char 
 41447 ;; Return value:  Size  Location     Type
 41448 ;;                  1    wreg      unsigned char 
 41449 ;; Registers used:
 41450 ;;		wreg, status,2, status,0, cstack
 41451 ;; Tracked objects:
 41452 ;;		On entry : 0/0
 41453 ;;		On exit  : 0/0
 41454 ;;		Unchanged: 0/0
 41455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41460 ;;Total ram usage:        2 bytes
 41461 ;; Hardware stack levels used:    1
 41462 ;; Hardware stack levels required when called:    7
 41463 ;; This function calls:
 41464 ;;		_delay_us
 41465 ;;		_iic_waite_ack
 41466 ;; This function is called by:
 41467 ;;		_ads1115_init
 41468 ;;		_at24c02_init
 41469 ;;		_pcf8574_init
 41470 ;;		_ads1115_write_reg
 41471 ;;		_ads1115_read_reg
 41472 ;;		_at24c02_write_n_byte
 41473 ;;		_at24c02_read_n_byte
 41474 ;;		_pcf8574_write_singel
 41475 ;;		_ad421_write_via_pcf8574
 41476 ;; This function uses a non-reentrant model
 41477 ;;
 41478                           
 41479                           	psect	text209
 41480  0087A8                     __ptext209:
 41481                           	opt stack 0
 41482  0087A8                     _iic_send_byte:
 41483                           	opt stack 19
 41484                           
 41485                           ;incstack = 0
 41486                           ;iic_send_byte@x stored from wreg
 41487  0087A8  0100               	movlb	0	; () banked
 41488  0087AA  6F64               	movwf	iic_send_byte@x& (0+255),b
 41489                           
 41490                           ;i2c.c: 86: uint8_t i;
 41491                           ;i2c.c: 87: do{TRISC &= ~(1<<3);}while(0);;;
 41492  0087AC  9694               	bcf	3988,3,c	;volatile
 41493                           
 41494                           ;i2c.c: 88: do{TRISC &= ~(1<<4);}while(0);;;
 41495  0087AE  9894               	bcf	3988,4,c	;volatile
 41496                           
 41497                           ;i2c.c: 89: do{LATC &= ~(1<<3);}while(0);;;
 41498  0087B0  968B               	bcf	3979,3,c	;volatile
 41499                           
 41500                           ;i2c.c: 90: delay_us(3);
 41501  0087B2  0E00               	movlw	0
 41502  0087B4  0100               	movlb	0	; () banked
 41503  0087B6  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41504  0087B8  0E03               	movlw	3
 41505  0087BA  6F60               	movwf	delay_us@dly& (0+255),b
 41506  0087BC  ECAE  F04D         	call	_delay_us	;wreg free
 41507                           
 41508                           ;i2c.c: 91: for(i=0;i<8;i++){
 41509  0087C0  0E00               	movlw	0
 41510  0087C2  0100               	movlb	0	; () banked
 41511  0087C4  6F65               	movwf	iic_send_byte@i& (0+255),b
 41512  0087C6                     l14118:
 41513                           
 41514                           ; BSR set to: 0
 41515  0087C6  0E07               	movlw	7
 41516  0087C8  0100               	movlb	0	; () banked
 41517  0087CA  6565               	cpfsgt	iic_send_byte@i& (0+255),b
 41518  0087CC  D001               	goto	l1648
 41519  0087CE  D023               	goto	l14138
 41520  0087D0                     l1648:
 41521                           
 41522                           ; BSR set to: 0
 41523                           ;i2c.c: 92: if(x&0x80){
 41524  0087D0  0100               	movlb	0	; () banked
 41525  0087D2  AF64               	btfss	iic_send_byte@x& (0+255),7,b
 41526  0087D4  D002               	goto	l14124
 41527                           
 41528                           ; BSR set to: 0
 41529                           
 41530                           ; BSR set to: 0
 41531                           
 41532                           ;i2c.c: 93: do{LATC |= (1<<4);}while(0);;;
 41533  0087D6  888B               	bsf	3979,4,c	;volatile
 41534                           
 41535                           ; BSR set to: 0
 41536                           ;i2c.c: 94: }
 41537  0087D8  D001               	goto	l14126
 41538  0087DA                     l14124:
 41539                           
 41540                           ; BSR set to: 0
 41541  0087DA  988B               	bcf	3979,4,c	;volatile
 41542  0087DC                     l14126:
 41543                           
 41544                           ; BSR set to: 0
 41545                           ;i2c.c: 97: }
 41546                           ;i2c.c: 98: delay_us(3);
 41547  0087DC  0E00               	movlw	0
 41548  0087DE  0100               	movlb	0	; () banked
 41549  0087E0  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41550  0087E2  0E03               	movlw	3
 41551  0087E4  6F60               	movwf	delay_us@dly& (0+255),b
 41552  0087E6  ECAE  F04D         	call	_delay_us	;wreg free
 41553                           
 41554                           ;i2c.c: 99: do{LATC |= (1<<3);}while(0);;;
 41555  0087EA  868B               	bsf	3979,3,c	;volatile
 41556                           
 41557                           ;i2c.c: 101: delay_us(3);
 41558  0087EC  0E00               	movlw	0
 41559  0087EE  0100               	movlb	0	; () banked
 41560  0087F0  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41561  0087F2  0E03               	movlw	3
 41562  0087F4  6F60               	movwf	delay_us@dly& (0+255),b
 41563  0087F6  ECAE  F04D         	call	_delay_us	;wreg free
 41564                           
 41565                           ;i2c.c: 102: do{LATC &= ~(1<<3);}while(0);;;
 41566  0087FA  968B               	bcf	3979,3,c	;volatile
 41567                           
 41568                           ;i2c.c: 104: delay_us(3);
 41569  0087FC  0E00               	movlw	0
 41570  0087FE  0100               	movlb	0	; () banked
 41571  008800  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41572  008802  0E03               	movlw	3
 41573  008804  6F60               	movwf	delay_us@dly& (0+255),b
 41574  008806  ECAE  F04D         	call	_delay_us	;wreg free
 41575                           
 41576                           ;i2c.c: 105: x<<=1;
 41577  00880A  0100               	movlb	0	; () banked
 41578  00880C  90D8               	bcf	status,0,c
 41579  00880E  3764               	rlcf	iic_send_byte@x& (0+255),f,b
 41580                           
 41581                           ; BSR set to: 0
 41582  008810  0100               	movlb	0	; () banked
 41583  008812  2B65               	incf	iic_send_byte@i& (0+255),f,b
 41584  008814  D7D8               	goto	l14118
 41585  008816                     l14138:
 41586                           
 41587                           ; BSR set to: 0
 41588                           ;i2c.c: 106: }
 41589                           ;i2c.c: 107: return iic_waite_ack();
 41590                           ;	Return value of _iic_send_byte is never used
 41591  008816  EC26  F04A         	call	_iic_waite_ack	;wreg free
 41592  00881A  0012               	return	
 41593  00881C                     __end_of_iic_send_byte:
 41594                           	opt stack 0
 41595                           tosu	equ	0xFFF
 41596                           tosh	equ	0xFFE
 41597                           tosl	equ	0xFFD
 41598                           pclath	equ	0xFFA
 41599                           tblptru	equ	0xFF8
 41600                           tblptrh	equ	0xFF7
 41601                           tblptrl	equ	0xFF6
 41602                           tablat	equ	0xFF5
 41603                           prodh	equ	0xFF4
 41604                           prodl	equ	0xFF3
 41605                           intcon	equ	0xFF2
 41606                           indf0	equ	0xFEF
 41607                           postinc0	equ	0xFEE
 41608                           fsr0h	equ	0xFEA
 41609                           fsr0l	equ	0xFE9
 41610                           wreg	equ	0xFE8
 41611                           indf1	equ	0xFE7
 41612                           postinc1	equ	0xFE6
 41613                           postdec1	equ	0xFE5
 41614                           plusw1	equ	0xFE3
 41615                           fsr1h	equ	0xFE2
 41616                           fsr1l	equ	0xFE1
 41617                           indf2	equ	0xFDF
 41618                           postinc2	equ	0xFDE
 41619                           postdec2	equ	0xFDD
 41620                           plusw2	equ	0xFDB
 41621                           fsr2h	equ	0xFDA
 41622                           fsr2l	equ	0xFD9
 41623                           status	equ	0xFD8
 41624                           
 41625 ;; *************** function _iic_waite_ack *****************
 41626 ;; Defined at:
 41627 ;;		line 63 in file "src/driver/i2c.c"
 41628 ;; Parameters:    Size  Location     Type
 41629 ;;		None
 41630 ;; Auto vars:     Size  Location     Type
 41631 ;;  timeout         1   31[COMRAM] unsigned char 
 41632 ;; Return value:  Size  Location     Type
 41633 ;;                  1    wreg      unsigned char 
 41634 ;; Registers used:
 41635 ;;		wreg, status,2, status,0, cstack
 41636 ;; Tracked objects:
 41637 ;;		On entry : 0/0
 41638 ;;		On exit  : 0/0
 41639 ;;		Unchanged: 0/0
 41640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41645 ;;Total ram usage:        1 bytes
 41646 ;; Hardware stack levels used:    1
 41647 ;; Hardware stack levels required when called:    6
 41648 ;; This function calls:
 41649 ;;		_delay_us
 41650 ;;		_iic_stop
 41651 ;; This function is called by:
 41652 ;;		_ads1115_init
 41653 ;;		_at24c02_init
 41654 ;;		_iic_send_byte
 41655 ;;		_pcf8574_init
 41656 ;; This function uses a non-reentrant model
 41657 ;;
 41658                           
 41659                           	psect	text210
 41660  00944C                     __ptext210:
 41661                           	opt stack 0
 41662  00944C                     _iic_waite_ack:
 41663                           	opt stack 19
 41664                           
 41665                           ;i2c.c: 65: uint8_t timeout=200;
 41666                           
 41667                           ;incstack = 0
 41668  00944C  0EC8               	movlw	200
 41669  00944E  6E20               	movwf	iic_waite_ack@timeout,c
 41670                           
 41671                           ;i2c.c: 66: do{TRISC &= ~(1<<3);}while(0);;;
 41672  009450  9694               	bcf	3988,3,c	;volatile
 41673                           
 41674                           ;i2c.c: 67: do{TRISC |= (1<<4);}while(0);;;
 41675  009452  8894               	bsf	3988,4,c	;volatile
 41676                           
 41677                           ;i2c.c: 68: do{LATC &= ~(1<<3);}while(0);;;
 41678  009454  968B               	bcf	3979,3,c	;volatile
 41679                           
 41680                           ;i2c.c: 69: delay_us(3);
 41681  009456  0E00               	movlw	0
 41682  009458  0100               	movlb	0	; () banked
 41683  00945A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41684  00945C  0E03               	movlw	3
 41685  00945E  6F60               	movwf	delay_us@dly& (0+255),b
 41686  009460  ECAE  F04D         	call	_delay_us	;wreg free
 41687                           
 41688                           ;i2c.c: 70: do{LATC |= (1<<3);}while(0);;;
 41689  009464  868B               	bsf	3979,3,c	;volatile
 41690                           
 41691                           ;i2c.c: 71: delay_us(3);
 41692  009466  0E00               	movlw	0
 41693  009468  0100               	movlb	0	; () banked
 41694  00946A  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41695  00946C  0E03               	movlw	3
 41696  00946E  6F60               	movwf	delay_us@dly& (0+255),b
 41697  009470  ECAE  F04D         	call	_delay_us	;wreg free
 41698                           
 41699                           ;i2c.c: 72: while(timeout--){
 41700  009474  D002               	goto	l13240
 41701  009476                     l1633:
 41702                           
 41703                           ;i2c.c: 73: if(!(PORTC & (1<<4)))break;
 41704  009476  A882               	btfss	3970,4,c	;volatile
 41705  009478  D004               	goto	l13242
 41706  00947A                     l13240:
 41707  00947A  0620               	decf	iic_waite_ack@timeout,f,c
 41708  00947C  2820               	incf	iic_waite_ack@timeout,w,c
 41709  00947E  A4D8               	btfss	status,2,c
 41710  009480  D7FA               	goto	l1633
 41711  009482                     l13242:
 41712                           
 41713                           ;i2c.c: 74: }
 41714                           ;i2c.c: 75: if(!timeout){
 41715  009482  5020               	movf	iic_waite_ack@timeout,w,c
 41716  009484  A4D8               	btfss	status,2,c
 41717  009486  D004               	goto	l13250
 41718                           
 41719                           ;i2c.c: 76: iic_stop();
 41720  009488  EC1B  F04E         	call	_iic_stop	;wreg free
 41721                           
 41722                           ;i2c.c: 77: return 0;
 41723  00948C  0E00               	movlw	0
 41724  00948E  0012               	return	
 41725  009490                     l13250:
 41726  009490  968B               	bcf	3979,3,c	;volatile
 41727                           
 41728                           ;i2c.c: 80: delay_us(3);
 41729  009492  0E00               	movlw	0
 41730  009494  0100               	movlb	0	; () banked
 41731  009496  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41732  009498  0E03               	movlw	3
 41733  00949A  6F60               	movwf	delay_us@dly& (0+255),b
 41734  00949C  ECAE  F04D         	call	_delay_us	;wreg free
 41735                           
 41736                           ;i2c.c: 81: return 1;
 41737  0094A0  0E01               	movlw	1
 41738  0094A2  0012               	return	
 41739  0094A4                     __end_of_iic_waite_ack:
 41740                           	opt stack 0
 41741                           tosu	equ	0xFFF
 41742                           tosh	equ	0xFFE
 41743                           tosl	equ	0xFFD
 41744                           pclath	equ	0xFFA
 41745                           tblptru	equ	0xFF8
 41746                           tblptrh	equ	0xFF7
 41747                           tblptrl	equ	0xFF6
 41748                           tablat	equ	0xFF5
 41749                           prodh	equ	0xFF4
 41750                           prodl	equ	0xFF3
 41751                           intcon	equ	0xFF2
 41752                           indf0	equ	0xFEF
 41753                           postinc0	equ	0xFEE
 41754                           fsr0h	equ	0xFEA
 41755                           fsr0l	equ	0xFE9
 41756                           wreg	equ	0xFE8
 41757                           indf1	equ	0xFE7
 41758                           postinc1	equ	0xFE6
 41759                           postdec1	equ	0xFE5
 41760                           plusw1	equ	0xFE3
 41761                           fsr1h	equ	0xFE2
 41762                           fsr1l	equ	0xFE1
 41763                           indf2	equ	0xFDF
 41764                           postinc2	equ	0xFDE
 41765                           postdec2	equ	0xFDD
 41766                           plusw2	equ	0xFDB
 41767                           fsr2h	equ	0xFDA
 41768                           fsr2l	equ	0xFD9
 41769                           status	equ	0xFD8
 41770                           
 41771 ;; *************** function _iic_stop *****************
 41772 ;; Defined at:
 41773 ;;		line 33 in file "src/driver/i2c.c"
 41774 ;; Parameters:    Size  Location     Type
 41775 ;;		None
 41776 ;; Auto vars:     Size  Location     Type
 41777 ;;		None
 41778 ;; Return value:  Size  Location     Type
 41779 ;;                  1    wreg      void 
 41780 ;; Registers used:
 41781 ;;		wreg, status,2, status,0, cstack
 41782 ;; Tracked objects:
 41783 ;;		On entry : 0/0
 41784 ;;		On exit  : 0/0
 41785 ;;		Unchanged: 0/0
 41786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41791 ;;Total ram usage:        0 bytes
 41792 ;; Hardware stack levels used:    1
 41793 ;; Hardware stack levels required when called:    5
 41794 ;; This function calls:
 41795 ;;		_delay_us
 41796 ;; This function is called by:
 41797 ;;		_ads1115_init
 41798 ;;		_at24c02_init
 41799 ;;		_iic_waite_ack
 41800 ;;		_pcf8574_init
 41801 ;;		_ads1115_write_reg
 41802 ;;		_ads1115_read_reg
 41803 ;;		_at24c02_write_n_byte
 41804 ;;		_at24c02_read_n_byte
 41805 ;;		_pcf8574_write_singel
 41806 ;;		_ad421_write_via_pcf8574
 41807 ;; This function uses a non-reentrant model
 41808 ;;
 41809                           
 41810                           	psect	text211
 41811  009C36                     __ptext211:
 41812                           	opt stack 0
 41813  009C36                     _iic_stop:
 41814                           	opt stack 21
 41815                           
 41816                           ;incstack = 0
 41817                           ;i2c.c: 35: do{TRISC &= ~(1<<3);}while(0);;;
 41818  009C36  9694               	bcf	3988,3,c	;volatile
 41819                           
 41820                           ;i2c.c: 36: do{TRISC &= ~(1<<4);}while(0);;;
 41821  009C38  9894               	bcf	3988,4,c	;volatile
 41822                           
 41823                           ;i2c.c: 37: do{LATC &= ~(1<<4);}while(0);;;
 41824  009C3A  988B               	bcf	3979,4,c	;volatile
 41825                           
 41826                           ;i2c.c: 38: delay_us(3);
 41827  009C3C  0E00               	movlw	0
 41828  009C3E  0100               	movlb	0	; () banked
 41829  009C40  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41830  009C42  0E03               	movlw	3
 41831  009C44  6F60               	movwf	delay_us@dly& (0+255),b
 41832  009C46  ECAE  F04D         	call	_delay_us	;wreg free
 41833                           
 41834                           ;i2c.c: 39: do{LATC |= (1<<3);}while(0);;;
 41835  009C4A  868B               	bsf	3979,3,c	;volatile
 41836                           
 41837                           ;i2c.c: 40: delay_us(3);
 41838  009C4C  0E00               	movlw	0
 41839  009C4E  0100               	movlb	0	; () banked
 41840  009C50  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41841  009C52  0E03               	movlw	3
 41842  009C54  6F60               	movwf	delay_us@dly& (0+255),b
 41843  009C56  ECAE  F04D         	call	_delay_us	;wreg free
 41844                           
 41845                           ;i2c.c: 41: do{LATC |= (1<<4);}while(0);;;
 41846  009C5A  888B               	bsf	3979,4,c	;volatile
 41847                           
 41848                           ;i2c.c: 42: delay_us(3);
 41849  009C5C  0E00               	movlw	0
 41850  009C5E  0100               	movlb	0	; () banked
 41851  009C60  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 41852  009C62  0E03               	movlw	3
 41853  009C64  6F60               	movwf	delay_us@dly& (0+255),b
 41854  009C66  ECAE  F04D         	call	_delay_us	;wreg free
 41855  009C6A  0012               	return		;funcret
 41856  009C6C                     __end_of_iic_stop:
 41857                           	opt stack 0
 41858                           tosu	equ	0xFFF
 41859                           tosh	equ	0xFFE
 41860                           tosl	equ	0xFFD
 41861                           pclath	equ	0xFFA
 41862                           tblptru	equ	0xFF8
 41863                           tblptrh	equ	0xFF7
 41864                           tblptrl	equ	0xFF6
 41865                           tablat	equ	0xFF5
 41866                           prodh	equ	0xFF4
 41867                           prodl	equ	0xFF3
 41868                           intcon	equ	0xFF2
 41869                           indf0	equ	0xFEF
 41870                           postinc0	equ	0xFEE
 41871                           fsr0h	equ	0xFEA
 41872                           fsr0l	equ	0xFE9
 41873                           wreg	equ	0xFE8
 41874                           indf1	equ	0xFE7
 41875                           postinc1	equ	0xFE6
 41876                           postdec1	equ	0xFE5
 41877                           plusw1	equ	0xFE3
 41878                           fsr1h	equ	0xFE2
 41879                           fsr1l	equ	0xFE1
 41880                           indf2	equ	0xFDF
 41881                           postinc2	equ	0xFDE
 41882                           postdec2	equ	0xFDD
 41883                           plusw2	equ	0xFDB
 41884                           fsr2h	equ	0xFDA
 41885                           fsr2l	equ	0xFD9
 41886                           status	equ	0xFD8
 41887                           
 41888 ;; *************** function _iic_received_byte_if_ack *****************
 41889 ;; Defined at:
 41890 ;;		line 130 in file "src/driver/i2c.c"
 41891 ;; Parameters:    Size  Location     Type
 41892 ;;  ack             1    wreg     unsigned char 
 41893 ;; Auto vars:     Size  Location     Type
 41894 ;;  ack             1    6[BANK0 ] unsigned char 
 41895 ;;  ret             1    7[BANK0 ] unsigned char 
 41896 ;; Return value:  Size  Location     Type
 41897 ;;                  1    wreg      unsigned char 
 41898 ;; Registers used:
 41899 ;;		wreg, status,2, status,0, cstack
 41900 ;; Tracked objects:
 41901 ;;		On entry : 0/0
 41902 ;;		On exit  : 0/0
 41903 ;;		Unchanged: 0/0
 41904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41908 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41909 ;;Total ram usage:        2 bytes
 41910 ;; Hardware stack levels used:    1
 41911 ;; Hardware stack levels required when called:    6
 41912 ;; This function calls:
 41913 ;;		_iic_received_byte
 41914 ;;		_iic_send_ack
 41915 ;; This function is called by:
 41916 ;;		_ads1115_init
 41917 ;;		_at24c02_init
 41918 ;;		_pcf8574_init
 41919 ;;		_ads1115_read_reg
 41920 ;;		_at24c02_read_n_byte
 41921 ;; This function uses a non-reentrant model
 41922 ;;
 41923                           
 41924                           	psect	text212
 41925  00A13E                     __ptext212:
 41926                           	opt stack 0
 41927  00A13E                     _iic_received_byte_if_ack:
 41928                           	opt stack 19
 41929                           
 41930                           ;incstack = 0
 41931                           ;iic_received_byte_if_ack@ack stored from wreg
 41932  00A13E  0100               	movlb	0	; () banked
 41933  00A140  6F66               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 41934                           
 41935                           ;i2c.c: 132: uint8_t ret=0;
 41936  00A142  0E00               	movlw	0
 41937  00A144  0100               	movlb	0	; () banked
 41938  00A146  6F67               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 41939                           
 41940                           ; BSR set to: 0
 41941                           ;i2c.c: 133: ret=iic_received_byte();
 41942  00A148  EC97  F047         	call	_iic_received_byte	;wreg free
 41943  00A14C  0100               	movlb	0	; () banked
 41944  00A14E  6F67               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 41945                           
 41946                           ; BSR set to: 0
 41947                           ;i2c.c: 134: iic_send_ack(ack);
 41948  00A150  0100               	movlb	0	; () banked
 41949  00A152  5166               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 41950  00A154  ECD1  F04A         	call	_iic_send_ack
 41951                           
 41952                           ;i2c.c: 135: return ret;
 41953  00A158  0100               	movlb	0	; () banked
 41954  00A15A  5167               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 41955  00A15C  0012               	return	
 41956  00A15E                     __end_of_iic_received_byte_if_ack:
 41957                           	opt stack 0
 41958                           tosu	equ	0xFFF
 41959                           tosh	equ	0xFFE
 41960                           tosl	equ	0xFFD
 41961                           pclath	equ	0xFFA
 41962                           tblptru	equ	0xFF8
 41963                           tblptrh	equ	0xFF7
 41964                           tblptrl	equ	0xFF6
 41965                           tablat	equ	0xFF5
 41966                           prodh	equ	0xFF4
 41967                           prodl	equ	0xFF3
 41968                           intcon	equ	0xFF2
 41969                           indf0	equ	0xFEF
 41970                           postinc0	equ	0xFEE
 41971                           fsr0h	equ	0xFEA
 41972                           fsr0l	equ	0xFE9
 41973                           wreg	equ	0xFE8
 41974                           indf1	equ	0xFE7
 41975                           postinc1	equ	0xFE6
 41976                           postdec1	equ	0xFE5
 41977                           plusw1	equ	0xFE3
 41978                           fsr1h	equ	0xFE2
 41979                           fsr1l	equ	0xFE1
 41980                           indf2	equ	0xFDF
 41981                           postinc2	equ	0xFDE
 41982                           postdec2	equ	0xFDD
 41983                           plusw2	equ	0xFDB
 41984                           fsr2h	equ	0xFDA
 41985                           fsr2l	equ	0xFD9
 41986                           status	equ	0xFD8
 41987                           
 41988 ;; *************** function _iic_send_ack *****************
 41989 ;; Defined at:
 41990 ;;		line 45 in file "src/driver/i2c.c"
 41991 ;; Parameters:    Size  Location     Type
 41992 ;;  ack             1    wreg     char 
 41993 ;; Auto vars:     Size  Location     Type
 41994 ;;  ack             1   31[COMRAM] char 
 41995 ;; Return value:  Size  Location     Type
 41996 ;;                  1    wreg      void 
 41997 ;; Registers used:
 41998 ;;		wreg, status,2, status,0, cstack
 41999 ;; Tracked objects:
 42000 ;;		On entry : 0/0
 42001 ;;		On exit  : 0/0
 42002 ;;		Unchanged: 0/0
 42003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42008 ;;Total ram usage:        1 bytes
 42009 ;; Hardware stack levels used:    1
 42010 ;; Hardware stack levels required when called:    5
 42011 ;; This function calls:
 42012 ;;		_delay_us
 42013 ;; This function is called by:
 42014 ;;		_iic_received_byte_if_ack
 42015 ;; This function uses a non-reentrant model
 42016 ;;
 42017                           
 42018                           	psect	text213
 42019  0095A2                     __ptext213:
 42020                           	opt stack 0
 42021  0095A2                     _iic_send_ack:
 42022                           	opt stack 19
 42023                           
 42024                           ; BSR set to: 0
 42025                           ;incstack = 0
 42026                           ;iic_send_ack@ack stored from wreg
 42027  0095A2  6E20               	movwf	iic_send_ack@ack,c
 42028                           
 42029                           ;i2c.c: 47: do{TRISC &= ~(1<<3);}while(0);;;
 42030  0095A4  9694               	bcf	3988,3,c	;volatile
 42031                           
 42032                           ;i2c.c: 48: do{TRISC &= ~(1<<4);}while(0);;;
 42033  0095A6  9894               	bcf	3988,4,c	;volatile
 42034                           
 42035                           ;i2c.c: 49: do{LATC &= ~(1<<3);}while(0);;;
 42036  0095A8  968B               	bcf	3979,3,c	;volatile
 42037                           
 42038                           ;i2c.c: 50: delay_us(3);
 42039  0095AA  0E00               	movlw	0
 42040  0095AC  0100               	movlb	0	; () banked
 42041  0095AE  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42042  0095B0  0E03               	movlw	3
 42043  0095B2  6F60               	movwf	delay_us@dly& (0+255),b
 42044  0095B4  ECAE  F04D         	call	_delay_us	;wreg free
 42045                           
 42046                           ;i2c.c: 51: if(ack){
 42047  0095B8  5020               	movf	iic_send_ack@ack,w,c
 42048  0095BA  B4D8               	btfsc	status,2,c
 42049  0095BC  D002               	goto	l13214
 42050                           
 42051                           ;i2c.c: 52: do{LATC |= (1<<4);}while(0);;;
 42052  0095BE  888B               	bsf	3979,4,c	;volatile
 42053                           
 42054                           ;i2c.c: 53: }else{
 42055  0095C0  D001               	goto	l13216
 42056  0095C2                     l13214:
 42057  0095C2  988B               	bcf	3979,4,c	;volatile
 42058  0095C4                     l13216:
 42059                           
 42060                           ;i2c.c: 55: }
 42061                           ;i2c.c: 56: delay_us(3);
 42062  0095C4  0E00               	movlw	0
 42063  0095C6  0100               	movlb	0	; () banked
 42064  0095C8  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42065  0095CA  0E03               	movlw	3
 42066  0095CC  6F60               	movwf	delay_us@dly& (0+255),b
 42067  0095CE  ECAE  F04D         	call	_delay_us	;wreg free
 42068                           
 42069                           ;i2c.c: 57: do{LATC |= (1<<3);}while(0);;;
 42070  0095D2  868B               	bsf	3979,3,c	;volatile
 42071                           
 42072                           ;i2c.c: 58: delay_us(3);
 42073  0095D4  0E00               	movlw	0
 42074  0095D6  0100               	movlb	0	; () banked
 42075  0095D8  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42076  0095DA  0E03               	movlw	3
 42077  0095DC  6F60               	movwf	delay_us@dly& (0+255),b
 42078  0095DE  ECAE  F04D         	call	_delay_us	;wreg free
 42079                           
 42080                           ;i2c.c: 59: do{LATC &= ~(1<<3);}while(0);;;
 42081  0095E2  968B               	bcf	3979,3,c	;volatile
 42082                           
 42083                           ;i2c.c: 60: delay_us(3);
 42084  0095E4  0E00               	movlw	0
 42085  0095E6  0100               	movlb	0	; () banked
 42086  0095E8  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42087  0095EA  0E03               	movlw	3
 42088  0095EC  6F60               	movwf	delay_us@dly& (0+255),b
 42089  0095EE  ECAE  F04D         	call	_delay_us	;wreg free
 42090  0095F2  0012               	return		;funcret
 42091  0095F4                     __end_of_iic_send_ack:
 42092                           	opt stack 0
 42093                           tosu	equ	0xFFF
 42094                           tosh	equ	0xFFE
 42095                           tosl	equ	0xFFD
 42096                           pclath	equ	0xFFA
 42097                           tblptru	equ	0xFF8
 42098                           tblptrh	equ	0xFF7
 42099                           tblptrl	equ	0xFF6
 42100                           tablat	equ	0xFF5
 42101                           prodh	equ	0xFF4
 42102                           prodl	equ	0xFF3
 42103                           intcon	equ	0xFF2
 42104                           indf0	equ	0xFEF
 42105                           postinc0	equ	0xFEE
 42106                           fsr0h	equ	0xFEA
 42107                           fsr0l	equ	0xFE9
 42108                           wreg	equ	0xFE8
 42109                           indf1	equ	0xFE7
 42110                           postinc1	equ	0xFE6
 42111                           postdec1	equ	0xFE5
 42112                           plusw1	equ	0xFE3
 42113                           fsr1h	equ	0xFE2
 42114                           fsr1l	equ	0xFE1
 42115                           indf2	equ	0xFDF
 42116                           postinc2	equ	0xFDE
 42117                           postdec2	equ	0xFDD
 42118                           plusw2	equ	0xFDB
 42119                           fsr2h	equ	0xFDA
 42120                           fsr2l	equ	0xFD9
 42121                           status	equ	0xFD8
 42122                           
 42123 ;; *************** function _iic_received_byte *****************
 42124 ;; Defined at:
 42125 ;;		line 110 in file "src/driver/i2c.c"
 42126 ;; Parameters:    Size  Location     Type
 42127 ;;		None
 42128 ;; Auto vars:     Size  Location     Type
 42129 ;;  i               1    5[BANK0 ] unsigned char 
 42130 ;;  ret             1    4[BANK0 ] unsigned char 
 42131 ;; Return value:  Size  Location     Type
 42132 ;;                  1    wreg      unsigned char 
 42133 ;; Registers used:
 42134 ;;		wreg, status,2, status,0, cstack
 42135 ;; Tracked objects:
 42136 ;;		On entry : 0/0
 42137 ;;		On exit  : 0/0
 42138 ;;		Unchanged: 0/0
 42139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42143 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42144 ;;Total ram usage:        2 bytes
 42145 ;; Hardware stack levels used:    1
 42146 ;; Hardware stack levels required when called:    5
 42147 ;; This function calls:
 42148 ;;		_delay_us
 42149 ;; This function is called by:
 42150 ;;		_iic_received_byte_if_ack
 42151 ;; This function uses a non-reentrant model
 42152 ;;
 42153                           
 42154                           	psect	text214
 42155  008F2E                     __ptext214:
 42156                           	opt stack 0
 42157  008F2E                     _iic_received_byte:
 42158                           	opt stack 19
 42159                           
 42160                           ;i2c.c: 112: uint8_t i;
 42161                           ;i2c.c: 113: uint8_t ret=0;
 42162                           
 42163                           ;incstack = 0
 42164  008F2E  0E00               	movlw	0
 42165  008F30  0100               	movlb	0	; () banked
 42166  008F32  6F64               	movwf	iic_received_byte@ret& (0+255),b
 42167                           
 42168                           ; BSR set to: 0
 42169                           
 42170                           ; BSR set to: 0
 42171                           
 42172                           ;i2c.c: 114: do{TRISC &= ~(1<<3);}while(0);;;
 42173  008F34  9694               	bcf	3988,3,c	;volatile
 42174                           
 42175                           ; BSR set to: 0
 42176                           
 42177                           ; BSR set to: 0
 42178                           
 42179                           ;i2c.c: 115: do{TRISC |= (1<<4);}while(0);;;
 42180                           
 42181                           ; BSR set to: 0
 42182  008F36  8894               	bsf	3988,4,c	;volatile
 42183                           
 42184                           ; BSR set to: 0
 42185                           ;i2c.c: 116: for(i=0;i<8;i++){
 42186  008F38  0E00               	movlw	0
 42187  008F3A  0100               	movlb	0	; () banked
 42188  008F3C  6F65               	movwf	iic_received_byte@i& (0+255),b
 42189  008F3E                     l13264:
 42190                           
 42191                           ; BSR set to: 0
 42192  008F3E  0E07               	movlw	7
 42193  008F40  0100               	movlb	0	; () banked
 42194  008F42  6565               	cpfsgt	iic_received_byte@i& (0+255),b
 42195  008F44  D001               	goto	l13268
 42196  008F46  D01A               	goto	l13284
 42197  008F48                     l13268:
 42198                           
 42199                           ; BSR set to: 0
 42200                           ;i2c.c: 117: ret<<=1;
 42201  008F48  0100               	movlb	0	; () banked
 42202  008F4A  90D8               	bcf	status,0,c
 42203  008F4C  3764               	rlcf	iic_received_byte@ret& (0+255),f,b
 42204                           
 42205                           ; BSR set to: 0
 42206                           
 42207                           ; BSR set to: 0
 42208                           
 42209                           ;i2c.c: 118: do{LATC &= ~(1<<3);}while(0);;;
 42210  008F4E  968B               	bcf	3979,3,c	;volatile
 42211                           
 42212                           ; BSR set to: 0
 42213                           ;i2c.c: 119: delay_us(3);
 42214                           
 42215                           ; BSR set to: 0
 42216  008F50  0E00               	movlw	0
 42217  008F52  0100               	movlb	0	; () banked
 42218  008F54  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42219  008F56  0E03               	movlw	3
 42220  008F58  6F60               	movwf	delay_us@dly& (0+255),b
 42221  008F5A  ECAE  F04D         	call	_delay_us	;wreg free
 42222                           
 42223                           ;i2c.c: 120: do{LATC |= (1<<3);}while(0);;;
 42224  008F5E  868B               	bsf	3979,3,c	;volatile
 42225                           
 42226                           ;i2c.c: 121: delay_us(3);
 42227  008F60  0E00               	movlw	0
 42228  008F62  0100               	movlb	0	; () banked
 42229  008F64  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42230  008F66  0E03               	movlw	3
 42231  008F68  6F60               	movwf	delay_us@dly& (0+255),b
 42232  008F6A  ECAE  F04D         	call	_delay_us	;wreg free
 42233                           
 42234                           ;i2c.c: 122: if((PORTC & (1<<4))){
 42235  008F6E  A882               	btfss	3970,4,c	;volatile
 42236  008F70  D002               	goto	l1673
 42237                           
 42238                           ;i2c.c: 123: ret|=1;
 42239  008F72  0100               	movlb	0	; () banked
 42240  008F74  8164               	bsf	iic_received_byte@ret& (0+255),0,b
 42241  008F76                     l1673:
 42242  008F76  0100               	movlb	0	; () banked
 42243  008F78  2B65               	incf	iic_received_byte@i& (0+255),f,b
 42244  008F7A  D7E1               	goto	l13264
 42245  008F7C                     l13284:
 42246                           
 42247                           ; BSR set to: 0
 42248  008F7C  968B               	bcf	3979,3,c	;volatile
 42249                           
 42250                           ; BSR set to: 0
 42251                           ;i2c.c: 127: delay_us(3);
 42252                           
 42253                           ; BSR set to: 0
 42254  008F7E  0E00               	movlw	0
 42255  008F80  0100               	movlb	0	; () banked
 42256  008F82  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 42257  008F84  0E03               	movlw	3
 42258  008F86  6F60               	movwf	delay_us@dly& (0+255),b
 42259  008F88  ECAE  F04D         	call	_delay_us	;wreg free
 42260                           
 42261                           ;i2c.c: 128: return ret;
 42262  008F8C  0100               	movlb	0	; () banked
 42263  008F8E  5164               	movf	iic_received_byte@ret& (0+255),w,b
 42264  008F90  0012               	return	
 42265  008F92                     __end_of_iic_received_byte:
 42266                           	opt stack 0
 42267                           tosu	equ	0xFFF
 42268                           tosh	equ	0xFFE
 42269                           tosl	equ	0xFFD
 42270                           pclath	equ	0xFFA
 42271                           tblptru	equ	0xFF8
 42272                           tblptrh	equ	0xFF7
 42273                           tblptrl	equ	0xFF6
 42274                           tablat	equ	0xFF5
 42275                           prodh	equ	0xFF4
 42276                           prodl	equ	0xFF3
 42277                           intcon	equ	0xFF2
 42278                           indf0	equ	0xFEF
 42279                           postinc0	equ	0xFEE
 42280                           fsr0h	equ	0xFEA
 42281                           fsr0l	equ	0xFE9
 42282                           wreg	equ	0xFE8
 42283                           indf1	equ	0xFE7
 42284                           postinc1	equ	0xFE6
 42285                           postdec1	equ	0xFE5
 42286                           plusw1	equ	0xFE3
 42287                           fsr1h	equ	0xFE2
 42288                           fsr1l	equ	0xFE1
 42289                           indf2	equ	0xFDF
 42290                           postinc2	equ	0xFDE
 42291                           postdec2	equ	0xFDD
 42292                           plusw2	equ	0xFDB
 42293                           fsr2h	equ	0xFDA
 42294                           fsr2l	equ	0xFD9
 42295                           status	equ	0xFD8
 42296                           
 42297 ;; *************** function _delay_us *****************
 42298 ;; Defined at:
 42299 ;;		line 82 in file "src/soc/clock.c"
 42300 ;; Parameters:    Size  Location     Type
 42301 ;;  dly             2    0[BANK0 ] unsigned int 
 42302 ;; Auto vars:     Size  Location     Type
 42303 ;;  i               2    2[BANK0 ] unsigned int 
 42304 ;; Return value:  Size  Location     Type
 42305 ;;                  1    wreg      void 
 42306 ;; Registers used:
 42307 ;;		wreg, status,2, status,0
 42308 ;; Tracked objects:
 42309 ;;		On entry : 0/0
 42310 ;;		On exit  : 0/0
 42311 ;;		Unchanged: 0/0
 42312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42313 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42316 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42317 ;;Total ram usage:        4 bytes
 42318 ;; Hardware stack levels used:    1
 42319 ;; Hardware stack levels required when called:    4
 42320 ;; This function calls:
 42321 ;;		Nothing
 42322 ;; This function is called by:
 42323 ;;		_iic_start
 42324 ;;		_iic_stop
 42325 ;;		_iic_send_ack
 42326 ;;		_iic_waite_ack
 42327 ;;		_iic_send_byte
 42328 ;;		_iic_received_byte
 42329 ;;		_in_adc_start_and_read
 42330 ;;		_delay_ms
 42331 ;; This function uses a non-reentrant model
 42332 ;;
 42333                           
 42334                           	psect	text215
 42335  009B5C                     __ptext215:
 42336                           	opt stack 0
 42337  009B5C                     _delay_us:
 42338                           	opt stack 22
 42339                           
 42340                           ;clock.c: 84: uint16_t i;
 42341                           ;clock.c: 85: for(i=0;i<dly;i++){
 42342                           
 42343                           ; BSR set to: 0
 42344                           ;incstack = 0
 42345  009B5C  0E00               	movlw	0
 42346  009B5E  0100               	movlb	0	; () banked
 42347  009B60  6F63               	movwf	(delay_us@i+1)& (0+255),b
 42348  009B62  0E00               	movlw	0
 42349  009B64  6F62               	movwf	delay_us@i& (0+255),b
 42350  009B66  D00B               	goto	l13138
 42351  009B68                     l2266:
 42352                           
 42353                           ; BSR set to: 0
 42354                           ;clock.c: 86: __nop();
 42355  009B68  F000               	nop	
 42356                           
 42357                           ;clock.c: 87: __nop();
 42358  009B6A  F000               	nop	
 42359                           
 42360                           ;clock.c: 88: __nop();
 42361  009B6C  F000               	nop	
 42362                           
 42363                           ;clock.c: 89: __nop();
 42364  009B6E  F000               	nop	
 42365                           
 42366                           ;clock.c: 91: __nop();
 42367  009B70  F000               	nop	
 42368                           
 42369                           ;clock.c: 92: __nop();
 42370  009B72  F000               	nop	
 42371                           
 42372                           ;clock.c: 93: __nop();
 42373  009B74  F000               	nop	
 42374                           
 42375                           ;clock.c: 94: __nop();
 42376  009B76  F000               	nop	
 42377  009B78  0100               	movlb	0	; () banked
 42378  009B7A  4B62               	infsnz	delay_us@i& (0+255),f,b
 42379  009B7C  2B63               	incf	(delay_us@i+1)& (0+255),f,b
 42380  009B7E                     l13138:
 42381                           
 42382                           ; BSR set to: 0
 42383  009B7E  0100               	movlb	0	; () banked
 42384  009B80  5160               	movf	delay_us@dly& (0+255),w,b
 42385  009B82  0100               	movlb	0	; () banked
 42386  009B84  5D62               	subwf	delay_us@i& (0+255),w,b
 42387  009B86  0100               	movlb	0	; () banked
 42388  009B88  5161               	movf	(delay_us@dly+1)& (0+255),w,b
 42389  009B8A  0100               	movlb	0	; () banked
 42390  009B8C  5963               	subwfb	(delay_us@i+1)& (0+255),w,b
 42391  009B8E  B0D8               	btfsc	status,0,c
 42392  009B90  0012               	return	
 42393  009B92  D7EA               	goto	l2266
 42394  009B94                     __end_of_delay_us:
 42395                           	opt stack 0
 42396                           tosu	equ	0xFFF
 42397                           tosh	equ	0xFFE
 42398                           tosl	equ	0xFFD
 42399                           pclath	equ	0xFFA
 42400                           tblptru	equ	0xFF8
 42401                           tblptrh	equ	0xFF7
 42402                           tblptrl	equ	0xFF6
 42403                           tablat	equ	0xFF5
 42404                           prodh	equ	0xFF4
 42405                           prodl	equ	0xFF3
 42406                           intcon	equ	0xFF2
 42407                           indf0	equ	0xFEF
 42408                           postinc0	equ	0xFEE
 42409                           fsr0h	equ	0xFEA
 42410                           fsr0l	equ	0xFE9
 42411                           wreg	equ	0xFE8
 42412                           indf1	equ	0xFE7
 42413                           postinc1	equ	0xFE6
 42414                           postdec1	equ	0xFE5
 42415                           plusw1	equ	0xFE3
 42416                           fsr1h	equ	0xFE2
 42417                           fsr1l	equ	0xFE1
 42418                           indf2	equ	0xFDF
 42419                           postinc2	equ	0xFDE
 42420                           postdec2	equ	0xFDD
 42421                           plusw2	equ	0xFDB
 42422                           fsr2h	equ	0xFDA
 42423                           fsr2l	equ	0xFD9
 42424                           status	equ	0xFD8
 42425                           
 42426 ;; *************** function _at24c02_init *****************
 42427 ;; Defined at:
 42428 ;;		line 13 in file "src/driver/ex_eeprom.c"
 42429 ;; Parameters:    Size  Location     Type
 42430 ;;  pAt24c02        2    0[BANK0 ] PTR struct .
 42431 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 42432 ;;  slv             1    2[BANK0 ] unsigned char 
 42433 ;; Auto vars:     Size  Location     Type
 42434 ;;		None
 42435 ;; Return value:  Size  Location     Type
 42436 ;;                  1    wreg      void 
 42437 ;; Registers used:
 42438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42439 ;; Tracked objects:
 42440 ;;		On entry : 0/0
 42441 ;;		On exit  : 0/0
 42442 ;;		Unchanged: 0/0
 42443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42444 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42447 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42448 ;;Total ram usage:        3 bytes
 42449 ;; Hardware stack levels used:    1
 42450 ;; Hardware stack levels required when called:    4
 42451 ;; This function calls:
 42452 ;;		Nothing
 42453 ;; This function is called by:
 42454 ;;		_calib_data_init_diff_pr
 42455 ;;		_calib_data_init_pr
 42456 ;;		_at24c02_init_all_chip
 42457 ;; This function uses a non-reentrant model
 42458 ;;
 42459                           
 42460                           	psect	text216
 42461  008550                     __ptext216:
 42462                           	opt stack 0
 42463  008550                     _at24c02_init:
 42464                           	opt stack 24
 42465                           
 42466                           ;ex_eeprom.c: 15: pAt24c02->slaveAddr=slv;
 42467                           
 42468                           ; BSR set to: 0
 42469                           ;incstack = 0
 42470  008550  C060  FFD9         	movff	at24c02_init@pAt24c02,fsr2l
 42471  008554  C061  FFDA         	movff	at24c02_init@pAt24c02+1,fsr2h
 42472  008558  C062  FFDF         	movff	at24c02_init@slv,indf2
 42473                           
 42474                           ;ex_eeprom.c: 16: pAt24c02->iic_start=iic_start;
 42475  00855C  0100               	movlb	0	; () banked
 42476  00855E  EE20 F001          	lfsr	2,1
 42477  008562  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42478  008564  26D9               	addwf	fsr2l,f,c
 42479  008566  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42480  008568  22DA               	addwfc	fsr2h,f,c
 42481  00856A  0E24               	movlw	low _iic_start
 42482  00856C  6EDE               	movwf	postinc2,c
 42483  00856E  0E9B               	movlw	high _iic_start
 42484  008570  6EDD               	movwf	postdec2,c
 42485                           
 42486                           ; BSR set to: 0
 42487                           ;ex_eeprom.c: 17: pAt24c02->iic_stop=iic_stop;
 42488  008572  0100               	movlb	0	; () banked
 42489  008574  EE20 F003          	lfsr	2,3
 42490  008578  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42491  00857A  26D9               	addwf	fsr2l,f,c
 42492  00857C  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42493  00857E  22DA               	addwfc	fsr2h,f,c
 42494  008580  0E36               	movlw	low _iic_stop
 42495  008582  6EDE               	movwf	postinc2,c
 42496  008584  0E9C               	movlw	high _iic_stop
 42497  008586  6EDD               	movwf	postdec2,c
 42498                           
 42499                           ; BSR set to: 0
 42500                           ;ex_eeprom.c: 18: pAt24c02->iic_send_byte=iic_send_byte;
 42501  008588  0100               	movlb	0	; () banked
 42502  00858A  EE20 F005          	lfsr	2,5
 42503  00858E  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42504  008590  26D9               	addwf	fsr2l,f,c
 42505  008592  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42506  008594  22DA               	addwfc	fsr2h,f,c
 42507  008596  0EA8               	movlw	low _iic_send_byte
 42508  008598  6EDE               	movwf	postinc2,c
 42509  00859A  0E87               	movlw	high _iic_send_byte
 42510  00859C  6EDD               	movwf	postdec2,c
 42511                           
 42512                           ; BSR set to: 0
 42513                           ;ex_eeprom.c: 20: pAt24c02->iic_waite_ack=iic_waite_ack;
 42514  00859E  0100               	movlb	0	; () banked
 42515  0085A0  EE20 F007          	lfsr	2,7
 42516  0085A4  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42517  0085A6  26D9               	addwf	fsr2l,f,c
 42518  0085A8  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42519  0085AA  22DA               	addwfc	fsr2h,f,c
 42520  0085AC  0E4C               	movlw	low _iic_waite_ack
 42521  0085AE  6EDE               	movwf	postinc2,c
 42522  0085B0  0E94               	movlw	high _iic_waite_ack
 42523  0085B2  6EDD               	movwf	postdec2,c
 42524                           
 42525                           ; BSR set to: 0
 42526                           ;ex_eeprom.c: 22: pAt24c02->iic_received_byte_if_ack=iic_received_byte_if_ack;
 42527  0085B4  0100               	movlb	0	; () banked
 42528  0085B6  EE20 F009          	lfsr	2,9
 42529  0085BA  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 42530  0085BC  26D9               	addwf	fsr2l,f,c
 42531  0085BE  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 42532  0085C0  22DA               	addwfc	fsr2h,f,c
 42533  0085C2  0E3E               	movlw	low _iic_received_byte_if_ack
 42534  0085C4  6EDE               	movwf	postinc2,c
 42535  0085C6  0EA1               	movlw	high _iic_received_byte_if_ack
 42536  0085C8  6EDD               	movwf	postdec2,c
 42537                           
 42538                           ; BSR set to: 0
 42539  0085CA  0012               	return		;funcret
 42540  0085CC                     __end_of_at24c02_init:
 42541                           	opt stack 0
 42542                           tosu	equ	0xFFF
 42543                           tosh	equ	0xFFE
 42544                           tosl	equ	0xFFD
 42545                           pclath	equ	0xFFA
 42546                           tblptru	equ	0xFF8
 42547                           tblptrh	equ	0xFF7
 42548                           tblptrl	equ	0xFF6
 42549                           tablat	equ	0xFF5
 42550                           prodh	equ	0xFF4
 42551                           prodl	equ	0xFF3
 42552                           intcon	equ	0xFF2
 42553                           indf0	equ	0xFEF
 42554                           postinc0	equ	0xFEE
 42555                           fsr0h	equ	0xFEA
 42556                           fsr0l	equ	0xFE9
 42557                           wreg	equ	0xFE8
 42558                           indf1	equ	0xFE7
 42559                           postinc1	equ	0xFE6
 42560                           postdec1	equ	0xFE5
 42561                           plusw1	equ	0xFE3
 42562                           fsr1h	equ	0xFE2
 42563                           fsr1l	equ	0xFE1
 42564                           indf2	equ	0xFDF
 42565                           postinc2	equ	0xFDE
 42566                           postdec2	equ	0xFDD
 42567                           plusw2	equ	0xFDB
 42568                           fsr2h	equ	0xFDA
 42569                           fsr2l	equ	0xFD9
 42570                           status	equ	0xFD8
 42571                           
 42572 ;; *************** function _ads1115_init_all_chip *****************
 42573 ;; Defined at:
 42574 ;;		line 112 in file "src/driver/ads1115.c"
 42575 ;; Parameters:    Size  Location     Type
 42576 ;;		None
 42577 ;; Auto vars:     Size  Location     Type
 42578 ;;		None
 42579 ;; Return value:  Size  Location     Type
 42580 ;;                  1    wreg      void 
 42581 ;; Registers used:
 42582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42583 ;; Tracked objects:
 42584 ;;		On entry : 0/0
 42585 ;;		On exit  : 0/0
 42586 ;;		Unchanged: 0/0
 42587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42592 ;;Total ram usage:        0 bytes
 42593 ;; Hardware stack levels used:    1
 42594 ;; Hardware stack levels required when called:    5
 42595 ;; This function calls:
 42596 ;;		_ads1115_init
 42597 ;; This function is called by:
 42598 ;;		_main
 42599 ;; This function uses a non-reentrant model
 42600 ;;
 42601                           
 42602                           	psect	text217
 42603  00998E                     __ptext217:
 42604                           	opt stack 0
 42605  00998E                     _ads1115_init_all_chip:
 42606                           	opt stack 25
 42607                           
 42608                           ;ads1115.c: 115: pAds1115PrObj= &ads1115Chip0;
 42609                           
 42610                           ; BSR set to: 0
 42611                           ;incstack = 0
 42612  00998E  0E72               	movlw	low _ads1115Chip0
 42613  009990  0100               	movlb	0	; () banked
 42614  009992  6FEC               	movwf	_pAds1115PrObj& (0+255),b
 42615  009994  0E01               	movlw	high _ads1115Chip0
 42616  009996  0100               	movlb	0	; () banked
 42617  009998  6FED               	movwf	(_pAds1115PrObj+1)& (0+255),b
 42618                           
 42619                           ; BSR set to: 0
 42620                           ;ads1115.c: 116: ads1115_init(pAds1115PrObj,(0x90));
 42621  00999A  C0EC  F060         	movff	_pAds1115PrObj,ads1115_init@pAds1115
 42622  00999E  C0ED  F061         	movff	_pAds1115PrObj+1,ads1115_init@pAds1115+1
 42623  0099A2  0E90               	movlw	144
 42624  0099A4  0100               	movlb	0	; () banked
 42625  0099A6  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 42626  0099A8  ECC2  F03C         	call	_ads1115_init	;wreg free
 42627                           
 42628                           ;ads1115.c: 118: pAds1115DiffPrObj=&ads1115Chip1;
 42629  0099AC  0EF0               	movlw	low _ads1115Chip1
 42630  0099AE  0100               	movlb	0	; () banked
 42631  0099B0  6FEE               	movwf	_pAds1115DiffPrObj& (0+255),b
 42632  0099B2  0E02               	movlw	high _ads1115Chip1
 42633  0099B4  0100               	movlb	0	; () banked
 42634  0099B6  6FEF               	movwf	(_pAds1115DiffPrObj+1)& (0+255),b
 42635                           
 42636                           ;ads1115.c: 119: ads1115_init(pAds1115DiffPrObj,(0x92));
 42637  0099B8  C0EE  F060         	movff	_pAds1115DiffPrObj,ads1115_init@pAds1115
 42638  0099BC  C0EF  F061         	movff	_pAds1115DiffPrObj+1,ads1115_init@pAds1115+1
 42639  0099C0  0E92               	movlw	146
 42640  0099C2  0100               	movlb	0	; () banked
 42641  0099C4  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 42642  0099C6  ECC2  F03C         	call	_ads1115_init	;wreg free
 42643  0099CA  0012               	return		;funcret
 42644  0099CC                     __end_of_ads1115_init_all_chip:
 42645                           	opt stack 0
 42646                           tosu	equ	0xFFF
 42647                           tosh	equ	0xFFE
 42648                           tosl	equ	0xFFD
 42649                           pclath	equ	0xFFA
 42650                           tblptru	equ	0xFF8
 42651                           tblptrh	equ	0xFF7
 42652                           tblptrl	equ	0xFF6
 42653                           tablat	equ	0xFF5
 42654                           prodh	equ	0xFF4
 42655                           prodl	equ	0xFF3
 42656                           intcon	equ	0xFF2
 42657                           indf0	equ	0xFEF
 42658                           postinc0	equ	0xFEE
 42659                           fsr0h	equ	0xFEA
 42660                           fsr0l	equ	0xFE9
 42661                           wreg	equ	0xFE8
 42662                           indf1	equ	0xFE7
 42663                           postinc1	equ	0xFE6
 42664                           postdec1	equ	0xFE5
 42665                           plusw1	equ	0xFE3
 42666                           fsr1h	equ	0xFE2
 42667                           fsr1l	equ	0xFE1
 42668                           indf2	equ	0xFDF
 42669                           postinc2	equ	0xFDE
 42670                           postdec2	equ	0xFDD
 42671                           plusw2	equ	0xFDB
 42672                           fsr2h	equ	0xFDA
 42673                           fsr2l	equ	0xFD9
 42674                           status	equ	0xFD8
 42675                           
 42676 ;; *************** function _ads1115_init *****************
 42677 ;; Defined at:
 42678 ;;		line 5 in file "src/driver/ads1115.c"
 42679 ;; Parameters:    Size  Location     Type
 42680 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 42681 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 42682 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 42683 ;; Auto vars:     Size  Location     Type
 42684 ;;		None
 42685 ;; Return value:  Size  Location     Type
 42686 ;;                  1    wreg      void 
 42687 ;; Registers used:
 42688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42689 ;; Tracked objects:
 42690 ;;		On entry : 0/0
 42691 ;;		On exit  : 0/0
 42692 ;;		Unchanged: 0/0
 42693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42694 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42697 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42698 ;;Total ram usage:        3 bytes
 42699 ;; Hardware stack levels used:    1
 42700 ;; Hardware stack levels required when called:    4
 42701 ;; This function calls:
 42702 ;;		Nothing
 42703 ;; This function is called by:
 42704 ;;		_ads1115_init_all_chip
 42705 ;; This function uses a non-reentrant model
 42706 ;;
 42707                           
 42708                           	psect	text218
 42709  007984                     __ptext218:
 42710                           	opt stack 0
 42711  007984                     _ads1115_init:
 42712                           	opt stack 25
 42713                           
 42714                           ;ads1115.c: 7: pAds1115->chip=ADS1115;
 42715                           
 42716                           ;incstack = 0
 42717  007984  C060  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 42718  007988  C061  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 42719  00798C  0E05               	movlw	5
 42720  00798E  6EDF               	movwf	indf2,c
 42721                           
 42722                           ;ads1115.c: 8: pAds1115->slaveAddr=slvaddr;
 42723  007990  0100               	movlb	0	; () banked
 42724  007992  EE20 F001          	lfsr	2,1
 42725  007996  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42726  007998  26D9               	addwf	fsr2l,f,c
 42727  00799A  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42728  00799C  22DA               	addwfc	fsr2h,f,c
 42729  00799E  C062  FFDF         	movff	ads1115_init@slvaddr,indf2
 42730                           
 42731                           ; BSR set to: 0
 42732                           ;ads1115.c: 9: pAds1115->config.data=0x8583;;
 42733  0079A2  0100               	movlb	0	; () banked
 42734  0079A4  EE20 F002          	lfsr	2,2
 42735  0079A8  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42736  0079AA  26D9               	addwf	fsr2l,f,c
 42737  0079AC  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42738  0079AE  22DA               	addwfc	fsr2h,f,c
 42739  0079B0  0E83               	movlw	131
 42740  0079B2  6EDE               	movwf	postinc2,c
 42741  0079B4  0E85               	movlw	133
 42742  0079B6  6EDD               	movwf	postdec2,c
 42743                           
 42744                           ; BSR set to: 0
 42745                           ;ads1115.c: 10: pAds1115->iic_start=iic_start;
 42746  0079B8  0100               	movlb	0	; () banked
 42747  0079BA  EE20 F006          	lfsr	2,6
 42748  0079BE  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42749  0079C0  26D9               	addwf	fsr2l,f,c
 42750  0079C2  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42751  0079C4  22DA               	addwfc	fsr2h,f,c
 42752  0079C6  0E24               	movlw	low _iic_start
 42753  0079C8  6EDE               	movwf	postinc2,c
 42754  0079CA  0E9B               	movlw	high _iic_start
 42755  0079CC  6EDD               	movwf	postdec2,c
 42756                           
 42757                           ; BSR set to: 0
 42758                           ;ads1115.c: 11: pAds1115->iic_stop=iic_stop;
 42759  0079CE  0100               	movlb	0	; () banked
 42760  0079D0  EE20 F008          	lfsr	2,8
 42761  0079D4  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42762  0079D6  26D9               	addwf	fsr2l,f,c
 42763  0079D8  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42764  0079DA  22DA               	addwfc	fsr2h,f,c
 42765  0079DC  0E36               	movlw	low _iic_stop
 42766  0079DE  6EDE               	movwf	postinc2,c
 42767  0079E0  0E9C               	movlw	high _iic_stop
 42768  0079E2  6EDD               	movwf	postdec2,c
 42769                           
 42770                           ; BSR set to: 0
 42771                           ;ads1115.c: 12: pAds1115->iic_send_byte=iic_send_byte;
 42772  0079E4  0100               	movlb	0	; () banked
 42773  0079E6  EE20 F00A          	lfsr	2,10
 42774  0079EA  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42775  0079EC  26D9               	addwf	fsr2l,f,c
 42776  0079EE  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42777  0079F0  22DA               	addwfc	fsr2h,f,c
 42778  0079F2  0EA8               	movlw	low _iic_send_byte
 42779  0079F4  6EDE               	movwf	postinc2,c
 42780  0079F6  0E87               	movlw	high _iic_send_byte
 42781  0079F8  6EDD               	movwf	postdec2,c
 42782                           
 42783                           ; BSR set to: 0
 42784                           ;ads1115.c: 13: pAds1115->iic_waite_ack=iic_waite_ack;
 42785  0079FA  0100               	movlb	0	; () banked
 42786  0079FC  EE20 F00C          	lfsr	2,12
 42787  007A00  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42788  007A02  26D9               	addwf	fsr2l,f,c
 42789  007A04  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42790  007A06  22DA               	addwfc	fsr2h,f,c
 42791  007A08  0E4C               	movlw	low _iic_waite_ack
 42792  007A0A  6EDE               	movwf	postinc2,c
 42793  007A0C  0E94               	movlw	high _iic_waite_ack
 42794  007A0E  6EDD               	movwf	postdec2,c
 42795                           
 42796                           ; BSR set to: 0
 42797                           ;ads1115.c: 14: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 42798  007A10  0100               	movlb	0	; () banked
 42799  007A12  EE20 F00E          	lfsr	2,14
 42800  007A16  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 42801  007A18  26D9               	addwf	fsr2l,f,c
 42802  007A1A  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 42803  007A1C  22DA               	addwfc	fsr2h,f,c
 42804  007A1E  0E3E               	movlw	low _iic_received_byte_if_ack
 42805  007A20  6EDE               	movwf	postinc2,c
 42806  007A22  0EA1               	movlw	high _iic_received_byte_if_ack
 42807  007A24  6EDD               	movwf	postdec2,c
 42808                           
 42809                           ; BSR set to: 0
 42810  007A26  0012               	return		;funcret
 42811  007A28                     __end_of_ads1115_init:
 42812                           	opt stack 0
 42813                           tosu	equ	0xFFF
 42814                           tosh	equ	0xFFE
 42815                           tosl	equ	0xFFD
 42816                           pclath	equ	0xFFA
 42817                           tblptru	equ	0xFF8
 42818                           tblptrh	equ	0xFF7
 42819                           tblptrl	equ	0xFF6
 42820                           tablat	equ	0xFF5
 42821                           prodh	equ	0xFF4
 42822                           prodl	equ	0xFF3
 42823                           intcon	equ	0xFF2
 42824                           indf0	equ	0xFEF
 42825                           postinc0	equ	0xFEE
 42826                           fsr0h	equ	0xFEA
 42827                           fsr0l	equ	0xFE9
 42828                           wreg	equ	0xFE8
 42829                           indf1	equ	0xFE7
 42830                           postinc1	equ	0xFE6
 42831                           postdec1	equ	0xFE5
 42832                           plusw1	equ	0xFE3
 42833                           fsr1h	equ	0xFE2
 42834                           fsr1l	equ	0xFE1
 42835                           indf2	equ	0xFDF
 42836                           postinc2	equ	0xFDE
 42837                           postdec2	equ	0xFDD
 42838                           plusw2	equ	0xFDB
 42839                           fsr2h	equ	0xFDA
 42840                           fsr2l	equ	0xFD9
 42841                           status	equ	0xFD8
 42842                           
 42843 ;; *************** function _handler_interrupt_low *****************
 42844 ;; Defined at:
 42845 ;;		line 38 in file "src/soc/int.c"
 42846 ;; Parameters:    Size  Location     Type
 42847 ;;		None
 42848 ;; Auto vars:     Size  Location     Type
 42849 ;;		None
 42850 ;; Return value:  Size  Location     Type
 42851 ;;                  1    wreg      void 
 42852 ;; Registers used:
 42853 ;;		wreg, status,2, status,0, cstack
 42854 ;; Tracked objects:
 42855 ;;		On entry : 0/0
 42856 ;;		On exit  : 0/0
 42857 ;;		Unchanged: 0/0
 42858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42861 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42862 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42863 ;;Total ram usage:       17 bytes
 42864 ;; Hardware stack levels used:    1
 42865 ;; Hardware stack levels required when called:    3
 42866 ;; This function calls:
 42867 ;;		_rtc_alrm_irq_hook
 42868 ;;		_sys_ticker_irq_hook
 42869 ;; This function is called by:
 42870 ;;		Interrupt level 1
 42871 ;; This function uses a non-reentrant model
 42872 ;;
 42873                           
 42874                           	psect	intcodelo
 42875  000018                     __pintcodelo:
 42876                           	opt stack 0
 42877  000018                     _handler_interrupt_low:
 42878                           	opt stack 17
 42879                           
 42880                           ; BSR set to: 0
 42881                           ;incstack = 0
 42882  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 42883  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
 42884  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
 42885  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
 42886  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
 42887  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
 42888  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
 42889  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
 42890  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
 42891  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
 42892  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
 42893  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
 42894  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
 42895  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
 42896  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
 42897  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
 42898  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
 42899  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
 42900                           
 42901                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 42902  00005E  B29D               	btfsc	3997,1,c	;volatile
 42903  000060  A29E               	btfss	3998,1,c	;volatile
 42904  000062  D00D               	goto	i1l13054
 42905  000064  B29F               	btfsc	3999,1,c	;volatile
 42906  000066  D00B               	goto	i1l13054
 42907                           
 42908                           ;int.c: 41: PIR1bits.TMR2IF=0;
 42909  000068  929E               	bcf	3998,1,c	;volatile
 42910                           
 42911                           ;int.c: 42: glTicker++;
 42912  00006A  0E01               	movlw	1
 42913  00006C  0101               	movlb	1	; () banked
 42914  00006E  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 42915  000070  0E00               	movlw	0
 42916  000072  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 42917  000074  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 42918  000076  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 42919                           
 42920                           ; BSR set to: 1
 42921                           ;int.c: 43: glbEvent |= (1<<0);
 42922  000078  802E               	bsf	_glbEvent,0,c	;volatile
 42923                           
 42924                           ; BSR set to: 1
 42925                           ;int.c: 44: sys_ticker_irq_hook();
 42926  00007A  EC04  F051         	call	_sys_ticker_irq_hook	;wreg free
 42927  00007E                     i1l13054:
 42928                           
 42929                           ;int.c: 45: }
 42930                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 42931  00007E  B0A3               	btfsc	4003,0,c	;volatile
 42932  000080  A0A4               	btfss	4004,0,c	;volatile
 42933  000082  D006               	goto	i1l2314
 42934  000084  B0A5               	btfsc	4005,0,c	;volatile
 42935  000086  D004               	goto	i1l2314
 42936                           
 42937                           ;int.c: 47: PIR3bits.RTCCIF=0;
 42938  000088  90A4               	bcf	4004,0,c	;volatile
 42939                           
 42940                           ;int.c: 48: glbEvent |= (1<<1);
 42941  00008A  822E               	bsf	_glbEvent,1,c	;volatile
 42942                           
 42943                           ;int.c: 49: rtc_alrm_irq_hook();
 42944  00008C  ECDE  F051         	call	_rtc_alrm_irq_hook	;wreg free
 42945  000090                     i1l2314:
 42946  000090  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 42947  000094  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 42948  000098  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 42949  00009C  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 42950  0000A0  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 42951  0000A4  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 42952  0000A8  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 42953  0000AC  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 42954  0000B0  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 42955  0000B4  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 42956  0000B8  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 42957  0000BC  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 42958  0000C0  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 42959  0000C4  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
 42960  0000C8  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
 42961  0000CC  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
 42962  0000D0  C00F  FFD8         	movff	??_handler_interrupt_low,status
 42963  0000D4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 42964  0000D6  0010               	retfie	
 42965  0000D8                     __end_of_handler_interrupt_low:
 42966                           	opt stack 0
 42967                           tosu	equ	0xFFF
 42968                           tosh	equ	0xFFE
 42969                           tosl	equ	0xFFD
 42970                           pclatu	equ	0xFFB
 42971                           pclath	equ	0xFFA
 42972                           tblptru	equ	0xFF8
 42973                           tblptrh	equ	0xFF7
 42974                           tblptrl	equ	0xFF6
 42975                           tablat	equ	0xFF5
 42976                           prodh	equ	0xFF4
 42977                           prodl	equ	0xFF3
 42978                           intcon	equ	0xFF2
 42979                           indf0	equ	0xFEF
 42980                           postinc0	equ	0xFEE
 42981                           fsr0h	equ	0xFEA
 42982                           fsr0l	equ	0xFE9
 42983                           wreg	equ	0xFE8
 42984                           indf1	equ	0xFE7
 42985                           postinc1	equ	0xFE6
 42986                           postdec1	equ	0xFE5
 42987                           plusw1	equ	0xFE3
 42988                           fsr1h	equ	0xFE2
 42989                           fsr1l	equ	0xFE1
 42990                           bsr	equ	0xFE0
 42991                           indf2	equ	0xFDF
 42992                           postinc2	equ	0xFDE
 42993                           postdec2	equ	0xFDD
 42994                           plusw2	equ	0xFDB
 42995                           fsr2h	equ	0xFDA
 42996                           fsr2l	equ	0xFD9
 42997                           status	equ	0xFD8
 42998                           
 42999 ;; *************** function _sys_ticker_irq_hook *****************
 43000 ;; Defined at:
 43001 ;;		line 40 in file "src/soc/ticker.c"
 43002 ;; Parameters:    Size  Location     Type
 43003 ;;		None
 43004 ;; Auto vars:     Size  Location     Type
 43005 ;;		None
 43006 ;; Return value:  Size  Location     Type
 43007 ;;                  1    wreg      void 
 43008 ;; Registers used:
 43009 ;;		wreg, status,2, status,0
 43010 ;; Tracked objects:
 43011 ;;		On entry : 0/0
 43012 ;;		On exit  : 0/0
 43013 ;;		Unchanged: 0/0
 43014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43019 ;;Total ram usage:        0 bytes
 43020 ;; Hardware stack levels used:    1
 43021 ;; Hardware stack levels required when called:    2
 43022 ;; This function calls:
 43023 ;;		Nothing
 43024 ;; This function is called by:
 43025 ;;		_handler_interrupt_low
 43026 ;; This function uses a non-reentrant model
 43027 ;;
 43028                           
 43029                           	psect	text220
 43030  00A208                     __ptext220:
 43031                           	opt stack 0
 43032  00A208                     _sys_ticker_irq_hook:
 43033                           	opt stack 17
 43034                           
 43035                           ;ticker.c: 42: if(dlyTickerEn){
 43036                           
 43037                           ;incstack = 0
 43038  00A208  502B               	movf	_dlyTickerEn,w,c
 43039  00A20A  B4D8               	btfsc	status,2,c
 43040  00A20C  D005               	goto	i1l2413
 43041                           
 43042                           ;ticker.c: 43: dlyTicker+=10;
 43043  00A20E  0E0A               	movlw	10
 43044  00A210  0101               	movlb	1	; () banked
 43045  00A212  275E               	addwf	_dlyTicker& (0+255),f,b
 43046  00A214  0E00               	movlw	0
 43047  00A216  235F               	addwfc	(_dlyTicker+1)& (0+255),f,b
 43048  00A218                     i1l2413:
 43049                           
 43050                           ;ticker.c: 44: }
 43051                           ;ticker.c: 45: userTicker_ms+=20;
 43052  00A218  0E14               	movlw	20
 43053  00A21A  2625               	addwf	_userTicker_ms,f,c	;volatile
 43054  00A21C  0E00               	movlw	0
 43055  00A21E  2226               	addwfc	_userTicker_ms+1,f,c	;volatile
 43056  00A220  0012               	return		;funcret
 43057  00A222                     __end_of_sys_ticker_irq_hook:
 43058                           	opt stack 0
 43059                           tosu	equ	0xFFF
 43060                           tosh	equ	0xFFE
 43061                           tosl	equ	0xFFD
 43062                           pclatu	equ	0xFFB
 43063                           pclath	equ	0xFFA
 43064                           tblptru	equ	0xFF8
 43065                           tblptrh	equ	0xFF7
 43066                           tblptrl	equ	0xFF6
 43067                           tablat	equ	0xFF5
 43068                           prodh	equ	0xFF4
 43069                           prodl	equ	0xFF3
 43070                           intcon	equ	0xFF2
 43071                           indf0	equ	0xFEF
 43072                           postinc0	equ	0xFEE
 43073                           fsr0h	equ	0xFEA
 43074                           fsr0l	equ	0xFE9
 43075                           wreg	equ	0xFE8
 43076                           indf1	equ	0xFE7
 43077                           postinc1	equ	0xFE6
 43078                           postdec1	equ	0xFE5
 43079                           plusw1	equ	0xFE3
 43080                           fsr1h	equ	0xFE2
 43081                           fsr1l	equ	0xFE1
 43082                           bsr	equ	0xFE0
 43083                           indf2	equ	0xFDF
 43084                           postinc2	equ	0xFDE
 43085                           postdec2	equ	0xFDD
 43086                           plusw2	equ	0xFDB
 43087                           fsr2h	equ	0xFDA
 43088                           fsr2l	equ	0xFD9
 43089                           status	equ	0xFD8
 43090                           
 43091 ;; *************** function _rtc_alrm_irq_hook *****************
 43092 ;; Defined at:
 43093 ;;		line 103 in file "src/soc/rtc.c"
 43094 ;; Parameters:    Size  Location     Type
 43095 ;;		None
 43096 ;; Auto vars:     Size  Location     Type
 43097 ;;		None
 43098 ;; Return value:  Size  Location     Type
 43099 ;;                  1    wreg      void 
 43100 ;; Registers used:
 43101 ;;		None
 43102 ;; Tracked objects:
 43103 ;;		On entry : 0/0
 43104 ;;		On exit  : 0/0
 43105 ;;		Unchanged: 0/0
 43106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43111 ;;Total ram usage:        0 bytes
 43112 ;; Hardware stack levels used:    1
 43113 ;; Hardware stack levels required when called:    2
 43114 ;; This function calls:
 43115 ;;		Nothing
 43116 ;; This function is called by:
 43117 ;;		_handler_interrupt_low
 43118 ;; This function uses a non-reentrant model
 43119 ;;
 43120                           
 43121                           	psect	text221
 43122  00A3BC                     __ptext221:
 43123                           	opt stack 0
 43124  00A3BC                     _rtc_alrm_irq_hook:
 43125                           	opt stack 17
 43126                           
 43127                           ;incstack = 0
 43128  00A3BC  0012               	return		;funcret
 43129  00A3BE                     __end_of_rtc_alrm_irq_hook:
 43130                           	opt stack 0
 43131                           tosu	equ	0xFFF
 43132                           tosh	equ	0xFFE
 43133                           tosl	equ	0xFFD
 43134                           pclatu	equ	0xFFB
 43135                           pclath	equ	0xFFA
 43136                           tblptru	equ	0xFF8
 43137                           tblptrh	equ	0xFF7
 43138                           tblptrl	equ	0xFF6
 43139                           tablat	equ	0xFF5
 43140                           prodh	equ	0xFF4
 43141                           prodl	equ	0xFF3
 43142                           intcon	equ	0xFF2
 43143                           indf0	equ	0xFEF
 43144                           postinc0	equ	0xFEE
 43145                           fsr0h	equ	0xFEA
 43146                           fsr0l	equ	0xFE9
 43147                           wreg	equ	0xFE8
 43148                           indf1	equ	0xFE7
 43149                           postinc1	equ	0xFE6
 43150                           postdec1	equ	0xFE5
 43151                           plusw1	equ	0xFE3
 43152                           fsr1h	equ	0xFE2
 43153                           fsr1l	equ	0xFE1
 43154                           bsr	equ	0xFE0
 43155                           indf2	equ	0xFDF
 43156                           postinc2	equ	0xFDE
 43157                           postdec2	equ	0xFDD
 43158                           plusw2	equ	0xFDB
 43159                           fsr2h	equ	0xFDA
 43160                           fsr2l	equ	0xFD9
 43161                           status	equ	0xFD8
 43162                           
 43163 ;; *************** function _handler_interrupt_hight *****************
 43164 ;; Defined at:
 43165 ;;		line 9 in file "src/soc/int.c"
 43166 ;; Parameters:    Size  Location     Type
 43167 ;;		None
 43168 ;; Auto vars:     Size  Location     Type
 43169 ;;		None
 43170 ;; Return value:  Size  Location     Type
 43171 ;;                  1    wreg      void 
 43172 ;; Registers used:
 43173 ;;		wreg, status,2, status,0, cstack
 43174 ;; Tracked objects:
 43175 ;;		On entry : 0/0
 43176 ;;		On exit  : 0/0
 43177 ;;		Unchanged: 0/0
 43178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43181 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43182 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43183 ;;Total ram usage:       14 bytes
 43184 ;; Hardware stack levels used:    1
 43185 ;; Hardware stack levels required when called:    1
 43186 ;; This function calls:
 43187 ;;		i2_rtc_alrm_irq_hook
 43188 ;;		i2_sys_ticker_irq_hook
 43189 ;; This function is called by:
 43190 ;;		Interrupt level 2
 43191 ;; This function uses a non-reentrant model
 43192 ;;
 43193                           
 43194                           	psect	intcode
 43195  000008                     __pintcode:
 43196                           	opt stack 0
 43197  000008                     _handler_interrupt_hight:
 43198                           	opt stack 17
 43199                           
 43200                           ;incstack = 0
 43201  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 43202  00000A  EF6A  F037         	goto	int_func
 43203                           tosu	equ	0xFFF
 43204                           tosh	equ	0xFFE
 43205                           tosl	equ	0xFFD
 43206                           pclatu	equ	0xFFB
 43207                           pclath	equ	0xFFA
 43208                           tblptru	equ	0xFF8
 43209                           tblptrh	equ	0xFF7
 43210                           tblptrl	equ	0xFF6
 43211                           tablat	equ	0xFF5
 43212                           prodh	equ	0xFF4
 43213                           prodl	equ	0xFF3
 43214                           intcon	equ	0xFF2
 43215                           indf0	equ	0xFEF
 43216                           postinc0	equ	0xFEE
 43217                           fsr0h	equ	0xFEA
 43218                           fsr0l	equ	0xFE9
 43219                           wreg	equ	0xFE8
 43220                           indf1	equ	0xFE7
 43221                           postinc1	equ	0xFE6
 43222                           postdec1	equ	0xFE5
 43223                           plusw1	equ	0xFE3
 43224                           fsr1h	equ	0xFE2
 43225                           fsr1l	equ	0xFE1
 43226                           bsr	equ	0xFE0
 43227                           indf2	equ	0xFDF
 43228                           postinc2	equ	0xFDE
 43229                           postdec2	equ	0xFDD
 43230                           plusw2	equ	0xFDB
 43231                           fsr2h	equ	0xFDA
 43232                           fsr2l	equ	0xFD9
 43233                           status	equ	0xFD8
 43234                           
 43235                           	psect	intcode_body
 43236  006ED4                     __pintcode_body:
 43237                           	opt stack 17
 43238  006ED4                     int_func:
 43239                           	opt stack 17
 43240  006ED4  CFFA F001          	movff	pclath,??_handler_interrupt_hight
 43241  006ED8  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
 43242  006EDC  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
 43243  006EE0  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
 43244  006EE4  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
 43245  006EE8  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
 43246  006EEC  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
 43247  006EF0  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
 43248  006EF4  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
 43249  006EF8  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
 43250  006EFC  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
 43251  006F00  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
 43252  006F04  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
 43253  006F08  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
 43254                           
 43255                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 43256  006F0C  BAF2               	btfsc	intcon,5,c	;volatile
 43257  006F0E  A4F2               	btfss	intcon,2,c	;volatile
 43258  006F10  D002               	goto	i2l2303
 43259  006F12  B4F1               	btfsc	intcon2,2,c	;volatile
 43260                           
 43261                           ;int.c: 13: __nop();
 43262  006F14  F000               	nop	
 43263  006F16                     i2l2303:
 43264                           
 43265                           ;int.c: 14: }
 43266                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 43267  006F16  BCF2               	btfsc	intcon,6,c	;volatile
 43268  006F18  A89D               	btfss	3997,4,c	;volatile
 43269  006F1A  D001               	goto	i2l2304
 43270  006F1C  509E               	movf	3998,w,c	;volatile
 43271  006F1E                     i2l2304:
 43272                           
 43273                           ;int.c: 17: }
 43274                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 43275  006F1E  BCF2               	btfsc	intcon,6,c	;volatile
 43276  006F20  AA9D               	btfss	3997,5,c	;volatile
 43277  006F22  D001               	goto	i2l2305
 43278  006F24  509E               	movf	3998,w,c	;volatile
 43279  006F26                     i2l2305:
 43280                           
 43281                           ;int.c: 20: }
 43282                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 43283  006F26  BCF2               	btfsc	intcon,6,c	;volatile
 43284  006F28  A09D               	btfss	3997,0,c	;volatile
 43285  006F2A  D001               	goto	i2l2306
 43286  006F2C  509E               	movf	3998,w,c	;volatile
 43287  006F2E                     i2l2306:
 43288                           
 43289                           ;int.c: 23: }
 43290                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 43291  006F2E  B29D               	btfsc	3997,1,c	;volatile
 43292  006F30  A29E               	btfss	3998,1,c	;volatile
 43293  006F32  D00D               	goto	i2l13028
 43294  006F34  A29F               	btfss	3999,1,c	;volatile
 43295  006F36  D00B               	goto	i2l13028
 43296                           
 43297                           ;int.c: 26: PIR1bits.TMR2IF=0;
 43298  006F38  929E               	bcf	3998,1,c	;volatile
 43299                           
 43300                           ;int.c: 27: glTicker++;
 43301  006F3A  0E01               	movlw	1
 43302  006F3C  0101               	movlb	1	; () banked
 43303  006F3E  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 43304  006F40  0E00               	movlw	0
 43305  006F42  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 43306  006F44  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 43307  006F46  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 43308                           
 43309                           ; BSR set to: 1
 43310                           ;int.c: 28: glbEvent |= (1<<0);
 43311  006F48  802E               	bsf	_glbEvent,0,c	;volatile
 43312                           
 43313                           ; BSR set to: 1
 43314                           ;int.c: 29: sys_ticker_irq_hook();
 43315  006F4A  EC11  F051         	call	i2_sys_ticker_irq_hook	;wreg free
 43316  006F4E                     i2l13028:
 43317                           
 43318                           ;int.c: 30: }
 43319                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 43320  006F4E  B0A3               	btfsc	4003,0,c	;volatile
 43321  006F50  A0A4               	btfss	4004,0,c	;volatile
 43322  006F52  D006               	goto	i2l2309
 43323  006F54  A0A5               	btfss	4005,0,c	;volatile
 43324  006F56  D004               	goto	i2l2309
 43325                           
 43326                           ;int.c: 32: PIR3bits.RTCCIF=0;
 43327  006F58  90A4               	bcf	4004,0,c	;volatile
 43328                           
 43329                           ;int.c: 33: glbEvent |= (1<<1);
 43330  006F5A  822E               	bsf	_glbEvent,1,c	;volatile
 43331                           
 43332                           ;int.c: 34: rtc_alrm_irq_hook();
 43333  006F5C  ECDF  F051         	call	i2_rtc_alrm_irq_hook	;wreg free
 43334  006F60                     i2l2309:
 43335  006F60  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 43336  006F64  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 43337  006F68  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 43338  006F6C  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 43339  006F70  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 43340  006F74  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 43341  006F78  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 43342  006F7C  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 43343  006F80  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 43344  006F84  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 43345  006F88  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 43346  006F8C  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 43347  006F90  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 43348  006F94  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
 43349  006F98  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 43350  006F9A  0011               	retfie		f
 43351  006F9C                     __end_of_handler_interrupt_hight:
 43352                           	opt stack 0
 43353                           tosu	equ	0xFFF
 43354                           tosh	equ	0xFFE
 43355                           tosl	equ	0xFFD
 43356                           pclatu	equ	0xFFB
 43357                           pclath	equ	0xFFA
 43358                           tblptru	equ	0xFF8
 43359                           tblptrh	equ	0xFF7
 43360                           tblptrl	equ	0xFF6
 43361                           tablat	equ	0xFF5
 43362                           prodh	equ	0xFF4
 43363                           prodl	equ	0xFF3
 43364                           intcon	equ	0xFF2
 43365                           intcon2	equ	0xFF1
 43366                           indf0	equ	0xFEF
 43367                           postinc0	equ	0xFEE
 43368                           fsr0h	equ	0xFEA
 43369                           fsr0l	equ	0xFE9
 43370                           wreg	equ	0xFE8
 43371                           indf1	equ	0xFE7
 43372                           postinc1	equ	0xFE6
 43373                           postdec1	equ	0xFE5
 43374                           plusw1	equ	0xFE3
 43375                           fsr1h	equ	0xFE2
 43376                           fsr1l	equ	0xFE1
 43377                           bsr	equ	0xFE0
 43378                           indf2	equ	0xFDF
 43379                           postinc2	equ	0xFDE
 43380                           postdec2	equ	0xFDD
 43381                           plusw2	equ	0xFDB
 43382                           fsr2h	equ	0xFDA
 43383                           fsr2l	equ	0xFD9
 43384                           status	equ	0xFD8
 43385                           
 43386 ;; *************** function i2_sys_ticker_irq_hook *****************
 43387 ;; Defined at:
 43388 ;;		line 40 in file "src/soc/ticker.c"
 43389 ;; Parameters:    Size  Location     Type
 43390 ;;		None
 43391 ;; Auto vars:     Size  Location     Type
 43392 ;;		None
 43393 ;; Return value:  Size  Location     Type
 43394 ;;                  1    wreg      void 
 43395 ;; Registers used:
 43396 ;;		wreg, status,2, status,0
 43397 ;; Tracked objects:
 43398 ;;		On entry : 0/0
 43399 ;;		On exit  : 0/0
 43400 ;;		Unchanged: 0/0
 43401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43406 ;;Total ram usage:        0 bytes
 43407 ;; Hardware stack levels used:    1
 43408 ;; This function calls:
 43409 ;;		Nothing
 43410 ;; This function is called by:
 43411 ;;		_handler_interrupt_hight
 43412 ;; This function uses a non-reentrant model
 43413 ;;
 43414                           
 43415                           	psect	text223
 43416  00A222                     __ptext223:
 43417                           	opt stack 0
 43418  00A222                     i2_sys_ticker_irq_hook:
 43419                           	opt stack 17
 43420                           
 43421                           ;ticker.c: 42: if(dlyTickerEn){
 43422                           
 43423                           ;incstack = 0
 43424  00A222  502B               	movf	_dlyTickerEn,w,c
 43425  00A224  B4D8               	btfsc	status,2,c
 43426  00A226  D005               	goto	i2l2413
 43427                           
 43428                           ;ticker.c: 43: dlyTicker+=10;
 43429  00A228  0E0A               	movlw	10
 43430  00A22A  0101               	movlb	1	; () banked
 43431  00A22C  275E               	addwf	_dlyTicker& (0+255),f,b
 43432  00A22E  0E00               	movlw	0
 43433  00A230  235F               	addwfc	(_dlyTicker+1)& (0+255),f,b
 43434  00A232                     i2l2413:
 43435                           
 43436                           ;ticker.c: 44: }
 43437                           ;ticker.c: 45: userTicker_ms+=20;
 43438  00A232  0E14               	movlw	20
 43439  00A234  2625               	addwf	_userTicker_ms,f,c	;volatile
 43440  00A236  0E00               	movlw	0
 43441  00A238  2226               	addwfc	_userTicker_ms+1,f,c	;volatile
 43442  00A23A  0012               	return		;funcret
 43443  00A23C                     __end_ofi2_sys_ticker_irq_hook:
 43444                           	opt stack 0
 43445                           tosu	equ	0xFFF
 43446                           tosh	equ	0xFFE
 43447                           tosl	equ	0xFFD
 43448                           pclatu	equ	0xFFB
 43449                           pclath	equ	0xFFA
 43450                           tblptru	equ	0xFF8
 43451                           tblptrh	equ	0xFF7
 43452                           tblptrl	equ	0xFF6
 43453                           tablat	equ	0xFF5
 43454                           prodh	equ	0xFF4
 43455                           prodl	equ	0xFF3
 43456                           intcon	equ	0xFF2
 43457                           intcon2	equ	0xFF1
 43458                           indf0	equ	0xFEF
 43459                           postinc0	equ	0xFEE
 43460                           fsr0h	equ	0xFEA
 43461                           fsr0l	equ	0xFE9
 43462                           wreg	equ	0xFE8
 43463                           indf1	equ	0xFE7
 43464                           postinc1	equ	0xFE6
 43465                           postdec1	equ	0xFE5
 43466                           plusw1	equ	0xFE3
 43467                           fsr1h	equ	0xFE2
 43468                           fsr1l	equ	0xFE1
 43469                           bsr	equ	0xFE0
 43470                           indf2	equ	0xFDF
 43471                           postinc2	equ	0xFDE
 43472                           postdec2	equ	0xFDD
 43473                           plusw2	equ	0xFDB
 43474                           fsr2h	equ	0xFDA
 43475                           fsr2l	equ	0xFD9
 43476                           status	equ	0xFD8
 43477                           
 43478 ;; *************** function i2_rtc_alrm_irq_hook *****************
 43479 ;; Defined at:
 43480 ;;		line 103 in file "src/soc/rtc.c"
 43481 ;; Parameters:    Size  Location     Type
 43482 ;;		None
 43483 ;; Auto vars:     Size  Location     Type
 43484 ;;		None
 43485 ;; Return value:  Size  Location     Type
 43486 ;;                  1    wreg      void 
 43487 ;; Registers used:
 43488 ;;		None
 43489 ;; Tracked objects:
 43490 ;;		On entry : 0/0
 43491 ;;		On exit  : 0/0
 43492 ;;		Unchanged: 0/0
 43493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43498 ;;Total ram usage:        0 bytes
 43499 ;; Hardware stack levels used:    1
 43500 ;; This function calls:
 43501 ;;		Nothing
 43502 ;; This function is called by:
 43503 ;;		_handler_interrupt_hight
 43504 ;; This function uses a non-reentrant model
 43505 ;;
 43506                           
 43507                           	psect	text224
 43508  00A3BE                     __ptext224:
 43509                           	opt stack 0
 43510  00A3BE                     i2_rtc_alrm_irq_hook:
 43511                           	opt stack 17
 43512                           
 43513                           ;incstack = 0
 43514  00A3BE  0012               	return		;funcret
 43515  00A3C0                     __end_ofi2_rtc_alrm_irq_hook:
 43516                           	opt stack 0
 43517                           tosu	equ	0xFFF
 43518                           tosh	equ	0xFFE
 43519                           tosl	equ	0xFFD
 43520                           pclatu	equ	0xFFB
 43521                           pclath	equ	0xFFA
 43522                           tblptru	equ	0xFF8
 43523                           tblptrh	equ	0xFF7
 43524                           tblptrl	equ	0xFF6
 43525                           tablat	equ	0xFF5
 43526                           prodh	equ	0xFF4
 43527                           prodl	equ	0xFF3
 43528                           intcon	equ	0xFF2
 43529                           intcon2	equ	0xFF1
 43530                           indf0	equ	0xFEF
 43531                           postinc0	equ	0xFEE
 43532                           fsr0h	equ	0xFEA
 43533                           fsr0l	equ	0xFE9
 43534                           wreg	equ	0xFE8
 43535                           indf1	equ	0xFE7
 43536                           postinc1	equ	0xFE6
 43537                           postdec1	equ	0xFE5
 43538                           plusw1	equ	0xFE3
 43539                           fsr1h	equ	0xFE2
 43540                           fsr1l	equ	0xFE1
 43541                           bsr	equ	0xFE0
 43542                           indf2	equ	0xFDF
 43543                           postinc2	equ	0xFDE
 43544                           postdec2	equ	0xFDD
 43545                           plusw2	equ	0xFDB
 43546                           fsr2h	equ	0xFDA
 43547                           fsr2l	equ	0xFD9
 43548                           status	equ	0xFD8
 43549                           tosu	equ	0xFFF
 43550                           tosh	equ	0xFFE
 43551                           tosl	equ	0xFFD
 43552                           pclatu	equ	0xFFB
 43553                           pclath	equ	0xFFA
 43554                           tblptru	equ	0xFF8
 43555                           tblptrh	equ	0xFF7
 43556                           tblptrl	equ	0xFF6
 43557                           tablat	equ	0xFF5
 43558                           prodh	equ	0xFF4
 43559                           prodl	equ	0xFF3
 43560                           intcon	equ	0xFF2
 43561                           intcon2	equ	0xFF1
 43562                           indf0	equ	0xFEF
 43563                           postinc0	equ	0xFEE
 43564                           fsr0h	equ	0xFEA
 43565                           fsr0l	equ	0xFE9
 43566                           wreg	equ	0xFE8
 43567                           indf1	equ	0xFE7
 43568                           postinc1	equ	0xFE6
 43569                           postdec1	equ	0xFE5
 43570                           plusw1	equ	0xFE3
 43571                           fsr1h	equ	0xFE2
 43572                           fsr1l	equ	0xFE1
 43573                           bsr	equ	0xFE0
 43574                           indf2	equ	0xFDF
 43575                           postinc2	equ	0xFDE
 43576                           postdec2	equ	0xFDD
 43577                           plusw2	equ	0xFDB
 43578                           fsr2h	equ	0xFDA
 43579                           fsr2l	equ	0xFD9
 43580                           status	equ	0xFD8
 43581                           
 43582                           	psect	text225
 43583  000000                     __ptext225:
 43584                           	opt stack 0
 43585                           tosu	equ	0xFFF
 43586                           tosh	equ	0xFFE
 43587                           tosl	equ	0xFFD
 43588                           pclatu	equ	0xFFB
 43589                           pclath	equ	0xFFA
 43590                           tblptru	equ	0xFF8
 43591                           tblptrh	equ	0xFF7
 43592                           tblptrl	equ	0xFF6
 43593                           tablat	equ	0xFF5
 43594                           prodh	equ	0xFF4
 43595                           prodl	equ	0xFF3
 43596                           intcon	equ	0xFF2
 43597                           intcon2	equ	0xFF1
 43598                           indf0	equ	0xFEF
 43599                           postinc0	equ	0xFEE
 43600                           fsr0h	equ	0xFEA
 43601                           fsr0l	equ	0xFE9
 43602                           wreg	equ	0xFE8
 43603                           indf1	equ	0xFE7
 43604                           postinc1	equ	0xFE6
 43605                           postdec1	equ	0xFE5
 43606                           plusw1	equ	0xFE3
 43607                           fsr1h	equ	0xFE2
 43608                           fsr1l	equ	0xFE1
 43609                           bsr	equ	0xFE0
 43610                           indf2	equ	0xFDF
 43611                           postinc2	equ	0xFDE
 43612                           postdec2	equ	0xFDD
 43613                           plusw2	equ	0xFDB
 43614                           fsr2h	equ	0xFDA
 43615                           fsr2l	equ	0xFD9
 43616                           status	equ	0xFD8
 43617                           
 43618                           	psect	rparam
 43619  0000                     tosu	equ	0xFFF
 43620                           tosh	equ	0xFFE
 43621                           tosl	equ	0xFFD
 43622                           pclatu	equ	0xFFB
 43623                           pclath	equ	0xFFA
 43624                           tblptru	equ	0xFF8
 43625                           tblptrh	equ	0xFF7
 43626                           tblptrl	equ	0xFF6
 43627                           tablat	equ	0xFF5
 43628                           prodh	equ	0xFF4
 43629                           prodl	equ	0xFF3
 43630                           intcon	equ	0xFF2
 43631                           intcon2	equ	0xFF1
 43632                           indf0	equ	0xFEF
 43633                           postinc0	equ	0xFEE
 43634                           fsr0h	equ	0xFEA
 43635                           fsr0l	equ	0xFE9
 43636                           wreg	equ	0xFE8
 43637                           indf1	equ	0xFE7
 43638                           postinc1	equ	0xFE6
 43639                           postdec1	equ	0xFE5
 43640                           plusw1	equ	0xFE3
 43641                           fsr1h	equ	0xFE2
 43642                           fsr1l	equ	0xFE1
 43643                           bsr	equ	0xFE0
 43644                           indf2	equ	0xFDF
 43645                           postinc2	equ	0xFDE
 43646                           postdec2	equ	0xFDD
 43647                           plusw2	equ	0xFDB
 43648                           fsr2h	equ	0xFDA
 43649                           fsr2l	equ	0xFD9
 43650                           status	equ	0xFD8
 43651                           
 43652                           	psect	temp
 43653  000040                     btemp:
 43654                           	opt stack 0
 43655  000040                     	ds	1
 43656  0000                     int$flags	set	btemp
 43657                           tosu	equ	0xFFF
 43658                           tosh	equ	0xFFE
 43659                           tosl	equ	0xFFD
 43660                           pclatu	equ	0xFFB
 43661                           pclath	equ	0xFFA
 43662                           tblptru	equ	0xFF8
 43663                           tblptrh	equ	0xFF7
 43664                           tblptrl	equ	0xFF6
 43665                           tablat	equ	0xFF5
 43666                           prodh	equ	0xFF4
 43667                           prodl	equ	0xFF3
 43668                           intcon	equ	0xFF2
 43669                           intcon2	equ	0xFF1
 43670                           indf0	equ	0xFEF
 43671                           postinc0	equ	0xFEE
 43672                           fsr0h	equ	0xFEA
 43673                           fsr0l	equ	0xFE9
 43674                           wreg	equ	0xFE8
 43675                           indf1	equ	0xFE7
 43676                           postinc1	equ	0xFE6
 43677                           postdec1	equ	0xFE5
 43678                           plusw1	equ	0xFE3
 43679                           fsr1h	equ	0xFE2
 43680                           fsr1l	equ	0xFE1
 43681                           bsr	equ	0xFE0
 43682                           indf2	equ	0xFDF
 43683                           postinc2	equ	0xFDE
 43684                           postdec2	equ	0xFDD
 43685                           plusw2	equ	0xFDB
 43686                           fsr2h	equ	0xFDA
 43687                           fsr2l	equ	0xFD9
 43688                           status	equ	0xFD8


Data Sizes:
    Strings     137
    Constant    1727
    Data        14
    BSS         1170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    136     160
    BANK1           256      3     256
    BANK2           256      0     256
    BANK3           256     29     231
    BANK4           256      0     162
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    m_flash_write@buf	PTR unsigned char  size(2) Largest target is 240
		 -> m_flash_test@tmp(COMRAM[16]), stSysData(BANK2[240]), 

    m_flash_write@tmpBuf	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer(BANK5[256]), 

    m_flash_read@buf	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer(BANK5[256]), stSysData(BANK2[240]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_work_mode_adj@buf(BANK0[10]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), 
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(COMRAM[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_xfloat_pt@buf(BANK0[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_xfloat_pt@buf(BANK0[10]), STR_1(CODE[5]), 

    at24c02_write_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115DiffPrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115DiffPrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115DiffPrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115DiffPrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115PrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115PrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115PrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115PrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S2361$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S2361$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S2361$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S2361$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S2361$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_xfloat_pt@buf(BANK0[10]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(COMRAM[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 10
		 -> STR_33(CODE[9]), STR_32(CODE[9]), STR_31(CODE[5]), STR_30(CODE[5]), 
		 -> STR_29(CODE[5]), STR_28(CODE[5]), STR_27(CODE[5]), ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), 
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[5]), 
		 -> ui_disp_menu_epr_calib_adj@buf(BANK0[6]), STR_22(CODE[5]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), STR_21(CODE[5]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), STR_14(CODE[5]), 
		 -> ui_disp_menu_calib_pr_adj@buf(BANK0[10]), STR_13(CODE[5]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_work_mode_adj@buf(BANK0[10]), ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), ui_disp_menu_epr_calib_adj@buf(BANK0[6]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), 
		 -> ui_disp_menu_warn_t_adj@buf(BANK0[6]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), ui_disp_menu_calib_diff_adj@buf(BANK0[10]), 
		 -> ui_disp_menu_pos_adj@buf(BANK0[6]), ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 240
		 -> flashTestbuf(CODE[65]), m_flash_test@tmp(COMRAM[16]), stSysData(BANK2[240]), defultSystemData(CODE[240]), 
		 -> prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer(BANK5[256]), crc_verify@expected(BANK0[2]), stSysData(BANK2[240]), 

    m_mem_set@buf	PTR unsigned char  size(2) Largest target is 24
		 -> tmpx(BANK3[24]), 

    crc_append@message	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    crc_sum@puchMsg	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    pAds1115PrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    sample_diff_pr_fliter@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    __x_sample_fifo@buf	PTR int  size(2) Largest target is 8
		 -> sampBufRefInSoc(BANK1[8]), sampBufBatInSoc(BANK1[8]), sampBufExPr1InSoc(BANK1[8]), sampBufExPr0InSoc(BANK1[8]), 
		 -> sampBufPr(BANK1[8]), sampBufPt100ExB(BANK1[8]), sampBufPt100ExA(BANK1[8]), sampBufDiffPr_S1(BANK1[8]), 
		 -> sampBufDiffPr_D23(BANK1[8]), sampBufDiffPr_D01(BANK1[8]), 

    __x_sample_fliter@buf	PTR int  size(2) Largest target is 8
		 -> sampBufDiffPr_D23(BANK1[8]), sampBufDiffPr_D01(BANK1[8]), 

    ui_disp_menu_work_mode_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_menu_warn_v_adj@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    ui_disp_menu_warn_t_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_menu_h_adj@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    ui_disp_menu_pos_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    ui_disp_xfloat_pt@xpf	PTR struct . size(2) Largest target is 4
		 -> ui_disp_menu_home@mf(BANK0[4]), 

    ui_disp_adj_xfixed_pt_dp@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_31(CODE[5]), ui_disp_menu_poly_c_adj@buf(BANK0[6]), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    ui_disp_adj_xfloat_pt@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_menu_epr_ilp_scale_adj@buf(BANK0[6]), ui_disp_menu_epr_calib_adj@buf(BANK0[6]), ui_disp_menu_warn_v_adj@buf(BANK0[6]), ui_disp_menu_calib_pr_adj@buf(BANK0[10]), 
		 -> ui_disp_menu_calib_diff_adj@buf(BANK0[10]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_9(CODE[5]), STR_6(CODE[5]), 

    ui_disp_adj_xfloat_pt@xpf	PTR struct . size(2) Largest target is 4
		 -> m_floatAdj(COMRAM[4]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt_dp@buf(BANK0[10]), ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(BANK0[10]), 

    __set_long_work_mode@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_long_bar_level_scale@p	PTR int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_long_bar_level_scale@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_long_base_zero@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_long_density@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_epr_ilp_scale@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_epr_param@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_warn_value@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_warn_type@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_warn_type@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_poly_coefic@p	PTR int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_poly_coefic@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __set_short_pose_size@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __set_short_pose_size@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __sys_data_save_write_flash@buf	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __sys_data_save_write_flash@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __up_adj_work_mode@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __up_warn_type_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __up_pose_size_adj@p	PTR unsigned char  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), 

    __enter_menu_bar_scale@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_epr_ilp_scale@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_epr_calib@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_warn_value@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_warn_type@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_poly_coeffic@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_calib_press@stp	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), 

    __enter_menu_calib_press_diff@stp	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK3[162]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_h@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_d@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_pose_size@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    key_adj_value_float@mfp	PTR struct . size(2) Largest target is 4
		 -> m_floatAdj(COMRAM[4]), 

    key_adj_value_fixed@value	PTR unsigned int  size(2) Largest target is 4
		 -> adjValue(COMRAM[4]), passWord(COMRAM[2]), key_adj_value_float@t16(BANK0[2]), 

    key_shift_loc@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK1[1]), 

    cal_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK4[156]), prCalibTabDef(BANK4[162]), 

    cal_diff_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef.prCalibRow(BANK3[156]), diff_prCalibTabDef(BANK3[162]), 

    cal_diff_press@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    cal_diff_p_to_h@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_float_fast@tab	PTR float  size(2) Largest target is 404
		 -> hKel(CODE[404]), hKcy(CODE[404]), 

    m_interp1_cal_p_t@tmpx	PTR struct . size(2) Largest target is 24
		 -> tmpx(BANK3[24]), 

    m_interp1_cal_p_t@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_cal_p_v@xout	PTR struct . size(2) Largest target is 24
		 -> tmpx(BANK3[24]), NULL(NULL[0]), 

    m_interp1_cal_p_v@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK4[156]), diff_prCalibTabDef.prCalibRow(BANK3[156]), prCalibTabDef(BANK4[162]), diff_prCalibTabDef(BANK3[162]), 

    m_interp1_cal_p_v@xin	PTR struct . size(2) Largest target is 8
		 -> cal_press@xin(BANK0[8]), x_prDiffData(BANK1[8]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK4[162]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_diff_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK3[162]), 

    data_sys_init@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_init@buf	PTR unsigned char  size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_cal_v2@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    data_sys_cal_v1@stp	PTR struct . size(2) Largest target is 240
		 -> stSysData(BANK2[240]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S74$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S74$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S74$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S74$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S74$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    _ui_disp_start_cs600->_lcd_disp_logo
    _ui_disp_start_cs600->_m_int8_2_hex
    _key_process->_key_waite_release
    _key_process_up->___up_home_adj
    _key_process_up->___up_warn_type_adj
    _key_adj_value_fixed->___exp_10
    ___lwmod->___exp_10
    _key_process_set_up_long->___enter_menu_calib_press
    _key_process_set_up_long->___enter_menu_calib_press_diff
    ___set_short_pr_calib->___enter_menu_calib_press
    ___set_short_diff_calib->___enter_menu_calib_press_diff
    _key_process_down->___down_home_adj
    _key_process_down->_key_shift_loc
    ___down_pr_calib->_key_shift_loc
    ___down_pose_size->_key_shift_loc
    ___down_dpr_calib->_key_shift_loc
    _sample_pr_chip_fast->_ads1115_set_mux
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _sample_diff_pr_chip_fast->_ads1115_set_data_rate
    _sample_diff_pr_chip_fast->_ads1115_set_mux
    _sample_diff_pr_chip_fast->_ads1115_set_pga
    _ui_disp_menu_work_mode_adj->_lcd_disp_logo
    _ui_disp_menu_warn_v_adj->_lcd_disp_logo
    _ui_disp_menu_warn_v_adj->_lcd_disp_unit_2nd_m
    _ui_disp_menu_warn_v_adj->_lcd_disp_unit_mpa
    _ui_disp_menu_warn_t_adj->_lcd_disp_logo
    _ui_disp_menu_psw_adj->_lcd_disp_logo
    _ui_disp_adj_xfixed_pt->___x_arrange_str
    _ui_disp_menu_pos_adj->_lcd_disp_logo
    _ui_disp_menu_h_adj->_lcd_disp_logo
    _ui_disp_menu_d_adj->_lcd_disp_logo
    _ui_disp_menu_poly_c_adj->_lcd_disp_logo
    _ui_disp_menu_home->_lcd_disp_logo
    _ui_disp_menu_home->_lcd_disp_unit_1st_m
    _ui_disp_menu_home->_lcd_disp_unit_1st_m3
    _ui_disp_menu_home->_lcd_disp_unit_2nd_m
    _ui_disp_menu_home->_lcd_disp_unit_2nd_m3
    _ui_disp_menu_home->_lcd_disp_unit_mpa
    _ui_disp_menu_home->_lcd_disp_unit_t
    _ui_disp_menu_home->_lcd_disp_unit_temperature
    ___lwdiv->___exp_10
    _lcd_disp_level->_lcd_disp_level_bar
    _ui_disp_menu_epr_ilp_scale_adj->_lcd_disp_logo
    _ui_disp_menu_epr_calib_adj->_lcd_disp_logo
    _ui_disp_menu_density_adj->_lcd_disp_logo
    _ui_disp_menu_calib_pr_adj->___lbdiv
    _ui_disp_menu_calib_pr_adj->_lcd_disp_logo
    _ui_disp_menu_calib_diff_adj->___lbdiv
    _ui_disp_menu_calib_diff_adj->_lcd_disp_logo
    _ui_disp_menu_bzero_adj->_lcd_disp_logo
    _ui_disp_adj_xfloat_pt->___x_arrange_str
    _ui_disp_menu_bar_full_adj->_lcd_disp_logo
    _ui_disp_adj_xfixed_pt_dp->___x_arrange_str
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_show_dp->_lcd_disp_dp_loc_4
    _lcd_show_dp->_lcd_disp_dp_loc_5
    _lcd_show_dp->_lcd_disp_dp_loc_6
    _sample_call_cal_in_soc->_cal_additional_pressute
    _m_flash_write->_m_flash_unlock
    _m_flash_erase->_m_flash_unlock
    ___wmul->___exp_10
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_send_ack

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_event_process_rtc
    _main->_event_process_ticker
    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_config->_lcd_disp_all
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _key_process_up->___up_pose_size_adj
    ___up_warn_value_adj->_key_adj_value_float
    ___up_psw_adj->_key_adj_value_fixed
    ___up_pr_calib_adj->_key_adj_value_float
    ___up_pose_size_adj->_key_adj_value_float
    ___up_poly_coefic_adj->_key_adj_value_fixed
    ___up_epr_ilp_scale_adj->_key_adj_value_float
    ___up_epr_calib_adj->_key_adj_value_float
    ___up_diff_calib_adj->_key_adj_value_float
    ___up_density_adj->_key_adj_value_float
    ___up_base_zero_adj->_key_adj_value_float
    _key_adj_value_float->_key_adj_value_fixed
    ___up_adj_bar_level_scale->_key_adj_value_fixed
    _key_adj_value_fixed->___lwmod
    ___lwmod->___lwdiv
    _key_process_set_up_long->___enter_menu_calib_press
    _key_process_set_up_long->___enter_menu_calib_press_diff
    ___enter_menu_set_density->___int32_2_mflot32
    ___enter_menu_set_base_zero->___int32_2_mflot32
    _key_process_set_long->___set_short_poly_coefic
    ___set_long_density->___sys_data_save_write_flash
    ___set_long_base_zero->___sys_data_save_write_flash
    ___set_long_bar_level_scale->___sys_data_save_write_flash
    _key_process_set->___set_short_poly_coefic
    ___set_short_warn_value->___sys_data_save_write_flash
    ___enter_menu_warn_value->___int32_2_mflot32
    ___set_short_warn_type->___sys_data_save_write_flash
    ___set_short_pr_calib->___enter_menu_calib_press
    ___enter_menu_calib_press->___int32_2_mflot32
    ___set_short_pose_size->___sys_data_save_write_flash
    ___enter_menu_set_h->___int32_2_mflot32
    ___enter_menu_set_d->___int32_2_mflot32
    ___set_short_poly_coefic->___sys_data_save_write_flash
    ___set_short_epr_param->___sys_data_save_write_flash
    ___enter_menu_epr_calib->___int32_2_mflot32
    ___set_short_epr_ilp_scale->___sys_data_save_write_flash
    ___sys_data_save_write_flash->_data_sys_cal_v1
    ___enter_menu_epr_ilp_scale->___int32_2_mflot32
    ___set_short_diff_calib->___enter_menu_calib_press_diff
    ___mflot32_2_int32->___lmul
    ___enter_menu_calib_press_diff->___int32_2_mflot32
    _key_process_down->_key_shift_loc
    ___down_pr_calib->_key_shift_loc
    ___down_pose_size->_key_shift_loc
    ___down_dpr_calib->_key_shift_loc
    _event_process_ticker->_sample_call_in_ticker
    _sample_pr_chip_fast->___x_sample_fifo
    _sample_in_soc_adc_ch->___x_sample_fifo
    _in_adc_start_and_read->_delay_us
    _sample_diff_pr_chip_fast->_sample_diff_pr_fliter
    _sample_diff_pr_fliter->___x_sample_fliter
    ___x_sample_fliter->___aldiv
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    ___x_sample_fifo->___aldiv
    _event_process_rtc->_sample_function_enable_fi_in_rtc
    _ui_disp_menu->_ui_disp_menu_warn_v_adj
    _ui_disp_menu_work_mode_adj->_lcd_show_string
    _ui_disp_menu_warn_v_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_warn_t_adj->_lcd_show_string_l0
    _ui_disp_menu_warn_t_adj->_lcd_show_string_l1
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_menu_pose_size->_ui_disp_menu_h_adj
    _ui_disp_menu_pos_adj->_lcd_show_string_l0
    _ui_disp_menu_pos_adj->_lcd_show_string_l1
    _ui_disp_menu_h_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_d_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_poly_c_adj->_ui_disp_adj_xfixed_pt_dp
    _ui_disp_menu_home->_ui_disp_xfloat_pt
    _ui_disp_xfloat_pt->_lcd_show_string_l0
    _ui_disp_xfloat_pt->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    ___lwdiv->___exp_10
    _lcd_disp_unit_temperature->_lcd_set_com_seg
    _lcd_disp_unit_t->_lcd_set_com_seg
    _lcd_disp_unit_mpa->_lcd_set_com_seg
    _lcd_disp_unit_2nd_m3->_lcd_set_com_seg
    _lcd_disp_unit_2nd_m->_lcd_set_com_seg
    _lcd_disp_unit_1st_m3->_lcd_set_com_seg
    _lcd_disp_unit_1st_m->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    ___int32_2_mflot32->___lldiv
    _ui_disp_menu_epr_ilp_scale_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_epr_calib_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_density_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_calib_pr_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_calib_diff_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_menu_bzero_adj->_ui_disp_adj_xfloat_pt
    _ui_disp_adj_xfloat_pt->_lcd_show_string
    _ui_disp_menu_bar_full_adj->_ui_disp_adj_xfixed_pt_dp
    _ui_disp_adj_xfixed_pt_dp->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_6->_lcd_set_com_seg
    _lcd_disp_dp_loc_5->_lcd_set_com_seg
    _lcd_disp_dp_loc_4->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _m_int16_2_str_4->___awdiv
    _lcd_disp_logo->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _sample_call_cal_pr->_cal_press
    _cal_press->_m_interp1_cal_p_v
    _m_interp1_cal_p_v->___aldiv
    _m_interp1_cal_p_t->___aldiv
    ___aldiv->___lmul
    _cal_diff_p_to_h->___fltol
    _cal_diff_hight_to_vol_v->_m_interp1_float_fast
    _cal_diff_hight_to_vol_h->_m_interp1_float_fast
    _m_interp1_float_fast->___flge
    ___flneg->___fldiv
    _cal_diff_hight_level->___flge
    ___flge->___fladd
    ___fladd->___flneg
    _data_init_all->_data_sys_init
    _data_sys_init->_data_sys_cal_v1
    _m_flash_write->_m_flash_read
    _data_sys_cal_v2->___fltol
    _data_sys_cal_v1->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _calib_data_init_pr->_crc_verify
    _calib_data_set_default_pr->___wmul
    _calib_data_init_diff_pr->_crc_verify
    _crc_verify->_crc_sum
    _crc_append->_crc_sum
    _calib_data_set_default_diff_pr->___wmul
    ___wmul->___exp_10
    _at24c02_write_n_byte->_delay_ms
    _at24c02_write_n_byte->_iic_send_byte
    _delay_ms->_delay_us
    _at24c02_read_n_byte->_iic_received_byte_if_ack
    _iic_start->_delay_us
    _iic_send_byte->_delay_us
    _iic_waite_ack->_delay_us
    _iic_stop->_delay_us
    _iic_received_byte_if_ack->_iic_received_byte
    _iic_send_ack->_delay_us
    _iic_received_byte->_delay_us
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_key_process

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    _key_process_set_long->___set_short_pose_size
    _key_process_set->___set_short_pose_size
    _sample_call_cal_diff_pr->_cal_diff_press
    _cal_diff_press->_cal_diff_hight_to_vol_v

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 21862399
              _ads1115_init_all_chip
                      _data_init_all
                  _event_process_rtc
               _event_process_ticker
             _event_process_time_out
                        _in_adc_init
                        _key_polling
                        _key_process
                           _lcd_init
                            _rtc_set
                           _soc_init
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  537969
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                         _lcd_bl_off
                          _lcd_bl_on
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (1) _key_process                                          3     3      0 10863765
                                              0 BANK1      3     3      0
                   _key_process_down
                    _key_process_set
               _key_process_set_long
            _key_process_set_up_long
                     _key_process_up
                  _key_waite_release
                         _lcd_bl_off
                          _lcd_bl_on
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_waite_release                                    5     1      4    5547
                                             31 COMRAM     1     1      0
                                              8 BANK0      4     0      4
                           _delay_ms
                        _key_polling
 ---------------------------------------------------------------------------------
 (3) _key_polling                                          2     2      0    2618
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _key_process_up                                       0     0      0   60668
           ___up_adj_bar_level_scale
                 ___up_adj_work_mode
                 ___up_base_zero_adj
                   ___up_density_adj
                ___up_diff_calib_adj
                 ___up_epr_calib_adj
             ___up_epr_ilp_scale_adj
                      ___up_home_adj
               ___up_poly_coefic_adj
                 ___up_pose_size_adj
                  ___up_pr_calib_adj
                       ___up_psw_adj
                 ___up_warn_type_adj
                ___up_warn_value_adj
 ---------------------------------------------------------------------------------
 (3) ___up_warn_value_adj                                  0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_warn_type_adj                                   3     3      0     127
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___up_psw_adj                                         0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_pr_calib_adj                                    1     1      0    6080
                                             27 BANK0      1     1      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_pose_size_adj                                   3     3      0    6136
                                             27 BANK0      3     3      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_poly_coefic_adj                                 0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_home_adj                                        1     1      0      77
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___up_epr_ilp_scale_adj                               0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_epr_calib_adj                                   0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_diff_calib_adj                                  1     1      0    6080
                                             27 BANK0      1     1      0
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_density_adj                                     0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (3) ___up_base_zero_adj                                   0     0      0    6009
                _key_adj_value_float
 ---------------------------------------------------------------------------------
 (4) _key_adj_value_float                                  6     3      3    6009
                                             21 BANK0      6     3      3
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (3) ___up_adj_work_mode                                   2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___up_adj_bar_level_scale                             0     0      0    4009
                _key_adj_value_fixed
 ---------------------------------------------------------------------------------
 (5) _key_adj_value_fixed                                  7     4      3    4009
                                             14 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              9 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___exp_10                                             3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _key_process_set_up_long                              2     2      0   17626
                                             42 BANK0      2     2      0
             ___enter_menu_bar_scale
           ___enter_menu_calib_press
      ___enter_menu_calib_press_diff
             ___enter_menu_epr_calib
         ___enter_menu_epr_ilp_scale
          ___enter_menu_poly_coeffic
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
         ___enter_menu_set_pose_size
             ___enter_menu_warn_type
            ___enter_menu_warn_value
             ___enter_menu_work_mode
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_work_mode                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_density                             8     8      0    2337
                                             29 BANK0      8     8      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_base_zero                           6     6      0    2337
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_bar_scale                               4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _key_process_set_long                                 0     0      0  481372
         ___exit_menu_to_home_unsave
         ___set_long_bar_level_scale
               ___set_long_base_zero
                 ___set_long_density
               ___set_long_work_mode
             ___set_short_diff_calib
          ___set_short_epr_ilp_scale
              ___set_short_epr_param
            ___set_short_poly_coefic
              ___set_short_pose_size
               ___set_short_pr_calib
              ___set_short_warn_type
             ___set_short_warn_value
 ---------------------------------------------------------------------------------
 (3) ___set_long_work_mode                                 6     6      0      34
                                              0 BANK0      2     2      0
         ___exit_menu_to_home_unsave
 ---------------------------------------------------------------------------------
 (3) ___set_long_density                                   9     9      0   47724
                                              0 BANK3      6     6      0
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___set_long_base_zero                                 9     9      0   47724
                                              0 BANK3      6     6      0
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___set_long_bar_level_scale                           8     8      0   45163
                                            131 BANK0      4     4      0
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (2) _key_process_set                                      0     0      0  340727
              ___enter_menu_password
             ___set_short_diff_calib
          ___set_short_epr_ilp_scale
              ___set_short_epr_param
            ___set_short_poly_coefic
              ___set_short_pose_size
               ___set_short_pr_calib
              ___set_short_warn_type
             ___set_short_warn_value
 ---------------------------------------------------------------------------------
 (3) ___set_short_warn_value                              10    10      0   50349
                                            131 BANK0      2     2      0
                                              0 BANK3      8     8      0
            ___enter_menu_warn_value
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_warn_value                             10    10      0    2467
                                             29 BANK0     10    10      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_warn_type                                7     7      0   45259
                                            131 BANK0      2     2      0
                                              0 BANK3      5     5      0
             ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_warn_type                               5     5      0      65
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___set_short_pr_calib                                20    20      0   23159
                                             42 BANK0     20    20      0
           ___enter_menu_calib_press
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
               _at24c02_write_n_byte
                         _crc_append
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_calib_press                            14    13      1    2672
                                             31 COMRAM     1     0      1
                                             29 BANK0     13    13      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_pose_size                                9     9      0   52593
                                              0 BANK3      9     9      0
                 ___enter_menu_set_d
                 ___enter_menu_set_h
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_set_pose_size                           2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_h                                   6     6      0    2337
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_d                                   6     6      0    2337
                                             29 BANK0      6     6      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_poly_coefic                              5     5      0   45259
                                            131 BANK0      5     5      0
          ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_poly_coeffic                            5     5      0      65
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___set_short_epr_param                               10    10      0   50535
                                              0 BANK3      7     7      0
             ___enter_menu_epr_calib
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_epr_calib                               7     7      0    2470
                                             29 BANK0      7     7      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_epr_ilp_scale                           10    10      0   50414
                                              0 BANK3      7     7      0
         ___enter_menu_epr_ilp_scale
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
        ___sys_data_save_write_flash
 ---------------------------------------------------------------------------------
 (4) ___sys_data_save_write_flash                          5     5      0   45095
                                            126 BANK0      5     5      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_epr_ilp_scale                           7     7      0    2473
                                             29 BANK0      7     7      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___set_short_diff_calib                              20    20      0   23159
                                             42 BANK0     20    20      0
      ___enter_menu_calib_press_diff
         ___exit_menu_to_home_unsave
                  ___mflot32_2_int32
               _at24c02_write_n_byte
                         _crc_append
 ---------------------------------------------------------------------------------
 (4) ___mflot32_2_int32                                   13     9      4    2561
                                             12 BANK0     13     9      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___exit_menu_to_home_unsave                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_calib_press_diff                       14    13      1    2672
                                             31 COMRAM     1     0      1
                                             29 BANK0     13    13      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (3) ___enter_menu_password                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _key_process_down                                     0     0      0   13251
                   ___down_dpr_calib
                    ___down_home_adj
                   ___down_pose_size
                    ___down_pr_calib
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_pr_calib                                      0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_pose_size                                     0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) ___down_home_adj                                      1     1      0      71
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___down_dpr_calib                                     0     0      0    3295
                      _key_shift_loc
 ---------------------------------------------------------------------------------
 (3) _key_shift_loc                                        5     1      4    3295
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _event_process_time_out                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _event_process_ticker                                 1     1      0  231230
                                            135 BANK0      1     1      0
              _sample_call_in_ticker
 ---------------------------------------------------------------------------------
 (2) _sample_call_in_ticker                                1     1      0  231220
                                            134 BANK0      1     1      0
            _sample_call_cal_diff_pr
             _sample_call_cal_in_soc
                 _sample_call_cal_pr
           _sample_diff_pr_chip_fast
               _sample_in_soc_adc_ch
                _sample_pr_chip_fast
 ---------------------------------------------------------------------------------
 (3) _sample_pr_chip_fast                                  3     3      0   34570
                                             42 BANK0      3     3      0
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
 ---------------------------------------------------------------------------------
 (3) _sample_in_soc_adc_ch                                 2     2      0    7387
                                             42 BANK0      2     2      0
                    ___x_sample_fifo
                        _in_adc_init
              _in_adc_start_and_read
 ---------------------------------------------------------------------------------
 (4) _in_adc_start_and_read                                6     4      2    2212
                                             31 COMRAM     1     1      0
                                              4 BANK0      5     3      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_fast                             2     2      0   39499
                                             49 BANK0      2     2      0
                    ___x_sample_fifo
            _ads1115_read_conversion
              _ads1115_set_data_rate
                    _ads1115_set_mux
                    _ads1115_set_pga
           _ads1115_start_conversion
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (4) _sample_diff_pr_fliter                                2     0      2    3585
                                             47 BANK0      2     0      2
                  ___x_sample_fliter
 ---------------------------------------------------------------------------------
 (5) ___x_sample_fliter                                   21    17      4    3402
                                             26 BANK0     21    17      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) _ads1115_start_conversion                             2     0      2   12399
                                             11 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_write_reg                                    5     0      5   11977
                                              6 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_pga                                      4     1      3     962
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_mux                                      4     1      3     782
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_data_rate                                4     1      3     422
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_read_conversion                              5     3      2   16214
                                             14 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_read_reg                                     6     3      3   15935
                                              8 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) ___x_sample_fifo                                     16    11      5    5039
                                             26 BANK0     16    11      5
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _event_process_rtc                                    1     1      0 10094217
                                            135 BANK0      1     1      0
   _sample_function_enable_fi_in_rtc
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (2) _ui_disp_menu                                         0     0      0 9944379
          _ui_disp_menu_bar_full_adj
             _ui_disp_menu_bzero_adj
        _ui_disp_menu_calib_diff_adj
          _ui_disp_menu_calib_pr_adj
           _ui_disp_menu_density_adj
         _ui_disp_menu_epr_calib_adj
     _ui_disp_menu_epr_ilp_scale_adj
                  _ui_disp_menu_home
            _ui_disp_menu_poly_c_adj
             _ui_disp_menu_pose_size
               _ui_disp_menu_psw_adj
            _ui_disp_menu_warn_t_adj
            _ui_disp_menu_warn_v_adj
         _ui_disp_menu_work_mode_adj
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_work_mode_adj                          13    13      0  289413
                                             22 BANK0     13    13      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_warn_v_adj                             16    16      0  555410
                                             42 BANK0     12    12      0
                       _lcd_disp_all
                      _lcd_disp_logo
                _lcd_disp_unit_2nd_m
                  _lcd_disp_unit_mpa
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_warn_t_adj                             10    10      0  541954
                                             22 BANK0     10    10      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_psw_adj                                 0     0      0  737382
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt                               17    12      5  706040
                                             22 BANK0     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_pose_size                               0     0      0 1517062
                 _ui_disp_menu_d_adj
                 _ui_disp_menu_h_adj
               _ui_disp_menu_pos_adj
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_pos_adj                                 8     8      0  541740
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_h_adj                                   2     2      0  487678
                                             42 BANK0      2     2      0
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_d_adj                                   0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_poly_c_adj                              7     7      0  932054
                                             40 BANK0      7     7      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
           _ui_disp_adj_xfixed_pt_dp
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_home                                    5     5      0  986028
                                             39 BANK0      5     5      0
                  ___int32_2_mflot32
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                _lcd_disp_unit_1st_m
               _lcd_disp_unit_1st_m3
                _lcd_disp_unit_2nd_m
               _lcd_disp_unit_2nd_m3
                  _lcd_disp_unit_mpa
                    _lcd_disp_unit_t
          _lcd_disp_unit_temperature
                  _ui_disp_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_xfloat_pt                                   17    14      3  700283
                                             22 BANK0     17    14      3
                            ___lwdiv
                        _lcd_show_dp
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                    _m_int16_2_str_4
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  252576
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  252576
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     601
                                              2 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_temperature                            1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_t                                      1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_mpa                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_2nd_m3                                 1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_2nd_m                                  1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_1st_m3                                 1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_unit_1st_m                                  1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_level                                       2     2      0   33329
                                             18 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (5) _lcd_disp_level_bar                                   3     2      1   33097
                                             31 COMRAM     1     0      1
                                             16 BANK0      2     2      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) ___int32_2_mflot32                                   16    12      4    2235
                                             13 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_epr_ilp_scale_adj                       6     6      0  492807
                                             42 BANK0      6     6      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_epr_calib_adj                           6     6      0  492807
                                             42 BANK0      6     6      0
                       _lcd_disp_all
                      _lcd_disp_logo
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_density_adj                             0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_calib_pr_adj                           11    11      0  748609
                                             42 BANK0     11    11      0
                            ___awmod
                            ___lbdiv
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_calib_diff_adj                         11    11      0  748683
                                             42 BANK0     11    11      0
                            ___awmod
                            ___lbdiv
                       _lcd_disp_all
                      _lcd_disp_logo
                   _lcd_disp_refresh
                    _lcd_show_string
                          _m_mem_cpy
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     691
                                             31 COMRAM     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_bzero_adj                               0     0      0  487644
                       _lcd_disp_all
                      _lcd_disp_logo
              _ui_disp_adj_xfloat_pt
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfloat_pt                               20    15      5  456302
                                             22 BANK0     20    15      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu_bar_full_adj                            0     0      0  926882
                       _lcd_disp_all
                      _lcd_disp_logo
           _ui_disp_adj_xfixed_pt_dp
 ---------------------------------------------------------------------------------
 (4) _ui_disp_adj_xfixed_pt_dp                            18    12      6  895540
                                             22 BANK0     18    12      6
                    ___x_arrange_str
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (5) _ui_disp_clear_num_dp                                 0     0      0  441955
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (4) _lcd_show_string                                      3     1      2  252936
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  252083
                                             16 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   31398
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_show_dp                                          2     1      1  189019
                                             16 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
                  _lcd_disp_dp_loc_4
                  _lcd_disp_dp_loc_5
                  _lcd_disp_dp_loc_6
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_6                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_5                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_4                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_2                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_1                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (6) _lcd_disp_dp_loc_0                                    1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _m_mem_cpy                                            4     0      4    4990
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_int16_2_str_4                                      4     0      4    4502
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1873
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___x_arrange_str                                      4     1      3     974
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   31212
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   31181
                                              8 BANK0      8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sample_function_enable_fi_in_rtc                     1     1      0  149835
                                            134 BANK0      1     1      0
               _sample_all_power_off
                _sample_all_power_on
            _sample_call_cal_diff_pr
             _sample_call_cal_in_soc
                 _sample_call_cal_pr
               _sample_variable_init
 ---------------------------------------------------------------------------------
 (3) _sample_variable_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_pr                                   0     0      0    5300
                          _cal_press
           _cal_pt100_temperature_ex
 ---------------------------------------------------------------------------------
 (4) _cal_pt100_temperature_ex                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _cal_press                                           11    11      0    5300
                                             58 BANK0     11    11      0
                  _m_interp1_cal_p_v
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_in_soc                               0     0      0      22
            _cal_additional_pressute
 ---------------------------------------------------------------------------------
 (4) _cal_additional_pressute                              1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _sample_call_cal_diff_pr                              0     0      0  144439
                     _cal_diff_press
           _cal_pt100_temperature_in
 ---------------------------------------------------------------------------------
 (4) _cal_pt100_temperature_in                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _cal_diff_press                                       5     5      0  144439
                                             24 BANK3      5     5      0
               _cal_diff_hight_level
            _cal_diff_hight_to_vol_h
            _cal_diff_hight_to_vol_v
                    _cal_diff_p_to_h
                  _m_interp1_cal_p_t
                  _m_interp1_cal_p_v
                          _m_mem_set
 ---------------------------------------------------------------------------------
 (5) _m_mem_set                                            4     0      4     366
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _m_interp1_cal_p_v                                   32    26      6    5102
                                             26 BANK0     32    26      6
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _m_interp1_cal_p_t                                   31    26      5    4591
                                             26 BANK0     31    26      5
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1476
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8    1825
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _cal_diff_p_to_h                                     10     8      2   15118
                                             98 BANK0     10     8      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_to_vol_v                             24    20      4   48314
                                              0 BANK3     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_to_vol_h                             20    16      4   47390
                                              0 BANK3     20    16      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (6) _m_interp1_float_fast                                34    26      8   23913
                                            100 BANK0     34    26      8
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     515
                                             64 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _cal_diff_hight_level                                16    16      0   23257
                                            100 BANK0     16    16      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1706
                                             88 BANK0     12     4      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    6282
                                             68 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _sample_all_power_on                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_all_power_off                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _data_init_all                                        0     0      0  131490
            _calib_data_init_diff_pr
                 _calib_data_init_pr
                      _data_sys_init
 ---------------------------------------------------------------------------------
 (2) _data_sys_init                                        7     7      0   46705
                                            126 BANK0      7     7      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (5) _m_flash_write                                       21    13      8    5581
                                             14 BANK0     21    13      8
                      _m_flash_erase
                       _m_flash_read
                     _m_flash_unlock
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (6) _m_flash_read                                        14     6      8    2160
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (6) _m_flash_erase                                        8     4      4     260
                                              0 BANK0      8     4      4
                     _m_flash_unlock
 ---------------------------------------------------------------------------------
 (6) _m_flash_unlock                                       1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _data_sys_cal_v2                                     20    16      4   15338
                                             98 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _data_sys_cal_v1                                     28    24      4   15440
                                             98 BANK0     28    24      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    2696
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5933
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    5175
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_pr                                   5     5      0   42377
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
          _calib_data_set_default_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_pr                            8     8      0    2298
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_diff_pr                              5     5      0   42408
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
     _calib_data_set_default_diff_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (5) _crc_verify                                          10     6      4    3778
                                             12 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (6) _m_mem_cpy_len                                        6     0      6    1452
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (5) _crc_append                                           8     4      4    2531
                                             12 BANK0      8     4      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (6) _crc_sum                                             12     8      4     660
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_diff_pr                       8     8      0    2329
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1852
                                              2 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (4) _at24c02_write_n_byte                                 9     2      7   15061
                                              6 BANK0      9     2      7
                           _delay_ms
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     0      2    2442
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _at24c02_read_n_byte                                 13     6      7   17254
                                              8 BANK0     13     6      7
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (5) _iic_start                                            0     0      0    2138
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _iic_send_byte                                        2     2      0    6581
                                              4 BANK0      2     2      0
                           _delay_us
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (6) _iic_waite_ack                                        1     1      0    4341
                                             31 COMRAM     1     1      0
                           _delay_us
                           _iic_stop
 ---------------------------------------------------------------------------------
 (5) _iic_stop                                             0     0      0    2138
                           _delay_us
 ---------------------------------------------------------------------------------
 (6) _iic_received_byte_if_ack                             2     2      0    4483
                                              6 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (7) _iic_send_ack                                         1     1      0    2169
                                             31 COMRAM     1     1      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (7) _iic_received_byte                                    2     2      0    2246
                                              4 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             4     2      2    2138
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _at24c02_init                                         3     0      3     937
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (12) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (14) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _data_init_all
     _calib_data_init_diff_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
             _delay_us
           _iic_send_ack
             _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _at24c02_write_n_byte
         _delay_ms
           _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _calib_data_set_default_diff_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _calib_data_init_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
             _delay_us
           _iic_send_ack
             _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _at24c02_write_n_byte
         _delay_ms
           _delay_us
         _iic_send_byte *
           _delay_us
           _iic_waite_ack
             _delay_us
             _iic_stop
               _delay_us
         _iic_start *
           _delay_us
         _iic_stop *
           _delay_us
       _calib_data_set_default_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _data_sys_init
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
       _data_sys_cal_v1
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _data_sys_cal_v2
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _m_flash_read
       _m_flash_write
         _m_flash_erase
           _m_flash_unlock
         _m_flash_read
         _m_flash_unlock
         _m_mem_cpy_len
       _m_mem_cpy_len
   _event_process_rtc
     _sample_function_enable_fi_in_rtc
       _sample_all_power_off
       _sample_all_power_on
       _sample_call_cal_diff_pr
         _cal_diff_press
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _cal_diff_hight_to_vol_h
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_hight_to_vol_v
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_p_to_h
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_interp1_cal_p_t
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_mem_set
         _cal_pt100_temperature_in
       _sample_call_cal_in_soc
         _cal_additional_pressute
       _sample_call_cal_pr
         _cal_press
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _cal_pt100_temperature_ex
       _sample_variable_init
     _ui_disp_menu
       _ui_disp_menu_bar_full_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_bzero_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_diff_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_pr_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_density_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_calib_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_ilp_scale_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_home
         ___int32_2_mflot32
           ___lldiv
         _lcd_disp_all
         _lcd_disp_level
           _lcd_disp_level_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_disp_unit_1st_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_1st_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_t
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_temperature
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_xfloat_pt
           ___lwdiv
             ___exp_10 (ARG)
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
       _ui_disp_menu_poly_c_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_pose_size
         _ui_disp_menu_d_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_h_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_pos_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_refresh
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_mem_cpy
       _ui_disp_menu_psw_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_warn_t_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string_l0
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _lcd_show_string_l1
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
       _ui_disp_menu_warn_v_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_work_mode_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
   _event_process_ticker
     _sample_call_in_ticker
       _sample_call_cal_diff_pr
         _cal_diff_press
           _cal_diff_hight_level
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _cal_diff_hight_to_vol_h
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_hight_to_vol_v
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _m_interp1_float_fast
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
           _cal_diff_p_to_h
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_interp1_cal_p_t
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
           _m_mem_set
         _cal_pt100_temperature_in
       _sample_call_cal_in_soc
         _cal_additional_pressute
       _sample_call_cal_pr
         _cal_press
           _m_interp1_cal_p_v
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _cal_pt100_temperature_ex
       _sample_diff_pr_chip_fast
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
                 _delay_us
               _iic_send_ack
                 _delay_us
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _ads1115_set_data_rate
         _ads1115_set_mux
         _ads1115_set_pga
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
               ___lmul (ARG)
       _sample_in_soc_adc_ch
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _in_adc_init
         _in_adc_start_and_read
           _delay_us
       _sample_pr_chip_fast
         ___x_sample_fifo
           ___aldiv
             ___lmul (ARG)
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
                 _delay_us
               _iic_send_ack
                 _delay_us
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _delay_us
               _iic_waite_ack
                 _delay_us
                 _iic_stop
                   _delay_us
             _iic_start *
               _delay_us
             _iic_stop *
               _delay_us
   _event_process_time_out
   _in_adc_init
   _key_polling
     _delay_ms
       _delay_us
   _key_process
     _key_process_down
       ___down_dpr_calib
         _key_shift_loc
       ___down_home_adj
       ___down_pose_size
         _key_shift_loc
       ___down_pr_calib
         _key_shift_loc
       _key_shift_loc
     _key_process_set
       ___enter_menu_password
       ___set_short_diff_calib
         ___enter_menu_calib_press_diff
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_epr_ilp_scale
         ___enter_menu_epr_ilp_scale
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_epr_param
         ___enter_menu_epr_calib
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_poly_coefic
         ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pose_size
         ___enter_menu_set_d
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_h
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pr_calib
         ___enter_menu_calib_press
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_warn_type
         ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_warn_value
         ___enter_menu_warn_value
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
     _key_process_set_long
       ___exit_menu_to_home_unsave
       ___set_long_bar_level_scale
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_base_zero
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_density
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_long_work_mode
         ___exit_menu_to_home_unsave
       ___set_short_diff_calib
         ___enter_menu_calib_press_diff
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_epr_ilp_scale
         ___enter_menu_epr_ilp_scale
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_epr_param
         ___enter_menu_epr_calib
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_poly_coefic
         ___enter_menu_poly_coeffic
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pose_size
         ___enter_menu_set_d
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_h
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_pose_size
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_pr_calib
         ___enter_menu_calib_press
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         _at24c02_write_n_byte
           _delay_ms
             _delay_us
           _iic_send_byte *
             _delay_us
             _iic_waite_ack
               _delay_us
               _iic_stop
                 _delay_us
           _iic_start *
             _delay_us
           _iic_stop *
             _delay_us
         _crc_append
           _crc_sum
       ___set_short_warn_type
         ___enter_menu_warn_type
         ___exit_menu_to_home_unsave
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
       ___set_short_warn_value
         ___enter_menu_warn_value
           ___int32_2_mflot32
             ___lldiv
         ___exit_menu_to_home_unsave
         ___mflot32_2_int32
           ___lmul
         ___sys_data_save_write_flash
           _crc_append
             _crc_sum
           _crc_verify
             _crc_sum
             _m_mem_cpy_len
           _data_sys_cal_v1
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _data_sys_cal_v2
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _m_flash_read
           _m_flash_write
             _m_flash_erase
               _m_flash_unlock
             _m_flash_read
             _m_flash_unlock
             _m_mem_cpy_len
     _key_process_set_up_long
       ___enter_menu_bar_scale
       ___enter_menu_calib_press
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_calib_press_diff
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_epr_calib
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_epr_ilp_scale
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_poly_coeffic
       ___enter_menu_set_base_zero
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_density
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_set_pose_size
       ___enter_menu_warn_type
       ___enter_menu_warn_value
         ___int32_2_mflot32
           ___lldiv
       ___enter_menu_work_mode
     _key_process_up
       ___up_adj_bar_level_scale
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_adj_work_mode
       ___up_base_zero_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_density_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_diff_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_epr_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_epr_ilp_scale_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_home_adj
       ___up_poly_coefic_adj
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_pose_size_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_pr_calib_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
       ___up_psw_adj
         _key_adj_value_fixed
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       ___up_warn_type_adj
       ___up_warn_value_adj
         _key_adj_value_float
           _key_adj_value_fixed
             ___exp_10
             ___lwdiv
               ___exp_10 (ARG)
             ___lwmod
               ___exp_10 (ARG)
               ___lwdiv (ARG)
                 ___exp_10 (ARG)
             ___wmul
               ___exp_10 (ARG)
     _key_waite_release
       _delay_ms
         _delay_us
       _key_polling
         _delay_ms
           _delay_us
     _lcd_bl_off
     _lcd_bl_on
     _ui_disp_menu
       _ui_disp_menu_bar_full_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_bzero_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_diff_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_calib_pr_adj
         ___awmod
         ___lbdiv
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_density_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_calib_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_epr_ilp_scale_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_home
         ___int32_2_mflot32
           ___lldiv
         _lcd_disp_all
         _lcd_disp_level
           _lcd_disp_level_bar
             _lcd_set_com_seg
               ___awdiv
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_disp_unit_1st_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_1st_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_t
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_temperature
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_xfloat_pt
           ___lwdiv
             ___exp_10 (ARG)
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
       _ui_disp_menu_poly_c_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfixed_pt_dp
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_pose_size
         _ui_disp_menu_d_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_h_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _ui_disp_adj_xfloat_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
         _ui_disp_menu_pos_adj
           _lcd_disp_all
           _lcd_disp_logo
             _lcd_set_com_seg
               ___awdiv
           _lcd_disp_refresh
           _lcd_show_string_l0
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _lcd_show_string_l1
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_mem_cpy
       _ui_disp_menu_psw_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _ui_disp_adj_xfixed_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
           _ui_disp_clear_num_dp
             _lcd_show_dp
               _lcd_disp_dp_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_dp_loc_6
                 _lcd_set_com_seg
                   ___awdiv
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
       _ui_disp_menu_warn_t_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string_l0
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _lcd_show_string_l1
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
       _ui_disp_menu_warn_v_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_2nd_m
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_unit_mpa
           _lcd_set_com_seg
             ___awdiv
         _m_mem_cpy
         _ui_disp_adj_xfloat_pt
           ___x_arrange_str
           _lcd_disp_refresh
           _lcd_show_dp
             _lcd_disp_dp_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_dp_loc_6
               _lcd_set_com_seg
                 ___awdiv
           _lcd_show_string
             _lcd_show_chr
               _lcd_disp_chr_loc_0
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_1
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_2
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_3
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_4
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_5
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_6
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_chr_loc_7
                 _lcd_set_com_seg
                   ___awdiv
               _lcd_disp_get_code
           _m_int16_2_str_4
             ___awdiv
             ___awmod
           _m_mem_cpy
       _ui_disp_menu_work_mode_adj
         _lcd_disp_all
         _lcd_disp_logo
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_refresh
         _lcd_show_string
           _lcd_show_chr
             _lcd_disp_chr_loc_0
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_1
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_2
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_3
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_4
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_5
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_6
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_chr_loc_7
               _lcd_set_com_seg
                 ___awdiv
             _lcd_disp_get_code
         _m_mem_cpy
   _lcd_init
     _lcd_bl_off
     _lcd_bl_on
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A2      14       63.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     1D      E7      11       90.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     568      12        0.0%
DATA                 0      0     568       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Sep 26 21:27:03 2017

             __end_of___set_long_base_zero 93F4               __end_of___up_poly_coefic_adj A27E  
               ui_disp_menu_poly_c_adj@buf 0088                      lcd_show_string_l0@str 0073  
                           ?_iic_waite_ack 0001                      lcd_show_string_l1@str 0073  
                             ___fldiv@aexp 009F                               ___fldiv@bexp 009E  
          __size_of___set_short_diff_calib 036A                               ?_lcd_show_dp 0070  
                      ?_lcd_show_string_l0 0073                        ?_lcd_show_string_l1 0073  
                 ??___enter_menu_bar_scale 0060                               ___fldiv@sign 0093  
               __end_of_rtcc_reg_wr_enable A390                     ??_ui_disp_menu_pos_adj 0021  
                    ??_at24c02_read_n_byte 006F                               ?_in_adc_init 0001  
                     at24c02_init@pAt24c02 0060                     __end_of_m_flash_unlock A208  
                            ?_m_int8_2_hex 0060                     ??_ui_disp_menu_psw_adj 0021  
                             ___awdiv@sign 0065                ?___enter_menu_epr_ilp_scale 0001  
                                       bsr 000FE0                              ?_lcd_show_chr 0070  
                      ___wmul@multiplicand 0064                       _m_interp1_float_fast 1F2A  
    __end_of___enter_menu_calib_press_diff 63B4     __size_of___enter_menu_calib_press_diff 0104  
            ___enter_menu_calib_press_diff 62B0                __end_of_rtcc_reg_wr_disable A39C  
   __end_of_ui_disp_menu_epr_ilp_scale_adj 7060    __size_of_ui_disp_menu_epr_ilp_scale_adj 00C4  
           _ui_disp_menu_epr_ilp_scale_adj 6F9C                          _pAds1115DiffPrObj 00EE  
                             __CFG_CP0$OFF 000000                              ?_m_flash_read 0060  
                              __CFG_OSC$HS 000000              ui_disp_menu_epr_calib_adj@buf 008A  
                                      l176 0584                                        WREG 000FE8  
                     ___up_pr_calib_adj@t8 007B                                        l828 36B6  
                                      l839 37DC                                        l964 68FC  
                                      _PR2 000FCB                ___set_short_poly_coefic@stp 00E6  
                         ??_key_process_up 0021                                        _dwm 00FD  
                       ___down_home_adj@t8 0020                               ___awmod@sign 0065  
                                      prod 000FF3       __size_of_ui_disp_menu_calib_diff_adj 00FC  
                                      tosl 000FFD                                        wreg 000FE8  
                       ___up_pose_size_adj 881C                  __size_of_ads1115_read_reg 01BC  
                             ___flmul@aexp 007B                               ___flmul@bexp 0080  
                  __end_of___x_arrange_str 91D6                       ??_lcd_disp_level_bar 0021  
                             ___flmul@sign 007A                             ?_m_flash_erase 0060  
                             ___flmul@temp 0085                   __end_of___down_pose_size 9CD0  
                             ___flmul@prod 0081        ___enter_menu_poly_coeffic@__subMenu 0062  
                 ??___set_short_warn_value 00E3          __size_of___up_adj_bar_level_scale 0016  
                _m_interp1_float_fast$5869 00DC                  ?___up_adj_bar_level_scale 0001  
                     ??_lcd_show_string_l0 0021                       ??_lcd_show_string_l1 0021  
                 ??_ui_disp_menu_pose_size 0021                         m_int16_2_str_4@buf 0068  
                           ?_m_flash_write 006E                  __size_of___up_density_adj 0016  
                 ?___set_short_poly_coefic 0001                               ___fltol@exp1 00C1  
                                     l1130 2EDA                                       l1129 2E86  
                                     l2226 849E                                       l2235 5454  
                                     l2236 5462                                       l1633 9476  
                                     l2266 9B68                                       l2418 9BA4  
                                     l2623 47FA                                       l1751 8BCA  
                                     l1648 87D0                                       l1752 8BC8  
                                     l1673 8F76                                       l2823 86B2  
                                     l2833 904C                                       l2770 7348  
                                     l2916 2580                                       l2860 1348  
                                     l2925 25B8                                       l2861 133C  
                                     l2862 1308                                       l2927 2626  
                                     l2919 2528                                       l2953 1960  
                                     l2946 16C4                                       l2963 1A72  
                                     l2955 19CE                                       l2877 14BC  
                                     l2982 4106                                       l2886 1550  
                                     l2983 411E                                       l2975 40AA  
                                     l2968 3FFE                  _ui_disp_menu_calib_pr_adj 66A8  
                                     STR_1 F3AA                                       STR_2 F376  
                                     STR_3 F37A                                       STR_4 F37A  
                                     STR_5 F3CD                                       STR_6 F3EB  
                                     STR_7 F3F0                                       STR_8 F37A  
                                     STR_9 F3D7                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATG 000F8F  
                                     _LATH 000F90                        ?___up_pose_size_adj 0001  
                            _m_mem_cpy_len 972E                  _ui_disp_menu_bar_full_adj 9CD0  
                           ??_lcd_disp_all 0020                          ??_key_process_set 0021  
                 ??___enter_menu_epr_calib 0020                   cal_diff_hight_to_vol_h@h 03CA  
                                     _pLCD 0100                   cal_diff_hight_to_vol_v@D 03DA  
                                     _hKel EF1D               __end_of_LCDDigitalIndexTable EEE2  
                                     _hKcy F0B1                   cal_diff_hight_to_vol_v@h 03CA  
                __size_of_lcd_disp_refresh 0062                                       _main 8F92  
                                     _menu 0033                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     _tmpx 03B2                                       btemp 0040  
                      _lcd_disp_unit_2nd_m 8D9A                    _handler_interrupt_hight 0008  
                      _lcd_disp_unit_1st_m 954E                   ?_ui_disp_menu_poly_c_adj 0001  
                     ___set_short_pr_calib 2A7C                                       prodh 000FF4  
                                     prodl 000FF3                                       start 00D8  
                           ??_iic_send_ack 0020                         _PrChipSampleFinish 00F5  
                            __CFG_IESO$OFF 000000                            ___fldiv@new_exp 0098  
                 ?_ui_disp_menu_warn_t_adj 0001                   ?_ui_disp_menu_warn_v_adj 0001  
                        _key_waite_release 977C           __end_of_iic_received_byte_if_ack A15E  
                   ___up_diff_calib_adj@t8 007B                 calib_data_init_diff_pr@t16 0077  
                             ___param_bank 000000                 calib_data_init_diff_pr@buf 0079  
                         ?_lcd_set_com_seg 0068         __size_of_calib_data_set_default_pr 01C4  
               calib_data_init_diff_pr@ret 0076                 __size_of___up_pr_calib_adj 0038  
                         ??_cal_diff_press 0020            __size_of_sample_call_cal_in_soc 0022  
               ??_ui_disp_menu_density_adj 0021                         ?_key_waite_release 0068  
                                    EECON2 000FA7                             ??_m_int8_2_hex 0020  
                    key_adj_value_float@t8 007A                 ??_ads1115_start_conversion 0021  
         ___enter_menu_warn_type@__subMenu 0062                             ??_lcd_show_chr 0021  
                            lcd_disp_all@i 0061                              lcd_disp_all@x 0060  
                     ??___up_pose_size_adj 007B                            ?_m_flash_unlock 0001  
                    ?_m_interp1_float_fast 00C4                                      TABLAT 000FF5  
                           ??_m_flash_read 0020                __size_of_ui_disp_menu_d_adj 002E  
                  ??_ads1115_set_data_rate 0020                            ___x_sample_fifo 4B26  
              __size_of_ui_disp_menu_h_adj 0070                                      RTCCFG 000F5F  
                                    l13110 7230                                      l13112 723C  
                                    l13104 7212                                      l14000 925A  
                                    l13130 7294                                      l13122 7272  
                                    l13114 7242                                      l13202 9172  
                                    l14010 9272                                      l14020 91B2  
                                    l14004 9266                                      l13214 95C2  
                                    l13126 7280                                      l14014 917E  
                                    l13302 9DDC                                      l14030 8ACC  
                                    l13216 95C4                                      l13240 947A  
                                    l13400 124C                                      l13144 6E1A  
                                    l13320 9D4C                                      l14032 8AD6  
                                    l13138 9B7E                                      l13250 9490  
                                    l13242 9482                                      l14210 5AC6  
                                    l11634 A0E6                                      l14018 91B0  
                                    l13314 9D7C                                      l14034 8AE0  
                                    l14042 8AFE                                      l13330 7CAE  
                                    l15002 1036                                      l14124 87DA  
                                    l13500 1504                                      l14212 5AD6  
                                    l14204 5A98                                      l13156 6E94  
                                    l13148 6E24                                      l13308 9DAC  
                                    l14036 8AEA                                      l14028 8AC2  
                                    l13340 7CE0                                      l13332 7CB8  
                                    l14052 8A8C                                      l14126 87DC  
                                    l14118 87C6                                      l15014 5C5C  
                                    l15006 5B7C                                      l13510 1524  
                                    l13430 1288                                      l14230 5B5E  
                                    l14222 5B30                                      l14214 5ADC  
                                    l13326 9D1C                                      l14038 8AF4  
                                    l13190 912E                                      l13342 7CEA  
                                    l13334 7CC2                                      l14046 8A56  
                                    l14310 8674                                      l13264 8F3E  
                                    l15008 5BFC                                      l14240 5CAC  
                                    l13520 154A                                      l13504 1510  
                                    l13512 152A                                      l14072 4F7A  
                                    l14064 8B60                                      l13344 7CF4  
                                    l13336 7CCC                                      l15112 6818  
                                    l14138 8816                                      l15018 5C70  
                                    l13610 247E                                      l13602 2450  
                                    l13530 15A6                                      l13442 131C  
                                    l14226 5B42                                      l15034 59AE  
                                    l13098 71FC                                      l14058 8B2A  
                                    l13186 9124                                      l13338 7CD6  
                                    l14306 8662                                      l16002 2A70  
                                    l14330 901A                                      l15122 6852  
                                    l15106 67F6                                      l15114 682C  
                                    l13284 8F7C                                      l13268 8F48  
                                    l13620 24FC                                      l14260 5D2E  
                                    l14420 544A                                      l13444 1322  
                                    l13364 11AA                                      l15028 596A  
                                    l13348 7CFE                                      l14308 866E  
                                    l16100 6CEE                                      l13702 1652  
                                    l14270 5D64                                      l13550 15FE  
                                    l13542 15E6                                      l13534 15B8  
                                    l13382 11F4                                      l13358 1186  
                                    l14182 8744                                      l13198 9152  
                                    l14318 86A4                                      l16110 6D30  
                                    l14334 903E                                      l14326 9008  
                                    l14088 7ADC                                      l14096 7B2C  
                                    l13640 25A2                                      l13560 2370  
                                    l13720 16AC                                      l13704 1658  
                                    l14256 5D1A                                      l13544 15EA  
                                    l13472 13BA                                      l13448 132C  
                                    l13392 1222                                      l13376 11E0  
                                    l13368 11B4                                      l14440 07A2  
                                    l15048 5A30                                      l13296 9E0C  
                                    l15400 69B0                                      l15232 7178  
                                    l17000 7BA0                                      l14328 9014  
                                    l13634 257C                                      l13570 239E  
                                    l13802 1A44                                      l13730 16EC  
                                    l13722 16B2                                      l13714 1688  
                                    l13706 166A                                      l14274 5D80  
                                    l14266 5D4A                                      l14418 5444  
                                    l14434 5472                                      l13538 15DA  
                                    l13466 13AA                                      l13458 136C  
                                    l14186 876A                                      l14450 091A  
                                    l15170 62FA                                      l15322 78A8  
                                    l15250 77BA                                      l16122 54B6  
                                    l16042 2DB0                                      l16018 2ACE  
                                    l17002 7BA8                                      l13628 2534  
                                    l13580 23CE                                      l13812 1A92  
                                    l13804 1A58                                      l14268 5D5A  
                                    l13900 403E                                      l13468 13B0  
                                    l13476 13CC                                      l13388 1218  
                                    l14516 342E                                      l14508 3396  
                                    l14460 0C0C                                      l14452 091E  
                                    l14284 72CC                                      l15340 9414  
                                    l14700 89E8                                      l17020 76EA  
                                    l15252 77C2                                      l16124 54DC  
                                    l16132 556E                                      l16036 2DA0  
                                    l16028 2D42                                      l16116 6D3C  
                                    l13670 26A4                                      l13646 25CC  
                                    l13590 23FC                                      l13566 2394  
                                    l13814 1A9C                                      l13726 16D8  
                                    l13910 40E8                                      l13902 404E  
                                    l13494 14EE                                      l13486 149C  
                                    l14550 3250                                      l14542 30CE  
                                    l14198 5A7A                                      l14470 0C90  
                                    l14454 0974                                      l14446 08B2  
                                    l14286 72DC                                      l15350 943A  
                                    l17030 7708                                      l17022 76F0  
                                    l15086 9842                                      l15078 982E  
                                    l15318 786E                                      l15246 77AA  
                                    l16142 559C                                      l16126 5512  
                                    l16134 5588                                      l16062 895C  
                                    l15190 60F2                                      l17006 7BB0  
                                    l14632 A002                                      l14384 82CA  
                                    l13680 26EA                                      l13672 26B8  
                                    l13656 2620                                      l13912 40F8  
                                    l13904 408C                                      l14544 31BC  
                                    l14624 A0FE                                      l17120 6B3E  
                                    l13840 7A7A                                      l13832 7A54  
                                    l15408 69F0                                      l16312 64DA  
                                    l14296 7336                                      l14288 72E2  
                                    l15344 9424                                      l15336 9406  
                                    l15432 529A                                      l16232 3C5E  
                                    l17040 7726                                      l17032 770E  
                                    l17024 76F6                                      l15176 63AE  
                                    l15328 78CE                                      l15272 7386  
                                    l16160 75D2                                      l15248 77B2  
                                    l15256 77E2                                      l16128 5538  
                                    l16048 2DCE                                      l15096 67C6  
                                    l13682 26EE                                      l13674 26DA  
                                    l13666 2676                                      l13586 23F2  
                                    l14490 1C48                                      l17130 6B68  
                                    l17114 6B26                                      l14714 9E3C  
                                    l16330 656A                                      l15346 9430  
                                    l15506 8332                                      l14706 8A1E  
                                    l15418 521E                                      l15522 8226  
                                    l15362 6D62                                      l16410 5654  
                                    l17042 772C                                      l17034 7714  
                                    l17026 76FC                                      l17018 76E4  
                                    l15274 738E                                      l15282 73BE  
                                    l16154 75BA                                      l15258 77FE  
                                    l16082 83C4                                      l14636 A018  
                                    l13772 194A                                      l13924 4170  
                                    l13860 4708                                      l14564 3336  
                                    l14556 328E                                      l14492 1C98  
                                    l14484 1BDC                                      l14628 A110  
                                    l17124 6B4E                                      l13852 7AC0  
                                    l13844 7A9E                                      l13836 7A68  
                                    l13828 7A44                                      l14812 37B4  
                                    l15620 96F8                                      l16316 64E8  
                                    l16308 64D0                                      l14900 0CB2  
                                    l14724 987A                                      l15444 52EE  
                                    l15436 52B4                                      l15428 527A  
                                    l16260 3D4E                                      l16244 3CC6  
                                    l15380 6DF6                                      l15372 6DB6  
                                    l16420 56CA                                      l17044 7732  
                                    l17036 771A                                      l17028 7702  
                                    l15276 7396                                      l15284 73DA  
                                    l16180 762C                                      l16156 75C2  
                                    l16164 75F2                                      l16148 55A8  
                                    l16068 8968                                      l15196 61A6  
                                    l14644 65CE                                      l15710 462A  
                                    l15702 45E0                                      l13942 84BE  
                                    l14478 1AD4                                      l13838 7A74  
                                    l15390 695C                                      l14806 377E  
                                    l14910 0D0C                                      l14902 0CC4  
                                    l14718 9858                                      l15446 52FE  
                                    l15438 52CC                                      l16254 3D1A  
                                    l16238 3C92                                      l16414 5680  
                                    l17038 7720                                      l15278 739E  
                                    l16174 7620                                      l16158 75CA  
                                    l16166 760C                                      l14654 666A  
                                    l17062 9BA6                                      l15704 45EC  
                                    l13696 162E                                      l13864 4756  
                                    l14584 02A4                                      l14488 1C44  
                                    l17144 6B9C                                      l17136 6B84  
                                    l13848 7AAC                                      l14752 3626  
                                    l15632 971E                                      l15624 9700  
                                    l14680 608E                                      l14920 0D66  
                                    l14912 0D1E                                      l14904 0CD6  
                                    l16272 3DB8                                      l15536 89BE  
                                    l16432 6880                                      l17048 7738  
                                    l16088 83D0                                      l17240 6AA6  
                                    l17224 6A58                                      l15650 3A60  
                                    l15642 3A3A                                      l13946 9730  
                                    l13954 976E                                      l13778 1974  
                                    l13874 4846                                      l13882 9B12  
                                    l13970 20D6                                      l14498 1F10  
                                    l17146 6BA2                                      l14826 3814  
                                    l14770 368E                                      l15626 9704  
                                    l16362 6742                                      l14666 6004  
                                    l14674 6048                                      l14930 0DC0  
                                    l14922 0D78                                      l14914 0D30  
                                    l14906 0CE8                                      l15458 958E  
                                    l15466 8E40                                      l15482 8D86  
                                    l15474 953A                                      l15490 8D20  
                                    l16266 3D84                                      l16290 9F96  
                                    l16418 56AE                                      l16450 691C  
                                    l15546 4B40                                      l15810 A1C8  
                                    l17234 6A92                                      l15660 3C06  
                                    l13788 19C8                                      l13892 400E  
                                    l13868 47A8                                      l13972 210E  
                                    l13964 2060                                      l16508 A188  
                                    l16524 A16A                                      l14692 9E64  
                                    l15636 9728                                      l16460 70C8  
                                    l14676 6062                                      l14940 0E1A  
                                    l14932 0DD2                                      l14924 0D8A  
                                    l14916 0D42                                      l14908 0CFA  
                                    l14844 2E32                                      l16604 3FB0  
                                    l16540 3E00                                      l17084 96C6  
                                    l15732 9218                                      l15740 922C  
                                    l17244 6AB6                                      l17228 6A68  
                                    l17236 6A98                                      l15654 3A6A  
                                    l15646 3A44                                      l13798 1A1E  
                                    l13958 1F36                                      l14598 048A  
                                    l16454 706E                                      l16470 6FAA  
                                    l14950 0E74                                      l14942 0E2C  
                                    l14934 0DE4                                      l14926 0D9C  
                                    l14918 0D54                                      l16382 8E80  
                                    l16286 9F8A                                      l16294 9F9C  
                                    l16446 690E                                      l15558 4C02  
                                    l14838 2E00                                      l15822 9FCA  
                                    l15672 41B4                                      l13968 20D0  
                                    l14688 9E5A                                      l14792 3714  
                                    l14784 36F0                                      l16456 708C  
                                    l16464 70E6                                      l16472 6FC8  
                                    l16480 7022                                      l14960 0ECE  
                                    l14952 0E86                                      l14944 0E3E  
                                    l14936 0DF6                                      l14928 0DAE  
                                    l16288 9F90                                      l16448 6916  
                                    l14880 43D6                                      l14856 2F30  
                                    l16640 4A64                                      l16632 4A1C  
                                    l15920 5DF8                                      l15912 5DA4  
                                    l13992 9242                                      l15736 9222  
                                    l17248 6AC2                                      l17280 7C90  
                                    l13898 4036                                      l16458 70AA  
                                    l16466 7100                                      l16474 6FE6  
                                    l16482 703E                                      l14970 0F28  
                                    l14962 0EE0                                      l14954 0E98  
                                    l14946 0E50                                      l14938 0E08  
                                    l15498 8DEC                                      l14890 44F8  
                                    l14882 43FC                                      l16730 4DF2  
                                    l16714 4D94                                      l16706 4D5A  
                                    l16650 4AB0                                      l16618 49E0  
                                    l15842 8862                                      l15834 881E  
                                    l17354 A1B0                                      l15684 4340  
                                    l15676 41BE                                      l16476 7004  
                                    l14980 0F82                                      l14972 0F3A  
                                    l14964 0EF2                                      l14956 0EAA  
                                    l14948 0E62                                      l16396 55CA  
                                    l14884 4422                                      l14876 4376  
                                    l15588 9802                                      l14868 308A  
                                    l16724 4DD8                                      l16660 4AF2  
                                    l15916 5DCC                                      l15772 863E  
                                    l13996 924E                                      l13988 9236  
                                    l15908 9BF2                                      l15860 9AD0  
                                    l16900 7666                                      l17268 7C4C  
                                    l14990 0FDC                                      l14982 0F94  
                                    l14974 0F4C                                      l14966 0F04  
                                    l14958 0EBC                                      l17294 9F52  
                                    l14886 4460                                      l14878 43AC  
                                    l16590 3F5E                                      l16558 3E62  
                                    l16726 4DDE                                      l15942 5E72  
                                    l15950 5E84                                      l15934 5E60  
                                    l15926 5E3C                                      l15862 9AD6  
                                    l15846 8878                                      l16910 7684  
                                    l16902 766C                                      l14992 0FEE  
                                    l14984 0FA6                                      l14976 0F5E  
                                    l14968 0F16                                      l16496 8700  
                                    l16576 3EF8                                      l16568 3EB6  
                                    l15792 9CC0                                      l15944 5E78  
                                    l15928 5E50                                      l16920 6BBE  
                                    l16904 7672                      ___set_short_epr_param 5480  
                                    l14994 1000                                      l14986 0FB8  
                                    l14978 0F70                                      l14898 0CA4  
                                    l16498 871C                                      l16586 3F46  
                                    l16690 4CD4                                      l16658 4AEC  
                                    l15946 5E7E                                      l16930 6BE8  
                                    l16922 6BC4                                      l15874 9A98  
                                    l16906 7678                                      l16914 768A  
                                    l14996 1012                                      l14988 0FCA  
                                    l16668 4B22                                      l15788 9CA2  
                                    l16860 50FC                                      l16940 6C10  
                                    l16932 6BF0                                      l16924 6BCA  
                                    l15892 9C6E                                      l15876 9A9E  
                                    l16908 767E                                      l16836 9786  
                                    l16844 97A0                                      l17660 8FD4  
                                    l14998 1024                                      l16678 4CAE  
                                    l16870 514A                                      l16862 5102  
                                    l16854 50BA                                      l15990 2A46  
                                    l15966 2764                                      l16942 6C16  
                                    l16934 6BF8                                      l16926 6BD0  
                                    l16846 97B0                                      l17654 8FCA  
                                    l16872 5168                                      l16864 5120  
                                    l16856 50C0                                      l16880 51C2  
                                    l15984 2A36                                      l15976 29D8  
                                    l16960 74E2                                      l16936 6C00  
                                    l16928 6BDC                                      l15896 9C84  
                                    l17648 8FC0                                      l16698 4D18  
                                    l16874 5186                                      l16866 5126  
                                    l16858 50DE                                      l16970 7508  
                                    l16962 74E8                                      l16954 74CE  
                                    l16938 6C08                                      l16946 6C1C  
                                    l16890 7648                                      l17666 8FDE  
                                    l16876 51A4                                      l16868 512C  
                                    l16972 7510                                      l16964 74F0  
                                    l16956 74D4                                      l16892 764E  
                                    l16884 7636                                      l16990 7B78  
                                    l16974 7518                                      l16966 74F8  
                                    l16958 74DA                                      l16982 752C  
                                    l16894 7654                                      l16886 763C  
                                    l16992 7B80                                      l16976 7520  
                                    l16968 7500                                      l16896 765A  
                                    l16888 7642                                      l16994 7B88  
                                    l16986 7B6A                                      l16978 7526  
                                    l16898 7660                                      l16996 7B90  
                                    l16988 7B70                                      l16998 7B98  
                            ___fltol@sign1 00C0                            __end_of___aldiv 5B70  
                          __end_of___fladd 1610                                      ?_main 0001  
                        ?_key_process_down 0001                      __end_of_data_init_all A376  
                          __end_of___fldiv 2712                            __end_of___awdiv 729E  
                          __end_of___lbdiv 972E                            __end_of___flneg 9B24  
                                    STR_10 F3D2                                      STR_11 F3BE  
                                    STR_20 F3FA                                      STR_12 F3B9  
                                    STR_13 F37A                                      STR_21 F3C8  
                                    STR_14 F37A                                      STR_22 F39B  
                                    STR_30 F3B4                                      STR_15 F37A  
                                    STR_31 F3E6                                      STR_23 F391  
                                    STR_24 F3A0                                      STR_16 F39B  
                                    STR_32 F37F                       ?_lcd_disp_unit_2nd_m 0001  
                                    STR_17 F37A                                      STR_25 F396  
                                    STR_33 F388                                      STR_18 F3F5  
                                    STR_26 F3A5                                      STR_27 F3DC  
                                    STR_19 F3C3                                      STR_28 F3AF  
                          __end_of___awmod 7ACA                                      STR_29 F3E1  
                          __end_of___flmul 1AB6                            __end_of___fltol 5D92  
                          __end_of___lldiv 735A                        ??_key_waite_release 0020  
                     _cal_diff_hight_level 309E                                      u13100 5CCC  
                          ___awdiv@divisor 0062                       ?_lcd_disp_unit_1st_m 0001  
                                    u13105 5CC0                                      u12360 268A  
                                    u14008 43BE                                      _T2CON 000FCA  
                                    u13250 82C6                                      u14018 43E8  
                                    u14108 5BE4                                      u14028 440E  
                                    u15100 2BA2                                      u14118 5C12  
                                    u12550 1A32                                      u12470 18EC  
                                    u14038 4434                                      u15030 2838  
                                    u14119 5C30                                      u14128 5C48  
                                    u11584 6E74                                      u13600 8A08  
                                    u14048 4472                                      u14161 84DE  
                                    u11585 6E6E                                      u14049 4488  
                                    u12810 9758                                      u11594 6EAA  
                                    u13610 8A3E                                      u14058 44B0  
                                    u13530 6660                 ___set_short_warn_value@t32 03CB  
                                    u12475 18E0                                      u11595 6EA4  
                                    u14059 44C6                                      u11860 12D2  
                                    u12900 8AAC                                      u14068 44E4  
                                    u16020 6A7E                                      u11870 12EA  
                                    u16030 6A80                                      u13607 89FE  
                                    u14088 5B8E                                      u11880 12EC  
                                    u14089 5BA2                                      u12817 974E  
                                    u13617 8A34                                      u14098 5BB4  
                                    u12930 8B52                                      u13570 607C  
                                    u14099 5BD2                                      u12907 8AA2  
                                    u12940 8B80                                      u12937 8B48  
                                    u16081 7C12                                      u12890 8A76  
                                    u12947 8B76                                      u13928 63C6  
                                    _FSR0H 000FEA                                      u12897 8A6C  
                                    u13929 63DA                                      u14818 4674  
                                    u13938 63EC                                      u14819 468A  
                                    u13939 6410                                      u14828 46A6  
                                    u14748 4514                                      u13948 6422  
                                    _FSR0L 000FE9                                      u14749 4528  
                                    u13949 643A                                      u14758 453A  
                                    u13958 644C                                      u14759 4558  
                                    u13959 6464                                      u14768 456A  
                                    u13968 6476                                      u14769 4582  
                                    u13969 648E                                      u14778 4594  
                                    u13978 64A0                                      u14779 45A8  
                                    u14788 45BA                                      u13988 4362  
                                    u14798 45FE                                      u13998 4388  
                                    u14799 4614                            __end_of___lwdiv 86BC  
                          __end_of___lwmod 9056                        ui_disp_menu_home@t8 008B  
                      ui_disp_menu_home@mf 0087                            ___awdiv@counter 0064  
               ___set_short_warn_value@stp 03CF                                      _PORTB 000F81  
                                    _PORTC 000F82                 __end_of_sample_call_cal_pr A17C  
               ui_disp_menu_warn_t_adj@buf 0077                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISG 000F98  
                                    _TRISH 000F99                         ??_key_process_down 0021  
                          ??_lcd_disp_logo 0020                               ?_key_polling 0001  
                      lcd_disp_dp_loc_0@dp 0020                        lcd_disp_dp_loc_1@dp 0020  
                      lcd_disp_dp_loc_2@dp 0020                               ?_key_process 0001  
                      lcd_disp_dp_loc_4@dp 0020                        lcd_disp_dp_loc_5@dp 0020  
                      lcd_disp_dp_loc_6@dp 0020                        ___lmul@multiplicand 0064  
                           __CFG_FCMEN$OFF 000000                            __end_of_crc_sum 7B68  
               ui_disp_menu_warn_v_adj@buf 008C                     _diffPrChipSampleFinish 00F8  
               ui_disp_menu_warn_v_adj@fps 0092                         ___up_warn_type_adj 9892  
                 ??___enter_menu_warn_type 0060                     ___set_short_diff_calib 2712  
                                    _glRtc 0133                sample_diff_pr_chip_fast@t16 0091  
                                    _st_Bj 002C                      __size_of___up_psw_adj 0016  
                           ?_m_mem_cpy_len 0060                       _lcd_disp_unit_2nd_m3 82CE  
                           __CFG_T1DIG$OFF 000000                     ??_sample_variable_init 0020  
             ??___enter_menu_set_base_zero 0020                       _lcd_disp_unit_1st_m3 8E00  
                                    pclath 000FFA                                      tablat 000FF5  
             __end_of_sample_in_soc_adc_ch 4DF6                            __end_of_rtc_set 74CC  
                        ??_data_sys_cal_v1 0020                          ??_data_sys_cal_v2 0020  
     __size_of___sys_data_save_write_flash 0104                                      plusw1 000FE3  
                                    plusw2 000FDB                       _event_process_ticker A39C  
                       crc_verify@expected 0074                        ?___up_warn_type_adj 0001  
                                    status 000FD8                       ___up_pose_size_adj@p 007C  
                             _adc_pressure 016E               __end_of___set_long_work_mode A13E  
                          ??_iic_send_byte 0021                      ?___set_short_pr_calib 0001  
                    __end_of_data_sys_init 49BC                            ___lbdiv@divisor 0020  
                       _diff_prCalibTabDef 0310                  __end_of_key_waite_release 97C6  
                          ___lbdiv@counter 0061                           ?_lcd_show_string 0073  
                         key_shift_loc@max 0063                           key_shift_loc@loc 0060  
                         key_shift_loc@min 0062                   ??___enter_menu_work_mode 0020  
                    ___set_short_pose_size 5D92                            ??_iic_waite_ack 0020  
          __size_of_ui_disp_menu_bzero_adj 002E                           __end_of_HexTable EF1D  
             __size_of_key_adj_value_float 00DE                      _sample_call_in_ticker 9692  
             __size_of_key_adj_value_fixed 00F8                            __initialization 78E0  
                        ??___down_home_adj 0020           __size_of_sample_call_cal_diff_pr 001E  
             at24c02_write_n_byte@pAt24c02 0066                               __end_of_hKel F0B1  
                             __end_of_hKcy F245                      ___set_short_warn_type 8358  
                        ??_cal_diff_p_to_h 0020                               __end_of_main 8FF4  
                     ___up_adj_work_mode@p 0060                              _prCalibTabDef 0400  
               ___enter_menu_warn_value@t8 0082                           _glNoEventTimeOut 00FF  
             ??_ui_disp_menu_epr_calib_adj 0021          __end_of_calib_data_set_default_pr 4346  
          __size_of___enter_menu_bar_scale 003C                       iic_received_byte@ret 0064  
              __size_of_calib_data_init_pr 012A                   ?_cal_additional_pressute 0001  
                        ??___down_pr_calib 0021               __size_of_sample_pr_chip_fast 016A  
                  sample_in_soc_adc_ch@t16 008A                     key_adj_value_float@t16 0078  
                            _userTicker_ms 0025                     key_adj_value_fixed@t16 0073  
                  ads1115_set_data_rate@dr 0062              ads1115_set_data_rate@pAds1115 0060  
                     ??___up_warn_type_adj 0020                      ??_lcd_disp_unit_2nd_m 0020  
                   key_adj_value_float@mfp 0075                     key_adj_value_float@loc 0077  
                   key_adj_value_fixed@loc 0070                      ?_cal_diff_hight_level 0001  
                    ??_lcd_disp_unit_1st_m 0020                                     ??_main 0021  
              __size_of___enter_menu_set_d 0068                __size_of___enter_menu_set_h 0068  
                            __activetblptr 000002                      ___enter_menu_password A2D6  
               ___enter_menu_warn_type@fps 0063                               ___up_psw_adj A252  
              ??___enter_menu_poly_coeffic 0060                            ??_m_flash_erase 0021  
            lcd_disp_unit_temperature@show 0020                ??_lcd_disp_unit_temperature 0020  
                               _at24c02Ch0 0182                                 _at24c02Ch1 018D  
             __end_of_key_process_set_long 7584         __size_of___set_short_epr_ilp_scale 00B0  
                          ??_m_flash_write 0076                     ___set_long_work_mode@p 0060  
                     cal_diff_press@tabrow 03E2                           ?___x_arrange_str 0060  
         __size_of_calib_data_init_diff_pr 012A                     _sample_call_cal_in_soc A0DA  
                      ___up_warn_value_adj A23C                ui_disp_menu_calib_pr_adj@t8 0094  
                                   _ADCON1 000FC1            __size_of___set_short_warn_value 00C8  
                     ___set_long_base_zero 939C           __size_of_ads1115_read_conversion 0046  
                       _sensorSimpleTsLong 00F0                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                      ?_lcd_disp_unit_2nd_m3 0001  
                         __end_of___exp_10 928E                           ___awdiv@dividend 0060  
                     ___up_poly_coefic_adj A268            __size_of_ui_disp_menu_pose_size 002A  
                    ?_lcd_disp_unit_1st_m3 0001                                     _LCDCON 000FA8  
          ___sys_data_save_write_flash@buf 00E1                                     _LCDSE0 000FA9  
                                   _LCDSE1 000FB6                                     _LCDSE2 000FB7  
                                   _LCDSE3 000FB8                                     _LCDSE4 000FB9  
                                   _LCDSE5 000FBA                                     _LCDREG 000FD2  
         ___set_short_epr_ilp_scale@gohome 03CA            ___sys_data_save_write_flash@ret 00DE  
          ___sys_data_save_write_flash@stp 00DF                  ??_handler_interrupt_hight 0001  
                                   i1l2314 0090                                     i1l2413 A218  
           ___set_short_poly_coefic@gohome 00E3                                     i2l2303 6F16  
                                   i2l2304 6F1E                                     i2l2305 6F26  
                                   i2l2306 6F2E                                     i2l2413 A232  
                                   i2l2309 6F60                             __CFG_WDTEN$OFF 000000  
               ??_ui_disp_adj_xfixed_pt_dp 007C                                     _INTCON 000FF2  
                                   _TABLAT 000FF5               __end_of_at24c02_write_n_byte 5C86  
                    ?_event_process_ticker 0001                   ?___enter_menu_warn_value 0001  
          __size_of___enter_menu_epr_calib 00A8                ?___exit_menu_to_home_unsave 0001  
                             m_mem_set@buf 0060                               m_mem_set@len 0063  
                            m_int8_2_hex@b 0062        __size_of___enter_menu_epr_ilp_scale 00BA  
             __size_of_sys_ticker_irq_hook 001A                           __end_of___xxtofl 4182  
                         ??_lcd_disp_level 0021        __size_of_ui_disp_menu_epr_calib_adj 00C2  
                 ??___up_epr_ilp_scale_adj 0021                           __end_of_delay_ms A026  
                   __size_of___up_home_adj 0028                           __end_of_delay_us 9B94  
                            ?_at24c02_init 0060             __size_of_sample_diff_pr_fliter 007E  
            __end_of_sample_diff_pr_fliter 8456                   ?_key_process_set_up_long 0001  
                           __CFG_XINST$OFF 000000                          _prChipSampleCount 00F6  
                           cal_press@F7863 0123                      m_interp1_float_fast@f 00E0  
                    m_interp1_float_fast@i 00E4                    __end_of___x_sample_fifo 4C90  
                    m_interp1_float_fast@x 00D4                      m_interp1_float_fast@y 00D8  
             ??___enter_menu_set_pose_size 0020                       ?___up_warn_value_adj 0001  
                         __end_of_lcd_init A1B6                           __end_of_iic_stop 9C6C  
                                   ___flge 46BA                                     ___lmul 8732  
                                ??___aldiv 0020                                  ??___fladd 00AC  
                                   ___wmul 9C00                ui_disp_menu_warn_v_adj@type 0094  
                   ??_m_interp1_float_fast 00CC                                  ??___fldiv 008F  
                ui_disp_menu_poly_c_adj@t8 008E                                  ??___awdiv 0020  
                                ??___lbdiv 0021                                  ??___flneg 0020  
                                ??___awmod 0020                                  ??___flmul 0076  
                                ??___fltol 00BC                       __end_of_flashTestbuf F376  
                                ??___lldiv 0020                    at24c02_write_n_byte@buf 0069  
                  at24c02_write_n_byte@len 006B                                  ??___lwdiv 0021  
                                ??___lwmod 0021                 ??___enter_menu_calib_press 007D  
                   __size_of_key_shift_loc 0044                     ?___set_short_epr_param 0001  
                      lcd_disp_level@level 0072                                     clear_0 791A  
                                   clear_1 792C                                     clear_2 7938  
                                   clear_3 7946                                     clear_4 7958  
                                   clear_5 7964                                     clear_6 7970  
                            m_flash_read@i 0068                           ___awdiv@quotient 0066  
                          ___awmod@divisor 0062              ui_disp_menu_calib_diff_adj@t8 0094  
                     __size_of_lcd_show_dp 006C                       __end_of_lcd_disp_all 9E80  
                      m_interp1_cal_p_t@pr 0092                        m_interp1_cal_p_v@pr 0095  
                          ___awmod@counter 0064                       __size_of_in_adc_init 0024  
                                ??_crc_sum 0064                      i2_sys_ticker_irq_hook A222  
                     _LCDDigitalIndexTable EEB7                       at24c02_read_n_byte@i 0073  
                       ___up_epr_calib_adj 9C6C                         ui_disp_xfloat_pt@x 0085  
                  ??_in_adc_start_and_read 0020                   __size_of_ads1115_set_pga 0024  
                 __size_of_ads1115_set_mux 0024                           key_polling@ktemp 0066  
                         __end_of_soc_init A34A                       __end_of_iic_send_ack 95F4  
                         _ads1115_read_reg 4346                     _ui_disp_menu_bzero_adj 9EDC  
                             __mediumconst ECB6                           __end_of_rtc_init 9950  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8          __size_of_iic_received_byte_if_ack 0020  
                     lcd_disp_get_code@chr 0060                   __size_of_lcd_disp_unit_t 0054  
                     lcd_disp_get_code@ret 0061                  ?_iic_received_byte_if_ack 0001  
                          ??_m_mem_cpy_len 0020                                  ??_rtc_set 0020  
                    ?___set_long_base_zero 0001                   ui_disp_start_cs600@F7726 01F0  
                    ?___up_poly_coefic_adj 0001          __end_of___set_short_epr_ilp_scale 7634  
          __size_of___enter_menu_warn_type 0062                        ?___up_epr_calib_adj 0001  
                         ___up_density_adj A294                     ___enter_menu_bar_scale 99CC  
               __end_of___up_adj_work_mode 9C00                   ?_cal_diff_hight_to_vol_h 03CA  
                 ?_cal_diff_hight_to_vol_v 03CA                           ___lbdiv@dividend 0060  
                 ??_event_process_time_out 0020                       __end_of_m_int8_2_hex 92E8  
                               ___flge@ff1 00B8                                 ___flge@ff2 00BC  
                     __end_of_lcd_show_chr 7D34                               ___xxtofl@arg 006A  
                             _pcf8574Value 002D                               ___xxtofl@exp 0069  
                             ___xxtofl@val 0060                     ??___set_short_pr_calib 008A  
                        ?___down_dpr_calib 0001                           _lcd_disp_refresh 90B8  
                               __accesstop 0060                    __end_of__initialization 7976  
                ui_disp_menu_warn_t_adj@t8 007D                       __end_of_m_flash_read 84D4  
                        _sampBufDiffPr_D01 01E0                          _sampBufDiffPr_D23 01D8  
                               ___flneg@f1 00A0                                 ___exp_10@n 0020  
                ui_disp_menu_warn_v_adj@t8 0095                   __size_of_m_int16_2_str_4 015E  
               __end_of___set_long_density 9644                  ___enter_menu_poly_coeffic 9644  
               __size_of_key_waite_release 004A               __size_ofi2_rtc_alrm_irq_hook 0002  
                           ??_at24c02_init 0020                         ??___down_dpr_calib 0021  
                            ___rparam_used 000001                  _lcd_disp_unit_temperature 8CCE  
                               ___fltol@f1 00B8                     ?___set_short_pose_size 0001  
                 sample_call_in_ticker@ret 00E6                     ?_sample_call_in_ticker 0001  
                   ?___set_short_warn_type 0001                      _handler_interrupt_low 0018  
                        _event_process_rtc 9F34                      ??___up_warn_value_adj 0021  
       __size_of_ui_disp_menu_calib_pr_adj 00E0                              _p_prEepromObj 0027  
          __size_of___enter_menu_work_mode 0012                             iic_send_byte@i 0065  
       __size_of_ui_disp_menu_bar_full_adj 0030                             iic_send_byte@x 0064  
                     _inSocAdcSampleFinish 00F2                          _sampBufExPr0InSoc 01B0  
         __end_of_ui_disp_menu_density_adj 9EDC                             __pcstackCOMRAM 0001  
                        _sampBufExPr1InSoc 01A8                     ___set_short_warn_value 6C7C  
                       __size_of_cal_press 007C                       ??___up_epr_calib_adj 0021  
                             __pidataBANK0 A3C0                               __pidataBANK1 A376  
           __size_of_ui_disp_adj_xfloat_pt 025A                         ?_event_process_rtc 0001  
           __size_of_ui_disp_adj_xfixed_pt 00C8                     _ui_disp_menu_pose_size 9F88  
            __end_of_ui_disp_adj_xfloat_pt 382A              __end_of_ui_disp_adj_xfixed_pt 6E0C  
             __size_of___up_diff_calib_adj 0038                    m_flash_write@writeTimes 0078  
               ___enter_menu_epr_calib@t32 007E            __end_of_handler_interrupt_hight 6F9C  
                    m_flash_write@pageAddr 007A                 ___enter_menu_epr_calib@fps 0082  
                   ??_cal_diff_hight_level 0020                ___enter_menu_warn_value@t32 0083  
                   ___enter_menu_epr_calib 7790                ___enter_menu_warn_value@fps 0080  
                         ___lbdiv@quotient 0062                      ___x_sample_fliter@t32 008A  
                 _sample_diff_pr_chip_fast 3DE2                     ?___enter_menu_password 0001  
                    ___x_sample_fliter@buf 007A                   ___enter_menu_set_density 888E  
                    ___x_sample_fliter@len 007C                       _sample_in_soc_adc_ch 4C90  
                    ___x_sample_fliter@max 0086                      ___x_sample_fliter@min 0088  
                      ??_event_process_rtc 0021               __end_of_ui_disp_clear_num_dp 9342  
                          _key_process_set 7B68                              ___up_home_adj 9FB2  
                     ___set_long_work_mode A11E                      _ads1115_init_all_chip 998E  
                 ___x_sample_fliter@maxLoc 0084                    in_adc_start_and_read@ch 0066  
                 ___x_sample_fliter@minLoc 0085                         __size_of_lcd_bl_on 000A  
                       _rtcc_reg_wr_enable A384                     ??_lcd_disp_unit_2nd_m3 0020  
               calib_data_set_default_pr@i 006E                 calib_data_set_default_pr@j 006F  
                       __size_of_iic_start 0038                    key_adj_value_fixed@dloc 0071  
                        crc_append@message 006C                     ??_lcd_disp_unit_1st_m3 0020  
                     __size_of_key_polling 005C                          ?___down_pose_size 0001  
                     __size_of_key_process 00D0                          lcd_disp_logo@show 0020  
                       __size_of_m_mem_cpy 006C                __end_of_sample_all_power_on A328  
                       __size_of_m_mem_set 0022                     ??_event_process_ticker 0021  
                            _key_shift_loc 980C                        ___x_sample_fifo@buf 007A  
                        lcd_show_string@t8 0075                        ___x_sample_fifo@len 007E  
                      ___x_sample_fifo@ret 0085                                 __pbssBANK0 00E8  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                               __pbssBANK5 0500                         ??___down_pose_size 0021  
                   ___enter_menu_set_d@t32 007F                     ___enter_menu_set_h@t32 007F  
                   ___enter_menu_set_d@fps 007D                                 _defalutRtc 01F6  
                      ?_rtcc_reg_wr_enable 0001                     ___enter_menu_set_h@fps 007D  
                 __size_of_sys_ticker_init 0010                          _pdiff_prEepromObj 0029  
                      ___x_sample_fliter@i 008E                      ui_disp_menu_h_adj@fps 008A  
            __size_of_sample_all_power_off 000E                  __end_of_event_process_rtc 9F5E  
                    calib_data_init_pr@t16 0077                 __end_of___up_base_zero_adj A2C0  
      __end_of_ui_disp_menu_calib_diff_adj 65B0                _ui_disp_menu_calib_diff_adj 64B4  
                      m_flash_write@tmpBuf 007F                            lcd_disp_level@i 0073  
                    calib_data_init_pr@buf 0079            __size_of___up_epr_ilp_scale_adj 0016  
                    calib_data_init_pr@ret 0076                __end_of_at24c02_read_n_byte 46BA  
                        ___x_sample_fifo@i 0089                          ___x_sample_fifo@x 007C  
                         _diffPrChipSampCh 00F9                    _sample_call_cal_diff_pr A17C  
                         ??_m_flash_unlock 0020                __size_of_lcd_disp_chr_loc_0 0090  
              __size_of_lcd_disp_chr_loc_1 0090                __size_of_lcd_disp_chr_loc_2 0090  
              __size_of_lcd_disp_chr_loc_3 0090                __size_of_lcd_disp_chr_loc_4 0090  
              __size_of_lcd_disp_chr_loc_5 0090                __size_of_lcd_disp_chr_loc_6 0090  
              __size_of_lcd_disp_chr_loc_7 0090                          ___x_sample_fliter 2DDA  
                 ui_disp_menu_warn_t_adj@p 007E                           ___up_home_adj@t8 0020  
                  lcd_disp_unit_2nd_m@show 0020                    ads1115_set_pga@pAds1115 0060  
           ___enter_menu_set_base_zero@t32 007F                           ?___x_sample_fifo 007A  
                     _key_process_set_long 74CC         __end_of___enter_menu_epr_ilp_scale 7414  
               ___enter_menu_epr_ilp_scale 735A             ___enter_menu_set_base_zero@fps 007D  
         __size_of___set_short_poly_coefic 0070                                    ?___flge 00B8  
                   ___enter_menu_warn_type 9056         __end_of_ui_disp_menu_epr_calib_adj 7122  
               _ui_disp_menu_epr_calib_adj 7060                                    ?___lmul 0060  
                                  POSTINC0 000FEE                         ?___x_sample_fliter 007A  
              ?___set_long_bar_level_scale 0001          __end_of_ui_disp_menu_calib_pr_adj 6788  
                                  ?___wmul 0062          __end_of_ui_disp_menu_bar_full_adj 9D00  
             __size_of_ui_disp_start_cs600 0098                                  ?___exp_10 0060  
                           ___lmul@product 0068                     ?i2_sys_ticker_irq_hook 0001  
                               _crc_append 8ECA                       ??_rtcc_reg_wr_enable 0020  
            __size_of_ui_disp_menu_pos_adj 008E                      ?_sample_in_soc_adc_ch 0001  
                        _ui_disp_menu_home 3C0C           __size_of_ui_disp_menu_poly_c_adj 0064  
                                  _ALRMRPT 000F5A                       _at24c02_write_n_byte 5B70  
            __size_of_ui_disp_menu_psw_adj 002A             ___enter_menu_epr_ilp_scale@t32 007E  
                      ??___x_sample_fliter 007E                             ?___up_home_adj 0001  
           __size_of_ads1115_set_data_rate 0026             ___enter_menu_epr_ilp_scale@fps 0082  
                    ?___set_long_work_mode 0001                        ___mflot32_2_int32@i 0070  
                      ___mflot32_2_int32@x 006C              __end_of_ads1115_set_data_rate A000  
                               _crc_verify 8242           __size_of_ui_disp_menu_warn_t_adj 0130  
         __size_of_ui_disp_menu_warn_v_adj 00D8                              ?_ads1115_init 0060  
                                  i1l13054 007E                         ?_ui_disp_menu_home 0001  
      __size_of___exit_menu_to_home_unsave 003E                                    i2l13028 6F4E  
                  ?___set_short_diff_calib 0001                                 _lcd_bl_off A3B2  
                          _data_sys_cal_v1 382A                            _data_sys_cal_v2 4DF6  
                               _lcdTwinkle 0034                                  ?___xxtofl 0060  
                  _calib_data_init_diff_pr 580A                     ___enter_menu_work_mode A328  
                               _lcd_config 9A44                     ??___set_long_base_zero 0021  
                        cal_diff_p_to_h@f1 00C8                          cal_diff_p_to_h@f2 00C4  
                                ?_delay_ms 0064                                  ?_delay_us 0060  
                                  _TBLPTRH 000FF7                     ??___up_poly_coefic_adj 0021  
                                  _TBLPTRL 000FF6                                    _TBLPTRU 000FF8  
                      _key_adj_value_float 6788                        _key_adj_value_fixed 65B0  
                  _ads1115_read_conversion 97C6                __size_of_lcd_disp_level_bar 04D2  
             __size_of_rtcc_reg_wr_disable 000C                                    _RTCVALH 000F5D  
                                  _RTCVALL 000F5C                          __end_of_cal_press 8550  
                     ___int32_2_mflot32@mf 0079                                 _m_floatAdj 0035  
                           ?_key_shift_loc 0060                             m_int8_2_hex@t8 0020  
                                ?_lcd_init 0001                        ??_ui_disp_menu_home 0021  
              __size_of_lcd_show_string_l0 006E                __size_of_lcd_show_string_l1 0042  
                                ?_iic_stop 0001           __end_of_ui_disp_adj_xfixed_pt_dp 6A16  
                        ??_ads1115_set_pga 0020                          ??_ads1115_set_mux 0020  
                  lcd_disp_unit_1st_m@show 0020                            ___down_home_adj A1B6  
                   sample_pr_chip_fast@t16 008B            __size_of_event_process_time_out 0002  
                          _cal_diff_p_to_h 5E9A                          __end_of_auchCRCHi EEB7  
                        __end_of_auchCRCLo EDB7                        _sample_pr_chip_fast 49BC  
                   sample_pr_chip_fast@ret 008A                  __size_of_key_process_down 015C  
                        ??_lcd_disp_unit_t 0020                         _sample_call_cal_pr A15E  
                            ?_ui_disp_menu 0001                   _cal_pt100_temperature_in A300  
                 _cal_pt100_temperature_ex A2EC                  __end_of___x_sample_fliter 309E  
                          ___down_pr_calib A026                     ?_handler_interrupt_low 0001  
              at24c02_read_n_byte@pAt24c02 0068                          _ui_disp_xfloat_pt 5214  
                                  __Hparam 0000                          cal_diff_press@xin 03E4  
                                  __Lparam 0000                     m_interp1_float_fast@in 00C6  
                    ?_key_process_set_long 0001                             lcd_show_dp@loc 0071  
                     ?_key_adj_value_float 0075                       ?_key_adj_value_fixed 006E  
                           _prChipSampleCh 00F7                          __end_of_lcd_bl_on A3B2  
                                ?_soc_init 0001                        ?_sample_call_cal_pr 0001  
                    __size_of_lcd_disp_all 0030                         ?_ui_disp_xfloat_pt 0076  
                _cal_diff_hight_level$5870 00C4                  _cal_diff_hight_level$5871 00C8  
                                ?_rtc_init 0001                 __end_of_ui_disp_menu_d_adj 9EAE  
                                  ___aldiv 5A56                            __size_of___flge 0190  
                        __end_of_iic_start 9B5C                                    ___fladd 1168  
                        ??_m_int16_2_str_4 0020                         data_sys_cal_v1@stp 00C2  
               __end_of_ui_disp_menu_h_adj 89E0                         data_sys_cal_v2@stp 00C2  
                                  ___fldiv 2352           __end_of___enter_menu_calib_press 61AC  
                                  ___awdiv 71E0                                    ___lbdiv 96E0  
                                  ___flneg 9AEC                            __size_of___lmul 0076  
                                  ___awmod 7A28                                    ___flmul 1610  
                    ui_disp_menu_pos_adj@p 0076                                    ___fltol 5C86  
                        m_flash_erase@addr 0060                                    ___lldiv 729E  
                          __size_of___wmul 0036                    __end_of_key_process_set 7C04  
                __end_of_ui_disp_menu_home 3DE2                                    ___lwdiv 8644  
                                  ___lwmod 8FF4                          __end_of_m_mem_cpy 8B94  
                        __end_of_m_mem_set A11E                       ___up_warn_type_adj@p 0060  
      __end_of___sys_data_save_write_flash 62B0                ___sys_data_save_write_flash 61AC  
                                _LCDDATA10 000F70                                  _LCDDATA11 000F71  
                                _LCDDATA12 000F72                                  _LCDDATA20 000F7A  
                                _LCDDATA13 000F73                                  _LCDDATA21 000F7B  
                                _LCDDATA14 000F74                                  _LCDDATA22 000F7C  
                                _LCDDATA15 000F75                                  _LCDDATA23 000F7D  
                                _LCDDATA16 000F76                                  _LCDDATA17 000F77  
                                _LCDDATA18 000F78                                  _LCDDATA19 000F79  
              __size_of___up_pose_size_adj 0072                                    _blackEn 00FB  
                          __CFG_STVREN$OFF 000000                       ?_sample_pr_chip_fast 0001  
                               ??___exp_10 0020                                    _pcf8574 0118  
                                  __pcinit 78E0                       m_flash_unlock@oldGIE 0020  
                    __size_of_iic_send_ack 0052                  ___set_short_pr_calib@adjv 009D  
                 at24c02_write_n_byte@addr 0068                                    __ramtop 1000  
                    ?_at24c02_write_n_byte 0066                                    __ptext0 8F92  
                                  __ptext1 7C04                                    __ptext2 9B94  
                                  __ptext3 928E                                    __ptext4 A33A  
                                  __ptext5 A34A                                    __ptext6 9912  
                                  __ptext7 7414                                    __ptext8 A384  
                                  __ptext9 A390             __end_of___set_short_diff_calib 2A7C  
                      ??_ui_disp_xfloat_pt 0079                  ___set_short_diff_calib@t8 0095  
                                  _crc_sum 7ACA                     ?_ads1115_init_all_chip 0001  
                           ??_ads1115_init 0020                        _sys_ticker_irq_hook A208  
                      lcd_disp_unit_t@show 0020                          ___int32_2_mflot32 5FA2  
                 __size_of_lcd_set_com_seg 00C8                     ___up_epr_ilp_scale_adj A27E  
                                _T1CONbits 000FCD                    ?_sample_call_cal_in_soc 0001  
                    ___mflot32_2_int32@ret 0071                        lcd_set_com_seg@bits 006F  
                 ___up_adj_bar_level_scale A2C0                                 ??___xxtofl 0064  
                     __end_of_at24c02_init 85CC                        lcd_set_com_seg@show 0069  
               ___set_short_diff_calib@t16 009B                 ___set_short_diff_calib@t32 0097  
                         ___awmod@dividend 0060                                    _rtHight 00E8  
                       ?___int32_2_mflot32 006D                           ___aldiv@dividend 006C  
                    __size_of_m_int8_2_hex 005A                                  _LCDPSbits 000FAA  
                                  _rtLevel 00FE                 ___set_short_diff_calib@pra 0090  
                     m_interp1_cal_p_t@t16 0096                       m_interp1_cal_p_v@t16 0093  
                               ??_delay_ms 0020              ??___sys_data_save_write_flash 0021  
                               ??_delay_us 0020                      __size_of_lcd_show_chr 0098  
           ui_disp_menu_calib_diff_adj@buf 008A                       ??_sample_call_cal_pr 0020  
                                  _subMenu 0032                       m_interp1_cal_p_t@xin 007C  
                     m_interp1_cal_p_v@xin 007C                      __end_of_lcd_disp_logo 9E50  
                                  _rtc_set 7414          __size_of_ui_disp_menu_density_adj 002E  
                    __size_of_m_flash_read 007E                  ?_ui_disp_menu_density_adj 0001  
             ??_ui_disp_menu_work_mode_adj 0076           ads1115_start_conversion@pAds1115 006B  
        __size_of_ads1115_start_conversion 002A           __size_of_cal_additional_pressute 001C  
                               ??_lcd_init 0020                  ?_ads1115_start_conversion 006B  
                           __pintcode_body 6ED4                                 ??_iic_stop 0020  
                             _flashTestbuf F335                       end_of_initialization 7976  
                          cal_press@tabrow 009B                        ??___int32_2_mflot32 0071  
            ___set_short_diff_calib@gohome 0094                             m_flash_write@i 0079  
                           m_flash_write@j 007E                    __size_of_key_process_up 00AE  
                      ui_disp_xfloat_pt@t8 0084                             ??_ui_disp_menu 0021  
        ui_disp_menu_epr_ilp_scale_adj@buf 008A                               _lcd_disp_all 9E50  
            __size_of_sample_variable_init 0056                              __Lmediumconst ECB6  
                ??_sample_call_cal_diff_pr 0020                                    int_func 6ED4  
                     ?_sys_ticker_irq_hook 0001                    event_process_ticker@ret 00E7  
                         _inSocAdcSampleCh 00F3                  __end_of_ui_disp_xfloat_pt 534A  
                  ___set_short_pr_calib@t8 0095                 __size_of_event_process_rtc 002A  
                   __size_of_data_init_all 000E                       _ui_disp_clear_num_dp 92E8  
          calib_data_set_default_diff_pr@i 006F            calib_data_set_default_diff_pr@j 006E  
                          ___lldiv@divisor 0064                      __end_of_iic_send_byte 881C  
                    ??_key_adj_value_float 0021                      ??_key_adj_value_fixed 0021  
                          ___lldiv@counter 006C                   __end_of_ads1115_read_reg 4502  
             _cal_diff_hight_to_vol_v$5872 03CE                               _iic_send_ack 95A2  
                               _ticker_dly 9B94                                 _rtPressure 014A  
                               ??_soc_init 0020                    ??___set_short_epr_param 0021  
               __end_of_calib_data_init_pr 580A                          ??_sys_ticker_init 0020  
              __end_of_lcd_disp_unit_2nd_m 8E00                           ___aldiv@quotient 0076  
                               ??_rtc_init 0020                __end_of_lcd_disp_unit_1st_m 95A2  
                                  postdec1 000FE5                                    postdec2 000FDD  
                    __end_of_iic_waite_ack 94A4                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                 __end_of___up_density_adj A2AA                          _lcd_disp_dp_loc_0 9DF0  
                        _lcd_disp_dp_loc_1 9DC0                          _lcd_disp_dp_loc_2 9D90  
                        _lcd_disp_dp_loc_4 9D60                          _lcd_disp_dp_loc_5 9D30  
                        _lcd_disp_dp_loc_6 9D00                    m_interp1_cal_p_v@tabrow 007A  
         __size_of___enter_menu_warn_value 00BE                     _event_process_time_out A3BA  
               __end_of___enter_menu_set_d 8CCE                 __end_of___enter_menu_set_h 8C66  
                    ??_sample_pr_chip_fast 0021         __size_of___enter_menu_poly_coeffic 004E  
                  __end_of_data_sys_cal_v1 3A2E                    __end_of_data_sys_cal_v2 4F5A  
                   ??_sample_in_soc_adc_ch 0021                          _lcd_disp_get_code 911A  
                 __size_of_lcd_show_string 006E                               _m_int8_2_hex 928E  
       __size_of_lcd_disp_unit_temperature 0066                  __end_of___int32_2_mflot32 60A8  
                              ?_crc_append 006C                            ??___up_home_adj 0020  
               ?_calib_data_set_default_pr 0001                               _lcd_show_chr 7C9C  
                         _defultSystemData F245                     ??___set_long_work_mode 0020  
           __end_of_sample_call_cal_in_soc A0FC                   __end_of_lcd_disp_refresh 911A  
                       ?_lcd_disp_dp_loc_0 0001                         ?_lcd_disp_dp_loc_1 0001  
                       ?_lcd_disp_dp_loc_2 0001                         ?_lcd_disp_dp_loc_4 0001  
                       ?_lcd_disp_dp_loc_5 0001                         ?_lcd_disp_dp_loc_6 0001  
                  ?_ui_disp_menu_bzero_adj 0001                  ??_calib_data_init_diff_pr 0021  
      __size_of_ui_disp_menu_work_mode_adj 0076                __size_of___up_warn_type_adj 0040  
                             _m_flash_read 8456                         ?_lcd_disp_get_code 0001  
                              ?_crc_verify 006C                ui_disp_adj_xfixed_pt_dp@buf 007E  
              ui_disp_adj_xfixed_pt_dp@loc 007A                    ui_disp_adj_xfloat_pt@t8 0089  
                      i2_rtc_alrm_irq_hook A3BE                ui_disp_adj_xfixed_pt_dp@str 0076  
                ??_ads1115_read_conversion 0070           __size_of_key_process_set_up_long 00C8  
                        _m_interp1_cal_p_t 1AB6                          _m_interp1_cal_p_v 0784  
                              ?_lcd_bl_off 0001                                ___fladd@grs 00B7  
                   __size_of_data_sys_init 0172                    __size_of_cal_diff_press 0122  
                               crc_sum@len 0066                    __end_of___down_home_adj A1D2  
                              ?_lcd_config 0001                    ?___enter_menu_bar_scale 0001  
                            ___xxtofl@sign 0068                    __end_of_cal_diff_p_to_h 5FA2  
           __size_of_in_adc_start_and_read 006A              __end_of_in_adc_start_and_read 8BFE  
                       ?_m_interp1_cal_p_t 007A                         ?_m_interp1_cal_p_v 007A  
                          ??_key_shift_loc 0020                        ??_lcd_disp_dp_loc_0 0020  
                      ??_lcd_disp_dp_loc_1 0020                        ??_lcd_disp_dp_loc_2 0020  
                      ??_lcd_disp_dp_loc_4 0020                        ??_lcd_disp_dp_loc_5 0020  
                      ??_lcd_disp_dp_loc_6 0020               ___set_short_warn_type@gohome 03CA  
                    __end_of_m_flash_erase 939C                       lcd_show_string_l0@t8 0075  
                     lcd_show_string_l1@t8 0075               ___enter_menu_calib_press@t32 0086  
                      ??_lcd_disp_get_code 0020                                ___fldiv@grs 009A  
             ___enter_menu_calib_press@col 0020                                ___fldiv@rem 0094  
              iic_received_byte_if_ack@ack 0066                  ads1115_write_reg@pAds1115 0066  
             ___enter_menu_calib_press@row 0083               ___enter_menu_calib_press@stp 0084  
                     _data_sys_cal_v1$5864 00C6                       _data_sys_cal_v1$5865 00CA  
                     _data_sys_cal_v1$5866 00CE                iic_received_byte_if_ack@ret 0067  
                     _data_sys_cal_v2$5867 00C6                       _data_sys_cal_v2$5868 00CA  
                    __end_of_m_flash_write 5480         __end_of___exit_menu_to_home_unsave 998E  
               ___exit_menu_to_home_unsave 9950                        ___up_diff_calib_adj 9AB4  
                  __end_of___down_pr_calib A04A        __size_of___set_long_bar_level_scale 0040  
                  ??___set_short_pose_size 0021                        ??_m_interp1_cal_p_t 007F  
                      ??_m_interp1_cal_p_v 0080                    ??_sample_call_in_ticker 0021  
                              ___flmul@grs 007C                            iic_send_ack@ack 0020  
                    ??_sys_ticker_irq_hook 000F                          _lcd_disp_unit_mpa 8D34  
                  ??___set_short_warn_type 00E3                   __size_of___x_arrange_str 005E  
               __size_of___x_sample_fliter 02C4                       ?i2_rtc_alrm_irq_hook 0001  
                    ?_ui_disp_clear_num_dp 0001                          _ads1115_write_reg 63B4  
                       ?_lcd_disp_unit_mpa 0001                    ?___set_short_warn_value 0001  
                  ___set_short_pose_size@p 03CB                     ??_key_process_set_long 0021  
                  ?_ui_disp_menu_pose_size 0001                               _globleBuffer 0500  
                  ___set_short_poly_coefic 8900                 ??_sample_diff_pr_chip_fast 0021  
                       ?_ads1115_write_reg 0066                 ??___enter_menu_set_density 007D  
                        _PrChipSampleTimer 0162                         ___up_adj_work_mode 9BCA  
                __end_of_lcd_disp_dp_loc_0 9E20                  __end_of_lcd_disp_dp_loc_1 9DF0  
                __end_of_lcd_disp_dp_loc_2 9DC0                  __end_of_lcd_disp_dp_loc_4 9D90  
                __end_of_lcd_disp_dp_loc_5 9D60                  __end_of_lcd_disp_dp_loc_6 9D30  
                       iic_received_byte@i 0065           __size_of_cal_diff_hight_to_vol_h 0278  
         __size_of_cal_diff_hight_to_vol_v 06A8                    ?___enter_menu_epr_calib 0001  
                              _adc_inPt100 0170                  __end_of_lcd_disp_get_code 9178  
                            ??_lcd_show_dp 0021                                _adc_exPt100 016C  
                              _adjLocation 003F                      _sample_diff_pr_fliter 83D8  
                     ?___up_diff_calib_adj 0001                              ??_in_adc_init 0020  
                  ??___enter_menu_password 0020                        ??_lcd_disp_unit_mpa 0020  
               __size_of_ui_disp_menu_home 01D6                             __end_of___flge 484A  
                         ?_key_process_set 0001                                 m_mem_cpy@d 0060  
                  ___set_short_warn_type@p 03CB                                 m_mem_cpy@s 0062  
                           __end_of___lmul 87A8                     ??_at24c02_write_n_byte 0021  
        __size_of_ui_disp_adj_xfixed_pt_dp 00D8             __end_of_ui_disp_menu_bzero_adj 9F0A  
                  _ui_disp_menu_poly_c_adj 8E66                             __end_of___wmul 9C36  
                ?_ui_disp_adj_xfixed_pt_dp 0076                  __size_of___down_dpr_calib 0024  
                               m_mem_set@x 0062              __size_of_m_interp1_float_fast 0428  
                       ___set_long_density 95F4                        ??_ads1115_write_reg 0021  
             ??___enter_menu_epr_ilp_scale 0020                  __end_of_m_interp1_cal_p_t 1F2A  
                __end_of_m_interp1_cal_p_v 0C96                        ?___up_adj_work_mode 0001  
          __end_of_sample_call_cal_diff_pr A19A          __end_of___enter_menu_poly_coeffic 9692  
                    _diffPrChipSampleCount 00FA                    _ui_disp_menu_warn_t_adj 55B0  
                  _ui_disp_menu_warn_v_adj 6866                      at24c02_write_n_byte@i 006D  
        __end_of_lcd_disp_unit_temperature 8D34                      _diffPrChipSampleTimer 0164  
                             cal_press@ret 009A                               cal_press@xin 009D  
           __end_of___enter_menu_bar_scale 9A08                              _data_init_all A368  
                       lcd_disp_get_code@i 0062                          crc_verify@message 006C  
                      start_initialization 78E0                            key_shift_loc@t8 0020  
                      ?___set_long_density 0001                     ui_disp_start_cs600@buf 0076  
                   ui_disp_start_cs600@dly 007C             ___set_long_bar_level_scale@stp 00E5  
                 ?_handler_interrupt_hight 0001     __end_of_calib_data_set_default_diff_pr 3C0C  
  __size_of_calib_data_set_default_diff_pr 01DE             _calib_data_set_default_diff_pr 3A2E  
                          _LCDDigitalTable EEE2             ?___enter_menu_calib_press_diff 0020  
                        ??_lcd_set_com_seg 006A                         ads1115_set_pga@pga 0062  
              ?___enter_menu_set_base_zero 0001                     ___x_sample_fliter@loop 007D  
        __size_of___enter_menu_calib_press 0104                      __end_of_m_mem_cpy_len 977C  
                __end_of_lcd_disp_unit_mpa 8D9A                  ?___enter_menu_calib_press 0020  
                ui_disp_adj_xfixed_pt_dp@x 0078                     lcd_disp_chr_loc_0@code 0020  
               ?___set_short_epr_ilp_scale 0001                          m_flash_write@addr 006E  
                   lcd_disp_chr_loc_1@code 0020                     lcd_disp_chr_loc_2@code 0020  
                   lcd_disp_chr_loc_3@code 0020                     lcd_disp_chr_loc_4@code 0020  
                      _ui_disp_start_cs600 7C04                     lcd_disp_chr_loc_5@code 0020  
                   lcd_disp_chr_loc_6@code 0020                     lcd_disp_chr_loc_7@code 0020  
                         _key_process_down 50B8                       ??___up_adj_work_mode 0020  
                __end_of_ads1115_write_reg 64B4                __end_of___up_warn_value_adj A252  
          __end_of_calib_data_init_diff_pr 5934                         ads1115_set_mux@mux 0062  
                      __size_of_crc_append 0064             __end_of___set_short_warn_value 6D44  
                    ??i2_rtc_alrm_irq_hook 0001                 __size_of_ui_disp_xfloat_pt 0136  
           __end_of_ui_disp_menu_pose_size 9FB2                          ___mflot32_2_int32 7838  
            __size_of___set_short_pr_calib 035E                   in_adc_start_and_read@ret 0067  
     ___enter_menu_epr_ilp_scale@__subMenu 007D                       __end_of_ads1115_init 7A28  
                            _data_sys_init 484A                    ?___enter_menu_warn_type 0001  
                  lcd_disp_level_bar@__bar 0070                        __size_of_crc_verify 008C  
                     ??___set_long_density 0021                         ?___mflot32_2_int32 006C  
           __end_of___enter_menu_epr_calib 7838                        __size_of_lcd_bl_off 0008  
                         lcd_show_chr@code 0072                   ads1115_read_reg@pAds1115 0068  
                              ?_ticker_dly 0060                        __size_of_lcd_config 0038  
                         data_sys_cal_v1@f 00D6                           data_sys_cal_v2@d 00D2  
                         data_sys_cal_v1@h 00D2                           data_sys_cal_v2@f 00CE  
                         data_sys_cal_v1@r 00DA                  __size_of___down_pose_size 0030  
                     key_waite_release@key 006A                        _rtcc_reg_wr_disable A390  
                                 ??___flge 00C0                    ??i2_sys_ticker_irq_hook 0001  
                    ??___up_diff_calib_adj 0021                                   ??___lmul 0020  
                                 ??___wmul 0021                ?_ui_disp_menu_epr_calib_adj 0001  
              __size_of___up_epr_calib_adj 0034                         m_interp1_cal_p_t@i 0098  
                       m_interp1_cal_p_v@i 0099                         m_interp1_cal_p_t@x 008E  
                       m_interp1_cal_p_t@y 008A                         m_interp1_cal_p_v@x 008F  
                       m_interp1_cal_p_v@y 008B                                __pdataBANK0 00FF  
                              __pdataBANK1 01F0                   key_adj_value_fixed@value 006E  
                         __CFG_LPT1OSC$OFF 000000                       ?_ui_disp_start_cs600 0001  
                         ?_data_sys_cal_v1 00C2                           ?_data_sys_cal_v2 00C2  
                      ??___mflot32_2_int32 0020                 __size_of___int32_2_mflot32 0106  
                    __size_of_at24c02_init 007C                    __size_of_lcd_disp_level 0058  
                    _ui_disp_adj_xfloat_pt 35D0                      _ui_disp_adj_xfixed_pt 6D44  
                       ___up_base_zero_adj A2AA                    ?___enter_menu_work_mode 0001  
             __end_of_sample_all_power_off A368                       __end_of_ui_disp_menu 7790  
                           ?_data_init_all 0001                            _ads1115_set_pga A092  
                          _ads1115_set_mux A0B6              __size_of_cal_diff_hight_level 02BA  
                 _iic_received_byte_if_ack A13E                                  ___fladd@a 00A8  
                                ___fladd@b 00A4                          __size_of___exp_10 005C  
                              _ALRMCFGbits 000F5B                        __end_of_lcd_show_dp 8B28  
                       lcd_show_string@str 0073                                  ___fldiv@a 008B  
                                ___fldiv@b 0087                        __end_of_in_adc_init A092  
                            ??_key_polling 0020                           _sampBufDiffPr_S1 01D0  
                                _pAdjValue 0166                           data_sys_init@t16 00DE  
                            ??_key_process 0021                                  ___flmul@a 0072  
                                ___flmul@b 006E                                __pbssCOMRAM 0021  
                         data_sys_init@buf 00E3                            _lcd_disp_unit_t 94FA  
                        ??_lcd_show_string 0021                           data_sys_init@ret 00E0  
                         ?___down_home_adj 0001                 ___enter_menu_bar_scale@fps 0062  
                         data_sys_init@stp 00E1                    ui_disp_menu_pos_adj@buf 0078  
                            __pcstackBANK0 0060                              __pcstackBANK1 01FD  
                            __pcstackBANK3 03CA                           ?_cal_diff_p_to_h 00C2  
                                _adc_iPrEx 0021                        ?___up_base_zero_adj 0001  
       __end_of_ui_disp_menu_work_mode_adj 8732                 _ui_disp_menu_work_mode_adj 86BC  
                     ?_rtcc_reg_wr_disable 0001                    _cal_additional_pressute A1D2  
                      _inSocAdcSampleCount 00F4                               _stRTCCFGbits 000F5F  
                           _sensorSimpleEn 00F1                 ??_cal_pt100_temperature_in 0020  
               ??_cal_pt100_temperature_ex 0020          ___enter_menu_warn_value@__subMenu 007F  
                 key_waite_release@timeout 0068                        _inSocAdcSampleTimer 0160  
                        __size_of___xxtofl 01CE               ___set_long_bar_level_scale@p 00E3  
                        __size_of_delay_ms 0026                          __size_of_delay_us 0038  
            __size_of_lcd_disp_unit_2nd_m3 008A                        __CFG_CCP2MX$DEFAULT 000000  
                         ?___down_pr_calib 0001                   lcd_disp_unit_2nd_m3@show 0020  
             __end_of_ui_disp_menu_pos_adj 8242                             _key_process_up 7634  
            __size_of_lcd_disp_unit_1st_m3 0066        sample_function_enable_fi_in_rtc@ret 00E6  
                __end_of___mflot32_2_int32 78E0                    ??_handler_interrupt_low 000F  
             __end_of_ui_disp_menu_psw_adj 9F88                        ___x_arrange_str@len 0062  
                          _m_int16_2_str_4 4F5A                        ___x_arrange_str@str 0060  
                        __size_of_lcd_init 001C              __size_of_event_process_ticker 000C  
                                _cal_press 84D4                     ??_ui_disp_clear_num_dp 0021  
                        __size_of_iic_stop 0036             __end_of___enter_menu_warn_type 90B8  
                ??___set_short_poly_coefic 0021                 __end_of_lcd_disp_chr_loc_0 81B4  
               __end_of_lcd_disp_chr_loc_1 8124                 __end_of_lcd_disp_chr_loc_2 8094  
               __end_of_lcd_disp_chr_loc_3 8004                 __end_of_lcd_disp_chr_loc_4 7F74  
               __end_of_lcd_disp_chr_loc_5 7EE4                 __end_of_lcd_disp_chr_loc_6 7E54  
               __end_of_lcd_disp_chr_loc_7 7DC4                             ?_data_sys_init 0001  
       __end_of___set_long_bar_level_scale 9912                 ___set_long_bar_level_scale 98D2  
                                _auchCRCHi EDB7                                  _auchCRCLo ECB7  
             __size_of_sample_all_power_on 0014                          ___x_arrange_str@i 0020  
                  ads1115_set_mux@pAds1115 0060                ?___enter_menu_set_pose_size 0001  
                             _at24c02_init 8550                           ___lwdiv@dividend 0062  
            ads1115_read_conversion@result 0071               ___enter_menu_set_density@t32 0081  
                     ??___up_base_zero_adj 0021                     ?_sample_diff_pr_fliter 008F  
             ___enter_menu_set_density@fps 007F                 __size_of_lcd_disp_dp_loc_0 0030  
               __size_of_lcd_disp_dp_loc_1 0030                 __size_of_lcd_disp_dp_loc_2 0030  
               __size_of_lcd_disp_dp_loc_4 0030                 __size_of_lcd_disp_dp_loc_5 0030  
               __size_of_lcd_disp_dp_loc_6 0030                  ??_ui_disp_menu_poly_c_adj 0021  
                                __pintcode 0008                 __size_of_lcd_disp_get_code 005E  
                            __pmediumconst ECB6                    ___enter_menu_warn_value 7122  
                        ??___x_arrange_str 0020                                   ?___aldiv 006C  
                                 ?___fladd 00A4                                   ?___fldiv 0087  
                                 ?___awdiv 0060                                  __ptext100 9F88  
                                __ptext101 81B4                                   ?___lbdiv 0020  
                                __ptext110 8CCE                                  __ptext102 8970  
                                 ?___flneg 00A0                                  __ptext111 94FA  
                                __ptext103 9E80                                  __ptext200 972E  
                                __ptext120 729E                                  __ptext112 8D34  
                                __ptext104 8E66                                  __ptext201 8ECA  
                                __ptext121 6F9C                                  __ptext113 82CE  
                                __ptext105 3C0C                                  __ptext210 944C  
                                __ptext202 7ACA                                  __ptext130 693E  
                                __ptext122 7060                                  __ptext114 8D9A  
                                __ptext106 5214                                  __ptext211 9C36  
                                __ptext203 3A2E                                  __ptext131 92E8  
                                __ptext123 9EAE                                  __ptext115 8E00  
                                __ptext107 9850                                  __ptext220 A208  
                                __ptext212 A13E                                  __ptext204 9C00  
                                __ptext140 8004                                  __ptext132 8A4E  
                                __ptext124 66A8                                  __ptext116 954E  
                                __ptext108 89E0                                  __ptext221 A3BC  
                                __ptext213 95A2                                  __ptext205 5B70  
                                __ptext141 8094                                  __ptext133 7C9C  
                                __ptext125 64B4                                  __ptext117 93F4  
                                __ptext109 8644                                  __ptext214 8F2E  
                                __ptext206 A000                                  __ptext150 8B28  
                                __ptext142 8124                                  __ptext134 911A  
                                __ptext126 96E0                                  __ptext118 0C96  
                                __ptext223 A222                                  __ptext215 9B5C  
                                __ptext207 4502                                  __ptext151 4F5A  
                                __ptext143 8ABC                                  __ptext135 7D34  
                                __ptext127 9EDC                                  __ptext119 5FA2  
                                __ptext224 A3BE                                  __ptext216 8550  
                                __ptext208 9B24                                  __ptext160 94A4  
                                __ptext152 7A28                                  __ptext144 9D00  
                                __ptext136 7DC4                                  __ptext128 35D0  
               ??___up_adj_bar_level_scale 0021                                  __ptext225 0000  
                                __ptext217 998E                                  __ptext209 87A8  
                                __ptext161 A15E                                  __ptext153 90B8  
                                __ptext145 9D30                                  __ptext137 7E54  
                                __ptext129 9CD0                                  __ptext218 7984  
                                __ptext170 0784                                  __ptext162 A2EC  
                                __ptext154 9178                                  __ptext146 9D60  
                                __ptext138 7EE4                                  __ptext171 1AB6  
                                __ptext163 84D4                                  __ptext155 9E20  
                                __ptext147 9D90                                  __ptext139 7F74  
                                __ptext180 46BA                                  __ptext172 8732  
                                __ptext164 A0DA                                  __ptext156 6E0C  
                                __ptext148 9DC0                                  __ptext181 1168  
                                __ptext173 5A56                                  __ptext165 A1D2  
                                __ptext157 71E0                                  __ptext149 9DF0  
                                __ptext190 4DF6                                  __ptext182 A314  
                                __ptext174 5E9A                                  __ptext166 A17C  
                                __ptext158 9E50                                  __ptext191 382A  
                                __ptext183 A35A                                  __ptext175 00DC  
                                __ptext167 A300                                  __ptext159 6AE6  
                                __ptext192 3FB4                                  __ptext184 A368  
                                __ptext176 3358                                  __ptext168 5934  
                                __ptext193 5C86                                  __ptext185 484A  
                                __ptext177 1F2A                                  __ptext169 A0FC  
                                __ptext194 1610                                  __ptext186 534A  
                                __ptext178 9AEC                                  __ptext195 2352  
                                __ptext187 8456                                  __ptext179 309E  
                                 ?___awmod 0060                                  __ptext196 56E0  
                                __ptext188 9342                                  __ptext197 4182  
                                __ptext189 A1EE                                  __ptext198 580A  
                                __ptext199 8242                                   ?___flmul 006E  
                                 ?___fltol 00B8                  ??_ui_disp_menu_warn_t_adj 0076  
                                 ?___lldiv 0060                    ___mflot32_2_int32@F7717 013E  
                ??_ui_disp_menu_warn_v_adj 008A                    ??_ads1115_init_all_chip 0020  
                    ??_ui_disp_start_cs600 0021                                   ?___lwdiv 0062  
                                 ?___lwmod 0069                          __size_of_soc_init 0010  
               ?_ui_disp_menu_calib_pr_adj 0001             __end_of___enter_menu_work_mode A33A  
                  ?___up_epr_ilp_scale_adj 0001               __size_of_at24c02_read_n_byte 01B8  
                                _lcd_bl_on A3A8                 ?_ui_disp_menu_bar_full_adj 0001  
                              __pintcodelo 0018                          __size_of_rtc_init 003E  
         __end_of_ads1115_start_conversion 9F34                                  _dlyTicker 015E  
               __size_of_m_interp1_cal_p_t 0474                 __size_of_m_interp1_cal_p_v 0512  
              __size_of_rtcc_reg_wr_enable 000C                                  _iic_start 9B24  
                                 ?_crc_sum 0060                    _key_process_set_up_long 6BB4  
                      ___int32_2_mflot32@x 006D                   __size_of___x_sample_fifo 016A  
                  __end_of_LCDDigitalTable EF0C                  cal_diff_hight_to_vol_h@f1 03DA  
                cal_diff_hight_to_vol_h@f2 03D2                  cal_diff_hight_to_vol_h@v1 03D6  
                cal_diff_hight_to_vol_h@v2 03CE                              ?___up_psw_adj 0001  
                          at24c02_init@slv 0062                                  _m_mem_cpy 8B28  
                cal_diff_hight_to_vol_v@f1 03DE                                  _m_mem_set A0FC  
                cal_diff_hight_to_vol_v@v1 03D2                  cal_diff_hight_to_vol_v@v2 03D6  
             cal_additional_pressute@index 0020                  ___set_short_pose_size@t32 03CD  
               __end_of_lcd_disp_level_bar 1168                             _cal_diff_press 5934  
                ___set_short_pose_size@stp 03D1                         _ui_disp_menu_d_adj 9E80  
                    ??_rtcc_reg_wr_disable 0020                      _ads1115_set_data_rate 9FDA  
               __end_of_lcd_show_string_l0 8A4E                 __end_of_lcd_show_string_l1 9892  
                       _ui_disp_menu_h_adj 8970                                _PADCFG1bits 000F54  
                         m_flash_erase@t32 0064                                   ?_rtc_set 0060  
                    lcd_disp_unit_mpa@show 0020               ___set_short_pr_calib@saveFlg 0096  
                   __end_of_key_process_up 76E2                        __size_of_ticker_dly 0036  
                         ___lwdiv@quotient 0067                       ads1115_init@pAds1115 0060  
            __size_of___set_long_base_zero 0058                                   _LCDDATA0 000FBB  
                                 _LCDDATA1 000FBC                                   _LCDDATA2 000FBD  
                                 _LCDDATA3 000FBE                                   _LCDDATA4 000FBF  
                                 _LCDDATA5 000F6B                                   _LCDDATA6 000F6C  
                                 _LCDDATA7 000F6D                                   _LCDDATA8 000F6E  
                                 _LCDDATA9 000F6F              __size_of___up_poly_coefic_adj 0016  
               __size_of_lcd_disp_unit_mpa 0066                      lcd_set_com_seg@offset 006E  
                ___set_short_poly_coefic@p 00E4                        __end_of_key_polling 9232  
                     ___mflot32_2_int32@mf 0075                        __end_of_key_process 6AE6  
                       lcd_set_com_seg@com 006D                            _sys_ticker_init A34A  
                       lcd_set_com_seg@seg 0068                        ?_ui_disp_menu_d_adj 0001  
                      ?_ui_disp_menu_h_adj 0001                                  _sampBufPr 01B8  
                          ___aldiv@divisor 0070                 __size_of_ads1115_write_reg 0100  
                 __end_of_defultSystemData F335                                 ?_cal_press 0001  
                         m_flash_read@addr 0060                            ___aldiv@counter 0074  
                           ___wmul@product 0066               ??___exit_menu_to_home_unsave 0020  
         ??_ui_disp_menu_epr_ilp_scale_adj 0021            ?_ui_disp_menu_epr_ilp_scale_adj 0001  
                                delay_us@i 0062                          _iic_received_byte 8F2E  
                           m_mem_cpy_len@d 0060                             m_mem_cpy_len@s 0062  
                                 _IPR1bits 000F9F                                   _PIE1bits 000F9D  
                                 _IPR3bits 000FA5                                   _PIE3bits 000FA3  
         __end_of_sample_diff_pr_chip_fast 3FB4              ui_disp_adj_xfixed_pt_dp@dploc 007B  
         __end_of___enter_menu_set_density 8900              ___set_short_warn_value@gohome 03CA  
                              _dlyTickerEn 002B                    _cal_diff_hight_to_vol_h 3358  
                  _cal_diff_hight_to_vol_v 00DC                         ?_iic_received_byte 0001  
                                 _PIR1bits 000F9E                    ?_event_process_time_out 0001  
                                 _PIR3bits 000FA4                         cal_diff_p_to_h@xin 00C2  
                        ?_ads1115_read_reg 0068                           crc_sum@usDataLen 0062  
                                 _RCONbits 000FD0                           __CFG_WDTPS$32768 000000  
               __end_of___up_pose_size_adj 888E                   lcd_disp_unit_1st_m3@show 0020  
                  __end_of_ads1115_set_pga A0B6                    __end_of_ads1115_set_mux A0DA  
           __end_of___up_epr_ilp_scale_adj A294                                  _stSysData 0200  
           __size_of___set_short_epr_param 0130                                _lcd_show_dp 8ABC  
                       ??_ads1115_read_reg 006B              __end_of___set_short_epr_param 55B0  
                              _in_adc_init A06E                      ___int32_2_mflot32@t32 0075  
                        ?___up_density_adj 0001                     ?_ui_disp_adj_xfloat_pt 0076  
                   ?_ui_disp_adj_xfixed_pt 0076                   sample_diff_pr_fliter@xin 008F  
                   ui_disp_adj_xfloat_pt@x 0087                       ??_ui_disp_menu_d_adj 0021  
                         ___down_dpr_calib A04A                            ??_data_init_all 0021  
                             ??_crc_append 0070                    __end_of_lcd_disp_unit_t 954E  
                               ?_lcd_bl_on 0001                       ??_ui_disp_menu_h_adj 0021  
                      ??_iic_received_byte 0020                     ui_disp_adj_xfixed_pt@x 0078  
           ___enter_menu_set_pose_size@fps 0060               __end_of_sample_variable_init 94FA  
      __size_of___enter_menu_set_base_zero 0078                  ___set_short_warn_value@t8 03D1  
              ??_calib_data_set_default_pr 0068                     __end_of_cal_diff_press 5A56  
                          m_int8_2_hex@str 0060                               _rtExPressure 012B  
                               ?_iic_start 0001            __end_of___set_short_poly_coefic 8970  
                       ??___up_density_adj 0021                                 _ADCON0bits 000FC2  
                           ??___up_psw_adj 0021                                 _ADCON2bits 000FC0  
                        ___wmul@multiplier 0062                              _pAds1115PrObj 00EC  
                        ?_lcd_disp_refresh 0001                    __size_of_m_flash_unlock 001A  
                             ??_crc_verify 0070                                 ?_m_mem_cpy 0060  
                               ?_m_mem_set 0060                  ??_cal_additional_pressute 0020  
                             ??_lcd_bl_off 0020                           m_int16_2_str_4@x 006A  
                               rtc_set@rtc 0060                                 rtc_set@stp 0062  
            ui_disp_menu_work_mode_adj@buf 0077                               ??_lcd_config 0020  
                       _calib_data_init_pr 56E0                         ??_lcd_disp_refresh 0020  
                 ___set_long_base_zero@t32 03CA                   ___set_long_base_zero@stp 03CE  
                  __end_of_m_int16_2_str_4 50B8            __end_of_ui_disp_menu_poly_c_adj 8ECA  
                ___set_short_warn_type@stp 03CD                __size_of_sample_call_cal_pr 001E  
                       ___enter_menu_set_d 8C66                         ___enter_menu_set_h 8BFE  
                          ?_key_process_up 0001                     ___set_long_density@t32 03CA  
          __end_of_ui_disp_menu_warn_t_adj 56E0                                   _HexTable EF0C  
          __end_of_ui_disp_menu_warn_v_adj 693E            ads1115_read_conversion@pAds1115 006E  
 __end_of_sample_function_enable_fi_in_rtc 6BB4  __size_of_sample_function_enable_fi_in_rtc 00CE  
       ??_sample_function_enable_fi_in_rtc 0021          ?_sample_function_enable_fi_in_rtc 0001  
         _sample_function_enable_fi_in_rtc 6AE6                          ___lmul@multiplier 0060  
                              _INTCON2bits 000FF1                           crc_verify@crccal 0072  
                   ___set_long_density@stp 03CE                                  copy_data0 78F4  
                    __size_of_ads1115_init 00A4                        ?_calib_data_init_pr 0001  
                  at24c02_read_n_byte@addr 006A                 __size_of___mflot32_2_int32 00A8  
                          ??_data_sys_init 0021                __end_of_key_adj_value_float 6866  
              __end_of_key_adj_value_fixed 66A8                      ui_disp_start_cs600@t8 007D  
                __end_of_iic_received_byte 8F92                        ?___enter_menu_set_d 0001  
                      ?___enter_menu_set_h 0001                           m_flash_write@t16 0081  
           __size_of___set_short_pose_size 0108                         __end_of_crc_append 8F2E  
            __end_of___set_short_pose_size 5E9A                           m_flash_write@buf 0072  
                     _sample_all_power_off A35A             __size_of_sample_call_in_ticker 004E  
                         m_flash_write@len 0074                          _rtc_alrm_irq_hook A3BC  
                               _EECON1bits 000FA6              __end_of_sample_call_in_ticker 96E0  
         ___enter_menu_epr_calib@__subMenu 007D             __size_of___set_short_warn_type 0080  
           __end_of_event_process_time_out A3BC              __end_of___set_short_warn_type 83D8  
                ??___enter_menu_warn_value 007D                __end_of_sample_pr_chip_fast 4B26  
                                 __Hrparam 0000                    m_interp1_float_fast@len 00CA  
                    ui_disp_xfloat_pt@line 0078                    m_interp1_float_fast@tab 00C4  
                       __end_of_crc_verify 82CE                            lcd_show_dp@show 0070  
                       ?_rtc_alrm_irq_hook 0001                            lcd_show_chr@chr 0070  
                          lcd_show_chr@loc 0071                        key_waite_release@t8 0020  
                   lcd_disp_level_bar@show 0020                                   __Lrparam 0000  
                           _rtDiffPressure 015A                           ___down_pose_size 9CA0  
                       __end_of_lcd_bl_off A3BA                            _sampBufPt100ExA 01C8  
                          _sampBufPt100ExB 01C0                            _sampBufBatInSoc 01A0  
                       __end_of_lcd_config 9A7C                      __size_of_ui_disp_menu 00AE  
                     event_process_rtc@ret 00E7                     __size_of_lcd_disp_logo 0030  
                ??_key_process_set_up_long 008A                       ??_calib_data_init_pr 0021  
                         __size_of___aldiv 011A                 __end_of___up_warn_type_adj 98D2  
                         __size_of___fladd 04A8                           __size_of___fldiv 03C0  
                         __size_of___awdiv 00BE                             _lcd_disp_level 93F4  
                         __size_of___lbdiv 004E                           __size_of___flneg 0038  
                         __size_of___awmod 00A2                           __size_of___flmul 04A6  
                         __size_of___fltol 010C                           __size_of___lldiv 00BC  
                                 ___exp_10 9232             __size_of___enter_menu_password 0016  
                         __size_of___lwdiv 0078              ___enter_menu_poly_coeffic@fps 0063  
                      ??_rtc_alrm_irq_hook 000F                           __size_of___lwmod 0062  
            __end_of___enter_menu_password A2EC                   __end_of_key_process_down 5214  
                                 _adc_iRef 0168                       _ui_disp_menu_pos_adj 81B4  
                          _lcd_set_com_seg 6E0C                                   _adc_ibat 016A  
                     ??___enter_menu_set_d 0020                       ??___enter_menu_set_h 0020  
                             _ads1115Chip0 0172                               _ads1115Chip1 02F0  
                          ?_cal_diff_press 0001                                   _adjValue 0039  
                            _sensorPowerOn 002F              __size_of_sample_in_soc_adc_ch 0166  
                     _ui_disp_menu_psw_adj 9F5E                      __end_of___up_home_adj 9FDA  
            ___set_short_epr_ilp_scale@t32 03CB               __size_of_lcd_disp_unit_2nd_m 0066  
             __size_of_lcd_disp_unit_1st_m 0054                                   _calibCol 0030  
                         __size_of_crc_sum 009E              ___set_short_epr_ilp_scale@stp 03CF  
                                 _calibRow 0031              __size_of___set_long_work_mode 0020  
                 _ui_disp_menu_density_adj 9EAE                     ?_ads1115_set_data_rate 0060  
                             _ads1115_init 7984                             key_process@key 01FF  
                                 ___xxtofl 3FB4                   _ads1115_start_conversion 9F0A  
                              _key_polling 91D6          ___enter_menu_calib_press_diff@t32 0086  
                  __end_of_sys_ticker_init A35A                                _key_process 6A16  
                            crc_append@crc 0072          ___enter_menu_calib_press_diff@col 0020  
         __end_of_cal_pt100_temperature_in A314           __end_of_cal_pt100_temperature_ex A300  
                                 _delay_ms A000          ___enter_menu_calib_press_diff@row 0083  
        ___enter_menu_calib_press_diff@stp 0084                                   _delay_us 9B5C  
                   __size_of_iic_send_byte 0074                                   _glTicker 013A  
                          ___lwdiv@divisor 0064                                   _glbEvent 002E  
                          _sampBufRefInSoc 0198                            _rtTemperatureIn 014E  
                          _rtTemperatureEx 0146                            ___lwdiv@counter 0066  
              __end_of_sys_ticker_irq_hook A222        __size_of___enter_menu_set_pose_size 003C  
                                 __ptext10 A19A                                   __ptext11 9A44  
                                 __ptext20 A252                                   __ptext12 6A16  
                                 __ptext21 9A7C                                   __ptext13 A3A8  
                                 __ptext30 6788                                   __ptext22 881C  
                                 __ptext14 A3B2                                   __ptext31 9BCA  
                                 __ptext23 A268                                   __ptext15 977C  
                                 __ptext40 99CC                                   __ptext32 A2C0  
                                 __ptext24 9FB2                                   __ptext16 91D6  
                                 __ptext41 74CC                                   __ptext33 65B0  
                                 __ptext25 A27E                                   __ptext17 7634  
                                 __ptext50 9056                                   __ptext42 A11E  
                                 __ptext34 8FF4                                   __ptext26 9C6C  
                                 __ptext18 A23C                                   __ptext51 2A7C  
                                 __ptext43 95F4                                   __ptext35 9232  
                                 __ptext27 9AB4                                   __ptext19 9892  
                                 __ptext60 7790                                   __ptext52 60A8  
                                 __ptext44 939C                                   __ptext36 6BB4  
                                 __ptext28 A294                                   __ptext61 7584  
                                 __ptext53 5D92                                   __ptext45 98D2  
                                 __ptext37 A328                                   __ptext29 A2AA  
                                 __ptext70 A026                                   __ptext62 61AC  
                                 __ptext54 9A08                                   __ptext46 7B68  
                                 __ptext38 888E                                   __ptext71 9CA0  
                                 __ptext63 735A                                   __ptext55 8BFE  
                                 __ptext47 6C7C                                   __ptext39 85CC  
                                 __ptext80 8B94                                   __ptext72 A1B6  
                                 __ptext64 2712                                   __ptext56 8C66  
                                 __ptext48 7122                                   __ptext81 A06E  
                                 __ptext73 A04A                                   __ptext65 7838  
                                 __ptext57 8900                                   __ptext49 8358  
                                 __ptext90 97C6                                   __ptext82 3DE2  
                                 __ptext74 980C                                   __ptext66 9950  
                                 __ptext58 9644                                   __ptext91 4346  
                                 __ptext83 83D8                                   __ptext75 A3BA  
                                 __ptext67 62B0                                   __ptext59 5480  
                                 __ptext92 4B26                                   __ptext84 2DDA  
                                 __ptext76 A39C                                   __ptext68 A2D6  
                                 __ptext93 9F34                                   __ptext85 9F0A  
                                 __ptext77 9692                                   __ptext69 50B8  
                                 __ptext94 76E2                                   __ptext86 63B4  
                                 __ptext78 49BC                                   __ptext95 86BC  
                                 __ptext87 A092                                   __ptext79 4C90  
                                 __ptext96 6866                                   __ptext88 A0B6  
                                 __ptext97 55B0                                   __ptext89 9FDA  
                                 __ptext98 9F5E                                   __ptext99 6D44  
                        ??___x_sample_fifo 007F                      __end_of_key_shift_loc 9850  
                 ?_sample_call_cal_diff_pr 0001                           __size_of_rtc_set 00B8  
                                 _lcd_init A19A                      _in_adc_start_and_read 8B94  
                                 _iic_stop 9C36               __end_of_m_interp1_float_fast 2352  
                   __size_of_iic_waite_ack 0058                ??___set_short_epr_ilp_scale 0021  
                              _rtDiffPrBuf 0300                                 _LCDREGbits 000FD2  
                _calib_data_set_default_pr 4182                            cal_diff_press@i 03E6  
                                 _keyValue 00FC                  __end_of_rtc_alrm_irq_hook A3BE  
              ___set_short_pr_calib@gohome 0094                                ??_cal_press 0020  
                            __size_of_main 0062                      ?_sample_all_power_off 0001  
                ??_cal_diff_hight_to_vol_h 0020                               _ui_disp_menu 76E2  
                ??_cal_diff_hight_to_vol_v 0020                            crc_sum@uchCRCHi 006A  
                          crc_sum@uchCRCLo 006B            __end_of_cal_additional_pressute A1EE  
                          m_flash_read@t32 006A                                   _passWord 003D  
                          m_flash_read@buf 0064                            m_flash_read@len 0066  
              ___set_short_diff_calib@adjv 009D           __size_of_handler_interrupt_hight 6F94  
             ?_ui_disp_menu_calib_diff_adj 0001                               ??_ticker_dly 0020  
          ?_calib_data_set_default_diff_pr 0001           ??_calib_data_set_default_diff_pr 0068  
                                 _rtWeight 0156            ??___enter_menu_calib_press_diff 007D  
            __size_of_key_process_set_long 00B8                                   _soc_init A33A  
                             ticker_dly@ms 0060                 ??_iic_received_byte_if_ack 0021  
                    m_interp1_cal_p_t@tmpx 007A                                   _rtVolume 0152  
         __end_of___up_adj_bar_level_scale A2D6                     __end_of_lcd_disp_level 944C  
                 ??___set_short_diff_calib 008A                      m_interp1_cal_p_v@xout 007E  
                                 _rtc_init 9912                     ads1115_write_reg@value 0069  
                         ?_ads1115_set_pga 0060                     __size_of_m_flash_erase 005A  
                                 int$flags 0040                   ?_calib_data_init_diff_pr 0001  
                         ?_ads1115_set_mux 0060                            _lcd_show_string 8A4E  
             ??___set_long_bar_level_scale 0021             __size_ofi2_sys_ticker_irq_hook 001A  
            __end_ofi2_sys_ticker_irq_hook A23C                          ___up_pr_calib_adj 9A7C  
                   __size_of_m_flash_write 0136                   ?_ads1115_read_conversion 006E  
                              ??_lcd_bl_on 0020                      ?_ui_disp_menu_pos_adj 0001  
                         ?_lcd_disp_unit_t 0001                      ?_ui_disp_menu_psw_adj 0001  
                              ??_iic_start 0020                         ?___up_pr_calib_adj 0001  
            __size_of_at24c02_write_n_byte 0116               __end_of___set_short_pr_calib 2DDA  
                              delay_ms@dly 0064                        ads1115_init@slvaddr 0062  
                              ??_m_mem_cpy 0020                     at24c02_read_n_byte@buf 006B  
               ?___enter_menu_poly_coeffic 0001                                ??_m_mem_set 0020  
                   at24c02_read_n_byte@len 006D                                delay_us@dly 0060  
                             _x_prDiffData 01E8            __end_of___enter_menu_warn_value 71E0  
               ?_lcd_disp_unit_temperature 0001                                 _INTCONbits 000FF2  
                      _sample_all_power_on A314          __size_of_sample_diff_pr_chip_fast 01D2  
       __end_of___enter_menu_set_base_zero 8644                 ___enter_menu_set_base_zero 85CC  
                 __size_of_key_process_set 009C          __size_of___enter_menu_set_density 0072  
                ?_sample_diff_pr_chip_fast 0001                       ui_disp_xfloat_pt@buf 007A  
                         m_mem_cpy_len@len 0064                      lcd_disp_level_bar@bar 0071  
           ___set_short_diff_calib@saveFlg 0096                  ?___enter_menu_set_density 0001  
                     ui_disp_xfloat_pt@xpf 0076                       iic_waite_ack@timeout 0020  
                    __CFG_RTCSOSC$T1OSCREF 000000                        ??___up_pr_calib_adj 0021  
                         ?_m_int16_2_str_4 0068                ?_ui_disp_menu_work_mode_adj 0001  
                            key_polling@t8 0067                __end_ofi2_rtc_alrm_irq_hook A3C0  
                            _lcd_disp_logo 9E20            __end_of_key_process_set_up_long 6C7C  
                       __end_of_ticker_dly 9BCA                   ___set_short_pr_calib@t16 009B  
                 ___set_short_pr_calib@t32 0097                                   intlevel1 0000  
                                 intlevel2 0000                        _at24c02_read_n_byte 4502  
                     ads1115_read_reg@addr 006A                              key_process@tm 01FD  
                 ___set_short_pr_calib@pra 0090                 __size_of_iic_received_byte 0064  
                          ___x_arrange_str 9178               ___set_short_pose_size@gohome 03CA  
             __end_of_cal_diff_hight_level 3358                __size_of___up_adj_work_mode 0036  
                         ___lwmod@dividend 0069                       _sample_variable_init 94A4  
                         ___lldiv@dividend 0060             __size_of_handler_interrupt_low 00C0  
                  ??_sample_diff_pr_fliter 0020              __end_of_handler_interrupt_low 00D8  
              __end_of___up_diff_calib_adj 9AEC                       __end_of___up_psw_adj A268  
                     ?_sample_all_power_on 0001                                 _OSCCONbits 000FD3  
               __end_of___up_epr_calib_adj 9CA0                __size_of___set_long_density 0050  
                            _iic_send_byte 87A8                      ads1115_write_reg@addr 0068  
                  __end_of_lcd_set_com_seg 6ED4               ui_disp_menu_calib_pr_adj@buf 008A  
                 _ui_disp_adj_xfixed_pt_dp 693E              ??_ui_disp_menu_calib_diff_adj 0021  
                 ??_sample_call_cal_in_soc 0021               __size_of___up_warn_value_adj 0016  
                __end_of___up_pr_calib_adj 9AB4                             crc_sum@puchMsg 0060  
                          ?_lcd_disp_level 0001               __end_of_lcd_disp_unit_2nd_m3 8358  
             __end_of_lcd_disp_unit_1st_m3 8E66                              _iic_waite_ack 944C  
                ___set_short_epr_ilp_scale 7584                       ?_at24c02_read_n_byte 0068  
             ___set_short_epr_param@gohome 03CA                  ___set_short_epr_param@t32 03CB  
              ??_ui_disp_menu_calib_pr_adj 0021                         _lcd_disp_chr_loc_0 8124  
                       _lcd_disp_chr_loc_1 8094                         _lcd_disp_chr_loc_2 8004  
                       _lcd_disp_chr_loc_3 7F74                         _lcd_disp_chr_loc_4 7EE4  
                       _lcd_disp_chr_loc_5 7E54                         _lcd_disp_chr_loc_6 7DC4  
                       _lcd_disp_chr_loc_7 7D34               __end_of_event_process_ticker A3A8  
                   __size_of_m_mem_cpy_len 004E             __size_of_ads1115_init_all_chip 003E  
             ?___sys_data_save_write_flash 0001                  ___set_short_epr_param@stp 03CF  
              ??_ui_disp_menu_bar_full_adj 0021              __end_of_ads1115_init_all_chip 99CC  
                           _m_flash_unlock A1EE            __end_of_cal_diff_hight_to_vol_h 35D0  
          __end_of_cal_diff_hight_to_vol_v 0784                   m_interp1_cal_p_t@tmpxLen 007E  
                               _RTCCFGbits 000F5F                        ads1115_read_reg@t16 006C  
                              crc_append@n 006E                           ___lldiv@quotient 0068  
                          ___lwmod@divisor 006B                              crc_sum@uIndex 0068  
                  ___int32_2_mflot32@F7712 0142                            ___lwmod@counter 006D  
                      ?_lcd_disp_chr_loc_0 0001                        ?_lcd_disp_chr_loc_1 0001  
                      ?_lcd_disp_chr_loc_2 0001                        ?_lcd_disp_chr_loc_3 0001  
                      ?_lcd_disp_chr_loc_4 0001                        ?_lcd_disp_chr_loc_5 0001  
                      ?_lcd_disp_chr_loc_6 0001                        ?_lcd_disp_chr_loc_7 0001  
                 ___enter_menu_calib_press 60A8                           ?_sys_ticker_init 0001  
                 __size_of_data_sys_cal_v1 0204                   __size_of_data_sys_cal_v2 0164  
                             ___aldiv@sign 0075                             ?_lcd_disp_logo 0001  
                   ?_in_adc_start_and_read 0064                              _m_flash_erase 9342  
                            ___fladd@signs 00B4                              _m_flash_write 534A  
                 __end_of___down_dpr_calib A06E                     ??_sample_all_power_off 0020  
                 ui_disp_adj_xfloat_pt@buf 007D                   ui_disp_adj_xfloat_pt@loc 007A  
               __size_of_rtc_alrm_irq_hook 0002                   ui_disp_adj_xfloat_pt@xpf 0078  
                 ui_disp_adj_xfloat_pt@str 0076                      ?_sample_variable_init 0001  
                            ?_lcd_disp_all 0001                   __size_of___down_home_adj 001C  
       __end_of___enter_menu_set_pose_size 9A44                 ___enter_menu_set_pose_size 9A08  
                             ___fladd@aexp 00B5                               ___fladd@bexp 00B6  
                       _lcd_disp_level_bar 0C96                   __size_of_cal_diff_p_to_h 0108  
                   cal_diff_hight_level@f1 00D0                     cal_diff_hight_level@f2 00CC  
                 ui_disp_adj_xfixed_pt@buf 007D                   ui_disp_adj_xfixed_pt@loc 007A  
                    ??_sample_all_power_on 0020                    __end_of_lcd_show_string 8ABC  
                 ui_disp_adj_xfixed_pt@str 0076                         _lcd_show_string_l0 89E0  
                       _lcd_show_string_l1 9850                                crc_verify@n 006E  
            __size_of_ui_disp_clear_num_dp 005A                __end_of_ui_disp_start_cs600 7C9C  
                     ??_lcd_disp_chr_loc_0 0020                       ??_lcd_disp_chr_loc_1 0020  
                     ??_lcd_disp_chr_loc_2 0020                       ??_lcd_disp_chr_loc_3 0020  
                     ??_lcd_disp_chr_loc_4 0020                       ??_lcd_disp_chr_loc_5 0020  
                     ??_lcd_disp_chr_loc_6 0020                       ??_lcd_disp_chr_loc_7 0020  
                           ?_iic_send_byte 0001                   ??_ui_disp_menu_bzero_adj 0021  
                            ?_iic_send_ack 0001                   __size_of___down_pr_calib 0024  
              ui_disp_menu_work_mode_adj@p 0081            __end_of_ads1115_read_conversion 980C  
                  ??_ui_disp_adj_xfloat_pt 007B          __size_of_cal_pt100_temperature_in 0014  
        __size_of_cal_pt100_temperature_ex 0014                    ??_ui_disp_adj_xfixed_pt 007B  
              __size_of___up_base_zero_adj 0016                        ?_lcd_disp_level_bar 0020  
                ?_cal_pt100_temperature_in 0001                  ?_cal_pt100_temperature_ex 0001  
