

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Sep 11 00:03:06 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 1.42
    86                           ; Generated 13/04/2017 GMT
    87                           ; 
    88                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F86J93 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataCOMRAM
   121  001AB8                     __pidataCOMRAM:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _fpSysData
   125  001AB8  00                 	db	0
   126  001AB9  F4                 	db	244
   127  001ABA  00                 	db	0
   128                           
   129                           	psect	idataBANK0
   130  001A8E                     __pidataBANK0:
   131                           	opt stack 0
   132                           
   133                           ;initializer for ui_disp_start_cs600@F7544
   134  001A8E  2D                 	db	45
   135  001A8F  30                 	db	48
   136  001A90  30                 	db	48
   137  001A91  2D                 	db	45
   138  001A92  00                 	db	0
   139  001A93  00                 	db	0
   140                           
   141                           ;initializer for _defalutRtc
   142  001A94  17                 	db	23
   143  001A95  07                 	db	7
   144  001A96  31                 	db	49
   145  001A97  23                 	db	35
   146  001A98  55                 	db	85
   147  001A99  55                 	db	85
   148  001A9A  02                 	db	2
   149                           
   150                           	psect	mediumconst
   151  00FCBE                     __pmediumconst:
   152                           	opt stack 0
   153  00FCBE  00                 	db	0
   154  00FCBF                     _auchCRCLo:
   155                           	opt stack 0
   156  00FCBF  00                 	db	0
   157  00FCC0  C0                 	db	192
   158  00FCC1  C1                 	db	193
   159  00FCC2  01                 	db	1
   160  00FCC3  C3                 	db	195
   161  00FCC4  03                 	db	3
   162  00FCC5  02                 	db	2
   163  00FCC6  C2                 	db	194
   164  00FCC7  C6                 	db	198
   165  00FCC8  06                 	db	6
   166  00FCC9  07                 	db	7
   167  00FCCA  C7                 	db	199
   168  00FCCB  05                 	db	5
   169  00FCCC  C5                 	db	197
   170  00FCCD  C4                 	db	196
   171  00FCCE  04                 	db	4
   172  00FCCF  CC                 	db	204
   173  00FCD0  0C                 	db	12
   174  00FCD1  0D                 	db	13
   175  00FCD2  CD                 	db	205
   176  00FCD3  0F                 	db	15
   177  00FCD4  CF                 	db	207
   178  00FCD5  CE                 	db	206
   179  00FCD6  0E                 	db	14
   180  00FCD7  0A                 	db	10
   181  00FCD8  CA                 	db	202
   182  00FCD9  CB                 	db	203
   183  00FCDA  0B                 	db	11
   184  00FCDB  C9                 	db	201
   185  00FCDC  09                 	db	9
   186  00FCDD  08                 	db	8
   187  00FCDE  C8                 	db	200
   188  00FCDF  D8                 	db	216
   189  00FCE0  18                 	db	24
   190  00FCE1  19                 	db	25
   191  00FCE2  D9                 	db	217
   192  00FCE3  1B                 	db	27
   193  00FCE4  DB                 	db	219
   194  00FCE5  DA                 	db	218
   195  00FCE6  1A                 	db	26
   196  00FCE7  1E                 	db	30
   197  00FCE8  DE                 	db	222
   198  00FCE9  DF                 	db	223
   199  00FCEA  1F                 	db	31
   200  00FCEB  DD                 	db	221
   201  00FCEC  1D                 	db	29
   202  00FCED  1C                 	db	28
   203  00FCEE  DC                 	db	220
   204  00FCEF  14                 	db	20
   205  00FCF0  D4                 	db	212
   206  00FCF1  D5                 	db	213
   207  00FCF2  15                 	db	21
   208  00FCF3  D7                 	db	215
   209  00FCF4  17                 	db	23
   210  00FCF5  16                 	db	22
   211  00FCF6  D6                 	db	214
   212  00FCF7  D2                 	db	210
   213  00FCF8  12                 	db	18
   214  00FCF9  13                 	db	19
   215  00FCFA  D3                 	db	211
   216  00FCFB  11                 	db	17
   217  00FCFC  D1                 	db	209
   218  00FCFD  D0                 	db	208
   219  00FCFE  10                 	db	16
   220  00FCFF  F0                 	db	240
   221  00FD00  30                 	db	48
   222  00FD01  31                 	db	49
   223  00FD02  F1                 	db	241
   224  00FD03  33                 	db	51
   225  00FD04  F3                 	db	243
   226  00FD05  F2                 	db	242
   227  00FD06  32                 	db	50
   228  00FD07  36                 	db	54
   229  00FD08  F6                 	db	246
   230  00FD09  F7                 	db	247
   231  00FD0A  37                 	db	55
   232  00FD0B  F5                 	db	245
   233  00FD0C  35                 	db	53
   234  00FD0D  34                 	db	52
   235  00FD0E  F4                 	db	244
   236  00FD0F  3C                 	db	60
   237  00FD10  FC                 	db	252
   238  00FD11  FD                 	db	253
   239  00FD12  3D                 	db	61
   240  00FD13  FF                 	db	255
   241  00FD14  3F                 	db	63
   242  00FD15  3E                 	db	62
   243  00FD16  FE                 	db	254
   244  00FD17  FA                 	db	250
   245  00FD18  3A                 	db	58
   246  00FD19  3B                 	db	59
   247  00FD1A  FB                 	db	251
   248  00FD1B  39                 	db	57
   249  00FD1C  F9                 	db	249
   250  00FD1D  F8                 	db	248
   251  00FD1E  38                 	db	56
   252  00FD1F  28                 	db	40
   253  00FD20  E8                 	db	232
   254  00FD21  E9                 	db	233
   255  00FD22  29                 	db	41
   256  00FD23  EB                 	db	235
   257  00FD24  2B                 	db	43
   258  00FD25  2A                 	db	42
   259  00FD26  EA                 	db	234
   260  00FD27  EE                 	db	238
   261  00FD28  2E                 	db	46
   262  00FD29  2F                 	db	47
   263  00FD2A  EF                 	db	239
   264  00FD2B  2D                 	db	45
   265  00FD2C  ED                 	db	237
   266  00FD2D  EC                 	db	236
   267  00FD2E  2C                 	db	44
   268  00FD2F  E4                 	db	228
   269  00FD30  24                 	db	36
   270  00FD31  25                 	db	37
   271  00FD32  E5                 	db	229
   272  00FD33  27                 	db	39
   273  00FD34  E7                 	db	231
   274  00FD35  E6                 	db	230
   275  00FD36  26                 	db	38
   276  00FD37  22                 	db	34
   277  00FD38  E2                 	db	226
   278  00FD39  E3                 	db	227
   279  00FD3A  23                 	db	35
   280  00FD3B  E1                 	db	225
   281  00FD3C  21                 	db	33
   282  00FD3D  20                 	db	32
   283  00FD3E  E0                 	db	224
   284  00FD3F  A0                 	db	160
   285  00FD40  60                 	db	96
   286  00FD41  61                 	db	97
   287  00FD42  A1                 	db	161
   288  00FD43  63                 	db	99
   289  00FD44  A3                 	db	163
   290  00FD45  A2                 	db	162
   291  00FD46  62                 	db	98
   292  00FD47  66                 	db	102
   293  00FD48  A6                 	db	166
   294  00FD49  A7                 	db	167
   295  00FD4A  67                 	db	103
   296  00FD4B  A5                 	db	165
   297  00FD4C  65                 	db	101
   298  00FD4D  64                 	db	100
   299  00FD4E  A4                 	db	164
   300  00FD4F  6C                 	db	108
   301  00FD50  AC                 	db	172
   302  00FD51  AD                 	db	173
   303  00FD52  6D                 	db	109
   304  00FD53  AF                 	db	175
   305  00FD54  6F                 	db	111
   306  00FD55  6E                 	db	110
   307  00FD56  AE                 	db	174
   308  00FD57  AA                 	db	170
   309  00FD58  6A                 	db	106
   310  00FD59  6B                 	db	107
   311  00FD5A  AB                 	db	171
   312  00FD5B  69                 	db	105
   313  00FD5C  A9                 	db	169
   314  00FD5D  A8                 	db	168
   315  00FD5E  68                 	db	104
   316  00FD5F  78                 	db	120
   317  00FD60  B8                 	db	184
   318  00FD61  B9                 	db	185
   319  00FD62  79                 	db	121
   320  00FD63  BB                 	db	187
   321  00FD64  7B                 	db	123
   322  00FD65  7A                 	db	122
   323  00FD66  BA                 	db	186
   324  00FD67  BE                 	db	190
   325  00FD68  7E                 	db	126
   326  00FD69  7F                 	db	127
   327  00FD6A  BF                 	db	191
   328  00FD6B  7D                 	db	125
   329  00FD6C  BD                 	db	189
   330  00FD6D  BC                 	db	188
   331  00FD6E  7C                 	db	124
   332  00FD6F  B4                 	db	180
   333  00FD70  74                 	db	116
   334  00FD71  75                 	db	117
   335  00FD72  B5                 	db	181
   336  00FD73  77                 	db	119
   337  00FD74  B7                 	db	183
   338  00FD75  B6                 	db	182
   339  00FD76  76                 	db	118
   340  00FD77  72                 	db	114
   341  00FD78  B2                 	db	178
   342  00FD79  B3                 	db	179
   343  00FD7A  73                 	db	115
   344  00FD7B  B1                 	db	177
   345  00FD7C  71                 	db	113
   346  00FD7D  70                 	db	112
   347  00FD7E  B0                 	db	176
   348  00FD7F  50                 	db	80
   349  00FD80  90                 	db	144
   350  00FD81  91                 	db	145
   351  00FD82  51                 	db	81
   352  00FD83  93                 	db	147
   353  00FD84  53                 	db	83
   354  00FD85  52                 	db	82
   355  00FD86  92                 	db	146
   356  00FD87  96                 	db	150
   357  00FD88  56                 	db	86
   358  00FD89  57                 	db	87
   359  00FD8A  97                 	db	151
   360  00FD8B  55                 	db	85
   361  00FD8C  95                 	db	149
   362  00FD8D  94                 	db	148
   363  00FD8E  54                 	db	84
   364  00FD8F  9C                 	db	156
   365  00FD90  5C                 	db	92
   366  00FD91  5D                 	db	93
   367  00FD92  9D                 	db	157
   368  00FD93  5F                 	db	95
   369  00FD94  9F                 	db	159
   370  00FD95  9E                 	db	158
   371  00FD96  5E                 	db	94
   372  00FD97  5A                 	db	90
   373  00FD98  9A                 	db	154
   374  00FD99  9B                 	db	155
   375  00FD9A  5B                 	db	91
   376  00FD9B  99                 	db	153
   377  00FD9C  59                 	db	89
   378  00FD9D  58                 	db	88
   379  00FD9E  98                 	db	152
   380  00FD9F  88                 	db	136
   381  00FDA0  48                 	db	72
   382  00FDA1  49                 	db	73
   383  00FDA2  89                 	db	137
   384  00FDA3  4B                 	db	75
   385  00FDA4  8B                 	db	139
   386  00FDA5  8A                 	db	138
   387  00FDA6  4A                 	db	74
   388  00FDA7  4E                 	db	78
   389  00FDA8  8E                 	db	142
   390  00FDA9  8F                 	db	143
   391  00FDAA  4F                 	db	79
   392  00FDAB  8D                 	db	141
   393  00FDAC  4D                 	db	77
   394  00FDAD  4C                 	db	76
   395  00FDAE  8C                 	db	140
   396  00FDAF  44                 	db	68
   397  00FDB0  84                 	db	132
   398  00FDB1  85                 	db	133
   399  00FDB2  45                 	db	69
   400  00FDB3  87                 	db	135
   401  00FDB4  47                 	db	71
   402  00FDB5  46                 	db	70
   403  00FDB6  86                 	db	134
   404  00FDB7  82                 	db	130
   405  00FDB8  42                 	db	66
   406  00FDB9  43                 	db	67
   407  00FDBA  83                 	db	131
   408  00FDBB  41                 	db	65
   409  00FDBC  81                 	db	129
   410  00FDBD  80                 	db	128
   411  00FDBE  40                 	db	64
   412  00FDBF                     __end_of_auchCRCLo:
   413                           	opt stack 0
   414  00FDBF                     _auchCRCHi:
   415                           	opt stack 0
   416  00FDBF  00                 	db	0
   417  00FDC0  C1                 	db	193
   418  00FDC1  81                 	db	129
   419  00FDC2  40                 	db	64
   420  00FDC3  01                 	db	1
   421  00FDC4  C0                 	db	192
   422  00FDC5  80                 	db	128
   423  00FDC6  41                 	db	65
   424  00FDC7  01                 	db	1
   425  00FDC8  C0                 	db	192
   426  00FDC9  80                 	db	128
   427  00FDCA  41                 	db	65
   428  00FDCB  00                 	db	0
   429  00FDCC  C1                 	db	193
   430  00FDCD  81                 	db	129
   431  00FDCE  40                 	db	64
   432  00FDCF  01                 	db	1
   433  00FDD0  C0                 	db	192
   434  00FDD1  80                 	db	128
   435  00FDD2  41                 	db	65
   436  00FDD3  00                 	db	0
   437  00FDD4  C1                 	db	193
   438  00FDD5  81                 	db	129
   439  00FDD6  40                 	db	64
   440  00FDD7  00                 	db	0
   441  00FDD8  C1                 	db	193
   442  00FDD9  81                 	db	129
   443  00FDDA  40                 	db	64
   444  00FDDB  01                 	db	1
   445  00FDDC  C0                 	db	192
   446  00FDDD  80                 	db	128
   447  00FDDE  41                 	db	65
   448  00FDDF  01                 	db	1
   449  00FDE0  C0                 	db	192
   450  00FDE1  80                 	db	128
   451  00FDE2  41                 	db	65
   452  00FDE3  00                 	db	0
   453  00FDE4  C1                 	db	193
   454  00FDE5  81                 	db	129
   455  00FDE6  40                 	db	64
   456  00FDE7  00                 	db	0
   457  00FDE8  C1                 	db	193
   458  00FDE9  81                 	db	129
   459  00FDEA  40                 	db	64
   460  00FDEB  01                 	db	1
   461  00FDEC  C0                 	db	192
   462  00FDED  80                 	db	128
   463  00FDEE  41                 	db	65
   464  00FDEF  00                 	db	0
   465  00FDF0  C1                 	db	193
   466  00FDF1  81                 	db	129
   467  00FDF2  40                 	db	64
   468  00FDF3  01                 	db	1
   469  00FDF4  C0                 	db	192
   470  00FDF5  80                 	db	128
   471  00FDF6  41                 	db	65
   472  00FDF7  01                 	db	1
   473  00FDF8  C0                 	db	192
   474  00FDF9  80                 	db	128
   475  00FDFA  41                 	db	65
   476  00FDFB  00                 	db	0
   477  00FDFC  C1                 	db	193
   478  00FDFD  81                 	db	129
   479  00FDFE  40                 	db	64
   480  00FDFF  01                 	db	1
   481  00FE00  C0                 	db	192
   482  00FE01  80                 	db	128
   483  00FE02  41                 	db	65
   484  00FE03  00                 	db	0
   485  00FE04  C1                 	db	193
   486  00FE05  81                 	db	129
   487  00FE06  40                 	db	64
   488  00FE07  00                 	db	0
   489  00FE08  C1                 	db	193
   490  00FE09  81                 	db	129
   491  00FE0A  40                 	db	64
   492  00FE0B  01                 	db	1
   493  00FE0C  C0                 	db	192
   494  00FE0D  80                 	db	128
   495  00FE0E  41                 	db	65
   496  00FE0F  00                 	db	0
   497  00FE10  C1                 	db	193
   498  00FE11  81                 	db	129
   499  00FE12  40                 	db	64
   500  00FE13  01                 	db	1
   501  00FE14  C0                 	db	192
   502  00FE15  80                 	db	128
   503  00FE16  41                 	db	65
   504  00FE17  01                 	db	1
   505  00FE18  C0                 	db	192
   506  00FE19  80                 	db	128
   507  00FE1A  41                 	db	65
   508  00FE1B  00                 	db	0
   509  00FE1C  C1                 	db	193
   510  00FE1D  81                 	db	129
   511  00FE1E  40                 	db	64
   512  00FE1F  00                 	db	0
   513  00FE20  C1                 	db	193
   514  00FE21  81                 	db	129
   515  00FE22  40                 	db	64
   516  00FE23  01                 	db	1
   517  00FE24  C0                 	db	192
   518  00FE25  80                 	db	128
   519  00FE26  41                 	db	65
   520  00FE27  01                 	db	1
   521  00FE28  C0                 	db	192
   522  00FE29  80                 	db	128
   523  00FE2A  41                 	db	65
   524  00FE2B  00                 	db	0
   525  00FE2C  C1                 	db	193
   526  00FE2D  81                 	db	129
   527  00FE2E  40                 	db	64
   528  00FE2F  01                 	db	1
   529  00FE30  C0                 	db	192
   530  00FE31  80                 	db	128
   531  00FE32  41                 	db	65
   532  00FE33  00                 	db	0
   533  00FE34  C1                 	db	193
   534  00FE35  81                 	db	129
   535  00FE36  40                 	db	64
   536  00FE37  00                 	db	0
   537  00FE38  C1                 	db	193
   538  00FE39  81                 	db	129
   539  00FE3A  40                 	db	64
   540  00FE3B  01                 	db	1
   541  00FE3C  C0                 	db	192
   542  00FE3D  80                 	db	128
   543  00FE3E  41                 	db	65
   544  00FE3F  01                 	db	1
   545  00FE40  C0                 	db	192
   546  00FE41  80                 	db	128
   547  00FE42  41                 	db	65
   548  00FE43  00                 	db	0
   549  00FE44  C1                 	db	193
   550  00FE45  81                 	db	129
   551  00FE46  40                 	db	64
   552  00FE47  00                 	db	0
   553  00FE48  C1                 	db	193
   554  00FE49  81                 	db	129
   555  00FE4A  40                 	db	64
   556  00FE4B  01                 	db	1
   557  00FE4C  C0                 	db	192
   558  00FE4D  80                 	db	128
   559  00FE4E  41                 	db	65
   560  00FE4F  00                 	db	0
   561  00FE50  C1                 	db	193
   562  00FE51  81                 	db	129
   563  00FE52  40                 	db	64
   564  00FE53  01                 	db	1
   565  00FE54  C0                 	db	192
   566  00FE55  80                 	db	128
   567  00FE56  41                 	db	65
   568  00FE57  01                 	db	1
   569  00FE58  C0                 	db	192
   570  00FE59  80                 	db	128
   571  00FE5A  41                 	db	65
   572  00FE5B  00                 	db	0
   573  00FE5C  C1                 	db	193
   574  00FE5D  81                 	db	129
   575  00FE5E  40                 	db	64
   576  00FE5F  00                 	db	0
   577  00FE60  C1                 	db	193
   578  00FE61  81                 	db	129
   579  00FE62  40                 	db	64
   580  00FE63  01                 	db	1
   581  00FE64  C0                 	db	192
   582  00FE65  80                 	db	128
   583  00FE66  41                 	db	65
   584  00FE67  01                 	db	1
   585  00FE68  C0                 	db	192
   586  00FE69  80                 	db	128
   587  00FE6A  41                 	db	65
   588  00FE6B  00                 	db	0
   589  00FE6C  C1                 	db	193
   590  00FE6D  81                 	db	129
   591  00FE6E  40                 	db	64
   592  00FE6F  01                 	db	1
   593  00FE70  C0                 	db	192
   594  00FE71  80                 	db	128
   595  00FE72  41                 	db	65
   596  00FE73  00                 	db	0
   597  00FE74  C1                 	db	193
   598  00FE75  81                 	db	129
   599  00FE76  40                 	db	64
   600  00FE77  00                 	db	0
   601  00FE78  C1                 	db	193
   602  00FE79  81                 	db	129
   603  00FE7A  40                 	db	64
   604  00FE7B  01                 	db	1
   605  00FE7C  C0                 	db	192
   606  00FE7D  80                 	db	128
   607  00FE7E  41                 	db	65
   608  00FE7F  00                 	db	0
   609  00FE80  C1                 	db	193
   610  00FE81  81                 	db	129
   611  00FE82  40                 	db	64
   612  00FE83  01                 	db	1
   613  00FE84  C0                 	db	192
   614  00FE85  80                 	db	128
   615  00FE86  41                 	db	65
   616  00FE87  01                 	db	1
   617  00FE88  C0                 	db	192
   618  00FE89  80                 	db	128
   619  00FE8A  41                 	db	65
   620  00FE8B  00                 	db	0
   621  00FE8C  C1                 	db	193
   622  00FE8D  81                 	db	129
   623  00FE8E  40                 	db	64
   624  00FE8F  01                 	db	1
   625  00FE90  C0                 	db	192
   626  00FE91  80                 	db	128
   627  00FE92  41                 	db	65
   628  00FE93  00                 	db	0
   629  00FE94  C1                 	db	193
   630  00FE95  81                 	db	129
   631  00FE96  40                 	db	64
   632  00FE97  00                 	db	0
   633  00FE98  C1                 	db	193
   634  00FE99  81                 	db	129
   635  00FE9A  40                 	db	64
   636  00FE9B  01                 	db	1
   637  00FE9C  C0                 	db	192
   638  00FE9D  80                 	db	128
   639  00FE9E  41                 	db	65
   640  00FE9F  01                 	db	1
   641  00FEA0  C0                 	db	192
   642  00FEA1  80                 	db	128
   643  00FEA2  41                 	db	65
   644  00FEA3  00                 	db	0
   645  00FEA4  C1                 	db	193
   646  00FEA5  81                 	db	129
   647  00FEA6  40                 	db	64
   648  00FEA7  00                 	db	0
   649  00FEA8  C1                 	db	193
   650  00FEA9  81                 	db	129
   651  00FEAA  40                 	db	64
   652  00FEAB  01                 	db	1
   653  00FEAC  C0                 	db	192
   654  00FEAD  80                 	db	128
   655  00FEAE  41                 	db	65
   656  00FEAF  00                 	db	0
   657  00FEB0  C1                 	db	193
   658  00FEB1  81                 	db	129
   659  00FEB2  40                 	db	64
   660  00FEB3  01                 	db	1
   661  00FEB4  C0                 	db	192
   662  00FEB5  80                 	db	128
   663  00FEB6  41                 	db	65
   664  00FEB7  01                 	db	1
   665  00FEB8  C0                 	db	192
   666  00FEB9  80                 	db	128
   667  00FEBA  41                 	db	65
   668  00FEBB  00                 	db	0
   669  00FEBC  C1                 	db	193
   670  00FEBD  81                 	db	129
   671  00FEBE  40                 	db	64
   672  00FEBF                     __end_of_auchCRCHi:
   673                           	opt stack 0
   674  00FEBF                     _LCDDigitalIndexTable:
   675                           	opt stack 0
   676  00FEBF  30                 	db	48
   677  00FEC0  31                 	db	49
   678  00FEC1  32                 	db	50
   679  00FEC2  33                 	db	51
   680  00FEC3  34                 	db	52
   681  00FEC4  35                 	db	53
   682  00FEC5  36                 	db	54
   683  00FEC6  37                 	db	55
   684  00FEC7  38                 	db	56
   685  00FEC8  39                 	db	57
   686  00FEC9  61                 	db	97
   687  00FECA  62                 	db	98
   688  00FECB  63                 	db	99
   689  00FECC  64                 	db	100
   690  00FECD  65                 	db	101
   691  00FECE  66                 	db	102
   692  00FECF  67                 	db	103
   693  00FED0  68                 	db	104
   694  00FED1  69                 	db	105
   695  00FED2  6A                 	db	106
   696  00FED3  6B                 	db	107
   697  00FED4  6C                 	db	108
   698  00FED5  6D                 	db	109
   699  00FED6  6E                 	db	110
   700  00FED7  6F                 	db	111
   701  00FED8  70                 	db	112
   702  00FED9  71                 	db	113
   703  00FEDA  72                 	db	114
   704  00FEDB  73                 	db	115
   705  00FEDC  74                 	db	116
   706  00FEDD  75                 	db	117
   707  00FEDE  76                 	db	118
   708  00FEDF  77                 	db	119
   709  00FEE0  78                 	db	120
   710  00FEE1  79                 	db	121
   711  00FEE2  7A                 	db	122
   712  00FEE3  2E                 	db	46
   713  00FEE4  2D                 	db	45
   714  00FEE5  3A                 	db	58
   715  00FEE6  20                 	db	32
   716  00FEE7  00                 	db	0
   717  00FEE8                     __end_of_LCDDigitalIndexTable:
   718                           	opt stack 0
   719  00FEE8                     _LCDDigitalTable:
   720                           	opt stack 0
   721  00FEE8  3F                 	db	63
   722  00FEE9  06                 	db	6
   723  00FEEA  5B                 	db	91
   724  00FEEB  4F                 	db	79
   725  00FEEC  66                 	db	102
   726  00FEED  6D                 	db	109
   727  00FEEE  7D                 	db	125
   728  00FEEF  07                 	db	7
   729  00FEF0  7F                 	db	127
   730  00FEF1  6F                 	db	111
   731  00FEF2  77                 	db	119
   732  00FEF3  7C                 	db	124
   733  00FEF4  39                 	db	57
   734  00FEF5  5E                 	db	94
   735  00FEF6  79                 	db	121
   736  00FEF7  71                 	db	113
   737  00FEF8  6F                 	db	111
   738  00FEF9  76                 	db	118
   739  00FEFA  06                 	db	6
   740  00FEFB  0E                 	db	14
   741  00FEFC  7A                 	db	122
   742  00FEFD  38                 	db	56
   743  00FEFE  00                 	db	0
   744  00FEFF  37                 	db	55
   745  00FF00  5C                 	db	92
   746  00FF01  73                 	db	115
   747  00FF02  67                 	db	103
   748  00FF03  50                 	db	80
   749  00FF04  6D                 	db	109
   750  00FF05  78                 	db	120
   751  00FF06  3E                 	db	62
   752  00FF07  00                 	db	0
   753  00FF08  00                 	db	0
   754  00FF09  00                 	db	0
   755  00FF0A  6E                 	db	110
   756  00FF0B  5B                 	db	91
   757  00FF0C  40                 	db	64
   758  00FF0D  40                 	db	64
   759  00FF0E  48                 	db	72
   760  00FF0F  00                 	db	0
   761  00FF10                     __end_of_LCDDigitalTable:
   762                           	opt stack 0
   763  00FF10                     _HexTable:
   764                           	opt stack 0
   765  00FF10  30                 	db	48
   766  00FF11  31                 	db	49
   767  00FF12  32                 	db	50
   768  00FF13  33                 	db	51
   769  00FF14  34                 	db	52
   770  00FF15  35                 	db	53
   771  00FF16  36                 	db	54
   772  00FF17  37                 	db	55
   773  00FF18  38                 	db	56
   774  00FF19  39                 	db	57
   775  00FF1A  61                 	db	97
   776  00FF1B  62                 	db	98
   777  00FF1C  63                 	db	99
   778  00FF1D  64                 	db	100
   779  00FF1E  65                 	db	101
   780  00FF1F  66                 	db	102
   781  00FF20  00                 	db	0
   782  00FF21                     __end_of_HexTable:
   783                           	opt stack 0
   784  00FF21                     _defultSystemData:
   785                           	opt stack 0
   786  00FF21  0000               	dw	0
   787  00FF23  0000               	dw	0
   788  00FF25  00                 	db	0
   789  00FF26  5F                 	db	95
   790  00FF27  03E8               	dw	1000
   791  00FF29  2710               	dw	10000
   792  00FF2B  0000               	dw	0
   793  00FF2D  1388               	dw	5000
   794  00FF2F  0000               	dw	0
   795  00FF31  FF38               	dw	65336
   796  00FF33  FFFF               	dw	65535
   797  00FF35  0000               	dw	0
   798  00FF37  0000               	dw	0
   799  00FF39  00                 	db	0
   800  00FF3A  00                 	db	0
   801  00FF3B  00                 	db	0
   802  00FF3C  00                 	db	0
   803  00FF3D  00                 	db	0
   804  00FF3E  00                 	db	0
   805  00FF3F  00                 	db	0
   806  00FF40  00                 	db	0
   807  00FF41  00                 	db	0
   808  00FF42  00                 	db	0
   809  00FF43  00                 	db	0
   810  00FF44  00                 	db	0
   811  00FF45  00                 	db	0
   812  00FF46  00                 	db	0
   813  00FF47  00                 	db	0
   814  00FF48  00                 	db	0
   815  00FF49  00                 	db	0
   816  00FF4A  00                 	db	0
   817  00FF4B  00                 	db	0
   818  00FF4C  00                 	db	0
   819  00FF4D  00                 	db	0
   820  00FF4E  00                 	db	0
   821  00FF4F  00                 	db	0
   822  00FF50  00                 	db	0
   823  00FF51  00                 	db	0
   824  00FF52  00                 	db	0
   825  00FF53  00                 	db	0
   826  00FF54  00                 	db	0
   827  00FF55  00                 	db	0
   828  00FF56  00                 	db	0
   829  00FF57  00                 	db	0
   830  00FF58  00                 	db	0
   831  00FF59  00                 	db	0
   832  00FF5A  00                 	db	0
   833  00FF5B  00                 	db	0
   834  00FF5C  00                 	db	0
   835  00FF5D  00                 	db	0
   836  00FF5E  00                 	db	0
   837  00FF5F  00                 	db	0
   838  00FF60  00                 	db	0
   839  00FF61  00                 	db	0
   840  00FF62  00                 	db	0
   841  00FF63  00                 	db	0
   842  00FF64  00                 	db	0
   843  00FF65  0000               	dw	0
   844  00FF67  0000               	dw	0
   845  00FF69  00                 	db	0
   846  00FF6A  00                 	db	0
   847  00FF6B  00                 	db	0
   848  00FF6C  00                 	db	0
   849  00FF6D  00                 	db	0
   850  00FF6E  00                 	db	0
   851  00FF6F  00                 	db	0
   852  00FF70  00                 	db	0
   853  00FF71  28                 	db	40
   854  00FF72  1E                 	db	30
   855  00FF73  14                 	db	20
   856  00FF74  0A                 	db	10
   857  00FF75  0000               	dw	0
   858  00FF77  0000               	dw	0
   859  00FF79  00                 	db	0
   860  00FF7A  00                 	db	0
   861  00FF7B  00                 	db	0
   862  00FF7C  00                 	db	0
   863  00FF7D  03E8               	dw	1000
   864  00FF7F  0000               	dw	0
   865  00FF81  03E8               	dw	1000
   866  00FF83  0000               	dw	0
   867  00FF85  0000               	dw	0
   868  00FF87  0000               	dw	0
   869  00FF89  00                 	db	0
   870  00FF8A  00                 	db	0
   871  00FF8B  00                 	db	0
   872  00FF8C  00                 	db	0
   873  00FF8D  03E8               	dw	1000
   874  00FF8F  0000               	dw	0
   875  00FF91  03E8               	dw	1000
   876  00FF93  0000               	dw	0
   877  00FF95  0000               	dw	0
   878  00FF97  0000               	dw	0
   879  00FF99  03E8               	dw	1000
   880  00FF9B  0000               	dw	0
   881  00FF9D  0000               	dw	0
   882  00FF9F  0000               	dw	0
   883  00FFA1  03E8               	dw	1000
   884  00FFA3  0000               	dw	0
   885  00FFA5  0000               	dw	0
   886  00FFA7                     __end_of_defultSystemData:
   887                           	opt stack 0
   888  00FFA7                     _flashTestbuf:
   889                           	opt stack 0
   890  00FFA7  30                 	db	48
   891  00FFA8  31                 	db	49
   892  00FFA9  32                 	db	50
   893  00FFAA  33                 	db	51
   894  00FFAB  34                 	db	52
   895  00FFAC  35                 	db	53
   896  00FFAD  36                 	db	54
   897  00FFAE  37                 	db	55
   898  00FFAF  38                 	db	56
   899  00FFB0  39                 	db	57
   900  00FFB1  30                 	db	48
   901  00FFB2  31                 	db	49
   902  00FFB3  32                 	db	50
   903  00FFB4  33                 	db	51
   904  00FFB5  34                 	db	52
   905  00FFB6  35                 	db	53
   906  00FFB7  36                 	db	54
   907  00FFB8  37                 	db	55
   908  00FFB9  38                 	db	56
   909  00FFBA  39                 	db	57
   910  00FFBB  30                 	db	48
   911  00FFBC  31                 	db	49
   912  00FFBD  32                 	db	50
   913  00FFBE  33                 	db	51
   914  00FFBF  34                 	db	52
   915  00FFC0  35                 	db	53
   916  00FFC1  36                 	db	54
   917  00FFC2  37                 	db	55
   918  00FFC3  38                 	db	56
   919  00FFC4  39                 	db	57
   920  00FFC5  30                 	db	48
   921  00FFC6  31                 	db	49
   922  00FFC7  32                 	db	50
   923  00FFC8  33                 	db	51
   924  00FFC9  34                 	db	52
   925  00FFCA  35                 	db	53
   926  00FFCB  36                 	db	54
   927  00FFCC  37                 	db	55
   928  00FFCD  38                 	db	56
   929  00FFCE  39                 	db	57
   930  00FFCF  30                 	db	48
   931  00FFD0  31                 	db	49
   932  00FFD1  32                 	db	50
   933  00FFD2  33                 	db	51
   934  00FFD3  34                 	db	52
   935  00FFD4  35                 	db	53
   936  00FFD5  36                 	db	54
   937  00FFD6  37                 	db	55
   938  00FFD7  38                 	db	56
   939  00FFD8  39                 	db	57
   940  00FFD9  30                 	db	48
   941  00FFDA  31                 	db	49
   942  00FFDB  32                 	db	50
   943  00FFDC  33                 	db	51
   944  00FFDD  34                 	db	52
   945  00FFDE  35                 	db	53
   946  00FFDF  36                 	db	54
   947  00FFE0  37                 	db	55
   948  00FFE1  38                 	db	56
   949  00FFE2  39                 	db	57
   950  00FFE3  30                 	db	48
   951  00FFE4  31                 	db	49
   952  00FFE5  32                 	db	50
   953  00FFE6  33                 	db	51
   954  00FFE7  00                 	db	0
   955  00FFE8                     __end_of_flashTestbuf:
   956                           	opt stack 0
   957  0000                     _RTCVALH	set	3933
   958  0000                     _RTCVALL	set	3932
   959  0000                     _stRTCCFGbits	set	3935
   960  0000                     _ALRMCFGbits	set	3931
   961  0000                     _ALRMRPT	set	3930
   962  0000                     _PADCFG1bits	set	3924
   963  0000                     _RTCCFGbits	set	3935
   964  0000                     _PR2	set	4043
   965  0000                     _T2CON	set	4042
   966  0000                     _RCONbits	set	4048
   967  0000                     _T1CONbits	set	4045
   968  0000                     _IPR3bits	set	4005
   969  0000                     _PIR3bits	set	4004
   970  0000                     _PIE3bits	set	4003
   971  0000                     _INTCON2bits	set	4081
   972  0000                     _OSCCONbits	set	4051
   973  0000                     _FSR0H	set	4074
   974  0000                     _FSR0L	set	4073
   975  0000                     _TABLAT	set	4085
   976  0000                     _TBLPTRU	set	4088
   977  0000                     _TBLPTRH	set	4087
   978  0000                     _TBLPTRL	set	4086
   979  0000                     _EECON1bits	set	4006
   980  0000                     _INTCONbits	set	4082
   981  0000                     _INTCON	set	4082
   982  0000                     _LCDCON	set	4008
   983  0000                     _TRISG	set	3992
   984  0000                     _LCDSE5	set	4026
   985  0000                     _LCDSE4	set	4025
   986  0000                     _LCDSE3	set	4024
   987  0000                     _LCDSE2	set	4023
   988  0000                     _LCDSE1	set	4022
   989  0000                     _LCDSE0	set	4009
   990  0000                     _LCDPSbits	set	4010
   991  0000                     _LCDREG	set	4050
   992  0000                     _LCDDATA23	set	3965
   993  0000                     _LCDDATA22	set	3964
   994  0000                     _LCDDATA21	set	3963
   995  0000                     _LCDDATA20	set	3962
   996  0000                     _LCDDATA19	set	3961
   997  0000                     _LCDDATA18	set	3960
   998  0000                     _LCDDATA17	set	3959
   999  0000                     _LCDDATA16	set	3958
  1000  0000                     _LCDDATA15	set	3957
  1001  0000                     _LCDDATA14	set	3956
  1002  0000                     _LCDDATA13	set	3955
  1003  0000                     _LCDDATA12	set	3954
  1004  0000                     _LCDDATA11	set	3953
  1005  0000                     _LCDDATA10	set	3952
  1006  0000                     _LCDDATA9	set	3951
  1007  0000                     _LCDDATA8	set	3950
  1008  0000                     _LCDDATA7	set	3949
  1009  0000                     _LCDDATA6	set	3948
  1010  0000                     _LCDDATA5	set	3947
  1011  0000                     _LCDDATA4	set	4031
  1012  0000                     _LCDDATA3	set	4030
  1013  0000                     _LCDDATA2	set	4029
  1014  0000                     _LCDDATA1	set	4028
  1015  0000                     _LCDDATA0	set	4027
  1016  0000                     _PORTB	set	3969
  1017  0000                     _ADRESL	set	4035
  1018  0000                     _ADRESH	set	4036
  1019  0000                     _IPR1bits	set	3999
  1020  0000                     _PIE1bits	set	3997
  1021  0000                     _PIR1bits	set	3998
  1022  0000                     _ADCON0bits	set	4034
  1023  0000                     _ADCON2bits	set	4032
  1024  0000                     _ADCON1	set	4033
  1025  0000                     _PORTC	set	3970
  1026  0000                     _LATC	set	3979
  1027  0000                     _TRISC	set	3988
  1028  0000                     _LATB	set	3978
  1029  0000                     _TRISB	set	3987
  1030  00FFE8  20                 	db	32
  1031  00FFE9  20                 	db	32
  1032  00FFEA  20                 	db	32
  1033  00FFEB  20                 	db	32
  1034  00FFEC  20                 	db	32
  1035  00FFED  20                 	db	32
  1036  00FFEE  20                 	db	32
  1037  00FFEF  20                 	db	32
  1038  00FFF0  00                 	db	0
  1039  00FFF1                     STR_1:
  1040  00FFF1  63                 	db	99	;'c'
  1041  00FFF2  73                 	db	115	;'s'
  1042  00FFF3  36                 	db	54	;'6'
  1043  00FFF4  36                 	db	54	;'6'
  1044  00FFF5  00                 	db	0
  1045                           
  1046                           ; #config settings
  1047  00FFF6  00                 	db	0	; dummy byte at the end
  1048  0000                     
  1049                           	psect	cinit
  1050  000E2E                     __pcinit:
  1051                           	opt stack 0
  1052  000E2E                     start_initialization:
  1053                           	opt stack 0
  1054  000E2E                     __initialization:
  1055                           	opt stack 0
  1056                           
  1057                           ; Initialize objects allocated to BANK0 (13 bytes)
  1058                           ; load TBLPTR registers with __pidataBANK0
  1059  000E2E  0E8E               	movlw	low __pidataBANK0
  1060  000E30  6EF6               	movwf	tblptrl,c
  1061  000E32  0E1A               	movlw	high __pidataBANK0
  1062  000E34  6EF7               	movwf	tblptrh,c
  1063  000E36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1064  000E38  6EF8               	movwf	tblptru,c
  1065  000E3A  EE00  F0DB         	lfsr	0,__pdataBANK0
  1066  000E3E  EE10 F00D          	lfsr	1,13
  1067  000E42                     copy_data0:
  1068  000E42  0009               	tblrd		*+
  1069  000E44  CFF5 FFEE          	movff	tablat,postinc0
  1070  000E48  50E5               	movf	postdec1,w,c
  1071  000E4A  50E1               	movf	fsr1l,w,c
  1072  000E4C  E1FA               	bnz	copy_data0
  1073                           
  1074                           ; Initialize objects allocated to COMRAM (3 bytes)
  1075                           ; load TBLPTR registers with __pidataCOMRAM
  1076  000E4E  0EB8               	movlw	low __pidataCOMRAM
  1077  000E50  6EF6               	movwf	tblptrl,c
  1078  000E52  0E1A               	movlw	high __pidataCOMRAM
  1079  000E54  6EF7               	movwf	tblptrh,c
  1080  000E56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1081  000E58  6EF8               	movwf	tblptru,c
  1082  000E5A  0009               	tblrd		*+	;fetch initializer
  1083  000E5C  CFF5 F03D          	movff	tablat,__pdataCOMRAM
  1084  000E60  0009               	tblrd		*+	;fetch initializer
  1085  000E62  CFF5 F03E          	movff	tablat,__pdataCOMRAM+1
  1086  000E66  0009               	tblrd		*+	;fetch initializer
  1087  000E68  CFF5 F03F          	movff	tablat,__pdataCOMRAM+2
  1088                           
  1089                           ; Clear objects allocated to BANK2 (256 bytes)
  1090  000E6C  EE02  F000         	lfsr	0,__pbssBANK2
  1091  000E70  EE11 F000          	lfsr	1,256
  1092  000E74                     clear_0:
  1093  000E74  6AEE               	clrf	postinc0,c
  1094  000E76  50E5               	movf	postdec1,w,c
  1095  000E78  50E1               	movf	fsr1l,w,c
  1096  000E7A  E1FC               	bnz	clear_0
  1097  000E7C  50E2               	movf	fsr1h,w,c
  1098  000E7E  E1FA               	bnz	clear_0
  1099                           
  1100                           ; Clear objects allocated to BANK1 (256 bytes)
  1101  000E80  EE01  F000         	lfsr	0,__pbssBANK1
  1102  000E84  EE11 F000          	lfsr	1,256
  1103  000E88                     clear_1:
  1104  000E88  6AEE               	clrf	postinc0,c
  1105  000E8A  50E5               	movf	postdec1,w,c
  1106  000E8C  50E1               	movf	fsr1l,w,c
  1107  000E8E  E1FC               	bnz	clear_1
  1108  000E90  50E2               	movf	fsr1h,w,c
  1109  000E92  E1FA               	bnz	clear_1
  1110                           
  1111                           ; Clear objects allocated to BANK0 (90 bytes)
  1112  000E94  EE00  F060         	lfsr	0,__pbssBANK0
  1113  000E98  0E5A               	movlw	90
  1114  000E9A                     clear_2:
  1115  000E9A  6AEE               	clrf	postinc0,c
  1116  000E9C  06E8               	decf	wreg,f,c
  1117  000E9E  E1FD               	bnz	clear_2
  1118                           
  1119                           ; Clear objects allocated to COMRAM (26 bytes)
  1120  000EA0  EE00  F023         	lfsr	0,__pbssCOMRAM
  1121  000EA4  0E1A               	movlw	26
  1122  000EA6                     clear_3:
  1123  000EA6  6AEE               	clrf	postinc0,c
  1124  000EA8  06E8               	decf	wreg,f,c
  1125  000EAA  E1FD               	bnz	clear_3
  1126  000EAC                     end_of_initialization:
  1127                           	opt stack 0
  1128  000EAC                     __end_of__initialization:
  1129                           	opt stack 0
  1130  000EAC  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1131  000EAE  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1132  000EB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1133  000EB2  6EF8               	movwf	tblptru,c
  1134  000EB4  0100               	movlb	0
  1135  000EB6  EF2A  F005         	goto	_main	;jump to C main() function
  1136                           tblptru	equ	0xFF8
  1137                           tblptrh	equ	0xFF7
  1138                           tblptrl	equ	0xFF6
  1139                           tablat	equ	0xFF5
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1h	equ	0xFE2
  1144                           fsr1l	equ	0xFE1
  1145                           
  1146                           	psect	bssCOMRAM
  1147  000023                     __pbssCOMRAM:
  1148                           	opt stack 0
  1149  000023                     _pcf8574:
  1150                           	opt stack 0
  1151  000023                     	ds	11
  1152  00002E                     ___mflot32_2_int32@F7535:
  1153                           	opt stack 0
  1154  00002E                     	ds	4
  1155  000032                     ___int32_2_mflot32@F7530:
  1156                           	opt stack 0
  1157  000032                     	ds	4
  1158  000036                     _dlyTicker:
  1159                           	opt stack 0
  1160  000036                     	ds	2
  1161  000038                     _dlyTickerEn:
  1162                           	opt stack 0
  1163  000038                     	ds	1
  1164  000039                     _keyValue:
  1165                           	opt stack 0
  1166  000039                     	ds	1
  1167  00003A                     _st_Bj:
  1168                           	opt stack 0
  1169  00003A                     	ds	1
  1170  00003B                     _pcf8574Value:
  1171                           	opt stack 0
  1172  00003B                     	ds	1
  1173  00003C                     _adjLocation:
  1174                           	opt stack 0
  1175  00003C                     	ds	1
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1h	equ	0xFE2
  1184                           fsr1l	equ	0xFE1
  1185                           
  1186                           	psect	dataCOMRAM
  1187  00003D                     __pdataCOMRAM:
  1188                           	opt stack 0
  1189  00003D                     _fpSysData:
  1190                           	opt stack 0
  1191  00003D                     	ds	3
  1192                           tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           postdec1	equ	0xFE5
  1199                           fsr1h	equ	0xFE2
  1200                           fsr1l	equ	0xFE1
  1201                           
  1202                           	psect	bssBANK0
  1203  000060                     __pbssBANK0:
  1204                           	opt stack 0
  1205  000060                     _pLCD:
  1206                           	opt stack 0
  1207  000060                     	ds	24
  1208  000078                     _glRtc:
  1209                           	opt stack 0
  1210  000078                     	ds	7
  1211  00007F                     _glTicker:
  1212                           	opt stack 0
  1213  00007F                     	ds	4
  1214  000083                     _glbEvent:
  1215                           	opt stack 0
  1216  000083                     	ds	1
  1217  000084                     _ads1115Chip1:
  1218                           	opt stack 0
  1219  000084                     	ds	16
  1220  000094                     _ads1115Chip0:
  1221                           	opt stack 0
  1222  000094                     	ds	16
  1223  0000A4                     _at24c02Ch1:
  1224                           	opt stack 0
  1225  0000A4                     	ds	11
  1226  0000AF                     _at24c02Ch0:
  1227                           	opt stack 0
  1228  0000AF                     	ds	11
  1229                           tblptru	equ	0xFF8
  1230                           tblptrh	equ	0xFF7
  1231                           tblptrl	equ	0xFF6
  1232                           tablat	equ	0xFF5
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           postdec1	equ	0xFE5
  1236                           fsr1h	equ	0xFE2
  1237                           fsr1l	equ	0xFE1
  1238                           
  1239                           	psect	dataBANK0
  1240  0000DB                     __pdataBANK0:
  1241                           	opt stack 0
  1242  0000DB                     ui_disp_start_cs600@F7544:
  1243                           	opt stack 0
  1244  0000DB                     	ds	6
  1245  0000E1                     _defalutRtc:
  1246                           	opt stack 0
  1247  0000E1                     	ds	7
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           postdec1	equ	0xFE5
  1255                           fsr1h	equ	0xFE2
  1256                           fsr1l	equ	0xFE1
  1257                           
  1258                           	psect	bssBANK1
  1259  000100                     __pbssBANK1:
  1260                           	opt stack 0
  1261  000100                     _globleBuffer0:
  1262                           	opt stack 0
  1263  000100                     	ds	256
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           postinc0	equ	0xFEE
  1269                           wreg	equ	0xFE8
  1270                           postdec1	equ	0xFE5
  1271                           fsr1h	equ	0xFE2
  1272                           fsr1l	equ	0xFE1
  1273                           
  1274                           	psect	bssBANK2
  1275  000200                     __pbssBANK2:
  1276                           	opt stack 0
  1277  000200                     _globleBuffer1:
  1278                           	opt stack 0
  1279  000200                     	ds	256
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           postdec1	equ	0xFE5
  1287                           fsr1h	equ	0xFE2
  1288                           fsr1l	equ	0xFE1
  1289                           
  1290                           	psect	cstackBANK0
  1291  0000BA                     __pcstackBANK0:
  1292                           	opt stack 0
  1293  0000BA                     ?___awdiv:
  1294                           	opt stack 0
  1295  0000BA                     m_int8_2_hex@t8:
  1296                           	opt stack 0
  1297  0000BA                     iic_received_byte_if_ack@ack:
  1298                           	opt stack 0
  1299  0000BA                     ads1115_write_reg@pAds1115:
  1300                           	opt stack 0
  1301  0000BA                     delay_us@i:
  1302                           	opt stack 0
  1303  0000BA                     rtc_set@stp:
  1304                           	opt stack 0
  1305  0000BA                     ___awdiv@dividend:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x0
  1309  0000BA                     	ds	1
  1310  0000BB                     iic_received_byte_if_ack@ret:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x1
  1314  0000BB                     	ds	1
  1315  0000BC                     ?_ads1115_read_reg:
  1316                           	opt stack 0
  1317  0000BC                     ?_in_adc_start_and_read:
  1318                           	opt stack 0
  1319  0000BC                     ads1115_write_reg@addr:
  1320                           	opt stack 0
  1321  0000BC                     ads1115_read_reg@pAds1115:
  1322                           	opt stack 0
  1323  0000BC                     ___awdiv@divisor:
  1324                           	opt stack 0
  1325                           
  1326                           ; 2 bytes @ 0x2
  1327  0000BC                     	ds	1
  1328  0000BD                     ads1115_write_reg@value:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x3
  1332  0000BD                     	ds	1
  1333  0000BE                     ads1115_read_reg@addr:
  1334                           	opt stack 0
  1335  0000BE                     in_adc_start_and_read@ch:
  1336                           	opt stack 0
  1337  0000BE                     ___awdiv@counter:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x4
  1341  0000BE                     	ds	1
  1342  0000BF                     ??_ads1115_read_reg:
  1343  0000BF                     ___awdiv@sign:
  1344                           	opt stack 0
  1345  0000BF                     ads1115_start_conversion@pAds1115:
  1346                           	opt stack 0
  1347  0000BF                     in_adc_start_and_read@ret:
  1348                           	opt stack 0
  1349                           
  1350                           ; 2 bytes @ 0x5
  1351  0000BF                     	ds	1
  1352  0000C0                     ads1115_read_reg@t16:
  1353                           	opt stack 0
  1354  0000C0                     ___awdiv@quotient:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x6
  1358  0000C0                     	ds	2
  1359  0000C2                     ??_lcd_set_com_seg:
  1360  0000C2                     ?_ads1115_read_conversion:
  1361                           	opt stack 0
  1362  0000C2                     ads1115_read_conversion@pAds1115:
  1363                           	opt stack 0
  1364                           
  1365                           ; 2 bytes @ 0x8
  1366  0000C2                     	ds	2
  1367  0000C4                     
  1368                           ; 1 bytes @ 0xA
  1369  0000C4                     	ds	1
  1370  0000C5                     lcd_set_com_seg@com:
  1371                           	opt stack 0
  1372  0000C5                     ads1115_read_conversion@result:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0xB
  1376  0000C5                     	ds	1
  1377  0000C6                     lcd_set_com_seg@offset:
  1378                           	opt stack 0
  1379                           
  1380                           ; 1 bytes @ 0xC
  1381  0000C6                     	ds	1
  1382  0000C7                     lcd_set_com_seg@bits:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0xD
  1386  0000C7                     	ds	1
  1387  0000C8                     lcd_disp_level_bar@__bar:
  1388                           	opt stack 0
  1389  0000C8                     lcd_show_dp@show:
  1390                           	opt stack 0
  1391  0000C8                     lcd_show_chr@chr:
  1392                           	opt stack 0
  1393                           
  1394                           ; 1 bytes @ 0xE
  1395  0000C8                     	ds	1
  1396  0000C9                     lcd_disp_level_bar@bar:
  1397                           	opt stack 0
  1398  0000C9                     lcd_show_dp@loc:
  1399                           	opt stack 0
  1400  0000C9                     lcd_show_chr@loc:
  1401                           	opt stack 0
  1402                           
  1403                           ; 1 bytes @ 0xF
  1404  0000C9                     	ds	1
  1405  0000CA                     lcd_disp_level@level:
  1406                           	opt stack 0
  1407  0000CA                     lcd_show_chr@code:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x10
  1411  0000CA                     	ds	1
  1412  0000CB                     lcd_disp_level@i:
  1413                           	opt stack 0
  1414  0000CB                     lcd_show_string_l0@str:
  1415                           	opt stack 0
  1416  0000CB                     lcd_show_string_l1@str:
  1417                           	opt stack 0
  1418  0000CB                     lcd_show_string@str:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x11
  1422  0000CB                     	ds	2
  1423  0000CD                     lcd_show_string_l0@t8:
  1424                           	opt stack 0
  1425  0000CD                     lcd_show_string_l1@t8:
  1426                           	opt stack 0
  1427  0000CD                     lcd_show_string@t8:
  1428                           	opt stack 0
  1429                           
  1430                           ; 1 bytes @ 0x13
  1431  0000CD                     	ds	1
  1432  0000CE                     ui_disp_start_cs600@buf:
  1433                           	opt stack 0
  1434  0000CE                     ui_disp_rtc_mm_ss@buf:
  1435                           	opt stack 0
  1436                           
  1437                           ; 10 bytes @ 0x14
  1438  0000CE                     	ds	6
  1439  0000D4                     ui_disp_start_cs600@dly:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x1A
  1443  0000D4                     	ds	1
  1444  0000D5                     ui_disp_start_cs600@t8:
  1445                           	opt stack 0
  1446                           
  1447                           ; 1 bytes @ 0x1B
  1448  0000D5                     	ds	3
  1449  0000D8                     ui_disp_rtc_mm_ss@t8:
  1450                           	opt stack 0
  1451                           
  1452                           ; 1 bytes @ 0x1E
  1453  0000D8                     	ds	1
  1454  0000D9                     main@t16:
  1455                           	opt stack 0
  1456                           
  1457                           ; 2 bytes @ 0x1F
  1458  0000D9                     	ds	2
  1459                           tblptru	equ	0xFF8
  1460                           tblptrh	equ	0xFF7
  1461                           tblptrl	equ	0xFF6
  1462                           tablat	equ	0xFF5
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           postdec1	equ	0xFE5
  1466                           fsr1h	equ	0xFE2
  1467                           fsr1l	equ	0xFE1
  1468                           
  1469                           	psect	cstackCOMRAM
  1470  000001                     __pcstackCOMRAM:
  1471                           	opt stack 0
  1472  000001                     ??_handler_interrupt_hight:
  1473  000001                     
  1474                           ; 2 bytes @ 0x0
  1475  000001                     	ds	14
  1476  00000F                     ??_handler_interrupt_low:
  1477                           
  1478                           ; 1 bytes @ 0xE
  1479  00000F                     	ds	17
  1480  000020                     iic_send_ack@ack:
  1481                           	opt stack 0
  1482  000020                     iic_waite_ack@timeout:
  1483                           	opt stack 0
  1484  000020                     iic_received_byte@ret:
  1485                           	opt stack 0
  1486  000020                     key_polling@ktemp:
  1487                           	opt stack 0
  1488  000020                     lcd_set_com_seg@seg:
  1489                           	opt stack 0
  1490  000020                     lcd_disp_get_code@chr:
  1491                           	opt stack 0
  1492  000020                     lcd_disp_all@x:
  1493                           	opt stack 0
  1494  000020                     rtc_get@t8:
  1495                           	opt stack 0
  1496  000020                     m_int8_2_hex@str:
  1497                           	opt stack 0
  1498  000020                     ads1115_init@pAds1115:
  1499                           	opt stack 0
  1500  000020                     delay_us@dly:
  1501                           	opt stack 0
  1502  000020                     rtc_set@rtc:
  1503                           	opt stack 0
  1504  000020                     ticker_dly@ms:
  1505                           	opt stack 0
  1506                           
  1507                           ; 2 bytes @ 0x1F
  1508  000020                     	ds	1
  1509  000021                     iic_send_byte@x:
  1510                           	opt stack 0
  1511  000021                     iic_received_byte@i:
  1512                           	opt stack 0
  1513  000021                     key_polling@t8:
  1514                           	opt stack 0
  1515  000021                     lcd_set_com_seg@show:
  1516                           	opt stack 0
  1517  000021                     lcd_disp_get_code@ret:
  1518                           	opt stack 0
  1519  000021                     lcd_disp_all@i:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x20
  1523  000021                     	ds	1
  1524  000022                     ??_in_adc_start_and_read:
  1525  000022                     m_int8_2_hex@b:
  1526                           	opt stack 0
  1527  000022                     ads1115_init@slvaddr:
  1528                           	opt stack 0
  1529  000022                     iic_send_byte@i:
  1530                           	opt stack 0
  1531  000022                     lcd_disp_level_bar@show:
  1532                           	opt stack 0
  1533  000022                     lcd_disp_chr_loc_0@code:
  1534                           	opt stack 0
  1535  000022                     lcd_disp_dp_loc_0@dp:
  1536                           	opt stack 0
  1537  000022                     lcd_disp_chr_loc_1@code:
  1538                           	opt stack 0
  1539  000022                     lcd_disp_dp_loc_1@dp:
  1540                           	opt stack 0
  1541  000022                     lcd_disp_chr_loc_2@code:
  1542                           	opt stack 0
  1543  000022                     lcd_disp_dp_loc_2@dp:
  1544                           	opt stack 0
  1545  000022                     lcd_disp_chr_loc_3@code:
  1546                           	opt stack 0
  1547  000022                     lcd_disp_chr_loc_4@code:
  1548                           	opt stack 0
  1549  000022                     lcd_disp_chr_loc_5@code:
  1550                           	opt stack 0
  1551  000022                     lcd_disp_chr_loc_6@code:
  1552                           	opt stack 0
  1553  000022                     lcd_disp_chr_loc_7@code:
  1554                           	opt stack 0
  1555  000022                     lcd_disp_logo@show:
  1556                           	opt stack 0
  1557  000022                     lcd_disp_get_code@i:
  1558                           	opt stack 0
  1559                           
  1560                           ; 1 bytes @ 0x21
  1561  000022                     	ds	1
  1562  000023                     tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           postinc0	equ	0xFEE
  1567                           wreg	equ	0xFE8
  1568                           postdec1	equ	0xFE5
  1569                           fsr1h	equ	0xFE2
  1570                           fsr1l	equ	0xFE1
  1571                           
  1572                           ; 1 bytes @ 0x22
  1573 ;;
  1574 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1575 ;;
  1576 ;; *************** function _main *****************
  1577 ;; Defined at:
  1578 ;;		line 5 in file "src/app/main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  t16             2   31[BANK0 ] unsigned int 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2  169[None  ] int 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;Total ram usage:        2 bytes
  1597 ;; Hardware stack levels required when called:   10
  1598 ;; This function calls:
  1599 ;;		_ads1115_init_all_chip
  1600 ;;		_ads1115_read_conversion
  1601 ;;		_ads1115_read_reg
  1602 ;;		_ads1115_start_conversion
  1603 ;;		_in_adc_init
  1604 ;;		_in_adc_start_and_read
  1605 ;;		_key_polling
  1606 ;;		_lcd_disp_level
  1607 ;;		_lcd_init
  1608 ;;		_rtc_set
  1609 ;;		_soc_init
  1610 ;;		_ticker_dly
  1611 ;;		_ui_disp_rtc_mm_ss
  1612 ;;		_ui_disp_start_cs600
  1613 ;; This function is called by:
  1614 ;;		Startup code after reset
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text0
  1619  000A54                     __ptext0:
  1620                           	opt stack 0
  1621  000A54                     _main:
  1622                           	opt stack 21
  1623                           
  1624                           ;main.c: 7: uint16_t t16;
  1625                           ;main.c: 8: __nop();
  1626                           
  1627                           ;incstack = 0
  1628  000A54  F000               	nop	
  1629                           
  1630                           ;main.c: 10: soc_init();
  1631  000A56  EC20  F00D         	call	_soc_init	;wreg free
  1632                           
  1633                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  1634  000A5A  0EE1               	movlw	low _defalutRtc
  1635  000A5C  6E20               	movwf	rtc_set@rtc,c
  1636  000A5E  0E00               	movlw	high _defalutRtc
  1637  000A60  6E21               	movwf	rtc_set@rtc+1,c
  1638  000A62  EC88  F005         	call	_rtc_set	;wreg free
  1639                           
  1640                           ;main.c: 12: lcd_init();
  1641  000A66  EC40  F00D         	call	_lcd_init	;wreg free
  1642                           
  1643                           ;main.c: 14: ads1115_init_all_chip();
  1644  000A6A  ECFF  F00C         	call	_ads1115_init_all_chip	;wreg free
  1645                           
  1646                           ;main.c: 16: ads1115_start_conversion(&ads1115Chip0);
  1647  000A6E  0E94               	movlw	low _ads1115Chip0
  1648  000A70  0100               	movlb	0	; () banked
  1649  000A72  6FBF               	movwf	ads1115_start_conversion@pAds1115& (0+255),b
  1650  000A74  0E00               	movlw	high _ads1115Chip0
  1651  000A76  0100               	movlb	0	; () banked
  1652  000A78  6FC0               	movwf	(ads1115_start_conversion@pAds1115+1)& (0+255),b
  1653  000A7A  EC75  F00C         	call	_ads1115_start_conversion	;wreg free
  1654                           
  1655                           ;main.c: 17: t16=ads1115_read_reg(&ads1115Chip1,(0x01));
  1656  000A7E  0E84               	movlw	low _ads1115Chip1
  1657  000A80  0100               	movlb	0	; () banked
  1658  000A82  6FBC               	movwf	ads1115_read_reg@pAds1115& (0+255),b
  1659  000A84  0E00               	movlw	high _ads1115Chip1
  1660  000A86  0100               	movlb	0	; () banked
  1661  000A88  6FBD               	movwf	(ads1115_read_reg@pAds1115+1)& (0+255),b
  1662  000A8A  0E01               	movlw	1
  1663  000A8C  0100               	movlb	0	; () banked
  1664  000A8E  6FBE               	movwf	ads1115_read_reg@addr& (0+255),b
  1665  000A90  ECA7  F002         	call	_ads1115_read_reg	;wreg free
  1666  000A94  C0BC  F0D9         	movff	?_ads1115_read_reg,main@t16
  1667  000A98  C0BD  F0DA         	movff	?_ads1115_read_reg+1,main@t16+1
  1668                           
  1669                           ;main.c: 18: ticker_dly(100);
  1670  000A9C  0E00               	movlw	0
  1671  000A9E  6E21               	movwf	ticker_dly@ms+1,c
  1672  000AA0  0E64               	movlw	100
  1673  000AA2  6E20               	movwf	ticker_dly@ms,c
  1674  000AA4  EC60  F00C         	call	_ticker_dly	;wreg free
  1675                           
  1676                           ;main.c: 19: t16=ads1115_read_conversion(&ads1115Chip0);
  1677  000AA8  0E94               	movlw	low _ads1115Chip0
  1678  000AAA  0100               	movlb	0	; () banked
  1679  000AAC  6FC2               	movwf	ads1115_read_conversion@pAds1115& (0+255),b
  1680  000AAE  0E00               	movlw	high _ads1115Chip0
  1681  000AB0  0100               	movlb	0	; () banked
  1682  000AB2  6FC3               	movwf	(ads1115_read_conversion@pAds1115+1)& (0+255),b
  1683  000AB4  EC32  F00B         	call	_ads1115_read_conversion	;wreg free
  1684  000AB8  C0C2  F0D9         	movff	?_ads1115_read_conversion,main@t16
  1685  000ABC  C0C3  F0DA         	movff	?_ads1115_read_conversion+1,main@t16+1
  1686                           
  1687                           ;main.c: 21: in_adc_init();
  1688  000AC0  ECED  F00C         	call	_in_adc_init	;wreg free
  1689                           
  1690                           ;main.c: 22: t16=in_adc_start_and_read(3);
  1691  000AC4  0E03               	movlw	3
  1692  000AC6  EC9A  F009         	call	_in_adc_start_and_read
  1693  000ACA  C0BC  F0D9         	movff	?_in_adc_start_and_read,main@t16
  1694  000ACE  C0BD  F0DA         	movff	?_in_adc_start_and_read+1,main@t16+1
  1695                           
  1696                           ;main.c: 23: ui_disp_start_cs600(10);
  1697  000AD2  0E0A               	movlw	10
  1698  000AD4  EC81  F006         	call	_ui_disp_start_cs600
  1699                           
  1700                           ;main.c: 25: lcd_disp_level(60);
  1701  000AD8  0E3C               	movlw	60
  1702  000ADA  ECBB  F00A         	call	_lcd_disp_level
  1703                           
  1704                           ;main.c: 27: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(0)
      +                          ;;
  1705  000ADE  9893               	bcf	3987,4,c	;volatile
  1706  000AE0  888A               	bsf	3978,4,c	;volatile
  1707                           
  1708                           ;main.c: 28: __nop();
  1709  000AE2  F000               	nop	
  1710                           
  1711                           ;main.c: 30: __nop();
  1712  000AE4  F000               	nop	
  1713                           
  1714                           ;main.c: 32: __nop();
  1715  000AE6  F000               	nop	
  1716                           
  1717                           ;main.c: 34: __nop();
  1718  000AE8  F000               	nop	
  1719                           
  1720                           ;main.c: 35: __nop();
  1721  000AEA  F000               	nop	
  1722  000AEC                     l6688:
  1723                           
  1724                           ;main.c: 37: if(glbEvent & (0x02)){
  1725  000AEC  0100               	movlb	0	; () banked
  1726  000AEE  A383               	btfss	_glbEvent& (0+255),1,b	;volatile
  1727  000AF0  D006               	goto	l6698
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;main.c: 38: glbEvent &= ~(0x02);
  1731  000AF2  0100               	movlb	0	; () banked
  1732  000AF4  9383               	bcf	_glbEvent& (0+255),1,b	;volatile
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;main.c: 39: __nop();
  1736  000AF6  F000               	nop	
  1737                           
  1738                           ;main.c: 40: ui_disp_rtc_mm_ss();
  1739  000AF8  ECE4  F005         	call	_ui_disp_rtc_mm_ss	;wreg free
  1740                           
  1741                           ;main.c: 41: __nop();
  1742  000AFC  F000               	nop	
  1743  000AFE                     l6698:
  1744                           
  1745                           ;main.c: 42: }
  1746                           ;main.c: 43: if(glbEvent & (0x01)){
  1747  000AFE  0100               	movlb	0	; () banked
  1748  000B00  A183               	btfss	_glbEvent& (0+255),0,b	;volatile
  1749  000B02  D003               	goto	l6704
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;main.c: 44: glbEvent &= ~(0x01);
  1753  000B04  0100               	movlb	0	; () banked
  1754  000B06  9183               	bcf	_glbEvent& (0+255),0,b	;volatile
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 45: __nop();
  1758  000B08  F000               	nop	
  1759  000B0A                     l6704:
  1760                           
  1761                           ;main.c: 46: }
  1762                           ;main.c: 47: key_polling();
  1763  000B0A  EC15  F00C         	call	_key_polling	;wreg free
  1764  000B0E  D7EE               	goto	l6688
  1765  000B10                     __end_of_main:
  1766                           	opt stack 0
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           postinc0	equ	0xFEE
  1772                           wreg	equ	0xFE8
  1773                           postdec1	equ	0xFE5
  1774                           fsr1h	equ	0xFE2
  1775                           fsr1l	equ	0xFE1
  1776                           
  1777 ;; *************** function _ui_disp_start_cs600 *****************
  1778 ;; Defined at:
  1779 ;;		line 113 in file "src/api/ui.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  dly             1    wreg     unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  dly             1   26[BANK0 ] unsigned char 
  1784 ;;  buf             6   20[BANK0 ] unsigned char [6]
  1785 ;;  t8              1   27[BANK0 ] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;Total ram usage:        8 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    9
  1802 ;; This function calls:
  1803 ;;		_lcd_disp_all
  1804 ;;		_lcd_disp_level
  1805 ;;		_lcd_disp_logo
  1806 ;;		_lcd_disp_refresh
  1807 ;;		_lcd_show_string_l0
  1808 ;;		_lcd_show_string_l1
  1809 ;;		_m_int8_2_hex
  1810 ;;		_ticker_dly
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text1
  1817  000D02                     __ptext1:
  1818                           	opt stack 0
  1819  000D02                     _ui_disp_start_cs600:
  1820                           	opt stack 21
  1821                           
  1822                           ;incstack = 0
  1823                           ;ui_disp_start_cs600@dly stored from wreg
  1824  000D02  0100               	movlb	0	; () banked
  1825  000D04  6FD4               	movwf	ui_disp_start_cs600@dly& (0+255),b
  1826                           
  1827                           ;ui.c: 115: uint8_t t8;
  1828                           ;ui.c: 116: uint8_t buf[6]="-00-";
  1829  000D06  EE20  F0DB         	lfsr	2,ui_disp_start_cs600@F7544
  1830  000D0A  EE10  F0CE         	lfsr	1,ui_disp_start_cs600@buf
  1831  000D0E  0E05               	movlw	5
  1832  000D10                     u4371:
  1833  000D10  CFDB FFE3          	movff	plusw2,plusw1
  1834  000D14  06E8               	decf	wreg,f,c
  1835  000D16  E2FC               	bc	u4371
  1836                           
  1837                           ;ui.c: 117: lcd_disp_all(0);;
  1838  000D18  0E00               	movlw	0
  1839  000D1A  ECDA  F00C         	call	_lcd_disp_all
  1840                           
  1841                           ;ui.c: 118: lcd_show_string_l0((uint8_t*)("cs66"));
  1842  000D1E  0EF1               	movlw	low STR_1
  1843  000D20  0100               	movlb	0	; () banked
  1844  000D22  6FCB               	movwf	lcd_show_string_l0@str& (0+255),b
  1845  000D24  0EFF               	movlw	high STR_1
  1846  000D26  0100               	movlb	0	; () banked
  1847  000D28  6FCC               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  1848  000D2A  EC55  F00B         	call	_lcd_show_string_l0	;wreg free
  1849                           
  1850                           ;ui.c: 119: lcd_disp_logo(1);
  1851  000D2E  0E01               	movlw	1
  1852  000D30  EC8A  F00C         	call	_lcd_disp_logo
  1853                           
  1854                           ;ui.c: 120: t8=dly;
  1855  000D34  C0D4  F0D5         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  1856                           
  1857                           ;ui.c: 121: if(t8<1)t8=1;
  1858  000D38  0100               	movlb	0	; () banked
  1859  000D3A  51D5               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  1860  000D3C  0100               	movlb	0	; () banked
  1861  000D3E  A4D8               	btfss	status,2,c
  1862  000D40  D025               	goto	l6380
  1863                           
  1864                           ; BSR set to: 0
  1865  000D42  0E01               	movlw	1
  1866  000D44  0100               	movlb	0	; () banked
  1867  000D46  6FD5               	movwf	ui_disp_start_cs600@t8& (0+255),b
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;ui.c: 122: while(t8){
  1871  000D48  D021               	goto	l6380
  1872  000D4A                     l6366:
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;ui.c: 123: m_int8_2_hex(buf+1,t8-1);
  1876  000D4A  0ECF               	movlw	low (ui_disp_start_cs600@buf+1)
  1877  000D4C  6E20               	movwf	m_int8_2_hex@str,c
  1878  000D4E  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  1879  000D50  6E21               	movwf	m_int8_2_hex@str+1,c
  1880  000D52  0100               	movlb	0	; () banked
  1881  000D54  05D5               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  1882  000D56  6E22               	movwf	m_int8_2_hex@b,c
  1883  000D58  ECCD  F009         	call	_m_int8_2_hex	;wreg free
  1884                           
  1885                           ;ui.c: 124: buf[4]='\0';
  1886  000D5C  0E00               	movlw	0
  1887  000D5E  0100               	movlb	0	; () banked
  1888  000D60  6FD2               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;ui.c: 125: lcd_show_string_l1(buf);
  1892  000D62  0ECE               	movlw	low ui_disp_start_cs600@buf
  1893  000D64  0100               	movlb	0	; () banked
  1894  000D66  6FCB               	movwf	lcd_show_string_l1@str& (0+255),b
  1895  000D68  0E00               	movlw	high ui_disp_start_cs600@buf
  1896  000D6A  0100               	movlb	0	; () banked
  1897  000D6C  6FCC               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  1898  000D6E  EC77  F00B         	call	_lcd_show_string_l1	;wreg free
  1899                           
  1900                           ;ui.c: 126: lcd_disp_level(60);
  1901  000D72  0E3C               	movlw	60
  1902  000D74  ECBB  F00A         	call	_lcd_disp_level
  1903                           
  1904                           ;ui.c: 127: lcd_disp_refresh();
  1905  000D78  ECFE  F009         	call	_lcd_disp_refresh	;wreg free
  1906                           
  1907                           ;ui.c: 128: ticker_dly(1000);
  1908  000D7C  0E03               	movlw	3
  1909  000D7E  6E21               	movwf	ticker_dly@ms+1,c
  1910  000D80  0EE8               	movlw	232
  1911  000D82  6E20               	movwf	ticker_dly@ms,c
  1912  000D84  EC60  F00C         	call	_ticker_dly	;wreg free
  1913                           
  1914                           ;ui.c: 129: t8--;
  1915  000D88  0100               	movlb	0	; () banked
  1916  000D8A  07D5               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  1917  000D8C                     l6380:
  1918                           
  1919                           ; BSR set to: 0
  1920  000D8C  0100               	movlb	0	; () banked
  1921  000D8E  51D5               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  1922  000D90  0100               	movlb	0	; () banked
  1923  000D92  B4D8               	btfsc	status,2,c
  1924  000D94  0012               	return	
  1925  000D96  D7D9               	goto	l6366
  1926  000D98                     __end_of_ui_disp_start_cs600:
  1927                           	opt stack 0
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           postdec1	equ	0xFE5
  1935                           plusw1	equ	0xFE3
  1936                           fsr1h	equ	0xFE2
  1937                           fsr1l	equ	0xFE1
  1938                           plusw2	equ	0xFDB
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _ticker_dly *****************
  1942 ;; Defined at:
  1943 ;;		line 42 in file "src/soc/ticker.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  ms              2   31[COMRAM] unsigned int 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    4
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_ui_disp_start_cs600
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text2
  1973  0018C0                     __ptext2:
  1974                           	opt stack 0
  1975  0018C0                     _ticker_dly:
  1976                           	opt stack 25
  1977                           
  1978                           ;ticker.c: 44: dlyTicker=0;
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;incstack = 0
  1982  0018C0  0E00               	movlw	0
  1983  0018C2  6E37               	movwf	_dlyTicker+1,c
  1984  0018C4  0E00               	movlw	0
  1985  0018C6  6E36               	movwf	_dlyTicker,c
  1986                           
  1987                           ;ticker.c: 45: dlyTickerEn=1;
  1988  0018C8  0E01               	movlw	1
  1989  0018CA  6E38               	movwf	_dlyTickerEn,c
  1990                           
  1991                           ;ticker.c: 46: while(dlyTicker<ms){
  1992  0018CC  D001               	goto	l6236
  1993  0018CE                     l1248:
  1994                           
  1995                           ;ticker.c: 47: __nop();
  1996  0018CE  F000               	nop	
  1997  0018D0                     l6236:
  1998  0018D0  5020               	movf	ticker_dly@ms,w,c
  1999  0018D2  5C36               	subwf	_dlyTicker,w,c
  2000  0018D4  5021               	movf	ticker_dly@ms+1,w,c
  2001  0018D6  5837               	subwfb	_dlyTicker+1,w,c
  2002  0018D8  A0D8               	btfss	status,0,c
  2003  0018DA  D7F9               	goto	l1248
  2004                           
  2005                           ;ticker.c: 48: }
  2006                           ;ticker.c: 49: dlyTickerEn=0;
  2007  0018DC  0E00               	movlw	0
  2008  0018DE  6E38               	movwf	_dlyTickerEn,c
  2009                           
  2010                           ;ticker.c: 50: dlyTicker=0;
  2011  0018E0  0E00               	movlw	0
  2012  0018E2  6E37               	movwf	_dlyTicker+1,c
  2013  0018E4  0E00               	movlw	0
  2014  0018E6  6E36               	movwf	_dlyTicker,c
  2015  0018E8  0012               	return		;funcret
  2016  0018EA                     __end_of_ticker_dly:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           plusw1	equ	0xFE3
  2026                           fsr1h	equ	0xFE2
  2027                           fsr1l	equ	0xFE1
  2028                           plusw2	equ	0xFDB
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function _lcd_show_string_l1 *****************
  2032 ;; Defined at:
  2033 ;;		line 524 in file "src/driver/lcd.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  str             2   17[BANK0 ] PTR unsigned char 
  2036 ;;		 -> ui_disp_start_cs600@buf(6), 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  t8              1   19[BANK0 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2048 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;Total ram usage:        3 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    8
  2055 ;; This function calls:
  2056 ;;		_lcd_show_chr
  2057 ;; This function is called by:
  2058 ;;		_ui_disp_start_cs600
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text3
  2063  0016EE                     __ptext3:
  2064                           	opt stack 0
  2065  0016EE                     _lcd_show_string_l1:
  2066                           	opt stack 21
  2067                           
  2068                           ;lcd.c: 526: uint8_t t8=0;
  2069                           
  2070                           ;incstack = 0
  2071  0016EE  0E00               	movlw	0
  2072  0016F0  0100               	movlb	0	; () banked
  2073  0016F2  6FCD               	movwf	lcd_show_string_l1@t8& (0+255),b
  2074                           
  2075                           ;lcd.c: 527: while(*str!='\0' && t8<4){
  2076  0016F4  D011               	goto	l6206
  2077  0016F6                     l6200:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;lcd.c: 528: lcd_show_chr(t8+4,*str);
  2081  0016F6  C0CB  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2082  0016FA  C0CC  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2083  0016FE  50DF               	movf	indf2,w,c
  2084  001700  0100               	movlb	0	; () banked
  2085  001702  6FC8               	movwf	lcd_show_chr@chr& (0+255),b
  2086  001704  0100               	movlb	0	; () banked
  2087  001706  51CD               	movf	lcd_show_string_l1@t8& (0+255),w,b
  2088  001708  0F04               	addlw	4
  2089  00170A  EC35  F006         	call	_lcd_show_chr
  2090                           
  2091                           ;lcd.c: 529: str++;
  2092  00170E  0100               	movlb	0	; () banked
  2093  001710  4BCB               	infsnz	lcd_show_string_l1@str& (0+255),f,b
  2094  001712  2BCC               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;lcd.c: 530: t8++;
  2098  001714  0100               	movlb	0	; () banked
  2099  001716  2BCD               	incf	lcd_show_string_l1@t8& (0+255),f,b
  2100  001718                     l6206:
  2101                           
  2102                           ; BSR set to: 0
  2103  001718  C0CB  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  2104  00171C  C0CC  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  2105  001720  50DF               	movf	indf2,w,c
  2106  001722  B4D8               	btfsc	status,2,c
  2107  001724  0012               	return	
  2108                           
  2109                           ; BSR set to: 0
  2110  001726  0E03               	movlw	3
  2111  001728  0100               	movlb	0	; () banked
  2112  00172A  65CD               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
  2113  00172C  D7E4               	goto	l6200
  2114  00172E  0012               	return	
  2115  001730                     __end_of_lcd_show_string_l1:
  2116                           	opt stack 0
  2117                           tblptru	equ	0xFF8
  2118                           tblptrh	equ	0xFF7
  2119                           tblptrl	equ	0xFF6
  2120                           tablat	equ	0xFF5
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           postdec1	equ	0xFE5
  2124                           plusw1	equ	0xFE3
  2125                           fsr1h	equ	0xFE2
  2126                           fsr1l	equ	0xFE1
  2127                           indf2	equ	0xFDF
  2128                           plusw2	equ	0xFDB
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _lcd_show_string_l0 *****************
  2134 ;; Defined at:
  2135 ;;		line 514 in file "src/driver/lcd.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  str             2   17[BANK0 ] PTR unsigned char 
  2138 ;;		 -> STR_1(5), 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  t8              1   19[BANK0 ] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:        3 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    8
  2157 ;; This function calls:
  2158 ;;		_lcd_show_chr
  2159 ;; This function is called by:
  2160 ;;		_ui_disp_start_cs600
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text4
  2165  0016AA                     __ptext4:
  2166                           	opt stack 0
  2167  0016AA                     _lcd_show_string_l0:
  2168                           	opt stack 21
  2169                           
  2170                           ;lcd.c: 516: uint8_t t8=0;
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;incstack = 0
  2174  0016AA  0E00               	movlw	0
  2175  0016AC  0100               	movlb	0	; () banked
  2176  0016AE  6FCD               	movwf	lcd_show_string_l0@t8& (0+255),b
  2177                           
  2178                           ;lcd.c: 517: while(*str!='\0' && t8<4){
  2179  0016B0  D010               	goto	l6178
  2180  0016B2                     l6172:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;lcd.c: 518: lcd_show_chr(t8,*str);
  2184  0016B2  C0CB  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2185  0016B6  C0CC  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2186  0016BA                     	if	0	;tblptru may be non-zero
  2187  0016BA                     	endif
  2188  0016BA                     	if	0	;tblptru may be non-zero
  2189  0016BA                     	endif
  2190  0016BA  0008               	tblrd		*
  2191  0016BC  CFF5 F0C8          	movff	tablat,lcd_show_chr@chr
  2192  0016C0  0100               	movlb	0	; () banked
  2193  0016C2  51CD               	movf	lcd_show_string_l0@t8& (0+255),w,b
  2194  0016C4  EC35  F006         	call	_lcd_show_chr
  2195                           
  2196                           ;lcd.c: 519: str++;
  2197  0016C8  0100               	movlb	0	; () banked
  2198  0016CA  4BCB               	infsnz	lcd_show_string_l0@str& (0+255),f,b
  2199  0016CC  2BCC               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;lcd.c: 520: t8++;
  2203  0016CE  0100               	movlb	0	; () banked
  2204  0016D0  2BCD               	incf	lcd_show_string_l0@t8& (0+255),f,b
  2205  0016D2                     l6178:
  2206                           
  2207                           ; BSR set to: 0
  2208  0016D2  C0CB  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  2209  0016D6  C0CC  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  2210  0016DA                     	if	0	;tblptru may be non-zero
  2211  0016DA                     	endif
  2212  0016DA                     	if	0	;tblptru may be non-zero
  2213  0016DA                     	endif
  2214  0016DA  0008               	tblrd		*
  2215  0016DC  50F5               	movf	tablat,w,c
  2216  0016DE  0900               	iorlw	0
  2217  0016E0  B4D8               	btfsc	status,2,c
  2218  0016E2  0012               	return	
  2219                           
  2220                           ; BSR set to: 0
  2221  0016E4  0E03               	movlw	3
  2222  0016E6  0100               	movlb	0	; () banked
  2223  0016E8  65CD               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
  2224  0016EA  D7E3               	goto	l6172
  2225  0016EC  0012               	return	
  2226  0016EE                     __end_of_lcd_show_string_l0:
  2227                           	opt stack 0
  2228                           tblptru	equ	0xFF8
  2229                           tblptrh	equ	0xFF7
  2230                           tblptrl	equ	0xFF6
  2231                           tablat	equ	0xFF5
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postdec1	equ	0xFE5
  2235                           plusw1	equ	0xFE3
  2236                           fsr1h	equ	0xFE2
  2237                           fsr1l	equ	0xFE1
  2238                           indf2	equ	0xFDF
  2239                           plusw2	equ	0xFDB
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _lcd_disp_logo *****************
  2245 ;; Defined at:
  2246 ;;		line 378 in file "src/driver/lcd.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  show            1    wreg     unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  show            1   33[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;Total ram usage:        1 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    6
  2267 ;; This function calls:
  2268 ;;		_lcd_set_com_seg
  2269 ;; This function is called by:
  2270 ;;		_ui_disp_start_cs600
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text5
  2275  001914                     __ptext5:
  2276                           	opt stack 0
  2277  001914                     _lcd_disp_logo:
  2278                           	opt stack 23
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;incstack = 0
  2282                           ;lcd_disp_logo@show stored from wreg
  2283  001914  6E22               	movwf	lcd_disp_logo@show,c
  2284                           
  2285                           ;lcd.c: 380: if(show)
  2286  001916  5022               	movf	lcd_disp_logo@show,w,c
  2287  001918  B4D8               	btfsc	status,2,c
  2288  00191A  D008               	goto	l6186
  2289                           
  2290                           ;lcd.c: 381: lcd_set_com_seg(2,13,1);
  2291  00191C  0E0D               	movlw	13
  2292  00191E  6E20               	movwf	lcd_set_com_seg@seg,c
  2293  001920  0E01               	movlw	1
  2294  001922  6E21               	movwf	lcd_set_com_seg@show,c
  2295  001924  0E02               	movlw	2
  2296  001926  EC6B  F004         	call	_lcd_set_com_seg
  2297  00192A  0012               	return	
  2298  00192C                     l6186:
  2299                           
  2300                           ;lcd.c: 382: else
  2301                           ;lcd.c: 383: lcd_set_com_seg(2,13,0);
  2302  00192C  0E0D               	movlw	13
  2303  00192E  6E20               	movwf	lcd_set_com_seg@seg,c
  2304  001930  0E00               	movlw	0
  2305  001932  6E21               	movwf	lcd_set_com_seg@show,c
  2306  001934  0E02               	movlw	2
  2307  001936  EC6B  F004         	call	_lcd_set_com_seg
  2308  00193A  0012               	return	
  2309  00193C                     __end_of_lcd_disp_logo:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           postdec1	equ	0xFE5
  2318                           plusw1	equ	0xFE3
  2319                           fsr1h	equ	0xFE2
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           plusw2	equ	0xFDB
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _ui_disp_rtc_mm_ss *****************
  2328 ;; Defined at:
  2329 ;;		line 133 in file "src/api/ui.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  buf            10   20[BANK0 ] unsigned char [10]
  2334 ;;  t8              1   30[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:       11 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    9
  2351 ;; This function calls:
  2352 ;;		_lcd_disp_level
  2353 ;;		_lcd_disp_refresh
  2354 ;;		_lcd_show_dp
  2355 ;;		_lcd_show_string
  2356 ;;		_m_int8_2_hex
  2357 ;;		_rtc_get
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           	psect	text6
  2364  000BC8                     __ptext6:
  2365                           	opt stack 0
  2366  000BC8                     _ui_disp_rtc_mm_ss:
  2367                           	opt stack 21
  2368                           
  2369                           ;ui.c: 135: uint8_t buf[10];
  2370                           ;ui.c: 136: uint8_t t8;
  2371                           ;ui.c: 137: if(RTCCFGbits.HALFSEC){
  2372                           
  2373                           ;incstack = 0
  2374  000BC8  010F               	movlb	15	; () banked
  2375  000BCA  A75F               	btfss	95,3,b	;volatile
  2376  000BCC  D007               	goto	l6386
  2377                           
  2378                           ; BSR set to: 15
  2379                           ;ui.c: 138: lcd_show_dp(1,0);
  2380  000BCE  0E00               	movlw	0
  2381  000BD0  0100               	movlb	0	; () banked
  2382  000BD2  6FC8               	movwf	lcd_show_dp@show& (0+255),b
  2383  000BD4  0E01               	movlw	1
  2384  000BD6  EC64  F009         	call	_lcd_show_dp
  2385                           
  2386                           ;ui.c: 139: }else{
  2387  000BDA  D041               	goto	l6412
  2388  000BDC                     l6386:
  2389                           
  2390                           ;ui.c: 140: rtc_get();
  2391  000BDC  EC98  F00B         	call	_rtc_get	;wreg free
  2392                           
  2393                           ;ui.c: 141: t8=glRtc.hour;
  2394  000BE0  C07B  F0D8         	movff	_glRtc+3,ui_disp_rtc_mm_ss@t8
  2395                           
  2396                           ;ui.c: 142: m_int8_2_hex(buf,t8);
  2397  000BE4  0ECE               	movlw	low ui_disp_rtc_mm_ss@buf
  2398  000BE6  6E20               	movwf	m_int8_2_hex@str,c
  2399  000BE8  0E00               	movlw	high ui_disp_rtc_mm_ss@buf
  2400  000BEA  6E21               	movwf	m_int8_2_hex@str+1,c
  2401  000BEC  C0D8  F022         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2402  000BF0  ECCD  F009         	call	_m_int8_2_hex	;wreg free
  2403                           
  2404                           ;ui.c: 143: t8=glRtc.minute;
  2405  000BF4  C07C  F0D8         	movff	_glRtc+4,ui_disp_rtc_mm_ss@t8
  2406                           
  2407                           ;ui.c: 144: m_int8_2_hex(buf+2,t8);
  2408  000BF8  0ED0               	movlw	low (ui_disp_rtc_mm_ss@buf+2)
  2409  000BFA  6E20               	movwf	m_int8_2_hex@str,c
  2410  000BFC  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+2)
  2411  000BFE  6E21               	movwf	m_int8_2_hex@str+1,c
  2412  000C00  C0D8  F022         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2413  000C04  ECCD  F009         	call	_m_int8_2_hex	;wreg free
  2414                           
  2415                           ;ui.c: 146: t8=glRtc.month;
  2416  000C08  C079  F0D8         	movff	_glRtc+1,ui_disp_rtc_mm_ss@t8
  2417                           
  2418                           ;ui.c: 147: m_int8_2_hex(buf+4,t8);
  2419  000C0C  0ED2               	movlw	low (ui_disp_rtc_mm_ss@buf+4)
  2420  000C0E  6E20               	movwf	m_int8_2_hex@str,c
  2421  000C10  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+4)
  2422  000C12  6E21               	movwf	m_int8_2_hex@str+1,c
  2423  000C14  C0D8  F022         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2424  000C18  ECCD  F009         	call	_m_int8_2_hex	;wreg free
  2425                           
  2426                           ;ui.c: 148: t8=glRtc.date;
  2427  000C1C  C07A  F0D8         	movff	_glRtc+2,ui_disp_rtc_mm_ss@t8
  2428                           
  2429                           ;ui.c: 149: m_int8_2_hex(buf+6,t8);
  2430  000C20  0ED4               	movlw	low (ui_disp_rtc_mm_ss@buf+6)
  2431  000C22  6E20               	movwf	m_int8_2_hex@str,c
  2432  000C24  0E00               	movlw	high (ui_disp_rtc_mm_ss@buf+6)
  2433  000C26  6E21               	movwf	m_int8_2_hex@str+1,c
  2434  000C28  C0D8  F022         	movff	ui_disp_rtc_mm_ss@t8,m_int8_2_hex@b
  2435  000C2C  ECCD  F009         	call	_m_int8_2_hex	;wreg free
  2436                           
  2437                           ;ui.c: 150: buf[8]='\0';
  2438  000C30  0E00               	movlw	0
  2439  000C32  0100               	movlb	0	; () banked
  2440  000C34  6FD6               	movwf	(ui_disp_rtc_mm_ss@buf+8)& (0+255),b
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;ui.c: 152: lcd_show_string(buf);
  2444  000C36  0ECE               	movlw	low ui_disp_rtc_mm_ss@buf
  2445  000C38  0100               	movlb	0	; () banked
  2446  000C3A  6FCB               	movwf	lcd_show_string@str& (0+255),b
  2447  000C3C  0E00               	movlw	high ui_disp_rtc_mm_ss@buf
  2448  000C3E  0100               	movlb	0	; () banked
  2449  000C40  6FCC               	movwf	(lcd_show_string@str+1)& (0+255),b
  2450  000C42  EC2D  F009         	call	_lcd_show_string	;wreg free
  2451                           
  2452                           ;ui.c: 153: lcd_show_dp(1,1);
  2453  000C46  0E01               	movlw	1
  2454  000C48  0100               	movlb	0	; () banked
  2455  000C4A  6FC8               	movwf	lcd_show_dp@show& (0+255),b
  2456  000C4C  0E01               	movlw	1
  2457  000C4E  EC64  F009         	call	_lcd_show_dp
  2458                           
  2459                           ;ui.c: 154: lcd_show_dp(5,1);
  2460  000C52  0E01               	movlw	1
  2461  000C54  0100               	movlb	0	; () banked
  2462  000C56  6FC8               	movwf	lcd_show_dp@show& (0+255),b
  2463  000C58  0E05               	movlw	5
  2464  000C5A  EC64  F009         	call	_lcd_show_dp
  2465  000C5E                     l6412:
  2466                           
  2467                           ;ui.c: 155: }
  2468                           ;ui.c: 156: lcd_disp_level(60);
  2469  000C5E  0E3C               	movlw	60
  2470  000C60  ECBB  F00A         	call	_lcd_disp_level
  2471                           
  2472                           ;ui.c: 157: lcd_disp_refresh();
  2473  000C64  ECFE  F009         	call	_lcd_disp_refresh	;wreg free
  2474  000C68  0012               	return		;funcret
  2475  000C6A                     __end_of_ui_disp_rtc_mm_ss:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           postinc0	equ	0xFEE
  2482                           wreg	equ	0xFE8
  2483                           postdec1	equ	0xFE5
  2484                           plusw1	equ	0xFE3
  2485                           fsr1h	equ	0xFE2
  2486                           fsr1l	equ	0xFE1
  2487                           indf2	equ	0xFDF
  2488                           plusw2	equ	0xFDB
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _rtc_get *****************
  2494 ;; Defined at:
  2495 ;;		line 74 in file "src/soc/rtc.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  t8              1   31[COMRAM] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        1 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    4
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_ui_disp_rtc_mm_ss
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text7
  2524  001730                     __ptext7:
  2525                           	opt stack 0
  2526  001730                     _rtc_get:
  2527                           	opt stack 25
  2528                           
  2529                           ;rtc.c: 76: uint8_t t8;
  2530                           ;rtc.c: 77: stRTCCFGbits.RTCPTR=3;
  2531                           
  2532                           ;incstack = 0
  2533  001730  0E03               	movlw	3
  2534  001732  010F               	movlb	15	; () banked
  2535  001734  135F               	iorwf	95,f,b	;volatile
  2536                           
  2537                           ; BSR set to: 15
  2538                           ;rtc.c: 78: glRtc.year=RTCVALL;
  2539  001736  CF5C F078          	movff	3932,_glRtc	;volatile
  2540                           
  2541                           ; BSR set to: 15
  2542                           ;rtc.c: 80: t8=RTCVALH;
  2543  00173A  CF5D F020          	movff	3933,rtc_get@t8	;volatile
  2544                           
  2545                           ;rtc.c: 81: stRTCCFGbits.RTCPTR=2;
  2546  00173E  010F               	movlb	15	; () banked
  2547  001740  515F               	movf	95,w,b	;volatile
  2548  001742  0BFC               	andlw	-4
  2549  001744  0902               	iorlw	2
  2550  001746  6F5F               	movwf	95,b	;volatile
  2551                           
  2552                           ; BSR set to: 15
  2553                           ;rtc.c: 82: glRtc.date=RTCVALL;
  2554  001748  CF5C F07A          	movff	3932,_glRtc+2	;volatile
  2555                           
  2556                           ; BSR set to: 15
  2557                           ;rtc.c: 83: glRtc.month=RTCVALH;
  2558  00174C  CF5D F079          	movff	3933,_glRtc+1	;volatile
  2559                           
  2560                           ;rtc.c: 84: stRTCCFGbits.RTCPTR=1;
  2561  001750  010F               	movlb	15	; () banked
  2562  001752  515F               	movf	95,w,b	;volatile
  2563  001754  0BFC               	andlw	-4
  2564  001756  0901               	iorlw	1
  2565  001758  6F5F               	movwf	95,b	;volatile
  2566                           
  2567                           ; BSR set to: 15
  2568                           ;rtc.c: 85: glRtc.hour=RTCVALL;
  2569  00175A  CF5C F07B          	movff	3932,_glRtc+3	;volatile
  2570                           
  2571                           ; BSR set to: 15
  2572                           ;rtc.c: 86: glRtc.day=RTCVALH;
  2573  00175E  CF5D F07E          	movff	3933,_glRtc+6	;volatile
  2574                           
  2575                           ;rtc.c: 87: stRTCCFGbits.RTCPTR=0;
  2576  001762  0EFC               	movlw	-4
  2577  001764  010F               	movlb	15	; () banked
  2578  001766  175F               	andwf	95,f,b	;volatile
  2579                           
  2580                           ; BSR set to: 15
  2581                           ;rtc.c: 88: glRtc.second=RTCVALL;
  2582  001768  CF5C F07D          	movff	3932,_glRtc+5	;volatile
  2583                           
  2584                           ; BSR set to: 15
  2585                           ;rtc.c: 89: glRtc.minute=RTCVALH;
  2586  00176C  CF5D F07C          	movff	3933,_glRtc+4	;volatile
  2587                           
  2588                           ; BSR set to: 15
  2589  001770  0012               	return		;funcret
  2590  001772                     __end_of_rtc_get:
  2591                           	opt stack 0
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           plusw1	equ	0xFE3
  2600                           fsr1h	equ	0xFE2
  2601                           fsr1l	equ	0xFE1
  2602                           indf2	equ	0xFDF
  2603                           plusw2	equ	0xFDB
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _m_int8_2_hex *****************
  2609 ;; Defined at:
  2610 ;;		line 242 in file "src/depend/m_string.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  str             2   31[COMRAM] PTR unsigned char 
  2613 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  2614 ;;  b               1   33[COMRAM] unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  t8              1    0[BANK0 ] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2626 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;Total ram usage:        4 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    4
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_ui_disp_start_cs600
  2637 ;;		_ui_disp_rtc_mm_ss
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text8
  2642  00139A                     __ptext8:
  2643                           	opt stack 0
  2644  00139A                     _m_int8_2_hex:
  2645                           	opt stack 25
  2646                           
  2647                           ;m_string.c: 244: uint8_t t8;
  2648                           ;m_string.c: 245: t8=b;
  2649                           
  2650                           ; BSR set to: 15
  2651                           ;incstack = 0
  2652  00139A  C022  F0BA         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2653                           
  2654                           ;m_string.c: 246: t8>>=4;
  2655  00139E  0100               	movlb	0	; () banked
  2656  0013A0  3BBA               	swapf	m_int8_2_hex@t8& (0+255),f,b
  2657  0013A2  0E0F               	movlw	15
  2658  0013A4  17BA               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2659                           
  2660                           ;m_string.c: 247: t8 &= 0x0f;
  2661  0013A6  0E0F               	movlw	15
  2662  0013A8  0100               	movlb	0	; () banked
  2663  0013AA  17BA               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;m_string.c: 248: str[0]=HexTable[t8];
  2667  0013AC  0100               	movlb	0	; () banked
  2668  0013AE  51BA               	movf	m_int8_2_hex@t8& (0+255),w,b
  2669  0013B0  0D01               	mullw	1
  2670  0013B2  0E10               	movlw	low _HexTable
  2671  0013B4  24F3               	addwf	prodl,w,c
  2672  0013B6  6EF6               	movwf	tblptrl,c
  2673  0013B8  0EFF               	movlw	high _HexTable
  2674  0013BA  20F4               	addwfc	prodh,w,c
  2675  0013BC  6EF7               	movwf	tblptrh,c
  2676  0013BE                     	if	0	;There are less than 3 active tblptr bytes
  2677  0013BE                     	endif
  2678  0013BE  C020  FFD9         	movff	m_int8_2_hex@str,fsr2l
  2679  0013C2  C021  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  2680  0013C6  0008               	tblrd		*
  2681  0013C8  CFF5 FFDF          	movff	tablat,indf2
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;m_string.c: 250: t8=b;
  2685  0013CC  C022  F0BA         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;m_string.c: 252: t8 &= 0x0f;
  2689  0013D0  0E0F               	movlw	15
  2690  0013D2  0100               	movlb	0	; () banked
  2691  0013D4  17BA               	andwf	m_int8_2_hex@t8& (0+255),f,b
  2692                           
  2693                           ;m_string.c: 253: str[1]=HexTable[t8];
  2694  0013D6  0100               	movlb	0	; () banked
  2695  0013D8  51BA               	movf	m_int8_2_hex@t8& (0+255),w,b
  2696  0013DA  0D01               	mullw	1
  2697  0013DC  0E10               	movlw	low _HexTable
  2698  0013DE  24F3               	addwf	prodl,w,c
  2699  0013E0  6EF6               	movwf	tblptrl,c
  2700  0013E2  0EFF               	movlw	high _HexTable
  2701  0013E4  20F4               	addwfc	prodh,w,c
  2702  0013E6  6EF7               	movwf	tblptrh,c
  2703  0013E8                     	if	0	;There are less than 3 active tblptr bytes
  2704  0013E8                     	endif
  2705  0013E8  EE20 F001          	lfsr	2,1
  2706  0013EC  5020               	movf	m_int8_2_hex@str,w,c
  2707  0013EE  26D9               	addwf	fsr2l,f,c
  2708  0013F0  5021               	movf	m_int8_2_hex@str+1,w,c
  2709  0013F2  22DA               	addwfc	fsr2h,f,c
  2710  0013F4  0008               	tblrd		*
  2711  0013F6  CFF5 FFDF          	movff	tablat,indf2
  2712                           
  2713                           ; BSR set to: 0
  2714  0013FA  0012               	return		;funcret
  2715  0013FC                     __end_of_m_int8_2_hex:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           postinc0	equ	0xFEE
  2724                           wreg	equ	0xFE8
  2725                           postdec1	equ	0xFE5
  2726                           plusw1	equ	0xFE3
  2727                           fsr1h	equ	0xFE2
  2728                           fsr1l	equ	0xFE1
  2729                           indf2	equ	0xFDF
  2730                           plusw2	equ	0xFDB
  2731                           fsr2h	equ	0xFDA
  2732                           fsr2l	equ	0xFD9
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function _lcd_show_string *****************
  2736 ;; Defined at:
  2737 ;;		line 534 in file "src/driver/lcd.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  str             2   17[BANK0 ] PTR unsigned char 
  2740 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  t8              1   19[BANK0 ] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        3 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    8
  2759 ;; This function calls:
  2760 ;;		_lcd_show_chr
  2761 ;; This function is called by:
  2762 ;;		_ui_disp_rtc_mm_ss
  2763 ;;		_ui_disp_clear_num_dp
  2764 ;;		_ui_disp_adj_xfloat_pt
  2765 ;;		_ui_disp_adj_xfixed_pt
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text9
  2770  00125A                     __ptext9:
  2771                           	opt stack 0
  2772  00125A                     _lcd_show_string:
  2773                           	opt stack 21
  2774                           
  2775                           ;lcd.c: 536: uint8_t t8=0;
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;incstack = 0
  2779  00125A  0E00               	movlw	0
  2780  00125C  0100               	movlb	0	; () banked
  2781  00125E  6FCD               	movwf	lcd_show_string@t8& (0+255),b
  2782                           
  2783                           ;lcd.c: 537: while(*str!='\0' && t8<8){
  2784  001260  D01B               	goto	l6266
  2785  001262                     l6260:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;lcd.c: 538: lcd_show_chr(t8,*str);
  2789  001262  C0CB  FFF6         	movff	lcd_show_string@str,tblptrl
  2790  001266  C0CC  FFF7         	movff	lcd_show_string@str+1,tblptrh
  2791  00126A  6AF8               	clrf	tblptru,c
  2792  00126C  0E0F               	movlw	(high __ramtop+-1)
  2793  00126E  64F7               	cpfsgt	tblptrh,c
  2794  001270  D003               	bra	u4177
  2795  001272  0008               	tblrd		*
  2796  001274  50F5               	movf	tablat,w,c
  2797  001276  D005               	bra	u4170
  2798  001278                     u4177:
  2799  001278  CFF6 FFE9          	movff	tblptrl,fsr0l
  2800  00127C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2801  001280  50EF               	movf	indf0,w,c
  2802  001282                     u4170:
  2803  001282  0100               	movlb	0	; () banked
  2804  001284  6FC8               	movwf	lcd_show_chr@chr& (0+255),b
  2805  001286  0100               	movlb	0	; () banked
  2806  001288  51CD               	movf	lcd_show_string@t8& (0+255),w,b
  2807  00128A  EC35  F006         	call	_lcd_show_chr
  2808                           
  2809                           ;lcd.c: 539: str++;
  2810  00128E  0100               	movlb	0	; () banked
  2811  001290  4BCB               	infsnz	lcd_show_string@str& (0+255),f,b
  2812  001292  2BCC               	incf	(lcd_show_string@str+1)& (0+255),f,b
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;lcd.c: 540: t8++;
  2816  001294  0100               	movlb	0	; () banked
  2817  001296  2BCD               	incf	lcd_show_string@t8& (0+255),f,b
  2818  001298                     l6266:
  2819                           
  2820                           ; BSR set to: 0
  2821  001298  C0CB  FFF6         	movff	lcd_show_string@str,tblptrl
  2822  00129C  C0CC  FFF7         	movff	lcd_show_string@str+1,tblptrh
  2823  0012A0  6AF8               	clrf	tblptru,c
  2824  0012A2  0E0F               	movlw	(high __ramtop+-1)
  2825  0012A4  64F7               	cpfsgt	tblptrh,c
  2826  0012A6  D003               	bra	u4187
  2827  0012A8  0008               	tblrd		*
  2828  0012AA  50F5               	movf	tablat,w,c
  2829  0012AC  D005               	bra	u4180
  2830  0012AE                     u4187:
  2831  0012AE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2832  0012B2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2833  0012B6  50EF               	movf	indf0,w,c
  2834  0012B8                     u4180:
  2835  0012B8  0900               	iorlw	0
  2836  0012BA  B4D8               	btfsc	status,2,c
  2837  0012BC  0012               	return	
  2838  0012BE  0E07               	movlw	7
  2839  0012C0  0100               	movlb	0	; () banked
  2840  0012C2  65CD               	cpfsgt	lcd_show_string@t8& (0+255),b
  2841  0012C4  D7CE               	goto	l6260
  2842  0012C6  0012               	return	
  2843  0012C8                     __end_of_lcd_show_string:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           indf0	equ	0xFEF
  2852                           postinc0	equ	0xFEE
  2853                           fsr0h	equ	0xFEA
  2854                           fsr0l	equ	0xFE9
  2855                           wreg	equ	0xFE8
  2856                           postdec1	equ	0xFE5
  2857                           plusw1	equ	0xFE3
  2858                           fsr1h	equ	0xFE2
  2859                           fsr1l	equ	0xFE1
  2860                           indf2	equ	0xFDF
  2861                           plusw2	equ	0xFDB
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _lcd_show_chr *****************
  2867 ;; Defined at:
  2868 ;;		line 489 in file "src/driver/lcd.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  loc             1    wreg     unsigned char 
  2871 ;;  chr             1   14[BANK0 ] unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  loc             1   15[BANK0 ] unsigned char 
  2874 ;;  code            1   16[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2884 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;Total ram usage:        3 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    7
  2891 ;; This function calls:
  2892 ;;		_lcd_disp_chr_loc_0
  2893 ;;		_lcd_disp_chr_loc_1
  2894 ;;		_lcd_disp_chr_loc_2
  2895 ;;		_lcd_disp_chr_loc_3
  2896 ;;		_lcd_disp_chr_loc_4
  2897 ;;		_lcd_disp_chr_loc_5
  2898 ;;		_lcd_disp_chr_loc_6
  2899 ;;		_lcd_disp_chr_loc_7
  2900 ;;		_lcd_disp_get_code
  2901 ;; This function is called by:
  2902 ;;		_lcd_show_string_l0
  2903 ;;		_lcd_show_string_l1
  2904 ;;		_lcd_show_string
  2905 ;;		_lcd_show_chr_lc
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text10
  2910  000C6A                     __ptext10:
  2911                           	opt stack 0
  2912  000C6A                     _lcd_show_chr:
  2913                           	opt stack 21
  2914                           
  2915                           ;incstack = 0
  2916                           ;lcd_show_chr@loc stored from wreg
  2917  000C6A  0100               	movlb	0	; () banked
  2918  000C6C  6FC9               	movwf	lcd_show_chr@loc& (0+255),b
  2919                           
  2920                           ;lcd.c: 491: uint8_t code=lcd_disp_get_code(chr);
  2921  000C6E  0100               	movlb	0	; () banked
  2922  000C70  51C8               	movf	lcd_show_chr@chr& (0+255),w,b
  2923  000C72  ECE7  F00A         	call	_lcd_disp_get_code
  2924  000C76  0100               	movlb	0	; () banked
  2925  000C78  6FCA               	movwf	lcd_show_chr@code& (0+255),b
  2926                           
  2927                           ;lcd.c: 492: switch(loc){
  2928  000C7A  D028               	goto	l6162
  2929  000C7C                     l6144:
  2930                           
  2931                           ; BSR set to: 0
  2932  000C7C  0100               	movlb	0	; () banked
  2933  000C7E  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2934  000C80  ECF3  F008         	call	_lcd_disp_chr_loc_0
  2935  000C84  0012               	return	
  2936  000C86                     l6146:
  2937  000C86  0100               	movlb	0	; () banked
  2938  000C88  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2939  000C8A  ECB9  F008         	call	_lcd_disp_chr_loc_1
  2940  000C8E  0012               	return	
  2941  000C90                     l6148:
  2942  000C90  0100               	movlb	0	; () banked
  2943  000C92  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2944  000C94  EC7F  F008         	call	_lcd_disp_chr_loc_2
  2945  000C98  0012               	return	
  2946  000C9A                     l6150:
  2947  000C9A  0100               	movlb	0	; () banked
  2948  000C9C  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2949  000C9E  EC45  F008         	call	_lcd_disp_chr_loc_3
  2950  000CA2  0012               	return	
  2951  000CA4                     l6152:
  2952  000CA4  0100               	movlb	0	; () banked
  2953  000CA6  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2954  000CA8  EC0B  F008         	call	_lcd_disp_chr_loc_4
  2955  000CAC  0012               	return	
  2956  000CAE                     l6154:
  2957  000CAE  0100               	movlb	0	; () banked
  2958  000CB0  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2959  000CB2  ECD1  F007         	call	_lcd_disp_chr_loc_5
  2960  000CB6  0012               	return	
  2961  000CB8                     l6156:
  2962  000CB8  0100               	movlb	0	; () banked
  2963  000CBA  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2964  000CBC  EC97  F007         	call	_lcd_disp_chr_loc_6
  2965  000CC0  0012               	return	
  2966  000CC2                     l6158:
  2967  000CC2  0100               	movlb	0	; () banked
  2968  000CC4  51CA               	movf	lcd_show_chr@code& (0+255),w,b
  2969  000CC6  EC5D  F007         	call	_lcd_disp_chr_loc_7
  2970                           
  2971                           ;lcd.c: 502: }
  2972                           
  2973                           ;lcd.c: 501: default:break;
  2974  000CCA  0012               	return	
  2975  000CCC                     l6162:
  2976  000CCC  0100               	movlb	0	; () banked
  2977  000CCE  51C9               	movf	lcd_show_chr@loc& (0+255),w,b
  2978                           
  2979                           ; Switch size 1, requested type "space"
  2980                           ; Number of cases is 8, Range of values is 0 to 7
  2981                           ; switch strategies available:
  2982                           ; Name         Instructions Cycles
  2983                           ; simple_byte           25    13 (average)
  2984                           ;	Chosen strategy is simple_byte
  2985  000CD0  0A00               	xorlw	0	; case 0
  2986  000CD2  B4D8               	btfsc	status,2,c
  2987  000CD4  D7D3               	goto	l6144
  2988  000CD6  0A01               	xorlw	1	; case 1
  2989  000CD8  B4D8               	btfsc	status,2,c
  2990  000CDA  D7D5               	goto	l6146
  2991  000CDC  0A03               	xorlw	3	; case 2
  2992  000CDE  B4D8               	btfsc	status,2,c
  2993  000CE0  D7D7               	goto	l6148
  2994  000CE2  0A01               	xorlw	1	; case 3
  2995  000CE4  B4D8               	btfsc	status,2,c
  2996  000CE6  D7D9               	goto	l6150
  2997  000CE8  0A07               	xorlw	7	; case 4
  2998  000CEA  B4D8               	btfsc	status,2,c
  2999  000CEC  D7DB               	goto	l6152
  3000  000CEE  0A01               	xorlw	1	; case 5
  3001  000CF0  B4D8               	btfsc	status,2,c
  3002  000CF2  D7DD               	goto	l6154
  3003  000CF4  0A03               	xorlw	3	; case 6
  3004  000CF6  B4D8               	btfsc	status,2,c
  3005  000CF8  D7DF               	goto	l6156
  3006  000CFA  0A01               	xorlw	1	; case 7
  3007  000CFC  A4D8               	btfss	status,2,c
  3008  000CFE  0012               	return	
  3009  000D00  D7E0               	goto	l6158
  3010  000D02                     __end_of_lcd_show_chr:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           prodh	equ	0xFF4
  3017                           prodl	equ	0xFF3
  3018                           indf0	equ	0xFEF
  3019                           postinc0	equ	0xFEE
  3020                           fsr0h	equ	0xFEA
  3021                           fsr0l	equ	0xFE9
  3022                           wreg	equ	0xFE8
  3023                           postdec1	equ	0xFE5
  3024                           plusw1	equ	0xFE3
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           plusw2	equ	0xFDB
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _lcd_disp_get_code *****************
  3034 ;; Defined at:
  3035 ;;		line 461 in file "src/driver/lcd.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  chr             1    wreg     unsigned char 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  chr             1   31[COMRAM] unsigned char 
  3040 ;;  i               1   33[COMRAM] unsigned char 
  3041 ;;  ret             1   32[COMRAM] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      unsigned char 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;Total ram usage:        3 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    4
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_lcd_show_chr
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text11
  3066  0015CE                     __ptext11:
  3067                           	opt stack 0
  3068  0015CE                     _lcd_disp_get_code:
  3069                           	opt stack 23
  3070                           
  3071                           ;incstack = 0
  3072                           ;lcd_disp_get_code@chr stored from wreg
  3073  0015CE  6E20               	movwf	lcd_disp_get_code@chr,c
  3074                           
  3075                           ;lcd.c: 463: uint8_t i;
  3076                           ;lcd.c: 464: uint8_t ret;
  3077                           ;lcd.c: 465: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
  3078  0015D0  0E00               	movlw	0
  3079  0015D2  6E22               	movwf	lcd_disp_get_code@i,c
  3080  0015D4                     l5854:
  3081  0015D4  0E28               	movlw	40
  3082  0015D6  6422               	cpfsgt	lcd_disp_get_code@i,c
  3083  0015D8  D001               	goto	l5858
  3084  0015DA  D00F               	goto	l5866
  3085  0015DC                     l5858:
  3086                           
  3087                           ;lcd.c: 466: if(chr==LCDDigitalIndexTable[i])break;
  3088  0015DC  5022               	movf	lcd_disp_get_code@i,w,c
  3089  0015DE  0D01               	mullw	1
  3090  0015E0  0EBF               	movlw	low _LCDDigitalIndexTable
  3091  0015E2  24F3               	addwf	prodl,w,c
  3092  0015E4  6EF6               	movwf	tblptrl,c
  3093  0015E6  0EFE               	movlw	high _LCDDigitalIndexTable
  3094  0015E8  20F4               	addwfc	prodh,w,c
  3095  0015EA  6EF7               	movwf	tblptrh,c
  3096  0015EC                     	if	0	;There are less than 3 active tblptr bytes
  3097  0015EC                     	endif
  3098  0015EC  0008               	tblrd		*
  3099  0015EE  50F5               	movf	tablat,w,c
  3100  0015F0  1820               	xorwf	lcd_disp_get_code@chr,w,c
  3101  0015F2  B4D8               	btfsc	status,2,c
  3102  0015F4  D002               	goto	l5866
  3103  0015F6  2A22               	incf	lcd_disp_get_code@i,f,c
  3104  0015F8  D7ED               	goto	l5854
  3105  0015FA                     l5866:
  3106                           
  3107                           ;lcd.c: 467: }
  3108                           ;lcd.c: 468: if(i<sizeof(LCDDigitalIndexTable)){
  3109  0015FA  0E29               	movlw	41
  3110  0015FC  6022               	cpfslt	lcd_disp_get_code@i,c
  3111  0015FE  D00B               	goto	l5870
  3112                           
  3113                           ;lcd.c: 469: ret= LCDDigitalTable[i];
  3114  001600  5022               	movf	lcd_disp_get_code@i,w,c
  3115  001602  0D01               	mullw	1
  3116  001604  0EE8               	movlw	low _LCDDigitalTable
  3117  001606  24F3               	addwf	prodl,w,c
  3118  001608  6EF6               	movwf	tblptrl,c
  3119  00160A  0EFE               	movlw	high _LCDDigitalTable
  3120  00160C  20F4               	addwfc	prodh,w,c
  3121  00160E  6EF7               	movwf	tblptrh,c
  3122  001610                     	if	0	;There are less than 3 active tblptr bytes
  3123  001610                     	endif
  3124  001610  0008               	tblrd		*
  3125  001612  CFF5 F021          	movff	tablat,lcd_disp_get_code@ret
  3126  001616                     l5870:
  3127                           
  3128                           ;lcd.c: 470: }
  3129                           ;lcd.c: 471: return ret;
  3130  001616  5021               	movf	lcd_disp_get_code@ret,w,c
  3131  001618  0012               	return	
  3132  00161A                     __end_of_lcd_disp_get_code:
  3133                           	opt stack 0
  3134                           tblptru	equ	0xFF8
  3135                           tblptrh	equ	0xFF7
  3136                           tblptrl	equ	0xFF6
  3137                           tablat	equ	0xFF5
  3138                           prodh	equ	0xFF4
  3139                           prodl	equ	0xFF3
  3140                           indf0	equ	0xFEF
  3141                           postinc0	equ	0xFEE
  3142                           fsr0h	equ	0xFEA
  3143                           fsr0l	equ	0xFE9
  3144                           wreg	equ	0xFE8
  3145                           postdec1	equ	0xFE5
  3146                           plusw1	equ	0xFE3
  3147                           fsr1h	equ	0xFE2
  3148                           fsr1l	equ	0xFE1
  3149                           indf2	equ	0xFDF
  3150                           plusw2	equ	0xFDB
  3151                           fsr2h	equ	0xFDA
  3152                           fsr2l	equ	0xFD9
  3153                           status	equ	0xFD8
  3154                           
  3155 ;; *************** function _lcd_disp_chr_loc_7 *****************
  3156 ;; Defined at:
  3157 ;;		line 353 in file "src/driver/lcd.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  code            1    wreg     unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  code            1   33[COMRAM] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    6
  3178 ;; This function calls:
  3179 ;;		_lcd_set_com_seg
  3180 ;; This function is called by:
  3181 ;;		_lcd_show_chr
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text12
  3186  000EBA                     __ptext12:
  3187                           	opt stack 0
  3188  000EBA                     _lcd_disp_chr_loc_7:
  3189                           	opt stack 21
  3190                           
  3191                           ;incstack = 0
  3192                           ;lcd_disp_chr_loc_7@code stored from wreg
  3193  000EBA  6E22               	movwf	lcd_disp_chr_loc_7@code,c
  3194                           
  3195                           ;lcd.c: 355: lcd_set_com_seg(0,19,code&0x08);
  3196  000EBC  0E13               	movlw	19
  3197  000EBE  6E20               	movwf	lcd_set_com_seg@seg,c
  3198  000EC0  5022               	movf	lcd_disp_chr_loc_7@code,w,c
  3199  000EC2  0B08               	andlw	8
  3200  000EC4  6E21               	movwf	lcd_set_com_seg@show,c
  3201  000EC6  0E00               	movlw	0
  3202  000EC8  EC6B  F004         	call	_lcd_set_com_seg
  3203                           
  3204                           ;lcd.c: 356: lcd_set_com_seg(1,19,code&0x10);
  3205  000ECC  0E13               	movlw	19
  3206  000ECE  6E20               	movwf	lcd_set_com_seg@seg,c
  3207  000ED0  5022               	movf	lcd_disp_chr_loc_7@code,w,c
  3208  000ED2  0B10               	andlw	16
  3209  000ED4  6E21               	movwf	lcd_set_com_seg@show,c
  3210  000ED6  0E01               	movlw	1
  3211  000ED8  EC6B  F004         	call	_lcd_set_com_seg
  3212                           
  3213                           ;lcd.c: 357: lcd_set_com_seg(2,19,code&0x20);
  3214  000EDC  0E13               	movlw	19
  3215  000EDE  6E20               	movwf	lcd_set_com_seg@seg,c
  3216  000EE0  5022               	movf	lcd_disp_chr_loc_7@code,w,c
  3217  000EE2  0B20               	andlw	32
  3218  000EE4  6E21               	movwf	lcd_set_com_seg@show,c
  3219  000EE6  0E02               	movlw	2
  3220  000EE8  EC6B  F004         	call	_lcd_set_com_seg
  3221                           
  3222                           ;lcd.c: 358: lcd_set_com_seg(3,19,code&0x01);
  3223  000EEC  0E13               	movlw	19
  3224  000EEE  6E20               	movwf	lcd_set_com_seg@seg,c
  3225  000EF0  5022               	movf	lcd_disp_chr_loc_7@code,w,c
  3226  000EF2  0B01               	andlw	1
  3227  000EF4  6E21               	movwf	lcd_set_com_seg@show,c
  3228  000EF6  0E03               	movlw	3
  3229  000EF8  EC6B  F004         	call	_lcd_set_com_seg
  3230                           
  3231                           ;lcd.c: 360: lcd_set_com_seg(1,40,code&0x04);
  3232  000EFC  0E28               	movlw	40
  3233  000EFE  6E20               	movwf	lcd_set_com_seg@seg,c
  3234  000F00  5022               	movf	lcd_disp_chr_loc_7@code,w,c
  3235  000F02  0B04               	andlw	4
  3236  000F04  6E21               	movwf	lcd_set_com_seg@show,c
  3237  000F06  0E01               	movlw	1
  3238  000F08  EC6B  F004         	call	_lcd_set_com_seg
  3239                           
  3240                           ;lcd.c: 361: lcd_set_com_seg(2,40,code&0x40);
  3241  000F0C  0E28               	movlw	40
  3242  000F0E  6E20               	movwf	lcd_set_com_seg@seg,c
  3243  000F10  5022               	movf	lcd_disp_chr_loc_7@code,w,c
  3244  000F12  0B40               	andlw	64
  3245  000F14  6E21               	movwf	lcd_set_com_seg@show,c
  3246  000F16  0E02               	movlw	2
  3247  000F18  EC6B  F004         	call	_lcd_set_com_seg
  3248                           
  3249                           ;lcd.c: 362: lcd_set_com_seg(3,40,code&0x02);
  3250  000F1C  0E28               	movlw	40
  3251  000F1E  6E20               	movwf	lcd_set_com_seg@seg,c
  3252  000F20  5022               	movf	lcd_disp_chr_loc_7@code,w,c
  3253  000F22  0B02               	andlw	2
  3254  000F24  6E21               	movwf	lcd_set_com_seg@show,c
  3255  000F26  0E03               	movlw	3
  3256  000F28  EC6B  F004         	call	_lcd_set_com_seg
  3257  000F2C  0012               	return		;funcret
  3258  000F2E                     __end_of_lcd_disp_chr_loc_7:
  3259                           	opt stack 0
  3260                           tblptru	equ	0xFF8
  3261                           tblptrh	equ	0xFF7
  3262                           tblptrl	equ	0xFF6
  3263                           tablat	equ	0xFF5
  3264                           prodh	equ	0xFF4
  3265                           prodl	equ	0xFF3
  3266                           indf0	equ	0xFEF
  3267                           postinc0	equ	0xFEE
  3268                           fsr0h	equ	0xFEA
  3269                           fsr0l	equ	0xFE9
  3270                           wreg	equ	0xFE8
  3271                           postdec1	equ	0xFE5
  3272                           plusw1	equ	0xFE3
  3273                           fsr1h	equ	0xFE2
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           plusw2	equ	0xFDB
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _lcd_disp_chr_loc_6 *****************
  3282 ;; Defined at:
  3283 ;;		line 334 in file "src/driver/lcd.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  code            1    wreg     unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  code            1   33[COMRAM] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    6
  3304 ;; This function calls:
  3305 ;;		_lcd_set_com_seg
  3306 ;; This function is called by:
  3307 ;;		_lcd_show_chr
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text13
  3312  000F2E                     __ptext13:
  3313                           	opt stack 0
  3314  000F2E                     _lcd_disp_chr_loc_6:
  3315                           	opt stack 21
  3316                           
  3317                           ;incstack = 0
  3318                           ;lcd_disp_chr_loc_6@code stored from wreg
  3319  000F2E  6E22               	movwf	lcd_disp_chr_loc_6@code,c
  3320                           
  3321                           ;lcd.c: 336: lcd_set_com_seg(0,14,code&0x08);
  3322  000F30  0E0E               	movlw	14
  3323  000F32  6E20               	movwf	lcd_set_com_seg@seg,c
  3324  000F34  5022               	movf	lcd_disp_chr_loc_6@code,w,c
  3325  000F36  0B08               	andlw	8
  3326  000F38  6E21               	movwf	lcd_set_com_seg@show,c
  3327  000F3A  0E00               	movlw	0
  3328  000F3C  EC6B  F004         	call	_lcd_set_com_seg
  3329                           
  3330                           ;lcd.c: 337: lcd_set_com_seg(1,14,code&0x10);
  3331  000F40  0E0E               	movlw	14
  3332  000F42  6E20               	movwf	lcd_set_com_seg@seg,c
  3333  000F44  5022               	movf	lcd_disp_chr_loc_6@code,w,c
  3334  000F46  0B10               	andlw	16
  3335  000F48  6E21               	movwf	lcd_set_com_seg@show,c
  3336  000F4A  0E01               	movlw	1
  3337  000F4C  EC6B  F004         	call	_lcd_set_com_seg
  3338                           
  3339                           ;lcd.c: 338: lcd_set_com_seg(2,14,code&0x20);
  3340  000F50  0E0E               	movlw	14
  3341  000F52  6E20               	movwf	lcd_set_com_seg@seg,c
  3342  000F54  5022               	movf	lcd_disp_chr_loc_6@code,w,c
  3343  000F56  0B20               	andlw	32
  3344  000F58  6E21               	movwf	lcd_set_com_seg@show,c
  3345  000F5A  0E02               	movlw	2
  3346  000F5C  EC6B  F004         	call	_lcd_set_com_seg
  3347                           
  3348                           ;lcd.c: 339: lcd_set_com_seg(3,14,code&0x01);
  3349  000F60  0E0E               	movlw	14
  3350  000F62  6E20               	movwf	lcd_set_com_seg@seg,c
  3351  000F64  5022               	movf	lcd_disp_chr_loc_6@code,w,c
  3352  000F66  0B01               	andlw	1
  3353  000F68  6E21               	movwf	lcd_set_com_seg@show,c
  3354  000F6A  0E03               	movlw	3
  3355  000F6C  EC6B  F004         	call	_lcd_set_com_seg
  3356                           
  3357                           ;lcd.c: 341: lcd_set_com_seg(1,15,code&0x04);
  3358  000F70  0E0F               	movlw	15
  3359  000F72  6E20               	movwf	lcd_set_com_seg@seg,c
  3360  000F74  5022               	movf	lcd_disp_chr_loc_6@code,w,c
  3361  000F76  0B04               	andlw	4
  3362  000F78  6E21               	movwf	lcd_set_com_seg@show,c
  3363  000F7A  0E01               	movlw	1
  3364  000F7C  EC6B  F004         	call	_lcd_set_com_seg
  3365                           
  3366                           ;lcd.c: 342: lcd_set_com_seg(2,15,code&0x40);
  3367  000F80  0E0F               	movlw	15
  3368  000F82  6E20               	movwf	lcd_set_com_seg@seg,c
  3369  000F84  5022               	movf	lcd_disp_chr_loc_6@code,w,c
  3370  000F86  0B40               	andlw	64
  3371  000F88  6E21               	movwf	lcd_set_com_seg@show,c
  3372  000F8A  0E02               	movlw	2
  3373  000F8C  EC6B  F004         	call	_lcd_set_com_seg
  3374                           
  3375                           ;lcd.c: 343: lcd_set_com_seg(3,15,code&0x02);
  3376  000F90  0E0F               	movlw	15
  3377  000F92  6E20               	movwf	lcd_set_com_seg@seg,c
  3378  000F94  5022               	movf	lcd_disp_chr_loc_6@code,w,c
  3379  000F96  0B02               	andlw	2
  3380  000F98  6E21               	movwf	lcd_set_com_seg@show,c
  3381  000F9A  0E03               	movlw	3
  3382  000F9C  EC6B  F004         	call	_lcd_set_com_seg
  3383  000FA0  0012               	return		;funcret
  3384  000FA2                     __end_of_lcd_disp_chr_loc_6:
  3385                           	opt stack 0
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           prodh	equ	0xFF4
  3391                           prodl	equ	0xFF3
  3392                           indf0	equ	0xFEF
  3393                           postinc0	equ	0xFEE
  3394                           fsr0h	equ	0xFEA
  3395                           fsr0l	equ	0xFE9
  3396                           wreg	equ	0xFE8
  3397                           postdec1	equ	0xFE5
  3398                           plusw1	equ	0xFE3
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           plusw2	equ	0xFDB
  3403                           fsr2h	equ	0xFDA
  3404                           fsr2l	equ	0xFD9
  3405                           status	equ	0xFD8
  3406                           
  3407 ;; *************** function _lcd_disp_chr_loc_5 *****************
  3408 ;; Defined at:
  3409 ;;		line 315 in file "src/driver/lcd.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  code            1    wreg     unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  code            1   33[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        1 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    6
  3430 ;; This function calls:
  3431 ;;		_lcd_set_com_seg
  3432 ;; This function is called by:
  3433 ;;		_lcd_show_chr
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text14
  3438  000FA2                     __ptext14:
  3439                           	opt stack 0
  3440  000FA2                     _lcd_disp_chr_loc_5:
  3441                           	opt stack 21
  3442                           
  3443                           ;incstack = 0
  3444                           ;lcd_disp_chr_loc_5@code stored from wreg
  3445  000FA2  6E22               	movwf	lcd_disp_chr_loc_5@code,c
  3446                           
  3447                           ;lcd.c: 317: lcd_set_com_seg(0,38,code&0x08);
  3448  000FA4  0E26               	movlw	38
  3449  000FA6  6E20               	movwf	lcd_set_com_seg@seg,c
  3450  000FA8  5022               	movf	lcd_disp_chr_loc_5@code,w,c
  3451  000FAA  0B08               	andlw	8
  3452  000FAC  6E21               	movwf	lcd_set_com_seg@show,c
  3453  000FAE  0E00               	movlw	0
  3454  000FB0  EC6B  F004         	call	_lcd_set_com_seg
  3455                           
  3456                           ;lcd.c: 318: lcd_set_com_seg(1,38,code&0x10);
  3457  000FB4  0E26               	movlw	38
  3458  000FB6  6E20               	movwf	lcd_set_com_seg@seg,c
  3459  000FB8  5022               	movf	lcd_disp_chr_loc_5@code,w,c
  3460  000FBA  0B10               	andlw	16
  3461  000FBC  6E21               	movwf	lcd_set_com_seg@show,c
  3462  000FBE  0E01               	movlw	1
  3463  000FC0  EC6B  F004         	call	_lcd_set_com_seg
  3464                           
  3465                           ;lcd.c: 319: lcd_set_com_seg(2,38,code&0x20);
  3466  000FC4  0E26               	movlw	38
  3467  000FC6  6E20               	movwf	lcd_set_com_seg@seg,c
  3468  000FC8  5022               	movf	lcd_disp_chr_loc_5@code,w,c
  3469  000FCA  0B20               	andlw	32
  3470  000FCC  6E21               	movwf	lcd_set_com_seg@show,c
  3471  000FCE  0E02               	movlw	2
  3472  000FD0  EC6B  F004         	call	_lcd_set_com_seg
  3473                           
  3474                           ;lcd.c: 320: lcd_set_com_seg(3,38,code&0x01);
  3475  000FD4  0E26               	movlw	38
  3476  000FD6  6E20               	movwf	lcd_set_com_seg@seg,c
  3477  000FD8  5022               	movf	lcd_disp_chr_loc_5@code,w,c
  3478  000FDA  0B01               	andlw	1
  3479  000FDC  6E21               	movwf	lcd_set_com_seg@show,c
  3480  000FDE  0E03               	movlw	3
  3481  000FE0  EC6B  F004         	call	_lcd_set_com_seg
  3482                           
  3483                           ;lcd.c: 322: lcd_set_com_seg(1,39,code&0x04);
  3484  000FE4  0E27               	movlw	39
  3485  000FE6  6E20               	movwf	lcd_set_com_seg@seg,c
  3486  000FE8  5022               	movf	lcd_disp_chr_loc_5@code,w,c
  3487  000FEA  0B04               	andlw	4
  3488  000FEC  6E21               	movwf	lcd_set_com_seg@show,c
  3489  000FEE  0E01               	movlw	1
  3490  000FF0  EC6B  F004         	call	_lcd_set_com_seg
  3491                           
  3492                           ;lcd.c: 323: lcd_set_com_seg(2,39,code&0x40);
  3493  000FF4  0E27               	movlw	39
  3494  000FF6  6E20               	movwf	lcd_set_com_seg@seg,c
  3495  000FF8  5022               	movf	lcd_disp_chr_loc_5@code,w,c
  3496  000FFA  0B40               	andlw	64
  3497  000FFC  6E21               	movwf	lcd_set_com_seg@show,c
  3498  000FFE  0E02               	movlw	2
  3499  001000  EC6B  F004         	call	_lcd_set_com_seg
  3500                           
  3501                           ;lcd.c: 324: lcd_set_com_seg(3,39,code&0x02);
  3502  001004  0E27               	movlw	39
  3503  001006  6E20               	movwf	lcd_set_com_seg@seg,c
  3504  001008  5022               	movf	lcd_disp_chr_loc_5@code,w,c
  3505  00100A  0B02               	andlw	2
  3506  00100C  6E21               	movwf	lcd_set_com_seg@show,c
  3507  00100E  0E03               	movlw	3
  3508  001010  EC6B  F004         	call	_lcd_set_com_seg
  3509  001014  0012               	return		;funcret
  3510  001016                     __end_of_lcd_disp_chr_loc_5:
  3511                           	opt stack 0
  3512                           tblptru	equ	0xFF8
  3513                           tblptrh	equ	0xFF7
  3514                           tblptrl	equ	0xFF6
  3515                           tablat	equ	0xFF5
  3516                           prodh	equ	0xFF4
  3517                           prodl	equ	0xFF3
  3518                           indf0	equ	0xFEF
  3519                           postinc0	equ	0xFEE
  3520                           fsr0h	equ	0xFEA
  3521                           fsr0l	equ	0xFE9
  3522                           wreg	equ	0xFE8
  3523                           postdec1	equ	0xFE5
  3524                           plusw1	equ	0xFE3
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           plusw2	equ	0xFDB
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _lcd_disp_chr_loc_4 *****************
  3534 ;; Defined at:
  3535 ;;		line 296 in file "src/driver/lcd.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  code            1    wreg     unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  code            1   33[COMRAM] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;Total ram usage:        1 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    6
  3556 ;; This function calls:
  3557 ;;		_lcd_set_com_seg
  3558 ;; This function is called by:
  3559 ;;		_lcd_show_chr
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text15
  3564  001016                     __ptext15:
  3565                           	opt stack 0
  3566  001016                     _lcd_disp_chr_loc_4:
  3567                           	opt stack 21
  3568                           
  3569                           ;incstack = 0
  3570                           ;lcd_disp_chr_loc_4@code stored from wreg
  3571  001016  6E22               	movwf	lcd_disp_chr_loc_4@code,c
  3572                           
  3573                           ;lcd.c: 298: lcd_set_com_seg(0,36,code&0x08);
  3574  001018  0E24               	movlw	36
  3575  00101A  6E20               	movwf	lcd_set_com_seg@seg,c
  3576  00101C  5022               	movf	lcd_disp_chr_loc_4@code,w,c
  3577  00101E  0B08               	andlw	8
  3578  001020  6E21               	movwf	lcd_set_com_seg@show,c
  3579  001022  0E00               	movlw	0
  3580  001024  EC6B  F004         	call	_lcd_set_com_seg
  3581                           
  3582                           ;lcd.c: 299: lcd_set_com_seg(1,36,code&0x10);
  3583  001028  0E24               	movlw	36
  3584  00102A  6E20               	movwf	lcd_set_com_seg@seg,c
  3585  00102C  5022               	movf	lcd_disp_chr_loc_4@code,w,c
  3586  00102E  0B10               	andlw	16
  3587  001030  6E21               	movwf	lcd_set_com_seg@show,c
  3588  001032  0E01               	movlw	1
  3589  001034  EC6B  F004         	call	_lcd_set_com_seg
  3590                           
  3591                           ;lcd.c: 300: lcd_set_com_seg(2,36,code&0x20);
  3592  001038  0E24               	movlw	36
  3593  00103A  6E20               	movwf	lcd_set_com_seg@seg,c
  3594  00103C  5022               	movf	lcd_disp_chr_loc_4@code,w,c
  3595  00103E  0B20               	andlw	32
  3596  001040  6E21               	movwf	lcd_set_com_seg@show,c
  3597  001042  0E02               	movlw	2
  3598  001044  EC6B  F004         	call	_lcd_set_com_seg
  3599                           
  3600                           ;lcd.c: 301: lcd_set_com_seg(3,36,code&0x01);
  3601  001048  0E24               	movlw	36
  3602  00104A  6E20               	movwf	lcd_set_com_seg@seg,c
  3603  00104C  5022               	movf	lcd_disp_chr_loc_4@code,w,c
  3604  00104E  0B01               	andlw	1
  3605  001050  6E21               	movwf	lcd_set_com_seg@show,c
  3606  001052  0E03               	movlw	3
  3607  001054  EC6B  F004         	call	_lcd_set_com_seg
  3608                           
  3609                           ;lcd.c: 303: lcd_set_com_seg(1,37,code&0x04);
  3610  001058  0E25               	movlw	37
  3611  00105A  6E20               	movwf	lcd_set_com_seg@seg,c
  3612  00105C  5022               	movf	lcd_disp_chr_loc_4@code,w,c
  3613  00105E  0B04               	andlw	4
  3614  001060  6E21               	movwf	lcd_set_com_seg@show,c
  3615  001062  0E01               	movlw	1
  3616  001064  EC6B  F004         	call	_lcd_set_com_seg
  3617                           
  3618                           ;lcd.c: 304: lcd_set_com_seg(2,37,code&0x40);
  3619  001068  0E25               	movlw	37
  3620  00106A  6E20               	movwf	lcd_set_com_seg@seg,c
  3621  00106C  5022               	movf	lcd_disp_chr_loc_4@code,w,c
  3622  00106E  0B40               	andlw	64
  3623  001070  6E21               	movwf	lcd_set_com_seg@show,c
  3624  001072  0E02               	movlw	2
  3625  001074  EC6B  F004         	call	_lcd_set_com_seg
  3626                           
  3627                           ;lcd.c: 305: lcd_set_com_seg(3,37,code&0x02);
  3628  001078  0E25               	movlw	37
  3629  00107A  6E20               	movwf	lcd_set_com_seg@seg,c
  3630  00107C  5022               	movf	lcd_disp_chr_loc_4@code,w,c
  3631  00107E  0B02               	andlw	2
  3632  001080  6E21               	movwf	lcd_set_com_seg@show,c
  3633  001082  0E03               	movlw	3
  3634  001084  EC6B  F004         	call	_lcd_set_com_seg
  3635  001088  0012               	return		;funcret
  3636  00108A                     __end_of_lcd_disp_chr_loc_4:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           indf0	equ	0xFEF
  3645                           postinc0	equ	0xFEE
  3646                           fsr0h	equ	0xFEA
  3647                           fsr0l	equ	0xFE9
  3648                           wreg	equ	0xFE8
  3649                           postdec1	equ	0xFE5
  3650                           plusw1	equ	0xFE3
  3651                           fsr1h	equ	0xFE2
  3652                           fsr1l	equ	0xFE1
  3653                           indf2	equ	0xFDF
  3654                           plusw2	equ	0xFDB
  3655                           fsr2h	equ	0xFDA
  3656                           fsr2l	equ	0xFD9
  3657                           status	equ	0xFD8
  3658                           
  3659 ;; *************** function _lcd_disp_chr_loc_3 *****************
  3660 ;; Defined at:
  3661 ;;		line 284 in file "src/driver/lcd.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  code            1    wreg     unsigned char 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  code            1   33[COMRAM] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:        1 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    6
  3682 ;; This function calls:
  3683 ;;		_lcd_set_com_seg
  3684 ;; This function is called by:
  3685 ;;		_lcd_show_chr
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text16
  3690  00108A                     __ptext16:
  3691                           	opt stack 0
  3692  00108A                     _lcd_disp_chr_loc_3:
  3693                           	opt stack 21
  3694                           
  3695                           ;incstack = 0
  3696                           ;lcd_disp_chr_loc_3@code stored from wreg
  3697  00108A  6E22               	movwf	lcd_disp_chr_loc_3@code,c
  3698                           
  3699                           ;lcd.c: 286: lcd_set_com_seg(0,43,code&0x01);
  3700  00108C  0E2B               	movlw	43
  3701  00108E  6E20               	movwf	lcd_set_com_seg@seg,c
  3702  001090  5022               	movf	lcd_disp_chr_loc_3@code,w,c
  3703  001092  0B01               	andlw	1
  3704  001094  6E21               	movwf	lcd_set_com_seg@show,c
  3705  001096  0E00               	movlw	0
  3706  001098  EC6B  F004         	call	_lcd_set_com_seg
  3707                           
  3708                           ;lcd.c: 287: lcd_set_com_seg(1,43,code&0x20);
  3709  00109C  0E2B               	movlw	43
  3710  00109E  6E20               	movwf	lcd_set_com_seg@seg,c
  3711  0010A0  5022               	movf	lcd_disp_chr_loc_3@code,w,c
  3712  0010A2  0B20               	andlw	32
  3713  0010A4  6E21               	movwf	lcd_set_com_seg@show,c
  3714  0010A6  0E01               	movlw	1
  3715  0010A8  EC6B  F004         	call	_lcd_set_com_seg
  3716                           
  3717                           ;lcd.c: 288: lcd_set_com_seg(2,43,code&0x10);
  3718  0010AC  0E2B               	movlw	43
  3719  0010AE  6E20               	movwf	lcd_set_com_seg@seg,c
  3720  0010B0  5022               	movf	lcd_disp_chr_loc_3@code,w,c
  3721  0010B2  0B10               	andlw	16
  3722  0010B4  6E21               	movwf	lcd_set_com_seg@show,c
  3723  0010B6  0E02               	movlw	2
  3724  0010B8  EC6B  F004         	call	_lcd_set_com_seg
  3725                           
  3726                           ;lcd.c: 289: lcd_set_com_seg(3,43,code&0x08);
  3727  0010BC  0E2B               	movlw	43
  3728  0010BE  6E20               	movwf	lcd_set_com_seg@seg,c
  3729  0010C0  5022               	movf	lcd_disp_chr_loc_3@code,w,c
  3730  0010C2  0B08               	andlw	8
  3731  0010C4  6E21               	movwf	lcd_set_com_seg@show,c
  3732  0010C6  0E03               	movlw	3
  3733  0010C8  EC6B  F004         	call	_lcd_set_com_seg
  3734                           
  3735                           ;lcd.c: 291: lcd_set_com_seg(0,42,code&0x02);
  3736  0010CC  0E2A               	movlw	42
  3737  0010CE  6E20               	movwf	lcd_set_com_seg@seg,c
  3738  0010D0  5022               	movf	lcd_disp_chr_loc_3@code,w,c
  3739  0010D2  0B02               	andlw	2
  3740  0010D4  6E21               	movwf	lcd_set_com_seg@show,c
  3741  0010D6  0E00               	movlw	0
  3742  0010D8  EC6B  F004         	call	_lcd_set_com_seg
  3743                           
  3744                           ;lcd.c: 292: lcd_set_com_seg(1,42,code&0x40);
  3745  0010DC  0E2A               	movlw	42
  3746  0010DE  6E20               	movwf	lcd_set_com_seg@seg,c
  3747  0010E0  5022               	movf	lcd_disp_chr_loc_3@code,w,c
  3748  0010E2  0B40               	andlw	64
  3749  0010E4  6E21               	movwf	lcd_set_com_seg@show,c
  3750  0010E6  0E01               	movlw	1
  3751  0010E8  EC6B  F004         	call	_lcd_set_com_seg
  3752                           
  3753                           ;lcd.c: 293: lcd_set_com_seg(2,42,code&0x04);
  3754  0010EC  0E2A               	movlw	42
  3755  0010EE  6E20               	movwf	lcd_set_com_seg@seg,c
  3756  0010F0  5022               	movf	lcd_disp_chr_loc_3@code,w,c
  3757  0010F2  0B04               	andlw	4
  3758  0010F4  6E21               	movwf	lcd_set_com_seg@show,c
  3759  0010F6  0E02               	movlw	2
  3760  0010F8  EC6B  F004         	call	_lcd_set_com_seg
  3761  0010FC  0012               	return		;funcret
  3762  0010FE                     __end_of_lcd_disp_chr_loc_3:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           prodh	equ	0xFF4
  3769                           prodl	equ	0xFF3
  3770                           indf0	equ	0xFEF
  3771                           postinc0	equ	0xFEE
  3772                           fsr0h	equ	0xFEA
  3773                           fsr0l	equ	0xFE9
  3774                           wreg	equ	0xFE8
  3775                           postdec1	equ	0xFE5
  3776                           plusw1	equ	0xFE3
  3777                           fsr1h	equ	0xFE2
  3778                           fsr1l	equ	0xFE1
  3779                           indf2	equ	0xFDF
  3780                           plusw2	equ	0xFDB
  3781                           fsr2h	equ	0xFDA
  3782                           fsr2l	equ	0xFD9
  3783                           status	equ	0xFD8
  3784                           
  3785 ;; *************** function _lcd_disp_chr_loc_2 *****************
  3786 ;; Defined at:
  3787 ;;		line 265 in file "src/driver/lcd.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  code            1    wreg     unsigned char 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  code            1   33[COMRAM] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;Total ram usage:        1 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    6
  3808 ;; This function calls:
  3809 ;;		_lcd_set_com_seg
  3810 ;; This function is called by:
  3811 ;;		_lcd_show_chr
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text17
  3816  0010FE                     __ptext17:
  3817                           	opt stack 0
  3818  0010FE                     _lcd_disp_chr_loc_2:
  3819                           	opt stack 21
  3820                           
  3821                           ;incstack = 0
  3822                           ;lcd_disp_chr_loc_2@code stored from wreg
  3823  0010FE  6E22               	movwf	lcd_disp_chr_loc_2@code,c
  3824                           
  3825                           ;lcd.c: 267: lcd_set_com_seg(0,21,code&0x01);
  3826  001100  0E15               	movlw	21
  3827  001102  6E20               	movwf	lcd_set_com_seg@seg,c
  3828  001104  5022               	movf	lcd_disp_chr_loc_2@code,w,c
  3829  001106  0B01               	andlw	1
  3830  001108  6E21               	movwf	lcd_set_com_seg@show,c
  3831  00110A  0E00               	movlw	0
  3832  00110C  EC6B  F004         	call	_lcd_set_com_seg
  3833                           
  3834                           ;lcd.c: 268: lcd_set_com_seg(1,21,code&0x20);
  3835  001110  0E15               	movlw	21
  3836  001112  6E20               	movwf	lcd_set_com_seg@seg,c
  3837  001114  5022               	movf	lcd_disp_chr_loc_2@code,w,c
  3838  001116  0B20               	andlw	32
  3839  001118  6E21               	movwf	lcd_set_com_seg@show,c
  3840  00111A  0E01               	movlw	1
  3841  00111C  EC6B  F004         	call	_lcd_set_com_seg
  3842                           
  3843                           ;lcd.c: 269: lcd_set_com_seg(2,21,code&0x10);
  3844  001120  0E15               	movlw	21
  3845  001122  6E20               	movwf	lcd_set_com_seg@seg,c
  3846  001124  5022               	movf	lcd_disp_chr_loc_2@code,w,c
  3847  001126  0B10               	andlw	16
  3848  001128  6E21               	movwf	lcd_set_com_seg@show,c
  3849  00112A  0E02               	movlw	2
  3850  00112C  EC6B  F004         	call	_lcd_set_com_seg
  3851                           
  3852                           ;lcd.c: 270: lcd_set_com_seg(3,21,code&0x08);
  3853  001130  0E15               	movlw	21
  3854  001132  6E20               	movwf	lcd_set_com_seg@seg,c
  3855  001134  5022               	movf	lcd_disp_chr_loc_2@code,w,c
  3856  001136  0B08               	andlw	8
  3857  001138  6E21               	movwf	lcd_set_com_seg@show,c
  3858  00113A  0E03               	movlw	3
  3859  00113C  EC6B  F004         	call	_lcd_set_com_seg
  3860                           
  3861                           ;lcd.c: 272: lcd_set_com_seg(0,20,code&0x02);
  3862  001140  0E14               	movlw	20
  3863  001142  6E20               	movwf	lcd_set_com_seg@seg,c
  3864  001144  5022               	movf	lcd_disp_chr_loc_2@code,w,c
  3865  001146  0B02               	andlw	2
  3866  001148  6E21               	movwf	lcd_set_com_seg@show,c
  3867  00114A  0E00               	movlw	0
  3868  00114C  EC6B  F004         	call	_lcd_set_com_seg
  3869                           
  3870                           ;lcd.c: 273: lcd_set_com_seg(1,20,code&0x40);
  3871  001150  0E14               	movlw	20
  3872  001152  6E20               	movwf	lcd_set_com_seg@seg,c
  3873  001154  5022               	movf	lcd_disp_chr_loc_2@code,w,c
  3874  001156  0B40               	andlw	64
  3875  001158  6E21               	movwf	lcd_set_com_seg@show,c
  3876  00115A  0E01               	movlw	1
  3877  00115C  EC6B  F004         	call	_lcd_set_com_seg
  3878                           
  3879                           ;lcd.c: 274: lcd_set_com_seg(2,20,code&0x04);
  3880  001160  0E14               	movlw	20
  3881  001162  6E20               	movwf	lcd_set_com_seg@seg,c
  3882  001164  5022               	movf	lcd_disp_chr_loc_2@code,w,c
  3883  001166  0B04               	andlw	4
  3884  001168  6E21               	movwf	lcd_set_com_seg@show,c
  3885  00116A  0E02               	movlw	2
  3886  00116C  EC6B  F004         	call	_lcd_set_com_seg
  3887  001170  0012               	return		;funcret
  3888  001172                     __end_of_lcd_disp_chr_loc_2:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           indf0	equ	0xFEF
  3897                           postinc0	equ	0xFEE
  3898                           fsr0h	equ	0xFEA
  3899                           fsr0l	equ	0xFE9
  3900                           wreg	equ	0xFE8
  3901                           postdec1	equ	0xFE5
  3902                           plusw1	equ	0xFE3
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           plusw2	equ	0xFDB
  3907                           fsr2h	equ	0xFDA
  3908                           fsr2l	equ	0xFD9
  3909                           status	equ	0xFD8
  3910                           
  3911 ;; *************** function _lcd_disp_chr_loc_1 *****************
  3912 ;; Defined at:
  3913 ;;		line 246 in file "src/driver/lcd.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  code            1    wreg     unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  code            1   33[COMRAM] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;Total ram usage:        1 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    6
  3934 ;; This function calls:
  3935 ;;		_lcd_set_com_seg
  3936 ;; This function is called by:
  3937 ;;		_lcd_show_chr
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text18
  3942  001172                     __ptext18:
  3943                           	opt stack 0
  3944  001172                     _lcd_disp_chr_loc_1:
  3945                           	opt stack 21
  3946                           
  3947                           ;incstack = 0
  3948                           ;lcd_disp_chr_loc_1@code stored from wreg
  3949  001172  6E22               	movwf	lcd_disp_chr_loc_1@code,c
  3950                           
  3951                           ;lcd.c: 248: lcd_set_com_seg(0,23,code&0x01);
  3952  001174  0E17               	movlw	23
  3953  001176  6E20               	movwf	lcd_set_com_seg@seg,c
  3954  001178  5022               	movf	lcd_disp_chr_loc_1@code,w,c
  3955  00117A  0B01               	andlw	1
  3956  00117C  6E21               	movwf	lcd_set_com_seg@show,c
  3957  00117E  0E00               	movlw	0
  3958  001180  EC6B  F004         	call	_lcd_set_com_seg
  3959                           
  3960                           ;lcd.c: 249: lcd_set_com_seg(1,23,code&0x20);
  3961  001184  0E17               	movlw	23
  3962  001186  6E20               	movwf	lcd_set_com_seg@seg,c
  3963  001188  5022               	movf	lcd_disp_chr_loc_1@code,w,c
  3964  00118A  0B20               	andlw	32
  3965  00118C  6E21               	movwf	lcd_set_com_seg@show,c
  3966  00118E  0E01               	movlw	1
  3967  001190  EC6B  F004         	call	_lcd_set_com_seg
  3968                           
  3969                           ;lcd.c: 250: lcd_set_com_seg(2,23,code&0x10);
  3970  001194  0E17               	movlw	23
  3971  001196  6E20               	movwf	lcd_set_com_seg@seg,c
  3972  001198  5022               	movf	lcd_disp_chr_loc_1@code,w,c
  3973  00119A  0B10               	andlw	16
  3974  00119C  6E21               	movwf	lcd_set_com_seg@show,c
  3975  00119E  0E02               	movlw	2
  3976  0011A0  EC6B  F004         	call	_lcd_set_com_seg
  3977                           
  3978                           ;lcd.c: 251: lcd_set_com_seg(3,23,code&0x08);
  3979  0011A4  0E17               	movlw	23
  3980  0011A6  6E20               	movwf	lcd_set_com_seg@seg,c
  3981  0011A8  5022               	movf	lcd_disp_chr_loc_1@code,w,c
  3982  0011AA  0B08               	andlw	8
  3983  0011AC  6E21               	movwf	lcd_set_com_seg@show,c
  3984  0011AE  0E03               	movlw	3
  3985  0011B0  EC6B  F004         	call	_lcd_set_com_seg
  3986                           
  3987                           ;lcd.c: 253: lcd_set_com_seg(0,22,code&0x02);
  3988  0011B4  0E16               	movlw	22
  3989  0011B6  6E20               	movwf	lcd_set_com_seg@seg,c
  3990  0011B8  5022               	movf	lcd_disp_chr_loc_1@code,w,c
  3991  0011BA  0B02               	andlw	2
  3992  0011BC  6E21               	movwf	lcd_set_com_seg@show,c
  3993  0011BE  0E00               	movlw	0
  3994  0011C0  EC6B  F004         	call	_lcd_set_com_seg
  3995                           
  3996                           ;lcd.c: 254: lcd_set_com_seg(1,22,code&0x40);
  3997  0011C4  0E16               	movlw	22
  3998  0011C6  6E20               	movwf	lcd_set_com_seg@seg,c
  3999  0011C8  5022               	movf	lcd_disp_chr_loc_1@code,w,c
  4000  0011CA  0B40               	andlw	64
  4001  0011CC  6E21               	movwf	lcd_set_com_seg@show,c
  4002  0011CE  0E01               	movlw	1
  4003  0011D0  EC6B  F004         	call	_lcd_set_com_seg
  4004                           
  4005                           ;lcd.c: 255: lcd_set_com_seg(2,22,code&0x04);
  4006  0011D4  0E16               	movlw	22
  4007  0011D6  6E20               	movwf	lcd_set_com_seg@seg,c
  4008  0011D8  5022               	movf	lcd_disp_chr_loc_1@code,w,c
  4009  0011DA  0B04               	andlw	4
  4010  0011DC  6E21               	movwf	lcd_set_com_seg@show,c
  4011  0011DE  0E02               	movlw	2
  4012  0011E0  EC6B  F004         	call	_lcd_set_com_seg
  4013  0011E4  0012               	return		;funcret
  4014  0011E6                     __end_of_lcd_disp_chr_loc_1:
  4015                           	opt stack 0
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           prodh	equ	0xFF4
  4021                           prodl	equ	0xFF3
  4022                           indf0	equ	0xFEF
  4023                           postinc0	equ	0xFEE
  4024                           fsr0h	equ	0xFEA
  4025                           fsr0l	equ	0xFE9
  4026                           wreg	equ	0xFE8
  4027                           postdec1	equ	0xFE5
  4028                           plusw1	equ	0xFE3
  4029                           fsr1h	equ	0xFE2
  4030                           fsr1l	equ	0xFE1
  4031                           indf2	equ	0xFDF
  4032                           plusw2	equ	0xFDB
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _lcd_disp_chr_loc_0 *****************
  4038 ;; Defined at:
  4039 ;;		line 226 in file "src/driver/lcd.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  code            1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  code            1   33[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:        1 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    6
  4060 ;; This function calls:
  4061 ;;		_lcd_set_com_seg
  4062 ;; This function is called by:
  4063 ;;		_lcd_show_chr
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text19
  4068  0011E6                     __ptext19:
  4069                           	opt stack 0
  4070  0011E6                     _lcd_disp_chr_loc_0:
  4071                           	opt stack 21
  4072                           
  4073                           ;incstack = 0
  4074                           ;lcd_disp_chr_loc_0@code stored from wreg
  4075  0011E6  6E22               	movwf	lcd_disp_chr_loc_0@code,c
  4076                           
  4077                           ;lcd.c: 228: lcd_set_com_seg(0,25,code&0x01);
  4078  0011E8  0E19               	movlw	25
  4079  0011EA  6E20               	movwf	lcd_set_com_seg@seg,c
  4080  0011EC  5022               	movf	lcd_disp_chr_loc_0@code,w,c
  4081  0011EE  0B01               	andlw	1
  4082  0011F0  6E21               	movwf	lcd_set_com_seg@show,c
  4083  0011F2  0E00               	movlw	0
  4084  0011F4  EC6B  F004         	call	_lcd_set_com_seg
  4085                           
  4086                           ;lcd.c: 229: lcd_set_com_seg(1,25,code&0x20);
  4087  0011F8  0E19               	movlw	25
  4088  0011FA  6E20               	movwf	lcd_set_com_seg@seg,c
  4089  0011FC  5022               	movf	lcd_disp_chr_loc_0@code,w,c
  4090  0011FE  0B20               	andlw	32
  4091  001200  6E21               	movwf	lcd_set_com_seg@show,c
  4092  001202  0E01               	movlw	1
  4093  001204  EC6B  F004         	call	_lcd_set_com_seg
  4094                           
  4095                           ;lcd.c: 230: lcd_set_com_seg(2,25,code&0x10);
  4096  001208  0E19               	movlw	25
  4097  00120A  6E20               	movwf	lcd_set_com_seg@seg,c
  4098  00120C  5022               	movf	lcd_disp_chr_loc_0@code,w,c
  4099  00120E  0B10               	andlw	16
  4100  001210  6E21               	movwf	lcd_set_com_seg@show,c
  4101  001212  0E02               	movlw	2
  4102  001214  EC6B  F004         	call	_lcd_set_com_seg
  4103                           
  4104                           ;lcd.c: 231: lcd_set_com_seg(3,25,code&0x08);
  4105  001218  0E19               	movlw	25
  4106  00121A  6E20               	movwf	lcd_set_com_seg@seg,c
  4107  00121C  5022               	movf	lcd_disp_chr_loc_0@code,w,c
  4108  00121E  0B08               	andlw	8
  4109  001220  6E21               	movwf	lcd_set_com_seg@show,c
  4110  001222  0E03               	movlw	3
  4111  001224  EC6B  F004         	call	_lcd_set_com_seg
  4112                           
  4113                           ;lcd.c: 233: lcd_set_com_seg(0,24,code&0x02);
  4114  001228  0E18               	movlw	24
  4115  00122A  6E20               	movwf	lcd_set_com_seg@seg,c
  4116  00122C  5022               	movf	lcd_disp_chr_loc_0@code,w,c
  4117  00122E  0B02               	andlw	2
  4118  001230  6E21               	movwf	lcd_set_com_seg@show,c
  4119  001232  0E00               	movlw	0
  4120  001234  EC6B  F004         	call	_lcd_set_com_seg
  4121                           
  4122                           ;lcd.c: 234: lcd_set_com_seg(1,24,code&0x40);
  4123  001238  0E18               	movlw	24
  4124  00123A  6E20               	movwf	lcd_set_com_seg@seg,c
  4125  00123C  5022               	movf	lcd_disp_chr_loc_0@code,w,c
  4126  00123E  0B40               	andlw	64
  4127  001240  6E21               	movwf	lcd_set_com_seg@show,c
  4128  001242  0E01               	movlw	1
  4129  001244  EC6B  F004         	call	_lcd_set_com_seg
  4130                           
  4131                           ;lcd.c: 235: lcd_set_com_seg(2,24,code&0x04);
  4132  001248  0E18               	movlw	24
  4133  00124A  6E20               	movwf	lcd_set_com_seg@seg,c
  4134  00124C  5022               	movf	lcd_disp_chr_loc_0@code,w,c
  4135  00124E  0B04               	andlw	4
  4136  001250  6E21               	movwf	lcd_set_com_seg@show,c
  4137  001252  0E02               	movlw	2
  4138  001254  EC6B  F004         	call	_lcd_set_com_seg
  4139  001258  0012               	return		;funcret
  4140  00125A                     __end_of_lcd_disp_chr_loc_0:
  4141                           	opt stack 0
  4142                           tblptru	equ	0xFF8
  4143                           tblptrh	equ	0xFF7
  4144                           tblptrl	equ	0xFF6
  4145                           tablat	equ	0xFF5
  4146                           prodh	equ	0xFF4
  4147                           prodl	equ	0xFF3
  4148                           indf0	equ	0xFEF
  4149                           postinc0	equ	0xFEE
  4150                           fsr0h	equ	0xFEA
  4151                           fsr0l	equ	0xFE9
  4152                           wreg	equ	0xFE8
  4153                           postdec1	equ	0xFE5
  4154                           plusw1	equ	0xFE3
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           indf2	equ	0xFDF
  4158                           plusw2	equ	0xFDB
  4159                           fsr2h	equ	0xFDA
  4160                           fsr2l	equ	0xFD9
  4161                           status	equ	0xFD8
  4162                           
  4163 ;; *************** function _lcd_show_dp *****************
  4164 ;; Defined at:
  4165 ;;		line 474 in file "src/driver/lcd.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  loc             1    wreg     unsigned char 
  4168 ;;  show            1   14[BANK0 ] unsigned char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  loc             1   15[BANK0 ] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4180 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;Total ram usage:        2 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    7
  4187 ;; This function calls:
  4188 ;;		_lcd_disp_dp_loc_0
  4189 ;;		_lcd_disp_dp_loc_1
  4190 ;;		_lcd_disp_dp_loc_2
  4191 ;; This function is called by:
  4192 ;;		_ui_disp_rtc_mm_ss
  4193 ;;		_ui_disp_clear_num_dp
  4194 ;;		_ui_disp_adj_xfloat_pt
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text20
  4199  0012C8                     __ptext20:
  4200                           	opt stack 0
  4201  0012C8                     _lcd_show_dp:
  4202                           	opt stack 22
  4203                           
  4204                           ;incstack = 0
  4205                           ;lcd_show_dp@loc stored from wreg
  4206  0012C8  0100               	movlb	0	; () banked
  4207  0012CA  6FC9               	movwf	lcd_show_dp@loc& (0+255),b
  4208                           
  4209                           ;lcd.c: 476: switch(loc){
  4210  0012CC  D01E               	goto	l6256
  4211  0012CE                     l6242:
  4212  0012CE  0100               	movlb	0	; () banked
  4213  0012D0  51C8               	movf	lcd_show_dp@show& (0+255),w,b
  4214  0012D2  ECC6  F00C         	call	_lcd_disp_dp_loc_0
  4215  0012D6  0012               	return	
  4216  0012D8                     l6244:
  4217  0012D8  0100               	movlb	0	; () banked
  4218  0012DA  51C8               	movf	lcd_show_dp@show& (0+255),w,b
  4219  0012DC  ECB2  F00C         	call	_lcd_disp_dp_loc_1
  4220  0012E0  0012               	return	
  4221  0012E2                     l6246:
  4222  0012E2  0100               	movlb	0	; () banked
  4223  0012E4  51C8               	movf	lcd_show_dp@show& (0+255),w,b
  4224  0012E6  EC9E  F00C         	call	_lcd_disp_dp_loc_2
  4225  0012EA  0012               	return	
  4226  0012EC                     l6248:
  4227  0012EC  0100               	movlb	0	; () banked
  4228  0012EE  51C8               	movf	lcd_show_dp@show& (0+255),w,b
  4229  0012F0  ECC6  F00C         	call	_lcd_disp_dp_loc_0
  4230  0012F4  0012               	return	
  4231  0012F6                     l6250:
  4232  0012F6  0100               	movlb	0	; () banked
  4233  0012F8  51C8               	movf	lcd_show_dp@show& (0+255),w,b
  4234  0012FA  ECB2  F00C         	call	_lcd_disp_dp_loc_1
  4235  0012FE  0012               	return	
  4236  001300                     l6252:
  4237  001300  0100               	movlb	0	; () banked
  4238  001302  51C8               	movf	lcd_show_dp@show& (0+255),w,b
  4239  001304  EC9E  F00C         	call	_lcd_disp_dp_loc_2
  4240                           
  4241                           ;lcd.c: 486: }
  4242                           
  4243                           ;lcd.c: 485: default:break;
  4244  001308  0012               	return	
  4245  00130A                     l6256:
  4246  00130A  0100               	movlb	0	; () banked
  4247  00130C  51C9               	movf	lcd_show_dp@loc& (0+255),w,b
  4248                           
  4249                           ; Switch size 1, requested type "space"
  4250                           ; Number of cases is 6, Range of values is 0 to 6
  4251                           ; switch strategies available:
  4252                           ; Name         Instructions Cycles
  4253                           ; simple_byte           19    10 (average)
  4254                           ;	Chosen strategy is simple_byte
  4255  00130E  0A00               	xorlw	0	; case 0
  4256  001310  B4D8               	btfsc	status,2,c
  4257  001312  D7DD               	goto	l6242
  4258  001314  0A01               	xorlw	1	; case 1
  4259  001316  B4D8               	btfsc	status,2,c
  4260  001318  D7DF               	goto	l6244
  4261  00131A  0A03               	xorlw	3	; case 2
  4262  00131C  B4D8               	btfsc	status,2,c
  4263  00131E  D7E1               	goto	l6246
  4264  001320  0A06               	xorlw	6	; case 4
  4265  001322  B4D8               	btfsc	status,2,c
  4266  001324  D7E3               	goto	l6248
  4267  001326  0A01               	xorlw	1	; case 5
  4268  001328  B4D8               	btfsc	status,2,c
  4269  00132A  D7E5               	goto	l6250
  4270  00132C  0A03               	xorlw	3	; case 6
  4271  00132E  A4D8               	btfss	status,2,c
  4272  001330  0012               	return	
  4273  001332  D7E6               	goto	l6252
  4274  001334                     __end_of_lcd_show_dp:
  4275                           	opt stack 0
  4276                           tblptru	equ	0xFF8
  4277                           tblptrh	equ	0xFF7
  4278                           tblptrl	equ	0xFF6
  4279                           tablat	equ	0xFF5
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           indf0	equ	0xFEF
  4283                           postinc0	equ	0xFEE
  4284                           fsr0h	equ	0xFEA
  4285                           fsr0l	equ	0xFE9
  4286                           wreg	equ	0xFE8
  4287                           postdec1	equ	0xFE5
  4288                           plusw1	equ	0xFE3
  4289                           fsr1h	equ	0xFE2
  4290                           fsr1l	equ	0xFE1
  4291                           indf2	equ	0xFDF
  4292                           plusw2	equ	0xFDB
  4293                           fsr2h	equ	0xFDA
  4294                           fsr2l	equ	0xFD9
  4295                           status	equ	0xFD8
  4296                           
  4297 ;; *************** function _lcd_disp_dp_loc_2 *****************
  4298 ;; Defined at:
  4299 ;;		line 276 in file "src/driver/lcd.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  dp              1    wreg     unsigned char 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  dp              1   33[COMRAM] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        1 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    6
  4320 ;; This function calls:
  4321 ;;		_lcd_set_com_seg
  4322 ;; This function is called by:
  4323 ;;		_lcd_show_dp
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text21
  4328  00193C                     __ptext21:
  4329                           	opt stack 0
  4330  00193C                     _lcd_disp_dp_loc_2:
  4331                           	opt stack 22
  4332                           
  4333                           ;incstack = 0
  4334                           ;lcd_disp_dp_loc_2@dp stored from wreg
  4335  00193C  6E22               	movwf	lcd_disp_dp_loc_2@dp,c
  4336                           
  4337                           ;lcd.c: 278: if(dp)
  4338  00193E  5022               	movf	lcd_disp_dp_loc_2@dp,w,c
  4339  001940  B4D8               	btfsc	status,2,c
  4340  001942  D008               	goto	l6140
  4341                           
  4342                           ;lcd.c: 279: lcd_set_com_seg(3,20,0x80);
  4343  001944  0E14               	movlw	20
  4344  001946  6E20               	movwf	lcd_set_com_seg@seg,c
  4345  001948  0E80               	movlw	128
  4346  00194A  6E21               	movwf	lcd_set_com_seg@show,c
  4347  00194C  0E03               	movlw	3
  4348  00194E  EC6B  F004         	call	_lcd_set_com_seg
  4349  001952  0012               	return	
  4350  001954                     l6140:
  4351                           
  4352                           ;lcd.c: 280: else
  4353                           ;lcd.c: 281: lcd_set_com_seg(3,20,0);
  4354  001954  0E14               	movlw	20
  4355  001956  6E20               	movwf	lcd_set_com_seg@seg,c
  4356  001958  0E00               	movlw	0
  4357  00195A  6E21               	movwf	lcd_set_com_seg@show,c
  4358  00195C  0E03               	movlw	3
  4359  00195E  EC6B  F004         	call	_lcd_set_com_seg
  4360  001962  0012               	return	
  4361  001964                     __end_of_lcd_disp_dp_loc_2:
  4362                           	opt stack 0
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           prodh	equ	0xFF4
  4368                           prodl	equ	0xFF3
  4369                           indf0	equ	0xFEF
  4370                           postinc0	equ	0xFEE
  4371                           fsr0h	equ	0xFEA
  4372                           fsr0l	equ	0xFE9
  4373                           wreg	equ	0xFE8
  4374                           postdec1	equ	0xFE5
  4375                           plusw1	equ	0xFE3
  4376                           fsr1h	equ	0xFE2
  4377                           fsr1l	equ	0xFE1
  4378                           indf2	equ	0xFDF
  4379                           plusw2	equ	0xFDB
  4380                           fsr2h	equ	0xFDA
  4381                           fsr2l	equ	0xFD9
  4382                           status	equ	0xFD8
  4383                           
  4384 ;; *************** function _lcd_disp_dp_loc_1 *****************
  4385 ;; Defined at:
  4386 ;;		line 257 in file "src/driver/lcd.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  dp              1    wreg     unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  dp              1   33[COMRAM] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:        1 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    6
  4407 ;; This function calls:
  4408 ;;		_lcd_set_com_seg
  4409 ;; This function is called by:
  4410 ;;		_lcd_show_dp
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text22
  4415  001964                     __ptext22:
  4416                           	opt stack 0
  4417  001964                     _lcd_disp_dp_loc_1:
  4418                           	opt stack 22
  4419                           
  4420                           ;incstack = 0
  4421                           ;lcd_disp_dp_loc_1@dp stored from wreg
  4422  001964  6E22               	movwf	lcd_disp_dp_loc_1@dp,c
  4423                           
  4424                           ;lcd.c: 259: if(dp)
  4425  001966  5022               	movf	lcd_disp_dp_loc_1@dp,w,c
  4426  001968  B4D8               	btfsc	status,2,c
  4427  00196A  D008               	goto	l6134
  4428                           
  4429                           ;lcd.c: 260: lcd_set_com_seg(3,22,0x80);
  4430  00196C  0E16               	movlw	22
  4431  00196E  6E20               	movwf	lcd_set_com_seg@seg,c
  4432  001970  0E80               	movlw	128
  4433  001972  6E21               	movwf	lcd_set_com_seg@show,c
  4434  001974  0E03               	movlw	3
  4435  001976  EC6B  F004         	call	_lcd_set_com_seg
  4436  00197A  0012               	return	
  4437  00197C                     l6134:
  4438                           
  4439                           ;lcd.c: 261: else
  4440                           ;lcd.c: 262: lcd_set_com_seg(3,22,0);
  4441  00197C  0E16               	movlw	22
  4442  00197E  6E20               	movwf	lcd_set_com_seg@seg,c
  4443  001980  0E00               	movlw	0
  4444  001982  6E21               	movwf	lcd_set_com_seg@show,c
  4445  001984  0E03               	movlw	3
  4446  001986  EC6B  F004         	call	_lcd_set_com_seg
  4447  00198A  0012               	return	
  4448  00198C                     __end_of_lcd_disp_dp_loc_1:
  4449                           	opt stack 0
  4450                           tblptru	equ	0xFF8
  4451                           tblptrh	equ	0xFF7
  4452                           tblptrl	equ	0xFF6
  4453                           tablat	equ	0xFF5
  4454                           prodh	equ	0xFF4
  4455                           prodl	equ	0xFF3
  4456                           indf0	equ	0xFEF
  4457                           postinc0	equ	0xFEE
  4458                           fsr0h	equ	0xFEA
  4459                           fsr0l	equ	0xFE9
  4460                           wreg	equ	0xFE8
  4461                           postdec1	equ	0xFE5
  4462                           plusw1	equ	0xFE3
  4463                           fsr1h	equ	0xFE2
  4464                           fsr1l	equ	0xFE1
  4465                           indf2	equ	0xFDF
  4466                           plusw2	equ	0xFDB
  4467                           fsr2h	equ	0xFDA
  4468                           fsr2l	equ	0xFD9
  4469                           status	equ	0xFD8
  4470                           
  4471 ;; *************** function _lcd_disp_dp_loc_0 *****************
  4472 ;; Defined at:
  4473 ;;		line 238 in file "src/driver/lcd.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  dp              1    wreg     unsigned char 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  dp              1   33[COMRAM] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;Total ram usage:        1 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    6
  4494 ;; This function calls:
  4495 ;;		_lcd_set_com_seg
  4496 ;; This function is called by:
  4497 ;;		_lcd_show_dp
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text23
  4502  00198C                     __ptext23:
  4503                           	opt stack 0
  4504  00198C                     _lcd_disp_dp_loc_0:
  4505                           	opt stack 22
  4506                           
  4507                           ;incstack = 0
  4508                           ;lcd_disp_dp_loc_0@dp stored from wreg
  4509  00198C  6E22               	movwf	lcd_disp_dp_loc_0@dp,c
  4510                           
  4511                           ;lcd.c: 240: if(dp)
  4512  00198E  5022               	movf	lcd_disp_dp_loc_0@dp,w,c
  4513  001990  B4D8               	btfsc	status,2,c
  4514  001992  D008               	goto	l6128
  4515                           
  4516                           ;lcd.c: 241: lcd_set_com_seg(3,24,0x80);
  4517  001994  0E18               	movlw	24
  4518  001996  6E20               	movwf	lcd_set_com_seg@seg,c
  4519  001998  0E80               	movlw	128
  4520  00199A  6E21               	movwf	lcd_set_com_seg@show,c
  4521  00199C  0E03               	movlw	3
  4522  00199E  EC6B  F004         	call	_lcd_set_com_seg
  4523  0019A2  0012               	return	
  4524  0019A4                     l6128:
  4525                           
  4526                           ;lcd.c: 242: else
  4527                           ;lcd.c: 243: lcd_set_com_seg(3,24,0);
  4528  0019A4  0E18               	movlw	24
  4529  0019A6  6E20               	movwf	lcd_set_com_seg@seg,c
  4530  0019A8  0E00               	movlw	0
  4531  0019AA  6E21               	movwf	lcd_set_com_seg@show,c
  4532  0019AC  0E03               	movlw	3
  4533  0019AE  EC6B  F004         	call	_lcd_set_com_seg
  4534  0019B2  0012               	return	
  4535  0019B4                     __end_of_lcd_disp_dp_loc_0:
  4536                           	opt stack 0
  4537                           tblptru	equ	0xFF8
  4538                           tblptrh	equ	0xFF7
  4539                           tblptrl	equ	0xFF6
  4540                           tablat	equ	0xFF5
  4541                           prodh	equ	0xFF4
  4542                           prodl	equ	0xFF3
  4543                           indf0	equ	0xFEF
  4544                           postinc0	equ	0xFEE
  4545                           fsr0h	equ	0xFEA
  4546                           fsr0l	equ	0xFE9
  4547                           wreg	equ	0xFE8
  4548                           postdec1	equ	0xFE5
  4549                           plusw1	equ	0xFE3
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           indf2	equ	0xFDF
  4553                           plusw2	equ	0xFDB
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function _lcd_disp_refresh *****************
  4559 ;; Defined at:
  4560 ;;		line 547 in file "src/driver/lcd.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		None
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    4
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_ui_disp_start_cs600
  4585 ;;		_ui_disp_rtc_mm_ss
  4586 ;;		_ui_disp_all_on
  4587 ;;		_ui_disp_all_off
  4588 ;;		_ui_disp_adj_xfloat_pt
  4589 ;;		_ui_disp_adj_xfixed_pt
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text24
  4594  0013FC                     __ptext24:
  4595                           	opt stack 0
  4596  0013FC                     _lcd_disp_refresh:
  4597                           	opt stack 25
  4598                           
  4599                           ;lcd.c: 550: LCDDATA0=pLCD[0];
  4600                           
  4601                           ;incstack = 0
  4602  0013FC  C060  FFBB         	movff	_pLCD,4027	;volatile
  4603                           
  4604                           ;lcd.c: 551: LCDDATA1=pLCD[1];
  4605  001400  C061  FFBC         	movff	_pLCD+1,4028	;volatile
  4606                           
  4607                           ;lcd.c: 552: LCDDATA2=pLCD[2];
  4608  001404  C062  FFBD         	movff	_pLCD+2,4029	;volatile
  4609                           
  4610                           ;lcd.c: 553: LCDDATA3=pLCD[3];
  4611  001408  C063  FFBE         	movff	_pLCD+3,4030	;volatile
  4612                           
  4613                           ;lcd.c: 554: LCDDATA4=pLCD[4];
  4614  00140C  C064  FFBF         	movff	_pLCD+4,4031	;volatile
  4615                           
  4616                           ;lcd.c: 555: LCDDATA5=pLCD[5];
  4617  001410  C065  FF6B         	movff	_pLCD+5,3947	;volatile
  4618                           
  4619                           ;lcd.c: 556: LCDDATA6=pLCD[6];
  4620  001414  C066  FF6C         	movff	_pLCD+6,3948	;volatile
  4621                           
  4622                           ;lcd.c: 557: LCDDATA7=pLCD[7];
  4623  001418  C067  FF6D         	movff	_pLCD+7,3949	;volatile
  4624                           
  4625                           ;lcd.c: 558: LCDDATA8=pLCD[8];
  4626  00141C  C068  FF6E         	movff	_pLCD+8,3950	;volatile
  4627                           
  4628                           ;lcd.c: 559: LCDDATA9=pLCD[9];
  4629  001420  C069  FF6F         	movff	_pLCD+9,3951	;volatile
  4630                           
  4631                           ;lcd.c: 561: LCDDATA10=pLCD[10];
  4632  001424  C06A  FF70         	movff	_pLCD+10,3952	;volatile
  4633                           
  4634                           ;lcd.c: 562: LCDDATA11=pLCD[11];
  4635  001428  C06B  FF71         	movff	_pLCD+11,3953	;volatile
  4636                           
  4637                           ;lcd.c: 563: LCDDATA12=pLCD[12];
  4638  00142C  C06C  FF72         	movff	_pLCD+12,3954	;volatile
  4639                           
  4640                           ;lcd.c: 564: LCDDATA13=pLCD[13];
  4641  001430  C06D  FF73         	movff	_pLCD+13,3955	;volatile
  4642                           
  4643                           ;lcd.c: 565: LCDDATA14=pLCD[14];
  4644  001434  C06E  FF74         	movff	_pLCD+14,3956	;volatile
  4645                           
  4646                           ;lcd.c: 566: LCDDATA15=pLCD[15];
  4647  001438  C06F  FF75         	movff	_pLCD+15,3957	;volatile
  4648                           
  4649                           ;lcd.c: 567: LCDDATA16=pLCD[16];
  4650  00143C  C070  FF76         	movff	_pLCD+16,3958	;volatile
  4651                           
  4652                           ;lcd.c: 568: LCDDATA17=pLCD[17];
  4653  001440  C071  FF77         	movff	_pLCD+17,3959	;volatile
  4654                           
  4655                           ;lcd.c: 569: LCDDATA18=pLCD[18];
  4656  001444  C072  FF78         	movff	_pLCD+18,3960	;volatile
  4657                           
  4658                           ;lcd.c: 570: LCDDATA19=pLCD[19];
  4659  001448  C073  FF79         	movff	_pLCD+19,3961	;volatile
  4660                           
  4661                           ;lcd.c: 572: LCDDATA20=pLCD[20];
  4662  00144C  C074  FF7A         	movff	_pLCD+20,3962	;volatile
  4663                           
  4664                           ;lcd.c: 573: LCDDATA21=pLCD[21];
  4665  001450  C075  FF7B         	movff	_pLCD+21,3963	;volatile
  4666                           
  4667                           ;lcd.c: 574: LCDDATA22=pLCD[22];
  4668  001454  C076  FF7C         	movff	_pLCD+22,3964	;volatile
  4669                           
  4670                           ;lcd.c: 575: LCDDATA23=pLCD[23];
  4671  001458  C077  FF7D         	movff	_pLCD+23,3965	;volatile
  4672  00145C  0012               	return		;funcret
  4673  00145E                     __end_of_lcd_disp_refresh:
  4674                           	opt stack 0
  4675                           tblptru	equ	0xFF8
  4676                           tblptrh	equ	0xFF7
  4677                           tblptrl	equ	0xFF6
  4678                           tablat	equ	0xFF5
  4679                           prodh	equ	0xFF4
  4680                           prodl	equ	0xFF3
  4681                           indf0	equ	0xFEF
  4682                           postinc0	equ	0xFEE
  4683                           fsr0h	equ	0xFEA
  4684                           fsr0l	equ	0xFE9
  4685                           wreg	equ	0xFE8
  4686                           postdec1	equ	0xFE5
  4687                           plusw1	equ	0xFE3
  4688                           fsr1h	equ	0xFE2
  4689                           fsr1l	equ	0xFE1
  4690                           indf2	equ	0xFDF
  4691                           plusw2	equ	0xFDB
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8
  4695                           
  4696 ;; *************** function _lcd_disp_level *****************
  4697 ;; Defined at:
  4698 ;;		line 118 in file "src/driver/lcd.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  level           1    wreg     unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  level           1   16[BANK0 ] unsigned char 
  4703 ;;  i               1   17[BANK0 ] unsigned char 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;Total ram usage:        2 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    7
  4720 ;; This function calls:
  4721 ;;		_lcd_disp_level_bar
  4722 ;; This function is called by:
  4723 ;;		_ui_disp_start_cs600
  4724 ;;		_ui_disp_rtc_mm_ss
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text25
  4730  001576                     __ptext25:
  4731                           	opt stack 0
  4732  001576                     _lcd_disp_level:
  4733                           	opt stack 22
  4734                           
  4735                           ;incstack = 0
  4736                           ;lcd_disp_level@level stored from wreg
  4737  001576  0100               	movlb	0	; () banked
  4738  001578  6FCA               	movwf	lcd_disp_level@level& (0+255),b
  4739                           
  4740                           ;lcd.c: 120: uint8_t i;
  4741                           ;lcd.c: 121: if(level>=99)level=99;
  4742  00157A  0E62               	movlw	98
  4743  00157C  0100               	movlb	0	; () banked
  4744  00157E  65CA               	cpfsgt	lcd_disp_level@level& (0+255),b
  4745  001580  D003               	goto	l6214
  4746                           
  4747                           ; BSR set to: 0
  4748  001582  0E63               	movlw	99
  4749  001584  0100               	movlb	0	; () banked
  4750  001586  6FCA               	movwf	lcd_disp_level@level& (0+255),b
  4751  001588                     l6214:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;lcd.c: 122: level/=2;
  4755  001588  0100               	movlb	0	; () banked
  4756  00158A  90D8               	bcf	status,0,c
  4757  00158C  33CA               	rrcf	lcd_disp_level@level& (0+255),f,b
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;lcd.c: 123: for(i=0;i<level;i++){
  4761  00158E  0E00               	movlw	0
  4762  001590  0100               	movlb	0	; () banked
  4763  001592  6FCB               	movwf	lcd_disp_level@i& (0+255),b
  4764  001594  D008               	goto	l6222
  4765  001596                     l6218:
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;lcd.c: 124: lcd_disp_level_bar(i,1);
  4769  001596  0E01               	movlw	1
  4770  001598  6E22               	movwf	lcd_disp_level_bar@show,c
  4771  00159A  0100               	movlb	0	; () banked
  4772  00159C  51CB               	movf	lcd_disp_level@i& (0+255),w,b
  4773  00159E  EC70  F000         	call	_lcd_disp_level_bar
  4774  0015A2  0100               	movlb	0	; () banked
  4775  0015A4  2BCB               	incf	lcd_disp_level@i& (0+255),f,b
  4776  0015A6                     l6222:
  4777                           
  4778                           ; BSR set to: 0
  4779  0015A6  0100               	movlb	0	; () banked
  4780  0015A8  51CA               	movf	lcd_disp_level@level& (0+255),w,b
  4781  0015AA  0100               	movlb	0	; () banked
  4782  0015AC  5DCB               	subwf	lcd_disp_level@i& (0+255),w,b
  4783  0015AE  A0D8               	btfss	status,0,c
  4784  0015B0  D7F2               	goto	l6218
  4785  0015B2                     l6224:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;lcd.c: 125: }
  4789                           ;lcd.c: 126: for(;i<50;i++){
  4790  0015B2  0E31               	movlw	49
  4791  0015B4  0100               	movlb	0	; () banked
  4792  0015B6  65CB               	cpfsgt	lcd_disp_level@i& (0+255),b
  4793  0015B8  D001               	goto	l6228
  4794  0015BA  0012               	return	
  4795  0015BC                     l6228:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;lcd.c: 127: lcd_disp_level_bar(i,0);
  4799  0015BC  0E00               	movlw	0
  4800  0015BE  6E22               	movwf	lcd_disp_level_bar@show,c
  4801  0015C0  0100               	movlb	0	; () banked
  4802  0015C2  51CB               	movf	lcd_disp_level@i& (0+255),w,b
  4803  0015C4  EC70  F000         	call	_lcd_disp_level_bar
  4804  0015C8  0100               	movlb	0	; () banked
  4805  0015CA  2BCB               	incf	lcd_disp_level@i& (0+255),f,b
  4806  0015CC  D7F2               	goto	l6224
  4807  0015CE                     __end_of_lcd_disp_level:
  4808                           	opt stack 0
  4809                           tblptru	equ	0xFF8
  4810                           tblptrh	equ	0xFF7
  4811                           tblptrl	equ	0xFF6
  4812                           tablat	equ	0xFF5
  4813                           prodh	equ	0xFF4
  4814                           prodl	equ	0xFF3
  4815                           indf0	equ	0xFEF
  4816                           postinc0	equ	0xFEE
  4817                           fsr0h	equ	0xFEA
  4818                           fsr0l	equ	0xFE9
  4819                           wreg	equ	0xFE8
  4820                           postdec1	equ	0xFE5
  4821                           plusw1	equ	0xFE3
  4822                           fsr1h	equ	0xFE2
  4823                           fsr1l	equ	0xFE1
  4824                           indf2	equ	0xFDF
  4825                           plusw2	equ	0xFDB
  4826                           fsr2h	equ	0xFDA
  4827                           fsr2l	equ	0xFD9
  4828                           status	equ	0xFD8
  4829                           
  4830 ;; *************** function _lcd_disp_level_bar *****************
  4831 ;; Defined at:
  4832 ;;		line 46 in file "src/driver/lcd.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  bar             1    wreg     unsigned char 
  4835 ;;  show            1   33[COMRAM] unsigned char 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  bar             1   15[BANK0 ] unsigned char 
  4838 ;;  __bar           1   14[BANK0 ] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4848 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;Total ram usage:        3 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    6
  4855 ;; This function calls:
  4856 ;;		_lcd_set_com_seg
  4857 ;; This function is called by:
  4858 ;;		_lcd_disp_level
  4859 ;;		_lcd_disp_level_off
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text26
  4864  0000E0                     __ptext26:
  4865                           	opt stack 0
  4866  0000E0                     _lcd_disp_level_bar:
  4867                           	opt stack 22
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;incstack = 0
  4871                           ;lcd_disp_level_bar@bar stored from wreg
  4872  0000E0  0100               	movlb	0	; () banked
  4873  0000E2  6FC9               	movwf	lcd_disp_level_bar@bar& (0+255),b
  4874                           
  4875                           ;lcd.c: 49: uint8_t __bar;
  4876                           ;lcd.c: 50: if(bar>49)return;
  4877  0000E4  0E31               	movlw	49
  4878  0000E6  0100               	movlb	0	; () banked
  4879  0000E8  65C9               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
  4880  0000EA  D001               	goto	l6018
  4881  0000EC  0012               	return	
  4882  0000EE                     l6018:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;lcd.c: 51: __bar=49-bar;
  4886  0000EE  0100               	movlb	0	; () banked
  4887  0000F0  51C9               	movf	lcd_disp_level_bar@bar& (0+255),w,b
  4888  0000F2  0800               	sublw	0
  4889  0000F4  0F31               	addlw	49
  4890  0000F6  0100               	movlb	0	; () banked
  4891  0000F8  6FC8               	movwf	lcd_disp_level_bar@__bar& (0+255),b
  4892                           
  4893                           ;lcd.c: 52: switch(__bar){
  4894  0000FA  D190               	goto	l6122
  4895  0000FC                     l6020:
  4896                           
  4897                           ; BSR set to: 0
  4898  0000FC  0E2E               	movlw	46
  4899  0000FE  6E20               	movwf	lcd_set_com_seg@seg,c
  4900  000100  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4901  000104  0E00               	movlw	0
  4902  000106  EC6B  F004         	call	_lcd_set_com_seg
  4903  00010A  0012               	return	
  4904  00010C                     l6022:
  4905  00010C  0E2E               	movlw	46
  4906  00010E  6E20               	movwf	lcd_set_com_seg@seg,c
  4907  000110  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4908  000114  0E01               	movlw	1
  4909  000116  EC6B  F004         	call	_lcd_set_com_seg
  4910  00011A  0012               	return	
  4911  00011C                     l6024:
  4912  00011C  0E2E               	movlw	46
  4913  00011E  6E20               	movwf	lcd_set_com_seg@seg,c
  4914  000120  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4915  000124  0E02               	movlw	2
  4916  000126  EC6B  F004         	call	_lcd_set_com_seg
  4917  00012A  0012               	return	
  4918  00012C                     l6026:
  4919  00012C  0E2E               	movlw	46
  4920  00012E  6E20               	movwf	lcd_set_com_seg@seg,c
  4921  000130  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4922  000134  0E03               	movlw	3
  4923  000136  EC6B  F004         	call	_lcd_set_com_seg
  4924  00013A  0012               	return	
  4925  00013C                     l6028:
  4926  00013C  0E2F               	movlw	47
  4927  00013E  6E20               	movwf	lcd_set_com_seg@seg,c
  4928  000140  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4929  000144  0E03               	movlw	3
  4930  000146  EC6B  F004         	call	_lcd_set_com_seg
  4931  00014A  0012               	return	
  4932  00014C                     l6030:
  4933  00014C  0E2F               	movlw	47
  4934  00014E  6E20               	movwf	lcd_set_com_seg@seg,c
  4935  000150  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4936  000154  0E02               	movlw	2
  4937  000156  EC6B  F004         	call	_lcd_set_com_seg
  4938  00015A  0012               	return	
  4939  00015C                     l6032:
  4940  00015C  0E2F               	movlw	47
  4941  00015E  6E20               	movwf	lcd_set_com_seg@seg,c
  4942  000160  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4943  000164  0E01               	movlw	1
  4944  000166  EC6B  F004         	call	_lcd_set_com_seg
  4945  00016A  0012               	return	
  4946  00016C                     l6034:
  4947  00016C  0E2F               	movlw	47
  4948  00016E  6E20               	movwf	lcd_set_com_seg@seg,c
  4949  000170  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4950  000174  0E00               	movlw	0
  4951  000176  EC6B  F004         	call	_lcd_set_com_seg
  4952  00017A  0012               	return	
  4953  00017C                     l6036:
  4954  00017C  0E1F               	movlw	31
  4955  00017E  6E20               	movwf	lcd_set_com_seg@seg,c
  4956  000180  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4957  000184  0E00               	movlw	0
  4958  000186  EC6B  F004         	call	_lcd_set_com_seg
  4959  00018A  0012               	return	
  4960  00018C                     l6038:
  4961  00018C  0E1F               	movlw	31
  4962  00018E  6E20               	movwf	lcd_set_com_seg@seg,c
  4963  000190  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4964  000194  0E01               	movlw	1
  4965  000196  EC6B  F004         	call	_lcd_set_com_seg
  4966  00019A  0012               	return	
  4967  00019C                     l6040:
  4968  00019C  0E1F               	movlw	31
  4969  00019E  6E20               	movwf	lcd_set_com_seg@seg,c
  4970  0001A0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4971  0001A4  0E02               	movlw	2
  4972  0001A6  EC6B  F004         	call	_lcd_set_com_seg
  4973  0001AA  0012               	return	
  4974  0001AC                     l6042:
  4975  0001AC  0E1F               	movlw	31
  4976  0001AE  6E20               	movwf	lcd_set_com_seg@seg,c
  4977  0001B0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4978  0001B4  0E03               	movlw	3
  4979  0001B6  EC6B  F004         	call	_lcd_set_com_seg
  4980  0001BA  0012               	return	
  4981  0001BC                     l6044:
  4982  0001BC  0E00               	movlw	0
  4983  0001BE  6E20               	movwf	lcd_set_com_seg@seg,c
  4984  0001C0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4985  0001C4  0E03               	movlw	3
  4986  0001C6  EC6B  F004         	call	_lcd_set_com_seg
  4987  0001CA  0012               	return	
  4988  0001CC                     l6046:
  4989  0001CC  0E00               	movlw	0
  4990  0001CE  6E20               	movwf	lcd_set_com_seg@seg,c
  4991  0001D0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4992  0001D4  0E02               	movlw	2
  4993  0001D6  EC6B  F004         	call	_lcd_set_com_seg
  4994  0001DA  0012               	return	
  4995  0001DC                     l6048:
  4996  0001DC  0E00               	movlw	0
  4997  0001DE  6E20               	movwf	lcd_set_com_seg@seg,c
  4998  0001E0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4999  0001E4  0E01               	movlw	1
  5000  0001E6  EC6B  F004         	call	_lcd_set_com_seg
  5001  0001EA  0012               	return	
  5002  0001EC                     l6050:
  5003  0001EC  0E00               	movlw	0
  5004  0001EE  6E20               	movwf	lcd_set_com_seg@seg,c
  5005  0001F0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5006  0001F4  0E00               	movlw	0
  5007  0001F6  EC6B  F004         	call	_lcd_set_com_seg
  5008  0001FA  0012               	return	
  5009  0001FC                     l6052:
  5010  0001FC  0E01               	movlw	1
  5011  0001FE  6E20               	movwf	lcd_set_com_seg@seg,c
  5012  000200  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5013  000204  0E00               	movlw	0
  5014  000206  EC6B  F004         	call	_lcd_set_com_seg
  5015  00020A  0012               	return	
  5016  00020C                     l6054:
  5017  00020C  0E01               	movlw	1
  5018  00020E  6E20               	movwf	lcd_set_com_seg@seg,c
  5019  000210  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5020  000214  0E01               	movlw	1
  5021  000216  EC6B  F004         	call	_lcd_set_com_seg
  5022  00021A  0012               	return	
  5023  00021C                     l6056:
  5024  00021C  0E01               	movlw	1
  5025  00021E  6E20               	movwf	lcd_set_com_seg@seg,c
  5026  000220  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5027  000224  0E02               	movlw	2
  5028  000226  EC6B  F004         	call	_lcd_set_com_seg
  5029  00022A  0012               	return	
  5030  00022C                     l6058:
  5031  00022C  0E01               	movlw	1
  5032  00022E  6E20               	movwf	lcd_set_com_seg@seg,c
  5033  000230  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5034  000234  0E03               	movlw	3
  5035  000236  EC6B  F004         	call	_lcd_set_com_seg
  5036  00023A  0012               	return	
  5037  00023C                     l6060:
  5038  00023C  0E02               	movlw	2
  5039  00023E  6E20               	movwf	lcd_set_com_seg@seg,c
  5040  000240  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5041  000244  0E03               	movlw	3
  5042  000246  EC6B  F004         	call	_lcd_set_com_seg
  5043  00024A  0012               	return	
  5044  00024C                     l6062:
  5045  00024C  0E02               	movlw	2
  5046  00024E  6E20               	movwf	lcd_set_com_seg@seg,c
  5047  000250  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5048  000254  0E02               	movlw	2
  5049  000256  EC6B  F004         	call	_lcd_set_com_seg
  5050  00025A  0012               	return	
  5051  00025C                     l6064:
  5052  00025C  0E02               	movlw	2
  5053  00025E  6E20               	movwf	lcd_set_com_seg@seg,c
  5054  000260  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5055  000264  0E01               	movlw	1
  5056  000266  EC6B  F004         	call	_lcd_set_com_seg
  5057  00026A  0012               	return	
  5058  00026C                     l6066:
  5059  00026C  0E02               	movlw	2
  5060  00026E  6E20               	movwf	lcd_set_com_seg@seg,c
  5061  000270  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5062  000274  0E00               	movlw	0
  5063  000276  EC6B  F004         	call	_lcd_set_com_seg
  5064  00027A  0012               	return	
  5065  00027C                     l6068:
  5066  00027C  0E03               	movlw	3
  5067  00027E  6E20               	movwf	lcd_set_com_seg@seg,c
  5068  000280  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5069  000284  0E00               	movlw	0
  5070  000286  EC6B  F004         	call	_lcd_set_com_seg
  5071  00028A  0012               	return	
  5072  00028C                     l6070:
  5073  00028C  0E03               	movlw	3
  5074  00028E  6E20               	movwf	lcd_set_com_seg@seg,c
  5075  000290  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5076  000294  0E01               	movlw	1
  5077  000296  EC6B  F004         	call	_lcd_set_com_seg
  5078  00029A  0012               	return	
  5079  00029C                     l6072:
  5080  00029C  0E03               	movlw	3
  5081  00029E  6E20               	movwf	lcd_set_com_seg@seg,c
  5082  0002A0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5083  0002A4  0E02               	movlw	2
  5084  0002A6  EC6B  F004         	call	_lcd_set_com_seg
  5085  0002AA  0012               	return	
  5086  0002AC                     l6074:
  5087  0002AC  0E03               	movlw	3
  5088  0002AE  6E20               	movwf	lcd_set_com_seg@seg,c
  5089  0002B0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5090  0002B4  0E03               	movlw	3
  5091  0002B6  EC6B  F004         	call	_lcd_set_com_seg
  5092  0002BA  0012               	return	
  5093  0002BC                     l6076:
  5094  0002BC  0E04               	movlw	4
  5095  0002BE  6E20               	movwf	lcd_set_com_seg@seg,c
  5096  0002C0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5097  0002C4  0E03               	movlw	3
  5098  0002C6  EC6B  F004         	call	_lcd_set_com_seg
  5099  0002CA  0012               	return	
  5100  0002CC                     l6078:
  5101  0002CC  0E04               	movlw	4
  5102  0002CE  6E20               	movwf	lcd_set_com_seg@seg,c
  5103  0002D0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5104  0002D4  0E02               	movlw	2
  5105  0002D6  EC6B  F004         	call	_lcd_set_com_seg
  5106  0002DA  0012               	return	
  5107  0002DC                     l6080:
  5108  0002DC  0E04               	movlw	4
  5109  0002DE  6E20               	movwf	lcd_set_com_seg@seg,c
  5110  0002E0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5111  0002E4  0E01               	movlw	1
  5112  0002E6  EC6B  F004         	call	_lcd_set_com_seg
  5113  0002EA  0012               	return	
  5114  0002EC                     l6082:
  5115  0002EC  0E04               	movlw	4
  5116  0002EE  6E20               	movwf	lcd_set_com_seg@seg,c
  5117  0002F0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5118  0002F4  0E00               	movlw	0
  5119  0002F6  EC6B  F004         	call	_lcd_set_com_seg
  5120  0002FA  0012               	return	
  5121  0002FC                     l6084:
  5122  0002FC  0E05               	movlw	5
  5123  0002FE  6E20               	movwf	lcd_set_com_seg@seg,c
  5124  000300  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5125  000304  0E00               	movlw	0
  5126  000306  EC6B  F004         	call	_lcd_set_com_seg
  5127  00030A  0012               	return	
  5128  00030C                     l6086:
  5129  00030C  0E05               	movlw	5
  5130  00030E  6E20               	movwf	lcd_set_com_seg@seg,c
  5131  000310  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5132  000314  0E01               	movlw	1
  5133  000316  EC6B  F004         	call	_lcd_set_com_seg
  5134  00031A  0012               	return	
  5135  00031C                     l6088:
  5136  00031C  0E05               	movlw	5
  5137  00031E  6E20               	movwf	lcd_set_com_seg@seg,c
  5138  000320  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5139  000324  0E02               	movlw	2
  5140  000326  EC6B  F004         	call	_lcd_set_com_seg
  5141  00032A  0012               	return	
  5142  00032C                     l6090:
  5143  00032C  0E05               	movlw	5
  5144  00032E  6E20               	movwf	lcd_set_com_seg@seg,c
  5145  000330  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5146  000334  0E03               	movlw	3
  5147  000336  EC6B  F004         	call	_lcd_set_com_seg
  5148  00033A  0012               	return	
  5149  00033C                     l6092:
  5150  00033C  0E06               	movlw	6
  5151  00033E  6E20               	movwf	lcd_set_com_seg@seg,c
  5152  000340  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5153  000344  0E03               	movlw	3
  5154  000346  EC6B  F004         	call	_lcd_set_com_seg
  5155  00034A  0012               	return	
  5156  00034C                     l6094:
  5157  00034C  0E06               	movlw	6
  5158  00034E  6E20               	movwf	lcd_set_com_seg@seg,c
  5159  000350  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5160  000354  0E02               	movlw	2
  5161  000356  EC6B  F004         	call	_lcd_set_com_seg
  5162  00035A  0012               	return	
  5163  00035C                     l6096:
  5164  00035C  0E06               	movlw	6
  5165  00035E  6E20               	movwf	lcd_set_com_seg@seg,c
  5166  000360  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5167  000364  0E01               	movlw	1
  5168  000366  EC6B  F004         	call	_lcd_set_com_seg
  5169  00036A  0012               	return	
  5170  00036C                     l6098:
  5171  00036C  0E06               	movlw	6
  5172  00036E  6E20               	movwf	lcd_set_com_seg@seg,c
  5173  000370  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5174  000374  0E00               	movlw	0
  5175  000376  EC6B  F004         	call	_lcd_set_com_seg
  5176  00037A  0012               	return	
  5177  00037C                     l6100:
  5178  00037C  0E07               	movlw	7
  5179  00037E  6E20               	movwf	lcd_set_com_seg@seg,c
  5180  000380  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5181  000384  0E00               	movlw	0
  5182  000386  EC6B  F004         	call	_lcd_set_com_seg
  5183  00038A  0012               	return	
  5184  00038C                     l6102:
  5185  00038C  0E07               	movlw	7
  5186  00038E  6E20               	movwf	lcd_set_com_seg@seg,c
  5187  000390  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5188  000394  0E01               	movlw	1
  5189  000396  EC6B  F004         	call	_lcd_set_com_seg
  5190  00039A  0012               	return	
  5191  00039C                     l6104:
  5192  00039C  0E07               	movlw	7
  5193  00039E  6E20               	movwf	lcd_set_com_seg@seg,c
  5194  0003A0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5195  0003A4  0E02               	movlw	2
  5196  0003A6  EC6B  F004         	call	_lcd_set_com_seg
  5197  0003AA  0012               	return	
  5198  0003AC                     l6106:
  5199  0003AC  0E07               	movlw	7
  5200  0003AE  6E20               	movwf	lcd_set_com_seg@seg,c
  5201  0003B0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5202  0003B4  0E03               	movlw	3
  5203  0003B6  EC6B  F004         	call	_lcd_set_com_seg
  5204  0003BA  0012               	return	
  5205  0003BC                     l6108:
  5206  0003BC  0E21               	movlw	33
  5207  0003BE  6E20               	movwf	lcd_set_com_seg@seg,c
  5208  0003C0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5209  0003C4  0E03               	movlw	3
  5210  0003C6  EC6B  F004         	call	_lcd_set_com_seg
  5211  0003CA  0012               	return	
  5212  0003CC                     l6110:
  5213  0003CC  0E21               	movlw	33
  5214  0003CE  6E20               	movwf	lcd_set_com_seg@seg,c
  5215  0003D0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5216  0003D4  0E02               	movlw	2
  5217  0003D6  EC6B  F004         	call	_lcd_set_com_seg
  5218  0003DA  0012               	return	
  5219  0003DC                     l6112:
  5220  0003DC  0E21               	movlw	33
  5221  0003DE  6E20               	movwf	lcd_set_com_seg@seg,c
  5222  0003E0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5223  0003E4  0E01               	movlw	1
  5224  0003E6  EC6B  F004         	call	_lcd_set_com_seg
  5225  0003EA  0012               	return	
  5226  0003EC                     l6114:
  5227  0003EC  0E21               	movlw	33
  5228  0003EE  6E20               	movwf	lcd_set_com_seg@seg,c
  5229  0003F0  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5230  0003F4  0E00               	movlw	0
  5231  0003F6  EC6B  F004         	call	_lcd_set_com_seg
  5232  0003FA  0012               	return	
  5233  0003FC                     l6116:
  5234  0003FC  0E22               	movlw	34
  5235  0003FE  6E20               	movwf	lcd_set_com_seg@seg,c
  5236  000400  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5237  000404  0E00               	movlw	0
  5238  000406  EC6B  F004         	call	_lcd_set_com_seg
  5239  00040A  0012               	return	
  5240  00040C                     l6118:
  5241  00040C  0E22               	movlw	34
  5242  00040E  6E20               	movwf	lcd_set_com_seg@seg,c
  5243  000410  C022  F021         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  5244  000414  0E01               	movlw	1
  5245  000416  EC6B  F004         	call	_lcd_set_com_seg
  5246                           
  5247                           ;lcd.c: 115: }
  5248  00041A  0012               	return	
  5249  00041C                     l6122:
  5250  00041C  0100               	movlb	0	; () banked
  5251  00041E  51C8               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
  5252                           
  5253                           ; Switch size 1, requested type "space"
  5254                           ; Number of cases is 50, Range of values is 0 to 49
  5255                           ; switch strategies available:
  5256                           ; Name         Instructions Cycles
  5257                           ; simple_byte          151    76 (average)
  5258                           ;	Chosen strategy is simple_byte
  5259  000420  0A00               	xorlw	0	; case 0
  5260  000422  B4D8               	btfsc	status,2,c
  5261  000424  D66B               	goto	l6020
  5262  000426  0A01               	xorlw	1	; case 1
  5263  000428  B4D8               	btfsc	status,2,c
  5264  00042A  D670               	goto	l6022
  5265  00042C  0A03               	xorlw	3	; case 2
  5266  00042E  B4D8               	btfsc	status,2,c
  5267  000430  D675               	goto	l6024
  5268  000432  0A01               	xorlw	1	; case 3
  5269  000434  B4D8               	btfsc	status,2,c
  5270  000436  D67A               	goto	l6026
  5271  000438  0A07               	xorlw	7	; case 4
  5272  00043A  B4D8               	btfsc	status,2,c
  5273  00043C  D67F               	goto	l6028
  5274  00043E  0A01               	xorlw	1	; case 5
  5275  000440  B4D8               	btfsc	status,2,c
  5276  000442  D684               	goto	l6030
  5277  000444  0A03               	xorlw	3	; case 6
  5278  000446  B4D8               	btfsc	status,2,c
  5279  000448  D689               	goto	l6032
  5280  00044A  0A01               	xorlw	1	; case 7
  5281  00044C  B4D8               	btfsc	status,2,c
  5282  00044E  D68E               	goto	l6034
  5283  000450  0A0F               	xorlw	15	; case 8
  5284  000452  B4D8               	btfsc	status,2,c
  5285  000454  D693               	goto	l6036
  5286  000456  0A01               	xorlw	1	; case 9
  5287  000458  B4D8               	btfsc	status,2,c
  5288  00045A  D698               	goto	l6038
  5289  00045C  0A03               	xorlw	3	; case 10
  5290  00045E  B4D8               	btfsc	status,2,c
  5291  000460  D69D               	goto	l6040
  5292  000462  0A01               	xorlw	1	; case 11
  5293  000464  B4D8               	btfsc	status,2,c
  5294  000466  D6A2               	goto	l6042
  5295  000468  0A07               	xorlw	7	; case 12
  5296  00046A  B4D8               	btfsc	status,2,c
  5297  00046C  D6A7               	goto	l6044
  5298  00046E  0A01               	xorlw	1	; case 13
  5299  000470  B4D8               	btfsc	status,2,c
  5300  000472  D6AC               	goto	l6046
  5301  000474  0A03               	xorlw	3	; case 14
  5302  000476  B4D8               	btfsc	status,2,c
  5303  000478  D6B1               	goto	l6048
  5304  00047A  0A01               	xorlw	1	; case 15
  5305  00047C  B4D8               	btfsc	status,2,c
  5306  00047E  D6B6               	goto	l6050
  5307  000480  0A1F               	xorlw	31	; case 16
  5308  000482  B4D8               	btfsc	status,2,c
  5309  000484  D6BB               	goto	l6052
  5310  000486  0A01               	xorlw	1	; case 17
  5311  000488  B4D8               	btfsc	status,2,c
  5312  00048A  D6C0               	goto	l6054
  5313  00048C  0A03               	xorlw	3	; case 18
  5314  00048E  B4D8               	btfsc	status,2,c
  5315  000490  D6C5               	goto	l6056
  5316  000492  0A01               	xorlw	1	; case 19
  5317  000494  B4D8               	btfsc	status,2,c
  5318  000496  D6CA               	goto	l6058
  5319  000498  0A07               	xorlw	7	; case 20
  5320  00049A  B4D8               	btfsc	status,2,c
  5321  00049C  D6CF               	goto	l6060
  5322  00049E  0A01               	xorlw	1	; case 21
  5323  0004A0  B4D8               	btfsc	status,2,c
  5324  0004A2  D6D4               	goto	l6062
  5325  0004A4  0A03               	xorlw	3	; case 22
  5326  0004A6  B4D8               	btfsc	status,2,c
  5327  0004A8  D6D9               	goto	l6064
  5328  0004AA  0A01               	xorlw	1	; case 23
  5329  0004AC  B4D8               	btfsc	status,2,c
  5330  0004AE  D6DE               	goto	l6066
  5331  0004B0  0A0F               	xorlw	15	; case 24
  5332  0004B2  B4D8               	btfsc	status,2,c
  5333  0004B4  D6E3               	goto	l6068
  5334  0004B6  0A01               	xorlw	1	; case 25
  5335  0004B8  B4D8               	btfsc	status,2,c
  5336  0004BA  D6E8               	goto	l6070
  5337  0004BC  0A03               	xorlw	3	; case 26
  5338  0004BE  B4D8               	btfsc	status,2,c
  5339  0004C0  D6ED               	goto	l6072
  5340  0004C2  0A01               	xorlw	1	; case 27
  5341  0004C4  B4D8               	btfsc	status,2,c
  5342  0004C6  D6F2               	goto	l6074
  5343  0004C8  0A07               	xorlw	7	; case 28
  5344  0004CA  B4D8               	btfsc	status,2,c
  5345  0004CC  D6F7               	goto	l6076
  5346  0004CE  0A01               	xorlw	1	; case 29
  5347  0004D0  B4D8               	btfsc	status,2,c
  5348  0004D2  D6FC               	goto	l6078
  5349  0004D4  0A03               	xorlw	3	; case 30
  5350  0004D6  B4D8               	btfsc	status,2,c
  5351  0004D8  D701               	goto	l6080
  5352  0004DA  0A01               	xorlw	1	; case 31
  5353  0004DC  B4D8               	btfsc	status,2,c
  5354  0004DE  D706               	goto	l6082
  5355  0004E0  0A3F               	xorlw	63	; case 32
  5356  0004E2  B4D8               	btfsc	status,2,c
  5357  0004E4  D70B               	goto	l6084
  5358  0004E6  0A01               	xorlw	1	; case 33
  5359  0004E8  B4D8               	btfsc	status,2,c
  5360  0004EA  D710               	goto	l6086
  5361  0004EC  0A03               	xorlw	3	; case 34
  5362  0004EE  B4D8               	btfsc	status,2,c
  5363  0004F0  D715               	goto	l6088
  5364  0004F2  0A01               	xorlw	1	; case 35
  5365  0004F4  B4D8               	btfsc	status,2,c
  5366  0004F6  D71A               	goto	l6090
  5367  0004F8  0A07               	xorlw	7	; case 36
  5368  0004FA  B4D8               	btfsc	status,2,c
  5369  0004FC  D71F               	goto	l6092
  5370  0004FE  0A01               	xorlw	1	; case 37
  5371  000500  B4D8               	btfsc	status,2,c
  5372  000502  D724               	goto	l6094
  5373  000504  0A03               	xorlw	3	; case 38
  5374  000506  B4D8               	btfsc	status,2,c
  5375  000508  D729               	goto	l6096
  5376  00050A  0A01               	xorlw	1	; case 39
  5377  00050C  B4D8               	btfsc	status,2,c
  5378  00050E  D72E               	goto	l6098
  5379  000510  0A0F               	xorlw	15	; case 40
  5380  000512  B4D8               	btfsc	status,2,c
  5381  000514  D733               	goto	l6100
  5382  000516  0A01               	xorlw	1	; case 41
  5383  000518  B4D8               	btfsc	status,2,c
  5384  00051A  D738               	goto	l6102
  5385  00051C  0A03               	xorlw	3	; case 42
  5386  00051E  B4D8               	btfsc	status,2,c
  5387  000520  D73D               	goto	l6104
  5388  000522  0A01               	xorlw	1	; case 43
  5389  000524  B4D8               	btfsc	status,2,c
  5390  000526  D742               	goto	l6106
  5391  000528  0A07               	xorlw	7	; case 44
  5392  00052A  B4D8               	btfsc	status,2,c
  5393  00052C  D747               	goto	l6108
  5394  00052E  0A01               	xorlw	1	; case 45
  5395  000530  B4D8               	btfsc	status,2,c
  5396  000532  D74C               	goto	l6110
  5397  000534  0A03               	xorlw	3	; case 46
  5398  000536  B4D8               	btfsc	status,2,c
  5399  000538  D751               	goto	l6112
  5400  00053A  0A01               	xorlw	1	; case 47
  5401  00053C  B4D8               	btfsc	status,2,c
  5402  00053E  D756               	goto	l6114
  5403  000540  0A1F               	xorlw	31	; case 48
  5404  000542  B4D8               	btfsc	status,2,c
  5405  000544  D75B               	goto	l6116
  5406  000546  0A01               	xorlw	1	; case 49
  5407  000548  A4D8               	btfss	status,2,c
  5408  00054A  0012               	return	
  5409  00054C  D75F               	goto	l6118
  5410  00054E                     __end_of_lcd_disp_level_bar:
  5411                           	opt stack 0
  5412                           tblptru	equ	0xFF8
  5413                           tblptrh	equ	0xFF7
  5414                           tblptrl	equ	0xFF6
  5415                           tablat	equ	0xFF5
  5416                           prodh	equ	0xFF4
  5417                           prodl	equ	0xFF3
  5418                           indf0	equ	0xFEF
  5419                           postinc0	equ	0xFEE
  5420                           fsr0h	equ	0xFEA
  5421                           fsr0l	equ	0xFE9
  5422                           wreg	equ	0xFE8
  5423                           postdec1	equ	0xFE5
  5424                           plusw1	equ	0xFE3
  5425                           fsr1h	equ	0xFE2
  5426                           fsr1l	equ	0xFE1
  5427                           indf2	equ	0xFDF
  5428                           plusw2	equ	0xFDB
  5429                           fsr2h	equ	0xFDA
  5430                           fsr2l	equ	0xFD9
  5431                           status	equ	0xFD8
  5432                           
  5433 ;; *************** function _lcd_set_com_seg *****************
  5434 ;; Defined at:
  5435 ;;		line 32 in file "src/driver/lcd.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  com             1    wreg     unsigned char 
  5438 ;;  seg             1   31[COMRAM] unsigned char 
  5439 ;;  show            1   32[COMRAM] unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  com             1   11[BANK0 ] unsigned char 
  5442 ;;  bits            1   13[BANK0 ] unsigned char 
  5443 ;;  offset          1   12[BANK0 ] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        8 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    5
  5460 ;; This function calls:
  5461 ;;		___awdiv
  5462 ;; This function is called by:
  5463 ;;		_lcd_disp_level_bar
  5464 ;;		_lcd_disp_chr_loc_0
  5465 ;;		_lcd_disp_dp_loc_0
  5466 ;;		_lcd_disp_chr_loc_1
  5467 ;;		_lcd_disp_dp_loc_1
  5468 ;;		_lcd_disp_chr_loc_2
  5469 ;;		_lcd_disp_dp_loc_2
  5470 ;;		_lcd_disp_chr_loc_3
  5471 ;;		_lcd_disp_chr_loc_4
  5472 ;;		_lcd_disp_chr_loc_5
  5473 ;;		_lcd_disp_chr_loc_6
  5474 ;;		_lcd_disp_chr_loc_7
  5475 ;;		_lcd_disp_logo
  5476 ;;		_lcd_disp_battary_bar
  5477 ;;		_lcd_disp_rf_bar
  5478 ;;		_lcd_disp_light_bar
  5479 ;;		_lcd_disp_dp_loc_4
  5480 ;;		_lcd_disp_dp_loc_5
  5481 ;;		_lcd_disp_dp_loc_6
  5482 ;;		_lcd_disp_unit_t
  5483 ;;		_lcd_disp_unit_1st_m
  5484 ;;		_lcd_disp_unit_1st_m3
  5485 ;;		_lcd_disp_unit_temperature
  5486 ;;		_lcd_disp_unit_2nd_m
  5487 ;;		_lcd_disp_unit_2nd_m3
  5488 ;;		_lcd_disp_unit_mpa
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text27
  5493  0008D6                     __ptext27:
  5494                           	opt stack 0
  5495  0008D6                     _lcd_set_com_seg:
  5496                           	opt stack 21
  5497                           
  5498                           ;incstack = 0
  5499                           ;lcd_set_com_seg@com stored from wreg
  5500  0008D6  0100               	movlb	0	; () banked
  5501  0008D8  6FC5               	movwf	lcd_set_com_seg@com& (0+255),b
  5502                           
  5503                           ;lcd.c: 34: uint8_t offset;
  5504                           ;lcd.c: 35: uint8_t bits;
  5505                           ;lcd.c: 36: if(com>3)return;
  5506  0008DA  0E03               	movlw	3
  5507  0008DC  0100               	movlb	0	; () banked
  5508  0008DE  65C5               	cpfsgt	lcd_set_com_seg@com& (0+255),b
  5509  0008E0  D001               	goto	l5614
  5510  0008E2  0012               	return	
  5511  0008E4                     l5614:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;lcd.c: 37: if(seg>47)return;
  5515  0008E4  0E2F               	movlw	47
  5516  0008E6  6420               	cpfsgt	lcd_set_com_seg@seg,c
  5517  0008E8  D001               	goto	l5618
  5518  0008EA  0012               	return	
  5519  0008EC                     l5618:
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;lcd.c: 38: offset=com*6 + seg/8;
  5523  0008EC  C020  F0BA         	movff	lcd_set_com_seg@seg,___awdiv@dividend
  5524  0008F0  0100               	movlb	0	; () banked
  5525  0008F2  6BBB               	clrf	(___awdiv@dividend+1)& (0+255),b
  5526  0008F4  0E00               	movlw	0
  5527  0008F6  0100               	movlb	0	; () banked
  5528  0008F8  6FBD               	movwf	(___awdiv@divisor+1)& (0+255),b
  5529  0008FA  0E08               	movlw	8
  5530  0008FC  6FBC               	movwf	___awdiv@divisor& (0+255),b
  5531  0008FE  ECCB  F004         	call	___awdiv	;wreg free
  5532  000902  0100               	movlb	0	; () banked
  5533  000904  51C5               	movf	lcd_set_com_seg@com& (0+255),w,b
  5534  000906  0D06               	mullw	6
  5535  000908  50F3               	movf	prodl,w,c
  5536  00090A  0100               	movlb	0	; () banked
  5537  00090C  25BA               	addwf	?___awdiv& (0+255),w,b
  5538  00090E  0100               	movlb	0	; () banked
  5539  000910  6FC6               	movwf	lcd_set_com_seg@offset& (0+255),b
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;lcd.c: 39: bits=seg%8;
  5543  000912  5020               	movf	lcd_set_com_seg@seg,w,c
  5544  000914  0B07               	andlw	7
  5545  000916  0100               	movlb	0	; () banked
  5546  000918  6FC7               	movwf	lcd_set_com_seg@bits& (0+255),b
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;lcd.c: 40: if(show){
  5550  00091A  5021               	movf	lcd_set_com_seg@show,w,c
  5551  00091C  B4D8               	btfsc	status,2,c
  5552  00091E  D01B               	goto	l5626
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;lcd.c: 41: pLCD[offset] |= (1<<bits);
  5556  000920  C0C7  F0C2         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  5557  000924  0E01               	movlw	1
  5558  000926  0100               	movlb	0	; () banked
  5559  000928  6FC3               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  5560  00092A  0100               	movlb	0	; () banked
  5561  00092C  2BC2               	incf	??_lcd_set_com_seg& (0+255),f,b
  5562  00092E  D003               	goto	u3854
  5563  000930                     u3855:
  5564  000930  0100               	movlb	0	; () banked
  5565  000932  90D8               	bcf	status,0,c
  5566  000934  37C3               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  5567  000936                     u3854:
  5568  000936  0100               	movlb	0	; () banked
  5569  000938  2FC2               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  5570  00093A  D7FA               	goto	u3855
  5571  00093C  0100               	movlb	0	; () banked
  5572  00093E  51C6               	movf	lcd_set_com_seg@offset& (0+255),w,b
  5573  000940  0D01               	mullw	1
  5574  000942  0E60               	movlw	low _pLCD
  5575  000944  24F3               	addwf	prodl,w,c
  5576  000946  6ED9               	movwf	fsr2l,c
  5577  000948  0E00               	movlw	high _pLCD
  5578  00094A  20F4               	addwfc	prodh,w,c
  5579  00094C  6EDA               	movwf	fsr2h,c
  5580  00094E  0100               	movlb	0	; () banked
  5581  000950  51C3               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  5582  000952  12DF               	iorwf	indf2,f,c
  5583                           
  5584                           ;lcd.c: 42: }else{
  5585  000954  0012               	return	
  5586  000956                     l5626:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;lcd.c: 43: pLCD[offset] &= ~(1<<bits);
  5590  000956  C0C7  F0C2         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
  5591  00095A  0E01               	movlw	1
  5592  00095C  0100               	movlb	0	; () banked
  5593  00095E  6FC3               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
  5594  000960  0100               	movlb	0	; () banked
  5595  000962  2BC2               	incf	??_lcd_set_com_seg& (0+255),f,b
  5596  000964  D003               	goto	u3864
  5597  000966                     u3865:
  5598  000966  0100               	movlb	0	; () banked
  5599  000968  90D8               	bcf	status,0,c
  5600  00096A  37C3               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
  5601  00096C                     u3864:
  5602  00096C  0100               	movlb	0	; () banked
  5603  00096E  2FC2               	decfsz	??_lcd_set_com_seg& (0+255),f,b
  5604  000970  D7FA               	goto	u3865
  5605  000972  0100               	movlb	0	; () banked
  5606  000974  51C3               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
  5607  000976  0AFF               	xorlw	255
  5608  000978  0100               	movlb	0	; () banked
  5609  00097A  6FC4               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
  5610  00097C  0100               	movlb	0	; () banked
  5611  00097E  51C6               	movf	lcd_set_com_seg@offset& (0+255),w,b
  5612  000980  0D01               	mullw	1
  5613  000982  0E60               	movlw	low _pLCD
  5614  000984  24F3               	addwf	prodl,w,c
  5615  000986  6ED9               	movwf	fsr2l,c
  5616  000988  0E00               	movlw	high _pLCD
  5617  00098A  20F4               	addwfc	prodh,w,c
  5618  00098C  6EDA               	movwf	fsr2h,c
  5619  00098E  0100               	movlb	0	; () banked
  5620  000990  51C4               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
  5621  000992  16DF               	andwf	indf2,f,c
  5622  000994  0012               	return	
  5623  000996                     __end_of_lcd_set_com_seg:
  5624                           	opt stack 0
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           prodh	equ	0xFF4
  5630                           prodl	equ	0xFF3
  5631                           indf0	equ	0xFEF
  5632                           postinc0	equ	0xFEE
  5633                           fsr0h	equ	0xFEA
  5634                           fsr0l	equ	0xFE9
  5635                           wreg	equ	0xFE8
  5636                           postdec1	equ	0xFE5
  5637                           plusw1	equ	0xFE3
  5638                           fsr1h	equ	0xFE2
  5639                           fsr1l	equ	0xFE1
  5640                           indf2	equ	0xFDF
  5641                           plusw2	equ	0xFDB
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function ___awdiv *****************
  5647 ;; Defined at:
  5648 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  dividend        2    0[BANK0 ] int 
  5651 ;;  divisor         2    2[BANK0 ] int 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  quotient        2    6[BANK0 ] int 
  5654 ;;  sign            1    5[BANK0 ] unsigned char 
  5655 ;;  counter         1    4[BANK0 ] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  2    0[BANK0 ] int 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;Total ram usage:        8 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    4
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_lcd_set_com_seg
  5676 ;;		_m_int16_2_str_4
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text28
  5681  000996                     __ptext28:
  5682                           	opt stack 0
  5683  000996                     ___awdiv:
  5684                           	opt stack 21
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;incstack = 0
  5688  000996  0E00               	movlw	0
  5689  000998  0100               	movlb	0	; () banked
  5690  00099A  6FBF               	movwf	___awdiv@sign& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693  00099C  0100               	movlb	0	; () banked
  5694  00099E  AFBD               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5695  0009A0  D008               	goto	l5524
  5696                           
  5697                           ; BSR set to: 0
  5698  0009A2  0100               	movlb	0	; () banked
  5699  0009A4  6DBC               	negf	___awdiv@divisor& (0+255),b
  5700  0009A6  1FBD               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5701  0009A8  B0D8               	btfsc	status,0,c
  5702  0009AA  2BBD               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5703                           
  5704                           ; BSR set to: 0
  5705  0009AC  0E01               	movlw	1
  5706  0009AE  0100               	movlb	0	; () banked
  5707  0009B0  6FBF               	movwf	___awdiv@sign& (0+255),b
  5708  0009B2                     l5524:
  5709                           
  5710                           ; BSR set to: 0
  5711  0009B2  0100               	movlb	0	; () banked
  5712  0009B4  AFBB               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5713  0009B6  D008               	goto	l5530
  5714                           
  5715                           ; BSR set to: 0
  5716  0009B8  0100               	movlb	0	; () banked
  5717  0009BA  6DBA               	negf	___awdiv@dividend& (0+255),b
  5718  0009BC  1FBB               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5719  0009BE  B0D8               	btfsc	status,0,c
  5720  0009C0  2BBB               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5721                           
  5722                           ; BSR set to: 0
  5723  0009C2  0E01               	movlw	1
  5724  0009C4  0100               	movlb	0	; () banked
  5725  0009C6  1BBF               	xorwf	___awdiv@sign& (0+255),f,b
  5726  0009C8                     l5530:
  5727                           
  5728                           ; BSR set to: 0
  5729  0009C8  0E00               	movlw	0
  5730  0009CA  0100               	movlb	0	; () banked
  5731  0009CC  6FC1               	movwf	(___awdiv@quotient+1)& (0+255),b
  5732  0009CE  0E00               	movlw	0
  5733  0009D0  6FC0               	movwf	___awdiv@quotient& (0+255),b
  5734                           
  5735                           ; BSR set to: 0
  5736  0009D2  0100               	movlb	0	; () banked
  5737  0009D4  51BC               	movf	___awdiv@divisor& (0+255),w,b
  5738  0009D6  0100               	movlb	0	; () banked
  5739  0009D8  11BD               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5740  0009DA  B4D8               	btfsc	status,2,c
  5741  0009DC  D02C               	goto	l5552
  5742                           
  5743                           ; BSR set to: 0
  5744  0009DE  0E01               	movlw	1
  5745  0009E0  0100               	movlb	0	; () banked
  5746  0009E2  6FBE               	movwf	___awdiv@counter& (0+255),b
  5747  0009E4  D006               	goto	l5538
  5748  0009E6                     l5536:
  5749                           
  5750                           ; BSR set to: 0
  5751  0009E6  0100               	movlb	0	; () banked
  5752  0009E8  90D8               	bcf	status,0,c
  5753  0009EA  37BC               	rlcf	___awdiv@divisor& (0+255),f,b
  5754  0009EC  37BD               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5755  0009EE  0100               	movlb	0	; () banked
  5756  0009F0  2BBE               	incf	___awdiv@counter& (0+255),f,b
  5757  0009F2                     l5538:
  5758                           
  5759                           ; BSR set to: 0
  5760  0009F2  0100               	movlb	0	; () banked
  5761  0009F4  AFBD               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5762  0009F6  D7F7               	goto	l5536
  5763  0009F8                     l5540:
  5764                           
  5765                           ; BSR set to: 0
  5766  0009F8  0100               	movlb	0	; () banked
  5767  0009FA  90D8               	bcf	status,0,c
  5768  0009FC  37C0               	rlcf	___awdiv@quotient& (0+255),f,b
  5769  0009FE  37C1               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5770                           
  5771                           ; BSR set to: 0
  5772  000A00  0100               	movlb	0	; () banked
  5773  000A02  51BC               	movf	___awdiv@divisor& (0+255),w,b
  5774  000A04  0100               	movlb	0	; () banked
  5775  000A06  5DBA               	subwf	___awdiv@dividend& (0+255),w,b
  5776  000A08  0100               	movlb	0	; () banked
  5777  000A0A  51BD               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5778  000A0C  0100               	movlb	0	; () banked
  5779  000A0E  59BB               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5780  000A10  A0D8               	btfss	status,0,c
  5781  000A12  D00A               	goto	l5548
  5782                           
  5783                           ; BSR set to: 0
  5784  000A14  0100               	movlb	0	; () banked
  5785  000A16  51BC               	movf	___awdiv@divisor& (0+255),w,b
  5786  000A18  0100               	movlb	0	; () banked
  5787  000A1A  5FBA               	subwf	___awdiv@dividend& (0+255),f,b
  5788  000A1C  0100               	movlb	0	; () banked
  5789  000A1E  51BD               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5790  000A20  0100               	movlb	0	; () banked
  5791  000A22  5BBB               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5792                           
  5793                           ; BSR set to: 0
  5794  000A24  0100               	movlb	0	; () banked
  5795  000A26  81C0               	bsf	___awdiv@quotient& (0+255),0,b
  5796  000A28                     l5548:
  5797                           
  5798                           ; BSR set to: 0
  5799  000A28  0100               	movlb	0	; () banked
  5800  000A2A  90D8               	bcf	status,0,c
  5801  000A2C  33BD               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5802  000A2E  33BC               	rrcf	___awdiv@divisor& (0+255),f,b
  5803                           
  5804                           ; BSR set to: 0
  5805  000A30  0100               	movlb	0	; () banked
  5806  000A32  2FBE               	decfsz	___awdiv@counter& (0+255),f,b
  5807  000A34  D7E1               	goto	l5540
  5808  000A36                     l5552:
  5809                           
  5810                           ; BSR set to: 0
  5811  000A36  0100               	movlb	0	; () banked
  5812  000A38  51BF               	movf	___awdiv@sign& (0+255),w,b
  5813  000A3A  0100               	movlb	0	; () banked
  5814  000A3C  B4D8               	btfsc	status,2,c
  5815  000A3E  D005               	goto	l5556
  5816                           
  5817                           ; BSR set to: 0
  5818  000A40  0100               	movlb	0	; () banked
  5819  000A42  6DC0               	negf	___awdiv@quotient& (0+255),b
  5820  000A44  1FC1               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5821  000A46  B0D8               	btfsc	status,0,c
  5822  000A48  2BC1               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5823  000A4A                     l5556:
  5824                           
  5825                           ; BSR set to: 0
  5826  000A4A  C0C0  F0BA         	movff	___awdiv@quotient,?___awdiv
  5827  000A4E  C0C1  F0BB         	movff	___awdiv@quotient+1,?___awdiv+1
  5828  000A52  0012               	return	
  5829  000A54                     __end_of___awdiv:
  5830                           	opt stack 0
  5831                           tblptru	equ	0xFF8
  5832                           tblptrh	equ	0xFF7
  5833                           tblptrl	equ	0xFF6
  5834                           tablat	equ	0xFF5
  5835                           prodh	equ	0xFF4
  5836                           prodl	equ	0xFF3
  5837                           indf0	equ	0xFEF
  5838                           postinc0	equ	0xFEE
  5839                           fsr0h	equ	0xFEA
  5840                           fsr0l	equ	0xFE9
  5841                           wreg	equ	0xFE8
  5842                           postdec1	equ	0xFE5
  5843                           plusw1	equ	0xFE3
  5844                           fsr1h	equ	0xFE2
  5845                           fsr1l	equ	0xFE1
  5846                           indf2	equ	0xFDF
  5847                           plusw2	equ	0xFDB
  5848                           fsr2h	equ	0xFDA
  5849                           fsr2l	equ	0xFD9
  5850                           status	equ	0xFD8
  5851                           
  5852 ;; *************** function _soc_init *****************
  5853 ;; Defined at:
  5854 ;;		line 2 in file "src/soc/soc.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    6
  5875 ;; This function calls:
  5876 ;;		_rtc_init
  5877 ;;		_sys_ticker_init
  5878 ;; This function is called by:
  5879 ;;		_main
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text29
  5884  001A40                     __ptext29:
  5885                           	opt stack 0
  5886  001A40                     _soc_init:
  5887                           	opt stack 24
  5888                           
  5889                           ;soc.c: 5: sys_ticker_init();
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;incstack = 0
  5893  001A40  EC28  F00D         	call	_sys_ticker_init	;wreg free
  5894                           
  5895                           ;soc.c: 6: rtc_init();
  5896  001A44  ECB9  F00B         	call	_rtc_init	;wreg free
  5897                           
  5898                           ;soc.c: 8: INTCONbits.PEIE = 1;
  5899  001A48  8CF2               	bsf	intcon,6,c	;volatile
  5900                           
  5901                           ;soc.c: 9: INTCONbits.GIE = 1;
  5902  001A4A  8EF2               	bsf	intcon,7,c	;volatile
  5903                           
  5904                           ;soc.c: 11: RCONbits.IPEN=0;
  5905  001A4C  9ED0               	bcf	4048,7,c	;volatile
  5906  001A4E  0012               	return		;funcret
  5907  001A50                     __end_of_soc_init:
  5908                           	opt stack 0
  5909                           tblptru	equ	0xFF8
  5910                           tblptrh	equ	0xFF7
  5911                           tblptrl	equ	0xFF6
  5912                           tablat	equ	0xFF5
  5913                           prodh	equ	0xFF4
  5914                           prodl	equ	0xFF3
  5915                           intcon	equ	0xFF2
  5916                           indf0	equ	0xFEF
  5917                           postinc0	equ	0xFEE
  5918                           fsr0h	equ	0xFEA
  5919                           fsr0l	equ	0xFE9
  5920                           wreg	equ	0xFE8
  5921                           postdec1	equ	0xFE5
  5922                           plusw1	equ	0xFE3
  5923                           fsr1h	equ	0xFE2
  5924                           fsr1l	equ	0xFE1
  5925                           indf2	equ	0xFDF
  5926                           plusw2	equ	0xFDB
  5927                           fsr2h	equ	0xFDA
  5928                           fsr2l	equ	0xFD9
  5929                           status	equ	0xFD8
  5930                           
  5931 ;; *************** function _sys_ticker_init *****************
  5932 ;; Defined at:
  5933 ;;		line 24 in file "src/soc/ticker.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;Total ram usage:        0 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    4
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_soc_init
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text30
  5962  001A50                     __ptext30:
  5963                           	opt stack 0
  5964  001A50                     _sys_ticker_init:
  5965                           	opt stack 25
  5966                           
  5967                           ;ticker.c: 27: PR2=(uint8_t)((11059200/4/16/16/100));
  5968                           
  5969                           ;incstack = 0
  5970  001A50  0E6C               	movlw	108
  5971  001A52  6ECB               	movwf	4043,c	;volatile
  5972                           
  5973                           ;ticker.c: 28: IPR1bits.TMR2IP=1;
  5974  001A54  829F               	bsf	3999,1,c	;volatile
  5975                           
  5976                           ;ticker.c: 29: PIR1bits.TMR2IF=0;
  5977  001A56  929E               	bcf	3998,1,c	;volatile
  5978                           
  5979                           ;ticker.c: 30: PIE1bits.TMR2IE=1;
  5980  001A58  829D               	bsf	3997,1,c	;volatile
  5981                           
  5982                           ;ticker.c: 32: T2CON=0x7f;
  5983  001A5A  0E7F               	movlw	127
  5984  001A5C  6ECA               	movwf	4042,c	;volatile
  5985  001A5E  0012               	return		;funcret
  5986  001A60                     __end_of_sys_ticker_init:
  5987                           	opt stack 0
  5988                           tblptru	equ	0xFF8
  5989                           tblptrh	equ	0xFF7
  5990                           tblptrl	equ	0xFF6
  5991                           tablat	equ	0xFF5
  5992                           prodh	equ	0xFF4
  5993                           prodl	equ	0xFF3
  5994                           intcon	equ	0xFF2
  5995                           indf0	equ	0xFEF
  5996                           postinc0	equ	0xFEE
  5997                           fsr0h	equ	0xFEA
  5998                           fsr0l	equ	0xFE9
  5999                           wreg	equ	0xFE8
  6000                           postdec1	equ	0xFE5
  6001                           plusw1	equ	0xFE3
  6002                           fsr1h	equ	0xFE2
  6003                           fsr1l	equ	0xFE1
  6004                           indf2	equ	0xFDF
  6005                           plusw2	equ	0xFDB
  6006                           fsr2h	equ	0xFDA
  6007                           fsr2l	equ	0xFD9
  6008                           status	equ	0xFD8
  6009                           
  6010 ;; *************** function _rtc_init *****************
  6011 ;; Defined at:
  6012 ;;		line 25 in file "src/soc/rtc.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;Total ram usage:        0 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    5
  6033 ;; This function calls:
  6034 ;;		_rtcc_reg_wr_disable
  6035 ;;		_rtcc_reg_wr_enable
  6036 ;; This function is called by:
  6037 ;;		_soc_init
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text31
  6042  001772                     __ptext31:
  6043                           	opt stack 0
  6044  001772                     _rtc_init:
  6045                           	opt stack 24
  6046                           
  6047                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  6048                           
  6049                           ;incstack = 0
  6050  001772  010F               	movlb	15	; () banked
  6051  001774  9554               	bcf	84,2,b	;volatile
  6052                           
  6053                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  6054  001776  010F               	movlb	15	; () banked
  6055  001778  8354               	bsf	84,1,b	;volatile
  6056                           
  6057                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  6058  00177A  010F               	movlb	15	; () banked
  6059  00177C  955F               	bcf	95,2,b	;volatile
  6060                           
  6061                           ;rtc.c: 31: ALRMRPT=0xff;
  6062  00177E  010F               	movlb	15	; () banked
  6063  001780  695A               	setf	90,b	;volatile
  6064                           
  6065                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  6066  001782  010F               	movlb	15	; () banked
  6067  001784  8F5B               	bsf	91,7,b	;volatile
  6068                           
  6069                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  6070  001786  010F               	movlb	15	; () banked
  6071  001788  8D5B               	bsf	91,6,b	;volatile
  6072                           
  6073                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  6074  00178A  010F               	movlb	15	; () banked
  6075  00178C  955B               	bcf	91,2,b	;volatile
  6076  00178E  975B               	bcf	91,3,b	;volatile
  6077  001790  995B               	bcf	91,4,b	;volatile
  6078  001792  9B5B               	bcf	91,5,b	;volatile
  6079                           
  6080                           ;rtc.c: 37: __nop();
  6081  001794  F000               	nop	
  6082                           
  6083                           ;rtc.c: 38: rtcc_reg_wr_enable();
  6084  001796  EC4E  F00D         	call	_rtcc_reg_wr_enable	;wreg free
  6085                           
  6086                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  6087  00179A  010F               	movlb	15	; () banked
  6088  00179C  8F5F               	bsf	95,7,b	;volatile
  6089                           
  6090                           ;rtc.c: 42: rtcc_reg_wr_disable();
  6091  00179E  EC54  F00D         	call	_rtcc_reg_wr_disable	;wreg free
  6092                           
  6093                           ;rtc.c: 43: __nop();
  6094  0017A2  F000               	nop	
  6095                           
  6096                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  6097  0017A4  80A5               	bsf	4005,0,c	;volatile
  6098                           
  6099                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  6100  0017A6  90A4               	bcf	4004,0,c	;volatile
  6101                           
  6102                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  6103  0017A8  80A3               	bsf	4003,0,c	;volatile
  6104                           
  6105                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  6106  0017AA  86CD               	bsf	4045,3,c	;volatile
  6107                           
  6108                           ;rtc.c: 51: __nop();
  6109  0017AC  F000               	nop	
  6110  0017AE  0012               	return		;funcret
  6111  0017B0                     __end_of_rtc_init:
  6112                           	opt stack 0
  6113                           tblptru	equ	0xFF8
  6114                           tblptrh	equ	0xFF7
  6115                           tblptrl	equ	0xFF6
  6116                           tablat	equ	0xFF5
  6117                           prodh	equ	0xFF4
  6118                           prodl	equ	0xFF3
  6119                           intcon	equ	0xFF2
  6120                           indf0	equ	0xFEF
  6121                           postinc0	equ	0xFEE
  6122                           fsr0h	equ	0xFEA
  6123                           fsr0l	equ	0xFE9
  6124                           wreg	equ	0xFE8
  6125                           postdec1	equ	0xFE5
  6126                           plusw1	equ	0xFE3
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           indf2	equ	0xFDF
  6130                           plusw2	equ	0xFDB
  6131                           fsr2h	equ	0xFDA
  6132                           fsr2l	equ	0xFD9
  6133                           status	equ	0xFD8
  6134                           
  6135 ;; *************** function _rtc_set *****************
  6136 ;; Defined at:
  6137 ;;		line 54 in file "src/soc/rtc.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  rtc             2   31[COMRAM] PTR unsigned char 
  6140 ;;		 -> defalutRtc(7), 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  stp             2    0[BANK0 ] PTR struct .
  6143 ;;		 -> defalutRtc(7), 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;Total ram usage:        4 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    5
  6160 ;; This function calls:
  6161 ;;		_rtcc_reg_wr_disable
  6162 ;;		_rtcc_reg_wr_enable
  6163 ;; This function is called by:
  6164 ;;		_main
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text32
  6169  000B10                     __ptext32:
  6170                           	opt stack 0
  6171  000B10                     _rtc_set:
  6172                           	opt stack 25
  6173                           
  6174                           ;rtc.c: 56: st_RtcDef* stp;
  6175                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  6176                           
  6177                           ;incstack = 0
  6178  000B10  C020  F0BA         	movff	rtc_set@rtc,rtc_set@stp
  6179  000B14  C021  F0BB         	movff	rtc_set@rtc+1,rtc_set@stp+1
  6180                           
  6181                           ;rtc.c: 58: rtcc_reg_wr_enable();
  6182  000B18  EC4E  F00D         	call	_rtcc_reg_wr_enable	;wreg free
  6183                           
  6184                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  6185  000B1C  0EFC               	movlw	-4
  6186  000B1E  010F               	movlb	15	; () banked
  6187  000B20  175F               	andwf	95,f,b	;volatile
  6188                           
  6189                           ; BSR set to: 15
  6190                           ;rtc.c: 61: RTCVALL=stp->second;
  6191  000B22  0100               	movlb	0	; () banked
  6192  000B24  EE20 F005          	lfsr	2,5
  6193  000B28  51BA               	movf	rtc_set@stp& (0+255),w,b
  6194  000B2A  26D9               	addwf	fsr2l,f,c
  6195  000B2C  51BB               	movf	(rtc_set@stp+1)& (0+255),w,b
  6196  000B2E  22DA               	addwfc	fsr2h,f,c
  6197  000B30  50DF               	movf	indf2,w,c
  6198  000B32  010F               	movlb	15	; () banked
  6199  000B34  6F5C               	movwf	92,b	;volatile
  6200                           
  6201                           ; BSR set to: 15
  6202                           ;rtc.c: 62: RTCVALH=stp->minute;
  6203  000B36  0100               	movlb	0	; () banked
  6204  000B38  EE20 F004          	lfsr	2,4
  6205  000B3C  51BA               	movf	rtc_set@stp& (0+255),w,b
  6206  000B3E  26D9               	addwf	fsr2l,f,c
  6207  000B40  51BB               	movf	(rtc_set@stp+1)& (0+255),w,b
  6208  000B42  22DA               	addwfc	fsr2h,f,c
  6209  000B44  50DF               	movf	indf2,w,c
  6210  000B46  010F               	movlb	15	; () banked
  6211  000B48  6F5D               	movwf	93,b	;volatile
  6212                           
  6213                           ; BSR set to: 15
  6214                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  6215  000B4A  010F               	movlb	15	; () banked
  6216  000B4C  515F               	movf	95,w,b	;volatile
  6217  000B4E  0BFC               	andlw	-4
  6218  000B50  0901               	iorlw	1
  6219  000B52  6F5F               	movwf	95,b	;volatile
  6220                           
  6221                           ; BSR set to: 15
  6222                           ;rtc.c: 64: RTCVALL=stp->hour;
  6223  000B54  0100               	movlb	0	; () banked
  6224  000B56  EE20 F003          	lfsr	2,3
  6225  000B5A  51BA               	movf	rtc_set@stp& (0+255),w,b
  6226  000B5C  26D9               	addwf	fsr2l,f,c
  6227  000B5E  51BB               	movf	(rtc_set@stp+1)& (0+255),w,b
  6228  000B60  22DA               	addwfc	fsr2h,f,c
  6229  000B62  50DF               	movf	indf2,w,c
  6230  000B64  010F               	movlb	15	; () banked
  6231  000B66  6F5C               	movwf	92,b	;volatile
  6232                           
  6233                           ; BSR set to: 15
  6234                           ;rtc.c: 65: RTCVALH=stp->day;
  6235  000B68  0100               	movlb	0	; () banked
  6236  000B6A  EE20 F006          	lfsr	2,6
  6237  000B6E  51BA               	movf	rtc_set@stp& (0+255),w,b
  6238  000B70  26D9               	addwf	fsr2l,f,c
  6239  000B72  51BB               	movf	(rtc_set@stp+1)& (0+255),w,b
  6240  000B74  22DA               	addwfc	fsr2h,f,c
  6241  000B76  50DF               	movf	indf2,w,c
  6242  000B78  010F               	movlb	15	; () banked
  6243  000B7A  6F5D               	movwf	93,b	;volatile
  6244                           
  6245                           ; BSR set to: 15
  6246                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  6247  000B7C  010F               	movlb	15	; () banked
  6248  000B7E  515F               	movf	95,w,b	;volatile
  6249  000B80  0BFC               	andlw	-4
  6250  000B82  0902               	iorlw	2
  6251  000B84  6F5F               	movwf	95,b	;volatile
  6252                           
  6253                           ; BSR set to: 15
  6254                           ;rtc.c: 67: RTCVALL=stp->date;
  6255  000B86  0100               	movlb	0	; () banked
  6256  000B88  EE20 F002          	lfsr	2,2
  6257  000B8C  51BA               	movf	rtc_set@stp& (0+255),w,b
  6258  000B8E  26D9               	addwf	fsr2l,f,c
  6259  000B90  51BB               	movf	(rtc_set@stp+1)& (0+255),w,b
  6260  000B92  22DA               	addwfc	fsr2h,f,c
  6261  000B94  50DF               	movf	indf2,w,c
  6262  000B96  010F               	movlb	15	; () banked
  6263  000B98  6F5C               	movwf	92,b	;volatile
  6264                           
  6265                           ; BSR set to: 15
  6266                           ;rtc.c: 68: RTCVALH=stp->month;
  6267  000B9A  0100               	movlb	0	; () banked
  6268  000B9C  EE20 F001          	lfsr	2,1
  6269  000BA0  51BA               	movf	rtc_set@stp& (0+255),w,b
  6270  000BA2  26D9               	addwf	fsr2l,f,c
  6271  000BA4  51BB               	movf	(rtc_set@stp+1)& (0+255),w,b
  6272  000BA6  22DA               	addwfc	fsr2h,f,c
  6273  000BA8  50DF               	movf	indf2,w,c
  6274  000BAA  010F               	movlb	15	; () banked
  6275  000BAC  6F5D               	movwf	93,b	;volatile
  6276                           
  6277                           ; BSR set to: 15
  6278                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  6279  000BAE  0E03               	movlw	3
  6280  000BB0  010F               	movlb	15	; () banked
  6281  000BB2  135F               	iorwf	95,f,b	;volatile
  6282                           
  6283                           ; BSR set to: 15
  6284                           ;rtc.c: 70: RTCVALL=stp->year;
  6285  000BB4  C0BA  FFD9         	movff	rtc_set@stp,fsr2l
  6286  000BB8  C0BB  FFDA         	movff	rtc_set@stp+1,fsr2h
  6287  000BBC  50DF               	movf	indf2,w,c
  6288  000BBE  010F               	movlb	15	; () banked
  6289  000BC0  6F5C               	movwf	92,b	;volatile
  6290                           
  6291                           ; BSR set to: 15
  6292                           ;rtc.c: 71: rtcc_reg_wr_disable();
  6293  000BC2  EC54  F00D         	call	_rtcc_reg_wr_disable	;wreg free
  6294  000BC6  0012               	return		;funcret
  6295  000BC8                     __end_of_rtc_set:
  6296                           	opt stack 0
  6297                           tblptru	equ	0xFF8
  6298                           tblptrh	equ	0xFF7
  6299                           tblptrl	equ	0xFF6
  6300                           tablat	equ	0xFF5
  6301                           prodh	equ	0xFF4
  6302                           prodl	equ	0xFF3
  6303                           intcon	equ	0xFF2
  6304                           indf0	equ	0xFEF
  6305                           postinc0	equ	0xFEE
  6306                           fsr0h	equ	0xFEA
  6307                           fsr0l	equ	0xFE9
  6308                           wreg	equ	0xFE8
  6309                           postdec1	equ	0xFE5
  6310                           plusw1	equ	0xFE3
  6311                           fsr1h	equ	0xFE2
  6312                           fsr1l	equ	0xFE1
  6313                           indf2	equ	0xFDF
  6314                           plusw2	equ	0xFDB
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function _rtcc_reg_wr_enable *****************
  6320 ;; Defined at:
  6321 ;;		line 9 in file "src/soc/rtc.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		None
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    4
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_rtc_init
  6346 ;;		_rtc_set
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text33
  6351  001A9C                     __ptext33:
  6352                           	opt stack 0
  6353  001A9C                     _rtcc_reg_wr_enable:
  6354                           	opt stack 24
  6355                           
  6356                           ;incstack = 0
  6357  001A9C  0E55               	movlw	85	;# 
  6358  001A9E  6EA7               	movwf	4007,c	;# 
  6359  001AA0  0EAA               	movlw	170	;# 
  6360  001AA2  6EA7               	movwf	4007,c	;# 
  6361  001AA4  8B5F               	bsf	3935,5,b	;# 
  6362  001AA6  0012               	return		;funcret
  6363  001AA8                     __end_of_rtcc_reg_wr_enable:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           indf0	equ	0xFEF
  6373                           postinc0	equ	0xFEE
  6374                           fsr0h	equ	0xFEA
  6375                           fsr0l	equ	0xFE9
  6376                           wreg	equ	0xFE8
  6377                           postdec1	equ	0xFE5
  6378                           plusw1	equ	0xFE3
  6379                           fsr1h	equ	0xFE2
  6380                           fsr1l	equ	0xFE1
  6381                           indf2	equ	0xFDF
  6382                           plusw2	equ	0xFDB
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function _rtcc_reg_wr_disable *****************
  6388 ;; Defined at:
  6389 ;;		line 17 in file "src/soc/rtc.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    4
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_rtc_init
  6414 ;;		_rtc_set
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text34
  6419  001AA8                     __ptext34:
  6420                           	opt stack 0
  6421  001AA8                     _rtcc_reg_wr_disable:
  6422                           	opt stack 24
  6423                           
  6424                           ;incstack = 0
  6425  001AA8  0E55               	movlw	85	;# 
  6426  001AAA  6EA7               	movwf	4007,c	;# 
  6427  001AAC  0EAA               	movlw	170	;# 
  6428  001AAE  6EA7               	movwf	4007,c	;# 
  6429  001AB0  9B5F               	bcf	3935,5,b	;# 
  6430  001AB2  0012               	return		;funcret
  6431  001AB4                     __end_of_rtcc_reg_wr_disable:
  6432                           	opt stack 0
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           indf0	equ	0xFEF
  6441                           postinc0	equ	0xFEE
  6442                           fsr0h	equ	0xFEA
  6443                           fsr0l	equ	0xFE9
  6444                           wreg	equ	0xFE8
  6445                           postdec1	equ	0xFE5
  6446                           plusw1	equ	0xFE3
  6447                           fsr1h	equ	0xFE2
  6448                           fsr1l	equ	0xFE1
  6449                           indf2	equ	0xFDF
  6450                           plusw2	equ	0xFDB
  6451                           fsr2h	equ	0xFDA
  6452                           fsr2l	equ	0xFD9
  6453                           status	equ	0xFD8
  6454                           
  6455 ;; *************** function _lcd_init *****************
  6456 ;; Defined at:
  6457 ;;		line 628 in file "src/driver/lcd.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    6
  6478 ;; This function calls:
  6479 ;;		_lcd_bl_init
  6480 ;;		_lcd_config
  6481 ;; This function is called by:
  6482 ;;		_main
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text35
  6487  001A80                     __ptext35:
  6488                           	opt stack 0
  6489  001A80                     _lcd_init:
  6490                           	opt stack 24
  6491                           
  6492                           ;lcd.c: 630: lcd_config();
  6493                           
  6494                           ;incstack = 0
  6495  001A80  EC49  F00C         	call	_lcd_config	;wreg free
  6496                           
  6497                           ;lcd.c: 631: lcd_bl_init();
  6498  001A84  EC5A  F00D         	call	_lcd_bl_init	;wreg free
  6499                           
  6500                           ;lcd.c: 632: LCDCON=0x8f;;
  6501  001A88  0E8F               	movlw	143
  6502  001A8A  6EA8               	movwf	4008,c	;volatile
  6503  001A8C  0012               	return		;funcret
  6504  001A8E                     __end_of_lcd_init:
  6505                           	opt stack 0
  6506                           tblptru	equ	0xFF8
  6507                           tblptrh	equ	0xFF7
  6508                           tblptrl	equ	0xFF6
  6509                           tablat	equ	0xFF5
  6510                           prodh	equ	0xFF4
  6511                           prodl	equ	0xFF3
  6512                           intcon	equ	0xFF2
  6513                           indf0	equ	0xFEF
  6514                           postinc0	equ	0xFEE
  6515                           fsr0h	equ	0xFEA
  6516                           fsr0l	equ	0xFE9
  6517                           wreg	equ	0xFE8
  6518                           postdec1	equ	0xFE5
  6519                           plusw1	equ	0xFE3
  6520                           fsr1h	equ	0xFE2
  6521                           fsr1l	equ	0xFE1
  6522                           indf2	equ	0xFDF
  6523                           plusw2	equ	0xFDB
  6524                           fsr2h	equ	0xFDA
  6525                           fsr2l	equ	0xFD9
  6526                           status	equ	0xFD8
  6527                           
  6528 ;; *************** function _lcd_config *****************
  6529 ;; Defined at:
  6530 ;;		line 588 in file "src/driver/lcd.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;Total ram usage:        0 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    5
  6551 ;; This function calls:
  6552 ;;		_lcd_disp_all
  6553 ;; This function is called by:
  6554 ;;		_lcd_init
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text36
  6559  001892                     __ptext36:
  6560                           	opt stack 0
  6561  001892                     _lcd_config:
  6562                           	opt stack 24
  6563                           
  6564                           ;lcd.c: 594: LCDREG=0x3f;
  6565                           
  6566                           ;incstack = 0
  6567  001892  0E3F               	movlw	63
  6568  001894  6ED2               	movwf	4050,c	;volatile
  6569                           
  6570                           ;lcd.c: 602: LCDPSbits.WFT = 0;
  6571  001896  9EAA               	bcf	4010,7,c	;volatile
  6572                           
  6573                           ;lcd.c: 603: LCDPSbits.BIASMD = 0;
  6574  001898  9CAA               	bcf	4010,6,c	;volatile
  6575                           
  6576                           ;lcd.c: 604: LCDPSbits.LP3 = 0;
  6577  00189A  96AA               	bcf	4010,3,c	;volatile
  6578                           
  6579                           ;lcd.c: 605: LCDPSbits.LP2 = 1;
  6580  00189C  84AA               	bsf	4010,2,c	;volatile
  6581                           
  6582                           ;lcd.c: 606: LCDPSbits.LP1 = 0;
  6583  00189E  92AA               	bcf	4010,1,c	;volatile
  6584                           
  6585                           ;lcd.c: 607: LCDPSbits.LP0 = 0;
  6586  0018A0  90AA               	bcf	4010,0,c	;volatile
  6587                           
  6588                           ;lcd.c: 610: LCDSE0 = 0b11111111;
  6589  0018A2  68A9               	setf	4009,c	;volatile
  6590                           
  6591                           ;lcd.c: 611: LCDSE1 = 0b11100000;
  6592  0018A4  0EE0               	movlw	224
  6593  0018A6  6EB6               	movwf	4022,c	;volatile
  6594                           
  6595                           ;lcd.c: 612: LCDSE2 = 0b11111000;
  6596  0018A8  0EF8               	movlw	248
  6597  0018AA  6EB7               	movwf	4023,c	;volatile
  6598                           
  6599                           ;lcd.c: 613: LCDSE3 = 0b11000011;
  6600  0018AC  0EC3               	movlw	195
  6601  0018AE  6EB8               	movwf	4024,c	;volatile
  6602                           
  6603                           ;lcd.c: 614: LCDSE4 = 0b11111110;
  6604  0018B0  0EFE               	movlw	254
  6605  0018B2  6EB9               	movwf	4025,c	;volatile
  6606                           
  6607                           ;lcd.c: 615: LCDSE5 = 0b11001111;
  6608  0018B4  0ECF               	movlw	207
  6609  0018B6  6EBA               	movwf	4026,c	;volatile
  6610                           
  6611                           ;lcd.c: 618: lcd_disp_all(0x00);;
  6612  0018B8  0E00               	movlw	0
  6613  0018BA  ECDA  F00C         	call	_lcd_disp_all
  6614  0018BE  0012               	return		;funcret
  6615  0018C0                     __end_of_lcd_config:
  6616                           	opt stack 0
  6617                           tblptru	equ	0xFF8
  6618                           tblptrh	equ	0xFF7
  6619                           tblptrl	equ	0xFF6
  6620                           tablat	equ	0xFF5
  6621                           prodh	equ	0xFF4
  6622                           prodl	equ	0xFF3
  6623                           intcon	equ	0xFF2
  6624                           indf0	equ	0xFEF
  6625                           postinc0	equ	0xFEE
  6626                           fsr0h	equ	0xFEA
  6627                           fsr0l	equ	0xFE9
  6628                           wreg	equ	0xFE8
  6629                           postdec1	equ	0xFE5
  6630                           plusw1	equ	0xFE3
  6631                           fsr1h	equ	0xFE2
  6632                           fsr1l	equ	0xFE1
  6633                           indf2	equ	0xFDF
  6634                           plusw2	equ	0xFDB
  6635                           fsr2h	equ	0xFDA
  6636                           fsr2l	equ	0xFD9
  6637                           status	equ	0xFD8
  6638                           
  6639 ;; *************** function _lcd_disp_all *****************
  6640 ;; Defined at:
  6641 ;;		line 578 in file "src/driver/lcd.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  x               1    wreg     unsigned char 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  x               1   31[COMRAM] unsigned char 
  6646 ;;  i               1   32[COMRAM] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;Total ram usage:        2 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    4
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_ui_disp_start_cs600
  6667 ;;		_lcd_config
  6668 ;;		_ui_disp_all_on
  6669 ;;		_ui_disp_all_off
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text37
  6674  0019B4                     __ptext37:
  6675                           	opt stack 0
  6676  0019B4                     _lcd_disp_all:
  6677                           	opt stack 25
  6678                           
  6679                           ;incstack = 0
  6680                           ;lcd_disp_all@x stored from wreg
  6681  0019B4  6E20               	movwf	lcd_disp_all@x,c
  6682                           
  6683                           ;lcd.c: 580: uint8_t i;
  6684                           ;lcd.c: 581: for(i=0;i<24;i++)
  6685  0019B6  0E00               	movlw	0
  6686  0019B8  6E21               	movwf	lcd_disp_all@i,c
  6687  0019BA                     l5876:
  6688  0019BA  0E17               	movlw	23
  6689  0019BC  6421               	cpfsgt	lcd_disp_all@i,c
  6690  0019BE  D001               	goto	l5880
  6691  0019C0  0012               	return	
  6692  0019C2                     l5880:
  6693                           
  6694                           ;lcd.c: 582: {
  6695                           ;lcd.c: 583: pLCD[i]=x;
  6696  0019C2  5021               	movf	lcd_disp_all@i,w,c
  6697  0019C4  0D01               	mullw	1
  6698  0019C6  0E60               	movlw	low _pLCD
  6699  0019C8  24F3               	addwf	prodl,w,c
  6700  0019CA  6ED9               	movwf	fsr2l,c
  6701  0019CC  0E00               	movlw	high _pLCD
  6702  0019CE  20F4               	addwfc	prodh,w,c
  6703  0019D0  6EDA               	movwf	fsr2h,c
  6704  0019D2  C020  FFDF         	movff	lcd_disp_all@x,indf2
  6705  0019D6  2A21               	incf	lcd_disp_all@i,f,c
  6706  0019D8  D7F0               	goto	l5876
  6707  0019DA                     __end_of_lcd_disp_all:
  6708                           	opt stack 0
  6709                           tblptru	equ	0xFF8
  6710                           tblptrh	equ	0xFF7
  6711                           tblptrl	equ	0xFF6
  6712                           tablat	equ	0xFF5
  6713                           prodh	equ	0xFF4
  6714                           prodl	equ	0xFF3
  6715                           intcon	equ	0xFF2
  6716                           indf0	equ	0xFEF
  6717                           postinc0	equ	0xFEE
  6718                           fsr0h	equ	0xFEA
  6719                           fsr0l	equ	0xFE9
  6720                           wreg	equ	0xFE8
  6721                           postdec1	equ	0xFE5
  6722                           plusw1	equ	0xFE3
  6723                           fsr1h	equ	0xFE2
  6724                           fsr1l	equ	0xFE1
  6725                           indf2	equ	0xFDF
  6726                           plusw2	equ	0xFDB
  6727                           fsr2h	equ	0xFDA
  6728                           fsr2l	equ	0xFD9
  6729                           status	equ	0xFD8
  6730                           
  6731 ;; *************** function _lcd_bl_init *****************
  6732 ;; Defined at:
  6733 ;;		line 623 in file "src/driver/lcd.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;		None
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		status,2, status,0
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;Total ram usage:        0 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    4
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_lcd_init
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text38
  6762  001AB4                     __ptext38:
  6763                           	opt stack 0
  6764  001AB4                     _lcd_bl_init:
  6765                           	opt stack 25
  6766                           
  6767                           ;incstack = 0
  6768                           ;lcd.c: 625: do{TRISG |= (1<<4);}while(0);;
  6769  001AB4  8898               	bsf	3992,4,c	;volatile
  6770  001AB6  0012               	return	
  6771  001AB8                     __end_of_lcd_bl_init:
  6772                           	opt stack 0
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           indf0	equ	0xFEF
  6781                           postinc0	equ	0xFEE
  6782                           fsr0h	equ	0xFEA
  6783                           fsr0l	equ	0xFE9
  6784                           wreg	equ	0xFE8
  6785                           postdec1	equ	0xFE5
  6786                           plusw1	equ	0xFE3
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           indf2	equ	0xFDF
  6790                           plusw2	equ	0xFDB
  6791                           fsr2h	equ	0xFDA
  6792                           fsr2l	equ	0xFD9
  6793                           status	equ	0xFD8
  6794                           
  6795 ;; *************** function _key_polling *****************
  6796 ;; Defined at:
  6797 ;;		line 11 in file "src/driver/key.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  t8              1   32[COMRAM] unsigned char 
  6802 ;;  ktemp           1   31[COMRAM] unsigned char 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;Total ram usage:        2 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    4
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_main
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text39
  6827  00182A                     __ptext39:
  6828                           	opt stack 0
  6829  00182A                     _key_polling:
  6830                           	opt stack 26
  6831                           
  6832                           ;key.c: 13: uint8_t ktemp=(0x0);
  6833                           
  6834                           ;incstack = 0
  6835  00182A  0E00               	movlw	0
  6836  00182C  6E20               	movwf	key_polling@ktemp,c
  6837                           
  6838                           ;key.c: 14: uint8_t t8=0xff;
  6839  00182E  6821               	setf	key_polling@t8,c
  6840                           
  6841                           ;key.c: 16: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  6842  001830  0E0E               	movlw	14
  6843  001832  1293               	iorwf	3987,f,c	;volatile
  6844                           
  6845                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  6846  001834  5081               	movf	3969,w,c	;volatile
  6847  001836  0B0E               	andlw	14
  6848  001838  6E21               	movwf	key_polling@t8,c
  6849                           
  6850                           ;key.c: 18: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  6851  00183A  5021               	movf	key_polling@t8,w,c
  6852  00183C  0B0E               	andlw	14
  6853  00183E  0A0E               	xorlw	14
  6854  001840  B4D8               	btfsc	status,2,c
  6855  001842  D00A               	goto	l4964
  6856                           
  6857                           ;key.c: 19: __nop();;
  6858  001844  F000               	nop	
  6859                           
  6860                           ;key.c: 20: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  6861  001846  5081               	movf	3969,w,c	;volatile
  6862  001848  0B0E               	andlw	14
  6863  00184A  6E21               	movwf	key_polling@t8,c
  6864                           
  6865                           ;key.c: 21: if(!( t8 & (1<<3))){
  6866  00184C  A621               	btfss	key_polling@t8,3,c
  6867                           
  6868                           ;key.c: 22: ktemp |= (0x01<<0x0);
  6869  00184E  8020               	bsf	key_polling@ktemp,0,c
  6870                           
  6871                           ;key.c: 23: }
  6872                           ;key.c: 24: if(!( t8 & (1<<2))){
  6873  001850  A421               	btfss	key_polling@t8,2,c
  6874                           
  6875                           ;key.c: 25: ktemp |= (0x01<<0x01);
  6876  001852  8220               	bsf	key_polling@ktemp,1,c
  6877                           
  6878                           ;key.c: 26: }
  6879                           ;key.c: 27: if(!( t8 & (1<<1))){
  6880  001854  A221               	btfss	key_polling@t8,1,c
  6881                           
  6882                           ;key.c: 28: ktemp |= (0x01<<0x02);
  6883  001856  8420               	bsf	key_polling@ktemp,2,c
  6884  001858                     l4964:
  6885                           
  6886                           ;key.c: 29: }
  6887                           ;key.c: 30: }
  6888                           ;key.c: 31: keyValue= ktemp;
  6889  001858  C020  F039         	movff	key_polling@ktemp,_keyValue
  6890  00185C  0012               	return		;funcret
  6891  00185E                     __end_of_key_polling:
  6892                           	opt stack 0
  6893                           tblptru	equ	0xFF8
  6894                           tblptrh	equ	0xFF7
  6895                           tblptrl	equ	0xFF6
  6896                           tablat	equ	0xFF5
  6897                           prodh	equ	0xFF4
  6898                           prodl	equ	0xFF3
  6899                           intcon	equ	0xFF2
  6900                           indf0	equ	0xFEF
  6901                           postinc0	equ	0xFEE
  6902                           fsr0h	equ	0xFEA
  6903                           fsr0l	equ	0xFE9
  6904                           wreg	equ	0xFE8
  6905                           postdec1	equ	0xFE5
  6906                           plusw1	equ	0xFE3
  6907                           fsr1h	equ	0xFE2
  6908                           fsr1l	equ	0xFE1
  6909                           indf2	equ	0xFDF
  6910                           plusw2	equ	0xFDB
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           
  6915 ;; *************** function _in_adc_start_and_read *****************
  6916 ;; Defined at:
  6917 ;;		line 21 in file "src/driver/in_adc.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  ch              1    wreg     unsigned char 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;  ch              1    4[BANK0 ] unsigned char 
  6922 ;;  ret             2    5[BANK0 ] unsigned int 
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  2    2[BANK0 ] unsigned int 
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;Total ram usage:        6 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    5
  6939 ;; This function calls:
  6940 ;;		_delay_us
  6941 ;; This function is called by:
  6942 ;;		_main
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text40
  6947  001334                     __ptext40:
  6948                           	opt stack 0
  6949  001334                     _in_adc_start_and_read:
  6950                           	opt stack 25
  6951                           
  6952                           ;incstack = 0
  6953                           ;in_adc_start_and_read@ch stored from wreg
  6954  001334  0100               	movlb	0	; () banked
  6955  001336  6FBE               	movwf	in_adc_start_and_read@ch& (0+255),b
  6956                           
  6957                           ;in_adc.c: 23: uint16_t ret=0;
  6958  001338  0E00               	movlw	0
  6959  00133A  0100               	movlb	0	; () banked
  6960  00133C  6FC0               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
  6961  00133E  0E00               	movlw	0
  6962  001340  6FBF               	movwf	in_adc_start_and_read@ret& (0+255),b
  6963                           
  6964                           ; BSR set to: 0
  6965                           
  6966                           ; BSR set to: 0
  6967                           
  6968                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
  6969  001342  80C2               	bsf	4034,0,c	;volatile
  6970                           
  6971                           ; BSR set to: 0
  6972                           
  6973                           ; BSR set to: 0
  6974                           
  6975                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
  6976                           
  6977                           ; BSR set to: 0
  6978  001344  C0BE  F022         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
  6979  001348  4622               	rlncf	??_in_adc_start_and_read,f,c
  6980  00134A  4622               	rlncf	??_in_adc_start_and_read,f,c
  6981  00134C  50C2               	movf	4034,w,c	;volatile
  6982  00134E  1822               	xorwf	??_in_adc_start_and_read,w,c
  6983  001350  0BC3               	andlw	-61
  6984  001352  1822               	xorwf	??_in_adc_start_and_read,w,c
  6985  001354  6EC2               	movwf	4034,c	;volatile
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;in_adc.c: 26: delay_us(2);
  6989                           
  6990                           ; BSR set to: 0
  6991  001356  0E00               	movlw	0
  6992  001358  6E21               	movwf	delay_us@dly+1,c
  6993  00135A  0E02               	movlw	2
  6994  00135C  6E20               	movwf	delay_us@dly,c
  6995  00135E  EC2F  F00C         	call	_delay_us	;wreg free
  6996                           
  6997                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
  6998  001362  82C2               	bsf	4034,1,c	;volatile
  6999                           
  7000                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
  7001  001364  D001               	goto	l613
  7002  001366                     l614:
  7003  001366  F000               	nop	
  7004  001368                     l613:
  7005  001368  B2C2               	btfsc	4034,1,c	;volatile
  7006  00136A  D7FD               	goto	l614
  7007                           
  7008                           ;in_adc.c: 30: ret=ADRESH;
  7009  00136C  CFC4 F0BF          	movff	4036,in_adc_start_and_read@ret	;volatile
  7010  001370  0100               	movlb	0	; () banked
  7011  001372  6BC0               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;in_adc.c: 31: ret<<=8;
  7015  001374  0100               	movlb	0	; () banked
  7016  001376  51BF               	movf	in_adc_start_and_read@ret& (0+255),w,b
  7017  001378  6FC0               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
  7018  00137A  6BBF               	clrf	in_adc_start_and_read@ret& (0+255),b
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;in_adc.c: 32: ret |= ADRESL;
  7022  00137C  50C3               	movf	4035,w,c	;volatile
  7023  00137E  0100               	movlb	0	; () banked
  7024  001380  13BF               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;in_adc.c: 33: delay_us(2);
  7028  001382  0E00               	movlw	0
  7029  001384  6E21               	movwf	delay_us@dly+1,c
  7030  001386  0E02               	movlw	2
  7031  001388  6E20               	movwf	delay_us@dly,c
  7032  00138A  EC2F  F00C         	call	_delay_us	;wreg free
  7033                           
  7034                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
  7035  00138E  90C2               	bcf	4034,0,c	;volatile
  7036                           
  7037                           ;in_adc.c: 35: return ret;
  7038  001390  C0BF  F0BC         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
  7039  001394  C0C0  F0BD         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
  7040  001398  0012               	return	
  7041  00139A                     __end_of_in_adc_start_and_read:
  7042                           	opt stack 0
  7043                           tblptru	equ	0xFF8
  7044                           tblptrh	equ	0xFF7
  7045                           tblptrl	equ	0xFF6
  7046                           tablat	equ	0xFF5
  7047                           prodh	equ	0xFF4
  7048                           prodl	equ	0xFF3
  7049                           intcon	equ	0xFF2
  7050                           indf0	equ	0xFEF
  7051                           postinc0	equ	0xFEE
  7052                           fsr0h	equ	0xFEA
  7053                           fsr0l	equ	0xFE9
  7054                           wreg	equ	0xFE8
  7055                           postdec1	equ	0xFE5
  7056                           plusw1	equ	0xFE3
  7057                           fsr1h	equ	0xFE2
  7058                           fsr1l	equ	0xFE1
  7059                           indf2	equ	0xFDF
  7060                           plusw2	equ	0xFDB
  7061                           fsr2h	equ	0xFDA
  7062                           fsr2l	equ	0xFD9
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function _delay_us *****************
  7066 ;; Defined at:
  7067 ;;		line 82 in file "src/soc/clock.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  dly             2   31[COMRAM] unsigned int 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  i               2    0[BANK0 ] unsigned int 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, status,2, status,0
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;Total ram usage:        4 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    4
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_in_adc_start_and_read
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text41
  7096  00185E                     __ptext41:
  7097                           	opt stack 0
  7098  00185E                     _delay_us:
  7099                           	opt stack 25
  7100                           
  7101                           ;clock.c: 84: uint16_t i;
  7102                           ;clock.c: 85: for(i=0;i<dly;i++){
  7103                           
  7104                           ;incstack = 0
  7105  00185E  0E00               	movlw	0
  7106  001860  0100               	movlb	0	; () banked
  7107  001862  6FBB               	movwf	(delay_us@i+1)& (0+255),b
  7108  001864  0E00               	movlw	0
  7109  001866  6FBA               	movwf	delay_us@i& (0+255),b
  7110  001868  D00B               	goto	l6314
  7111  00186A                     l1100:
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;clock.c: 86: __nop();
  7115  00186A  F000               	nop	
  7116                           
  7117                           ;clock.c: 87: __nop();
  7118  00186C  F000               	nop	
  7119                           
  7120                           ;clock.c: 88: __nop();
  7121  00186E  F000               	nop	
  7122                           
  7123                           ;clock.c: 89: __nop();
  7124  001870  F000               	nop	
  7125                           
  7126                           ;clock.c: 91: __nop();
  7127  001872  F000               	nop	
  7128                           
  7129                           ;clock.c: 92: __nop();
  7130  001874  F000               	nop	
  7131                           
  7132                           ;clock.c: 93: __nop();
  7133  001876  F000               	nop	
  7134                           
  7135                           ;clock.c: 94: __nop();
  7136  001878  F000               	nop	
  7137  00187A  0100               	movlb	0	; () banked
  7138  00187C  4BBA               	infsnz	delay_us@i& (0+255),f,b
  7139  00187E  2BBB               	incf	(delay_us@i+1)& (0+255),f,b
  7140  001880                     l6314:
  7141                           
  7142                           ; BSR set to: 0
  7143  001880  5020               	movf	delay_us@dly,w,c
  7144  001882  0100               	movlb	0	; () banked
  7145  001884  5DBA               	subwf	delay_us@i& (0+255),w,b
  7146  001886  5021               	movf	delay_us@dly+1,w,c
  7147  001888  0100               	movlb	0	; () banked
  7148  00188A  59BB               	subwfb	(delay_us@i+1)& (0+255),w,b
  7149  00188C  B0D8               	btfsc	status,0,c
  7150  00188E  0012               	return	
  7151  001890  D7EC               	goto	l1100
  7152  001892                     __end_of_delay_us:
  7153                           	opt stack 0
  7154                           tblptru	equ	0xFF8
  7155                           tblptrh	equ	0xFF7
  7156                           tblptrl	equ	0xFF6
  7157                           tablat	equ	0xFF5
  7158                           prodh	equ	0xFF4
  7159                           prodl	equ	0xFF3
  7160                           intcon	equ	0xFF2
  7161                           indf0	equ	0xFEF
  7162                           postinc0	equ	0xFEE
  7163                           fsr0h	equ	0xFEA
  7164                           fsr0l	equ	0xFE9
  7165                           wreg	equ	0xFE8
  7166                           postdec1	equ	0xFE5
  7167                           plusw1	equ	0xFE3
  7168                           fsr1h	equ	0xFE2
  7169                           fsr1l	equ	0xFE1
  7170                           indf2	equ	0xFDF
  7171                           plusw2	equ	0xFDB
  7172                           fsr2h	equ	0xFDA
  7173                           fsr2l	equ	0xFD9
  7174                           status	equ	0xFD8
  7175                           
  7176 ;; *************** function _in_adc_init *****************
  7177 ;; Defined at:
  7178 ;;		line 9 in file "src/driver/in_adc.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        0 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    4
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_main
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text42
  7207  0019DA                     __ptext42:
  7208                           	opt stack 0
  7209  0019DA                     _in_adc_init:
  7210                           	opt stack 26
  7211                           
  7212                           ;in_adc.c: 11: ADCON1=0b00001101;
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;incstack = 0
  7216  0019DA  0E0D               	movlw	13
  7217  0019DC  6EC1               	movwf	4033,c	;volatile
  7218                           
  7219                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
  7220  0019DE  8EC0               	bsf	4032,7,c	;volatile
  7221                           
  7222                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
  7223  0019E0  86C0               	bsf	4032,3,c	;volatile
  7224  0019E2  88C0               	bsf	4032,4,c	;volatile
  7225  0019E4  8AC0               	bsf	4032,5,c	;volatile
  7226                           
  7227                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
  7228  0019E6  80C0               	bsf	4032,0,c	;volatile
  7229  0019E8  82C0               	bsf	4032,1,c	;volatile
  7230  0019EA  84C0               	bsf	4032,2,c	;volatile
  7231                           
  7232                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
  7233  0019EC  8EC2               	bsf	4034,7,c	;volatile
  7234                           
  7235                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
  7236  0019EE  50C2               	movf	4034,w,c	;volatile
  7237  0019F0  0BC3               	andlw	-61
  7238  0019F2  090C               	iorlw	12
  7239  0019F4  6EC2               	movwf	4034,c	;volatile
  7240                           
  7241                           ;in_adc.c: 17: PIR1bits.ADIF=0;
  7242  0019F6  9C9E               	bcf	3998,6,c	;volatile
  7243                           
  7244                           ;in_adc.c: 18: PIE1bits.ADIE=0;
  7245  0019F8  9C9D               	bcf	3997,6,c	;volatile
  7246                           
  7247                           ;in_adc.c: 19: IPR1bits.ADIP=0;
  7248  0019FA  9C9F               	bcf	3999,6,c	;volatile
  7249  0019FC  0012               	return		;funcret
  7250  0019FE                     __end_of_in_adc_init:
  7251                           	opt stack 0
  7252                           tblptru	equ	0xFF8
  7253                           tblptrh	equ	0xFF7
  7254                           tblptrl	equ	0xFF6
  7255                           tablat	equ	0xFF5
  7256                           prodh	equ	0xFF4
  7257                           prodl	equ	0xFF3
  7258                           intcon	equ	0xFF2
  7259                           indf0	equ	0xFEF
  7260                           postinc0	equ	0xFEE
  7261                           fsr0h	equ	0xFEA
  7262                           fsr0l	equ	0xFE9
  7263                           wreg	equ	0xFE8
  7264                           postdec1	equ	0xFE5
  7265                           plusw1	equ	0xFE3
  7266                           fsr1h	equ	0xFE2
  7267                           fsr1l	equ	0xFE1
  7268                           indf2	equ	0xFDF
  7269                           plusw2	equ	0xFDB
  7270                           fsr2h	equ	0xFDA
  7271                           fsr2l	equ	0xFD9
  7272                           status	equ	0xFD8
  7273                           
  7274 ;; *************** function _ads1115_start_conversion *****************
  7275 ;; Defined at:
  7276 ;;		line 115 in file "src/driver/ads1115.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  pAds1115        2    5[BANK0 ] PTR struct .
  7279 ;;		 -> ads1115Chip0(16), 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;Total ram usage:        2 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    8
  7298 ;; This function calls:
  7299 ;;		_ads1115_write_reg
  7300 ;; This function is called by:
  7301 ;;		_main
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text43
  7306  0018EA                     __ptext43:
  7307                           	opt stack 0
  7308  0018EA                     _ads1115_start_conversion:
  7309                           	opt stack 22
  7310                           
  7311                           ;ads1115.c: 117: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
  7312                           
  7313                           ;incstack = 0
  7314  0018EA  C0BF  F0BA         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
  7315  0018EE  C0C0  F0BB         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
  7316  0018F2  0E01               	movlw	1
  7317  0018F4  0100               	movlb	0	; () banked
  7318  0018F6  6FBC               	movwf	ads1115_write_reg@addr& (0+255),b
  7319  0018F8  0100               	movlb	0	; () banked
  7320  0018FA  EE20 F002          	lfsr	2,2
  7321  0018FE  51BF               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
  7322  001900  26D9               	addwf	fsr2l,f,c
  7323  001902  51C0               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
  7324  001904  22DA               	addwfc	fsr2h,f,c
  7325  001906  CFDE F0BD          	movff	postinc2,ads1115_write_reg@value
  7326  00190A  CFDD F0BE          	movff	postdec2,ads1115_write_reg@value+1
  7327  00190E  EC85  F003         	call	_ads1115_write_reg	;wreg free
  7328  001912  0012               	return		;funcret
  7329  001914                     __end_of_ads1115_start_conversion:
  7330                           	opt stack 0
  7331                           tblptru	equ	0xFF8
  7332                           tblptrh	equ	0xFF7
  7333                           tblptrl	equ	0xFF6
  7334                           tablat	equ	0xFF5
  7335                           prodh	equ	0xFF4
  7336                           prodl	equ	0xFF3
  7337                           intcon	equ	0xFF2
  7338                           indf0	equ	0xFEF
  7339                           postinc0	equ	0xFEE
  7340                           fsr0h	equ	0xFEA
  7341                           fsr0l	equ	0xFE9
  7342                           wreg	equ	0xFE8
  7343                           postdec1	equ	0xFE5
  7344                           plusw1	equ	0xFE3
  7345                           fsr1h	equ	0xFE2
  7346                           fsr1l	equ	0xFE1
  7347                           indf2	equ	0xFDF
  7348                           postinc2	equ	0xFDE
  7349                           postdec2	equ	0xFDD
  7350                           plusw2	equ	0xFDB
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8
  7354                           
  7355 ;; *************** function _ads1115_write_reg *****************
  7356 ;; Defined at:
  7357 ;;		line 15 in file "src/driver/ads1115.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  pAds1115        2    0[BANK0 ] PTR struct .
  7360 ;;		 -> ads1115Chip0(16), 
  7361 ;;  addr            1    2[BANK0 ] unsigned char 
  7362 ;;  value           2    3[BANK0 ] unsigned int 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7374 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;Total ram usage:        5 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    7
  7381 ;; This function calls:
  7382 ;;		_iic_send_byte
  7383 ;;		_iic_start
  7384 ;;		_iic_stop
  7385 ;; This function is called by:
  7386 ;;		_ads1115_start_conversion
  7387 ;;		_ads1115_set_threshold_lo
  7388 ;;		_ads1115_set_threshold_hi
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text44
  7393  00070A                     __ptext44:
  7394                           	opt stack 0
  7395  00070A                     _ads1115_write_reg:
  7396                           	opt stack 22
  7397                           
  7398                           ;ads1115.c: 17: pAds1115->iic_start();
  7399                           
  7400                           ;incstack = 0
  7401  00070A  0100               	movlb	0	; () banked
  7402  00070C  EE20 F006          	lfsr	2,6
  7403  000710  51BA               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
  7404  000712  26D9               	addwf	fsr2l,f,c
  7405  000714  51BB               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
  7406  000716  22DA               	addwfc	fsr2h,f,c
  7407  000718  D801               	call	u4308
  7408  00071A  D00A               	goto	u4309
  7409  00071C                     u4308:
  7410  00071C  0005               	push	
  7411  00071E  6EFA               	movwf	pclath,c
  7412  000720  50DE               	movf	postinc2,w,c
  7413  000722  6EFD               	movwf	tosl,c
  7414  000724  50DE               	movf	postinc2,w,c
  7415  000726  6EFE               	movwf	tosh,c
  7416  000728  50F8               	movf	tblptru,w,c
  7417  00072A  6EFF               	movwf	tosu,c
  7418  00072C  50FA               	movf	pclath,w,c
  7419  00072E  0012               	return		;indir
  7420  000730                     u4309:
  7421                           
  7422                           ;ads1115.c: 19: pAds1115->iic_send_byte(pAds1115->slaveAddr);
  7423  000730  0100               	movlb	0	; () banked
  7424  000732  EE20 F00A          	lfsr	2,10
  7425  000736  51BA               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
  7426  000738  26D9               	addwf	fsr2l,f,c
  7427  00073A  51BB               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
  7428  00073C  22DA               	addwfc	fsr2h,f,c
  7429  00073E  D801               	call	u4318
  7430  000740  D012               	goto	u4319
  7431  000742                     u4318:
  7432  000742  0005               	push	
  7433  000744  6EFA               	movwf	pclath,c
  7434  000746  50DE               	movf	postinc2,w,c
  7435  000748  6EFD               	movwf	tosl,c
  7436  00074A  50DE               	movf	postinc2,w,c
  7437  00074C  6EFE               	movwf	tosh,c
  7438  00074E  50F8               	movf	tblptru,w,c
  7439  000750  6EFF               	movwf	tosu,c
  7440  000752  50FA               	movf	pclath,w,c
  7441  000754  0100               	movlb	0	; () banked
  7442  000756  EE20 F001          	lfsr	2,1
  7443  00075A  51BA               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
  7444  00075C  26D9               	addwf	fsr2l,f,c
  7445  00075E  51BB               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
  7446  000760  22DA               	addwfc	fsr2h,f,c
  7447  000762  50DF               	movf	indf2,w,c
  7448  000764  0012               	return		;indir
  7449  000766                     u4319:
  7450                           
  7451                           ;ads1115.c: 20: pAds1115->iic_send_byte(addr);
  7452  000766  0100               	movlb	0	; () banked
  7453  000768  EE20 F00A          	lfsr	2,10
  7454  00076C  51BA               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
  7455  00076E  26D9               	addwf	fsr2l,f,c
  7456  000770  51BB               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
  7457  000772  22DA               	addwfc	fsr2h,f,c
  7458  000774  D801               	call	u4328
  7459  000776  D00C               	goto	u4329
  7460  000778                     u4328:
  7461  000778  0005               	push	
  7462  00077A  6EFA               	movwf	pclath,c
  7463  00077C  50DE               	movf	postinc2,w,c
  7464  00077E  6EFD               	movwf	tosl,c
  7465  000780  50DE               	movf	postinc2,w,c
  7466  000782  6EFE               	movwf	tosh,c
  7467  000784  50F8               	movf	tblptru,w,c
  7468  000786  6EFF               	movwf	tosu,c
  7469  000788  50FA               	movf	pclath,w,c
  7470  00078A  0100               	movlb	0	; () banked
  7471  00078C  51BC               	movf	ads1115_write_reg@addr& (0+255),w,b
  7472  00078E  0012               	return		;indir
  7473  000790                     u4329:
  7474                           
  7475                           ;ads1115.c: 22: pAds1115->iic_send_byte((uint8_t)(value>>8));
  7476  000790  0100               	movlb	0	; () banked
  7477  000792  EE20 F00A          	lfsr	2,10
  7478  000796  51BA               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
  7479  000798  26D9               	addwf	fsr2l,f,c
  7480  00079A  51BB               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
  7481  00079C  22DA               	addwfc	fsr2h,f,c
  7482  00079E  D801               	call	u4338
  7483  0007A0  D00C               	goto	u4339
  7484  0007A2                     u4338:
  7485  0007A2  0005               	push	
  7486  0007A4  6EFA               	movwf	pclath,c
  7487  0007A6  50DE               	movf	postinc2,w,c
  7488  0007A8  6EFD               	movwf	tosl,c
  7489  0007AA  50DE               	movf	postinc2,w,c
  7490  0007AC  6EFE               	movwf	tosh,c
  7491  0007AE  50F8               	movf	tblptru,w,c
  7492  0007B0  6EFF               	movwf	tosu,c
  7493  0007B2  50FA               	movf	pclath,w,c
  7494  0007B4  0100               	movlb	0	; () banked
  7495  0007B6  51BE               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
  7496  0007B8  0012               	return		;indir
  7497  0007BA                     u4339:
  7498                           
  7499                           ;ads1115.c: 23: pAds1115->iic_send_byte((uint8_t)(value&0xff));
  7500  0007BA  0100               	movlb	0	; () banked
  7501  0007BC  EE20 F00A          	lfsr	2,10
  7502  0007C0  51BA               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
  7503  0007C2  26D9               	addwf	fsr2l,f,c
  7504  0007C4  51BB               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
  7505  0007C6  22DA               	addwfc	fsr2h,f,c
  7506  0007C8  D801               	call	u4348
  7507  0007CA  D00C               	goto	u4349
  7508  0007CC                     u4348:
  7509  0007CC  0005               	push	
  7510  0007CE  6EFA               	movwf	pclath,c
  7511  0007D0  50DE               	movf	postinc2,w,c
  7512  0007D2  6EFD               	movwf	tosl,c
  7513  0007D4  50DE               	movf	postinc2,w,c
  7514  0007D6  6EFE               	movwf	tosh,c
  7515  0007D8  50F8               	movf	tblptru,w,c
  7516  0007DA  6EFF               	movwf	tosu,c
  7517  0007DC  50FA               	movf	pclath,w,c
  7518  0007DE  0100               	movlb	0	; () banked
  7519  0007E0  51BD               	movf	ads1115_write_reg@value& (0+255),w,b
  7520  0007E2  0012               	return		;indir
  7521  0007E4                     u4349:
  7522                           
  7523                           ;ads1115.c: 24: pAds1115->iic_stop();
  7524  0007E4  0100               	movlb	0	; () banked
  7525  0007E6  EE20 F008          	lfsr	2,8
  7526  0007EA  51BA               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
  7527  0007EC  26D9               	addwf	fsr2l,f,c
  7528  0007EE  51BB               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
  7529  0007F0  22DA               	addwfc	fsr2h,f,c
  7530  0007F2  D801               	call	u4358
  7531  0007F4  0012               	return	
  7532  0007F6                     u4358:
  7533  0007F6  0005               	push	
  7534  0007F8  6EFA               	movwf	pclath,c
  7535  0007FA  50DE               	movf	postinc2,w,c
  7536  0007FC  6EFD               	movwf	tosl,c
  7537  0007FE  50DE               	movf	postinc2,w,c
  7538  000800  6EFE               	movwf	tosh,c
  7539  000802  50F8               	movf	tblptru,w,c
  7540  000804  6EFF               	movwf	tosu,c
  7541  000806  50FA               	movf	pclath,w,c
  7542  000808  0012               	return		;indir
  7543  00080A                     __end_of_ads1115_write_reg:
  7544                           	opt stack 0
  7545                           tosu	equ	0xFFF
  7546                           tosh	equ	0xFFE
  7547                           tosl	equ	0xFFD
  7548                           pclath	equ	0xFFA
  7549                           tblptru	equ	0xFF8
  7550                           tblptrh	equ	0xFF7
  7551                           tblptrl	equ	0xFF6
  7552                           tablat	equ	0xFF5
  7553                           prodh	equ	0xFF4
  7554                           prodl	equ	0xFF3
  7555                           intcon	equ	0xFF2
  7556                           indf0	equ	0xFEF
  7557                           postinc0	equ	0xFEE
  7558                           fsr0h	equ	0xFEA
  7559                           fsr0l	equ	0xFE9
  7560                           wreg	equ	0xFE8
  7561                           postdec1	equ	0xFE5
  7562                           plusw1	equ	0xFE3
  7563                           fsr1h	equ	0xFE2
  7564                           fsr1l	equ	0xFE1
  7565                           indf2	equ	0xFDF
  7566                           postinc2	equ	0xFDE
  7567                           postdec2	equ	0xFDD
  7568                           plusw2	equ	0xFDB
  7569                           fsr2h	equ	0xFDA
  7570                           fsr2l	equ	0xFD9
  7571                           status	equ	0xFD8
  7572                           
  7573 ;; *************** function _ads1115_read_conversion *****************
  7574 ;; Defined at:
  7575 ;;		line 120 in file "src/driver/ads1115.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  pAds1115        2    8[BANK0 ] PTR struct .
  7578 ;;		 -> ads1115Chip0(16), 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  result          2   11[BANK0 ] unsigned int 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  2    8[BANK0 ] unsigned int 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;Total ram usage:        5 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    8
  7597 ;; This function calls:
  7598 ;;		_ads1115_read_reg
  7599 ;; This function is called by:
  7600 ;;		_main
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           	psect	text45
  7605  001664                     __ptext45:
  7606                           	opt stack 0
  7607  001664                     _ads1115_read_conversion:
  7608                           	opt stack 22
  7609                           
  7610                           ;ads1115.c: 122: uint16_t result;
  7611                           ;ads1115.c: 123: result=ads1115_read_reg(pAds1115,(0x00));
  7612                           
  7613                           ;incstack = 0
  7614  001664  C0C2  F0BC         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
  7615  001668  C0C3  F0BD         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
  7616  00166C  0E00               	movlw	0
  7617  00166E  0100               	movlb	0	; () banked
  7618  001670  6FBE               	movwf	ads1115_read_reg@addr& (0+255),b
  7619  001672  ECA7  F002         	call	_ads1115_read_reg
  7620  001676  C0BC  F0C5         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
  7621  00167A  C0BD  F0C6         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
  7622                           
  7623                           ;ads1115.c: 124: if(pAds1115->chip<ADS1113){
  7624  00167E  C0C2  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
  7625  001682  C0C3  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
  7626  001686  0E03               	movlw	3
  7627  001688  60DF               	cpfslt	indf2,c
  7628  00168A  D00A               	goto	l6484
  7629                           
  7630                           ;ads1115.c: 125: result >>= 4;
  7631  00168C  0100               	movlb	0	; () banked
  7632  00168E  3BC5               	swapf	ads1115_read_conversion@result& (0+255),f,b
  7633  001690  3BC6               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
  7634  001692  0E0F               	movlw	15
  7635  001694  17C5               	andwf	ads1115_read_conversion@result& (0+255),f,b
  7636  001696  51C6               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
  7637  001698  0BF0               	andlw	240
  7638  00169A  13C5               	iorwf	ads1115_read_conversion@result& (0+255),f,b
  7639  00169C  0E0F               	movlw	15
  7640  00169E  17C6               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
  7641  0016A0                     l6484:
  7642                           
  7643                           ;ads1115.c: 126: }
  7644                           ;ads1115.c: 127: return result;
  7645  0016A0  C0C5  F0C2         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
  7646  0016A4  C0C6  F0C3         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
  7647  0016A8  0012               	return	
  7648  0016AA                     __end_of_ads1115_read_conversion:
  7649                           	opt stack 0
  7650                           tosu	equ	0xFFF
  7651                           tosh	equ	0xFFE
  7652                           tosl	equ	0xFFD
  7653                           pclath	equ	0xFFA
  7654                           tblptru	equ	0xFF8
  7655                           tblptrh	equ	0xFF7
  7656                           tblptrl	equ	0xFF6
  7657                           tablat	equ	0xFF5
  7658                           prodh	equ	0xFF4
  7659                           prodl	equ	0xFF3
  7660                           intcon	equ	0xFF2
  7661                           indf0	equ	0xFEF
  7662                           postinc0	equ	0xFEE
  7663                           fsr0h	equ	0xFEA
  7664                           fsr0l	equ	0xFE9
  7665                           wreg	equ	0xFE8
  7666                           postdec1	equ	0xFE5
  7667                           plusw1	equ	0xFE3
  7668                           fsr1h	equ	0xFE2
  7669                           fsr1l	equ	0xFE1
  7670                           indf2	equ	0xFDF
  7671                           postinc2	equ	0xFDE
  7672                           postdec2	equ	0xFDD
  7673                           plusw2	equ	0xFDB
  7674                           fsr2h	equ	0xFDA
  7675                           fsr2l	equ	0xFD9
  7676                           status	equ	0xFD8
  7677                           
  7678 ;; *************** function _ads1115_read_reg *****************
  7679 ;; Defined at:
  7680 ;;		line 27 in file "src/driver/ads1115.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  pAds1115        2    2[BANK0 ] PTR struct .
  7683 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), 
  7684 ;;  addr            1    4[BANK0 ] unsigned char 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  t16             2    6[BANK0 ] unsigned int 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  2    2[BANK0 ] unsigned int 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7696 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;Total ram usage:        6 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    7
  7703 ;; This function calls:
  7704 ;;		_iic_received_byte_if_ack
  7705 ;;		_iic_send_byte
  7706 ;;		_iic_start
  7707 ;;		_iic_stop
  7708 ;; This function is called by:
  7709 ;;		_main
  7710 ;;		_ads1115_read_conversion
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text46
  7715  00054E                     __ptext46:
  7716                           	opt stack 0
  7717  00054E                     _ads1115_read_reg:
  7718                           	opt stack 23
  7719                           
  7720                           ;ads1115.c: 29: uint16_t t16=0;
  7721                           
  7722                           ;incstack = 0
  7723  00054E  0E00               	movlw	0
  7724  000550  0100               	movlb	0	; () banked
  7725  000552  6FC1               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
  7726  000554  0E00               	movlw	0
  7727  000556  6FC0               	movwf	ads1115_read_reg@t16& (0+255),b
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;ads1115.c: 30: pAds1115->iic_start();
  7731  000558  0100               	movlb	0	; () banked
  7732  00055A  EE20 F006          	lfsr	2,6
  7733  00055E  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7734  000560  26D9               	addwf	fsr2l,f,c
  7735  000562  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7736  000564  22DA               	addwfc	fsr2h,f,c
  7737  000566  D801               	call	u4218
  7738  000568  D00A               	goto	l6274
  7739  00056A                     u4218:
  7740  00056A  0005               	push	
  7741  00056C  6EFA               	movwf	pclath,c
  7742  00056E  50DE               	movf	postinc2,w,c
  7743  000570  6EFD               	movwf	tosl,c
  7744  000572  50DE               	movf	postinc2,w,c
  7745  000574  6EFE               	movwf	tosh,c
  7746  000576  50F8               	movf	tblptru,w,c
  7747  000578  6EFF               	movwf	tosu,c
  7748  00057A  50FA               	movf	pclath,w,c
  7749  00057C  0012               	return		;indir
  7750  00057E                     l6274:
  7751                           
  7752                           ;ads1115.c: 32: pAds1115->iic_send_byte(pAds1115->slaveAddr);
  7753  00057E  0100               	movlb	0	; () banked
  7754  000580  EE20 F00A          	lfsr	2,10
  7755  000584  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7756  000586  26D9               	addwf	fsr2l,f,c
  7757  000588  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7758  00058A  22DA               	addwfc	fsr2h,f,c
  7759  00058C  D801               	call	u4228
  7760  00058E  D012               	goto	l6276
  7761  000590                     u4228:
  7762  000590  0005               	push	
  7763  000592  6EFA               	movwf	pclath,c
  7764  000594  50DE               	movf	postinc2,w,c
  7765  000596  6EFD               	movwf	tosl,c
  7766  000598  50DE               	movf	postinc2,w,c
  7767  00059A  6EFE               	movwf	tosh,c
  7768  00059C  50F8               	movf	tblptru,w,c
  7769  00059E  6EFF               	movwf	tosu,c
  7770  0005A0  50FA               	movf	pclath,w,c
  7771  0005A2  0100               	movlb	0	; () banked
  7772  0005A4  EE20 F001          	lfsr	2,1
  7773  0005A8  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7774  0005AA  26D9               	addwf	fsr2l,f,c
  7775  0005AC  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7776  0005AE  22DA               	addwfc	fsr2h,f,c
  7777  0005B0  50DF               	movf	indf2,w,c
  7778  0005B2  0012               	return		;indir
  7779  0005B4                     l6276:
  7780                           
  7781                           ;ads1115.c: 33: pAds1115->iic_send_byte(addr);
  7782  0005B4  0100               	movlb	0	; () banked
  7783  0005B6  EE20 F00A          	lfsr	2,10
  7784  0005BA  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7785  0005BC  26D9               	addwf	fsr2l,f,c
  7786  0005BE  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7787  0005C0  22DA               	addwfc	fsr2h,f,c
  7788  0005C2  D801               	call	u4238
  7789  0005C4  D00C               	goto	l6278
  7790  0005C6                     u4238:
  7791  0005C6  0005               	push	
  7792  0005C8  6EFA               	movwf	pclath,c
  7793  0005CA  50DE               	movf	postinc2,w,c
  7794  0005CC  6EFD               	movwf	tosl,c
  7795  0005CE  50DE               	movf	postinc2,w,c
  7796  0005D0  6EFE               	movwf	tosh,c
  7797  0005D2  50F8               	movf	tblptru,w,c
  7798  0005D4  6EFF               	movwf	tosu,c
  7799  0005D6  50FA               	movf	pclath,w,c
  7800  0005D8  0100               	movlb	0	; () banked
  7801  0005DA  51BE               	movf	ads1115_read_reg@addr& (0+255),w,b
  7802  0005DC  0012               	return		;indir
  7803  0005DE                     l6278:
  7804                           
  7805                           ;ads1115.c: 34: pAds1115->iic_stop();
  7806  0005DE  0100               	movlb	0	; () banked
  7807  0005E0  EE20 F008          	lfsr	2,8
  7808  0005E4  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7809  0005E6  26D9               	addwf	fsr2l,f,c
  7810  0005E8  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7811  0005EA  22DA               	addwfc	fsr2h,f,c
  7812  0005EC  D801               	call	u4248
  7813  0005EE  D00A               	goto	l6280
  7814  0005F0                     u4248:
  7815  0005F0  0005               	push	
  7816  0005F2  6EFA               	movwf	pclath,c
  7817  0005F4  50DE               	movf	postinc2,w,c
  7818  0005F6  6EFD               	movwf	tosl,c
  7819  0005F8  50DE               	movf	postinc2,w,c
  7820  0005FA  6EFE               	movwf	tosh,c
  7821  0005FC  50F8               	movf	tblptru,w,c
  7822  0005FE  6EFF               	movwf	tosu,c
  7823  000600  50FA               	movf	pclath,w,c
  7824  000602  0012               	return		;indir
  7825  000604                     l6280:
  7826                           
  7827                           ;ads1115.c: 36: pAds1115->iic_start();
  7828  000604  0100               	movlb	0	; () banked
  7829  000606  EE20 F006          	lfsr	2,6
  7830  00060A  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7831  00060C  26D9               	addwf	fsr2l,f,c
  7832  00060E  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7833  000610  22DA               	addwfc	fsr2h,f,c
  7834  000612  D801               	call	u4258
  7835  000614  D00A               	goto	l6282
  7836  000616                     u4258:
  7837  000616  0005               	push	
  7838  000618  6EFA               	movwf	pclath,c
  7839  00061A  50DE               	movf	postinc2,w,c
  7840  00061C  6EFD               	movwf	tosl,c
  7841  00061E  50DE               	movf	postinc2,w,c
  7842  000620  6EFE               	movwf	tosh,c
  7843  000622  50F8               	movf	tblptru,w,c
  7844  000624  6EFF               	movwf	tosu,c
  7845  000626  50FA               	movf	pclath,w,c
  7846  000628  0012               	return		;indir
  7847  00062A                     l6282:
  7848                           
  7849                           ;ads1115.c: 37: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
  7850  00062A  0100               	movlb	0	; () banked
  7851  00062C  EE20 F00A          	lfsr	2,10
  7852  000630  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7853  000632  26D9               	addwf	fsr2l,f,c
  7854  000634  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7855  000636  22DA               	addwfc	fsr2h,f,c
  7856  000638  D801               	call	u4268
  7857  00063A  D016               	goto	l6284
  7858  00063C                     u4268:
  7859  00063C  0005               	push	
  7860  00063E  6EFA               	movwf	pclath,c
  7861  000640  50DE               	movf	postinc2,w,c
  7862  000642  6EFD               	movwf	tosl,c
  7863  000644  50DE               	movf	postinc2,w,c
  7864  000646  6EFE               	movwf	tosh,c
  7865  000648  50F8               	movf	tblptru,w,c
  7866  00064A  6EFF               	movwf	tosu,c
  7867  00064C  50FA               	movf	pclath,w,c
  7868  00064E  0100               	movlb	0	; () banked
  7869  000650  EE20 F001          	lfsr	2,1
  7870  000654  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7871  000656  26D9               	addwf	fsr2l,f,c
  7872  000658  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7873  00065A  22DA               	addwfc	fsr2h,f,c
  7874  00065C  50DF               	movf	indf2,w,c
  7875  00065E  0100               	movlb	0	; () banked
  7876  000660  6FBF               	movwf	??_ads1115_read_reg& (0+255),b
  7877  000662  0100               	movlb	0	; () banked
  7878  000664  29BF               	incf	??_ads1115_read_reg& (0+255),w,b
  7879  000666  0012               	return		;indir
  7880  000668                     l6284:
  7881                           
  7882                           ;ads1115.c: 38: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
  7883  000668  0100               	movlb	0	; () banked
  7884  00066A  EE20 F00E          	lfsr	2,14
  7885  00066E  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7886  000670  26D9               	addwf	fsr2l,f,c
  7887  000672  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7888  000674  22DA               	addwfc	fsr2h,f,c
  7889  000676  D801               	call	u4278
  7890  000678  D00B               	goto	u4279
  7891  00067A                     u4278:
  7892  00067A  0005               	push	
  7893  00067C  6EFA               	movwf	pclath,c
  7894  00067E  50DE               	movf	postinc2,w,c
  7895  000680  6EFD               	movwf	tosl,c
  7896  000682  50DE               	movf	postinc2,w,c
  7897  000684  6EFE               	movwf	tosh,c
  7898  000686  50F8               	movf	tblptru,w,c
  7899  000688  6EFF               	movwf	tosu,c
  7900  00068A  50FA               	movf	pclath,w,c
  7901  00068C  0E00               	movlw	0
  7902  00068E  0012               	return		;indir
  7903  000690                     u4279:
  7904  000690  0100               	movlb	0	; () banked
  7905  000692  6FBF               	movwf	??_ads1115_read_reg& (0+255),b
  7906  000694  0100               	movlb	0	; () banked
  7907  000696  51BF               	movf	??_ads1115_read_reg& (0+255),w,b
  7908  000698  0100               	movlb	0	; () banked
  7909  00069A  6FC0               	movwf	ads1115_read_reg@t16& (0+255),b
  7910  00069C  6BC1               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;ads1115.c: 39: t16<<=8;
  7914  00069E  0100               	movlb	0	; () banked
  7915  0006A0  51C0               	movf	ads1115_read_reg@t16& (0+255),w,b
  7916  0006A2  6FC1               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
  7917  0006A4  6BC0               	clrf	ads1115_read_reg@t16& (0+255),b
  7918                           
  7919                           ;ads1115.c: 40: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
  7920  0006A6  0100               	movlb	0	; () banked
  7921  0006A8  EE20 F00E          	lfsr	2,14
  7922  0006AC  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7923  0006AE  26D9               	addwf	fsr2l,f,c
  7924  0006B0  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7925  0006B2  22DA               	addwfc	fsr2h,f,c
  7926  0006B4  D801               	call	u4288
  7927  0006B6  D00B               	goto	u4289
  7928  0006B8                     u4288:
  7929  0006B8  0005               	push	
  7930  0006BA  6EFA               	movwf	pclath,c
  7931  0006BC  50DE               	movf	postinc2,w,c
  7932  0006BE  6EFD               	movwf	tosl,c
  7933  0006C0  50DE               	movf	postinc2,w,c
  7934  0006C2  6EFE               	movwf	tosh,c
  7935  0006C4  50F8               	movf	tblptru,w,c
  7936  0006C6  6EFF               	movwf	tosu,c
  7937  0006C8  50FA               	movf	pclath,w,c
  7938  0006CA  0E00               	movlw	0
  7939  0006CC  0012               	return		;indir
  7940  0006CE                     u4289:
  7941  0006CE  0100               	movlb	0	; () banked
  7942  0006D0  6FBF               	movwf	??_ads1115_read_reg& (0+255),b
  7943  0006D2  0100               	movlb	0	; () banked
  7944  0006D4  51BF               	movf	??_ads1115_read_reg& (0+255),w,b
  7945  0006D6  0100               	movlb	0	; () banked
  7946  0006D8  13C0               	iorwf	ads1115_read_reg@t16& (0+255),f,b
  7947                           
  7948                           ;ads1115.c: 42: pAds1115->iic_stop();
  7949  0006DA  0100               	movlb	0	; () banked
  7950  0006DC  EE20 F008          	lfsr	2,8
  7951  0006E0  51BC               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
  7952  0006E2  26D9               	addwf	fsr2l,f,c
  7953  0006E4  51BD               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
  7954  0006E6  22DA               	addwfc	fsr2h,f,c
  7955  0006E8  D801               	call	u4298
  7956  0006EA  D00A               	goto	l6288
  7957  0006EC                     u4298:
  7958  0006EC  0005               	push	
  7959  0006EE  6EFA               	movwf	pclath,c
  7960  0006F0  50DE               	movf	postinc2,w,c
  7961  0006F2  6EFD               	movwf	tosl,c
  7962  0006F4  50DE               	movf	postinc2,w,c
  7963  0006F6  6EFE               	movwf	tosh,c
  7964  0006F8  50F8               	movf	tblptru,w,c
  7965  0006FA  6EFF               	movwf	tosu,c
  7966  0006FC  50FA               	movf	pclath,w,c
  7967  0006FE  0012               	return		;indir
  7968  000700                     l6288:
  7969                           
  7970                           ;ads1115.c: 43: return t16;
  7971  000700  C0C0  F0BC         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
  7972  000704  C0C1  F0BD         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
  7973  000708  0012               	return	
  7974  00070A                     __end_of_ads1115_read_reg:
  7975                           	opt stack 0
  7976                           tosu	equ	0xFFF
  7977                           tosh	equ	0xFFE
  7978                           tosl	equ	0xFFD
  7979                           pclath	equ	0xFFA
  7980                           tblptru	equ	0xFF8
  7981                           tblptrh	equ	0xFF7
  7982                           tblptrl	equ	0xFF6
  7983                           tablat	equ	0xFF5
  7984                           prodh	equ	0xFF4
  7985                           prodl	equ	0xFF3
  7986                           intcon	equ	0xFF2
  7987                           indf0	equ	0xFEF
  7988                           postinc0	equ	0xFEE
  7989                           fsr0h	equ	0xFEA
  7990                           fsr0l	equ	0xFE9
  7991                           wreg	equ	0xFE8
  7992                           postdec1	equ	0xFE5
  7993                           plusw1	equ	0xFE3
  7994                           fsr1h	equ	0xFE2
  7995                           fsr1l	equ	0xFE1
  7996                           indf2	equ	0xFDF
  7997                           postinc2	equ	0xFDE
  7998                           postdec2	equ	0xFDD
  7999                           plusw2	equ	0xFDB
  8000                           fsr2h	equ	0xFDA
  8001                           fsr2l	equ	0xFD9
  8002                           status	equ	0xFD8
  8003                           
  8004 ;; *************** function _iic_start *****************
  8005 ;; Defined at:
  8006 ;;		line 18 in file "src/driver/i2c.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;		None
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;		None
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  1    wreg      void 
  8013 ;; Registers used:
  8014 ;;		status,2, status,0
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8024 ;;Total ram usage:        0 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; Hardware stack levels required when called:    4
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_ads1115_init
  8031 ;;		_at24c02_init
  8032 ;;		_pcf8574_init
  8033 ;;		_ads1115_read_reg
  8034 ;;		_ads1115_write_reg
  8035 ;;		_pcf8574_write_singel
  8036 ;;		_ad421_write_via_pcf8574
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text47
  8041  0017B0                     __ptext47:
  8042                           	opt stack 0
  8043  0017B0                     _iic_start:
  8044                           	opt stack 24
  8045                           
  8046                           ;incstack = 0
  8047                           ;i2c.c: 20: do{TRISC &= ~(1<<3);}while(0);;;
  8048  0017B0  9694               	bcf	3988,3,c	;volatile
  8049                           
  8050                           ;i2c.c: 21: do{TRISC &= ~(1<<4);}while(0);;;
  8051  0017B2  9894               	bcf	3988,4,c	;volatile
  8052                           
  8053                           ;i2c.c: 23: do{LATC |= (1<<4);}while(0);;;
  8054  0017B4  888B               	bsf	3979,4,c	;volatile
  8055                           
  8056                           ;i2c.c: 24: do{LATC |= (1<<3);}while(0);;;
  8057  0017B6  868B               	bsf	3979,3,c	;volatile
  8058                           
  8059                           ;i2c.c: 25: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8060  0017B8  F000               	nop	
  8061  0017BA  F000               	nop	
  8062  0017BC  F000               	nop	
  8063  0017BE  F000               	nop	
  8064  0017C0  F000               	nop	
  8065  0017C2  F000               	nop	
  8066  0017C4  F000               	nop	
  8067  0017C6  F000               	nop	
  8068  0017C8  F000               	nop	
  8069  0017CA  F000               	nop	
  8070  0017CC  F000               	nop	
  8071  0017CE  F000               	nop	
  8072                           
  8073                           ;i2c.c: 26: do{LATC &= ~(1<<4);}while(0);;;
  8074  0017D0  988B               	bcf	3979,4,c	;volatile
  8075                           
  8076                           ;i2c.c: 27: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8077  0017D2  F000               	nop	
  8078  0017D4  F000               	nop	
  8079  0017D6  F000               	nop	
  8080  0017D8  F000               	nop	
  8081  0017DA  F000               	nop	
  8082  0017DC  F000               	nop	
  8083  0017DE  F000               	nop	
  8084  0017E0  F000               	nop	
  8085  0017E2  F000               	nop	
  8086  0017E4  F000               	nop	
  8087  0017E6  F000               	nop	
  8088  0017E8  F000               	nop	
  8089                           
  8090                           ;i2c.c: 28: do{LATC &= ~(1<<3);}while(0);;;
  8091  0017EA  968B               	bcf	3979,3,c	;volatile
  8092  0017EC  0012               	return	
  8093  0017EE                     __end_of_iic_start:
  8094                           	opt stack 0
  8095                           tosu	equ	0xFFF
  8096                           tosh	equ	0xFFE
  8097                           tosl	equ	0xFFD
  8098                           pclath	equ	0xFFA
  8099                           tblptru	equ	0xFF8
  8100                           tblptrh	equ	0xFF7
  8101                           tblptrl	equ	0xFF6
  8102                           tablat	equ	0xFF5
  8103                           prodh	equ	0xFF4
  8104                           prodl	equ	0xFF3
  8105                           intcon	equ	0xFF2
  8106                           indf0	equ	0xFEF
  8107                           postinc0	equ	0xFEE
  8108                           fsr0h	equ	0xFEA
  8109                           fsr0l	equ	0xFE9
  8110                           wreg	equ	0xFE8
  8111                           postdec1	equ	0xFE5
  8112                           plusw1	equ	0xFE3
  8113                           fsr1h	equ	0xFE2
  8114                           fsr1l	equ	0xFE1
  8115                           indf2	equ	0xFDF
  8116                           postinc2	equ	0xFDE
  8117                           postdec2	equ	0xFDD
  8118                           plusw2	equ	0xFDB
  8119                           fsr2h	equ	0xFDA
  8120                           fsr2l	equ	0xFD9
  8121                           status	equ	0xFD8
  8122                           
  8123 ;; *************** function _iic_send_byte *****************
  8124 ;; Defined at:
  8125 ;;		line 80 in file "src/driver/i2c.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;  x               1    wreg     unsigned char 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  x               1   32[COMRAM] unsigned char 
  8130 ;;  i               1   33[COMRAM] unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1    wreg      unsigned char 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2, status,0, cstack
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;Total ram usage:        2 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:    6
  8147 ;; This function calls:
  8148 ;;		_iic_waite_ack
  8149 ;; This function is called by:
  8150 ;;		_ads1115_init
  8151 ;;		_at24c02_init
  8152 ;;		_pcf8574_init
  8153 ;;		_ads1115_read_reg
  8154 ;;		_ads1115_write_reg
  8155 ;;		_pcf8574_write_singel
  8156 ;;		_ad421_write_via_pcf8574
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text48
  8161  00145E                     __ptext48:
  8162                           	opt stack 0
  8163  00145E                     _iic_send_byte:
  8164                           	opt stack 22
  8165                           
  8166                           ;incstack = 0
  8167                           ;iic_send_byte@x stored from wreg
  8168  00145E  6E21               	movwf	iic_send_byte@x,c
  8169                           
  8170                           ;i2c.c: 82: uint8_t i;
  8171                           ;i2c.c: 83: do{TRISC &= ~(1<<3);}while(0);;;
  8172  001460  9694               	bcf	3988,3,c	;volatile
  8173                           
  8174                           ;i2c.c: 84: do{TRISC &= ~(1<<4);}while(0);;;
  8175  001462  9894               	bcf	3988,4,c	;volatile
  8176                           
  8177                           ;i2c.c: 85: do{LATC &= ~(1<<3);}while(0);;;
  8178  001464  968B               	bcf	3979,3,c	;volatile
  8179                           
  8180                           ;i2c.c: 86: for(i=0;i<8;i++){
  8181  001466  0E00               	movlw	0
  8182  001468  6E22               	movwf	iic_send_byte@i,c
  8183  00146A                     l5940:
  8184  00146A  0E07               	movlw	7
  8185  00146C  6422               	cpfsgt	iic_send_byte@i,c
  8186  00146E  D001               	goto	l502
  8187  001470  D023               	goto	l6000
  8188  001472                     l502:
  8189                           
  8190                           ;i2c.c: 87: if(x&0x80){
  8191  001472  AE21               	btfss	iic_send_byte@x,7,c
  8192  001474  D002               	goto	l5946
  8193                           
  8194                           ;i2c.c: 88: do{LATC |= (1<<4);}while(0);;;
  8195  001476  888B               	bsf	3979,4,c	;volatile
  8196                           
  8197                           ;i2c.c: 89: }
  8198  001478  D001               	goto	l510
  8199  00147A                     l5946:
  8200  00147A  988B               	bcf	3979,4,c	;volatile
  8201  00147C                     l510:
  8202  00147C  868B               	bsf	3979,3,c	;volatile
  8203                           
  8204                           ;i2c.c: 94: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8205  00147E  F000               	nop	
  8206  001480  F000               	nop	
  8207  001482  F000               	nop	
  8208  001484  F000               	nop	
  8209  001486  F000               	nop	
  8210  001488  F000               	nop	
  8211  00148A  F000               	nop	
  8212  00148C  F000               	nop	
  8213  00148E  F000               	nop	
  8214  001490  F000               	nop	
  8215  001492  F000               	nop	
  8216  001494  F000               	nop	
  8217                           
  8218                           ;i2c.c: 95: do{LATC &= ~(1<<3);}while(0);;;
  8219  001496  968B               	bcf	3979,3,c	;volatile
  8220                           
  8221                           ;i2c.c: 96: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8222  001498  F000               	nop	
  8223  00149A  F000               	nop	
  8224  00149C  F000               	nop	
  8225  00149E  F000               	nop	
  8226  0014A0  F000               	nop	
  8227  0014A2  F000               	nop	
  8228  0014A4  F000               	nop	
  8229  0014A6  F000               	nop	
  8230  0014A8  F000               	nop	
  8231  0014AA  F000               	nop	
  8232  0014AC  F000               	nop	
  8233  0014AE  F000               	nop	
  8234                           
  8235                           ;i2c.c: 97: x<<=1;
  8236  0014B0  90D8               	bcf	status,0,c
  8237  0014B2  3621               	rlcf	iic_send_byte@x,f,c
  8238  0014B4  2A22               	incf	iic_send_byte@i,f,c
  8239  0014B6  D7D9               	goto	l5940
  8240  0014B8                     l6000:
  8241                           
  8242                           ;i2c.c: 98: }
  8243                           ;i2c.c: 99: return iic_waite_ack();
  8244                           ;	Return value of _iic_send_byte is never used
  8245  0014B8  EC5F  F00A         	call	_iic_waite_ack
  8246  0014BC  0012               	return	
  8247  0014BE                     __end_of_iic_send_byte:
  8248                           	opt stack 0
  8249                           tosu	equ	0xFFF
  8250                           tosh	equ	0xFFE
  8251                           tosl	equ	0xFFD
  8252                           pclath	equ	0xFFA
  8253                           tblptru	equ	0xFF8
  8254                           tblptrh	equ	0xFF7
  8255                           tblptrl	equ	0xFF6
  8256                           tablat	equ	0xFF5
  8257                           prodh	equ	0xFF4
  8258                           prodl	equ	0xFF3
  8259                           intcon	equ	0xFF2
  8260                           indf0	equ	0xFEF
  8261                           postinc0	equ	0xFEE
  8262                           fsr0h	equ	0xFEA
  8263                           fsr0l	equ	0xFE9
  8264                           wreg	equ	0xFE8
  8265                           postdec1	equ	0xFE5
  8266                           plusw1	equ	0xFE3
  8267                           fsr1h	equ	0xFE2
  8268                           fsr1l	equ	0xFE1
  8269                           indf2	equ	0xFDF
  8270                           postinc2	equ	0xFDE
  8271                           postdec2	equ	0xFDD
  8272                           plusw2	equ	0xFDB
  8273                           fsr2h	equ	0xFDA
  8274                           fsr2l	equ	0xFD9
  8275                           status	equ	0xFD8
  8276                           
  8277 ;; *************** function _iic_waite_ack *****************
  8278 ;; Defined at:
  8279 ;;		line 60 in file "src/driver/i2c.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  timeout         1   31[COMRAM] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      unsigned char 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;Total ram usage:        1 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    5
  8300 ;; This function calls:
  8301 ;;		_iic_stop
  8302 ;; This function is called by:
  8303 ;;		_ads1115_init
  8304 ;;		_iic_send_byte
  8305 ;;		_at24c02_init
  8306 ;;		_pcf8574_init
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text49
  8311  0014BE                     __ptext49:
  8312                           	opt stack 0
  8313  0014BE                     _iic_waite_ack:
  8314                           	opt stack 22
  8315                           
  8316                           ;i2c.c: 62: uint8_t timeout=200;
  8317                           
  8318                           ;incstack = 0
  8319  0014BE  0EC8               	movlw	200
  8320  0014C0  6E20               	movwf	iic_waite_ack@timeout,c
  8321                           
  8322                           ;i2c.c: 63: do{TRISC &= ~(1<<3);}while(0);;;
  8323  0014C2  9694               	bcf	3988,3,c	;volatile
  8324                           
  8325                           ;i2c.c: 64: do{TRISC |= (1<<4);}while(0);;;
  8326  0014C4  8894               	bsf	3988,4,c	;volatile
  8327                           
  8328                           ;i2c.c: 65: do{LATC &= ~(1<<3);}while(0);;;
  8329  0014C6  968B               	bcf	3979,3,c	;volatile
  8330                           
  8331                           ;i2c.c: 66: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8332  0014C8  F000               	nop	
  8333  0014CA  F000               	nop	
  8334  0014CC  F000               	nop	
  8335  0014CE  F000               	nop	
  8336  0014D0  F000               	nop	
  8337  0014D2  F000               	nop	
  8338  0014D4  F000               	nop	
  8339  0014D6  F000               	nop	
  8340  0014D8  F000               	nop	
  8341  0014DA  F000               	nop	
  8342  0014DC  F000               	nop	
  8343  0014DE  F000               	nop	
  8344                           
  8345                           ;i2c.c: 67: do{LATC |= (1<<3);}while(0);;;
  8346  0014E0  868B               	bsf	3979,3,c	;volatile
  8347                           
  8348                           ;i2c.c: 68: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8349  0014E2  F000               	nop	
  8350  0014E4  F000               	nop	
  8351  0014E6  F000               	nop	
  8352  0014E8  F000               	nop	
  8353  0014EA  F000               	nop	
  8354  0014EC  F000               	nop	
  8355  0014EE  F000               	nop	
  8356  0014F0  F000               	nop	
  8357  0014F2  F000               	nop	
  8358  0014F4  F000               	nop	
  8359  0014F6  F000               	nop	
  8360  0014F8  F000               	nop	
  8361                           
  8362                           ;i2c.c: 69: while(timeout--){
  8363  0014FA  D002               	goto	l5744
  8364  0014FC                     l487:
  8365                           
  8366                           ;i2c.c: 70: if(!(PORTC & (1<<4)))break;
  8367  0014FC  A882               	btfss	3970,4,c	;volatile
  8368  0014FE  D004               	goto	l5746
  8369  001500                     l5744:
  8370  001500  0620               	decf	iic_waite_ack@timeout,f,c
  8371  001502  2820               	incf	iic_waite_ack@timeout,w,c
  8372  001504  A4D8               	btfss	status,2,c
  8373  001506  D7FA               	goto	l487
  8374  001508                     l5746:
  8375                           
  8376                           ;i2c.c: 71: }
  8377                           ;i2c.c: 72: if(!timeout){
  8378  001508  5020               	movf	iic_waite_ack@timeout,w,c
  8379  00150A  A4D8               	btfss	status,2,c
  8380  00150C  D004               	goto	l5754
  8381                           
  8382                           ;i2c.c: 73: iic_stop();
  8383  00150E  ECF7  F00B         	call	_iic_stop	;wreg free
  8384                           
  8385                           ;i2c.c: 74: return 0;
  8386  001512  0E00               	movlw	0
  8387  001514  0012               	return	
  8388  001516                     l5754:
  8389  001516  968B               	bcf	3979,3,c	;volatile
  8390                           
  8391                           ;i2c.c: 77: return 1;
  8392  001518  0E01               	movlw	1
  8393  00151A  0012               	return	
  8394  00151C                     __end_of_iic_waite_ack:
  8395                           	opt stack 0
  8396                           tosu	equ	0xFFF
  8397                           tosh	equ	0xFFE
  8398                           tosl	equ	0xFFD
  8399                           pclath	equ	0xFFA
  8400                           tblptru	equ	0xFF8
  8401                           tblptrh	equ	0xFF7
  8402                           tblptrl	equ	0xFF6
  8403                           tablat	equ	0xFF5
  8404                           prodh	equ	0xFF4
  8405                           prodl	equ	0xFF3
  8406                           intcon	equ	0xFF2
  8407                           indf0	equ	0xFEF
  8408                           postinc0	equ	0xFEE
  8409                           fsr0h	equ	0xFEA
  8410                           fsr0l	equ	0xFE9
  8411                           wreg	equ	0xFE8
  8412                           postdec1	equ	0xFE5
  8413                           plusw1	equ	0xFE3
  8414                           fsr1h	equ	0xFE2
  8415                           fsr1l	equ	0xFE1
  8416                           indf2	equ	0xFDF
  8417                           postinc2	equ	0xFDE
  8418                           postdec2	equ	0xFDD
  8419                           plusw2	equ	0xFDB
  8420                           fsr2h	equ	0xFDA
  8421                           fsr2l	equ	0xFD9
  8422                           status	equ	0xFD8
  8423                           
  8424 ;; *************** function _iic_stop *****************
  8425 ;; Defined at:
  8426 ;;		line 32 in file "src/driver/i2c.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		status,2, status,0
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    4
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_ads1115_init
  8451 ;;		_iic_waite_ack
  8452 ;;		_at24c02_init
  8453 ;;		_pcf8574_init
  8454 ;;		_ads1115_read_reg
  8455 ;;		_ads1115_write_reg
  8456 ;;		_pcf8574_write_singel
  8457 ;;		_ad421_write_via_pcf8574
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text50
  8462  0017EE                     __ptext50:
  8463                           	opt stack 0
  8464  0017EE                     _iic_stop:
  8465                           	opt stack 24
  8466                           
  8467                           ;incstack = 0
  8468                           ;i2c.c: 34: do{TRISC &= ~(1<<3);}while(0);;;
  8469  0017EE  9694               	bcf	3988,3,c	;volatile
  8470                           
  8471                           ;i2c.c: 35: do{TRISC &= ~(1<<4);}while(0);;;
  8472  0017F0  9894               	bcf	3988,4,c	;volatile
  8473                           
  8474                           ;i2c.c: 36: do{LATC &= ~(1<<4);}while(0);;;
  8475  0017F2  988B               	bcf	3979,4,c	;volatile
  8476                           
  8477                           ;i2c.c: 37: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8478  0017F4  F000               	nop	
  8479  0017F6  F000               	nop	
  8480  0017F8  F000               	nop	
  8481  0017FA  F000               	nop	
  8482  0017FC  F000               	nop	
  8483  0017FE  F000               	nop	
  8484  001800  F000               	nop	
  8485  001802  F000               	nop	
  8486  001804  F000               	nop	
  8487  001806  F000               	nop	
  8488  001808  F000               	nop	
  8489  00180A  F000               	nop	
  8490                           
  8491                           ;i2c.c: 38: do{LATC |= (1<<3);}while(0);;;
  8492  00180C  868B               	bsf	3979,3,c	;volatile
  8493                           
  8494                           ;i2c.c: 39: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8495  00180E  F000               	nop	
  8496  001810  F000               	nop	
  8497  001812  F000               	nop	
  8498  001814  F000               	nop	
  8499  001816  F000               	nop	
  8500  001818  F000               	nop	
  8501  00181A  F000               	nop	
  8502  00181C  F000               	nop	
  8503  00181E  F000               	nop	
  8504  001820  F000               	nop	
  8505  001822  F000               	nop	
  8506  001824  F000               	nop	
  8507                           
  8508                           ;i2c.c: 40: do{LATC |= (1<<4);}while(0);;;
  8509  001826  888B               	bsf	3979,4,c	;volatile
  8510  001828  0012               	return	
  8511  00182A                     __end_of_iic_stop:
  8512                           	opt stack 0
  8513                           tosu	equ	0xFFF
  8514                           tosh	equ	0xFFE
  8515                           tosl	equ	0xFFD
  8516                           pclath	equ	0xFFA
  8517                           tblptru	equ	0xFF8
  8518                           tblptrh	equ	0xFF7
  8519                           tblptrl	equ	0xFF6
  8520                           tablat	equ	0xFF5
  8521                           prodh	equ	0xFF4
  8522                           prodl	equ	0xFF3
  8523                           intcon	equ	0xFF2
  8524                           indf0	equ	0xFEF
  8525                           postinc0	equ	0xFEE
  8526                           fsr0h	equ	0xFEA
  8527                           fsr0l	equ	0xFE9
  8528                           wreg	equ	0xFE8
  8529                           postdec1	equ	0xFE5
  8530                           plusw1	equ	0xFE3
  8531                           fsr1h	equ	0xFE2
  8532                           fsr1l	equ	0xFE1
  8533                           indf2	equ	0xFDF
  8534                           postinc2	equ	0xFDE
  8535                           postdec2	equ	0xFDD
  8536                           plusw2	equ	0xFDB
  8537                           fsr2h	equ	0xFDA
  8538                           fsr2l	equ	0xFD9
  8539                           status	equ	0xFD8
  8540                           
  8541 ;; *************** function _iic_received_byte_if_ack *****************
  8542 ;; Defined at:
  8543 ;;		line 121 in file "src/driver/i2c.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;  ack             1    wreg     unsigned char 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  ack             1    0[BANK0 ] unsigned char 
  8548 ;;  ret             1    1[BANK0 ] unsigned char 
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      unsigned char 
  8551 ;; Registers used:
  8552 ;;		wreg, status,2, status,0, cstack
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;Total ram usage:        2 bytes
  8563 ;; Hardware stack levels used:    1
  8564 ;; Hardware stack levels required when called:    5
  8565 ;; This function calls:
  8566 ;;		_iic_received_byte
  8567 ;;		_iic_send_ack
  8568 ;; This function is called by:
  8569 ;;		_ads1115_init
  8570 ;;		_at24c02_init
  8571 ;;		_pcf8574_init
  8572 ;;		_ads1115_read_reg
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text51
  8577  001A20                     __ptext51:
  8578                           	opt stack 0
  8579  001A20                     _iic_received_byte_if_ack:
  8580                           	opt stack 24
  8581                           
  8582                           ;incstack = 0
  8583                           ;iic_received_byte_if_ack@ack stored from wreg
  8584  001A20  0100               	movlb	0	; () banked
  8585  001A22  6FBA               	movwf	iic_received_byte_if_ack@ack& (0+255),b
  8586                           
  8587                           ;i2c.c: 123: uint8_t ret=0;
  8588  001A24  0E00               	movlw	0
  8589  001A26  0100               	movlb	0	; () banked
  8590  001A28  6FBB               	movwf	iic_received_byte_if_ack@ret& (0+255),b
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;i2c.c: 124: ret=iic_received_byte();
  8594  001A2A  EC8E  F00A         	call	_iic_received_byte	;wreg free
  8595  001A2E  0100               	movlb	0	; () banked
  8596  001A30  6FBB               	movwf	iic_received_byte_if_ack@ret& (0+255),b
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;i2c.c: 125: iic_send_ack(ack);
  8600  001A32  0100               	movlb	0	; () banked
  8601  001A34  51BA               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
  8602  001A36  EC0D  F00B         	call	_iic_send_ack
  8603                           
  8604                           ;i2c.c: 126: return ret;
  8605  001A3A  0100               	movlb	0	; () banked
  8606  001A3C  51BB               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
  8607  001A3E  0012               	return	
  8608  001A40                     __end_of_iic_received_byte_if_ack:
  8609                           	opt stack 0
  8610                           tosu	equ	0xFFF
  8611                           tosh	equ	0xFFE
  8612                           tosl	equ	0xFFD
  8613                           pclath	equ	0xFFA
  8614                           tblptru	equ	0xFF8
  8615                           tblptrh	equ	0xFF7
  8616                           tblptrl	equ	0xFF6
  8617                           tablat	equ	0xFF5
  8618                           prodh	equ	0xFF4
  8619                           prodl	equ	0xFF3
  8620                           intcon	equ	0xFF2
  8621                           indf0	equ	0xFEF
  8622                           postinc0	equ	0xFEE
  8623                           fsr0h	equ	0xFEA
  8624                           fsr0l	equ	0xFE9
  8625                           wreg	equ	0xFE8
  8626                           postdec1	equ	0xFE5
  8627                           plusw1	equ	0xFE3
  8628                           fsr1h	equ	0xFE2
  8629                           fsr1l	equ	0xFE1
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           plusw2	equ	0xFDB
  8634                           fsr2h	equ	0xFDA
  8635                           fsr2l	equ	0xFD9
  8636                           status	equ	0xFD8
  8637                           
  8638 ;; *************** function _iic_send_ack *****************
  8639 ;; Defined at:
  8640 ;;		line 44 in file "src/driver/i2c.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  ack             1    wreg     char 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  ack             1   31[COMRAM] char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8658 ;;Total ram usage:        1 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    4
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_iic_received_byte_if_ack
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text52
  8669  00161A                     __ptext52:
  8670                           	opt stack 0
  8671  00161A                     _iic_send_ack:
  8672                           	opt stack 24
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;incstack = 0
  8676                           ;iic_send_ack@ack stored from wreg
  8677  00161A  6E20               	movwf	iic_send_ack@ack,c
  8678                           
  8679                           ;i2c.c: 46: do{TRISC &= ~(1<<3);}while(0);;;
  8680  00161C  9694               	bcf	3988,3,c	;volatile
  8681                           
  8682                           ;i2c.c: 47: do{TRISC &= ~(1<<4);}while(0);;;
  8683  00161E  9894               	bcf	3988,4,c	;volatile
  8684                           
  8685                           ;i2c.c: 48: do{LATC &= ~(1<<3);}while(0);;;
  8686  001620  968B               	bcf	3979,3,c	;volatile
  8687                           
  8688                           ;i2c.c: 49: if(ack){
  8689  001622  5020               	movf	iic_send_ack@ack,w,c
  8690  001624  B4D8               	btfsc	status,2,c
  8691  001626  D002               	goto	l5634
  8692                           
  8693                           ;i2c.c: 50: do{LATC |= (1<<4);}while(0);;;
  8694  001628  888B               	bsf	3979,4,c	;volatile
  8695                           
  8696                           ;i2c.c: 51: }else{
  8697  00162A  D001               	goto	l5636
  8698  00162C                     l5634:
  8699  00162C  988B               	bcf	3979,4,c	;volatile
  8700  00162E                     l5636:
  8701  00162E  F000               	nop	
  8702  001630  F000               	nop	
  8703  001632  F000               	nop	
  8704  001634  F000               	nop	
  8705  001636  F000               	nop	
  8706  001638  F000               	nop	
  8707  00163A  F000               	nop	
  8708  00163C  F000               	nop	
  8709  00163E  F000               	nop	
  8710  001640  F000               	nop	
  8711  001642  F000               	nop	
  8712  001644  F000               	nop	
  8713                           
  8714                           ;i2c.c: 55: do{LATC |= (1<<3);}while(0);;;
  8715  001646  868B               	bsf	3979,3,c	;volatile
  8716                           
  8717                           ;i2c.c: 56: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
  8718  001648  F000               	nop	
  8719  00164A  F000               	nop	
  8720  00164C  F000               	nop	
  8721  00164E  F000               	nop	
  8722  001650  F000               	nop	
  8723  001652  F000               	nop	
  8724  001654  F000               	nop	
  8725  001656  F000               	nop	
  8726  001658  F000               	nop	
  8727  00165A  F000               	nop	
  8728  00165C  F000               	nop	
  8729  00165E  F000               	nop	
  8730                           
  8731                           ;i2c.c: 57: do{LATC &= ~(1<<3);}while(0);;;
  8732  001660  968B               	bcf	3979,3,c	;volatile
  8733  001662  0012               	return	
  8734  001664                     __end_of_iic_send_ack:
  8735                           	opt stack 0
  8736                           tosu	equ	0xFFF
  8737                           tosh	equ	0xFFE
  8738                           tosl	equ	0xFFD
  8739                           pclath	equ	0xFFA
  8740                           tblptru	equ	0xFF8
  8741                           tblptrh	equ	0xFF7
  8742                           tblptrl	equ	0xFF6
  8743                           tablat	equ	0xFF5
  8744                           prodh	equ	0xFF4
  8745                           prodl	equ	0xFF3
  8746                           intcon	equ	0xFF2
  8747                           indf0	equ	0xFEF
  8748                           postinc0	equ	0xFEE
  8749                           fsr0h	equ	0xFEA
  8750                           fsr0l	equ	0xFE9
  8751                           wreg	equ	0xFE8
  8752                           postdec1	equ	0xFE5
  8753                           plusw1	equ	0xFE3
  8754                           fsr1h	equ	0xFE2
  8755                           fsr1l	equ	0xFE1
  8756                           indf2	equ	0xFDF
  8757                           postinc2	equ	0xFDE
  8758                           postdec2	equ	0xFDD
  8759                           plusw2	equ	0xFDB
  8760                           fsr2h	equ	0xFDA
  8761                           fsr2l	equ	0xFD9
  8762                           status	equ	0xFD8
  8763                           
  8764 ;; *************** function _iic_received_byte *****************
  8765 ;; Defined at:
  8766 ;;		line 102 in file "src/driver/i2c.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  i               1   32[COMRAM] unsigned char 
  8771 ;;  ret             1   31[COMRAM] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      unsigned char 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;Total ram usage:        2 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    4
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_iic_received_byte_if_ack
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text53
  8796  00151C                     __ptext53:
  8797                           	opt stack 0
  8798  00151C                     _iic_received_byte:
  8799                           	opt stack 24
  8800                           
  8801                           ;i2c.c: 104: uint8_t i;
  8802                           ;i2c.c: 105: uint8_t ret=0;
  8803                           
  8804                           ;incstack = 0
  8805  00151C  0E00               	movlw	0
  8806  00151E  6E20               	movwf	iic_received_byte@ret,c
  8807                           
  8808                           ;i2c.c: 106: do{TRISC &= ~(1<<3);}while(0);;;
  8809  001520  9694               	bcf	3988,3,c	;volatile
  8810                           
  8811                           ;i2c.c: 107: do{TRISC |= (1<<4);}while(0);;;
  8812  001522  8894               	bsf	3988,4,c	;volatile
  8813                           
  8814                           ;i2c.c: 108: for(i=0;i<8;i++){
  8815  001524  0E00               	movlw	0
  8816  001526  6E21               	movwf	iic_received_byte@i,c
  8817  001528                     l5766:
  8818  001528  0E07               	movlw	7
  8819  00152A  6421               	cpfsgt	iic_received_byte@i,c
  8820  00152C  D001               	goto	l5770
  8821  00152E  D020               	goto	l5830
  8822  001530                     l5770:
  8823                           
  8824                           ;i2c.c: 109: ret<<=1;
  8825  001530  90D8               	bcf	status,0,c
  8826  001532  3620               	rlcf	iic_received_byte@ret,f,c
  8827                           
  8828                           ;i2c.c: 110: do{LATC &= ~(1<<3);}while(0);;;
  8829  001534  968B               	bcf	3979,3,c	;volatile
  8830                           
  8831                           ;i2c.c: 111: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
  8832  001536  F000               	nop	
  8833  001538  F000               	nop	
  8834  00153A  F000               	nop	
  8835  00153C  F000               	nop	
  8836  00153E  F000               	nop	
  8837  001540  F000               	nop	
  8838  001542  F000               	nop	
  8839  001544  F000               	nop	
  8840  001546  F000               	nop	
  8841  001548  F000               	nop	
  8842  00154A  F000               	nop	
  8843  00154C  F000               	nop	
  8844                           
  8845                           ;i2c.c: 112: do{LATC |= (1<<3);}while(0);;;
  8846  00154E  868B               	bsf	3979,3,c	;volatile
  8847                           
  8848                           ;i2c.c: 113: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
  8849  001550  F000               	nop	
  8850  001552  F000               	nop	
  8851  001554  F000               	nop	
  8852  001556  F000               	nop	
  8853  001558  F000               	nop	
  8854  00155A  F000               	nop	
  8855  00155C  F000               	nop	
  8856  00155E  F000               	nop	
  8857  001560  F000               	nop	
  8858  001562  F000               	nop	
  8859  001564  F000               	nop	
  8860  001566  F000               	nop	
  8861                           
  8862                           ;i2c.c: 114: if((PORTC & (1<<4))){
  8863  001568  B882               	btfsc	3970,4,c	;volatile
  8864                           
  8865                           ;i2c.c: 115: ret|=1;
  8866  00156A  8020               	bsf	iic_received_byte@ret,0,c
  8867  00156C  2A21               	incf	iic_received_byte@i,f,c
  8868  00156E  D7DC               	goto	l5766
  8869  001570                     l5830:
  8870  001570  968B               	bcf	3979,3,c	;volatile
  8871                           
  8872                           ;i2c.c: 119: return ret;
  8873  001572  5020               	movf	iic_received_byte@ret,w,c
  8874  001574  0012               	return	
  8875  001576                     __end_of_iic_received_byte:
  8876                           	opt stack 0
  8877                           tosu	equ	0xFFF
  8878                           tosh	equ	0xFFE
  8879                           tosl	equ	0xFFD
  8880                           pclath	equ	0xFFA
  8881                           tblptru	equ	0xFF8
  8882                           tblptrh	equ	0xFF7
  8883                           tblptrl	equ	0xFF6
  8884                           tablat	equ	0xFF5
  8885                           prodh	equ	0xFF4
  8886                           prodl	equ	0xFF3
  8887                           intcon	equ	0xFF2
  8888                           indf0	equ	0xFEF
  8889                           postinc0	equ	0xFEE
  8890                           fsr0h	equ	0xFEA
  8891                           fsr0l	equ	0xFE9
  8892                           wreg	equ	0xFE8
  8893                           postdec1	equ	0xFE5
  8894                           plusw1	equ	0xFE3
  8895                           fsr1h	equ	0xFE2
  8896                           fsr1l	equ	0xFE1
  8897                           indf2	equ	0xFDF
  8898                           postinc2	equ	0xFDE
  8899                           postdec2	equ	0xFDD
  8900                           plusw2	equ	0xFDB
  8901                           fsr2h	equ	0xFDA
  8902                           fsr2l	equ	0xFD9
  8903                           status	equ	0xFD8
  8904                           
  8905 ;; *************** function _ads1115_init_all_chip *****************
  8906 ;; Defined at:
  8907 ;;		line 107 in file "src/driver/ads1115.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8925 ;;Total ram usage:        0 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    5
  8928 ;; This function calls:
  8929 ;;		_ads1115_init
  8930 ;; This function is called by:
  8931 ;;		_main
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text54
  8936  0019FE                     __ptext54:
  8937                           	opt stack 0
  8938  0019FE                     _ads1115_init_all_chip:
  8939                           	opt stack 25
  8940                           
  8941                           ;ads1115.c: 110: ads1115_init(&ads1115Chip0,(0x90));
  8942                           
  8943                           ;incstack = 0
  8944  0019FE  0E94               	movlw	low _ads1115Chip0
  8945  001A00  6E20               	movwf	ads1115_init@pAds1115,c
  8946  001A02  0E00               	movlw	high _ads1115Chip0
  8947  001A04  6E21               	movwf	ads1115_init@pAds1115+1,c
  8948  001A06  0E90               	movlw	144
  8949  001A08  6E22               	movwf	ads1115_init@slvaddr,c
  8950  001A0A  ECCC  F006         	call	_ads1115_init	;wreg free
  8951                           
  8952                           ;ads1115.c: 112: ads1115_init(&ads1115Chip1,(0x92));
  8953  001A0E  0E84               	movlw	low _ads1115Chip1
  8954  001A10  6E20               	movwf	ads1115_init@pAds1115,c
  8955  001A12  0E00               	movlw	high _ads1115Chip1
  8956  001A14  6E21               	movwf	ads1115_init@pAds1115+1,c
  8957  001A16  0E92               	movlw	146
  8958  001A18  6E22               	movwf	ads1115_init@slvaddr,c
  8959  001A1A  ECCC  F006         	call	_ads1115_init	;wreg free
  8960  001A1E  0012               	return		;funcret
  8961  001A20                     __end_of_ads1115_init_all_chip:
  8962                           	opt stack 0
  8963                           tosu	equ	0xFFF
  8964                           tosh	equ	0xFFE
  8965                           tosl	equ	0xFFD
  8966                           pclath	equ	0xFFA
  8967                           tblptru	equ	0xFF8
  8968                           tblptrh	equ	0xFF7
  8969                           tblptrl	equ	0xFF6
  8970                           tablat	equ	0xFF5
  8971                           prodh	equ	0xFF4
  8972                           prodl	equ	0xFF3
  8973                           intcon	equ	0xFF2
  8974                           indf0	equ	0xFEF
  8975                           postinc0	equ	0xFEE
  8976                           fsr0h	equ	0xFEA
  8977                           fsr0l	equ	0xFE9
  8978                           wreg	equ	0xFE8
  8979                           postdec1	equ	0xFE5
  8980                           plusw1	equ	0xFE3
  8981                           fsr1h	equ	0xFE2
  8982                           fsr1l	equ	0xFE1
  8983                           indf2	equ	0xFDF
  8984                           postinc2	equ	0xFDE
  8985                           postdec2	equ	0xFDD
  8986                           plusw2	equ	0xFDB
  8987                           fsr2h	equ	0xFDA
  8988                           fsr2l	equ	0xFD9
  8989                           status	equ	0xFD8
  8990                           
  8991 ;; *************** function _ads1115_init *****************
  8992 ;; Defined at:
  8993 ;;		line 3 in file "src/driver/ads1115.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  pAds1115        2   31[COMRAM] PTR struct .
  8996 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), 
  8997 ;;  slvaddr         1   33[COMRAM] unsigned char 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9009 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9012 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;Total ram usage:        3 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    4
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		_ads1115_init_all_chip
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text55
  9024  000D98                     __ptext55:
  9025                           	opt stack 0
  9026  000D98                     _ads1115_init:
  9027                           	opt stack 25
  9028                           
  9029                           ;ads1115.c: 5: pAds1115->chip=ADS1115;
  9030                           
  9031                           ;incstack = 0
  9032  000D98  C020  FFD9         	movff	ads1115_init@pAds1115,fsr2l
  9033  000D9C  C021  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
  9034  000DA0  0E05               	movlw	5
  9035  000DA2  6EDF               	movwf	indf2,c
  9036                           
  9037                           ;ads1115.c: 6: pAds1115->slaveAddr=slvaddr;
  9038  000DA4  EE20 F001          	lfsr	2,1
  9039  000DA8  5020               	movf	ads1115_init@pAds1115,w,c
  9040  000DAA  26D9               	addwf	fsr2l,f,c
  9041  000DAC  5021               	movf	ads1115_init@pAds1115+1,w,c
  9042  000DAE  22DA               	addwfc	fsr2h,f,c
  9043  000DB0  C022  FFDF         	movff	ads1115_init@slvaddr,indf2
  9044                           
  9045                           ;ads1115.c: 7: pAds1115->config.data=0x8583;;
  9046  000DB4  EE20 F002          	lfsr	2,2
  9047  000DB8  5020               	movf	ads1115_init@pAds1115,w,c
  9048  000DBA  26D9               	addwf	fsr2l,f,c
  9049  000DBC  5021               	movf	ads1115_init@pAds1115+1,w,c
  9050  000DBE  22DA               	addwfc	fsr2h,f,c
  9051  000DC0  0E83               	movlw	131
  9052  000DC2  6EDE               	movwf	postinc2,c
  9053  000DC4  0E85               	movlw	133
  9054  000DC6  6EDD               	movwf	postdec2,c
  9055                           
  9056                           ;ads1115.c: 8: pAds1115->iic_start=iic_start;
  9057  000DC8  EE20 F006          	lfsr	2,6
  9058  000DCC  5020               	movf	ads1115_init@pAds1115,w,c
  9059  000DCE  26D9               	addwf	fsr2l,f,c
  9060  000DD0  5021               	movf	ads1115_init@pAds1115+1,w,c
  9061  000DD2  22DA               	addwfc	fsr2h,f,c
  9062  000DD4  0EB0               	movlw	low _iic_start
  9063  000DD6  6EDE               	movwf	postinc2,c
  9064  000DD8  0E17               	movlw	high _iic_start
  9065  000DDA  6EDD               	movwf	postdec2,c
  9066                           
  9067                           ;ads1115.c: 9: pAds1115->iic_stop=iic_stop;
  9068  000DDC  EE20 F008          	lfsr	2,8
  9069  000DE0  5020               	movf	ads1115_init@pAds1115,w,c
  9070  000DE2  26D9               	addwf	fsr2l,f,c
  9071  000DE4  5021               	movf	ads1115_init@pAds1115+1,w,c
  9072  000DE6  22DA               	addwfc	fsr2h,f,c
  9073  000DE8  0EEE               	movlw	low _iic_stop
  9074  000DEA  6EDE               	movwf	postinc2,c
  9075  000DEC  0E17               	movlw	high _iic_stop
  9076  000DEE  6EDD               	movwf	postdec2,c
  9077                           
  9078                           ;ads1115.c: 10: pAds1115->iic_send_byte=iic_send_byte;
  9079  000DF0  EE20 F00A          	lfsr	2,10
  9080  000DF4  5020               	movf	ads1115_init@pAds1115,w,c
  9081  000DF6  26D9               	addwf	fsr2l,f,c
  9082  000DF8  5021               	movf	ads1115_init@pAds1115+1,w,c
  9083  000DFA  22DA               	addwfc	fsr2h,f,c
  9084  000DFC  0E5E               	movlw	low _iic_send_byte
  9085  000DFE  6EDE               	movwf	postinc2,c
  9086  000E00  0E14               	movlw	high _iic_send_byte
  9087  000E02  6EDD               	movwf	postdec2,c
  9088                           
  9089                           ;ads1115.c: 11: pAds1115->iic_waite_ack=iic_waite_ack;
  9090  000E04  EE20 F00C          	lfsr	2,12
  9091  000E08  5020               	movf	ads1115_init@pAds1115,w,c
  9092  000E0A  26D9               	addwf	fsr2l,f,c
  9093  000E0C  5021               	movf	ads1115_init@pAds1115+1,w,c
  9094  000E0E  22DA               	addwfc	fsr2h,f,c
  9095  000E10  0EBE               	movlw	low _iic_waite_ack
  9096  000E12  6EDE               	movwf	postinc2,c
  9097  000E14  0E14               	movlw	high _iic_waite_ack
  9098  000E16  6EDD               	movwf	postdec2,c
  9099                           
  9100                           ;ads1115.c: 12: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
  9101  000E18  EE20 F00E          	lfsr	2,14
  9102  000E1C  5020               	movf	ads1115_init@pAds1115,w,c
  9103  000E1E  26D9               	addwf	fsr2l,f,c
  9104  000E20  5021               	movf	ads1115_init@pAds1115+1,w,c
  9105  000E22  22DA               	addwfc	fsr2h,f,c
  9106  000E24  0E20               	movlw	low _iic_received_byte_if_ack
  9107  000E26  6EDE               	movwf	postinc2,c
  9108  000E28  0E1A               	movlw	high _iic_received_byte_if_ack
  9109  000E2A  6EDD               	movwf	postdec2,c
  9110  000E2C  0012               	return		;funcret
  9111  000E2E                     __end_of_ads1115_init:
  9112                           	opt stack 0
  9113                           tosu	equ	0xFFF
  9114                           tosh	equ	0xFFE
  9115                           tosl	equ	0xFFD
  9116                           pclath	equ	0xFFA
  9117                           tblptru	equ	0xFF8
  9118                           tblptrh	equ	0xFF7
  9119                           tblptrl	equ	0xFF6
  9120                           tablat	equ	0xFF5
  9121                           prodh	equ	0xFF4
  9122                           prodl	equ	0xFF3
  9123                           intcon	equ	0xFF2
  9124                           indf0	equ	0xFEF
  9125                           postinc0	equ	0xFEE
  9126                           fsr0h	equ	0xFEA
  9127                           fsr0l	equ	0xFE9
  9128                           wreg	equ	0xFE8
  9129                           postdec1	equ	0xFE5
  9130                           plusw1	equ	0xFE3
  9131                           fsr1h	equ	0xFE2
  9132                           fsr1l	equ	0xFE1
  9133                           indf2	equ	0xFDF
  9134                           postinc2	equ	0xFDE
  9135                           postdec2	equ	0xFDD
  9136                           plusw2	equ	0xFDB
  9137                           fsr2h	equ	0xFDA
  9138                           fsr2l	equ	0xFD9
  9139                           status	equ	0xFD8
  9140                           
  9141 ;; *************** function _handler_interrupt_low *****************
  9142 ;; Defined at:
  9143 ;;		line 38 in file "src/soc/int.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;		None
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2, status,0, cstack
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;Total ram usage:       17 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    3
  9164 ;; This function calls:
  9165 ;;		_rtc_alrm_irq_hook
  9166 ;;		_sys_ticker_irq_hook
  9167 ;; This function is called by:
  9168 ;;		Interrupt level 1
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	intcodelo
  9173  000018                     __pintcodelo:
  9174                           	opt stack 0
  9175  000018                     _handler_interrupt_low:
  9176                           	opt stack 21
  9177                           
  9178                           ;incstack = 0
  9179  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  9180  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
  9181  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
  9182  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
  9183  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
  9184  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
  9185  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
  9186  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
  9187  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
  9188  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
  9189  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
  9190  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
  9191  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
  9192  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
  9193  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
  9194  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
  9195  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
  9196  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
  9197                           
  9198                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
  9199  00005E  B29D               	btfsc	3997,1,c	;volatile
  9200  000060  A29E               	btfss	3998,1,c	;volatile
  9201  000062  D00E               	goto	i1l5504
  9202  000064  B29F               	btfsc	3999,1,c	;volatile
  9203  000066  D00C               	goto	i1l5504
  9204                           
  9205                           ;int.c: 41: PIR1bits.TMR2IF=0;
  9206  000068  929E               	bcf	3998,1,c	;volatile
  9207                           
  9208                           ;int.c: 42: glTicker++;
  9209  00006A  0E01               	movlw	1
  9210  00006C  0100               	movlb	0	; () banked
  9211  00006E  277F               	addwf	_glTicker& (0+255),f,b	;volatile
  9212  000070  0E00               	movlw	0
  9213  000072  2380               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
  9214  000074  2381               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
  9215  000076  2382               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;int.c: 43: glbEvent |= (0x01);
  9219  000078  0100               	movlb	0	; () banked
  9220  00007A  8183               	bsf	_glbEvent& (0+255),0,b	;volatile
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;int.c: 44: sys_ticker_irq_hook();
  9224  00007C  EC30  F00D         	call	_sys_ticker_irq_hook	;wreg free
  9225  000080                     i1l5504:
  9226                           
  9227                           ;int.c: 45: }
  9228                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
  9229  000080  B0A3               	btfsc	4003,0,c	;volatile
  9230  000082  A0A4               	btfss	4004,0,c	;volatile
  9231  000084  D007               	goto	i1l1146
  9232  000086  B0A5               	btfsc	4005,0,c	;volatile
  9233  000088  D005               	goto	i1l1146
  9234                           
  9235                           ;int.c: 47: PIR3bits.RTCCIF=0;
  9236  00008A  90A4               	bcf	4004,0,c	;volatile
  9237                           
  9238                           ;int.c: 48: glbEvent |= (0x02);
  9239  00008C  0100               	movlb	0	; () banked
  9240  00008E  8383               	bsf	_glbEvent& (0+255),1,b	;volatile
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;int.c: 49: rtc_alrm_irq_hook();
  9244  000090  EC5E  F00D         	call	_rtc_alrm_irq_hook	;wreg free
  9245  000094                     i1l1146:
  9246  000094  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
  9247  000098  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
  9248  00009C  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
  9249  0000A0  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
  9250  0000A4  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
  9251  0000A8  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
  9252  0000AC  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
  9253  0000B0  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
  9254  0000B4  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
  9255  0000B8  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
  9256  0000BC  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
  9257  0000C0  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
  9258  0000C4  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
  9259  0000C8  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
  9260  0000CC  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
  9261  0000D0  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
  9262  0000D4  C00F  FFD8         	movff	??_handler_interrupt_low,status
  9263  0000D8  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  9264  0000DA  0010               	retfie	
  9265  0000DC                     __end_of_handler_interrupt_low:
  9266                           	opt stack 0
  9267                           tosu	equ	0xFFF
  9268                           tosh	equ	0xFFE
  9269                           tosl	equ	0xFFD
  9270                           pclatu	equ	0xFFB
  9271                           pclath	equ	0xFFA
  9272                           tblptru	equ	0xFF8
  9273                           tblptrh	equ	0xFF7
  9274                           tblptrl	equ	0xFF6
  9275                           tablat	equ	0xFF5
  9276                           prodh	equ	0xFF4
  9277                           prodl	equ	0xFF3
  9278                           intcon	equ	0xFF2
  9279                           indf0	equ	0xFEF
  9280                           postinc0	equ	0xFEE
  9281                           fsr0h	equ	0xFEA
  9282                           fsr0l	equ	0xFE9
  9283                           wreg	equ	0xFE8
  9284                           postdec1	equ	0xFE5
  9285                           plusw1	equ	0xFE3
  9286                           fsr1h	equ	0xFE2
  9287                           fsr1l	equ	0xFE1
  9288                           bsr	equ	0xFE0
  9289                           indf2	equ	0xFDF
  9290                           postinc2	equ	0xFDE
  9291                           postdec2	equ	0xFDD
  9292                           plusw2	equ	0xFDB
  9293                           fsr2h	equ	0xFDA
  9294                           fsr2l	equ	0xFD9
  9295                           status	equ	0xFD8
  9296                           
  9297 ;; *************** function _sys_ticker_irq_hook *****************
  9298 ;; Defined at:
  9299 ;;		line 35 in file "src/soc/ticker.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;		None
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;		None
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      void 
  9306 ;; Registers used:
  9307 ;;		wreg, status,2, status,0
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;Total ram usage:        0 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:    2
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		_handler_interrupt_low
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text57
  9328  001A60                     __ptext57:
  9329                           	opt stack 0
  9330  001A60                     _sys_ticker_irq_hook:
  9331                           	opt stack 21
  9332                           
  9333                           ;ticker.c: 37: if(dlyTickerEn){
  9334                           
  9335                           ;incstack = 0
  9336  001A60  5038               	movf	_dlyTickerEn,w,c
  9337  001A62  B4D8               	btfsc	status,2,c
  9338  001A64  0012               	return	
  9339                           
  9340                           ;ticker.c: 38: dlyTicker+=10;
  9341  001A66  0E0A               	movlw	10
  9342  001A68  2636               	addwf	_dlyTicker,f,c
  9343  001A6A  0E00               	movlw	0
  9344  001A6C  2237               	addwfc	_dlyTicker+1,f,c
  9345  001A6E  0012               	return	
  9346  001A70                     __end_of_sys_ticker_irq_hook:
  9347                           	opt stack 0
  9348                           tosu	equ	0xFFF
  9349                           tosh	equ	0xFFE
  9350                           tosl	equ	0xFFD
  9351                           pclatu	equ	0xFFB
  9352                           pclath	equ	0xFFA
  9353                           tblptru	equ	0xFF8
  9354                           tblptrh	equ	0xFF7
  9355                           tblptrl	equ	0xFF6
  9356                           tablat	equ	0xFF5
  9357                           prodh	equ	0xFF4
  9358                           prodl	equ	0xFF3
  9359                           intcon	equ	0xFF2
  9360                           indf0	equ	0xFEF
  9361                           postinc0	equ	0xFEE
  9362                           fsr0h	equ	0xFEA
  9363                           fsr0l	equ	0xFE9
  9364                           wreg	equ	0xFE8
  9365                           postdec1	equ	0xFE5
  9366                           plusw1	equ	0xFE3
  9367                           fsr1h	equ	0xFE2
  9368                           fsr1l	equ	0xFE1
  9369                           bsr	equ	0xFE0
  9370                           indf2	equ	0xFDF
  9371                           postinc2	equ	0xFDE
  9372                           postdec2	equ	0xFDD
  9373                           plusw2	equ	0xFDB
  9374                           fsr2h	equ	0xFDA
  9375                           fsr2l	equ	0xFD9
  9376                           status	equ	0xFD8
  9377                           
  9378 ;; *************** function _rtc_alrm_irq_hook *****************
  9379 ;; Defined at:
  9380 ;;		line 103 in file "src/soc/rtc.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;		None
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;		None
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1    wreg      void 
  9387 ;; Registers used:
  9388 ;;		None
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;Total ram usage:        0 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    2
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_handler_interrupt_low
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text58
  9409  001ABC                     __ptext58:
  9410                           	opt stack 0
  9411  001ABC                     _rtc_alrm_irq_hook:
  9412                           	opt stack 21
  9413                           
  9414                           ;incstack = 0
  9415  001ABC  0012               	return		;funcret
  9416  001ABE                     __end_of_rtc_alrm_irq_hook:
  9417                           	opt stack 0
  9418                           tosu	equ	0xFFF
  9419                           tosh	equ	0xFFE
  9420                           tosl	equ	0xFFD
  9421                           pclatu	equ	0xFFB
  9422                           pclath	equ	0xFFA
  9423                           tblptru	equ	0xFF8
  9424                           tblptrh	equ	0xFF7
  9425                           tblptrl	equ	0xFF6
  9426                           tablat	equ	0xFF5
  9427                           prodh	equ	0xFF4
  9428                           prodl	equ	0xFF3
  9429                           intcon	equ	0xFF2
  9430                           indf0	equ	0xFEF
  9431                           postinc0	equ	0xFEE
  9432                           fsr0h	equ	0xFEA
  9433                           fsr0l	equ	0xFE9
  9434                           wreg	equ	0xFE8
  9435                           postdec1	equ	0xFE5
  9436                           plusw1	equ	0xFE3
  9437                           fsr1h	equ	0xFE2
  9438                           fsr1l	equ	0xFE1
  9439                           bsr	equ	0xFE0
  9440                           indf2	equ	0xFDF
  9441                           postinc2	equ	0xFDE
  9442                           postdec2	equ	0xFDD
  9443                           plusw2	equ	0xFDB
  9444                           fsr2h	equ	0xFDA
  9445                           fsr2l	equ	0xFD9
  9446                           status	equ	0xFD8
  9447                           
  9448 ;; *************** function _handler_interrupt_hight *****************
  9449 ;; Defined at:
  9450 ;;		line 9 in file "src/soc/int.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;		None
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;Total ram usage:       14 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:    1
  9471 ;; This function calls:
  9472 ;;		i2_rtc_alrm_irq_hook
  9473 ;;		i2_sys_ticker_irq_hook
  9474 ;; This function is called by:
  9475 ;;		Interrupt level 2
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           	psect	intcode
  9480  000008                     __pintcode:
  9481                           	opt stack 0
  9482  000008                     _handler_interrupt_hight:
  9483                           	opt stack 21
  9484                           
  9485                           ;incstack = 0
  9486  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9487  00000A  EF05  F004         	goto	int_func
  9488                           tosu	equ	0xFFF
  9489                           tosh	equ	0xFFE
  9490                           tosl	equ	0xFFD
  9491                           pclatu	equ	0xFFB
  9492                           pclath	equ	0xFFA
  9493                           tblptru	equ	0xFF8
  9494                           tblptrh	equ	0xFF7
  9495                           tblptrl	equ	0xFF6
  9496                           tablat	equ	0xFF5
  9497                           prodh	equ	0xFF4
  9498                           prodl	equ	0xFF3
  9499                           intcon	equ	0xFF2
  9500                           indf0	equ	0xFEF
  9501                           postinc0	equ	0xFEE
  9502                           fsr0h	equ	0xFEA
  9503                           fsr0l	equ	0xFE9
  9504                           wreg	equ	0xFE8
  9505                           postdec1	equ	0xFE5
  9506                           plusw1	equ	0xFE3
  9507                           fsr1h	equ	0xFE2
  9508                           fsr1l	equ	0xFE1
  9509                           bsr	equ	0xFE0
  9510                           indf2	equ	0xFDF
  9511                           postinc2	equ	0xFDE
  9512                           postdec2	equ	0xFDD
  9513                           plusw2	equ	0xFDB
  9514                           fsr2h	equ	0xFDA
  9515                           fsr2l	equ	0xFD9
  9516                           status	equ	0xFD8
  9517                           
  9518                           	psect	intcode_body
  9519  00080A                     __pintcode_body:
  9520                           	opt stack 21
  9521  00080A                     int_func:
  9522                           	opt stack 21
  9523  00080A  CFFA F001          	movff	pclath,??_handler_interrupt_hight
  9524  00080E  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
  9525  000812  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
  9526  000816  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
  9527  00081A  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
  9528  00081E  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
  9529  000822  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
  9530  000826  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
  9531  00082A  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
  9532  00082E  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
  9533  000832  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
  9534  000836  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
  9535  00083A  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
  9536  00083E  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
  9537                           
  9538                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
  9539  000842  BAF2               	btfsc	intcon,5,c	;volatile
  9540  000844  A4F2               	btfss	intcon,2,c	;volatile
  9541  000846  D002               	goto	i2l1133
  9542  000848  B4F1               	btfsc	intcon2,2,c	;volatile
  9543                           
  9544                           ;int.c: 13: __nop();
  9545  00084A  F000               	nop	
  9546  00084C                     i2l1133:
  9547                           
  9548                           ;int.c: 14: }
  9549                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
  9550  00084C  BCF2               	btfsc	intcon,6,c	;volatile
  9551  00084E  A89D               	btfss	3997,4,c	;volatile
  9552  000850  D001               	goto	i2l1134
  9553  000852  509E               	movf	3998,w,c	;volatile
  9554  000854                     i2l1134:
  9555                           
  9556                           ;int.c: 17: }
  9557                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
  9558  000854  BCF2               	btfsc	intcon,6,c	;volatile
  9559  000856  AA9D               	btfss	3997,5,c	;volatile
  9560  000858  D001               	goto	i2l1135
  9561  00085A  509E               	movf	3998,w,c	;volatile
  9562  00085C                     i2l1135:
  9563                           
  9564                           ;int.c: 20: }
  9565                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
  9566  00085C  BCF2               	btfsc	intcon,6,c	;volatile
  9567  00085E  A09D               	btfss	3997,0,c	;volatile
  9568  000860  D001               	goto	i2l1136
  9569  000862  509E               	movf	3998,w,c	;volatile
  9570  000864                     i2l1136:
  9571                           
  9572                           ;int.c: 23: }
  9573                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
  9574  000864  B29D               	btfsc	3997,1,c	;volatile
  9575  000866  A29E               	btfss	3998,1,c	;volatile
  9576  000868  D00E               	goto	i2l5478
  9577  00086A  A29F               	btfss	3999,1,c	;volatile
  9578  00086C  D00C               	goto	i2l5478
  9579                           
  9580                           ;int.c: 26: PIR1bits.TMR2IF=0;
  9581  00086E  929E               	bcf	3998,1,c	;volatile
  9582                           
  9583                           ;int.c: 27: glTicker++;
  9584  000870  0E01               	movlw	1
  9585  000872  0100               	movlb	0	; () banked
  9586  000874  277F               	addwf	_glTicker& (0+255),f,b	;volatile
  9587  000876  0E00               	movlw	0
  9588  000878  2380               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
  9589  00087A  2381               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
  9590  00087C  2382               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;int.c: 28: glbEvent |= (0x01);
  9594  00087E  0100               	movlb	0	; () banked
  9595  000880  8183               	bsf	_glbEvent& (0+255),0,b	;volatile
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;int.c: 29: sys_ticker_irq_hook();
  9599  000882  EC38  F00D         	call	i2_sys_ticker_irq_hook	;wreg free
  9600  000886                     i2l5478:
  9601                           
  9602                           ;int.c: 30: }
  9603                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
  9604  000886  B0A3               	btfsc	4003,0,c	;volatile
  9605  000888  A0A4               	btfss	4004,0,c	;volatile
  9606  00088A  D007               	goto	i2l1139
  9607  00088C  A0A5               	btfss	4005,0,c	;volatile
  9608  00088E  D005               	goto	i2l1139
  9609                           
  9610                           ;int.c: 32: PIR3bits.RTCCIF=0;
  9611  000890  90A4               	bcf	4004,0,c	;volatile
  9612                           
  9613                           ;int.c: 33: glbEvent |= (0x02);
  9614  000892  0100               	movlb	0	; () banked
  9615  000894  8383               	bsf	_glbEvent& (0+255),1,b	;volatile
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;int.c: 34: rtc_alrm_irq_hook();
  9619  000896  EC5F  F00D         	call	i2_rtc_alrm_irq_hook	;wreg free
  9620  00089A                     i2l1139:
  9621  00089A  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
  9622  00089E  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
  9623  0008A2  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
  9624  0008A6  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
  9625  0008AA  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
  9626  0008AE  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
  9627  0008B2  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
  9628  0008B6  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
  9629  0008BA  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
  9630  0008BE  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
  9631  0008C2  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
  9632  0008C6  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
  9633  0008CA  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
  9634  0008CE  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
  9635  0008D2  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9636  0008D4  0011               	retfie		f
  9637  0008D6                     __end_of_handler_interrupt_hight:
  9638                           	opt stack 0
  9639                           tosu	equ	0xFFF
  9640                           tosh	equ	0xFFE
  9641                           tosl	equ	0xFFD
  9642                           pclatu	equ	0xFFB
  9643                           pclath	equ	0xFFA
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           intcon2	equ	0xFF1
  9652                           indf0	equ	0xFEF
  9653                           postinc0	equ	0xFEE
  9654                           fsr0h	equ	0xFEA
  9655                           fsr0l	equ	0xFE9
  9656                           wreg	equ	0xFE8
  9657                           postdec1	equ	0xFE5
  9658                           plusw1	equ	0xFE3
  9659                           fsr1h	equ	0xFE2
  9660                           fsr1l	equ	0xFE1
  9661                           bsr	equ	0xFE0
  9662                           indf2	equ	0xFDF
  9663                           postinc2	equ	0xFDE
  9664                           postdec2	equ	0xFDD
  9665                           plusw2	equ	0xFDB
  9666                           fsr2h	equ	0xFDA
  9667                           fsr2l	equ	0xFD9
  9668                           status	equ	0xFD8
  9669                           
  9670 ;; *************** function i2_sys_ticker_irq_hook *****************
  9671 ;; Defined at:
  9672 ;;		line 35 in file "src/soc/ticker.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;		None
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      void 
  9679 ;; Registers used:
  9680 ;;		wreg, status,2, status,0
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;Total ram usage:        0 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; This function calls:
  9693 ;;		Nothing
  9694 ;; This function is called by:
  9695 ;;		_handler_interrupt_hight
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text60
  9700  001A70                     __ptext60:
  9701                           	opt stack 0
  9702  001A70                     i2_sys_ticker_irq_hook:
  9703                           	opt stack 21
  9704                           
  9705                           ;ticker.c: 37: if(dlyTickerEn){
  9706                           
  9707                           ;incstack = 0
  9708  001A70  5038               	movf	_dlyTickerEn,w,c
  9709  001A72  B4D8               	btfsc	status,2,c
  9710  001A74  0012               	return	
  9711                           
  9712                           ;ticker.c: 38: dlyTicker+=10;
  9713  001A76  0E0A               	movlw	10
  9714  001A78  2636               	addwf	_dlyTicker,f,c
  9715  001A7A  0E00               	movlw	0
  9716  001A7C  2237               	addwfc	_dlyTicker+1,f,c
  9717  001A7E  0012               	return	
  9718  001A80                     __end_ofi2_sys_ticker_irq_hook:
  9719                           	opt stack 0
  9720                           tosu	equ	0xFFF
  9721                           tosh	equ	0xFFE
  9722                           tosl	equ	0xFFD
  9723                           pclatu	equ	0xFFB
  9724                           pclath	equ	0xFFA
  9725                           tblptru	equ	0xFF8
  9726                           tblptrh	equ	0xFF7
  9727                           tblptrl	equ	0xFF6
  9728                           tablat	equ	0xFF5
  9729                           prodh	equ	0xFF4
  9730                           prodl	equ	0xFF3
  9731                           intcon	equ	0xFF2
  9732                           intcon2	equ	0xFF1
  9733                           indf0	equ	0xFEF
  9734                           postinc0	equ	0xFEE
  9735                           fsr0h	equ	0xFEA
  9736                           fsr0l	equ	0xFE9
  9737                           wreg	equ	0xFE8
  9738                           postdec1	equ	0xFE5
  9739                           plusw1	equ	0xFE3
  9740                           fsr1h	equ	0xFE2
  9741                           fsr1l	equ	0xFE1
  9742                           bsr	equ	0xFE0
  9743                           indf2	equ	0xFDF
  9744                           postinc2	equ	0xFDE
  9745                           postdec2	equ	0xFDD
  9746                           plusw2	equ	0xFDB
  9747                           fsr2h	equ	0xFDA
  9748                           fsr2l	equ	0xFD9
  9749                           status	equ	0xFD8
  9750                           
  9751 ;; *************** function i2_rtc_alrm_irq_hook *****************
  9752 ;; Defined at:
  9753 ;;		line 103 in file "src/soc/rtc.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;		None
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;		None
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      void 
  9760 ;; Registers used:
  9761 ;;		None
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;Total ram usage:        0 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_handler_interrupt_hight
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text61
  9781  001ABE                     __ptext61:
  9782                           	opt stack 0
  9783  001ABE                     i2_rtc_alrm_irq_hook:
  9784                           	opt stack 21
  9785                           
  9786                           ;incstack = 0
  9787  001ABE  0012               	return		;funcret
  9788  001AC0                     __end_ofi2_rtc_alrm_irq_hook:
  9789                           	opt stack 0
  9790                           tosu	equ	0xFFF
  9791                           tosh	equ	0xFFE
  9792                           tosl	equ	0xFFD
  9793                           pclatu	equ	0xFFB
  9794                           pclath	equ	0xFFA
  9795                           tblptru	equ	0xFF8
  9796                           tblptrh	equ	0xFF7
  9797                           tblptrl	equ	0xFF6
  9798                           tablat	equ	0xFF5
  9799                           prodh	equ	0xFF4
  9800                           prodl	equ	0xFF3
  9801                           intcon	equ	0xFF2
  9802                           intcon2	equ	0xFF1
  9803                           indf0	equ	0xFEF
  9804                           postinc0	equ	0xFEE
  9805                           fsr0h	equ	0xFEA
  9806                           fsr0l	equ	0xFE9
  9807                           wreg	equ	0xFE8
  9808                           postdec1	equ	0xFE5
  9809                           plusw1	equ	0xFE3
  9810                           fsr1h	equ	0xFE2
  9811                           fsr1l	equ	0xFE1
  9812                           bsr	equ	0xFE0
  9813                           indf2	equ	0xFDF
  9814                           postinc2	equ	0xFDE
  9815                           postdec2	equ	0xFDD
  9816                           plusw2	equ	0xFDB
  9817                           fsr2h	equ	0xFDA
  9818                           fsr2l	equ	0xFD9
  9819                           status	equ	0xFD8
  9820                           tosu	equ	0xFFF
  9821                           tosh	equ	0xFFE
  9822                           tosl	equ	0xFFD
  9823                           pclatu	equ	0xFFB
  9824                           pclath	equ	0xFFA
  9825                           tblptru	equ	0xFF8
  9826                           tblptrh	equ	0xFF7
  9827                           tblptrl	equ	0xFF6
  9828                           tablat	equ	0xFF5
  9829                           prodh	equ	0xFF4
  9830                           prodl	equ	0xFF3
  9831                           intcon	equ	0xFF2
  9832                           intcon2	equ	0xFF1
  9833                           indf0	equ	0xFEF
  9834                           postinc0	equ	0xFEE
  9835                           fsr0h	equ	0xFEA
  9836                           fsr0l	equ	0xFE9
  9837                           wreg	equ	0xFE8
  9838                           postdec1	equ	0xFE5
  9839                           plusw1	equ	0xFE3
  9840                           fsr1h	equ	0xFE2
  9841                           fsr1l	equ	0xFE1
  9842                           bsr	equ	0xFE0
  9843                           indf2	equ	0xFDF
  9844                           postinc2	equ	0xFDE
  9845                           postdec2	equ	0xFDD
  9846                           plusw2	equ	0xFDB
  9847                           fsr2h	equ	0xFDA
  9848                           fsr2l	equ	0xFD9
  9849                           status	equ	0xFD8
  9850                           
  9851                           	psect	text62
  9852  000000                     __ptext62:
  9853                           	opt stack 0
  9854                           tosu	equ	0xFFF
  9855                           tosh	equ	0xFFE
  9856                           tosl	equ	0xFFD
  9857                           pclatu	equ	0xFFB
  9858                           pclath	equ	0xFFA
  9859                           tblptru	equ	0xFF8
  9860                           tblptrh	equ	0xFF7
  9861                           tblptrl	equ	0xFF6
  9862                           tablat	equ	0xFF5
  9863                           prodh	equ	0xFF4
  9864                           prodl	equ	0xFF3
  9865                           intcon	equ	0xFF2
  9866                           intcon2	equ	0xFF1
  9867                           indf0	equ	0xFEF
  9868                           postinc0	equ	0xFEE
  9869                           fsr0h	equ	0xFEA
  9870                           fsr0l	equ	0xFE9
  9871                           wreg	equ	0xFE8
  9872                           postdec1	equ	0xFE5
  9873                           plusw1	equ	0xFE3
  9874                           fsr1h	equ	0xFE2
  9875                           fsr1l	equ	0xFE1
  9876                           bsr	equ	0xFE0
  9877                           indf2	equ	0xFDF
  9878                           postinc2	equ	0xFDE
  9879                           postdec2	equ	0xFDD
  9880                           plusw2	equ	0xFDB
  9881                           fsr2h	equ	0xFDA
  9882                           fsr2l	equ	0xFD9
  9883                           status	equ	0xFD8
  9884                           
  9885                           	psect	rparam
  9886  0000                     tosu	equ	0xFFF
  9887                           tosh	equ	0xFFE
  9888                           tosl	equ	0xFFD
  9889                           pclatu	equ	0xFFB
  9890                           pclath	equ	0xFFA
  9891                           tblptru	equ	0xFF8
  9892                           tblptrh	equ	0xFF7
  9893                           tblptrl	equ	0xFF6
  9894                           tablat	equ	0xFF5
  9895                           prodh	equ	0xFF4
  9896                           prodl	equ	0xFF3
  9897                           intcon	equ	0xFF2
  9898                           intcon2	equ	0xFF1
  9899                           indf0	equ	0xFEF
  9900                           postinc0	equ	0xFEE
  9901                           fsr0h	equ	0xFEA
  9902                           fsr0l	equ	0xFE9
  9903                           wreg	equ	0xFE8
  9904                           postdec1	equ	0xFE5
  9905                           plusw1	equ	0xFE3
  9906                           fsr1h	equ	0xFE2
  9907                           fsr1l	equ	0xFE1
  9908                           bsr	equ	0xFE0
  9909                           indf2	equ	0xFDF
  9910                           postinc2	equ	0xFDE
  9911                           postdec2	equ	0xFDD
  9912                           plusw2	equ	0xFDB
  9913                           fsr2h	equ	0xFDA
  9914                           fsr2l	equ	0xFD9
  9915                           status	equ	0xFD8
  9916                           
  9917                           	psect	temp
  9918  000040                     btemp:
  9919                           	opt stack 0
  9920  000040                     	ds	1
  9921  0000                     int$flags	set	btemp
  9922                           tosu	equ	0xFFF
  9923                           tosh	equ	0xFFE
  9924                           tosl	equ	0xFFD
  9925                           pclatu	equ	0xFFB
  9926                           pclath	equ	0xFFA
  9927                           tblptru	equ	0xFF8
  9928                           tblptrh	equ	0xFF7
  9929                           tblptrl	equ	0xFF6
  9930                           tablat	equ	0xFF5
  9931                           prodh	equ	0xFF4
  9932                           prodl	equ	0xFF3
  9933                           intcon	equ	0xFF2
  9934                           intcon2	equ	0xFF1
  9935                           indf0	equ	0xFEF
  9936                           postinc0	equ	0xFEE
  9937                           fsr0h	equ	0xFEA
  9938                           fsr0l	equ	0xFE9
  9939                           wreg	equ	0xFE8
  9940                           postdec1	equ	0xFE5
  9941                           plusw1	equ	0xFE3
  9942                           fsr1h	equ	0xFE2
  9943                           fsr1l	equ	0xFE1
  9944                           bsr	equ	0xFE0
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           plusw2	equ	0xFDB
  9949                           fsr2h	equ	0xFDA
  9950                           fsr2l	equ	0xFD9
  9951                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    809
    Data        16
    BSS         628
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      63
    BANK0           160     33     136
    BANK1           256      0     256
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    m_mem_cpy$1	PTR unsigned char  size(2) Largest target is 0

    m_mem_cpy$0	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(COMRAM[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK0[7]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(COMRAM[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(BANK0[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 6
		 -> ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK0[16]), ads1115Chip0(BANK0[16]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK0[16]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK0[16]), ads1115Chip0(BANK0[16]), 

    S562$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S562$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S562$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S562$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S562$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(BANK0[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S376$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S376$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S376$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S376$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S376$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    fpSysData	PTR const struct . size(3) Largest target is 65527
		 -> ROM(CODE[65527]), 


Critical Paths under _main in COMRAM

    _main->_in_adc_start_and_read
    _ui_disp_start_cs600->_lcd_disp_logo
    _ui_disp_start_cs600->_m_int8_2_hex
    _lcd_disp_logo->_lcd_set_com_seg
    _ui_disp_rtc_mm_ss->_m_int8_2_hex
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_show_chr->_lcd_disp_get_code
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_config->_lcd_disp_all
    _in_adc_start_and_read->_delay_us
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_reg->_iic_send_byte
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_received_byte
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ui_disp_rtc_mm_ss
    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _lcd_disp_logo->_lcd_set_com_seg
    _ui_disp_rtc_mm_ss->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _in_adc_start_and_read->_delay_us
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  908278
                                             31 BANK0      2     2      0
              _ads1115_init_all_chip
            _ads1115_read_conversion
                   _ads1115_read_reg
           _ads1115_start_conversion
                        _in_adc_init
              _in_adc_start_and_read
                        _key_polling
                     _lcd_disp_level
                           _lcd_init
                            _rtc_set
                           _soc_init
                         _ticker_dly
                  _ui_disp_rtc_mm_ss
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  522248
                                             20 BANK0      8     8      0
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     211
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  230706
                                             17 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  230706
                                             17 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   28512
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _ui_disp_rtc_mm_ss                                   11    11      0  349706
                                             20 BANK0     11    11      0
                     _lcd_disp_level
                   _lcd_disp_refresh
                        _lcd_show_dp
                    _lcd_show_string
                       _m_int8_2_hex
                            _rtc_get
 ---------------------------------------------------------------------------------
 (2) _rtc_get                                              1     1      0       1
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string                                      3     1      2  230976
                                             17 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  230483
                                             14 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   28698
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_show_dp                                          2     1      1   86653
                                             14 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_2                                    1     1      0   28512
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_1                                    1     1      0   28512
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_dp_loc_0                                    1     1      0   28512
                                             33 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_level                                       2     2      0   30629
                                             16 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_level_bar                                   3     2      1   30397
                                             33 COMRAM     1     0      1
                                             14 BANK0      2     2      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   28481
                                             31 COMRAM     2     0      2
                                              8 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                        _lcd_bl_init
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_polling                                          2     2      0     117
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _in_adc_start_and_read                                6     4      2     322
                                             33 COMRAM     1     1      0
                                              2 BANK0      5     3      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             4     2      2     248
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ads1115_start_conversion                             2     0      2    1439
                                              5 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (2) _ads1115_write_reg                                    5     0      5    1287
                                              0 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_conversion                              5     3      2    1338
                                              8 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (1) _ads1115_read_reg                                     6     3      3    1149
                                              2 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (3) _iic_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _iic_send_byte                                        2     2      0     167
                                             32 COMRAM     2     2      0
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (4) _iic_waite_ack                                        1     1      0      65
                                             31 COMRAM     1     1      0
                           _iic_stop
 ---------------------------------------------------------------------------------
 (3) _iic_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _iic_received_byte_if_ack                             2     2      0     207
                                              0 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (3) _iic_send_ack                                         1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _iic_received_byte                                    2     2      0     108
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                             31 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _handler_interrupt_low                               17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (8) _sys_ticker_irq_hook                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _rtc_alrm_irq_hook                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _handler_interrupt_hight                             14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (10) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _ads1115_read_conversion
     _ads1115_read_reg
       _iic_received_byte_if_ack *
         _iic_received_byte
         _iic_send_ack
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _ads1115_read_reg
     _iic_received_byte_if_ack *
       _iic_received_byte
       _iic_send_ack
     _iic_send_byte *
       _iic_waite_ack
         _iic_stop
     _iic_start *
     _iic_stop *
   _ads1115_start_conversion
     _ads1115_write_reg
       _iic_send_byte *
         _iic_waite_ack
           _iic_stop
       _iic_start *
       _iic_stop *
   _in_adc_init
   _in_adc_start_and_read
     _delay_us
   _key_polling
   _lcd_disp_level
     _lcd_disp_level_bar
       _lcd_set_com_seg
         ___awdiv
   _lcd_init
     _lcd_bl_init
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ticker_dly
   _ui_disp_rtc_mm_ss
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_refresh
     _lcd_show_dp
       _lcd_disp_dp_loc_0
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_1
         _lcd_set_com_seg
           ___awdiv
       _lcd_disp_dp_loc_2
         _lcd_set_com_seg
           ___awdiv
     _lcd_show_string
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _rtc_get
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C7      12        0.0%
DATA                 0      0     2C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Sep 11 00:03:06 2017

            lcd_show_string_l0@str 00CB                     ?_iic_waite_ack 0001  
            lcd_show_string_l1@str 00CB                       ?_lcd_show_dp 00C8  
              ?_lcd_show_string_l0 00CB                ?_lcd_show_string_l1 00CB  
       __end_of_rtcc_reg_wr_enable 1AA8                       ?_in_adc_init 0001  
                    ?_m_int8_2_hex 0020                       ___awdiv@sign 00BF  
                               bsr 000FE0                      ?_lcd_show_chr 00C8  
      __end_of_rtcc_reg_wr_disable 1AB4                       __CFG_CP0$OFF 000000  
                      __CFG_OSC$HS 000000                                l510 147C  
                              l502 1472                                l613 1368  
                              l614 1366                                l487 14FC  
                              _PR2 000FCB                                prod 000FF3  
                              tosl 000FFD                                wreg 000FE8  
        __size_of_ads1115_read_reg 01BC               ??_lcd_disp_level_bar 0023  
             ??_lcd_show_string_l0 0023               ??_lcd_show_string_l1 0023  
                             l1100 186A                               l1248 18CE  
                             l6000 14B8                               l6100 037C  
                             l6020 00FC                               l6110 03CC  
                             l6102 038C                               l6030 014C  
                             l6022 010C                               l6112 03DC  
                             l6104 039C                               l6040 019C  
                             l6032 015C                               l6024 011C  
                             l6200 16F6                               l6114 03EC  
                             l6106 03AC                               l6050 01EC  
                             l6042 01AC                               l6034 016C  
                             l6026 012C                               l6122 041C  
                             l6018 00EE                               l6116 03FC  
                             l6108 03BC                               l6060 023C  
                             l6052 01FC                               l6044 01BC  
                             l6036 017C                               l6028 013C  
                             l6140 1954                               l6118 040C  
                             l6070 028C                               l6062 024C  
                             l6054 020C                               l6046 01CC  
                             l6038 018C                               l6222 15A6  
                             l6214 1588                               l6134 197C  
                             l6150 0C9A                               l6206 1718  
                             l6080 02DC                               l6072 029C  
                             l6064 025C                               l6056 021C  
                             l6048 01DC                               l6224 15B2  
                             l6128 19A4                               l6152 0CA4  
                             l6144 0C7C                               l6314 1880  
                             l5530 09C8                               l6090 032C  
                             l6082 02EC                               l6074 02AC  
                             l6066 026C                               l6058 022C  
                             l6218 1596                               l6250 12F6  
                             l6242 12CE                               l6154 0CAE  
                             l6146 0C86                               l6162 0CCC  
                             l5540 09F8                               l5524 09B2  
                             l6092 033C                               l6084 02FC  
                             l6076 02BC                               l6068 027C  
                             l6228 15BC                               l6252 1300  
                             l6244 12D8                               l6156 0CB8  
                             l6148 0C90                               l6260 1262  
                             l6412 0C5E                               l6172 16B2  
                             l6236 18D0                               l5614 08E4  
                             l6094 034C                               l6086 030C  
                             l6078 02CC                               l6246 12E2  
                             l6158 0CC2                               l6280 0604  
                             l5536 09E6                               l5552 0A36  
                             l6096 035C                               l6088 031C  
                             l6248 12EC                               l6256 130A  
                             l5634 162C                               l6282 062A  
                             l6274 057E                               l5538 09F2  
                             l5626 0956                               l5618 08EC  
                             l6098 036C                               l6266 1298  
                             l6186 192C                               l6178 16D2  
                             l5636 162E                               l6284 0668  
                             l6276 05B4                               l5556 0A4A  
                             l5548 0A28                               l6380 0D8C  
                             l5830 1570                               l6278 05DE  
                             l6366 0D4A                               l5744 1500  
                             l6288 0700                               l6704 0B0A  
                             l5770 1530                               l5754 1516  
                             l5746 1508                               l6386 0BDC  
                             l5940 146A                               l6484 16A0  
                             l4964 1858                               l5766 1528  
                             l5870 1616                               l5854 15D4  
                             l5880 19C2                               l5946 147A  
                             l5866 15FA                               l5858 15DC  
                             l5876 19BA                               l6688 0AEC  
                             l6698 0AFE                               STR_1 FFF1  
                             STR_2 FFE8                               _LATB 000F8A  
                             _LATC 000F8B                               u4218 056A  
                             u4170 1282                               u4228 0590  
                             u4308 071C                               u4180 12B8  
                             u4309 0730                               u4238 05C6  
                             u4318 0742                               u4319 0766  
                             u4248 05F0                               u4328 0778  
                             u4329 0790                               u4177 1278  
                             u4258 0616                               u4338 07A2  
                             u4339 07BA                               u4187 12AE  
                             u4371 0D10                               u4268 063C  
                             u4348 07CC                               u4349 07E4  
                             u4278 067A                               u4358 07F6  
                             u4279 0690                               u4288 06B8  
                             u4289 06CE                               u4298 06EC  
                             u3854 0936                               u3855 0930  
                             u3864 096C                               u3865 0966  
                   ??_lcd_disp_all 0020                               _pLCD 0060  
     __end_of_LCDDigitalIndexTable FEE8          __size_of_lcd_disp_refresh 0062  
                             _main 0A54                               fsr0h 000FEA  
                             fsr1h 000FE2                               indf0 000FEF  
                             fsr2h 000FDA                               fsr0l 000FE9  
                             indf2 000FDF                               fsr1l 000FE1  
                             fsr2l 000FD9                               btemp 0040  
          _handler_interrupt_hight 0008                               prodh 000FF4  
                             prodl 000FF3                               start 00DC  
                   ??_iic_send_ack 0020                      _globleBuffer0 0100  
                    _globleBuffer1 0200                      __CFG_IESO$OFF 000000  
 __end_of_iic_received_byte_if_ack 1A40                       ___param_bank 000000  
                 ?_lcd_set_com_seg 0020                              EECON2 000FA7  
                   ??_m_int8_2_hex 0023         ??_ads1115_start_conversion 0023  
                   ??_lcd_show_chr 0023                      lcd_disp_all@i 0021  
                    lcd_disp_all@x 0020                              RTCCFG 000F5F  
                            ?_main 0001                    __end_of___awdiv 0A54  
                  ___awdiv@divisor 00BC                              _T2CON 000FCA  
                            _FSR0H 000FEA                              _FSR0L 000FE9  
                  ___awdiv@counter 00BE                              _PORTB 000F81  
                            _PORTC 000F82                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISG 000F98  
                  ??_lcd_disp_logo 0022                       ?_key_polling 0001  
              lcd_disp_dp_loc_0@dp 0022                lcd_disp_dp_loc_1@dp 0022  
              lcd_disp_dp_loc_2@dp 0022                     __CFG_FCMEN$OFF 000000  
                            _glRtc 0078                              _st_Bj 003A  
                   __CFG_T1DIG$OFF 000000                              pclath 000FFA  
                            tablat 000FF5                    __end_of_rtc_get 1772  
                  __end_of_rtc_set 0BC8                              plusw1 000FE3  
                            plusw2 000FDB                              status 000FD8  
                  ??_iic_send_byte 0021                   ?_lcd_show_string 00CB  
                  ??_iic_waite_ack 0020                   __end_of_HexTable FF21  
                  __initialization 0E2E                       __end_of_main 0B10  
             iic_received_byte@ret 0020                             ??_main 0023  
                    __activetblptr 000002                         _at24c02Ch0 00AF  
                       _at24c02Ch1 00A4                             _ADCON1 000FC1  
 __size_of_ads1115_read_conversion 0046                             _ADRESH 000FC4  
                           _ADRESL 000FC3                   ___awdiv@dividend 00BA  
                           _LCDCON 000FA8                             _LCDSE0 000FA9  
                           _LCDSE1 000FB6                             _LCDSE2 000FB7  
                           _LCDSE3 000FB8                             _LCDSE4 000FB9  
                           _LCDSE5 000FBA                             _LCDREG 000FD2  
        ??_handler_interrupt_hight 0001                             i1l1146 0094  
                           i2l1133 084C                             i2l1134 0854  
                           i2l1135 085C                             i2l1136 0864  
                           i2l1139 089A                             i1l5504 0080  
                   __CFG_WDTEN$OFF 000000                             _INTCON 000FF2  
                           i2l5478 0886                             _TABLAT 000FF5  
                    m_int8_2_hex@b 0022       __size_of_sys_ticker_irq_hook 0010  
                 ??_lcd_disp_level 0023                   __end_of_delay_us 1892  
             __size_of_lcd_bl_init 0004                     __CFG_XINST$OFF 000000  
                 __end_of_lcd_init 1A8E                   __end_of_iic_stop 182A  
                        ??___awdiv 0020               __end_of_flashTestbuf FFE8  
              lcd_disp_level@level 00CA                             clear_0 0E74  
                           clear_1 0E88                             clear_2 0E9A  
                           clear_3 0EA6                   ___awdiv@quotient 00C0  
             __size_of_lcd_show_dp 006C               __end_of_lcd_disp_all 19DA  
             __size_of_in_adc_init 0024              i2_sys_ticker_irq_hook 1A70  
             _LCDDigitalIndexTable FEBF            ??_in_adc_start_and_read 0022  
                     __pdataCOMRAM 003D                   key_polling@ktemp 0020  
                 __end_of_soc_init 1A50               __end_of_iic_send_ack 1664  
                 _ads1115_read_reg 054E                       __mediumconst FCBE  
                 __end_of_rtc_init 17B0                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
__size_of_iic_received_byte_if_ack 0020               lcd_disp_get_code@chr 0020  
             lcd_disp_get_code@ret 0021          ?_iic_received_byte_if_ack 0001  
                        ??_rtc_get 0020                          ??_rtc_set 0022  
         ui_disp_start_cs600@F7544 00DB               __end_of_m_int8_2_hex 13FC  
             __end_of_lcd_show_chr 0D02                       _pcf8574Value 003B  
                 _lcd_disp_refresh 13FC                         __accesstop 0060  
          __end_of__initialization 0EAC       __size_ofi2_rtc_alrm_irq_hook 0002  
                    ___rparam_used 000001              _handler_interrupt_low 0018  
                   iic_send_byte@i 0022                     iic_send_byte@x 0021  
                   __pcstackCOMRAM 0001                       __pidataBANK0 1A8E  
  __end_of_handler_interrupt_hight 08D6              _ads1115_init_all_chip 19FE  
          in_adc_start_and_read@ch 00BE                 _rtcc_reg_wr_enable 1A9C  
               __size_of_iic_start 003E               __size_of_key_polling 0034  
                lcd_disp_logo@show 0022                  lcd_show_string@t8 00CD  
                       __pbssBANK0 0060                         __pbssBANK1 0100  
                       __pbssBANK2 0200                         _defalutRtc 00E1  
              ?_rtcc_reg_wr_enable 0001           __size_of_sys_ticker_init 0010  
                  lcd_disp_level@i 00CB        __size_of_lcd_disp_chr_loc_0 0074  
      __size_of_lcd_disp_chr_loc_1 0074        __size_of_lcd_disp_chr_loc_2 0074  
      __size_of_lcd_disp_chr_loc_3 0074        __size_of_lcd_disp_chr_loc_4 0074  
      __size_of_lcd_disp_chr_loc_5 0074        __size_of_lcd_disp_chr_loc_6 0074  
      __size_of_lcd_disp_chr_loc_7 0074       __size_of_ui_disp_start_cs600 0096  
           ?i2_sys_ticker_irq_hook 0001               ??_rtcc_reg_wr_enable 0020  
                          _ALRMRPT 000F5A                ui_disp_rtc_mm_ss@t8 00D8  
                    ?_ads1115_init 0020                         _lcd_config 1892  
                        ?_delay_us 0020                            _TBLPTRH 000FF7  
                          _TBLPTRL 000FF6                            _TBLPTRU 000FF8  
          _ads1115_read_conversion 1664        __size_of_lcd_disp_level_bar 046E  
     __size_of_rtcc_reg_wr_disable 000C                            _RTCVALH 000F5D  
                          _RTCVALL 000F5C                     m_int8_2_hex@t8 00BA  
                        ?_lcd_init 0001        __size_of_lcd_show_string_l0 0044  
      __size_of_lcd_show_string_l1 0042                          ?_iic_stop 0001  
                __end_of_auchCRCHi FEBF                  __end_of_auchCRCLo FDBF  
                _ui_disp_rtc_mm_ss 0BC8             ?_handler_interrupt_low 0001  
               ?_ui_disp_rtc_mm_ss 0001                            __Hparam 0000  
                          __Lparam 0000                     lcd_show_dp@loc 00C9  
                        ?_soc_init 0001              __size_of_lcd_disp_all 0026  
                        ?_rtc_init 0001                  __end_of_iic_start 17EE  
                          ___awdiv 0996                ??_ui_disp_rtc_mm_ss 0023  
                        _LCDDATA10 000F70                          _LCDDATA11 000F71  
                        _LCDDATA12 000F72                          _LCDDATA20 000F7A  
                        _LCDDATA13 000F73                          _LCDDATA21 000F7B  
                        _LCDDATA14 000F74                          _LCDDATA22 000F7C  
                        _LCDDATA15 000F75                          _LCDDATA23 000F7D  
                        _LCDDATA16 000F76                          _LCDDATA17 000F77  
                        _LCDDATA18 000F78                          _LCDDATA19 000F79  
                  __CFG_STVREN$OFF 000000                            _pcf8574 0023  
                          __pcinit 0E2E              __size_of_iic_send_ack 004A  
                          __ramtop 1000                            __ptext0 0A54  
                          __ptext1 0D02                            __ptext2 18C0  
                          __ptext3 16EE                            __ptext4 16AA  
                          __ptext5 1914                            __ptext6 0BC8  
                          __ptext7 1730                            __ptext8 139A  
                          __ptext9 125A             ?_ads1115_init_all_chip 0001  
                   ??_ads1115_init 0023                _sys_ticker_irq_hook 1A60  
         __size_of_lcd_set_com_seg 00C0                          _T1CONbits 000FCD  
              lcd_set_com_seg@bits 00C7                lcd_set_com_seg@show 0021  
            __size_of_m_int8_2_hex 0062                          _LCDPSbits 000FAA  
                       ??_delay_us 0022              __size_of_lcd_show_chr 0098  
            __end_of_lcd_disp_logo 193C                            _rtc_get 1730  
                          _rtc_set 0B10                            main@t16 00D9  
 ads1115_start_conversion@pAds1115 00BF  __size_of_ads1115_start_conversion 002A  
                       ??_lcd_init 0022          ?_ads1115_start_conversion 00BF  
                   __pintcode_body 080A                         ??_iic_stop 0020  
        __end_of_ui_disp_rtc_mm_ss 0C6A                       _flashTestbuf FFA7  
             end_of_initialization 0EAC                       _lcd_disp_all 19B4  
                    __Lmediumconst FCBE                            int_func 080A  
             ?_sys_ticker_irq_hook 0001              __end_of_iic_send_byte 14BE  
         __end_of_ads1115_read_reg 070A                       _iic_send_ack 161A  
                       _ticker_dly 18C0                         ??_soc_init 0020  
                ??_sys_ticker_init 0020                         ??_rtc_init 0020  
                          postdec1 000FE5                            postdec2 000FDD  
            __end_of_iic_waite_ack 151C                            postinc0 000FEE  
                          postinc2 000FDE                  _lcd_disp_dp_loc_0 198C  
                _lcd_disp_dp_loc_1 1964                  _lcd_disp_dp_loc_2 193C  
                _lcd_disp_get_code 15CE           __size_of_lcd_show_string 006E  
                     _m_int8_2_hex 139A                       _lcd_show_chr 0C6A  
                 _defultSystemData FF21           __end_of_lcd_disp_refresh 145E  
               ?_lcd_disp_dp_loc_0 0001                 ?_lcd_disp_dp_loc_1 0001  
               ?_lcd_disp_dp_loc_2 0001                 ?_lcd_disp_get_code 0001  
              i2_rtc_alrm_irq_hook 1ABE          ??_ads1115_read_conversion 00C4  
                      ?_lcd_config 0001     __size_of_in_adc_start_and_read 0066  
    __end_of_in_adc_start_and_read 139A                ??_lcd_disp_dp_loc_0 0022  
              ??_lcd_disp_dp_loc_1 0022                ??_lcd_disp_dp_loc_2 0022  
             lcd_show_string_l0@t8 00CD               lcd_show_string_l1@t8 00CD  
              ??_lcd_disp_get_code 0020        iic_received_byte_if_ack@ack 00BA  
        ads1115_write_reg@pAds1115 00BA        iic_received_byte_if_ack@ret 00BB  
                  iic_send_ack@ack 0020              ??_sys_ticker_irq_hook 000F  
                    ??_lcd_bl_init 0020               ?i2_rtc_alrm_irq_hook 0001  
                _ads1115_write_reg 070A                 ?_ads1115_write_reg 00BA  
        __end_of_lcd_disp_dp_loc_0 19B4          __end_of_lcd_disp_dp_loc_1 198C  
        __end_of_lcd_disp_dp_loc_2 1964                 iic_received_byte@i 0021  
        __end_of_lcd_disp_get_code 161A                      ??_lcd_show_dp 0023  
                      _adjLocation 003C                      ??_in_adc_init 0020  
                    __pidataCOMRAM 1AB8                ??_ads1115_write_reg 0023  
               lcd_disp_get_code@i 0022                start_initialization 0E2E  
           ui_disp_start_cs600@buf 00CE             ui_disp_start_cs600@dly 00D4  
         ?_handler_interrupt_hight 0001                    _LCDDigitalTable FEE8  
                ??_lcd_set_com_seg 00C2         __size_of_ui_disp_rtc_mm_ss 00A2  
           lcd_disp_chr_loc_0@code 0022             lcd_disp_chr_loc_1@code 0022  
           lcd_disp_chr_loc_2@code 0022             lcd_disp_chr_loc_3@code 0022  
           lcd_disp_chr_loc_4@code 0022                _ui_disp_start_cs600 0D02  
           lcd_disp_chr_loc_5@code 0022             lcd_disp_chr_loc_6@code 0022  
           lcd_disp_chr_loc_7@code 0022          __end_of_ads1115_write_reg 080A  
            ??i2_rtc_alrm_irq_hook 0001           in_adc_start_and_read@ret 00BF  
             __end_of_ads1115_init 0E2E            lcd_disp_level_bar@__bar 00C8  
                 lcd_show_chr@code 00CA           ads1115_read_reg@pAds1115 00BC  
                      ?_ticker_dly 0020                __size_of_lcd_config 002E  
              _rtcc_reg_wr_disable 1AA8                __end_of_lcd_bl_init 1AB8  
          ??i2_sys_ticker_irq_hook 0001                        __pdataBANK0 00DB  
                 __CFG_LPT1OSC$OFF 000000               ?_ui_disp_start_cs600 0001  
          __size_of_lcd_disp_level 0058           _iic_received_byte_if_ack 1A20  
                      _ALRMCFGbits 000F5B                __end_of_lcd_show_dp 1334  
               lcd_show_string@str 00CB                __end_of_in_adc_init 19FE  
                    ??_key_polling 0020                        __pbssCOMRAM 0023  
                ??_lcd_show_string 0023                      __pcstackBANK0 00BA  
             ?_rtcc_reg_wr_disable 0001                       _stRTCCFGbits 000F5F  
                __size_of_delay_us 0034                __CFG_CCP2MX$DEFAULT 000000  
          ??_handler_interrupt_low 000F                  __size_of_lcd_init 000E  
                __size_of_iic_stop 003C         __end_of_lcd_disp_chr_loc_0 125A  
       __end_of_lcd_disp_chr_loc_1 11E6         __end_of_lcd_disp_chr_loc_2 1172  
       __end_of_lcd_disp_chr_loc_3 10FE         __end_of_lcd_disp_chr_loc_4 108A  
       __end_of_lcd_disp_chr_loc_5 1016         __end_of_lcd_disp_chr_loc_6 0FA2  
       __end_of_lcd_disp_chr_loc_7 0F2E                          _auchCRCHi FDBF  
                        _auchCRCLo FCBF      ads1115_read_conversion@result 00C5  
       __size_of_lcd_disp_dp_loc_0 0028         __size_of_lcd_disp_dp_loc_1 0028  
       __size_of_lcd_disp_dp_loc_2 0028                          __pintcode 0008  
       __size_of_lcd_disp_get_code 004C                      __pmediumconst FCBE  
                         ?___awdiv 00BA            ___mflot32_2_int32@F7535 002E  
          ??_ads1115_init_all_chip 0023              ??_ui_disp_start_cs600 0023  
                        _fpSysData 003D                  __size_of_soc_init 0010  
                      __pintcodelo 0018                  __size_of_rtc_init 003E  
 __end_of_ads1115_start_conversion 1914                          _dlyTicker 0036  
      __size_of_rtcc_reg_wr_enable 000C                          _iic_start 17B0  
          __end_of_LCDDigitalTable FF10         __end_of_lcd_disp_level_bar 054E  
            ??_rtcc_reg_wr_disable 0020         __end_of_lcd_show_string_l0 16EE  
       __end_of_lcd_show_string_l1 1730                        _PADCFG1bits 000F54  
                         ?_rtc_get 0001                           ?_rtc_set 0020  
              __size_of_ticker_dly 002A               ads1115_init@pAds1115 0020  
                         _LCDDATA0 000FBB                           _LCDDATA1 000FBC  
                         _LCDDATA2 000FBD                           _LCDDATA3 000FBE  
                         _LCDDATA4 000FBF                           _LCDDATA5 000F6B  
                         _LCDDATA6 000F6C                           _LCDDATA7 000F6D  
                         _LCDDATA8 000F6E                           _LCDDATA9 000F6F  
            lcd_set_com_seg@offset 00C6                __end_of_key_polling 185E  
               lcd_set_com_seg@com 00C5                    _sys_ticker_init 1A50  
               lcd_set_com_seg@seg 0020               ui_disp_rtc_mm_ss@buf 00CE  
       __size_of_ads1115_write_reg 0100           __end_of_defultSystemData FFA7  
                      _lcd_bl_init 1AB4                          delay_us@i 00BA  
                _iic_received_byte 151C                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D                           _IPR3bits 000FA5  
                         _PIE3bits 000FA3                        _dlyTickerEn 0038  
               ?_iic_received_byte 0001                           _PIR1bits 000F9E  
                         _PIR3bits 000FA4                  ?_ads1115_read_reg 00BC  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                      _lcd_show_dp 12C8                 ??_ads1115_read_reg 00BF  
                      _in_adc_init 19DA                ??_iic_received_byte 0020  
                  m_int8_2_hex@str 0020                         ?_iic_start 0001  
                       _ADCON0bits 000FC2                         _ADCON2bits 000FC0  
                ?_lcd_disp_refresh 0001                         rtc_set@rtc 0020  
                       rtc_set@stp 00BA                       ??_lcd_config 0022  
               ??_lcd_disp_refresh 0020                           _HexTable FF10  
  ads1115_read_conversion@pAds1115 00C2                        _INTCON2bits 000FF1  
                        copy_data0 0E42              __size_of_ads1115_init 0096  
            ui_disp_start_cs600@t8 00D5          __end_of_iic_received_byte 1576  
                _rtc_alrm_irq_hook 1ABC                         _EECON1bits 000FA6  
                         __Hrparam 0000                    lcd_show_dp@show 00C8  
               ?_rtc_alrm_irq_hook 0001                    lcd_show_chr@chr 00C8  
                  lcd_show_chr@loc 00C9             lcd_disp_level_bar@show 0022  
                         __Lrparam 0000                 __end_of_lcd_config 18C0  
           __size_of_lcd_disp_logo 0028                   __size_of___awdiv 00BE  
                   _lcd_disp_level 1576                ??_rtc_alrm_irq_hook 000F  
                  _lcd_set_com_seg 08D6                       _ads1115Chip0 0094  
                     _ads1115Chip1 0084                       _ads1115_init 0D98  
         _ads1115_start_conversion 18EA                        _key_polling 182A  
          __end_of_sys_ticker_init 1A60                           _delay_us 185E  
           __size_of_iic_send_byte 0060                           _glTicker 007F  
                         _glbEvent 0083        __end_of_sys_ticker_irq_hook 1A70  
                         __ptext10 0C6A                           __ptext11 15CE  
                         __ptext20 12C8                           __ptext12 0EBA  
                         __ptext21 193C                           __ptext13 0F2E  
                         __ptext30 1A50                           __ptext22 1964  
                         __ptext14 0FA2                           __ptext31 1772  
                         __ptext23 198C                           __ptext15 1016  
                         __ptext40 1334                           __ptext32 0B10  
                         __ptext24 13FC                           __ptext16 108A  
                         __ptext41 185E                           __ptext33 1A9C  
                         __ptext25 1576                           __ptext17 10FE  
                         __ptext50 17EE                           __ptext42 19DA  
                         __ptext34 1AA8                           __ptext26 00E0  
                         __ptext18 1172                           __ptext51 1A20  
                         __ptext43 18EA                           __ptext35 1A80  
                         __ptext27 08D6                           __ptext19 11E6  
                         __ptext60 1A70                           __ptext52 161A  
                         __ptext44 070A                           __ptext36 1892  
                         __ptext28 0996                           __ptext61 1ABE  
                         __ptext53 151C                           __ptext45 1664  
                         __ptext37 19B4                           __ptext29 1A40  
                         __ptext62 0000                           __ptext54 19FE  
                         __ptext46 054E                           __ptext38 1AB4  
                         __ptext55 0D98                           __ptext47 17B0  
                         __ptext39 182A                           __ptext48 145E  
                         __ptext57 1A60                           __ptext49 14BE  
                         __ptext58 1ABC                   __size_of_rtc_get 0042  
                 __size_of_rtc_set 00B8                           _lcd_init 1A80  
            _in_adc_start_and_read 1334                           _iic_stop 17EE  
           __size_of_iic_waite_ack 005E                           _keyValue 0039  
        __end_of_rtc_alrm_irq_hook 1ABE                      __size_of_main 00BC  
 __size_of_handler_interrupt_hight 08CE                       ??_ticker_dly 0022  
                         _soc_init 1A40                       ticker_dly@ms 0020  
       ??_iic_received_byte_if_ack 0022             __end_of_lcd_disp_level 15CE  
                         _rtc_init 1772             ads1115_write_reg@value 00BD  
                        rtc_get@t8 0020                           int$flags 0040  
                  _lcd_show_string 125A     __size_ofi2_sys_ticker_irq_hook 0010  
    __end_ofi2_sys_ticker_irq_hook 1A80           ?_ads1115_read_conversion 00C2  
                      ??_iic_start 0020                ads1115_init@slvaddr 0022  
                      delay_us@dly 0020                         _INTCONbits 000FF2  
            lcd_disp_level_bar@bar 00C9               iic_waite_ack@timeout 0020  
            __CFG_RTCSOSC$T1OSCREF 000000                      key_polling@t8 0021  
      __end_ofi2_rtc_alrm_irq_hook 1AC0                      _lcd_disp_logo 1914  
               __end_of_ticker_dly 18EA                           intlevel1 0000  
                         intlevel2 0000               ads1115_read_reg@addr 00BE  
       __size_of_iic_received_byte 005A     __size_of_handler_interrupt_low 00C4  
    __end_of_handler_interrupt_low 00DC                         _OSCCONbits 000FD3  
                    _iic_send_byte 145E              ads1115_write_reg@addr 00BC  
          __end_of_lcd_set_com_seg 0996                    ?_lcd_disp_level 0001  
                    _iic_waite_ack 14BE                 _lcd_disp_chr_loc_0 11E6  
               _lcd_disp_chr_loc_1 1172                 _lcd_disp_chr_loc_2 10FE  
               _lcd_disp_chr_loc_3 108A                 _lcd_disp_chr_loc_4 1016  
               _lcd_disp_chr_loc_5 0FA2                 _lcd_disp_chr_loc_6 0F2E  
               _lcd_disp_chr_loc_7 0EBA     __size_of_ads1115_init_all_chip 0022  
    __end_of_ads1115_init_all_chip 1A20                         _RTCCFGbits 000F5F  
              ads1115_read_reg@t16 00C0            ___int32_2_mflot32@F7530 0032  
              ?_lcd_disp_chr_loc_0 0001                ?_lcd_disp_chr_loc_1 0001  
              ?_lcd_disp_chr_loc_2 0001                ?_lcd_disp_chr_loc_3 0001  
              ?_lcd_disp_chr_loc_4 0001                ?_lcd_disp_chr_loc_5 0001  
              ?_lcd_disp_chr_loc_6 0001                ?_lcd_disp_chr_loc_7 0001  
                 ?_sys_ticker_init 0001                     ?_lcd_disp_logo 0001  
           ?_in_adc_start_and_read 00BC         __size_of_rtc_alrm_irq_hook 0002  
                    ?_lcd_disp_all 0001                 _lcd_disp_level_bar 00E0  
                     ?_lcd_bl_init 0001            __end_of_lcd_show_string 12C8  
               _lcd_show_string_l0 16AA                 _lcd_show_string_l1 16EE  
      __end_of_ui_disp_start_cs600 0D98               ??_lcd_disp_chr_loc_0 0022  
             ??_lcd_disp_chr_loc_1 0022               ??_lcd_disp_chr_loc_2 0022  
             ??_lcd_disp_chr_loc_3 0022               ??_lcd_disp_chr_loc_4 0022  
             ??_lcd_disp_chr_loc_5 0022               ??_lcd_disp_chr_loc_6 0022  
             ??_lcd_disp_chr_loc_7 0022                     ?_iic_send_byte 0001  
                    ?_iic_send_ack 0001    __end_of_ads1115_read_conversion 16AA  
              ?_lcd_disp_level_bar 0022  
