

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Sep 16 17:45:21 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F86J93
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   158                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   164                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   165  0000                     
   166                           ; Version 1.41
   167                           ; Generated 25/01/2017 GMT
   168                           ; 
   169                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution.
   183                           ; 
   184                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   185                           ;        software without specific prior written permission.
   186                           ; 
   187                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   188                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   189                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   190                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   191                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   192                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   193                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   194                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   195                           ; 
   196                           ; 
   197                           ; Code-generator required, PIC18F86J93 Definitions
   198                           ; 
   199                           ; SFR Addresses
   200  0000                     
   201                           	psect	idataCOMRAM
   202  007948                     __pidataCOMRAM:
   203                           	opt stack 0
   204                           
   205                           ;initializer for _fpSysData
   206  007948  00                 	db	0
   207  007949  F4                 	db	244
   208  00794A  00                 	db	0
   209                           
   210                           ;initializer for _glNoEventTimeOut
   211  00794B  1E                 	db	30
   212                           
   213                           	psect	idataBANK1
   214  007922                     __pidataBANK1:
   215                           	opt stack 0
   216                           
   217                           ;initializer for ui_disp_start_cs600@F7634
   218  007922  2D                 	db	45
   219  007923  30                 	db	48
   220  007924  30                 	db	48
   221  007925  2D                 	db	45
   222  007926  00                 	db	0
   223  007927  00                 	db	0
   224                           
   225                           ;initializer for _defalutRtc
   226  007928  17                 	db	23
   227  007929  07                 	db	7
   228  00792A  31                 	db	49
   229  00792B  23                 	db	35
   230  00792C  55                 	db	85
   231  00792D  55                 	db	85
   232  00792E  02                 	db	2
   233                           
   234                           	psect	mediumconst
   235  00F982                     __pmediumconst:
   236                           	opt stack 0
   237  00F982  00                 	db	0
   238  00F983                     _auchCRCLo:
   239                           	opt stack 0
   240  00F983  00                 	db	0
   241  00F984  C0                 	db	192
   242  00F985  C1                 	db	193
   243  00F986  01                 	db	1
   244  00F987  C3                 	db	195
   245  00F988  03                 	db	3
   246  00F989  02                 	db	2
   247  00F98A  C2                 	db	194
   248  00F98B  C6                 	db	198
   249  00F98C  06                 	db	6
   250  00F98D  07                 	db	7
   251  00F98E  C7                 	db	199
   252  00F98F  05                 	db	5
   253  00F990  C5                 	db	197
   254  00F991  C4                 	db	196
   255  00F992  04                 	db	4
   256  00F993  CC                 	db	204
   257  00F994  0C                 	db	12
   258  00F995  0D                 	db	13
   259  00F996  CD                 	db	205
   260  00F997  0F                 	db	15
   261  00F998  CF                 	db	207
   262  00F999  CE                 	db	206
   263  00F99A  0E                 	db	14
   264  00F99B  0A                 	db	10
   265  00F99C  CA                 	db	202
   266  00F99D  CB                 	db	203
   267  00F99E  0B                 	db	11
   268  00F99F  C9                 	db	201
   269  00F9A0  09                 	db	9
   270  00F9A1  08                 	db	8
   271  00F9A2  C8                 	db	200
   272  00F9A3  D8                 	db	216
   273  00F9A4  18                 	db	24
   274  00F9A5  19                 	db	25
   275  00F9A6  D9                 	db	217
   276  00F9A7  1B                 	db	27
   277  00F9A8  DB                 	db	219
   278  00F9A9  DA                 	db	218
   279  00F9AA  1A                 	db	26
   280  00F9AB  1E                 	db	30
   281  00F9AC  DE                 	db	222
   282  00F9AD  DF                 	db	223
   283  00F9AE  1F                 	db	31
   284  00F9AF  DD                 	db	221
   285  00F9B0  1D                 	db	29
   286  00F9B1  1C                 	db	28
   287  00F9B2  DC                 	db	220
   288  00F9B3  14                 	db	20
   289  00F9B4  D4                 	db	212
   290  00F9B5  D5                 	db	213
   291  00F9B6  15                 	db	21
   292  00F9B7  D7                 	db	215
   293  00F9B8  17                 	db	23
   294  00F9B9  16                 	db	22
   295  00F9BA  D6                 	db	214
   296  00F9BB  D2                 	db	210
   297  00F9BC  12                 	db	18
   298  00F9BD  13                 	db	19
   299  00F9BE  D3                 	db	211
   300  00F9BF  11                 	db	17
   301  00F9C0  D1                 	db	209
   302  00F9C1  D0                 	db	208
   303  00F9C2  10                 	db	16
   304  00F9C3  F0                 	db	240
   305  00F9C4  30                 	db	48
   306  00F9C5  31                 	db	49
   307  00F9C6  F1                 	db	241
   308  00F9C7  33                 	db	51
   309  00F9C8  F3                 	db	243
   310  00F9C9  F2                 	db	242
   311  00F9CA  32                 	db	50
   312  00F9CB  36                 	db	54
   313  00F9CC  F6                 	db	246
   314  00F9CD  F7                 	db	247
   315  00F9CE  37                 	db	55
   316  00F9CF  F5                 	db	245
   317  00F9D0  35                 	db	53
   318  00F9D1  34                 	db	52
   319  00F9D2  F4                 	db	244
   320  00F9D3  3C                 	db	60
   321  00F9D4  FC                 	db	252
   322  00F9D5  FD                 	db	253
   323  00F9D6  3D                 	db	61
   324  00F9D7  FF                 	db	255
   325  00F9D8  3F                 	db	63
   326  00F9D9  3E                 	db	62
   327  00F9DA  FE                 	db	254
   328  00F9DB  FA                 	db	250
   329  00F9DC  3A                 	db	58
   330  00F9DD  3B                 	db	59
   331  00F9DE  FB                 	db	251
   332  00F9DF  39                 	db	57
   333  00F9E0  F9                 	db	249
   334  00F9E1  F8                 	db	248
   335  00F9E2  38                 	db	56
   336  00F9E3  28                 	db	40
   337  00F9E4  E8                 	db	232
   338  00F9E5  E9                 	db	233
   339  00F9E6  29                 	db	41
   340  00F9E7  EB                 	db	235
   341  00F9E8  2B                 	db	43
   342  00F9E9  2A                 	db	42
   343  00F9EA  EA                 	db	234
   344  00F9EB  EE                 	db	238
   345  00F9EC  2E                 	db	46
   346  00F9ED  2F                 	db	47
   347  00F9EE  EF                 	db	239
   348  00F9EF  2D                 	db	45
   349  00F9F0  ED                 	db	237
   350  00F9F1  EC                 	db	236
   351  00F9F2  2C                 	db	44
   352  00F9F3  E4                 	db	228
   353  00F9F4  24                 	db	36
   354  00F9F5  25                 	db	37
   355  00F9F6  E5                 	db	229
   356  00F9F7  27                 	db	39
   357  00F9F8  E7                 	db	231
   358  00F9F9  E6                 	db	230
   359  00F9FA  26                 	db	38
   360  00F9FB  22                 	db	34
   361  00F9FC  E2                 	db	226
   362  00F9FD  E3                 	db	227
   363  00F9FE  23                 	db	35
   364  00F9FF  E1                 	db	225
   365  00FA00  21                 	db	33
   366  00FA01  20                 	db	32
   367  00FA02  E0                 	db	224
   368  00FA03  A0                 	db	160
   369  00FA04  60                 	db	96
   370  00FA05  61                 	db	97
   371  00FA06  A1                 	db	161
   372  00FA07  63                 	db	99
   373  00FA08  A3                 	db	163
   374  00FA09  A2                 	db	162
   375  00FA0A  62                 	db	98
   376  00FA0B  66                 	db	102
   377  00FA0C  A6                 	db	166
   378  00FA0D  A7                 	db	167
   379  00FA0E  67                 	db	103
   380  00FA0F  A5                 	db	165
   381  00FA10  65                 	db	101
   382  00FA11  64                 	db	100
   383  00FA12  A4                 	db	164
   384  00FA13  6C                 	db	108
   385  00FA14  AC                 	db	172
   386  00FA15  AD                 	db	173
   387  00FA16  6D                 	db	109
   388  00FA17  AF                 	db	175
   389  00FA18  6F                 	db	111
   390  00FA19  6E                 	db	110
   391  00FA1A  AE                 	db	174
   392  00FA1B  AA                 	db	170
   393  00FA1C  6A                 	db	106
   394  00FA1D  6B                 	db	107
   395  00FA1E  AB                 	db	171
   396  00FA1F  69                 	db	105
   397  00FA20  A9                 	db	169
   398  00FA21  A8                 	db	168
   399  00FA22  68                 	db	104
   400  00FA23  78                 	db	120
   401  00FA24  B8                 	db	184
   402  00FA25  B9                 	db	185
   403  00FA26  79                 	db	121
   404  00FA27  BB                 	db	187
   405  00FA28  7B                 	db	123
   406  00FA29  7A                 	db	122
   407  00FA2A  BA                 	db	186
   408  00FA2B  BE                 	db	190
   409  00FA2C  7E                 	db	126
   410  00FA2D  7F                 	db	127
   411  00FA2E  BF                 	db	191
   412  00FA2F  7D                 	db	125
   413  00FA30  BD                 	db	189
   414  00FA31  BC                 	db	188
   415  00FA32  7C                 	db	124
   416  00FA33  B4                 	db	180
   417  00FA34  74                 	db	116
   418  00FA35  75                 	db	117
   419  00FA36  B5                 	db	181
   420  00FA37  77                 	db	119
   421  00FA38  B7                 	db	183
   422  00FA39  B6                 	db	182
   423  00FA3A  76                 	db	118
   424  00FA3B  72                 	db	114
   425  00FA3C  B2                 	db	178
   426  00FA3D  B3                 	db	179
   427  00FA3E  73                 	db	115
   428  00FA3F  B1                 	db	177
   429  00FA40  71                 	db	113
   430  00FA41  70                 	db	112
   431  00FA42  B0                 	db	176
   432  00FA43  50                 	db	80
   433  00FA44  90                 	db	144
   434  00FA45  91                 	db	145
   435  00FA46  51                 	db	81
   436  00FA47  93                 	db	147
   437  00FA48  53                 	db	83
   438  00FA49  52                 	db	82
   439  00FA4A  92                 	db	146
   440  00FA4B  96                 	db	150
   441  00FA4C  56                 	db	86
   442  00FA4D  57                 	db	87
   443  00FA4E  97                 	db	151
   444  00FA4F  55                 	db	85
   445  00FA50  95                 	db	149
   446  00FA51  94                 	db	148
   447  00FA52  54                 	db	84
   448  00FA53  9C                 	db	156
   449  00FA54  5C                 	db	92
   450  00FA55  5D                 	db	93
   451  00FA56  9D                 	db	157
   452  00FA57  5F                 	db	95
   453  00FA58  9F                 	db	159
   454  00FA59  9E                 	db	158
   455  00FA5A  5E                 	db	94
   456  00FA5B  5A                 	db	90
   457  00FA5C  9A                 	db	154
   458  00FA5D  9B                 	db	155
   459  00FA5E  5B                 	db	91
   460  00FA5F  99                 	db	153
   461  00FA60  59                 	db	89
   462  00FA61  58                 	db	88
   463  00FA62  98                 	db	152
   464  00FA63  88                 	db	136
   465  00FA64  48                 	db	72
   466  00FA65  49                 	db	73
   467  00FA66  89                 	db	137
   468  00FA67  4B                 	db	75
   469  00FA68  8B                 	db	139
   470  00FA69  8A                 	db	138
   471  00FA6A  4A                 	db	74
   472  00FA6B  4E                 	db	78
   473  00FA6C  8E                 	db	142
   474  00FA6D  8F                 	db	143
   475  00FA6E  4F                 	db	79
   476  00FA6F  8D                 	db	141
   477  00FA70  4D                 	db	77
   478  00FA71  4C                 	db	76
   479  00FA72  8C                 	db	140
   480  00FA73  44                 	db	68
   481  00FA74  84                 	db	132
   482  00FA75  85                 	db	133
   483  00FA76  45                 	db	69
   484  00FA77  87                 	db	135
   485  00FA78  47                 	db	71
   486  00FA79  46                 	db	70
   487  00FA7A  86                 	db	134
   488  00FA7B  82                 	db	130
   489  00FA7C  42                 	db	66
   490  00FA7D  43                 	db	67
   491  00FA7E  83                 	db	131
   492  00FA7F  41                 	db	65
   493  00FA80  81                 	db	129
   494  00FA81  80                 	db	128
   495  00FA82  40                 	db	64
   496  00FA83                     __end_of_auchCRCLo:
   497                           	opt stack 0
   498  00FA83                     _auchCRCHi:
   499                           	opt stack 0
   500  00FA83  00                 	db	0
   501  00FA84  C1                 	db	193
   502  00FA85  81                 	db	129
   503  00FA86  40                 	db	64
   504  00FA87  01                 	db	1
   505  00FA88  C0                 	db	192
   506  00FA89  80                 	db	128
   507  00FA8A  41                 	db	65
   508  00FA8B  01                 	db	1
   509  00FA8C  C0                 	db	192
   510  00FA8D  80                 	db	128
   511  00FA8E  41                 	db	65
   512  00FA8F  00                 	db	0
   513  00FA90  C1                 	db	193
   514  00FA91  81                 	db	129
   515  00FA92  40                 	db	64
   516  00FA93  01                 	db	1
   517  00FA94  C0                 	db	192
   518  00FA95  80                 	db	128
   519  00FA96  41                 	db	65
   520  00FA97  00                 	db	0
   521  00FA98  C1                 	db	193
   522  00FA99  81                 	db	129
   523  00FA9A  40                 	db	64
   524  00FA9B  00                 	db	0
   525  00FA9C  C1                 	db	193
   526  00FA9D  81                 	db	129
   527  00FA9E  40                 	db	64
   528  00FA9F  01                 	db	1
   529  00FAA0  C0                 	db	192
   530  00FAA1  80                 	db	128
   531  00FAA2  41                 	db	65
   532  00FAA3  01                 	db	1
   533  00FAA4  C0                 	db	192
   534  00FAA5  80                 	db	128
   535  00FAA6  41                 	db	65
   536  00FAA7  00                 	db	0
   537  00FAA8  C1                 	db	193
   538  00FAA9  81                 	db	129
   539  00FAAA  40                 	db	64
   540  00FAAB  00                 	db	0
   541  00FAAC  C1                 	db	193
   542  00FAAD  81                 	db	129
   543  00FAAE  40                 	db	64
   544  00FAAF  01                 	db	1
   545  00FAB0  C0                 	db	192
   546  00FAB1  80                 	db	128
   547  00FAB2  41                 	db	65
   548  00FAB3  00                 	db	0
   549  00FAB4  C1                 	db	193
   550  00FAB5  81                 	db	129
   551  00FAB6  40                 	db	64
   552  00FAB7  01                 	db	1
   553  00FAB8  C0                 	db	192
   554  00FAB9  80                 	db	128
   555  00FABA  41                 	db	65
   556  00FABB  01                 	db	1
   557  00FABC  C0                 	db	192
   558  00FABD  80                 	db	128
   559  00FABE  41                 	db	65
   560  00FABF  00                 	db	0
   561  00FAC0  C1                 	db	193
   562  00FAC1  81                 	db	129
   563  00FAC2  40                 	db	64
   564  00FAC3  01                 	db	1
   565  00FAC4  C0                 	db	192
   566  00FAC5  80                 	db	128
   567  00FAC6  41                 	db	65
   568  00FAC7  00                 	db	0
   569  00FAC8  C1                 	db	193
   570  00FAC9  81                 	db	129
   571  00FACA  40                 	db	64
   572  00FACB  00                 	db	0
   573  00FACC  C1                 	db	193
   574  00FACD  81                 	db	129
   575  00FACE  40                 	db	64
   576  00FACF  01                 	db	1
   577  00FAD0  C0                 	db	192
   578  00FAD1  80                 	db	128
   579  00FAD2  41                 	db	65
   580  00FAD3  00                 	db	0
   581  00FAD4  C1                 	db	193
   582  00FAD5  81                 	db	129
   583  00FAD6  40                 	db	64
   584  00FAD7  01                 	db	1
   585  00FAD8  C0                 	db	192
   586  00FAD9  80                 	db	128
   587  00FADA  41                 	db	65
   588  00FADB  01                 	db	1
   589  00FADC  C0                 	db	192
   590  00FADD  80                 	db	128
   591  00FADE  41                 	db	65
   592  00FADF  00                 	db	0
   593  00FAE0  C1                 	db	193
   594  00FAE1  81                 	db	129
   595  00FAE2  40                 	db	64
   596  00FAE3  00                 	db	0
   597  00FAE4  C1                 	db	193
   598  00FAE5  81                 	db	129
   599  00FAE6  40                 	db	64
   600  00FAE7  01                 	db	1
   601  00FAE8  C0                 	db	192
   602  00FAE9  80                 	db	128
   603  00FAEA  41                 	db	65
   604  00FAEB  01                 	db	1
   605  00FAEC  C0                 	db	192
   606  00FAED  80                 	db	128
   607  00FAEE  41                 	db	65
   608  00FAEF  00                 	db	0
   609  00FAF0  C1                 	db	193
   610  00FAF1  81                 	db	129
   611  00FAF2  40                 	db	64
   612  00FAF3  01                 	db	1
   613  00FAF4  C0                 	db	192
   614  00FAF5  80                 	db	128
   615  00FAF6  41                 	db	65
   616  00FAF7  00                 	db	0
   617  00FAF8  C1                 	db	193
   618  00FAF9  81                 	db	129
   619  00FAFA  40                 	db	64
   620  00FAFB  00                 	db	0
   621  00FAFC  C1                 	db	193
   622  00FAFD  81                 	db	129
   623  00FAFE  40                 	db	64
   624  00FAFF  01                 	db	1
   625  00FB00  C0                 	db	192
   626  00FB01  80                 	db	128
   627  00FB02  41                 	db	65
   628  00FB03  01                 	db	1
   629  00FB04  C0                 	db	192
   630  00FB05  80                 	db	128
   631  00FB06  41                 	db	65
   632  00FB07  00                 	db	0
   633  00FB08  C1                 	db	193
   634  00FB09  81                 	db	129
   635  00FB0A  40                 	db	64
   636  00FB0B  00                 	db	0
   637  00FB0C  C1                 	db	193
   638  00FB0D  81                 	db	129
   639  00FB0E  40                 	db	64
   640  00FB0F  01                 	db	1
   641  00FB10  C0                 	db	192
   642  00FB11  80                 	db	128
   643  00FB12  41                 	db	65
   644  00FB13  00                 	db	0
   645  00FB14  C1                 	db	193
   646  00FB15  81                 	db	129
   647  00FB16  40                 	db	64
   648  00FB17  01                 	db	1
   649  00FB18  C0                 	db	192
   650  00FB19  80                 	db	128
   651  00FB1A  41                 	db	65
   652  00FB1B  01                 	db	1
   653  00FB1C  C0                 	db	192
   654  00FB1D  80                 	db	128
   655  00FB1E  41                 	db	65
   656  00FB1F  00                 	db	0
   657  00FB20  C1                 	db	193
   658  00FB21  81                 	db	129
   659  00FB22  40                 	db	64
   660  00FB23  00                 	db	0
   661  00FB24  C1                 	db	193
   662  00FB25  81                 	db	129
   663  00FB26  40                 	db	64
   664  00FB27  01                 	db	1
   665  00FB28  C0                 	db	192
   666  00FB29  80                 	db	128
   667  00FB2A  41                 	db	65
   668  00FB2B  01                 	db	1
   669  00FB2C  C0                 	db	192
   670  00FB2D  80                 	db	128
   671  00FB2E  41                 	db	65
   672  00FB2F  00                 	db	0
   673  00FB30  C1                 	db	193
   674  00FB31  81                 	db	129
   675  00FB32  40                 	db	64
   676  00FB33  01                 	db	1
   677  00FB34  C0                 	db	192
   678  00FB35  80                 	db	128
   679  00FB36  41                 	db	65
   680  00FB37  00                 	db	0
   681  00FB38  C1                 	db	193
   682  00FB39  81                 	db	129
   683  00FB3A  40                 	db	64
   684  00FB3B  00                 	db	0
   685  00FB3C  C1                 	db	193
   686  00FB3D  81                 	db	129
   687  00FB3E  40                 	db	64
   688  00FB3F  01                 	db	1
   689  00FB40  C0                 	db	192
   690  00FB41  80                 	db	128
   691  00FB42  41                 	db	65
   692  00FB43  00                 	db	0
   693  00FB44  C1                 	db	193
   694  00FB45  81                 	db	129
   695  00FB46  40                 	db	64
   696  00FB47  01                 	db	1
   697  00FB48  C0                 	db	192
   698  00FB49  80                 	db	128
   699  00FB4A  41                 	db	65
   700  00FB4B  01                 	db	1
   701  00FB4C  C0                 	db	192
   702  00FB4D  80                 	db	128
   703  00FB4E  41                 	db	65
   704  00FB4F  00                 	db	0
   705  00FB50  C1                 	db	193
   706  00FB51  81                 	db	129
   707  00FB52  40                 	db	64
   708  00FB53  01                 	db	1
   709  00FB54  C0                 	db	192
   710  00FB55  80                 	db	128
   711  00FB56  41                 	db	65
   712  00FB57  00                 	db	0
   713  00FB58  C1                 	db	193
   714  00FB59  81                 	db	129
   715  00FB5A  40                 	db	64
   716  00FB5B  00                 	db	0
   717  00FB5C  C1                 	db	193
   718  00FB5D  81                 	db	129
   719  00FB5E  40                 	db	64
   720  00FB5F  01                 	db	1
   721  00FB60  C0                 	db	192
   722  00FB61  80                 	db	128
   723  00FB62  41                 	db	65
   724  00FB63  01                 	db	1
   725  00FB64  C0                 	db	192
   726  00FB65  80                 	db	128
   727  00FB66  41                 	db	65
   728  00FB67  00                 	db	0
   729  00FB68  C1                 	db	193
   730  00FB69  81                 	db	129
   731  00FB6A  40                 	db	64
   732  00FB6B  00                 	db	0
   733  00FB6C  C1                 	db	193
   734  00FB6D  81                 	db	129
   735  00FB6E  40                 	db	64
   736  00FB6F  01                 	db	1
   737  00FB70  C0                 	db	192
   738  00FB71  80                 	db	128
   739  00FB72  41                 	db	65
   740  00FB73  00                 	db	0
   741  00FB74  C1                 	db	193
   742  00FB75  81                 	db	129
   743  00FB76  40                 	db	64
   744  00FB77  01                 	db	1
   745  00FB78  C0                 	db	192
   746  00FB79  80                 	db	128
   747  00FB7A  41                 	db	65
   748  00FB7B  01                 	db	1
   749  00FB7C  C0                 	db	192
   750  00FB7D  80                 	db	128
   751  00FB7E  41                 	db	65
   752  00FB7F  00                 	db	0
   753  00FB80  C1                 	db	193
   754  00FB81  81                 	db	129
   755  00FB82  40                 	db	64
   756  00FB83                     __end_of_auchCRCHi:
   757                           	opt stack 0
   758  00FB83                     _LCDDigitalIndexTable:
   759                           	opt stack 0
   760  00FB83  30                 	db	48
   761  00FB84  31                 	db	49
   762  00FB85  32                 	db	50
   763  00FB86  33                 	db	51
   764  00FB87  34                 	db	52
   765  00FB88  35                 	db	53
   766  00FB89  36                 	db	54
   767  00FB8A  37                 	db	55
   768  00FB8B  38                 	db	56
   769  00FB8C  39                 	db	57
   770  00FB8D  61                 	db	97
   771  00FB8E  62                 	db	98
   772  00FB8F  63                 	db	99
   773  00FB90  64                 	db	100
   774  00FB91  65                 	db	101
   775  00FB92  66                 	db	102
   776  00FB93  67                 	db	103
   777  00FB94  68                 	db	104
   778  00FB95  69                 	db	105
   779  00FB96  6A                 	db	106
   780  00FB97  6B                 	db	107
   781  00FB98  6C                 	db	108
   782  00FB99  6D                 	db	109
   783  00FB9A  6E                 	db	110
   784  00FB9B  6F                 	db	111
   785  00FB9C  70                 	db	112
   786  00FB9D  71                 	db	113
   787  00FB9E  72                 	db	114
   788  00FB9F  73                 	db	115
   789  00FBA0  74                 	db	116
   790  00FBA1  75                 	db	117
   791  00FBA2  76                 	db	118
   792  00FBA3  77                 	db	119
   793  00FBA4  78                 	db	120
   794  00FBA5  79                 	db	121
   795  00FBA6  7A                 	db	122
   796  00FBA7  2E                 	db	46
   797  00FBA8  2D                 	db	45
   798  00FBA9  3A                 	db	58
   799  00FBAA  20                 	db	32
   800  00FBAB  00                 	db	0
   801  00FBAC                     __end_of_LCDDigitalIndexTable:
   802                           	opt stack 0
   803  00FBAC                     _LCDDigitalTable:
   804                           	opt stack 0
   805  00FBAC  3F                 	db	63
   806  00FBAD  06                 	db	6
   807  00FBAE  5B                 	db	91
   808  00FBAF  4F                 	db	79
   809  00FBB0  66                 	db	102
   810  00FBB1  6D                 	db	109
   811  00FBB2  7D                 	db	125
   812  00FBB3  07                 	db	7
   813  00FBB4  7F                 	db	127
   814  00FBB5  6F                 	db	111
   815  00FBB6  77                 	db	119
   816  00FBB7  7C                 	db	124
   817  00FBB8  39                 	db	57
   818  00FBB9  5E                 	db	94
   819  00FBBA  79                 	db	121
   820  00FBBB  71                 	db	113
   821  00FBBC  6F                 	db	111
   822  00FBBD  76                 	db	118
   823  00FBBE  06                 	db	6
   824  00FBBF  0E                 	db	14
   825  00FBC0  7A                 	db	122
   826  00FBC1  38                 	db	56
   827  00FBC2  00                 	db	0
   828  00FBC3  37                 	db	55
   829  00FBC4  5C                 	db	92
   830  00FBC5  73                 	db	115
   831  00FBC6  67                 	db	103
   832  00FBC7  50                 	db	80
   833  00FBC8  6D                 	db	109
   834  00FBC9  78                 	db	120
   835  00FBCA  3E                 	db	62
   836  00FBCB  00                 	db	0
   837  00FBCC  00                 	db	0
   838  00FBCD  00                 	db	0
   839  00FBCE  6E                 	db	110
   840  00FBCF  5B                 	db	91
   841  00FBD0  40                 	db	64
   842  00FBD1  40                 	db	64
   843  00FBD2  48                 	db	72
   844  00FBD3  00                 	db	0
   845  00FBD4                     __end_of_LCDDigitalTable:
   846                           	opt stack 0
   847  00FBD4                     _HexTable:
   848                           	opt stack 0
   849  00FBD4  30                 	db	48
   850  00FBD5  31                 	db	49
   851  00FBD6  32                 	db	50
   852  00FBD7  33                 	db	51
   853  00FBD8  34                 	db	52
   854  00FBD9  35                 	db	53
   855  00FBDA  36                 	db	54
   856  00FBDB  37                 	db	55
   857  00FBDC  38                 	db	56
   858  00FBDD  39                 	db	57
   859  00FBDE  61                 	db	97
   860  00FBDF  62                 	db	98
   861  00FBE0  63                 	db	99
   862  00FBE1  64                 	db	100
   863  00FBE2  65                 	db	101
   864  00FBE3  66                 	db	102
   865  00FBE4  00                 	db	0
   866  00FBE5                     __end_of_HexTable:
   867                           	opt stack 0
   868  00FBE5                     _hKel:
   869                           	opt stack 0
   870  00FBE5  0000               	dw	0
   871  00FBE7  0000               	dw	0
   872  00FBE9  4952               	dw	18770
   873  00FBEB  399D               	dw	14749
   874  00FBED  4952               	dw	18770
   875  00FBEF  3A9D               	dw	15005
   876  00FBF1  64C3               	dw	25795
   877  00FBF3  3B2A               	dw	15146
   878  00FBF5  0275               	dw	629
   879  00FBF7  3B9A               	dw	15258
   880  00FBF9  34D7               	dw	13527
   881  00FBFB  3BEF               	dw	15343
   882  00FBFD  64C3               	dw	25795
   883  00FBFF  3C2A               	dw	15402
   884  00FC01  6042               	dw	24642
   885  00FC03  3C65               	dw	15461
   886  00FC05  182B               	dw	6187
   887  00FC07  3C95               	dw	15509
   888  00FC09  C711               	dw	50961
   889  00FC0B  3CBA               	dw	15546
   890  00FC0D  6042               	dw	24642
   891  00FC0F  3CE5               	dw	15589
   892  00FC11  A027               	dw	40999
   893  00FC13  3D09               	dw	15625
   894  00FC15  9C78               	dw	40056
   895  00FC17  3D22               	dw	15650
   896  00FC19  A512               	dw	42258
   897  00FC1B  3D3D               	dw	15677
   898  00FC1D  511A               	dw	20762
   899  00FC1F  3D5A               	dw	15706
   900  00FC21  A090               	dw	41104
   901  00FC23  3D78               	dw	15736
   902  00FC25  7E28               	dw	32296
   903  00FC27  3D8C               	dw	15756
   904  00FC29  7DBF               	dw	32191
   905  00FC2B  3D9D               	dw	15773
   906  00FC2D  1AA0               	dw	6816
   907  00FC2F  3DAF               	dw	15791
   908  00FC31  BDA5               	dw	48549
   909  00FC33  3DC1               	dw	15809
   910  00FC35  FDF4               	dw	65012
   911  00FC37  3DD4               	dw	15828
   912  00FC39  0FF9               	dw	4089
   913  00FC3B  3DE9               	dw	15849
   914  00FC3D  BF48               	dw	48968
   915  00FC3F  3DFD               	dw	15869
   916  00FC41  A027               	dw	40999
   917  00FC43  3E09               	dw	15881
   918  00FC45  AF4F               	dw	44879
   919  00FC47  3E14               	dw	15892
   920  00FC49  0D1B               	dw	3355
   921  00FC4B  3E20               	dw	15904
   922  00FC4D  9F56               	dw	40790
   923  00FC4F  3E2B               	dw	15915
   924  00FC51  9A6B               	dw	39531
   925  00FC53  3E37               	dw	15927
   926  00FC55  E426               	dw	58406
   927  00FC57  3E43               	dw	15939
   928  00FC59  624E               	dw	25166
   929  00FC5B  3E50               	dw	15952
   930  00FC5D  2F1B               	dw	12059
   931  00FC5F  3E5D               	dw	15965
   932  00FC61  3055               	dw	12373
   933  00FC63  3E6A               	dw	15978
   934  00FC65  8034               	dw	32820
   935  00FC67  3E77               	dw	15991
   936  00FC69  7525               	dw	29989
   937  00FC6B  3E82               	dw	16002
   938  00FC6D  5183               	dw	20867
   939  00FC6F  3E89               	dw	16009
   940  00FC71  4817               	dw	18455
   941  00FC73  3E90               	dw	16016
   942  00FC75  4BC7               	dw	19399
   943  00FC77  3E97               	dw	16023
   944  00FC79  69AD               	dw	27053
   945  00FC7B  3E9E               	dw	16030
   946  00FC7D  A1CB               	dw	41419
   947  00FC7F  3EA5               	dw	16037
   948  00FC81  E704               	dw	59140
   949  00FC83  3EAC               	dw	16044
   950  00FC85  3958               	dw	14680
   951  00FC87  3EB4               	dw	16052
   952  00FC89  A5E3               	dw	42467
   953  00FC8B  3EBB               	dw	16059
   954  00FC8D  126F               	dw	4719
   955  00FC8F  3EC3               	dw	16067
   956  00FC91  9931               	dw	39217
   957  00FC93  3ECA               	dw	16074
   958  00FC95  1FF3               	dw	8179
   959  00FC97  3ED2               	dw	16082
   960  00FC99  C0EC               	dw	49388
   961  00FC9B  3ED9               	dw	16089
   962  00FC9D  54CA               	dw	21706
   963  00FC9F  3EE1               	dw	16097
   964  00FCA1  02DE               	dw	734
   965  00FCA3  3EE9               	dw	16105
   966  00FCA5  A3D7               	dw	41943
   967  00FCA7  3EF0               	dw	16112
   968  00FCA9  51EC               	dw	20972
   969  00FCAB  3EF8               	dw	16120
   970  00FCAD  0000               	dw	0
   971  00FCAF  3F00               	dw	16128
   972  00FCB1  D70A               	dw	55050
   973  00FCB3  3F03               	dw	16131
   974  00FCB5  AE14               	dw	44564
   975  00FCB7  3F07               	dw	16135
   976  00FCB9  7E91               	dw	32401
   977  00FCBB  3F0B               	dw	16139
   978  00FCBD  559B               	dw	21915
   979  00FCBF  3F0F               	dw	16143
   980  00FCC1  2618               	dw	9752
   981  00FCC3  3F13               	dw	16147
   982  00FCC5  F007               	dw	61447
   983  00FCC7  3F16               	dw	16150
   984  00FCC9  B368               	dw	45928
   985  00FCCB  3F1A               	dw	16154
   986  00FCCD  76C9               	dw	30409
   987  00FCCF  3F1E               	dw	16158
   988  00FCD1  2D0E               	dw	11534
   989  00FCD3  3F22               	dw	16162
   990  00FCD5  E354               	dw	58196
   991  00FCD7  3F25               	dw	16165
   992  00FCD9  8C7E               	dw	35966
   993  00FCDB  3F29               	dw	16169
   994  00FCDD  2F1B               	dw	12059
   995  00FCDF  3F2D               	dw	16173
   996  00FCE1  CB29               	dw	52009
   997  00FCE3  3F30               	dw	16176
   998  00FCE5  5A1D               	dw	23069
   999  00FCE7  3F34               	dw	16180
  1000  00FCE9  E282               	dw	57986
  1001  00FCEB  3F37               	dw	16183
  1002  00FCED  573F               	dw	22335
  1003  00FCEF  3F3B               	dw	16187
  1004  00FCF1  C56D               	dw	50541
  1005  00FCF3  3F3E               	dw	16190
  1006  00FCF5  1FF3               	dw	8179
  1007  00FCF7  3F42               	dw	16194
  1008  00FCF9  73EB               	dw	29675
  1009  00FCFB  3F45               	dw	16197
  1010  00FCFD  B439               	dw	46137
  1011  00FCFF  3F48               	dw	16200
  1012  00FD01  E76D               	dw	59245
  1013  00FD03  3F4B               	dw	16203
  1014  00FD05  06F7               	dw	1783
  1015  00FD07  3F4F               	dw	16207
  1016  00FD09  1965               	dw	6501
  1017  00FD0B  3F52               	dw	16210
  1018  00FD0D  182B               	dw	6187
  1019  00FD0F  3F55               	dw	16213
  1020  00FD11  0347               	dw	839
  1021  00FD13  3F58               	dw	16216
  1022  00FD15  D42C               	dw	54316
  1023  00FD17  3F5A               	dw	16218
  1024  00FD19  97F6               	dw	38902
  1025  00FD1B  3F5D               	dw	16221
  1026  00FD1D  4817               	dw	18455
  1027  00FD1F  3F60               	dw	16224
  1028  00FD21  DE01               	dw	56833
  1029  00FD23  3F62               	dw	16226
  1030  00FD25  6042               	dw	24642
  1031  00FD27  3F65               	dw	16229
  1032  00FD29  C84B               	dw	51275
  1033  00FD2B  3F67               	dw	16231
  1034  00FD2D  1CAC               	dw	7340
  1035  00FD2F  3F6A               	dw	16234
  1036  00FD31  5048               	dw	20552
  1037  00FD33  3F6C               	dw	16236
  1038  00FD35  703B               	dw	28731
  1039  00FD37  3F6E               	dw	16238
  1040  00FD39  6F69               	dw	28521
  1041  00FD3B  3F70               	dw	16240
  1042  00FD3D  5AEE               	dw	23278
  1043  00FD3F  3F72               	dw	16242
  1044  00FD41  25AF               	dw	9647
  1045  00FD43  3F74               	dw	16244
  1046  00FD45  D639               	dw	54841
  1047  00FD47  3F75               	dw	16245
  1048  00FD49  65FE               	dw	26110
  1049  00FD4B  3F77               	dw	16247
  1050  00FD4D  D4FE               	dw	54526
  1051  00FD4F  3F78               	dw	16248
  1052  00FD51  29C7               	dw	10695
  1053  00FD53  3F7A               	dw	16250
  1054  00FD55  573F               	dw	22335
  1055  00FD57  3F7B               	dw	16251
  1056  00FD59  6A7F               	dw	27263
  1057  00FD5B  3F7C               	dw	16252
  1058  00FD5D  566D               	dw	22125
  1059  00FD5F  3F7D               	dw	16253
  1060  00FD61  2824               	dw	10276
  1061  00FD63  3F7E               	dw	16254
  1062  00FD65  CBFB               	dw	52219
  1063  00FD67  3F7E               	dw	16254
  1064  00FD69  559B               	dw	21915
  1065  00FD6B  3F7F               	dw	16255
  1066  00FD6D  B15B               	dw	45403
  1067  00FD6F  3F7F               	dw	16255
  1068  00FD71  EC57               	dw	60503
  1069  00FD73  3F7F               	dw	16255
  1070  00FD75  0000               	dw	0
  1071  00FD77  3F80               	dw	16256
  1072  00FD79                     __end_of_hKel:
  1073                           	opt stack 0
  1074  00FD79                     _hKcy:
  1075                           	opt stack 0
  1076  00FD79  0000               	dw	0
  1077  00FD7B  0000               	dw	0
  1078  00FD7D  D289               	dw	53897
  1079  00FD7F  3ADE               	dw	15070
  1080  00FD81  4952               	dw	18770
  1081  00FD83  3B9D               	dw	15261
  1082  00FD85  8A72               	dw	35442
  1083  00FD87  3C0E               	dw	15374
  1084  00FD89  8BAC               	dw	35756
  1085  00FD8B  3C5B               	dw	15451
  1086  00FD8D  30BE               	dw	12478
  1087  00FD8F  3C99               	dw	15513
  1088  00FD91  B439               	dw	46137
  1089  00FD93  3CC8               	dw	15560
  1090  00FD95  5048               	dw	20552
  1091  00FD97  3CFC               	dw	15612
  1092  00FD99  999A               	dw	39322
  1093  00FD9B  3D19               	dw	15641
  1094  00FD9D  AE7D               	dw	44669
  1095  00FD9F  3D36               	dw	15670
  1096  00FDA1  FDF4               	dw	65012
  1097  00FDA3  3D54               	dw	15700
  1098  00FDA5  F0D8               	dw	61656
  1099  00FDA7  3D74               	dw	15732
  1100  00FDA9  4396               	dw	17302
  1101  00FDAB  3D8B               	dw	15755
  1102  00FDAD  779A               	dw	30618
  1103  00FDAF  3D9C               	dw	15772
  1104  00FDB1  48E9               	dw	18665
  1105  00FDB3  3DAE               	dw	15790
  1106  00FDB5  B780               	dw	46976
  1107  00FDB7  3DC0               	dw	15808
  1108  00FDB9  8EF3               	dw	36595
  1109  00FDBB  3DD3               	dw	15827
  1110  00FDBD  CF42               	dw	53058
  1111  00FDBF  3DE6               	dw	15846
  1112  00FDC1  ACDA               	dw	44250
  1113  00FDC3  3DFA               	dw	15866
  1114  00FDC5  79A7               	dw	31143
  1115  00FDC7  3E07               	dw	15879
  1116  00FDC9  D14E               	dw	53582
  1117  00FDCB  3E11               	dw	15889
  1118  00FDCD  5D64               	dw	23908
  1119  00FDCF  3E1C               	dw	15900
  1120  00FDD1  03B0               	dw	944
  1121  00FDD3  3E27               	dw	15911
  1122  00FDD5  F8A1               	dw	63649
  1123  00FDD7  3E31               	dw	15921
  1124  00FDD9  ED91               	dw	60817
  1125  00FDDB  3E3C               	dw	15932
  1126  00FDDD  3127               	dw	12583
  1127  00FDDF  3E48               	dw	15944
  1128  00FDE1  8EF3               	dw	36595
  1129  00FDE3  3E53               	dw	15955
  1130  00FDE5  06F7               	dw	1783
  1131  00FDE7  3E5F               	dw	15967
  1132  00FDE9  B368               	dw	45928
  1133  00FDEB  3E6A               	dw	15978
  1134  00FDED  7A10               	dw	31248
  1135  00FDEF  3E76               	dw	15990
  1136  00FDF1  2D77               	dw	11639
  1137  00FDF3  3E81               	dw	16001
  1138  00FDF5  2B02               	dw	11010
  1139  00FDF7  3E87               	dw	16007
  1140  00FDF9  42C4               	dw	17092
  1141  00FDFB  3E8D               	dw	16013
  1142  00FDFD  5A86               	dw	23174
  1143  00FDFF  3E93               	dw	16019
  1144  00FE01  7F63               	dw	32611
  1145  00FE03  3E99               	dw	16025
  1146  00FE05  B15B               	dw	45403
  1147  00FE07  3E9F               	dw	16031
  1148  00FE09  F06F               	dw	61551
  1149  00FE0B  3EA5               	dw	16037
  1150  00FE0D  3C9F               	dw	15519
  1151  00FE0F  3EAC               	dw	16044
  1152  00FE11  88CE               	dw	35022
  1153  00FE13  3EB2               	dw	16050
  1154  00FE15  E219               	dw	57881
  1155  00FE17  3EB8               	dw	16056
  1156  00FE19  3B64               	dw	15204
  1157  00FE1B  3EBF               	dw	16063
  1158  00FE1D  A1CB               	dw	41419
  1159  00FE1F  3EC5               	dw	16069
  1160  00FE21  154D               	dw	5453
  1161  00FE23  3ECC               	dw	16076
  1162  00FE25  88CE               	dw	35022
  1163  00FE27  3ED2               	dw	16082
  1164  00FE29  FC50               	dw	64592
  1165  00FE2B  3ED8               	dw	16088
  1166  00FE2D  6FD2               	dw	28626
  1167  00FE2F  3EDF               	dw	16095
  1168  00FE31  F06F               	dw	61551
  1169  00FE33  3EE5               	dw	16101
  1170  00FE35  710D               	dw	28941
  1171  00FE37  3EEC               	dw	16108
  1172  00FE39  F1AA               	dw	61866
  1173  00FE3B  3EF2               	dw	16114
  1174  00FE3D  7F63               	dw	32611
  1175  00FE3F  3EF9               	dw	16121
  1176  00FE41  0000               	dw	0
  1177  00FE43  3F00               	dw	16128
  1178  00FE45  404F               	dw	16463
  1179  00FE47  3F03               	dw	16131
  1180  00FE49  872B               	dw	34603
  1181  00FE4B  3F06               	dw	16134
  1182  00FE4D  C77A               	dw	51066
  1183  00FE4F  3F09               	dw	16137
  1184  00FE51  07C8               	dw	1992
  1185  00FE53  3F0D               	dw	16141
  1186  00FE55  4817               	dw	18455
  1187  00FE57  3F10               	dw	16144
  1188  00FE59  81D8               	dw	33240
  1189  00FE5B  3F13               	dw	16147
  1190  00FE5D  BB99               	dw	48025
  1191  00FE5F  3F16               	dw	16150
  1192  00FE61  F55A               	dw	62810
  1193  00FE63  3F19               	dw	16153
  1194  00FE65  2F1B               	dw	12059
  1195  00FE67  3F1D               	dw	16157
  1196  00FE69  624E               	dw	25166
  1197  00FE6B  3F20               	dw	16160
  1198  00FE6D  8EF3               	dw	36595
  1199  00FE6F  3F23               	dw	16163
  1200  00FE71  BB99               	dw	48025
  1201  00FE73  3F26               	dw	16166
  1202  00FE75  E1B1               	dw	57777
  1203  00FE77  3F29               	dw	16169
  1204  00FE79  07C8               	dw	1992
  1205  00FE7B  3F2D               	dw	16173
  1206  00FE7D  2752               	dw	10066
  1207  00FE7F  3F30               	dw	16176
  1208  00FE81  404F               	dw	16463
  1209  00FE83  3F33               	dw	16179
  1210  00FE85  52BD               	dw	21181
  1211  00FE87  3F36               	dw	16182
  1212  00FE89  5E9E               	dw	24222
  1213  00FE8B  3F39               	dw	16185
  1214  00FE8D  6A7F               	dw	27263
  1215  00FE8F  3F3C               	dw	16188
  1216  00FE91  6944               	dw	26948
  1217  00FE93  3F3F               	dw	16191
  1218  00FE95  617C               	dw	24956
  1219  00FE97  3F42               	dw	16194
  1220  00FE99  5326               	dw	21286
  1221  00FE9B  3F45               	dw	16197
  1222  00FE9D  3E42               	dw	15938
  1223  00FE9F  3F48               	dw	16200
  1224  00FEA1  1C43               	dw	7235
  1225  00FEA3  3F4B               	dw	16203
  1226  00FEA5  F3B6               	dw	62390
  1227  00FEA7  3F4D               	dw	16205
  1228  00FEA9  C49C               	dw	50332
  1229  00FEAB  3F50               	dw	16208
  1230  00FEAD  81D8               	dw	33240
  1231  00FEAF  3F53               	dw	16211
  1232  00FEB1  3F14               	dw	16148
  1233  00FEB3  3F56               	dw	16214
  1234  00FEB5  E8A7               	dw	59559
  1235  00FEB7  3F58               	dw	16216
  1236  00FEB9  8BAC               	dw	35756
  1237  00FEBB  3F5B               	dw	16219
  1238  00FEBD  2196               	dw	8598
  1239  00FEBF  3F5E               	dw	16222
  1240  00FEC1  AA65               	dw	43621
  1241  00FEC3  3F60               	dw	16224
  1242  00FEC5  2618               	dw	9752
  1243  00FEC7  3F63               	dw	16227
  1244  00FEC9  8E22               	dw	36386
  1245  00FECB  3F65               	dw	16229
  1246  00FECD  E910               	dw	59664
  1247  00FECF  3F67               	dw	16231
  1248  00FED1  36E3               	dw	14051
  1249  00FED3  3F6A               	dw	16234
  1250  00FED5  710D               	dw	28941
  1251  00FED7  3F6C               	dw	16236
  1252  00FED9  978D               	dw	38797
  1253  00FEDB  3F6E               	dw	16238
  1254  00FEDD  B0F2               	dw	45298
  1255  00FEDF  3F70               	dw	16240
  1256  00FEE1  B021               	dw	45089
  1257  00FEE3  3F72               	dw	16242
  1258  00FEE5  9518               	dw	38168
  1259  00FEE7  3F74               	dw	16244
  1260  00FEE9  6666               	dw	26214
  1261  00FEEB  3F76               	dw	16246
  1262  00FEED  1D7E               	dw	7550
  1263  00FEEF  3F78               	dw	16248
  1264  00FEF1  BA5E               	dw	47710
  1265  00FEF3  3F79               	dw	16249
  1266  00FEF5  367A               	dw	13946
  1267  00FEF7  3F7B               	dw	16251
  1268  00FEF9  91D1               	dw	37329
  1269  00FEFB  3F7C               	dw	16252
  1270  00FEFD  C5D6               	dw	50646
  1271  00FEFF  3F7D               	dw	16253
  1272  00FF01  C56D               	dw	50541
  1273  00FF03  3F7E               	dw	16254
  1274  00FF05  9097               	dw	37015
  1275  00FF07  3F7F               	dw	16255
  1276  00FF09  0000               	dw	0
  1277  00FF0B  3F80               	dw	16256
  1278  00FF0D                     __end_of_hKcy:
  1279                           	opt stack 0
  1280  00FF0D                     _defultSystemData:
  1281                           	opt stack 0
  1282  00FF0D  0000               	dw	0
  1283  00FF0F  0000               	dw	0
  1284  00FF11  00                 	db	0
  1285  00FF12  5F                 	db	95
  1286  00FF13  03E8               	dw	1000
  1287  00FF15  2710               	dw	10000
  1288  00FF17  0000               	dw	0
  1289  00FF19  1388               	dw	5000
  1290  00FF1B  0000               	dw	0
  1291  00FF1D  0000               	dw	0
  1292  00FF1F  0000               	dw	0
  1293  00FF21  0000               	dw	0
  1294  00FF23  0000               	dw	0
  1295  00FF25  FF38               	dw	65336
  1296  00FF27  FFFF               	dw	65535
  1297  00FF29  0000               	dw	0
  1298  00FF2B  0000               	dw	0
  1299  00FF2D  00                 	db	0
  1300  00FF2E  00                 	db	0
  1301  00FF2F  00                 	db	0
  1302  00FF30  00                 	db	0
  1303  00FF31  00                 	db	0
  1304  00FF32  00                 	db	0
  1305  00FF33  00                 	db	0
  1306  00FF34  00                 	db	0
  1307  00FF35  00                 	db	0
  1308  00FF36  00                 	db	0
  1309  00FF37  00                 	db	0
  1310  00FF38  00                 	db	0
  1311  00FF39  00                 	db	0
  1312  00FF3A  00                 	db	0
  1313  00FF3B  00                 	db	0
  1314  00FF3C  00                 	db	0
  1315  00FF3D  00                 	db	0
  1316  00FF3E  00                 	db	0
  1317  00FF3F  00                 	db	0
  1318  00FF40  00                 	db	0
  1319  00FF41  00                 	db	0
  1320  00FF42  00                 	db	0
  1321  00FF43  00                 	db	0
  1322  00FF44  00                 	db	0
  1323  00FF45  00                 	db	0
  1324  00FF46  00                 	db	0
  1325  00FF47  00                 	db	0
  1326  00FF48  00                 	db	0
  1327  00FF49  00                 	db	0
  1328  00FF4A  00                 	db	0
  1329  00FF4B  00                 	db	0
  1330  00FF4C  00                 	db	0
  1331  00FF4D  00                 	db	0
  1332  00FF4E  00                 	db	0
  1333  00FF4F  00                 	db	0
  1334  00FF50  00                 	db	0
  1335  00FF51  00                 	db	0
  1336  00FF52  00                 	db	0
  1337  00FF53  00                 	db	0
  1338  00FF54  00                 	db	0
  1339  00FF55  00                 	db	0
  1340  00FF56  00                 	db	0
  1341  00FF57  00                 	db	0
  1342  00FF58  00                 	db	0
  1343  00FF59  0000               	dw	0
  1344  00FF5B  0000               	dw	0
  1345  00FF5D  00                 	db	0
  1346  00FF5E  00                 	db	0
  1347  00FF5F  00                 	db	0
  1348  00FF60  00                 	db	0
  1349  00FF61  00                 	db	0
  1350  00FF62  00                 	db	0
  1351  00FF63  00                 	db	0
  1352  00FF64  00                 	db	0
  1353  00FF65  28                 	db	40
  1354  00FF66  1E                 	db	30
  1355  00FF67  14                 	db	20
  1356  00FF68  0A                 	db	10
  1357  00FF69  03E8               	dw	1000
  1358  00FF6B  0000               	dw	0
  1359  00FF6D  03E8               	dw	1000
  1360  00FF6F  0000               	dw	0
  1361  00FF71  0000               	dw	0
  1362  00FF73  0000               	dw	0
  1363  00FF75  00                 	db	0
  1364  00FF76  00                 	db	0
  1365  00FF77  00                 	db	0
  1366  00FF78  00                 	db	0
  1367  00FF79  03E8               	dw	1000
  1368  00FF7B  0000               	dw	0
  1369  00FF7D  03E8               	dw	1000
  1370  00FF7F  0000               	dw	0
  1371  00FF81  0000               	dw	0
  1372  00FF83  0000               	dw	0
  1373  00FF85  00                 	db	0
  1374  00FF86  00                 	db	0
  1375  00FF87  00                 	db	0
  1376  00FF88  00                 	db	0
  1377  00FF89  03E8               	dw	1000
  1378  00FF8B  0000               	dw	0
  1379  00FF8D  03E8               	dw	1000
  1380  00FF8F  0000               	dw	0
  1381  00FF91  0000               	dw	0
  1382  00FF93  0000               	dw	0
  1383  00FF95  03E8               	dw	1000
  1384  00FF97  0000               	dw	0
  1385  00FF99  0000               	dw	0
  1386  00FF9B  0000               	dw	0
  1387  00FF9D  03E8               	dw	1000
  1388  00FF9F  0000               	dw	0
  1389  00FFA1  0000               	dw	0
  1390  00FFA3                     __end_of_defultSystemData:
  1391                           	opt stack 0
  1392  00FFA3                     _flashTestbuf:
  1393                           	opt stack 0
  1394  00FFA3  30                 	db	48
  1395  00FFA4  31                 	db	49
  1396  00FFA5  32                 	db	50
  1397  00FFA6  33                 	db	51
  1398  00FFA7  34                 	db	52
  1399  00FFA8  35                 	db	53
  1400  00FFA9  36                 	db	54
  1401  00FFAA  37                 	db	55
  1402  00FFAB  38                 	db	56
  1403  00FFAC  39                 	db	57
  1404  00FFAD  30                 	db	48
  1405  00FFAE  31                 	db	49
  1406  00FFAF  32                 	db	50
  1407  00FFB0  33                 	db	51
  1408  00FFB1  34                 	db	52
  1409  00FFB2  35                 	db	53
  1410  00FFB3  36                 	db	54
  1411  00FFB4  37                 	db	55
  1412  00FFB5  38                 	db	56
  1413  00FFB6  39                 	db	57
  1414  00FFB7  30                 	db	48
  1415  00FFB8  31                 	db	49
  1416  00FFB9  32                 	db	50
  1417  00FFBA  33                 	db	51
  1418  00FFBB  34                 	db	52
  1419  00FFBC  35                 	db	53
  1420  00FFBD  36                 	db	54
  1421  00FFBE  37                 	db	55
  1422  00FFBF  38                 	db	56
  1423  00FFC0  39                 	db	57
  1424  00FFC1  30                 	db	48
  1425  00FFC2  31                 	db	49
  1426  00FFC3  32                 	db	50
  1427  00FFC4  33                 	db	51
  1428  00FFC5  34                 	db	52
  1429  00FFC6  35                 	db	53
  1430  00FFC7  36                 	db	54
  1431  00FFC8  37                 	db	55
  1432  00FFC9  38                 	db	56
  1433  00FFCA  39                 	db	57
  1434  00FFCB  30                 	db	48
  1435  00FFCC  31                 	db	49
  1436  00FFCD  32                 	db	50
  1437  00FFCE  33                 	db	51
  1438  00FFCF  34                 	db	52
  1439  00FFD0  35                 	db	53
  1440  00FFD1  36                 	db	54
  1441  00FFD2  37                 	db	55
  1442  00FFD3  38                 	db	56
  1443  00FFD4  39                 	db	57
  1444  00FFD5  30                 	db	48
  1445  00FFD6  31                 	db	49
  1446  00FFD7  32                 	db	50
  1447  00FFD8  33                 	db	51
  1448  00FFD9  34                 	db	52
  1449  00FFDA  35                 	db	53
  1450  00FFDB  36                 	db	54
  1451  00FFDC  37                 	db	55
  1452  00FFDD  38                 	db	56
  1453  00FFDE  39                 	db	57
  1454  00FFDF  30                 	db	48
  1455  00FFE0  31                 	db	49
  1456  00FFE1  32                 	db	50
  1457  00FFE2  33                 	db	51
  1458  00FFE3  00                 	db	0
  1459  00FFE4                     __end_of_flashTestbuf:
  1460                           	opt stack 0
  1461  0000                     _RTCVALH	set	3933
  1462  0000                     _RTCVALL	set	3932
  1463  0000                     _stRTCCFGbits	set	3935
  1464  0000                     _ALRMCFGbits	set	3931
  1465  0000                     _ALRMRPT	set	3930
  1466  0000                     _PADCFG1bits	set	3924
  1467  0000                     _RTCCFGbits	set	3935
  1468  0000                     _PR2	set	4043
  1469  0000                     _T2CON	set	4042
  1470  0000                     _RCONbits	set	4048
  1471  0000                     _T1CONbits	set	4045
  1472  0000                     _IPR3bits	set	4005
  1473  0000                     _PIR3bits	set	4004
  1474  0000                     _PIE3bits	set	4003
  1475  0000                     _INTCON2bits	set	4081
  1476  0000                     _OSCCONbits	set	4051
  1477  0000                     _FSR0H	set	4074
  1478  0000                     _FSR0L	set	4073
  1479  0000                     _TABLAT	set	4085
  1480  0000                     _TBLPTRU	set	4088
  1481  0000                     _TBLPTRH	set	4087
  1482  0000                     _TBLPTRL	set	4086
  1483  0000                     _EECON1bits	set	4006
  1484  0000                     _INTCONbits	set	4082
  1485  0000                     _INTCON	set	4082
  1486  0000                     _LCDCON	set	4008
  1487  0000                     _TRISG	set	3992
  1488  0000                     _LCDSE5	set	4026
  1489  0000                     _LCDSE4	set	4025
  1490  0000                     _LCDSE3	set	4024
  1491  0000                     _LCDSE2	set	4023
  1492  0000                     _LCDSE1	set	4022
  1493  0000                     _LCDSE0	set	4009
  1494  0000                     _LCDPSbits	set	4010
  1495  0000                     _LCDREG	set	4050
  1496  0000                     _LCDDATA23	set	3965
  1497  0000                     _LCDDATA22	set	3964
  1498  0000                     _LCDDATA21	set	3963
  1499  0000                     _LCDDATA20	set	3962
  1500  0000                     _LCDDATA19	set	3961
  1501  0000                     _LCDDATA18	set	3960
  1502  0000                     _LCDDATA17	set	3959
  1503  0000                     _LCDDATA16	set	3958
  1504  0000                     _LCDDATA15	set	3957
  1505  0000                     _LCDDATA14	set	3956
  1506  0000                     _LCDDATA13	set	3955
  1507  0000                     _LCDDATA12	set	3954
  1508  0000                     _LCDDATA11	set	3953
  1509  0000                     _LCDDATA10	set	3952
  1510  0000                     _LCDDATA9	set	3951
  1511  0000                     _LCDDATA8	set	3950
  1512  0000                     _LCDDATA7	set	3949
  1513  0000                     _LCDDATA6	set	3948
  1514  0000                     _LCDDATA5	set	3947
  1515  0000                     _LCDDATA4	set	4031
  1516  0000                     _LCDDATA3	set	4030
  1517  0000                     _LCDDATA2	set	4029
  1518  0000                     _LCDDATA1	set	4028
  1519  0000                     _LCDDATA0	set	4027
  1520  0000                     _PORTB	set	3969
  1521  0000                     _ADRESL	set	4035
  1522  0000                     _ADRESH	set	4036
  1523  0000                     _IPR1bits	set	3999
  1524  0000                     _PIE1bits	set	3997
  1525  0000                     _PIR1bits	set	3998
  1526  0000                     _ADCON0bits	set	4034
  1527  0000                     _ADCON2bits	set	4032
  1528  0000                     _ADCON1	set	4033
  1529  0000                     _PORTC	set	3970
  1530  0000                     _LATC	set	3979
  1531  0000                     _TRISC	set	3988
  1532  0000                     _LATB	set	3978
  1533  0000                     _TRISB	set	3987
  1534  00FFE4                     STR_2:
  1535  00FFE4  20                 	db	32
  1536  00FFE5  20                 	db	32
  1537  00FFE6  20                 	db	32
  1538  00FFE7  20                 	db	32
  1539  00FFE8  20                 	db	32
  1540  00FFE9  20                 	db	32
  1541  00FFEA  20                 	db	32
  1542  00FFEB  20                 	db	32
  1543  00FFEC  00                 	db	0
  1544  00FFED                     STR_1:
  1545  00FFED  63                 	db	99	;'c'
  1546  00FFEE  73                 	db	115	;'s'
  1547  00FFEF  36                 	db	54	;'6'
  1548  00FFF0  36                 	db	54	;'6'
  1549  00FFF1  00                 	db	0
  1550  00FFF2                     STR_3:
  1551  00FFF2  20                 	db	32
  1552  00FFF3  70                 	db	112	;'p'
  1553  00FFF4  73                 	db	115	;'s'
  1554  00FFF5  64                 	db	100	;'d'
  1555  00FFF6  00                 	db	0
  1556                           
  1557                           ; #config settings
  1558  00FFF7  00                 	db	0	; dummy byte at the end
  1559  0000                     
  1560                           	psect	cinit
  1561  005D86                     __pcinit:
  1562                           	opt stack 0
  1563  005D86                     start_initialization:
  1564                           	opt stack 0
  1565  005D86                     __initialization:
  1566                           	opt stack 0
  1567                           
  1568                           ; Initialize objects allocated to BANK1 (13 bytes)
  1569                           ; load TBLPTR registers with __pidataBANK1
  1570  005D86  0E22               	movlw	low __pidataBANK1
  1571  005D88  6EF6               	movwf	tblptrl,c
  1572  005D8A  0E79               	movlw	high __pidataBANK1
  1573  005D8C  6EF7               	movwf	tblptrh,c
  1574  005D8E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1575  005D90  6EF8               	movwf	tblptru,c
  1576  005D92  EE01  F0F2         	lfsr	0,__pdataBANK1
  1577  005D96  EE10 F00D          	lfsr	1,13
  1578  005D9A                     copy_data0:
  1579  005D9A  0009               	tblrd		*+
  1580  005D9C  CFF5 FFEE          	movff	tablat,postinc0
  1581  005DA0  50E5               	movf	postdec1,w,c
  1582  005DA2  50E1               	movf	fsr1l,w,c
  1583  005DA4  E1FA               	bnz	copy_data0
  1584                           
  1585                           ; Initialize objects allocated to COMRAM (4 bytes)
  1586                           ; load TBLPTR registers with __pidataCOMRAM
  1587  005DA6  0E48               	movlw	low __pidataCOMRAM
  1588  005DA8  6EF6               	movwf	tblptrl,c
  1589  005DAA  0E79               	movlw	high __pidataCOMRAM
  1590  005DAC  6EF7               	movwf	tblptrh,c
  1591  005DAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1592  005DB0  6EF8               	movwf	tblptru,c
  1593  005DB2  EE00  F03C         	lfsr	0,__pdataCOMRAM
  1594  005DB6  EE10 F004          	lfsr	1,4
  1595  005DBA                     copy_data1:
  1596  005DBA  0009               	tblrd		*+
  1597  005DBC  CFF5 FFEE          	movff	tablat,postinc0
  1598  005DC0  50E5               	movf	postdec1,w,c
  1599  005DC2  50E1               	movf	fsr1l,w,c
  1600  005DC4  E1FA               	bnz	copy_data1
  1601                           
  1602                           ; Clear objects allocated to BANK5 (256 bytes)
  1603  005DC6  EE05  F000         	lfsr	0,__pbssBANK5
  1604  005DCA  EE11 F000          	lfsr	1,256
  1605  005DCE                     clear_0:
  1606  005DCE  6AEE               	clrf	postinc0,c
  1607  005DD0  50E5               	movf	postdec1,w,c
  1608  005DD2  50E1               	movf	fsr1l,w,c
  1609  005DD4  E1FC               	bnz	clear_0
  1610  005DD6  50E2               	movf	fsr1h,w,c
  1611  005DD8  E1FA               	bnz	clear_0
  1612                           
  1613                           ; Clear objects allocated to BANK4 (256 bytes)
  1614  005DDA  EE04  F000         	lfsr	0,__pbssBANK4
  1615  005DDE  EE11 F000          	lfsr	1,256
  1616  005DE2                     clear_1:
  1617  005DE2  6AEE               	clrf	postinc0,c
  1618  005DE4  50E5               	movf	postdec1,w,c
  1619  005DE6  50E1               	movf	fsr1l,w,c
  1620  005DE8  E1FC               	bnz	clear_1
  1621  005DEA  50E2               	movf	fsr1h,w,c
  1622  005DEC  E1FA               	bnz	clear_1
  1623                           
  1624                           ; Clear objects allocated to BANK3 (162 bytes)
  1625  005DEE  EE03  F000         	lfsr	0,__pbssBANK3
  1626  005DF2  0EA2               	movlw	162
  1627  005DF4                     clear_2:
  1628  005DF4  6AEE               	clrf	postinc0,c
  1629  005DF6  06E8               	decf	wreg,f,c
  1630  005DF8  E1FD               	bnz	clear_2
  1631                           
  1632                           ; Clear objects allocated to BANK2 (178 bytes)
  1633  005DFA  EE02  F000         	lfsr	0,__pbssBANK2
  1634  005DFE  0EB2               	movlw	178
  1635  005E00                     clear_3:
  1636  005E00  6AEE               	clrf	postinc0,c
  1637  005E02  06E8               	decf	wreg,f,c
  1638  005E04  E1FD               	bnz	clear_3
  1639                           
  1640                           ; Clear objects allocated to BANK1 (242 bytes)
  1641  005E06  EE01  F000         	lfsr	0,__pbssBANK1
  1642  005E0A  0EF2               	movlw	242
  1643  005E0C                     clear_4:
  1644  005E0C  6AEE               	clrf	postinc0,c
  1645  005E0E  06E8               	decf	wreg,f,c
  1646  005E10  E1FD               	bnz	clear_4
  1647                           
  1648                           ; Clear objects allocated to BANK0 (2 bytes)
  1649  005E12  0100               	movlb	0
  1650  005E14  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  1651  005E16  6BFE               	clrf	__pbssBANK0& (0+255),b
  1652                           
  1653                           ; Clear objects allocated to COMRAM (27 bytes)
  1654  005E18  EE00  F021         	lfsr	0,__pbssCOMRAM
  1655  005E1C  0E1B               	movlw	27
  1656  005E1E                     clear_5:
  1657  005E1E  6AEE               	clrf	postinc0,c
  1658  005E20  06E8               	decf	wreg,f,c
  1659  005E22  E1FD               	bnz	clear_5
  1660  005E24                     end_of_initialization:
  1661                           	opt stack 0
  1662  005E24                     __end_of__initialization:
  1663                           	opt stack 0
  1664  005E24  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1665  005E26  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1666  005E28  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1667  005E2A  6EF8               	movwf	tblptru,c
  1668  005E2C  0100               	movlb	0
  1669  005E2E  EF5C  F039         	goto	_main	;jump to C main() function
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1h	equ	0xFE2
  1678                           fsr1l	equ	0xFE1
  1679                           
  1680                           	psect	bssCOMRAM
  1681  000021                     __pbssCOMRAM:
  1682                           	opt stack 0
  1683  000021                     _pAds1115PrObj:
  1684                           	opt stack 0
  1685  000021                     	ds	2
  1686  000023                     _pAds1115DiffPrObj:
  1687                           	opt stack 0
  1688  000023                     	ds	2
  1689  000025                     _userTicker_ms:
  1690                           	opt stack 0
  1691  000025                     	ds	2
  1692  000027                     _adc_exPt100:
  1693                           	opt stack 0
  1694  000027                     	ds	2
  1695  000029                     _p_prEepromObj:
  1696                           	opt stack 0
  1697  000029                     	ds	2
  1698  00002B                     _pdiff_prEepromObj:
  1699                           	opt stack 0
  1700  00002B                     	ds	2
  1701  00002D                     _dlyTickerEn:
  1702                           	opt stack 0
  1703  00002D                     	ds	1
  1704  00002E                     _pcf8574Value:
  1705                           	opt stack 0
  1706  00002E                     	ds	1
  1707  00002F                     _glbEvent:
  1708                           	opt stack 0
  1709  00002F                     	ds	1
  1710  000030                     _inSocSampleTimer:
  1711                           	opt stack 0
  1712  000030                     	ds	1
  1713  000031                     _commonSampleTimer:
  1714                           	opt stack 0
  1715  000031                     	ds	1
  1716  000032                     _slowSampleTimer:
  1717                           	opt stack 0
  1718  000032                     	ds	1
  1719  000033                     _in_pt100SampleUpdate:
  1720                           	opt stack 0
  1721  000033                     	ds	1
  1722  000034                     _diffPrSampleUpdate:
  1723                           	opt stack 0
  1724  000034                     	ds	1
  1725  000035                     _diffSampCh:
  1726                           	opt stack 0
  1727  000035                     	ds	1
  1728  000036                     _diffSampCount_D23:
  1729                           	opt stack 0
  1730  000036                     	ds	1
  1731  000037                     _diffSampCount_D01:
  1732                           	opt stack 0
  1733  000037                     	ds	1
  1734  000038                     _menu:
  1735                           	opt stack 0
  1736  000038                     	ds	1
  1737  000039                     _passWord:
  1738                           	opt stack 0
  1739  000039                     	ds	2
  1740  00003B                     _adjLocation:
  1741                           	opt stack 0
  1742  00003B                     	ds	1
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           
  1753                           	psect	dataCOMRAM
  1754  00003C                     __pdataCOMRAM:
  1755                           	opt stack 0
  1756  00003C                     _fpSysData:
  1757                           	opt stack 0
  1758  00003C                     	ds	3
  1759  00003F                     _glNoEventTimeOut:
  1760                           	opt stack 0
  1761  00003F                     	ds	1
  1762                           tblptru	equ	0xFF8
  1763                           tblptrh	equ	0xFF7
  1764                           tblptrl	equ	0xFF6
  1765                           tablat	equ	0xFF5
  1766                           postinc0	equ	0xFEE
  1767                           wreg	equ	0xFE8
  1768                           postdec1	equ	0xFE5
  1769                           fsr1h	equ	0xFE2
  1770                           fsr1l	equ	0xFE1
  1771                           
  1772                           	psect	bssBANK0
  1773  0000FE                     __pbssBANK0:
  1774                           	opt stack 0
  1775  0000FE                     _keyValue:
  1776                           	opt stack 0
  1777  0000FE                     	ds	1
  1778  0000FF                     _dwm:
  1779                           	opt stack 0
  1780  0000FF                     	ds	1
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           postdec1	equ	0xFE5
  1788                           fsr1h	equ	0xFE2
  1789                           fsr1l	equ	0xFE1
  1790                           
  1791                           	psect	bssBANK1
  1792  000100                     __pbssBANK1:
  1793                           	opt stack 0
  1794  000100                     _pLCD:
  1795                           	opt stack 0
  1796  000100                     	ds	24
  1797  000118                     _pcf8574:
  1798                           	opt stack 0
  1799  000118                     	ds	11
  1800  000123                     cal_press@F7765:
  1801                           	opt stack 0
  1802  000123                     	ds	8
  1803  00012B                     _rtExPressure:
  1804                           	opt stack 0
  1805  00012B                     	ds	8
  1806  000133                     _glRtc:
  1807                           	opt stack 0
  1808  000133                     	ds	7
  1809  00013A                     _glTicker:
  1810                           	opt stack 0
  1811  00013A                     	ds	4
  1812  00013E                     ___mflot32_2_int32@F7625:
  1813                           	opt stack 0
  1814  00013E                     	ds	4
  1815  000142                     ___int32_2_mflot32@F7620:
  1816                           	opt stack 0
  1817  000142                     	ds	4
  1818  000146                     _adjValue:
  1819                           	opt stack 0
  1820  000146                     	ds	4
  1821  00014A                     _x_Pemperature:
  1822                           	opt stack 0
  1823  00014A                     	ds	4
  1824  00014E                     _rtExTemperatureIn:
  1825                           	opt stack 0
  1826  00014E                     	ds	4
  1827  000152                     _rtPressure:
  1828                           	opt stack 0
  1829  000152                     	ds	4
  1830  000156                     _rtTemperatureIn:
  1831                           	opt stack 0
  1832  000156                     	ds	4
  1833  00015A                     _rtVolume:
  1834                           	opt stack 0
  1835  00015A                     	ds	4
  1836  00015E                     _rtWeight:
  1837                           	opt stack 0
  1838  00015E                     	ds	4
  1839  000162                     _rtHight:
  1840                           	opt stack 0
  1841  000162                     	ds	4
  1842  000166                     _rtDiffPressure:
  1843                           	opt stack 0
  1844  000166                     	ds	4
  1845  00016A                     _adc_iPrEx:
  1846                           	opt stack 0
  1847  00016A                     	ds	4
  1848  00016E                     _dlyTicker:
  1849                           	opt stack 0
  1850  00016E                     	ds	2
  1851  000170                     _fastSampTimer:
  1852                           	opt stack 0
  1853  000170                     	ds	2
  1854  000172                     _sampBufRefInSoc:
  1855                           	opt stack 0
  1856  000172                     	ds	2
  1857  000174                     _sampBufBatInSoc:
  1858                           	opt stack 0
  1859  000174                     	ds	2
  1860  000176                     _sampBufExPr1InSoc:
  1861                           	opt stack 0
  1862  000176                     	ds	2
  1863  000178                     _sampBufExPr0InSoc:
  1864                           	opt stack 0
  1865  000178                     	ds	2
  1866  00017A                     _sampBufDiffPr_S1:
  1867                           	opt stack 0
  1868  00017A                     	ds	2
  1869  00017C                     _pAdjValue:
  1870                           	opt stack 0
  1871  00017C                     	ds	2
  1872  00017E                     _adc_iRef:
  1873                           	opt stack 0
  1874  00017E                     	ds	2
  1875  000180                     _adc_ibat:
  1876                           	opt stack 0
  1877  000180                     	ds	2
  1878  000182                     _adc_pressure:
  1879                           	opt stack 0
  1880  000182                     	ds	2
  1881  000184                     _adc_inPt100:
  1882                           	opt stack 0
  1883  000184                     	ds	2
  1884  000186                     _st_Bj:
  1885                           	opt stack 0
  1886  000186                     	ds	1
  1887  000187                     _inSocAdcSampleUpdate:
  1888                           	opt stack 0
  1889  000187                     	ds	1
  1890  000188                     _prSampleUpdate:
  1891                           	opt stack 0
  1892  000188                     	ds	1
  1893  000189                     _ex_pt100SampleUpdate:
  1894                           	opt stack 0
  1895  000189                     	ds	1
  1896  00018A                     _calibCol:
  1897                           	opt stack 0
  1898  00018A                     	ds	1
  1899  00018B                     _calibRow:
  1900                           	opt stack 0
  1901  00018B                     	ds	1
  1902  00018C                     _ads1115Chip0:
  1903                           	opt stack 0
  1904  00018C                     	ds	16
  1905  00019C                     _sampBufDiffPr_D23:
  1906                           	opt stack 0
  1907  00019C                     	ds	16
  1908  0001AC                     _sampBufDiffPr_D01:
  1909                           	opt stack 0
  1910  0001AC                     	ds	16
  1911  0001BC                     _at24c02Ch0:
  1912                           	opt stack 0
  1913  0001BC                     	ds	11
  1914  0001C7                     _at24c02Ch1:
  1915                           	opt stack 0
  1916  0001C7                     	ds	11
  1917  0001D2                     _sampBufPr:
  1918                           	opt stack 0
  1919  0001D2                     	ds	8
  1920  0001DA                     _sampBufPt100ExB:
  1921                           	opt stack 0
  1922  0001DA                     	ds	8
  1923  0001E2                     _sampBufPt100ExA:
  1924                           	opt stack 0
  1925  0001E2                     	ds	8
  1926  0001EA                     _x_prDiffData:
  1927                           	opt stack 0
  1928  0001EA                     	ds	8
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1h	equ	0xFE2
  1937                           fsr1l	equ	0xFE1
  1938                           
  1939                           	psect	dataBANK1
  1940  0001F2                     __pdataBANK1:
  1941                           	opt stack 0
  1942  0001F2                     ui_disp_start_cs600@F7634:
  1943                           	opt stack 0
  1944  0001F2                     	ds	6
  1945  0001F8                     _defalutRtc:
  1946                           	opt stack 0
  1947  0001F8                     	ds	7
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           postdec1	equ	0xFE5
  1955                           fsr1h	equ	0xFE2
  1956                           fsr1l	equ	0xFE1
  1957                           
  1958                           	psect	bssBANK2
  1959  000200                     __pbssBANK2:
  1960                           	opt stack 0
  1961  000200                     _diff_prCalibTabDef:
  1962                           	opt stack 0
  1963  000200                     	ds	162
  1964  0002A2                     _ads1115Chip1:
  1965                           	opt stack 0
  1966  0002A2                     	ds	16
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           fsr1h	equ	0xFE2
  1975                           fsr1l	equ	0xFE1
  1976                           
  1977                           	psect	bssBANK3
  1978  000300                     __pbssBANK3:
  1979                           	opt stack 0
  1980  000300                     _prCalibTabDef:
  1981                           	opt stack 0
  1982  000300                     	ds	162
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1h	equ	0xFE2
  1991                           fsr1l	equ	0xFE1
  1992                           
  1993                           	psect	bssBANK4
  1994  000400                     __pbssBANK4:
  1995                           	opt stack 0
  1996  000400                     _globleBuffer0:
  1997                           	opt stack 0
  1998  000400                     	ds	256
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           postinc0	equ	0xFEE
  2004                           wreg	equ	0xFE8
  2005                           postdec1	equ	0xFE5
  2006                           fsr1h	equ	0xFE2
  2007                           fsr1l	equ	0xFE1
  2008                           
  2009                           	psect	bssBANK5
  2010  000500                     __pbssBANK5:
  2011                           	opt stack 0
  2012  000500                     _globleBuffer1:
  2013                           	opt stack 0
  2014  000500                     	ds	256
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           postinc0	equ	0xFEE
  2020                           wreg	equ	0xFE8
  2021                           postdec1	equ	0xFE5
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           
  2025                           	psect	cstackBANK2
  2026  0002B2                     __pcstackBANK2:
  2027                           	opt stack 0
  2028  0002B2                     cal_diff_press@tabrow:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x0
  2032  0002B2                     	ds	2
  2033  0002B4                     cal_diff_press@tmpx:
  2034                           	opt stack 0
  2035                           
  2036                           ; 24 bytes @ 0x2
  2037  0002B4                     	ds	24
  2038  0002CC                     cal_diff_press@xin:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x1A
  2042  0002CC                     	ds	2
  2043  0002CE                     cal_diff_press@i:
  2044                           	opt stack 0
  2045                           
  2046                           ; 1 bytes @ 0x1C
  2047  0002CE                     	ds	1
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           postdec1	equ	0xFE5
  2055                           fsr1h	equ	0xFE2
  2056                           fsr1l	equ	0xFE1
  2057                           
  2058                           	psect	cstackBANK1
  2059  0001FF                     __pcstackBANK1:
  2060                           	opt stack 0
  2061  0001FF                     event_process_rtc@ret:
  2062                           	opt stack 0
  2063                           
  2064                           ; 1 bytes @ 0x0
  2065  0001FF                     	ds	1
  2066                           tblptru	equ	0xFF8
  2067                           tblptrh	equ	0xFF7
  2068                           tblptrl	equ	0xFF6
  2069                           tablat	equ	0xFF5
  2070                           postinc0	equ	0xFEE
  2071                           wreg	equ	0xFE8
  2072                           postdec1	equ	0xFE5
  2073                           fsr1h	equ	0xFE2
  2074                           fsr1l	equ	0xFE1
  2075                           
  2076                           	psect	cstackBANK0
  2077  000060                     __pcstackBANK0:
  2078                           	opt stack 0
  2079  000060                     ??___enter_menu_set_density:
  2080  000060                     ?___exp_10:
  2081                           	opt stack 0
  2082  000060                     ?_crc_sum:
  2083                           	opt stack 0
  2084  000060                     ?___awdiv:
  2085                           	opt stack 0
  2086  000060                     ?___awmod:
  2087                           	opt stack 0
  2088  000060                     ?___aldiv:
  2089                           	opt stack 0
  2090  000060                     ?___lldiv:
  2091                           	opt stack 0
  2092  000060                     ?___xxtofl:
  2093                           	opt stack 0
  2094  000060                     iic_send_byte@x:
  2095                           	opt stack 0
  2096  000060                     iic_received_byte@ret:
  2097                           	opt stack 0
  2098  000060                     lcd_disp_get_code@chr:
  2099                           	opt stack 0
  2100  000060                     lcd_disp_all@x:
  2101                           	opt stack 0
  2102  000060                     key_shift_loc_fixed_point@loc:
  2103                           	opt stack 0
  2104  000060                     ___enter_menu_set_pose@fps:
  2105                           	opt stack 0
  2106  000060                     ___x_arrange_str@str:
  2107                           	opt stack 0
  2108  000060                     crc_sum@puchMsg:
  2109                           	opt stack 0
  2110  000060                     m_mem_cpy_len@d:
  2111                           	opt stack 0
  2112  000060                     m_mem_cpy@d:
  2113                           	opt stack 0
  2114  000060                     m_int8_2_hex@str:
  2115                           	opt stack 0
  2116  000060                     ads1115_init@pAds1115:
  2117                           	opt stack 0
  2118  000060                     ads1115_set_mux@pAds1115:
  2119                           	opt stack 0
  2120  000060                     at24c02_init@pAt24c02:
  2121                           	opt stack 0
  2122  000060                     delay_us@dly:
  2123                           	opt stack 0
  2124  000060                     rtc_set@rtc:
  2125                           	opt stack 0
  2126  000060                     ticker_dly@ms:
  2127                           	opt stack 0
  2128  000060                     ___awdiv@dividend:
  2129                           	opt stack 0
  2130  000060                     ___awmod@dividend:
  2131                           	opt stack 0
  2132  000060                     m_flash_erase@addr:
  2133                           	opt stack 0
  2134  000060                     m_flash_read@addr:
  2135                           	opt stack 0
  2136  000060                     ___aldiv@dividend:
  2137                           	opt stack 0
  2138  000060                     ___lldiv@dividend:
  2139                           	opt stack 0
  2140  000060                     ___xxtofl@val:
  2141                           	opt stack 0
  2142                           
  2143                           ; 4 bytes @ 0x0
  2144  000060                     	ds	1
  2145  000061                     iic_send_byte@i:
  2146                           	opt stack 0
  2147  000061                     iic_received_byte@i:
  2148                           	opt stack 0
  2149  000061                     lcd_disp_get_code@ret:
  2150                           	opt stack 0
  2151  000061                     lcd_disp_all@i:
  2152                           	opt stack 0
  2153                           
  2154                           ; 1 bytes @ 0x1
  2155  000061                     	ds	1
  2156  000062                     ?___wmul:
  2157                           	opt stack 0
  2158  000062                     ?___lwdiv:
  2159                           	opt stack 0
  2160  000062                     key_shift_loc_fixed_point@min:
  2161                           	opt stack 0
  2162  000062                     ___x_arrange_str@len:
  2163                           	opt stack 0
  2164  000062                     m_int8_2_hex@b:
  2165                           	opt stack 0
  2166  000062                     ads1115_init@slvaddr:
  2167                           	opt stack 0
  2168  000062                     ads1115_set_mux@mux:
  2169                           	opt stack 0
  2170  000062                     at24c02_init@slv:
  2171                           	opt stack 0
  2172  000062                     iic_received_byte_if_ack@ack:
  2173                           	opt stack 0
  2174  000062                     lcd_disp_get_code@i:
  2175                           	opt stack 0
  2176  000062                     ___enter_menu_set_density@fps:
  2177                           	opt stack 0
  2178  000062                     crc_sum@usDataLen:
  2179                           	opt stack 0
  2180  000062                     m_mem_cpy_len@s:
  2181                           	opt stack 0
  2182  000062                     m_mem_cpy@s:
  2183                           	opt stack 0
  2184  000062                     ads1115_write_reg@pAds1115:
  2185                           	opt stack 0
  2186  000062                     at24c02_write_n_byte@pAt24c02:
  2187                           	opt stack 0
  2188  000062                     delay_us@i:
  2189                           	opt stack 0
  2190  000062                     rtc_set@stp:
  2191                           	opt stack 0
  2192  000062                     ___wmul@multiplier:
  2193                           	opt stack 0
  2194  000062                     ___awdiv@divisor:
  2195                           	opt stack 0
  2196  000062                     ___awmod@divisor:
  2197                           	opt stack 0
  2198  000062                     ___lwdiv@dividend:
  2199                           	opt stack 0
  2200                           
  2201                           ; 2 bytes @ 0x2
  2202  000062                     	ds	1
  2203  000063                     key_shift_loc_fixed_point@max:
  2204                           	opt stack 0
  2205  000063                     iic_received_byte_if_ack@ret:
  2206                           	opt stack 0
  2207                           
  2208                           ; 1 bytes @ 0x3
  2209  000063                     	ds	1
  2210  000064                     ??_crc_sum:
  2211  000064                     ??___xxtofl:
  2212  000064                     ?_in_adc_start_and_read:
  2213                           	opt stack 0
  2214  000064                     ?_ads1115_read_reg:
  2215                           	opt stack 0
  2216  000064                     ads1115_write_reg@addr:
  2217                           	opt stack 0
  2218  000064                     at24c02_write_n_byte@addr:
  2219                           	opt stack 0
  2220  000064                     ___awdiv@counter:
  2221                           	opt stack 0
  2222  000064                     ___awmod@counter:
  2223                           	opt stack 0
  2224  000064                     m_mem_cpy_len@len:
  2225                           	opt stack 0
  2226  000064                     ads1115_read_reg@pAds1115:
  2227                           	opt stack 0
  2228  000064                     at24c02_read_n_byte@pAt24c02:
  2229                           	opt stack 0
  2230  000064                     m_flash_read@buf:
  2231                           	opt stack 0
  2232  000064                     delay_ms@dly:
  2233                           	opt stack 0
  2234  000064                     ___wmul@multiplicand:
  2235                           	opt stack 0
  2236  000064                     ___lwdiv@divisor:
  2237                           	opt stack 0
  2238  000064                     m_flash_erase@t32:
  2239                           	opt stack 0
  2240  000064                     ___aldiv@divisor:
  2241                           	opt stack 0
  2242  000064                     ___lldiv@divisor:
  2243                           	opt stack 0
  2244                           
  2245                           ; 4 bytes @ 0x4
  2246  000064                     	ds	1
  2247  000065                     ___awdiv@sign:
  2248                           	opt stack 0
  2249  000065                     ___awmod@sign:
  2250                           	opt stack 0
  2251  000065                     ads1115_write_reg@value:
  2252                           	opt stack 0
  2253  000065                     at24c02_write_n_byte@buf:
  2254                           	opt stack 0
  2255                           
  2256                           ; 2 bytes @ 0x5
  2257  000065                     	ds	1
  2258  000066                     ads1115_read_reg@addr:
  2259                           	opt stack 0
  2260  000066                     at24c02_read_n_byte@addr:
  2261                           	opt stack 0
  2262  000066                     in_adc_start_and_read@ch:
  2263                           	opt stack 0
  2264  000066                     key_polling@ktemp:
  2265                           	opt stack 0
  2266  000066                     ___lwdiv@counter:
  2267                           	opt stack 0
  2268  000066                     crc_sum@len:
  2269                           	opt stack 0
  2270  000066                     m_flash_read@len:
  2271                           	opt stack 0
  2272  000066                     ___wmul@product:
  2273                           	opt stack 0
  2274  000066                     ___awdiv@quotient:
  2275                           	opt stack 0
  2276                           
  2277                           ; 2 bytes @ 0x6
  2278  000066                     	ds	1
  2279  000067                     ??_ads1115_read_reg:
  2280  000067                     key_polling@t8:
  2281                           	opt stack 0
  2282  000067                     ads1115_start_conversion@pAds1115:
  2283                           	opt stack 0
  2284  000067                     at24c02_read_n_byte@buf:
  2285                           	opt stack 0
  2286  000067                     at24c02_write_n_byte@len:
  2287                           	opt stack 0
  2288  000067                     in_adc_start_and_read@ret:
  2289                           	opt stack 0
  2290  000067                     ___lwdiv@quotient:
  2291                           	opt stack 0
  2292                           
  2293                           ; 2 bytes @ 0x7
  2294  000067                     	ds	1
  2295  000068                     ??_calib_data_set_default_diff_pr:
  2296  000068                     ??_calib_data_set_default_pr:
  2297  000068                     ?_key_waite_release:
  2298                           	opt stack 0
  2299  000068                     lcd_set_com_seg@seg:
  2300                           	opt stack 0
  2301  000068                     ___aldiv@counter:
  2302                           	opt stack 0
  2303  000068                     ___xxtofl@sign:
  2304                           	opt stack 0
  2305  000068                     key_waite_release@timeout:
  2306                           	opt stack 0
  2307  000068                     crc_sum@uIndex:
  2308                           	opt stack 0
  2309  000068                     m_int16_2_str_4@buf:
  2310                           	opt stack 0
  2311  000068                     ads1115_read_reg@t16:
  2312                           	opt stack 0
  2313  000068                     m_flash_read@i:
  2314                           	opt stack 0
  2315  000068                     ___lldiv@quotient:
  2316                           	opt stack 0
  2317                           
  2318                           ; 4 bytes @ 0x8
  2319  000068                     	ds	1
  2320  000069                     ??_sample_in_soc_adc_ch:
  2321  000069                     ?___lwmod:
  2322                           	opt stack 0
  2323  000069                     lcd_set_com_seg@show:
  2324                           	opt stack 0
  2325  000069                     ___aldiv@sign:
  2326                           	opt stack 0
  2327  000069                     ___xxtofl@exp:
  2328                           	opt stack 0
  2329  000069                     at24c02_read_n_byte@len:
  2330                           	opt stack 0
  2331  000069                     at24c02_write_n_byte@i:
  2332                           	opt stack 0
  2333  000069                     ___lwmod@dividend:
  2334                           	opt stack 0
  2335                           
  2336                           ; 2 bytes @ 0x9
  2337  000069                     	ds	1
  2338  00006A                     ??_lcd_set_com_seg:
  2339  00006A                     ?_ads1115_read_conversion:
  2340                           	opt stack 0
  2341  00006A                     crc_sum@uchCRCHi:
  2342                           	opt stack 0
  2343  00006A                     key_waite_release@key:
  2344                           	opt stack 0
  2345  00006A                     m_int16_2_str_4@x:
  2346                           	opt stack 0
  2347  00006A                     ads1115_read_conversion@pAds1115:
  2348                           	opt stack 0
  2349  00006A                     m_flash_read@t32:
  2350                           	opt stack 0
  2351  00006A                     ___aldiv@quotient:
  2352                           	opt stack 0
  2353  00006A                     ___xxtofl@arg:
  2354                           	opt stack 0
  2355                           
  2356                           ; 4 bytes @ 0xA
  2357  00006A                     	ds	1
  2358  00006B                     ??_at24c02_read_n_byte:
  2359  00006B                     crc_sum@uchCRCLo:
  2360                           	opt stack 0
  2361  00006B                     ___lwmod@divisor:
  2362                           	opt stack 0
  2363                           
  2364                           ; 2 bytes @ 0xB
  2365  00006B                     	ds	1
  2366  00006C                     ___lldiv@counter:
  2367                           	opt stack 0
  2368  00006C                     crc_verify@message:
  2369                           	opt stack 0
  2370  00006C                     crc_append@message:
  2371                           	opt stack 0
  2372                           
  2373                           ; 2 bytes @ 0xC
  2374  00006C                     	ds	1
  2375  00006D                     ?___int32_2_mflot32:
  2376                           	opt stack 0
  2377  00006D                     lcd_set_com_seg@com:
  2378                           	opt stack 0
  2379  00006D                     ___lwmod@counter:
  2380                           	opt stack 0
  2381  00006D                     sample_in_soc_adc_ch@t16:
  2382                           	opt stack 0
  2383  00006D                     ads1115_read_conversion@result:
  2384                           	opt stack 0
  2385  00006D                     ___int32_2_mflot32@x:
  2386                           	opt stack 0
  2387                           
  2388                           ; 4 bytes @ 0xD
  2389  00006D                     	ds	1
  2390  00006E                     ?___x_sample_fliter:
  2391                           	opt stack 0
  2392  00006E                     ?___x_sample_fifo:
  2393                           	opt stack 0
  2394  00006E                     ?___flmul:
  2395                           	opt stack 0
  2396  00006E                     ?___lmul:
  2397                           	opt stack 0
  2398  00006E                     calib_data_set_default_diff_pr@j:
  2399                           	opt stack 0
  2400  00006E                     calib_data_set_default_pr@i:
  2401                           	opt stack 0
  2402  00006E                     lcd_set_com_seg@offset:
  2403                           	opt stack 0
  2404  00006E                     key_adj_value_fixed_point@value:
  2405                           	opt stack 0
  2406  00006E                     ___x_sample_fliter@buf:
  2407                           	opt stack 0
  2408  00006E                     ___x_sample_fifo@buf:
  2409                           	opt stack 0
  2410  00006E                     crc_verify@n:
  2411                           	opt stack 0
  2412  00006E                     crc_append@n:
  2413                           	opt stack 0
  2414  00006E                     m_flash_write@addr:
  2415                           	opt stack 0
  2416  00006E                     ___lmul@multiplier:
  2417                           	opt stack 0
  2418  00006E                     ___flmul@b:
  2419                           	opt stack 0
  2420                           
  2421                           ; 4 bytes @ 0xE
  2422  00006E                     	ds	1
  2423  00006F                     calib_data_set_default_diff_pr@i:
  2424                           	opt stack 0
  2425  00006F                     calib_data_set_default_pr@j:
  2426                           	opt stack 0
  2427  00006F                     lcd_set_com_seg@bits:
  2428                           	opt stack 0
  2429  00006F                     at24c02_read_n_byte@i:
  2430                           	opt stack 0
  2431  00006F                     sample_in_soc_adc_ch@ret:
  2432                           	opt stack 0
  2433                           
  2434                           ; 4 bytes @ 0xF
  2435  00006F                     	ds	1
  2436  000070                     ??_crc_verify:
  2437  000070                     ??_crc_append:
  2438  000070                     key_adj_value_fixed_point@loc:
  2439                           	opt stack 0
  2440  000070                     ___x_sample_fliter@len:
  2441                           	opt stack 0
  2442  000070                     lcd_disp_level_bar@__bar:
  2443                           	opt stack 0
  2444  000070                     lcd_show_dp@show:
  2445                           	opt stack 0
  2446  000070                     lcd_show_chr@chr:
  2447                           	opt stack 0
  2448  000070                     ___x_sample_fifo@x:
  2449                           	opt stack 0
  2450                           
  2451                           ; 2 bytes @ 0x10
  2452  000070                     	ds	1
  2453  000071                     ??___int32_2_mflot32:
  2454  000071                     ___x_sample_fliter@loop:
  2455                           	opt stack 0
  2456  000071                     lcd_disp_level_bar@bar:
  2457                           	opt stack 0
  2458  000071                     lcd_show_dp@loc:
  2459                           	opt stack 0
  2460  000071                     lcd_show_chr@loc:
  2461                           	opt stack 0
  2462  000071                     key_adj_value_fixed_point@dloc:
  2463                           	opt stack 0
  2464                           
  2465                           ; 2 bytes @ 0x11
  2466  000071                     	ds	1
  2467  000072                     ??___x_sample_fliter:
  2468  000072                     ___x_sample_fifo@len:
  2469                           	opt stack 0
  2470  000072                     lcd_disp_level@level:
  2471                           	opt stack 0
  2472  000072                     lcd_show_chr@code:
  2473                           	opt stack 0
  2474  000072                     crc_verify@crccal:
  2475                           	opt stack 0
  2476  000072                     crc_append@crc:
  2477                           	opt stack 0
  2478  000072                     m_flash_write@buf:
  2479                           	opt stack 0
  2480  000072                     ___lmul@multiplicand:
  2481                           	opt stack 0
  2482  000072                     ___flmul@a:
  2483                           	opt stack 0
  2484                           
  2485                           ; 4 bytes @ 0x12
  2486  000072                     	ds	1
  2487  000073                     ??___x_sample_fifo:
  2488  000073                     sample_in_soc_adc_ch@i:
  2489                           	opt stack 0
  2490  000073                     lcd_disp_level@i:
  2491                           	opt stack 0
  2492  000073                     key_adj_value_fixed_point@t16:
  2493                           	opt stack 0
  2494  000073                     lcd_show_string_l0@str:
  2495                           	opt stack 0
  2496  000073                     lcd_show_string_l1@str:
  2497                           	opt stack 0
  2498  000073                     lcd_show_string@str:
  2499                           	opt stack 0
  2500                           
  2501                           ; 2 bytes @ 0x13
  2502  000073                     	ds	1
  2503  000074                     crc_verify@expected:
  2504                           	opt stack 0
  2505  000074                     m_flash_write@len:
  2506                           	opt stack 0
  2507                           
  2508                           ; 2 bytes @ 0x14
  2509  000074                     	ds	1
  2510  000075                     lcd_show_string_l0@t8:
  2511                           	opt stack 0
  2512  000075                     lcd_show_string_l1@t8:
  2513                           	opt stack 0
  2514  000075                     lcd_show_string@t8:
  2515                           	opt stack 0
  2516  000075                     ___int32_2_mflot32@t32:
  2517                           	opt stack 0
  2518                           
  2519                           ; 4 bytes @ 0x15
  2520  000075                     	ds	1
  2521  000076                     ??_m_flash_write:
  2522  000076                     ??___flmul:
  2523  000076                     calib_data_init_diff_pr@ret:
  2524                           	opt stack 0
  2525  000076                     calib_data_init_pr@ret:
  2526                           	opt stack 0
  2527  000076                     ui_disp_adj_xfixed_pt@str:
  2528                           	opt stack 0
  2529  000076                     ___lmul@product:
  2530                           	opt stack 0
  2531  000076                     ui_disp_start_cs600@buf:
  2532                           	opt stack 0
  2533                           
  2534                           ; 6 bytes @ 0x16
  2535  000076                     	ds	1
  2536  000077                     calib_data_init_diff_pr@t16:
  2537                           	opt stack 0
  2538  000077                     calib_data_init_pr@t16:
  2539                           	opt stack 0
  2540                           
  2541                           ; 2 bytes @ 0x17
  2542  000077                     	ds	1
  2543  000078                     ___x_sample_fliter@maxLoc:
  2544                           	opt stack 0
  2545  000078                     m_flash_write@writeTimes:
  2546                           	opt stack 0
  2547  000078                     ui_disp_adj_xfixed_pt@x:
  2548                           	opt stack 0
  2549                           
  2550                           ; 2 bytes @ 0x18
  2551  000078                     	ds	1
  2552  000079                     ___x_sample_fliter@minLoc:
  2553                           	opt stack 0
  2554  000079                     m_flash_write@i:
  2555                           	opt stack 0
  2556  000079                     calib_data_init_diff_pr@buf:
  2557                           	opt stack 0
  2558  000079                     calib_data_init_pr@buf:
  2559                           	opt stack 0
  2560  000079                     ___int32_2_mflot32@mf:
  2561                           	opt stack 0
  2562  000079                     ___x_sample_fifo@ret:
  2563                           	opt stack 0
  2564                           
  2565                           ; 4 bytes @ 0x19
  2566  000079                     	ds	1
  2567  00007A                     ui_disp_adj_xfixed_pt@loc:
  2568                           	opt stack 0
  2569  00007A                     ___flmul@sign:
  2570                           	opt stack 0
  2571  00007A                     m_interp1_cal_p_v@tabrow:
  2572                           	opt stack 0
  2573  00007A                     m_interp1_cal_p_t@tmpx:
  2574                           	opt stack 0
  2575  00007A                     ___x_sample_fliter@max:
  2576                           	opt stack 0
  2577  00007A                     m_flash_write@pageAddr:
  2578                           	opt stack 0
  2579                           
  2580                           ; 4 bytes @ 0x1A
  2581  00007A                     	ds	1
  2582  00007B                     ??_ui_disp_adj_xfixed_pt:
  2583  00007B                     ___flmul@aexp:
  2584                           	opt stack 0
  2585                           
  2586                           ; 1 bytes @ 0x1B
  2587  00007B                     	ds	1
  2588  00007C                     ui_disp_start_cs600@dly:
  2589                           	opt stack 0
  2590  00007C                     m_interp1_cal_p_v@xin:
  2591                           	opt stack 0
  2592  00007C                     m_interp1_cal_p_t@xin:
  2593                           	opt stack 0
  2594  00007C                     ___x_sample_fliter@min:
  2595                           	opt stack 0
  2596  00007C                     ___flmul@grs:
  2597                           	opt stack 0
  2598                           
  2599                           ; 4 bytes @ 0x1C
  2600  00007C                     	ds	1
  2601  00007D                     ui_disp_start_cs600@t8:
  2602                           	opt stack 0
  2603  00007D                     ___x_sample_fifo@i:
  2604                           	opt stack 0
  2605  00007D                     ___enter_menu_set_base_zero@fps:
  2606                           	opt stack 0
  2607  00007D                     ui_disp_adj_xfixed_pt@buf:
  2608                           	opt stack 0
  2609                           
  2610                           ; 10 bytes @ 0x1D
  2611  00007D                     	ds	1
  2612  00007E                     ??_sample_pr_chip_comm:
  2613  00007E                     m_interp1_cal_p_t@tmpxLen:
  2614                           	opt stack 0
  2615  00007E                     m_flash_write@j:
  2616                           	opt stack 0
  2617  00007E                     m_interp1_cal_p_v@xout:
  2618                           	opt stack 0
  2619  00007E                     ___x_sample_fliter@t32:
  2620                           	opt stack 0
  2621                           
  2622                           ; 4 bytes @ 0x1E
  2623  00007E                     	ds	1
  2624  00007F                     ??_m_interp1_cal_p_t:
  2625  00007F                     ??_key_process_set_down_long:
  2626  00007F                     m_flash_write@tmpBuf:
  2627                           	opt stack 0
  2628                           
  2629                           ; 2 bytes @ 0x1F
  2630  00007F                     	ds	1
  2631  000080                     ??_m_interp1_cal_p_v:
  2632  000080                     sample_pr_chip_comm@ret:
  2633                           	opt stack 0
  2634  000080                     ___flmul@bexp:
  2635                           	opt stack 0
  2636                           
  2637                           ; 1 bytes @ 0x20
  2638  000080                     	ds	1
  2639  000081                     sample_pr_chip_comm@t16:
  2640                           	opt stack 0
  2641  000081                     m_flash_write@t16:
  2642                           	opt stack 0
  2643  000081                     ___flmul@prod:
  2644                           	opt stack 0
  2645                           
  2646                           ; 4 bytes @ 0x21
  2647  000081                     	ds	1
  2648  000082                     ___x_sample_fliter@i:
  2649                           	opt stack 0
  2650                           
  2651                           ; 1 bytes @ 0x22
  2652  000082                     	ds	1
  2653  000083                     sample_diff_pr_fliter@xin:
  2654                           	opt stack 0
  2655                           
  2656                           ; 2 bytes @ 0x23
  2657  000083                     	ds	2
  2658  000085                     sample_diff_pr_chip_fast@ret:
  2659                           	opt stack 0
  2660  000085                     sample_diff_pr_chip_slow@ret:
  2661                           	opt stack 0
  2662  000085                     ___flmul@temp:
  2663                           	opt stack 0
  2664                           
  2665                           ; 2 bytes @ 0x25
  2666  000085                     	ds	1
  2667  000086                     sample_diff_pr_chip_fast@t16:
  2668                           	opt stack 0
  2669  000086                     sample_diff_pr_chip_slow@t16:
  2670                           	opt stack 0
  2671                           
  2672                           ; 2 bytes @ 0x26
  2673  000086                     	ds	1
  2674  000087                     ?___fldiv:
  2675                           	opt stack 0
  2676  000087                     key_process@tm:
  2677                           	opt stack 0
  2678  000087                     ___fldiv@b:
  2679                           	opt stack 0
  2680                           
  2681                           ; 4 bytes @ 0x27
  2682  000087                     	ds	2
  2683  000089                     key_process@key:
  2684                           	opt stack 0
  2685                           
  2686                           ; 1 bytes @ 0x29
  2687  000089                     	ds	2
  2688  00008B                     ___fldiv@a:
  2689                           	opt stack 0
  2690                           
  2691                           ; 4 bytes @ 0x2B
  2692  00008B                     	ds	2
  2693  00008D                     m_interp1_cal_p_t@y:
  2694                           	opt stack 0
  2695                           
  2696                           ; 4 bytes @ 0x2D
  2697  00008D                     	ds	1
  2698  00008E                     m_interp1_cal_p_v@y:
  2699                           	opt stack 0
  2700                           
  2701                           ; 4 bytes @ 0x2E
  2702  00008E                     	ds	1
  2703  00008F                     ??___fldiv:
  2704                           
  2705                           ; 1 bytes @ 0x2F
  2706  00008F                     	ds	2
  2707  000091                     m_interp1_cal_p_t@x:
  2708                           	opt stack 0
  2709                           
  2710                           ; 4 bytes @ 0x31
  2711  000091                     	ds	1
  2712  000092                     m_interp1_cal_p_v@x:
  2713                           	opt stack 0
  2714                           
  2715                           ; 4 bytes @ 0x32
  2716  000092                     	ds	1
  2717  000093                     ___fldiv@sign:
  2718                           	opt stack 0
  2719                           
  2720                           ; 1 bytes @ 0x33
  2721  000093                     	ds	1
  2722  000094                     ___fldiv@rem:
  2723                           	opt stack 0
  2724                           
  2725                           ; 4 bytes @ 0x34
  2726  000094                     	ds	1
  2727  000095                     m_interp1_cal_p_t@i:
  2728                           	opt stack 0
  2729                           
  2730                           ; 1 bytes @ 0x35
  2731  000095                     	ds	1
  2732  000096                     m_interp1_cal_p_v@i:
  2733                           	opt stack 0
  2734                           
  2735                           ; 1 bytes @ 0x36
  2736  000096                     	ds	1
  2737  000097                     cal_press@ret:
  2738                           	opt stack 0
  2739                           
  2740                           ; 1 bytes @ 0x37
  2741  000097                     	ds	1
  2742  000098                     cal_press@tabrow:
  2743                           	opt stack 0
  2744  000098                     ___fldiv@new_exp:
  2745                           	opt stack 0
  2746                           
  2747                           ; 2 bytes @ 0x38
  2748  000098                     	ds	2
  2749  00009A                     ___fldiv@grs:
  2750                           	opt stack 0
  2751  00009A                     cal_press@xin:
  2752                           	opt stack 0
  2753                           
  2754                           ; 8 bytes @ 0x3A
  2755  00009A                     	ds	4
  2756  00009E                     ___fldiv@bexp:
  2757                           	opt stack 0
  2758                           
  2759                           ; 1 bytes @ 0x3E
  2760  00009E                     	ds	1
  2761  00009F                     ___fldiv@aexp:
  2762                           	opt stack 0
  2763                           
  2764                           ; 1 bytes @ 0x3F
  2765  00009F                     	ds	1
  2766  0000A0                     ?___flneg:
  2767                           	opt stack 0
  2768  0000A0                     ___flneg@f1:
  2769                           	opt stack 0
  2770                           
  2771                           ; 4 bytes @ 0x40
  2772  0000A0                     	ds	4
  2773  0000A4                     ?___fladd:
  2774                           	opt stack 0
  2775  0000A4                     ___fladd@b:
  2776                           	opt stack 0
  2777                           
  2778                           ; 4 bytes @ 0x44
  2779  0000A4                     	ds	4
  2780  0000A8                     ___fladd@a:
  2781                           	opt stack 0
  2782                           
  2783                           ; 4 bytes @ 0x48
  2784  0000A8                     	ds	4
  2785  0000AC                     ??___fladd:
  2786                           
  2787                           ; 1 bytes @ 0x4C
  2788  0000AC                     	ds	8
  2789  0000B4                     ___fladd@signs:
  2790                           	opt stack 0
  2791                           
  2792                           ; 1 bytes @ 0x54
  2793  0000B4                     	ds	1
  2794  0000B5                     ___fladd@aexp:
  2795                           	opt stack 0
  2796                           
  2797                           ; 1 bytes @ 0x55
  2798  0000B5                     	ds	1
  2799  0000B6                     ___fladd@bexp:
  2800                           	opt stack 0
  2801                           
  2802                           ; 1 bytes @ 0x56
  2803  0000B6                     	ds	1
  2804  0000B7                     ___fladd@grs:
  2805                           	opt stack 0
  2806                           
  2807                           ; 1 bytes @ 0x57
  2808  0000B7                     	ds	1
  2809  0000B8                     ?___fltol:
  2810                           	opt stack 0
  2811  0000B8                     ___flge@ff1:
  2812                           	opt stack 0
  2813  0000B8                     ___fltol@f1:
  2814                           	opt stack 0
  2815                           
  2816                           ; 4 bytes @ 0x58
  2817  0000B8                     	ds	4
  2818  0000BC                     ??___fltol:
  2819  0000BC                     ___flge@ff2:
  2820                           	opt stack 0
  2821                           
  2822                           ; 4 bytes @ 0x5C
  2823  0000BC                     	ds	4
  2824  0000C0                     ??___flge:
  2825  0000C0                     ___fltol@sign1:
  2826                           	opt stack 0
  2827                           
  2828                           ; 1 bytes @ 0x60
  2829  0000C0                     	ds	1
  2830  0000C1                     ___fltol@exp1:
  2831                           	opt stack 0
  2832                           
  2833                           ; 1 bytes @ 0x61
  2834  0000C1                     	ds	1
  2835  0000C2                     ??_cal_pt100_temperature_ex:
  2836  0000C2                     ??_cal_additional_pressute:
  2837  0000C2                     ?_data_sys_cal_v1:
  2838                           	opt stack 0
  2839  0000C2                     ?_data_sys_cal_v2:
  2840                           	opt stack 0
  2841  0000C2                     data_sys_cal_v1@stp:
  2842                           	opt stack 0
  2843  0000C2                     data_sys_cal_v2@stp:
  2844                           	opt stack 0
  2845  0000C2                     cal_diff_p_to_h@xin:
  2846                           	opt stack 0
  2847  0000C2                     _cal_pt100_temperature_in$4328:
  2848                           	opt stack 0
  2849                           
  2850                           ; 4 bytes @ 0x62
  2851  0000C2                     	ds	2
  2852  0000C4                     ??_cal_diff_p_to_h:
  2853  0000C4                     ?_m_interp1_float_fast:
  2854                           	opt stack 0
  2855  0000C4                     m_interp1_float_fast@tab:
  2856                           	opt stack 0
  2857                           
  2858                           ; 2 bytes @ 0x64
  2859  0000C4                     	ds	1
  2860  0000C5                     cal_additional_pressute@f1:
  2861                           	opt stack 0
  2862                           
  2863                           ; 4 bytes @ 0x65
  2864  0000C5                     	ds	1
  2865  0000C6                     m_interp1_float_fast@in:
  2866                           	opt stack 0
  2867  0000C6                     cal_diff_p_to_h@f2:
  2868                           	opt stack 0
  2869  0000C6                     cal_pt100_temperature_in@f2:
  2870                           	opt stack 0
  2871  0000C6                     _data_sys_cal_v1$4321:
  2872                           	opt stack 0
  2873  0000C6                     _data_sys_cal_v2$4324:
  2874                           	opt stack 0
  2875                           
  2876                           ; 4 bytes @ 0x66
  2877  0000C6                     	ds	1
  2878  0000C7                     _cal_pt100_temperature_ex$4329:
  2879                           	opt stack 0
  2880                           
  2881                           ; 4 bytes @ 0x67
  2882  0000C7                     	ds	2
  2883  0000C9                     cal_additional_pressute@f2:
  2884                           	opt stack 0
  2885                           
  2886                           ; 4 bytes @ 0x69
  2887  0000C9                     	ds	1
  2888  0000CA                     m_interp1_float_fast@len:
  2889                           	opt stack 0
  2890  0000CA                     cal_diff_p_to_h@f1:
  2891                           	opt stack 0
  2892  0000CA                     cal_pt100_temperature_in@f1:
  2893                           	opt stack 0
  2894  0000CA                     _data_sys_cal_v1$4322:
  2895                           	opt stack 0
  2896  0000CA                     _data_sys_cal_v2$4325:
  2897                           	opt stack 0
  2898                           
  2899                           ; 4 bytes @ 0x6A
  2900  0000CA                     	ds	1
  2901  0000CB                     cal_pt100_temperature_ex@f2:
  2902                           	opt stack 0
  2903                           
  2904                           ; 4 bytes @ 0x6B
  2905  0000CB                     	ds	1
  2906  0000CC                     ??_m_interp1_float_fast:
  2907                           
  2908                           ; 1 bytes @ 0x6C
  2909  0000CC                     	ds	1
  2910  0000CD                     cal_additional_pressute@index:
  2911                           	opt stack 0
  2912                           
  2913                           ; 1 bytes @ 0x6D
  2914  0000CD                     	ds	1
  2915  0000CE                     data_sys_cal_v2@f:
  2916                           	opt stack 0
  2917  0000CE                     _data_sys_cal_v1$4323:
  2918                           	opt stack 0
  2919                           
  2920                           ; 4 bytes @ 0x6E
  2921  0000CE                     	ds	1
  2922  0000CF                     cal_pt100_temperature_ex@f1:
  2923                           	opt stack 0
  2924                           
  2925                           ; 4 bytes @ 0x6F
  2926  0000CF                     	ds	3
  2927  0000D2                     data_sys_cal_v1@h:
  2928                           	opt stack 0
  2929  0000D2                     data_sys_cal_v2@d:
  2930                           	opt stack 0
  2931                           
  2932                           ; 4 bytes @ 0x72
  2933  0000D2                     	ds	2
  2934  0000D4                     m_interp1_float_fast@x:
  2935                           	opt stack 0
  2936                           
  2937                           ; 4 bytes @ 0x74
  2938  0000D4                     	ds	2
  2939  0000D6                     data_sys_cal_v1@f:
  2940                           	opt stack 0
  2941                           
  2942                           ; 4 bytes @ 0x76
  2943  0000D6                     	ds	2
  2944  0000D8                     m_interp1_float_fast@y:
  2945                           	opt stack 0
  2946                           
  2947                           ; 4 bytes @ 0x78
  2948  0000D8                     	ds	2
  2949  0000DA                     data_sys_cal_v1@r:
  2950                           	opt stack 0
  2951                           
  2952                           ; 4 bytes @ 0x7A
  2953  0000DA                     	ds	2
  2954  0000DC                     _m_interp1_float_fast$4326:
  2955                           	opt stack 0
  2956                           
  2957                           ; 4 bytes @ 0x7C
  2958  0000DC                     	ds	2
  2959  0000DE                     data_sys_init@ret:
  2960                           	opt stack 0
  2961                           
  2962                           ; 1 bytes @ 0x7E
  2963  0000DE                     	ds	1
  2964  0000DF                     data_sys_init@stp:
  2965                           	opt stack 0
  2966                           
  2967                           ; 2 bytes @ 0x7F
  2968  0000DF                     	ds	1
  2969  0000E0                     m_interp1_float_fast@f:
  2970                           	opt stack 0
  2971                           
  2972                           ; 4 bytes @ 0x80
  2973  0000E0                     	ds	1
  2974  0000E1                     data_sys_init@buf:
  2975                           	opt stack 0
  2976                           
  2977                           ; 2 bytes @ 0x81
  2978  0000E1                     	ds	3
  2979  0000E4                     m_interp1_float_fast@i:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x84
  2983  0000E4                     	ds	2
  2984  0000E6                     ?_cal_diff_hight_to_vol_h:
  2985                           	opt stack 0
  2986  0000E6                     ?_cal_diff_hight_to_vol_v:
  2987                           	opt stack 0
  2988  0000E6                     cal_diff_hight_to_vol_h@h:
  2989                           	opt stack 0
  2990  0000E6                     cal_diff_hight_to_vol_v@h:
  2991                           	opt stack 0
  2992                           
  2993                           ; 4 bytes @ 0x86
  2994  0000E6                     	ds	4
  2995  0000EA                     cal_diff_hight_to_vol_h@v2:
  2996                           	opt stack 0
  2997  0000EA                     _cal_diff_hight_to_vol_v$4327:
  2998                           	opt stack 0
  2999                           
  3000                           ; 4 bytes @ 0x8A
  3001  0000EA                     	ds	4
  3002  0000EE                     cal_diff_hight_to_vol_h@f2:
  3003                           	opt stack 0
  3004  0000EE                     cal_diff_hight_to_vol_v@v1:
  3005                           	opt stack 0
  3006                           
  3007                           ; 4 bytes @ 0x8E
  3008  0000EE                     	ds	4
  3009  0000F2                     cal_diff_hight_to_vol_h@v1:
  3010                           	opt stack 0
  3011  0000F2                     cal_diff_hight_to_vol_v@v2:
  3012                           	opt stack 0
  3013                           
  3014                           ; 4 bytes @ 0x92
  3015  0000F2                     	ds	4
  3016  0000F6                     cal_diff_hight_to_vol_h@f1:
  3017                           	opt stack 0
  3018  0000F6                     cal_diff_hight_to_vol_v@D:
  3019                           	opt stack 0
  3020                           
  3021                           ; 4 bytes @ 0x96
  3022  0000F6                     	ds	4
  3023  0000FA                     cal_diff_hight_to_vol_v@f1:
  3024                           	opt stack 0
  3025                           
  3026                           ; 4 bytes @ 0x9A
  3027  0000FA                     	ds	4
  3028                           tblptru	equ	0xFF8
  3029                           tblptrh	equ	0xFF7
  3030                           tblptrl	equ	0xFF6
  3031                           tablat	equ	0xFF5
  3032                           postinc0	equ	0xFEE
  3033                           wreg	equ	0xFE8
  3034                           postdec1	equ	0xFE5
  3035                           fsr1h	equ	0xFE2
  3036                           fsr1l	equ	0xFE1
  3037                           
  3038                           	psect	cstackCOMRAM
  3039  000001                     __pcstackCOMRAM:
  3040                           	opt stack 0
  3041  000001                     ??_handler_interrupt_hight:
  3042  000001                     
  3043                           ; 2 bytes @ 0x0
  3044  000001                     	ds	14
  3045  00000F                     ??_handler_interrupt_low:
  3046                           
  3047                           ; 1 bytes @ 0xE
  3048  00000F                     	ds	17
  3049  000020                     ??_ads1115_set_mux:
  3050  000020                     ??_in_adc_start_and_read:
  3051  000020                     ??___enter_menu_set_pose:
  3052  000020                     ___exp_10@n:
  3053                           	opt stack 0
  3054  000020                     key_waite_release@t8:
  3055                           	opt stack 0
  3056  000020                     key_shift_loc_fixed_point@t8:
  3057                           	opt stack 0
  3058  000020                     ___x_arrange_str@i:
  3059                           	opt stack 0
  3060  000020                     m_int8_2_hex@t8:
  3061                           	opt stack 0
  3062  000020                     iic_send_ack@ack:
  3063                           	opt stack 0
  3064  000020                     iic_waite_ack@timeout:
  3065                           	opt stack 0
  3066  000020                     lcd_disp_level_bar@show:
  3067                           	opt stack 0
  3068  000020                     lcd_disp_chr_loc_0@code:
  3069                           	opt stack 0
  3070  000020                     lcd_disp_dp_loc_0@dp:
  3071                           	opt stack 0
  3072  000020                     lcd_disp_chr_loc_1@code:
  3073                           	opt stack 0
  3074  000020                     lcd_disp_dp_loc_1@dp:
  3075                           	opt stack 0
  3076  000020                     lcd_disp_chr_loc_2@code:
  3077                           	opt stack 0
  3078  000020                     lcd_disp_dp_loc_2@dp:
  3079                           	opt stack 0
  3080  000020                     lcd_disp_chr_loc_3@code:
  3081                           	opt stack 0
  3082  000020                     lcd_disp_chr_loc_4@code:
  3083                           	opt stack 0
  3084  000020                     lcd_disp_chr_loc_5@code:
  3085                           	opt stack 0
  3086  000020                     lcd_disp_chr_loc_6@code:
  3087                           	opt stack 0
  3088  000020                     lcd_disp_chr_loc_7@code:
  3089                           	opt stack 0
  3090  000020                     lcd_disp_logo@show:
  3091                           	opt stack 0
  3092  000020                     m_flash_unlock@oldGIE:
  3093                           	opt stack 0
  3094                           
  3095                           ; 1 bytes @ 0x1F
  3096  000020                     	ds	1
  3097  000021                     tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           
  3107                           ; 1 bytes @ 0x20
  3108 ;;
  3109 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3110 ;;
  3111 ;; *************** function _main *****************
  3112 ;; Defined at:
  3113 ;;		line 5 in file "src/app/main.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  t16             2    0        unsigned int 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2  701[None  ] int 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels required when called:   15
  3133 ;; This function calls:
  3134 ;;		_ads1115_init_all_chip
  3135 ;;		_data_init_all
  3136 ;;		_event_process
  3137 ;;		_in_adc_init
  3138 ;;		_lcd_disp_level
  3139 ;;		_lcd_init
  3140 ;;		_rtc_set
  3141 ;;		_soc_init
  3142 ;;		_ui_disp_start_cs600
  3143 ;; This function is called by:
  3144 ;;		Startup code after reset
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text0
  3149  0072B8                     __ptext0:
  3150                           	opt stack 0
  3151  0072B8                     _main:
  3152                           	opt stack 16
  3153                           
  3154                           ;main.c: 7: uint16_t t16;
  3155                           ;main.c: 8: __nop();
  3156                           
  3157                           ;incstack = 0
  3158  0072B8  F000               	nop	
  3159                           
  3160                           ;main.c: 10: soc_init();
  3161  0072BA  EC65  F03C         	call	_soc_init	;wreg free
  3162                           
  3163                           ;main.c: 11: rtc_set((st_RtcDef*)defalutRtc);
  3164  0072BE  0EF8               	movlw	low _defalutRtc
  3165  0072C0  0100               	movlb	0	; () banked
  3166  0072C2  6F60               	movwf	rtc_set@rtc& (0+255),b
  3167  0072C4  0E01               	movlw	high _defalutRtc
  3168  0072C6  0100               	movlb	0	; () banked
  3169  0072C8  6F61               	movwf	(rtc_set@rtc+1)& (0+255),b
  3170  0072CA  EC0C  F02E         	call	_rtc_set	;wreg free
  3171                           
  3172                           ;main.c: 12: lcd_init();
  3173  0072CE  EC75  F03C         	call	_lcd_init	;wreg free
  3174                           
  3175                           ;main.c: 14: ads1115_init_all_chip();
  3176  0072D2  EC9C  F03A         	call	_ads1115_init_all_chip	;wreg free
  3177                           
  3178                           ;main.c: 15: data_init_all();
  3179  0072D6  EC8A  F03C         	call	_data_init_all	;wreg free
  3180                           
  3181                           ;main.c: 16: in_adc_init();
  3182  0072DA  ECFB  F03B         	call	_in_adc_init	;wreg free
  3183                           
  3184                           ;main.c: 18: ui_disp_start_cs600(10);
  3185  0072DE  0E0A               	movlw	10
  3186  0072E0  ECBC  F02F         	call	_ui_disp_start_cs600
  3187                           
  3188                           ;main.c: 20: lcd_disp_level(60);
  3189  0072E4  0E3C               	movlw	60
  3190  0072E6  EC32  F038         	call	_lcd_disp_level
  3191                           
  3192                           ;main.c: 22: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while(0)
      +                          ;;
  3193  0072EA  9893               	bcf	3987,4,c	;volatile
  3194  0072EC  888A               	bsf	3978,4,c	;volatile
  3195                           
  3196                           ;main.c: 23: __nop();
  3197  0072EE  F000               	nop	
  3198  0072F0                     l13398:
  3199                           
  3200                           ;main.c: 25: event_process();
  3201  0072F0  ECB7  F03A         	call	_event_process	;wreg free
  3202  0072F4  D7FD               	goto	l13398
  3203  0072F6                     __end_of_main:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           postinc0	equ	0xFEE
  3210                           wreg	equ	0xFE8
  3211                           postdec1	equ	0xFE5
  3212                           fsr1h	equ	0xFE2
  3213                           fsr1l	equ	0xFE1
  3214                           
  3215 ;; *************** function _ui_disp_start_cs600 *****************
  3216 ;; Defined at:
  3217 ;;		line 113 in file "src/api/ui.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  dly             1    wreg     unsigned char 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  dly             1   28[BANK0 ] unsigned char 
  3222 ;;  buf             6   22[BANK0 ] unsigned char [6]
  3223 ;;  t8              1   29[BANK0 ] unsigned char 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;Total ram usage:        8 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    9
  3240 ;; This function calls:
  3241 ;;		_lcd_disp_all
  3242 ;;		_lcd_disp_level
  3243 ;;		_lcd_disp_logo
  3244 ;;		_lcd_disp_refresh
  3245 ;;		_lcd_show_string_l0
  3246 ;;		_lcd_show_string_l1
  3247 ;;		_m_int8_2_hex
  3248 ;;		_ticker_dly
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text1
  3255  005F78                     __ptext1:
  3256                           	opt stack 0
  3257  005F78                     _ui_disp_start_cs600:
  3258                           	opt stack 21
  3259                           
  3260                           ;incstack = 0
  3261                           ;ui_disp_start_cs600@dly stored from wreg
  3262  005F78  0100               	movlb	0	; () banked
  3263  005F7A  6F7C               	movwf	ui_disp_start_cs600@dly& (0+255),b
  3264                           
  3265                           ;ui.c: 115: uint8_t t8;
  3266                           ;ui.c: 116: uint8_t buf[6]="-00-";
  3267  005F7C  EE21  F0F2         	lfsr	2,ui_disp_start_cs600@F7634
  3268  005F80  EE10  F076         	lfsr	1,ui_disp_start_cs600@buf
  3269  005F84  0E05               	movlw	5
  3270  005F86                     u11851:
  3271  005F86  CFDB FFE3          	movff	plusw2,plusw1
  3272  005F8A  06E8               	decf	wreg,f,c
  3273  005F8C  E2FC               	bc	u11851
  3274                           
  3275                           ;ui.c: 117: lcd_disp_all(0);;
  3276  005F8E  0E00               	movlw	0
  3277  005F90  EC1D  F03B         	call	_lcd_disp_all
  3278                           
  3279                           ;ui.c: 118: lcd_show_string_l0((uint8_t*)("cs66"));
  3280  005F94  0EED               	movlw	low STR_1
  3281  005F96  0100               	movlb	0	; () banked
  3282  005F98  6F73               	movwf	lcd_show_string_l0@str& (0+255),b
  3283  005F9A  0EFF               	movlw	high STR_1
  3284  005F9C  0100               	movlb	0	; () banked
  3285  005F9E  6F74               	movwf	(lcd_show_string_l0@str+1)& (0+255),b
  3286  005FA0  ECF7  F038         	call	_lcd_show_string_l0	;wreg free
  3287                           
  3288                           ;ui.c: 119: lcd_disp_logo(1);
  3289  005FA4  0E01               	movlw	1
  3290  005FA6  EC05  F03B         	call	_lcd_disp_logo
  3291                           
  3292                           ;ui.c: 120: t8=dly;
  3293  005FAA  C07C  F07D         	movff	ui_disp_start_cs600@dly,ui_disp_start_cs600@t8
  3294                           
  3295                           ;ui.c: 121: if(t8<1)t8=1;
  3296  005FAE  0100               	movlb	0	; () banked
  3297  005FB0  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  3298  005FB2  0100               	movlb	0	; () banked
  3299  005FB4  A4D8               	btfss	status,2,c
  3300  005FB6  D029               	goto	l13098
  3301                           
  3302                           ; BSR set to: 0
  3303  005FB8  0E01               	movlw	1
  3304  005FBA  0100               	movlb	0	; () banked
  3305  005FBC  6F7D               	movwf	ui_disp_start_cs600@t8& (0+255),b
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;ui.c: 122: while(t8){
  3309  005FBE  D025               	goto	l13098
  3310  005FC0                     l13084:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;ui.c: 123: m_int8_2_hex(buf+1,t8-1);
  3314  005FC0  0E77               	movlw	low (ui_disp_start_cs600@buf+1)
  3315  005FC2  0100               	movlb	0	; () banked
  3316  005FC4  6F60               	movwf	m_int8_2_hex@str& (0+255),b
  3317  005FC6  0E00               	movlw	high (ui_disp_start_cs600@buf+1)
  3318  005FC8  0100               	movlb	0	; () banked
  3319  005FCA  6F61               	movwf	(m_int8_2_hex@str+1)& (0+255),b
  3320  005FCC  0100               	movlb	0	; () banked
  3321  005FCE  057D               	decf	ui_disp_start_cs600@t8& (0+255),w,b
  3322  005FD0  0100               	movlb	0	; () banked
  3323  005FD2  6F62               	movwf	m_int8_2_hex@b& (0+255),b
  3324  005FD4  ECAB  F037         	call	_m_int8_2_hex	;wreg free
  3325                           
  3326                           ;ui.c: 124: buf[4]='\0';
  3327  005FD8  0E00               	movlw	0
  3328  005FDA  0100               	movlb	0	; () banked
  3329  005FDC  6F7A               	movwf	(ui_disp_start_cs600@buf+4)& (0+255),b
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;ui.c: 125: lcd_show_string_l1(buf);
  3333  005FDE  0E76               	movlw	low ui_disp_start_cs600@buf
  3334  005FE0  0100               	movlb	0	; () banked
  3335  005FE2  6F73               	movwf	lcd_show_string_l1@str& (0+255),b
  3336  005FE4  0E00               	movlw	high ui_disp_start_cs600@buf
  3337  005FE6  0100               	movlb	0	; () banked
  3338  005FE8  6F74               	movwf	(lcd_show_string_l1@str+1)& (0+255),b
  3339  005FEA  EC3B  F039         	call	_lcd_show_string_l1	;wreg free
  3340                           
  3341                           ;ui.c: 126: lcd_disp_level(60);
  3342  005FEE  0E3C               	movlw	60
  3343  005FF0  EC32  F038         	call	_lcd_disp_level
  3344                           
  3345                           ;ui.c: 127: lcd_disp_refresh();
  3346  005FF4  EC91  F036         	call	_lcd_disp_refresh	;wreg free
  3347                           
  3348                           ;ui.c: 128: ticker_dly(1000);
  3349  005FF8  0E03               	movlw	3
  3350  005FFA  0100               	movlb	0	; () banked
  3351  005FFC  6F61               	movwf	(ticker_dly@ms+1)& (0+255),b
  3352  005FFE  0EE8               	movlw	232
  3353  006000  6F60               	movwf	ticker_dly@ms& (0+255),b
  3354  006002  EC4B  F03A         	call	_ticker_dly	;wreg free
  3355                           
  3356                           ;ui.c: 129: t8--;
  3357  006006  0100               	movlb	0	; () banked
  3358  006008  077D               	decf	ui_disp_start_cs600@t8& (0+255),f,b
  3359  00600A                     l13098:
  3360                           
  3361                           ; BSR set to: 0
  3362  00600A  0100               	movlb	0	; () banked
  3363  00600C  517D               	movf	ui_disp_start_cs600@t8& (0+255),w,b
  3364  00600E  0100               	movlb	0	; () banked
  3365  006010  B4D8               	btfsc	status,2,c
  3366  006012  0012               	return	
  3367  006014  D7D5               	goto	l13084
  3368  006016                     __end_of_ui_disp_start_cs600:
  3369                           	opt stack 0
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           postinc0	equ	0xFEE
  3375                           wreg	equ	0xFE8
  3376                           postdec1	equ	0xFE5
  3377                           plusw1	equ	0xFE3
  3378                           fsr1h	equ	0xFE2
  3379                           fsr1l	equ	0xFE1
  3380                           plusw2	equ	0xFDB
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function _ticker_dly *****************
  3384 ;; Defined at:
  3385 ;;		line 46 in file "src/soc/ticker.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  ms              2    0[BANK0 ] unsigned int 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    4
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_ui_disp_start_cs600
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text2
  3414  007496                     __ptext2:
  3415                           	opt stack 0
  3416  007496                     _ticker_dly:
  3417                           	opt stack 25
  3418                           
  3419                           ;ticker.c: 48: dlyTicker=0;
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;incstack = 0
  3423  007496  0E00               	movlw	0
  3424  007498  0101               	movlb	1	; () banked
  3425  00749A  6F6F               	movwf	(_dlyTicker+1)& (0+255),b
  3426  00749C  0E00               	movlw	0
  3427  00749E  6F6E               	movwf	_dlyTicker& (0+255),b
  3428                           
  3429                           ;ticker.c: 49: dlyTickerEn=1;
  3430  0074A0  0E01               	movlw	1
  3431  0074A2  6E2D               	movwf	_dlyTickerEn,c
  3432                           
  3433                           ;ticker.c: 50: while(dlyTicker<ms){
  3434  0074A4  D001               	goto	l12944
  3435  0074A6                     l1790:
  3436                           
  3437                           ; BSR set to: 1
  3438                           ;ticker.c: 51: __nop();
  3439  0074A6  F000               	nop	
  3440  0074A8                     l12944:
  3441  0074A8  0100               	movlb	0	; () banked
  3442  0074AA  5160               	movf	ticker_dly@ms& (0+255),w,b
  3443  0074AC  0101               	movlb	1	; () banked
  3444  0074AE  5D6E               	subwf	_dlyTicker& (0+255),w,b
  3445  0074B0  0100               	movlb	0	; () banked
  3446  0074B2  5161               	movf	(ticker_dly@ms+1)& (0+255),w,b
  3447  0074B4  0101               	movlb	1	; () banked
  3448  0074B6  596F               	subwfb	(_dlyTicker+1)& (0+255),w,b
  3449  0074B8  A0D8               	btfss	status,0,c
  3450  0074BA  D7F5               	goto	l1790
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;ticker.c: 52: }
  3454                           ;ticker.c: 53: dlyTickerEn=0;
  3455                           
  3456                           ; BSR set to: 1
  3457  0074BC  0E00               	movlw	0
  3458  0074BE  6E2D               	movwf	_dlyTickerEn,c
  3459                           
  3460                           ;ticker.c: 54: dlyTicker=0;
  3461  0074C0  0E00               	movlw	0
  3462  0074C2  0101               	movlb	1	; () banked
  3463  0074C4  6F6F               	movwf	(_dlyTicker+1)& (0+255),b
  3464  0074C6  0E00               	movlw	0
  3465  0074C8  6F6E               	movwf	_dlyTicker& (0+255),b
  3466                           
  3467                           ; BSR set to: 1
  3468  0074CA  0012               	return		;funcret
  3469  0074CC                     __end_of_ticker_dly:
  3470                           	opt stack 0
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           postinc0	equ	0xFEE
  3476                           wreg	equ	0xFE8
  3477                           postdec1	equ	0xFE5
  3478                           plusw1	equ	0xFE3
  3479                           fsr1h	equ	0xFE2
  3480                           fsr1l	equ	0xFE1
  3481                           plusw2	equ	0xFDB
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _m_int8_2_hex *****************
  3485 ;; Defined at:
  3486 ;;		line 243 in file "src/depend/m_string.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  str             2    0[BANK0 ] PTR unsigned char 
  3489 ;;		 -> ui_disp_rtc_mm_ss@buf(10), ui_disp_start_cs600@buf(6), 
  3490 ;;  b               1    2[BANK0 ] unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  t8              1   31[COMRAM] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3502 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;Total ram usage:        4 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    4
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_ui_disp_start_cs600
  3513 ;;		_ui_disp_rtc_mm_ss
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text3
  3518  006F56                     __ptext3:
  3519                           	opt stack 0
  3520  006F56                     _m_int8_2_hex:
  3521                           	opt stack 25
  3522                           
  3523                           ;m_string.c: 245: uint8_t t8;
  3524                           ;m_string.c: 246: t8=b;
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;incstack = 0
  3528  006F56  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  3529                           
  3530                           ;m_string.c: 247: t8>>=4;
  3531  006F5A  3A20               	swapf	m_int8_2_hex@t8,f,c
  3532  006F5C  0E0F               	movlw	15
  3533  006F5E  1620               	andwf	m_int8_2_hex@t8,f,c
  3534                           
  3535                           ;m_string.c: 248: t8 &= 0x0f;
  3536  006F60  0E0F               	movlw	15
  3537  006F62  1620               	andwf	m_int8_2_hex@t8,f,c
  3538                           
  3539                           ;m_string.c: 249: str[0]=HexTable[t8];
  3540  006F64  5020               	movf	m_int8_2_hex@t8,w,c
  3541  006F66  0D01               	mullw	1
  3542  006F68  0ED4               	movlw	low _HexTable
  3543  006F6A  24F3               	addwf	prodl,w,c
  3544  006F6C  6EF6               	movwf	tblptrl,c
  3545  006F6E  0EFB               	movlw	high _HexTable
  3546  006F70  20F4               	addwfc	prodh,w,c
  3547  006F72  6EF7               	movwf	tblptrh,c
  3548  006F74                     	if	0	;There are less than 3 active tblptr bytes
  3549  006F74                     	endif
  3550  006F74  C060  FFD9         	movff	m_int8_2_hex@str,fsr2l
  3551  006F78  C061  FFDA         	movff	m_int8_2_hex@str+1,fsr2h
  3552  006F7C  0008               	tblrd		*
  3553  006F7E  CFF5 FFDF          	movff	tablat,indf2
  3554                           
  3555                           ;m_string.c: 251: t8=b;
  3556  006F82  C062  F020         	movff	m_int8_2_hex@b,m_int8_2_hex@t8
  3557                           
  3558                           ;m_string.c: 253: t8 &= 0x0f;
  3559  006F86  0E0F               	movlw	15
  3560  006F88  1620               	andwf	m_int8_2_hex@t8,f,c
  3561                           
  3562                           ;m_string.c: 254: str[1]=HexTable[t8];
  3563  006F8A  5020               	movf	m_int8_2_hex@t8,w,c
  3564  006F8C  0D01               	mullw	1
  3565  006F8E  0ED4               	movlw	low _HexTable
  3566  006F90  24F3               	addwf	prodl,w,c
  3567  006F92  6EF6               	movwf	tblptrl,c
  3568  006F94  0EFB               	movlw	high _HexTable
  3569  006F96  20F4               	addwfc	prodh,w,c
  3570  006F98  6EF7               	movwf	tblptrh,c
  3571  006F9A                     	if	0	;There are less than 3 active tblptr bytes
  3572  006F9A                     	endif
  3573  006F9A  0100               	movlb	0	; () banked
  3574  006F9C  EE20 F001          	lfsr	2,1
  3575  006FA0  5160               	movf	m_int8_2_hex@str& (0+255),w,b
  3576  006FA2  26D9               	addwf	fsr2l,f,c
  3577  006FA4  5161               	movf	(m_int8_2_hex@str+1)& (0+255),w,b
  3578  006FA6  22DA               	addwfc	fsr2h,f,c
  3579  006FA8  0008               	tblrd		*
  3580  006FAA  CFF5 FFDF          	movff	tablat,indf2
  3581                           
  3582                           ; BSR set to: 0
  3583  006FAE  0012               	return		;funcret
  3584  006FB0                     __end_of_m_int8_2_hex:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           prodh	equ	0xFF4
  3591                           prodl	equ	0xFF3
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           postdec1	equ	0xFE5
  3595                           plusw1	equ	0xFE3
  3596                           fsr1h	equ	0xFE2
  3597                           fsr1l	equ	0xFE1
  3598                           indf2	equ	0xFDF
  3599                           plusw2	equ	0xFDB
  3600                           fsr2h	equ	0xFDA
  3601                           fsr2l	equ	0xFD9
  3602                           status	equ	0xFD8
  3603                           
  3604 ;; *************** function _lcd_show_string_l1 *****************
  3605 ;; Defined at:
  3606 ;;		line 524 in file "src/driver/lcd.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  str             2   19[BANK0 ] PTR unsigned char 
  3609 ;;		 -> ui_disp_start_cs600@buf(6), 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  t8              1   21[BANK0 ] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;Total ram usage:        3 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    8
  3628 ;; This function calls:
  3629 ;;		_lcd_show_chr
  3630 ;; This function is called by:
  3631 ;;		_ui_disp_start_cs600
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text4
  3636  007276                     __ptext4:
  3637                           	opt stack 0
  3638  007276                     _lcd_show_string_l1:
  3639                           	opt stack 21
  3640                           
  3641                           ;lcd.c: 526: uint8_t t8=0;
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;incstack = 0
  3645  007276  0E00               	movlw	0
  3646  007278  0100               	movlb	0	; () banked
  3647  00727A  6F75               	movwf	lcd_show_string_l1@t8& (0+255),b
  3648                           
  3649                           ;lcd.c: 527: while(*str!='\0' && t8<4){
  3650  00727C  D011               	goto	l12914
  3651  00727E                     l12908:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;lcd.c: 528: lcd_show_chr(t8+4,*str);
  3655  00727E  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  3656  007282  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  3657  007286  50DF               	movf	indf2,w,c
  3658  007288  0100               	movlb	0	; () banked
  3659  00728A  6F70               	movwf	lcd_show_chr@chr& (0+255),b
  3660  00728C  0100               	movlb	0	; () banked
  3661  00728E  5175               	movf	lcd_show_string_l1@t8& (0+255),w,b
  3662  007290  0F04               	addlw	4
  3663  007292  EC5A  F030         	call	_lcd_show_chr
  3664                           
  3665                           ;lcd.c: 529: str++;
  3666  007296  0100               	movlb	0	; () banked
  3667  007298  4B73               	infsnz	lcd_show_string_l1@str& (0+255),f,b
  3668  00729A  2B74               	incf	(lcd_show_string_l1@str+1)& (0+255),f,b
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;lcd.c: 530: t8++;
  3672  00729C  0100               	movlb	0	; () banked
  3673  00729E  2B75               	incf	lcd_show_string_l1@t8& (0+255),f,b
  3674  0072A0                     l12914:
  3675                           
  3676                           ; BSR set to: 0
  3677  0072A0  C073  FFD9         	movff	lcd_show_string_l1@str,fsr2l
  3678  0072A4  C074  FFDA         	movff	lcd_show_string_l1@str+1,fsr2h
  3679  0072A8  50DF               	movf	indf2,w,c
  3680  0072AA  B4D8               	btfsc	status,2,c
  3681  0072AC  0012               	return	
  3682                           
  3683                           ; BSR set to: 0
  3684  0072AE  0E03               	movlw	3
  3685  0072B0  0100               	movlb	0	; () banked
  3686  0072B2  6575               	cpfsgt	lcd_show_string_l1@t8& (0+255),b
  3687  0072B4  D7E4               	goto	l12908
  3688  0072B6  0012               	return	
  3689  0072B8                     __end_of_lcd_show_string_l1:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           postinc0	equ	0xFEE
  3698                           wreg	equ	0xFE8
  3699                           postdec1	equ	0xFE5
  3700                           plusw1	equ	0xFE3
  3701                           fsr1h	equ	0xFE2
  3702                           fsr1l	equ	0xFE1
  3703                           indf2	equ	0xFDF
  3704                           plusw2	equ	0xFDB
  3705                           fsr2h	equ	0xFDA
  3706                           fsr2l	equ	0xFD9
  3707                           status	equ	0xFD8
  3708                           
  3709 ;; *************** function _lcd_show_string_l0 *****************
  3710 ;; Defined at:
  3711 ;;		line 514 in file "src/driver/lcd.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  str             2   19[BANK0 ] PTR unsigned char 
  3714 ;;		 -> STR_1(5), 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  t8              1   21[BANK0 ] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;Total ram usage:        3 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    8
  3733 ;; This function calls:
  3734 ;;		_lcd_show_chr
  3735 ;; This function is called by:
  3736 ;;		_ui_disp_start_cs600
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text5
  3741  0071EE                     __ptext5:
  3742                           	opt stack 0
  3743  0071EE                     _lcd_show_string_l0:
  3744                           	opt stack 21
  3745                           
  3746                           ;lcd.c: 516: uint8_t t8=0;
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;incstack = 0
  3750  0071EE  0E00               	movlw	0
  3751  0071F0  0100               	movlb	0	; () banked
  3752  0071F2  6F75               	movwf	lcd_show_string_l0@t8& (0+255),b
  3753                           
  3754                           ;lcd.c: 517: while(*str!='\0' && t8<4){
  3755  0071F4  D010               	goto	l12886
  3756  0071F6                     l12880:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;lcd.c: 518: lcd_show_chr(t8,*str);
  3760  0071F6  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  3761  0071FA  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  3762  0071FE                     	if	0	;tblptru may be non-zero
  3763  0071FE                     	endif
  3764  0071FE                     	if	0	;tblptru may be non-zero
  3765  0071FE                     	endif
  3766  0071FE  0008               	tblrd		*
  3767  007200  CFF5 F070          	movff	tablat,lcd_show_chr@chr
  3768  007204  0100               	movlb	0	; () banked
  3769  007206  5175               	movf	lcd_show_string_l0@t8& (0+255),w,b
  3770  007208  EC5A  F030         	call	_lcd_show_chr
  3771                           
  3772                           ;lcd.c: 519: str++;
  3773  00720C  0100               	movlb	0	; () banked
  3774  00720E  4B73               	infsnz	lcd_show_string_l0@str& (0+255),f,b
  3775  007210  2B74               	incf	(lcd_show_string_l0@str+1)& (0+255),f,b
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;lcd.c: 520: t8++;
  3779  007212  0100               	movlb	0	; () banked
  3780  007214  2B75               	incf	lcd_show_string_l0@t8& (0+255),f,b
  3781  007216                     l12886:
  3782                           
  3783                           ; BSR set to: 0
  3784  007216  C073  FFF6         	movff	lcd_show_string_l0@str,tblptrl
  3785  00721A  C074  FFF7         	movff	lcd_show_string_l0@str+1,tblptrh
  3786  00721E                     	if	0	;tblptru may be non-zero
  3787  00721E                     	endif
  3788  00721E                     	if	0	;tblptru may be non-zero
  3789  00721E                     	endif
  3790  00721E  0008               	tblrd		*
  3791  007220  50F5               	movf	tablat,w,c
  3792  007222  0900               	iorlw	0
  3793  007224  B4D8               	btfsc	status,2,c
  3794  007226  0012               	return	
  3795                           
  3796                           ; BSR set to: 0
  3797  007228  0E03               	movlw	3
  3798  00722A  0100               	movlb	0	; () banked
  3799  00722C  6575               	cpfsgt	lcd_show_string_l0@t8& (0+255),b
  3800  00722E  D7E3               	goto	l12880
  3801  007230  0012               	return	
  3802  007232                     __end_of_lcd_show_string_l0:
  3803                           	opt stack 0
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           prodh	equ	0xFF4
  3809                           prodl	equ	0xFF3
  3810                           postinc0	equ	0xFEE
  3811                           wreg	equ	0xFE8
  3812                           postdec1	equ	0xFE5
  3813                           plusw1	equ	0xFE3
  3814                           fsr1h	equ	0xFE2
  3815                           fsr1l	equ	0xFE1
  3816                           indf2	equ	0xFDF
  3817                           plusw2	equ	0xFDB
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8
  3821                           
  3822 ;; *************** function _lcd_disp_logo *****************
  3823 ;; Defined at:
  3824 ;;		line 378 in file "src/driver/lcd.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  show            1    wreg     unsigned char 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  show            1   31[COMRAM] unsigned char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;Total ram usage:        1 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    6
  3845 ;; This function calls:
  3846 ;;		_lcd_set_com_seg
  3847 ;; This function is called by:
  3848 ;;		_ui_disp_start_cs600
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text6
  3853  00760A                     __ptext6:
  3854                           	opt stack 0
  3855  00760A                     _lcd_disp_logo:
  3856                           	opt stack 23
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;incstack = 0
  3860                           ;lcd_disp_logo@show stored from wreg
  3861  00760A  6E20               	movwf	lcd_disp_logo@show,c
  3862                           
  3863                           ;lcd.c: 380: if(show)
  3864  00760C  5020               	movf	lcd_disp_logo@show,w,c
  3865  00760E  B4D8               	btfsc	status,2,c
  3866  007610  D00A               	goto	l12894
  3867                           
  3868                           ;lcd.c: 381: lcd_set_com_seg(2,13,1);
  3869  007612  0E0D               	movlw	13
  3870  007614  0100               	movlb	0	; () banked
  3871  007616  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  3872  007618  0E01               	movlw	1
  3873  00761A  0100               	movlb	0	; () banked
  3874  00761C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  3875  00761E  0E02               	movlw	2
  3876  007620  EC28  F02C         	call	_lcd_set_com_seg
  3877  007624  0012               	return	
  3878  007626                     l12894:
  3879                           
  3880                           ;lcd.c: 382: else
  3881                           ;lcd.c: 383: lcd_set_com_seg(2,13,0);
  3882  007626  0E0D               	movlw	13
  3883  007628  0100               	movlb	0	; () banked
  3884  00762A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  3885  00762C  0E00               	movlw	0
  3886  00762E  0100               	movlb	0	; () banked
  3887  007630  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  3888  007632  0E02               	movlw	2
  3889  007634  EC28  F02C         	call	_lcd_set_com_seg
  3890  007638  0012               	return	
  3891  00763A                     __end_of_lcd_disp_logo:
  3892                           	opt stack 0
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           postinc0	equ	0xFEE
  3900                           wreg	equ	0xFE8
  3901                           postdec1	equ	0xFE5
  3902                           plusw1	equ	0xFE3
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           plusw2	equ	0xFDB
  3907                           fsr2h	equ	0xFDA
  3908                           fsr2l	equ	0xFD9
  3909                           status	equ	0xFD8
  3910                           
  3911 ;; *************** function _lcd_disp_level *****************
  3912 ;; Defined at:
  3913 ;;		line 118 in file "src/driver/lcd.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  level           1    wreg     unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  level           1   18[BANK0 ] unsigned char 
  3918 ;;  i               1   19[BANK0 ] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    7
  3935 ;; This function calls:
  3936 ;;		_lcd_disp_level_bar
  3937 ;; This function is called by:
  3938 ;;		_ui_disp_start_cs600
  3939 ;;		_main
  3940 ;;		_ui_disp_rtc_mm_ss
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text7
  3945  007064                     __ptext7:
  3946                           	opt stack 0
  3947  007064                     _lcd_disp_level:
  3948                           	opt stack 22
  3949                           
  3950                           ;incstack = 0
  3951                           ;lcd_disp_level@level stored from wreg
  3952  007064  0100               	movlb	0	; () banked
  3953  007066  6F72               	movwf	lcd_disp_level@level& (0+255),b
  3954                           
  3955                           ;lcd.c: 120: uint8_t i;
  3956                           ;lcd.c: 121: if(level>=99)level=99;
  3957  007068  0E62               	movlw	98
  3958  00706A  0100               	movlb	0	; () banked
  3959  00706C  6572               	cpfsgt	lcd_disp_level@level& (0+255),b
  3960  00706E  D003               	goto	l12922
  3961                           
  3962                           ; BSR set to: 0
  3963  007070  0E63               	movlw	99
  3964  007072  0100               	movlb	0	; () banked
  3965  007074  6F72               	movwf	lcd_disp_level@level& (0+255),b
  3966  007076                     l12922:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;lcd.c: 122: level/=2;
  3970  007076  0100               	movlb	0	; () banked
  3971  007078  90D8               	bcf	status,0,c
  3972  00707A  3372               	rrcf	lcd_disp_level@level& (0+255),f,b
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;lcd.c: 123: for(i=0;i<level;i++){
  3976  00707C  0E00               	movlw	0
  3977  00707E  0100               	movlb	0	; () banked
  3978  007080  6F73               	movwf	lcd_disp_level@i& (0+255),b
  3979  007082  D008               	goto	l12930
  3980  007084                     l12926:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;lcd.c: 124: lcd_disp_level_bar(i,1);
  3984  007084  0E01               	movlw	1
  3985  007086  6E20               	movwf	lcd_disp_level_bar@show,c
  3986  007088  0100               	movlb	0	; () banked
  3987  00708A  5173               	movf	lcd_disp_level@i& (0+255),w,b
  3988  00708C  ECD7  F006         	call	_lcd_disp_level_bar
  3989  007090  0100               	movlb	0	; () banked
  3990  007092  2B73               	incf	lcd_disp_level@i& (0+255),f,b
  3991  007094                     l12930:
  3992                           
  3993                           ; BSR set to: 0
  3994  007094  0100               	movlb	0	; () banked
  3995  007096  5172               	movf	lcd_disp_level@level& (0+255),w,b
  3996  007098  0100               	movlb	0	; () banked
  3997  00709A  5D73               	subwf	lcd_disp_level@i& (0+255),w,b
  3998  00709C  A0D8               	btfss	status,0,c
  3999  00709E  D7F2               	goto	l12926
  4000  0070A0                     l12932:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;lcd.c: 125: }
  4004                           ;lcd.c: 126: for(;i<50;i++){
  4005  0070A0  0E31               	movlw	49
  4006  0070A2  0100               	movlb	0	; () banked
  4007  0070A4  6573               	cpfsgt	lcd_disp_level@i& (0+255),b
  4008  0070A6  D001               	goto	l12936
  4009  0070A8  0012               	return	
  4010  0070AA                     l12936:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;lcd.c: 127: lcd_disp_level_bar(i,0);
  4014  0070AA  0E00               	movlw	0
  4015  0070AC  6E20               	movwf	lcd_disp_level_bar@show,c
  4016  0070AE  0100               	movlb	0	; () banked
  4017  0070B0  5173               	movf	lcd_disp_level@i& (0+255),w,b
  4018  0070B2  ECD7  F006         	call	_lcd_disp_level_bar
  4019  0070B6  0100               	movlb	0	; () banked
  4020  0070B8  2B73               	incf	lcd_disp_level@i& (0+255),f,b
  4021  0070BA  D7F2               	goto	l12932
  4022  0070BC                     __end_of_lcd_disp_level:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           postinc0	equ	0xFEE
  4031                           wreg	equ	0xFE8
  4032                           postdec1	equ	0xFE5
  4033                           plusw1	equ	0xFE3
  4034                           fsr1h	equ	0xFE2
  4035                           fsr1l	equ	0xFE1
  4036                           indf2	equ	0xFDF
  4037                           plusw2	equ	0xFDB
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function _lcd_disp_level_bar *****************
  4043 ;; Defined at:
  4044 ;;		line 46 in file "src/driver/lcd.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  bar             1    wreg     unsigned char 
  4047 ;;  show            1   31[COMRAM] unsigned char 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  bar             1   17[BANK0 ] unsigned char 
  4050 ;;  __bar           1   16[BANK0 ] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4060 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;Total ram usage:        3 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    6
  4067 ;; This function calls:
  4068 ;;		_lcd_set_com_seg
  4069 ;; This function is called by:
  4070 ;;		_lcd_disp_level
  4071 ;;		_lcd_disp_level_off
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text8
  4076  000DAE                     __ptext8:
  4077                           	opt stack 0
  4078  000DAE                     _lcd_disp_level_bar:
  4079                           	opt stack 22
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;incstack = 0
  4083                           ;lcd_disp_level_bar@bar stored from wreg
  4084  000DAE  0100               	movlb	0	; () banked
  4085  000DB0  6F71               	movwf	lcd_disp_level_bar@bar& (0+255),b
  4086                           
  4087                           ;lcd.c: 49: uint8_t __bar;
  4088                           ;lcd.c: 50: if(bar>49)return;
  4089  000DB2  0E31               	movlw	49
  4090  000DB4  0100               	movlb	0	; () banked
  4091  000DB6  6571               	cpfsgt	lcd_disp_level_bar@bar& (0+255),b
  4092  000DB8  D001               	goto	l12660
  4093  000DBA  0012               	return	
  4094  000DBC                     l12660:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;lcd.c: 51: __bar=49-bar;
  4098  000DBC  0100               	movlb	0	; () banked
  4099  000DBE  5171               	movf	lcd_disp_level_bar@bar& (0+255),w,b
  4100  000DC0  0800               	sublw	0
  4101  000DC2  0F31               	addlw	49
  4102  000DC4  0100               	movlb	0	; () banked
  4103  000DC6  6F70               	movwf	lcd_disp_level_bar@__bar& (0+255),b
  4104                           
  4105                           ;lcd.c: 52: switch(__bar){
  4106  000DC8  D1C2               	goto	l12764
  4107  000DCA                     l12662:
  4108                           
  4109                           ; BSR set to: 0
  4110  000DCA  0E2E               	movlw	46
  4111  000DCC  0100               	movlb	0	; () banked
  4112  000DCE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4113  000DD0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4114  000DD4  0E00               	movlw	0
  4115  000DD6  EC28  F02C         	call	_lcd_set_com_seg
  4116  000DDA  0012               	return	
  4117  000DDC                     l12664:
  4118  000DDC  0E2E               	movlw	46
  4119  000DDE  0100               	movlb	0	; () banked
  4120  000DE0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4121  000DE2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4122  000DE6  0E01               	movlw	1
  4123  000DE8  EC28  F02C         	call	_lcd_set_com_seg
  4124  000DEC  0012               	return	
  4125  000DEE                     l12666:
  4126  000DEE  0E2E               	movlw	46
  4127  000DF0  0100               	movlb	0	; () banked
  4128  000DF2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4129  000DF4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4130  000DF8  0E02               	movlw	2
  4131  000DFA  EC28  F02C         	call	_lcd_set_com_seg
  4132  000DFE  0012               	return	
  4133  000E00                     l12668:
  4134  000E00  0E2E               	movlw	46
  4135  000E02  0100               	movlb	0	; () banked
  4136  000E04  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4137  000E06  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4138  000E0A  0E03               	movlw	3
  4139  000E0C  EC28  F02C         	call	_lcd_set_com_seg
  4140  000E10  0012               	return	
  4141  000E12                     l12670:
  4142  000E12  0E2F               	movlw	47
  4143  000E14  0100               	movlb	0	; () banked
  4144  000E16  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4145  000E18  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4146  000E1C  0E03               	movlw	3
  4147  000E1E  EC28  F02C         	call	_lcd_set_com_seg
  4148  000E22  0012               	return	
  4149  000E24                     l12672:
  4150  000E24  0E2F               	movlw	47
  4151  000E26  0100               	movlb	0	; () banked
  4152  000E28  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4153  000E2A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4154  000E2E  0E02               	movlw	2
  4155  000E30  EC28  F02C         	call	_lcd_set_com_seg
  4156  000E34  0012               	return	
  4157  000E36                     l12674:
  4158  000E36  0E2F               	movlw	47
  4159  000E38  0100               	movlb	0	; () banked
  4160  000E3A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4161  000E3C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4162  000E40  0E01               	movlw	1
  4163  000E42  EC28  F02C         	call	_lcd_set_com_seg
  4164  000E46  0012               	return	
  4165  000E48                     l12676:
  4166  000E48  0E2F               	movlw	47
  4167  000E4A  0100               	movlb	0	; () banked
  4168  000E4C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4169  000E4E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4170  000E52  0E00               	movlw	0
  4171  000E54  EC28  F02C         	call	_lcd_set_com_seg
  4172  000E58  0012               	return	
  4173  000E5A                     l12678:
  4174  000E5A  0E1F               	movlw	31
  4175  000E5C  0100               	movlb	0	; () banked
  4176  000E5E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4177  000E60  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4178  000E64  0E00               	movlw	0
  4179  000E66  EC28  F02C         	call	_lcd_set_com_seg
  4180  000E6A  0012               	return	
  4181  000E6C                     l12680:
  4182  000E6C  0E1F               	movlw	31
  4183  000E6E  0100               	movlb	0	; () banked
  4184  000E70  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4185  000E72  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4186  000E76  0E01               	movlw	1
  4187  000E78  EC28  F02C         	call	_lcd_set_com_seg
  4188  000E7C  0012               	return	
  4189  000E7E                     l12682:
  4190  000E7E  0E1F               	movlw	31
  4191  000E80  0100               	movlb	0	; () banked
  4192  000E82  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4193  000E84  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4194  000E88  0E02               	movlw	2
  4195  000E8A  EC28  F02C         	call	_lcd_set_com_seg
  4196  000E8E  0012               	return	
  4197  000E90                     l12684:
  4198  000E90  0E1F               	movlw	31
  4199  000E92  0100               	movlb	0	; () banked
  4200  000E94  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4201  000E96  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4202  000E9A  0E03               	movlw	3
  4203  000E9C  EC28  F02C         	call	_lcd_set_com_seg
  4204  000EA0  0012               	return	
  4205  000EA2                     l12686:
  4206  000EA2  0E00               	movlw	0
  4207  000EA4  0100               	movlb	0	; () banked
  4208  000EA6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4209  000EA8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4210  000EAC  0E03               	movlw	3
  4211  000EAE  EC28  F02C         	call	_lcd_set_com_seg
  4212  000EB2  0012               	return	
  4213  000EB4                     l12688:
  4214  000EB4  0E00               	movlw	0
  4215  000EB6  0100               	movlb	0	; () banked
  4216  000EB8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4217  000EBA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4218  000EBE  0E02               	movlw	2
  4219  000EC0  EC28  F02C         	call	_lcd_set_com_seg
  4220  000EC4  0012               	return	
  4221  000EC6                     l12690:
  4222  000EC6  0E00               	movlw	0
  4223  000EC8  0100               	movlb	0	; () banked
  4224  000ECA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4225  000ECC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4226  000ED0  0E01               	movlw	1
  4227  000ED2  EC28  F02C         	call	_lcd_set_com_seg
  4228  000ED6  0012               	return	
  4229  000ED8                     l12692:
  4230  000ED8  0E00               	movlw	0
  4231  000EDA  0100               	movlb	0	; () banked
  4232  000EDC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4233  000EDE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4234  000EE2  0E00               	movlw	0
  4235  000EE4  EC28  F02C         	call	_lcd_set_com_seg
  4236  000EE8  0012               	return	
  4237  000EEA                     l12694:
  4238  000EEA  0E01               	movlw	1
  4239  000EEC  0100               	movlb	0	; () banked
  4240  000EEE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4241  000EF0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4242  000EF4  0E00               	movlw	0
  4243  000EF6  EC28  F02C         	call	_lcd_set_com_seg
  4244  000EFA  0012               	return	
  4245  000EFC                     l12696:
  4246  000EFC  0E01               	movlw	1
  4247  000EFE  0100               	movlb	0	; () banked
  4248  000F00  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4249  000F02  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4250  000F06  0E01               	movlw	1
  4251  000F08  EC28  F02C         	call	_lcd_set_com_seg
  4252  000F0C  0012               	return	
  4253  000F0E                     l12698:
  4254  000F0E  0E01               	movlw	1
  4255  000F10  0100               	movlb	0	; () banked
  4256  000F12  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4257  000F14  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4258  000F18  0E02               	movlw	2
  4259  000F1A  EC28  F02C         	call	_lcd_set_com_seg
  4260  000F1E  0012               	return	
  4261  000F20                     l12700:
  4262  000F20  0E01               	movlw	1
  4263  000F22  0100               	movlb	0	; () banked
  4264  000F24  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4265  000F26  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4266  000F2A  0E03               	movlw	3
  4267  000F2C  EC28  F02C         	call	_lcd_set_com_seg
  4268  000F30  0012               	return	
  4269  000F32                     l12702:
  4270  000F32  0E02               	movlw	2
  4271  000F34  0100               	movlb	0	; () banked
  4272  000F36  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4273  000F38  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4274  000F3C  0E03               	movlw	3
  4275  000F3E  EC28  F02C         	call	_lcd_set_com_seg
  4276  000F42  0012               	return	
  4277  000F44                     l12704:
  4278  000F44  0E02               	movlw	2
  4279  000F46  0100               	movlb	0	; () banked
  4280  000F48  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4281  000F4A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4282  000F4E  0E02               	movlw	2
  4283  000F50  EC28  F02C         	call	_lcd_set_com_seg
  4284  000F54  0012               	return	
  4285  000F56                     l12706:
  4286  000F56  0E02               	movlw	2
  4287  000F58  0100               	movlb	0	; () banked
  4288  000F5A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4289  000F5C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4290  000F60  0E01               	movlw	1
  4291  000F62  EC28  F02C         	call	_lcd_set_com_seg
  4292  000F66  0012               	return	
  4293  000F68                     l12708:
  4294  000F68  0E02               	movlw	2
  4295  000F6A  0100               	movlb	0	; () banked
  4296  000F6C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4297  000F6E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4298  000F72  0E00               	movlw	0
  4299  000F74  EC28  F02C         	call	_lcd_set_com_seg
  4300  000F78  0012               	return	
  4301  000F7A                     l12710:
  4302  000F7A  0E03               	movlw	3
  4303  000F7C  0100               	movlb	0	; () banked
  4304  000F7E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4305  000F80  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4306  000F84  0E00               	movlw	0
  4307  000F86  EC28  F02C         	call	_lcd_set_com_seg
  4308  000F8A  0012               	return	
  4309  000F8C                     l12712:
  4310  000F8C  0E03               	movlw	3
  4311  000F8E  0100               	movlb	0	; () banked
  4312  000F90  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4313  000F92  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4314  000F96  0E01               	movlw	1
  4315  000F98  EC28  F02C         	call	_lcd_set_com_seg
  4316  000F9C  0012               	return	
  4317  000F9E                     l12714:
  4318  000F9E  0E03               	movlw	3
  4319  000FA0  0100               	movlb	0	; () banked
  4320  000FA2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4321  000FA4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4322  000FA8  0E02               	movlw	2
  4323  000FAA  EC28  F02C         	call	_lcd_set_com_seg
  4324  000FAE  0012               	return	
  4325  000FB0                     l12716:
  4326  000FB0  0E03               	movlw	3
  4327  000FB2  0100               	movlb	0	; () banked
  4328  000FB4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4329  000FB6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4330  000FBA  0E03               	movlw	3
  4331  000FBC  EC28  F02C         	call	_lcd_set_com_seg
  4332  000FC0  0012               	return	
  4333  000FC2                     l12718:
  4334  000FC2  0E04               	movlw	4
  4335  000FC4  0100               	movlb	0	; () banked
  4336  000FC6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4337  000FC8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4338  000FCC  0E03               	movlw	3
  4339  000FCE  EC28  F02C         	call	_lcd_set_com_seg
  4340  000FD2  0012               	return	
  4341  000FD4                     l12720:
  4342  000FD4  0E04               	movlw	4
  4343  000FD6  0100               	movlb	0	; () banked
  4344  000FD8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4345  000FDA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4346  000FDE  0E02               	movlw	2
  4347  000FE0  EC28  F02C         	call	_lcd_set_com_seg
  4348  000FE4  0012               	return	
  4349  000FE6                     l12722:
  4350  000FE6  0E04               	movlw	4
  4351  000FE8  0100               	movlb	0	; () banked
  4352  000FEA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4353  000FEC  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4354  000FF0  0E01               	movlw	1
  4355  000FF2  EC28  F02C         	call	_lcd_set_com_seg
  4356  000FF6  0012               	return	
  4357  000FF8                     l12724:
  4358  000FF8  0E04               	movlw	4
  4359  000FFA  0100               	movlb	0	; () banked
  4360  000FFC  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4361  000FFE  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4362  001002  0E00               	movlw	0
  4363  001004  EC28  F02C         	call	_lcd_set_com_seg
  4364  001008  0012               	return	
  4365  00100A                     l12726:
  4366  00100A  0E05               	movlw	5
  4367  00100C  0100               	movlb	0	; () banked
  4368  00100E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4369  001010  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4370  001014  0E00               	movlw	0
  4371  001016  EC28  F02C         	call	_lcd_set_com_seg
  4372  00101A  0012               	return	
  4373  00101C                     l12728:
  4374  00101C  0E05               	movlw	5
  4375  00101E  0100               	movlb	0	; () banked
  4376  001020  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4377  001022  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4378  001026  0E01               	movlw	1
  4379  001028  EC28  F02C         	call	_lcd_set_com_seg
  4380  00102C  0012               	return	
  4381  00102E                     l12730:
  4382  00102E  0E05               	movlw	5
  4383  001030  0100               	movlb	0	; () banked
  4384  001032  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4385  001034  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4386  001038  0E02               	movlw	2
  4387  00103A  EC28  F02C         	call	_lcd_set_com_seg
  4388  00103E  0012               	return	
  4389  001040                     l12732:
  4390  001040  0E05               	movlw	5
  4391  001042  0100               	movlb	0	; () banked
  4392  001044  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4393  001046  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4394  00104A  0E03               	movlw	3
  4395  00104C  EC28  F02C         	call	_lcd_set_com_seg
  4396  001050  0012               	return	
  4397  001052                     l12734:
  4398  001052  0E06               	movlw	6
  4399  001054  0100               	movlb	0	; () banked
  4400  001056  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4401  001058  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4402  00105C  0E03               	movlw	3
  4403  00105E  EC28  F02C         	call	_lcd_set_com_seg
  4404  001062  0012               	return	
  4405  001064                     l12736:
  4406  001064  0E06               	movlw	6
  4407  001066  0100               	movlb	0	; () banked
  4408  001068  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4409  00106A  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4410  00106E  0E02               	movlw	2
  4411  001070  EC28  F02C         	call	_lcd_set_com_seg
  4412  001074  0012               	return	
  4413  001076                     l12738:
  4414  001076  0E06               	movlw	6
  4415  001078  0100               	movlb	0	; () banked
  4416  00107A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4417  00107C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4418  001080  0E01               	movlw	1
  4419  001082  EC28  F02C         	call	_lcd_set_com_seg
  4420  001086  0012               	return	
  4421  001088                     l12740:
  4422  001088  0E06               	movlw	6
  4423  00108A  0100               	movlb	0	; () banked
  4424  00108C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4425  00108E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4426  001092  0E00               	movlw	0
  4427  001094  EC28  F02C         	call	_lcd_set_com_seg
  4428  001098  0012               	return	
  4429  00109A                     l12742:
  4430  00109A  0E07               	movlw	7
  4431  00109C  0100               	movlb	0	; () banked
  4432  00109E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4433  0010A0  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4434  0010A4  0E00               	movlw	0
  4435  0010A6  EC28  F02C         	call	_lcd_set_com_seg
  4436  0010AA  0012               	return	
  4437  0010AC                     l12744:
  4438  0010AC  0E07               	movlw	7
  4439  0010AE  0100               	movlb	0	; () banked
  4440  0010B0  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4441  0010B2  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4442  0010B6  0E01               	movlw	1
  4443  0010B8  EC28  F02C         	call	_lcd_set_com_seg
  4444  0010BC  0012               	return	
  4445  0010BE                     l12746:
  4446  0010BE  0E07               	movlw	7
  4447  0010C0  0100               	movlb	0	; () banked
  4448  0010C2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4449  0010C4  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4450  0010C8  0E02               	movlw	2
  4451  0010CA  EC28  F02C         	call	_lcd_set_com_seg
  4452  0010CE  0012               	return	
  4453  0010D0                     l12748:
  4454  0010D0  0E07               	movlw	7
  4455  0010D2  0100               	movlb	0	; () banked
  4456  0010D4  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4457  0010D6  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4458  0010DA  0E03               	movlw	3
  4459  0010DC  EC28  F02C         	call	_lcd_set_com_seg
  4460  0010E0  0012               	return	
  4461  0010E2                     l12750:
  4462  0010E2  0E21               	movlw	33
  4463  0010E4  0100               	movlb	0	; () banked
  4464  0010E6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4465  0010E8  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4466  0010EC  0E03               	movlw	3
  4467  0010EE  EC28  F02C         	call	_lcd_set_com_seg
  4468  0010F2  0012               	return	
  4469  0010F4                     l12752:
  4470  0010F4  0E21               	movlw	33
  4471  0010F6  0100               	movlb	0	; () banked
  4472  0010F8  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4473  0010FA  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4474  0010FE  0E02               	movlw	2
  4475  001100  EC28  F02C         	call	_lcd_set_com_seg
  4476  001104  0012               	return	
  4477  001106                     l12754:
  4478  001106  0E21               	movlw	33
  4479  001108  0100               	movlb	0	; () banked
  4480  00110A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4481  00110C  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4482  001110  0E01               	movlw	1
  4483  001112  EC28  F02C         	call	_lcd_set_com_seg
  4484  001116  0012               	return	
  4485  001118                     l12756:
  4486  001118  0E21               	movlw	33
  4487  00111A  0100               	movlb	0	; () banked
  4488  00111C  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4489  00111E  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4490  001122  0E00               	movlw	0
  4491  001124  EC28  F02C         	call	_lcd_set_com_seg
  4492  001128  0012               	return	
  4493  00112A                     l12758:
  4494  00112A  0E22               	movlw	34
  4495  00112C  0100               	movlb	0	; () banked
  4496  00112E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4497  001130  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4498  001134  0E00               	movlw	0
  4499  001136  EC28  F02C         	call	_lcd_set_com_seg
  4500  00113A  0012               	return	
  4501  00113C                     l12760:
  4502  00113C  0E22               	movlw	34
  4503  00113E  0100               	movlb	0	; () banked
  4504  001140  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  4505  001142  C020  F069         	movff	lcd_disp_level_bar@show,lcd_set_com_seg@show
  4506  001146  0E01               	movlw	1
  4507  001148  EC28  F02C         	call	_lcd_set_com_seg
  4508                           
  4509                           ;lcd.c: 115: }
  4510  00114C  0012               	return	
  4511  00114E                     l12764:
  4512  00114E  0100               	movlb	0	; () banked
  4513  001150  5170               	movf	lcd_disp_level_bar@__bar& (0+255),w,b
  4514                           
  4515                           ; Switch size 1, requested type "space"
  4516                           ; Number of cases is 50, Range of values is 0 to 49
  4517                           ; switch strategies available:
  4518                           ; Name         Instructions Cycles
  4519                           ; simple_byte          151    76 (average)
  4520                           ;	Chosen strategy is simple_byte
  4521  001152  0A00               	xorlw	0	; case 0
  4522  001154  B4D8               	btfsc	status,2,c
  4523  001156  D639               	goto	l12662
  4524  001158  0A01               	xorlw	1	; case 1
  4525  00115A  B4D8               	btfsc	status,2,c
  4526  00115C  D63F               	goto	l12664
  4527  00115E  0A03               	xorlw	3	; case 2
  4528  001160  B4D8               	btfsc	status,2,c
  4529  001162  D645               	goto	l12666
  4530  001164  0A01               	xorlw	1	; case 3
  4531  001166  B4D8               	btfsc	status,2,c
  4532  001168  D64B               	goto	l12668
  4533  00116A  0A07               	xorlw	7	; case 4
  4534  00116C  B4D8               	btfsc	status,2,c
  4535  00116E  D651               	goto	l12670
  4536  001170  0A01               	xorlw	1	; case 5
  4537  001172  B4D8               	btfsc	status,2,c
  4538  001174  D657               	goto	l12672
  4539  001176  0A03               	xorlw	3	; case 6
  4540  001178  B4D8               	btfsc	status,2,c
  4541  00117A  D65D               	goto	l12674
  4542  00117C  0A01               	xorlw	1	; case 7
  4543  00117E  B4D8               	btfsc	status,2,c
  4544  001180  D663               	goto	l12676
  4545  001182  0A0F               	xorlw	15	; case 8
  4546  001184  B4D8               	btfsc	status,2,c
  4547  001186  D669               	goto	l12678
  4548  001188  0A01               	xorlw	1	; case 9
  4549  00118A  B4D8               	btfsc	status,2,c
  4550  00118C  D66F               	goto	l12680
  4551  00118E  0A03               	xorlw	3	; case 10
  4552  001190  B4D8               	btfsc	status,2,c
  4553  001192  D675               	goto	l12682
  4554  001194  0A01               	xorlw	1	; case 11
  4555  001196  B4D8               	btfsc	status,2,c
  4556  001198  D67B               	goto	l12684
  4557  00119A  0A07               	xorlw	7	; case 12
  4558  00119C  B4D8               	btfsc	status,2,c
  4559  00119E  D681               	goto	l12686
  4560  0011A0  0A01               	xorlw	1	; case 13
  4561  0011A2  B4D8               	btfsc	status,2,c
  4562  0011A4  D687               	goto	l12688
  4563  0011A6  0A03               	xorlw	3	; case 14
  4564  0011A8  B4D8               	btfsc	status,2,c
  4565  0011AA  D68D               	goto	l12690
  4566  0011AC  0A01               	xorlw	1	; case 15
  4567  0011AE  B4D8               	btfsc	status,2,c
  4568  0011B0  D693               	goto	l12692
  4569  0011B2  0A1F               	xorlw	31	; case 16
  4570  0011B4  B4D8               	btfsc	status,2,c
  4571  0011B6  D699               	goto	l12694
  4572  0011B8  0A01               	xorlw	1	; case 17
  4573  0011BA  B4D8               	btfsc	status,2,c
  4574  0011BC  D69F               	goto	l12696
  4575  0011BE  0A03               	xorlw	3	; case 18
  4576  0011C0  B4D8               	btfsc	status,2,c
  4577  0011C2  D6A5               	goto	l12698
  4578  0011C4  0A01               	xorlw	1	; case 19
  4579  0011C6  B4D8               	btfsc	status,2,c
  4580  0011C8  D6AB               	goto	l12700
  4581  0011CA  0A07               	xorlw	7	; case 20
  4582  0011CC  B4D8               	btfsc	status,2,c
  4583  0011CE  D6B1               	goto	l12702
  4584  0011D0  0A01               	xorlw	1	; case 21
  4585  0011D2  B4D8               	btfsc	status,2,c
  4586  0011D4  D6B7               	goto	l12704
  4587  0011D6  0A03               	xorlw	3	; case 22
  4588  0011D8  B4D8               	btfsc	status,2,c
  4589  0011DA  D6BD               	goto	l12706
  4590  0011DC  0A01               	xorlw	1	; case 23
  4591  0011DE  B4D8               	btfsc	status,2,c
  4592  0011E0  D6C3               	goto	l12708
  4593  0011E2  0A0F               	xorlw	15	; case 24
  4594  0011E4  B4D8               	btfsc	status,2,c
  4595  0011E6  D6C9               	goto	l12710
  4596  0011E8  0A01               	xorlw	1	; case 25
  4597  0011EA  B4D8               	btfsc	status,2,c
  4598  0011EC  D6CF               	goto	l12712
  4599  0011EE  0A03               	xorlw	3	; case 26
  4600  0011F0  B4D8               	btfsc	status,2,c
  4601  0011F2  D6D5               	goto	l12714
  4602  0011F4  0A01               	xorlw	1	; case 27
  4603  0011F6  B4D8               	btfsc	status,2,c
  4604  0011F8  D6DB               	goto	l12716
  4605  0011FA  0A07               	xorlw	7	; case 28
  4606  0011FC  B4D8               	btfsc	status,2,c
  4607  0011FE  D6E1               	goto	l12718
  4608  001200  0A01               	xorlw	1	; case 29
  4609  001202  B4D8               	btfsc	status,2,c
  4610  001204  D6E7               	goto	l12720
  4611  001206  0A03               	xorlw	3	; case 30
  4612  001208  B4D8               	btfsc	status,2,c
  4613  00120A  D6ED               	goto	l12722
  4614  00120C  0A01               	xorlw	1	; case 31
  4615  00120E  B4D8               	btfsc	status,2,c
  4616  001210  D6F3               	goto	l12724
  4617  001212  0A3F               	xorlw	63	; case 32
  4618  001214  B4D8               	btfsc	status,2,c
  4619  001216  D6F9               	goto	l12726
  4620  001218  0A01               	xorlw	1	; case 33
  4621  00121A  B4D8               	btfsc	status,2,c
  4622  00121C  D6FF               	goto	l12728
  4623  00121E  0A03               	xorlw	3	; case 34
  4624  001220  B4D8               	btfsc	status,2,c
  4625  001222  D705               	goto	l12730
  4626  001224  0A01               	xorlw	1	; case 35
  4627  001226  B4D8               	btfsc	status,2,c
  4628  001228  D70B               	goto	l12732
  4629  00122A  0A07               	xorlw	7	; case 36
  4630  00122C  B4D8               	btfsc	status,2,c
  4631  00122E  D711               	goto	l12734
  4632  001230  0A01               	xorlw	1	; case 37
  4633  001232  B4D8               	btfsc	status,2,c
  4634  001234  D717               	goto	l12736
  4635  001236  0A03               	xorlw	3	; case 38
  4636  001238  B4D8               	btfsc	status,2,c
  4637  00123A  D71D               	goto	l12738
  4638  00123C  0A01               	xorlw	1	; case 39
  4639  00123E  B4D8               	btfsc	status,2,c
  4640  001240  D723               	goto	l12740
  4641  001242  0A0F               	xorlw	15	; case 40
  4642  001244  B4D8               	btfsc	status,2,c
  4643  001246  D729               	goto	l12742
  4644  001248  0A01               	xorlw	1	; case 41
  4645  00124A  B4D8               	btfsc	status,2,c
  4646  00124C  D72F               	goto	l12744
  4647  00124E  0A03               	xorlw	3	; case 42
  4648  001250  B4D8               	btfsc	status,2,c
  4649  001252  D735               	goto	l12746
  4650  001254  0A01               	xorlw	1	; case 43
  4651  001256  B4D8               	btfsc	status,2,c
  4652  001258  D73B               	goto	l12748
  4653  00125A  0A07               	xorlw	7	; case 44
  4654  00125C  B4D8               	btfsc	status,2,c
  4655  00125E  D741               	goto	l12750
  4656  001260  0A01               	xorlw	1	; case 45
  4657  001262  B4D8               	btfsc	status,2,c
  4658  001264  D747               	goto	l12752
  4659  001266  0A03               	xorlw	3	; case 46
  4660  001268  B4D8               	btfsc	status,2,c
  4661  00126A  D74D               	goto	l12754
  4662  00126C  0A01               	xorlw	1	; case 47
  4663  00126E  B4D8               	btfsc	status,2,c
  4664  001270  D753               	goto	l12756
  4665  001272  0A1F               	xorlw	31	; case 48
  4666  001274  B4D8               	btfsc	status,2,c
  4667  001276  D759               	goto	l12758
  4668  001278  0A01               	xorlw	1	; case 49
  4669  00127A  A4D8               	btfss	status,2,c
  4670  00127C  0012               	return	
  4671  00127E  D75E               	goto	l12760
  4672  001280                     __end_of_lcd_disp_level_bar:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           postdec1	equ	0xFE5
  4683                           plusw1	equ	0xFE3
  4684                           fsr1h	equ	0xFE2
  4685                           fsr1l	equ	0xFE1
  4686                           indf2	equ	0xFDF
  4687                           plusw2	equ	0xFDB
  4688                           fsr2h	equ	0xFDA
  4689                           fsr2l	equ	0xFD9
  4690                           status	equ	0xFD8
  4691                           
  4692 ;; *************** function _soc_init *****************
  4693 ;; Defined at:
  4694 ;;		line 2 in file "src/soc/soc.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    6
  4715 ;; This function calls:
  4716 ;;		_rtc_init
  4717 ;;		_sys_ticker_init
  4718 ;; This function is called by:
  4719 ;;		_main
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text9
  4724  0078CA                     __ptext9:
  4725                           	opt stack 0
  4726  0078CA                     _soc_init:
  4727                           	opt stack 24
  4728                           
  4729                           ;soc.c: 5: sys_ticker_init();
  4730                           
  4731                           ;incstack = 0
  4732  0078CA  EC6D  F03C         	call	_sys_ticker_init	;wreg free
  4733                           
  4734                           ;soc.c: 6: rtc_init();
  4735  0078CE  EC7B  F039         	call	_rtc_init	;wreg free
  4736                           
  4737                           ;soc.c: 8: INTCONbits.PEIE = 1;
  4738  0078D2  8CF2               	bsf	intcon,6,c	;volatile
  4739                           
  4740                           ;soc.c: 9: INTCONbits.GIE = 1;
  4741  0078D4  8EF2               	bsf	intcon,7,c	;volatile
  4742                           
  4743                           ;soc.c: 11: RCONbits.IPEN=0;
  4744  0078D6  9ED0               	bcf	4048,7,c	;volatile
  4745  0078D8  0012               	return		;funcret
  4746  0078DA                     __end_of_soc_init:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           postinc0	equ	0xFEE
  4756                           wreg	equ	0xFE8
  4757                           postdec1	equ	0xFE5
  4758                           plusw1	equ	0xFE3
  4759                           fsr1h	equ	0xFE2
  4760                           fsr1l	equ	0xFE1
  4761                           indf2	equ	0xFDF
  4762                           plusw2	equ	0xFDB
  4763                           fsr2h	equ	0xFDA
  4764                           fsr2l	equ	0xFD9
  4765                           status	equ	0xFD8
  4766                           
  4767 ;; *************** function _sys_ticker_init *****************
  4768 ;; Defined at:
  4769 ;;		line 27 in file "src/soc/ticker.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;Total ram usage:        0 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    4
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_soc_init
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text10
  4798  0078DA                     __ptext10:
  4799                           	opt stack 0
  4800  0078DA                     _sys_ticker_init:
  4801                           	opt stack 25
  4802                           
  4803                           ;ticker.c: 30: PR2=(uint8_t)((11059200/4/16/16/100));
  4804                           
  4805                           ;incstack = 0
  4806  0078DA  0E6C               	movlw	108
  4807  0078DC  6ECB               	movwf	4043,c	;volatile
  4808                           
  4809                           ;ticker.c: 31: IPR1bits.TMR2IP=1;
  4810  0078DE  829F               	bsf	3999,1,c	;volatile
  4811                           
  4812                           ;ticker.c: 32: PIR1bits.TMR2IF=0;
  4813  0078E0  929E               	bcf	3998,1,c	;volatile
  4814                           
  4815                           ;ticker.c: 33: PIE1bits.TMR2IE=1;
  4816  0078E2  829D               	bsf	3997,1,c	;volatile
  4817                           
  4818                           ;ticker.c: 35: T2CON=0x7f;
  4819  0078E4  0E7F               	movlw	127
  4820  0078E6  6ECA               	movwf	4042,c	;volatile
  4821  0078E8  0012               	return		;funcret
  4822  0078EA                     __end_of_sys_ticker_init:
  4823                           	opt stack 0
  4824                           tblptru	equ	0xFF8
  4825                           tblptrh	equ	0xFF7
  4826                           tblptrl	equ	0xFF6
  4827                           tablat	equ	0xFF5
  4828                           prodh	equ	0xFF4
  4829                           prodl	equ	0xFF3
  4830                           intcon	equ	0xFF2
  4831                           postinc0	equ	0xFEE
  4832                           wreg	equ	0xFE8
  4833                           postdec1	equ	0xFE5
  4834                           plusw1	equ	0xFE3
  4835                           fsr1h	equ	0xFE2
  4836                           fsr1l	equ	0xFE1
  4837                           indf2	equ	0xFDF
  4838                           plusw2	equ	0xFDB
  4839                           fsr2h	equ	0xFDA
  4840                           fsr2l	equ	0xFD9
  4841                           status	equ	0xFD8
  4842                           
  4843 ;; *************** function _rtc_init *****************
  4844 ;; Defined at:
  4845 ;;		line 25 in file "src/soc/rtc.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    5
  4866 ;; This function calls:
  4867 ;;		_rtcc_reg_wr_disable
  4868 ;;		_rtcc_reg_wr_enable
  4869 ;; This function is called by:
  4870 ;;		_soc_init
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text11
  4875  0072F6                     __ptext11:
  4876                           	opt stack 0
  4877  0072F6                     _rtc_init:
  4878                           	opt stack 24
  4879                           
  4880                           ;rtc.c: 27: PADCFG1bits.RTSECSEL1=0;
  4881                           
  4882                           ;incstack = 0
  4883  0072F6  010F               	movlb	15	; () banked
  4884  0072F8  9554               	bcf	84,2,b	;volatile
  4885                           
  4886                           ;rtc.c: 28: PADCFG1bits.RTSECSEL0=1;
  4887  0072FA  010F               	movlb	15	; () banked
  4888  0072FC  8354               	bsf	84,1,b	;volatile
  4889                           
  4890                           ;rtc.c: 29: RTCCFGbits.RTCOE=0;
  4891  0072FE  010F               	movlb	15	; () banked
  4892  007300  955F               	bcf	95,2,b	;volatile
  4893                           
  4894                           ;rtc.c: 31: ALRMRPT=0xff;
  4895  007302  010F               	movlb	15	; () banked
  4896  007304  695A               	setf	90,b	;volatile
  4897                           
  4898                           ;rtc.c: 33: ALRMCFGbits.ALRMEN=1;
  4899  007306  010F               	movlb	15	; () banked
  4900  007308  8F5B               	bsf	91,7,b	;volatile
  4901                           
  4902                           ;rtc.c: 34: ALRMCFGbits.CHIME=1;
  4903  00730A  010F               	movlb	15	; () banked
  4904  00730C  8D5B               	bsf	91,6,b	;volatile
  4905                           
  4906                           ;rtc.c: 35: ALRMCFGbits.AMASK=0;
  4907  00730E  010F               	movlb	15	; () banked
  4908  007310  955B               	bcf	91,2,b	;volatile
  4909  007312  975B               	bcf	91,3,b	;volatile
  4910  007314  995B               	bcf	91,4,b	;volatile
  4911  007316  9B5B               	bcf	91,5,b	;volatile
  4912                           
  4913                           ;rtc.c: 37: __nop();
  4914  007318  F000               	nop	
  4915                           
  4916                           ;rtc.c: 38: rtcc_reg_wr_enable();
  4917  00731A  EC98  F03C         	call	_rtcc_reg_wr_enable	;wreg free
  4918                           
  4919                           ;rtc.c: 40: RTCCFGbits.RTCEN=1;
  4920  00731E  010F               	movlb	15	; () banked
  4921  007320  8F5F               	bsf	95,7,b	;volatile
  4922                           
  4923                           ;rtc.c: 42: rtcc_reg_wr_disable();
  4924  007322  EC9E  F03C         	call	_rtcc_reg_wr_disable	;wreg free
  4925                           
  4926                           ;rtc.c: 43: __nop();
  4927  007326  F000               	nop	
  4928                           
  4929                           ;rtc.c: 46: IPR3bits.RTCCIP=1;
  4930  007328  80A5               	bsf	4005,0,c	;volatile
  4931                           
  4932                           ;rtc.c: 47: PIR3bits.RTCCIF=0;
  4933  00732A  90A4               	bcf	4004,0,c	;volatile
  4934                           
  4935                           ;rtc.c: 48: PIE3bits.RTCCIE=1;
  4936  00732C  80A3               	bsf	4003,0,c	;volatile
  4937                           
  4938                           ;rtc.c: 50: T1CONbits.T1OSCEN=1;
  4939  00732E  86CD               	bsf	4045,3,c	;volatile
  4940                           
  4941                           ;rtc.c: 51: __nop();
  4942  007330  F000               	nop	
  4943  007332  0012               	return		;funcret
  4944  007334                     __end_of_rtc_init:
  4945                           	opt stack 0
  4946                           tblptru	equ	0xFF8
  4947                           tblptrh	equ	0xFF7
  4948                           tblptrl	equ	0xFF6
  4949                           tablat	equ	0xFF5
  4950                           prodh	equ	0xFF4
  4951                           prodl	equ	0xFF3
  4952                           intcon	equ	0xFF2
  4953                           postinc0	equ	0xFEE
  4954                           wreg	equ	0xFE8
  4955                           postdec1	equ	0xFE5
  4956                           plusw1	equ	0xFE3
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           indf2	equ	0xFDF
  4960                           plusw2	equ	0xFDB
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _rtc_set *****************
  4966 ;; Defined at:
  4967 ;;		line 54 in file "src/soc/rtc.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  rtc             2    0[BANK0 ] PTR unsigned char 
  4970 ;;		 -> defalutRtc(7), 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  stp             2    2[BANK0 ] PTR struct .
  4973 ;;		 -> defalutRtc(7), 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;Total ram usage:        4 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    5
  4990 ;; This function calls:
  4991 ;;		_rtcc_reg_wr_disable
  4992 ;;		_rtcc_reg_wr_enable
  4993 ;; This function is called by:
  4994 ;;		_main
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text12
  4999  005C18                     __ptext12:
  5000                           	opt stack 0
  5001  005C18                     _rtc_set:
  5002                           	opt stack 25
  5003                           
  5004                           ;rtc.c: 56: st_RtcDef* stp;
  5005                           ;rtc.c: 57: stp=(st_RtcDef*)rtc;
  5006                           
  5007                           ;incstack = 0
  5008  005C18  C060  F062         	movff	rtc_set@rtc,rtc_set@stp
  5009  005C1C  C061  F063         	movff	rtc_set@rtc+1,rtc_set@stp+1
  5010                           
  5011                           ;rtc.c: 58: rtcc_reg_wr_enable();
  5012  005C20  EC98  F03C         	call	_rtcc_reg_wr_enable	;wreg free
  5013                           
  5014                           ;rtc.c: 60: stRTCCFGbits.RTCPTR=0;
  5015  005C24  0EFC               	movlw	-4
  5016  005C26  010F               	movlb	15	; () banked
  5017  005C28  175F               	andwf	95,f,b	;volatile
  5018                           
  5019                           ; BSR set to: 15
  5020                           ;rtc.c: 61: RTCVALL=stp->second;
  5021  005C2A  0100               	movlb	0	; () banked
  5022  005C2C  EE20 F005          	lfsr	2,5
  5023  005C30  5162               	movf	rtc_set@stp& (0+255),w,b
  5024  005C32  26D9               	addwf	fsr2l,f,c
  5025  005C34  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  5026  005C36  22DA               	addwfc	fsr2h,f,c
  5027  005C38  50DF               	movf	indf2,w,c
  5028  005C3A  010F               	movlb	15	; () banked
  5029  005C3C  6F5C               	movwf	92,b	;volatile
  5030                           
  5031                           ; BSR set to: 15
  5032                           ;rtc.c: 62: RTCVALH=stp->minute;
  5033  005C3E  0100               	movlb	0	; () banked
  5034  005C40  EE20 F004          	lfsr	2,4
  5035  005C44  5162               	movf	rtc_set@stp& (0+255),w,b
  5036  005C46  26D9               	addwf	fsr2l,f,c
  5037  005C48  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  5038  005C4A  22DA               	addwfc	fsr2h,f,c
  5039  005C4C  50DF               	movf	indf2,w,c
  5040  005C4E  010F               	movlb	15	; () banked
  5041  005C50  6F5D               	movwf	93,b	;volatile
  5042                           
  5043                           ; BSR set to: 15
  5044                           ;rtc.c: 63: stRTCCFGbits.RTCPTR=1;
  5045  005C52  010F               	movlb	15	; () banked
  5046  005C54  515F               	movf	95,w,b	;volatile
  5047  005C56  0BFC               	andlw	-4
  5048  005C58  0901               	iorlw	1
  5049  005C5A  6F5F               	movwf	95,b	;volatile
  5050                           
  5051                           ; BSR set to: 15
  5052                           ;rtc.c: 64: RTCVALL=stp->hour;
  5053  005C5C  0100               	movlb	0	; () banked
  5054  005C5E  EE20 F003          	lfsr	2,3
  5055  005C62  5162               	movf	rtc_set@stp& (0+255),w,b
  5056  005C64  26D9               	addwf	fsr2l,f,c
  5057  005C66  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  5058  005C68  22DA               	addwfc	fsr2h,f,c
  5059  005C6A  50DF               	movf	indf2,w,c
  5060  005C6C  010F               	movlb	15	; () banked
  5061  005C6E  6F5C               	movwf	92,b	;volatile
  5062                           
  5063                           ; BSR set to: 15
  5064                           ;rtc.c: 65: RTCVALH=stp->day;
  5065  005C70  0100               	movlb	0	; () banked
  5066  005C72  EE20 F006          	lfsr	2,6
  5067  005C76  5162               	movf	rtc_set@stp& (0+255),w,b
  5068  005C78  26D9               	addwf	fsr2l,f,c
  5069  005C7A  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  5070  005C7C  22DA               	addwfc	fsr2h,f,c
  5071  005C7E  50DF               	movf	indf2,w,c
  5072  005C80  010F               	movlb	15	; () banked
  5073  005C82  6F5D               	movwf	93,b	;volatile
  5074                           
  5075                           ; BSR set to: 15
  5076                           ;rtc.c: 66: stRTCCFGbits.RTCPTR=2;
  5077  005C84  010F               	movlb	15	; () banked
  5078  005C86  515F               	movf	95,w,b	;volatile
  5079  005C88  0BFC               	andlw	-4
  5080  005C8A  0902               	iorlw	2
  5081  005C8C  6F5F               	movwf	95,b	;volatile
  5082                           
  5083                           ; BSR set to: 15
  5084                           ;rtc.c: 67: RTCVALL=stp->date;
  5085  005C8E  0100               	movlb	0	; () banked
  5086  005C90  EE20 F002          	lfsr	2,2
  5087  005C94  5162               	movf	rtc_set@stp& (0+255),w,b
  5088  005C96  26D9               	addwf	fsr2l,f,c
  5089  005C98  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  5090  005C9A  22DA               	addwfc	fsr2h,f,c
  5091  005C9C  50DF               	movf	indf2,w,c
  5092  005C9E  010F               	movlb	15	; () banked
  5093  005CA0  6F5C               	movwf	92,b	;volatile
  5094                           
  5095                           ; BSR set to: 15
  5096                           ;rtc.c: 68: RTCVALH=stp->month;
  5097  005CA2  0100               	movlb	0	; () banked
  5098  005CA4  EE20 F001          	lfsr	2,1
  5099  005CA8  5162               	movf	rtc_set@stp& (0+255),w,b
  5100  005CAA  26D9               	addwf	fsr2l,f,c
  5101  005CAC  5163               	movf	(rtc_set@stp+1)& (0+255),w,b
  5102  005CAE  22DA               	addwfc	fsr2h,f,c
  5103  005CB0  50DF               	movf	indf2,w,c
  5104  005CB2  010F               	movlb	15	; () banked
  5105  005CB4  6F5D               	movwf	93,b	;volatile
  5106                           
  5107                           ; BSR set to: 15
  5108                           ;rtc.c: 69: stRTCCFGbits.RTCPTR=3;
  5109  005CB6  0E03               	movlw	3
  5110  005CB8  010F               	movlb	15	; () banked
  5111  005CBA  135F               	iorwf	95,f,b	;volatile
  5112                           
  5113                           ; BSR set to: 15
  5114                           ;rtc.c: 70: RTCVALL=stp->year;
  5115  005CBC  C062  FFD9         	movff	rtc_set@stp,fsr2l
  5116  005CC0  C063  FFDA         	movff	rtc_set@stp+1,fsr2h
  5117  005CC4  50DF               	movf	indf2,w,c
  5118  005CC6  010F               	movlb	15	; () banked
  5119  005CC8  6F5C               	movwf	92,b	;volatile
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;rtc.c: 71: rtcc_reg_wr_disable();
  5123  005CCA  EC9E  F03C         	call	_rtcc_reg_wr_disable	;wreg free
  5124  005CCE  0012               	return		;funcret
  5125  005CD0                     __end_of_rtc_set:
  5126                           	opt stack 0
  5127                           tblptru	equ	0xFF8
  5128                           tblptrh	equ	0xFF7
  5129                           tblptrl	equ	0xFF6
  5130                           tablat	equ	0xFF5
  5131                           prodh	equ	0xFF4
  5132                           prodl	equ	0xFF3
  5133                           intcon	equ	0xFF2
  5134                           postinc0	equ	0xFEE
  5135                           wreg	equ	0xFE8
  5136                           postdec1	equ	0xFE5
  5137                           plusw1	equ	0xFE3
  5138                           fsr1h	equ	0xFE2
  5139                           fsr1l	equ	0xFE1
  5140                           indf2	equ	0xFDF
  5141                           plusw2	equ	0xFDB
  5142                           fsr2h	equ	0xFDA
  5143                           fsr2l	equ	0xFD9
  5144                           status	equ	0xFD8
  5145                           
  5146 ;; *************** function _rtcc_reg_wr_enable *****************
  5147 ;; Defined at:
  5148 ;;		line 9 in file "src/soc/rtc.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		None
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:        0 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    4
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_rtc_init
  5173 ;;		_rtc_set
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text13
  5178  007930                     __ptext13:
  5179                           	opt stack 0
  5180  007930                     _rtcc_reg_wr_enable:
  5181                           	opt stack 24
  5182                           
  5183                           ;incstack = 0
  5184  007930  0E55               	movlw	85	;# 
  5185  007932  6EA7               	movwf	4007,c	;# 
  5186  007934  0EAA               	movlw	170	;# 
  5187  007936  6EA7               	movwf	4007,c	;# 
  5188  007938  8B5F               	bsf	3935,5,b	;# 
  5189  00793A  0012               	return		;funcret
  5190  00793C                     __end_of_rtcc_reg_wr_enable:
  5191                           	opt stack 0
  5192                           tblptru	equ	0xFF8
  5193                           tblptrh	equ	0xFF7
  5194                           tblptrl	equ	0xFF6
  5195                           tablat	equ	0xFF5
  5196                           prodh	equ	0xFF4
  5197                           prodl	equ	0xFF3
  5198                           intcon	equ	0xFF2
  5199                           postinc0	equ	0xFEE
  5200                           wreg	equ	0xFE8
  5201                           postdec1	equ	0xFE5
  5202                           plusw1	equ	0xFE3
  5203                           fsr1h	equ	0xFE2
  5204                           fsr1l	equ	0xFE1
  5205                           indf2	equ	0xFDF
  5206                           plusw2	equ	0xFDB
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _rtcc_reg_wr_disable *****************
  5212 ;; Defined at:
  5213 ;;		line 17 in file "src/soc/rtc.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		None
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    4
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_rtc_init
  5238 ;;		_rtc_set
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text14
  5243  00793C                     __ptext14:
  5244                           	opt stack 0
  5245  00793C                     _rtcc_reg_wr_disable:
  5246                           	opt stack 24
  5247                           
  5248                           ;incstack = 0
  5249  00793C  0E55               	movlw	85	;# 
  5250  00793E  6EA7               	movwf	4007,c	;# 
  5251  007940  0EAA               	movlw	170	;# 
  5252  007942  6EA7               	movwf	4007,c	;# 
  5253  007944  9B5F               	bcf	3935,5,b	;# 
  5254  007946  0012               	return		;funcret
  5255  007948                     __end_of_rtcc_reg_wr_disable:
  5256                           	opt stack 0
  5257                           tblptru	equ	0xFF8
  5258                           tblptrh	equ	0xFF7
  5259                           tblptrl	equ	0xFF6
  5260                           tablat	equ	0xFF5
  5261                           prodh	equ	0xFF4
  5262                           prodl	equ	0xFF3
  5263                           intcon	equ	0xFF2
  5264                           postinc0	equ	0xFEE
  5265                           wreg	equ	0xFE8
  5266                           postdec1	equ	0xFE5
  5267                           plusw1	equ	0xFE3
  5268                           fsr1h	equ	0xFE2
  5269                           fsr1l	equ	0xFE1
  5270                           indf2	equ	0xFDF
  5271                           plusw2	equ	0xFDB
  5272                           fsr2h	equ	0xFDA
  5273                           fsr2l	equ	0xFD9
  5274                           status	equ	0xFD8
  5275                           
  5276 ;; *************** function _lcd_init *****************
  5277 ;; Defined at:
  5278 ;;		line 628 in file "src/driver/lcd.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    6
  5299 ;; This function calls:
  5300 ;;		_lcd_bl_init
  5301 ;;		_lcd_config
  5302 ;; This function is called by:
  5303 ;;		_main
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text15
  5308  0078EA                     __ptext15:
  5309                           	opt stack 0
  5310  0078EA                     _lcd_init:
  5311                           	opt stack 24
  5312                           
  5313                           ;lcd.c: 630: lcd_config();
  5314                           
  5315                           ;incstack = 0
  5316  0078EA  EC95  F03B         	call	_lcd_config	;wreg free
  5317                           
  5318                           ;lcd.c: 631: lcd_bl_init();
  5319  0078EE  ECA6  F03C         	call	_lcd_bl_init	;wreg free
  5320                           
  5321                           ;lcd.c: 632: LCDCON=0x8f;;
  5322  0078F2  0E8F               	movlw	143
  5323  0078F4  6EA8               	movwf	4008,c	;volatile
  5324  0078F6  0012               	return		;funcret
  5325  0078F8                     __end_of_lcd_init:
  5326                           	opt stack 0
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           prodh	equ	0xFF4
  5332                           prodl	equ	0xFF3
  5333                           intcon	equ	0xFF2
  5334                           postinc0	equ	0xFEE
  5335                           wreg	equ	0xFE8
  5336                           postdec1	equ	0xFE5
  5337                           plusw1	equ	0xFE3
  5338                           fsr1h	equ	0xFE2
  5339                           fsr1l	equ	0xFE1
  5340                           indf2	equ	0xFDF
  5341                           plusw2	equ	0xFDB
  5342                           fsr2h	equ	0xFDA
  5343                           fsr2l	equ	0xFD9
  5344                           status	equ	0xFD8
  5345                           
  5346 ;; *************** function _lcd_config *****************
  5347 ;; Defined at:
  5348 ;;		line 588 in file "src/driver/lcd.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    5
  5369 ;; This function calls:
  5370 ;;		_lcd_disp_all
  5371 ;; This function is called by:
  5372 ;;		_lcd_init
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text16
  5377  00772A                     __ptext16:
  5378                           	opt stack 0
  5379  00772A                     _lcd_config:
  5380                           	opt stack 24
  5381                           
  5382                           ;lcd.c: 594: LCDREG=0x3f;
  5383                           
  5384                           ;incstack = 0
  5385  00772A  0E3F               	movlw	63
  5386  00772C  6ED2               	movwf	4050,c	;volatile
  5387                           
  5388                           ;lcd.c: 602: LCDPSbits.WFT = 0;
  5389  00772E  9EAA               	bcf	4010,7,c	;volatile
  5390                           
  5391                           ;lcd.c: 603: LCDPSbits.BIASMD = 0;
  5392  007730  9CAA               	bcf	4010,6,c	;volatile
  5393                           
  5394                           ;lcd.c: 604: LCDPSbits.LP3 = 0;
  5395  007732  96AA               	bcf	4010,3,c	;volatile
  5396                           
  5397                           ;lcd.c: 605: LCDPSbits.LP2 = 1;
  5398  007734  84AA               	bsf	4010,2,c	;volatile
  5399                           
  5400                           ;lcd.c: 606: LCDPSbits.LP1 = 0;
  5401  007736  92AA               	bcf	4010,1,c	;volatile
  5402                           
  5403                           ;lcd.c: 607: LCDPSbits.LP0 = 0;
  5404  007738  90AA               	bcf	4010,0,c	;volatile
  5405                           
  5406                           ;lcd.c: 610: LCDSE0 = 0b11111111;
  5407  00773A  68A9               	setf	4009,c	;volatile
  5408                           
  5409                           ;lcd.c: 611: LCDSE1 = 0b11100000;
  5410  00773C  0EE0               	movlw	224
  5411  00773E  6EB6               	movwf	4022,c	;volatile
  5412                           
  5413                           ;lcd.c: 612: LCDSE2 = 0b11111000;
  5414  007740  0EF8               	movlw	248
  5415  007742  6EB7               	movwf	4023,c	;volatile
  5416                           
  5417                           ;lcd.c: 613: LCDSE3 = 0b11000011;
  5418  007744  0EC3               	movlw	195
  5419  007746  6EB8               	movwf	4024,c	;volatile
  5420                           
  5421                           ;lcd.c: 614: LCDSE4 = 0b11111110;
  5422  007748  0EFE               	movlw	254
  5423  00774A  6EB9               	movwf	4025,c	;volatile
  5424                           
  5425                           ;lcd.c: 615: LCDSE5 = 0b11001111;
  5426  00774C  0ECF               	movlw	207
  5427  00774E  6EBA               	movwf	4026,c	;volatile
  5428                           
  5429                           ;lcd.c: 618: lcd_disp_all(0x00);;
  5430  007750  0E00               	movlw	0
  5431  007752  EC1D  F03B         	call	_lcd_disp_all
  5432  007756  0012               	return		;funcret
  5433  007758                     __end_of_lcd_config:
  5434                           	opt stack 0
  5435                           tblptru	equ	0xFF8
  5436                           tblptrh	equ	0xFF7
  5437                           tblptrl	equ	0xFF6
  5438                           tablat	equ	0xFF5
  5439                           prodh	equ	0xFF4
  5440                           prodl	equ	0xFF3
  5441                           intcon	equ	0xFF2
  5442                           postinc0	equ	0xFEE
  5443                           wreg	equ	0xFE8
  5444                           postdec1	equ	0xFE5
  5445                           plusw1	equ	0xFE3
  5446                           fsr1h	equ	0xFE2
  5447                           fsr1l	equ	0xFE1
  5448                           indf2	equ	0xFDF
  5449                           plusw2	equ	0xFDB
  5450                           fsr2h	equ	0xFDA
  5451                           fsr2l	equ	0xFD9
  5452                           status	equ	0xFD8
  5453                           
  5454 ;; *************** function _lcd_disp_all *****************
  5455 ;; Defined at:
  5456 ;;		line 578 in file "src/driver/lcd.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  x               1    wreg     unsigned char 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  x               1    0[BANK0 ] unsigned char 
  5461 ;;  i               1    1[BANK0 ] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    4
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_ui_disp_start_cs600
  5482 ;;		_lcd_config
  5483 ;;		_ui_disp_all_on
  5484 ;;		_ui_disp_all_off
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text17
  5489  00763A                     __ptext17:
  5490                           	opt stack 0
  5491  00763A                     _lcd_disp_all:
  5492                           	opt stack 25
  5493                           
  5494                           ;incstack = 0
  5495                           ;lcd_disp_all@x stored from wreg
  5496  00763A  0100               	movlb	0	; () banked
  5497  00763C  6F60               	movwf	lcd_disp_all@x& (0+255),b
  5498                           
  5499                           ;lcd.c: 580: uint8_t i;
  5500                           ;lcd.c: 581: for(i=0;i<24;i++)
  5501  00763E  0E00               	movlw	0
  5502  007640  0100               	movlb	0	; () banked
  5503  007642  6F61               	movwf	lcd_disp_all@i& (0+255),b
  5504  007644                     l12390:
  5505                           
  5506                           ; BSR set to: 0
  5507  007644  0E17               	movlw	23
  5508  007646  0100               	movlb	0	; () banked
  5509  007648  6561               	cpfsgt	lcd_disp_all@i& (0+255),b
  5510  00764A  D001               	goto	l12394
  5511  00764C  0012               	return	
  5512  00764E                     l12394:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;lcd.c: 582: {
  5516                           ;lcd.c: 583: pLCD[i]=x;
  5517  00764E  0100               	movlb	0	; () banked
  5518  007650  5161               	movf	lcd_disp_all@i& (0+255),w,b
  5519  007652  0D01               	mullw	1
  5520  007654  0E00               	movlw	low _pLCD
  5521  007656  24F3               	addwf	prodl,w,c
  5522  007658  6ED9               	movwf	fsr2l,c
  5523  00765A  0E01               	movlw	high _pLCD
  5524  00765C  20F4               	addwfc	prodh,w,c
  5525  00765E  6EDA               	movwf	fsr2h,c
  5526  007660  C060  FFDF         	movff	lcd_disp_all@x,indf2
  5527                           
  5528                           ; BSR set to: 0
  5529  007664  0100               	movlb	0	; () banked
  5530  007666  2B61               	incf	lcd_disp_all@i& (0+255),f,b
  5531  007668  D7ED               	goto	l12390
  5532  00766A                     __end_of_lcd_disp_all:
  5533                           	opt stack 0
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           prodh	equ	0xFF4
  5539                           prodl	equ	0xFF3
  5540                           intcon	equ	0xFF2
  5541                           postinc0	equ	0xFEE
  5542                           wreg	equ	0xFE8
  5543                           postdec1	equ	0xFE5
  5544                           plusw1	equ	0xFE3
  5545                           fsr1h	equ	0xFE2
  5546                           fsr1l	equ	0xFE1
  5547                           indf2	equ	0xFDF
  5548                           plusw2	equ	0xFDB
  5549                           fsr2h	equ	0xFDA
  5550                           fsr2l	equ	0xFD9
  5551                           status	equ	0xFD8
  5552                           
  5553 ;; *************** function _lcd_bl_init *****************
  5554 ;; Defined at:
  5555 ;;		line 623 in file "src/driver/lcd.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;		None
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		status,2, status,0
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;Total ram usage:        0 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    4
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_lcd_init
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text18
  5584  00794C                     __ptext18:
  5585                           	opt stack 0
  5586  00794C                     _lcd_bl_init:
  5587                           	opt stack 25
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;incstack = 0
  5591                           ;lcd.c: 625: do{TRISG |= (1<<4);}while(0);;
  5592  00794C  8898               	bsf	3992,4,c	;volatile
  5593  00794E  0012               	return	
  5594  007950                     __end_of_lcd_bl_init:
  5595                           	opt stack 0
  5596                           tblptru	equ	0xFF8
  5597                           tblptrh	equ	0xFF7
  5598                           tblptrl	equ	0xFF6
  5599                           tablat	equ	0xFF5
  5600                           prodh	equ	0xFF4
  5601                           prodl	equ	0xFF3
  5602                           intcon	equ	0xFF2
  5603                           postinc0	equ	0xFEE
  5604                           wreg	equ	0xFE8
  5605                           postdec1	equ	0xFE5
  5606                           plusw1	equ	0xFE3
  5607                           fsr1h	equ	0xFE2
  5608                           fsr1l	equ	0xFE1
  5609                           indf2	equ	0xFDF
  5610                           plusw2	equ	0xFDB
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function _event_process *****************
  5616 ;; Defined at:
  5617 ;;		line 63 in file "src/app/event.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      char 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:   14
  5638 ;; This function calls:
  5639 ;;		_event_process_rtc
  5640 ;;		_event_process_ticker
  5641 ;;		_event_process_time_out
  5642 ;;		_key_polling
  5643 ;;		_key_process
  5644 ;; This function is called by:
  5645 ;;		_main
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text19
  5650  00756E                     __ptext19:
  5651                           	opt stack 0
  5652  00756E                     _event_process:
  5653                           	opt stack 16
  5654                           
  5655                           ;event.c: 65: if(glbEvent & (1<<1)){
  5656                           
  5657                           ;incstack = 0
  5658  00756E  A22F               	btfss	_glbEvent,1,c	;volatile
  5659  007570  D003               	goto	l13106
  5660                           
  5661                           ;event.c: 66: glbEvent &= ~(1<<1);
  5662  007572  922F               	bcf	_glbEvent,1,c	;volatile
  5663                           
  5664                           ;event.c: 68: event_process_rtc();
  5665  007574  EC2C  F033         	call	_event_process_rtc	;wreg free
  5666  007578                     l13106:
  5667                           
  5668                           ;event.c: 69: }
  5669                           ;event.c: 70: if(glbEvent & (1<<0)){
  5670  007578  A02F               	btfss	_glbEvent,0,c	;volatile
  5671  00757A  D003               	goto	l13112
  5672                           
  5673                           ;event.c: 71: glbEvent &= ~(1<<0);
  5674  00757C  902F               	bcf	_glbEvent,0,c	;volatile
  5675                           
  5676                           ;event.c: 72: event_process_ticker();
  5677  00757E  EC83  F03C         	call	_event_process_ticker	;wreg free
  5678  007582                     l13112:
  5679                           
  5680                           ;event.c: 73: }
  5681                           ;event.c: 74: if(glbEvent & (1<<2)){
  5682  007582  A42F               	btfss	_glbEvent,2,c	;volatile
  5683  007584  D003               	goto	l13118
  5684                           
  5685                           ;event.c: 75: glbEvent &= ~(1<<2);
  5686  007586  942F               	bcf	_glbEvent,2,c	;volatile
  5687                           
  5688                           ;event.c: 76: event_process_time_out();
  5689  007588  EC7C  F03C         	call	_event_process_time_out	;wreg free
  5690  00758C                     l13118:
  5691                           
  5692                           ;event.c: 77: }
  5693                           ;event.c: 79: keyValue=key_polling();
  5694  00758C  EC4F  F037         	call	_key_polling	;wreg free
  5695  007590  0100               	movlb	0	; () banked
  5696  007592  6FFE               	movwf	_keyValue& (0+255),b	;volatile
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;event.c: 80: if(keyValue!=(0x0))key_process();
  5700  007594  0100               	movlb	0	; () banked
  5701  007596  51FE               	movf	_keyValue& (0+255),w,b	;volatile
  5702  007598  B4D8               	btfsc	status,2,c
  5703  00759A  0012               	return	
  5704                           
  5705                           ; BSR set to: 0
  5706  00759C  EC6F  F033         	call	_key_process	;wreg free
  5707  0075A0  0012               	return	
  5708  0075A2                     __end_of_event_process:
  5709                           	opt stack 0
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           prodh	equ	0xFF4
  5715                           prodl	equ	0xFF3
  5716                           intcon	equ	0xFF2
  5717                           postinc0	equ	0xFEE
  5718                           wreg	equ	0xFE8
  5719                           postdec1	equ	0xFE5
  5720                           plusw1	equ	0xFE3
  5721                           fsr1h	equ	0xFE2
  5722                           fsr1l	equ	0xFE1
  5723                           indf2	equ	0xFDF
  5724                           plusw2	equ	0xFDB
  5725                           fsr2h	equ	0xFDA
  5726                           fsr2l	equ	0xFD9
  5727                           status	equ	0xFD8
  5728                           
  5729 ;; *************** function _key_process *****************
  5730 ;; Defined at:
  5731 ;;		line 154 in file "src/api/key_menu.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  tm              2   39[BANK0 ] unsigned int 
  5736 ;;  key             1   41[BANK0 ] unsigned char 
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;Total ram usage:        3 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:   13
  5753 ;; This function calls:
  5754 ;;		_key_process_down
  5755 ;;		_key_process_set
  5756 ;;		_key_process_set_down_long
  5757 ;;		_key_process_set_long
  5758 ;;		_key_process_up
  5759 ;;		_key_waite_release
  5760 ;;		_ui_disp_menu
  5761 ;; This function is called by:
  5762 ;;		_event_process
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text20
  5767  0066DE                     __ptext20:
  5768                           	opt stack 0
  5769  0066DE                     _key_process:
  5770                           	opt stack 16
  5771                           
  5772                           ;key_menu.c: 156: uint16_t tm;
  5773                           ;key_menu.c: 157: uint8_t key;
  5774                           ;key_menu.c: 158: tm=key_waite_release(2000,&key);
  5775                           
  5776                           ;incstack = 0
  5777  0066DE  0E07               	movlw	7
  5778  0066E0  0100               	movlb	0	; () banked
  5779  0066E2  6F69               	movwf	(key_waite_release@timeout+1)& (0+255),b
  5780  0066E4  0ED0               	movlw	208
  5781  0066E6  6F68               	movwf	key_waite_release@timeout& (0+255),b
  5782  0066E8  0E89               	movlw	low key_process@key
  5783  0066EA  0100               	movlb	0	; () banked
  5784  0066EC  6F6A               	movwf	key_waite_release@key& (0+255),b
  5785  0066EE  0E00               	movlw	high key_process@key
  5786  0066F0  0100               	movlb	0	; () banked
  5787  0066F2  6F6B               	movwf	(key_waite_release@key+1)& (0+255),b
  5788  0066F4  ECB9  F039         	call	_key_waite_release	;wreg free
  5789  0066F8  C068  F087         	movff	?_key_waite_release,key_process@tm
  5790  0066FC  C069  F088         	movff	?_key_waite_release+1,key_process@tm+1
  5791                           
  5792                           ;key_menu.c: 159: if(tm>=2000){
  5793  006700  0ED0               	movlw	208
  5794  006702  0100               	movlb	0	; () banked
  5795  006704  5D87               	subwf	key_process@tm& (0+255),w,b
  5796  006706  0E07               	movlw	7
  5797  006708  0100               	movlb	0	; () banked
  5798  00670A  5988               	subwfb	(key_process@tm+1)& (0+255),w,b
  5799  00670C  A0D8               	btfss	status,0,c
  5800  00670E  D010               	goto	l12864
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;key_menu.c: 161: if(key==(0x01<<0x02)){
  5804  006710  0E04               	movlw	4
  5805  006712  0100               	movlb	0	; () banked
  5806  006714  1989               	xorwf	key_process@key& (0+255),w,b
  5807  006716  A4D8               	btfss	status,2,c
  5808  006718  D003               	goto	l12860
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;key_menu.c: 162: key_process_set_long();
  5812  00671A  ECA8  F03C         	call	_key_process_set_long	;wreg free
  5813                           
  5814                           ;key_menu.c: 163: }else if(keyValue == ((0x01<<0x02)+(0x01<<0x0))){
  5815  00671E  D01D               	goto	l12876
  5816  006720                     l12860:
  5817  006720  0E05               	movlw	5
  5818  006722  0100               	movlb	0	; () banked
  5819  006724  19FE               	xorwf	_keyValue& (0+255),w,b	;volatile
  5820  006726  A4D8               	btfss	status,2,c
  5821  006728  D018               	goto	l12876
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;key_menu.c: 164: key_process_set_down_long();
  5825  00672A  ECF0  F02C         	call	_key_process_set_down_long	;wreg free
  5826                           
  5827                           ;key_menu.c: 165: }
  5828                           ;key_menu.c: 166: }else{
  5829  00672E  D015               	goto	l12876
  5830  006730                     l12864:
  5831                           
  5832                           ;key_menu.c: 168: if(keyValue == (0x01<<0x0)){
  5833  006730  0100               	movlb	0	; () banked
  5834  006732  05FE               	decf	_keyValue& (0+255),w,b	;volatile
  5835  006734  A4D8               	btfss	status,2,c
  5836  006736  D003               	goto	l12868
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;key_menu.c: 169: key_process_down();
  5840  006738  ECD7  F039         	call	_key_process_down	;wreg free
  5841                           
  5842                           ;key_menu.c: 170: }else if(keyValue == (0x01<<0x01)){
  5843  00673C  D00E               	goto	l12876
  5844  00673E                     l12868:
  5845  00673E  0E02               	movlw	2
  5846  006740  0100               	movlb	0	; () banked
  5847  006742  19FE               	xorwf	_keyValue& (0+255),w,b	;volatile
  5848  006744  A4D8               	btfss	status,2,c
  5849  006746  D003               	goto	l12872
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;key_menu.c: 171: key_process_up();
  5853  006748  ECD1  F03A         	call	_key_process_up	;wreg free
  5854                           
  5855                           ;key_menu.c: 172: }else if(keyValue == (0x01<<0x02)){
  5856  00674C  D006               	goto	l12876
  5857  00674E                     l12872:
  5858  00674E  0E04               	movlw	4
  5859  006750  0100               	movlb	0	; () banked
  5860  006752  19FE               	xorwf	_keyValue& (0+255),w,b	;volatile
  5861  006754  B4D8               	btfsc	status,2,c
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;key_menu.c: 173: key_process_set();
  5865  006756  ECAC  F03B         	call	_key_process_set	;wreg free
  5866  00675A                     l12876:
  5867                           
  5868                           ;key_menu.c: 174: }
  5869                           ;key_menu.c: 175: }
  5870                           ;key_menu.c: 176: ui_disp_menu();
  5871  00675A  ECE9  F03B         	call	_ui_disp_menu	;wreg free
  5872  00675E  0012               	return		;funcret
  5873  006760                     __end_of_key_process:
  5874                           	opt stack 0
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           postinc0	equ	0xFEE
  5883                           wreg	equ	0xFE8
  5884                           postdec1	equ	0xFE5
  5885                           plusw1	equ	0xFE3
  5886                           fsr1h	equ	0xFE2
  5887                           fsr1l	equ	0xFE1
  5888                           indf2	equ	0xFDF
  5889                           plusw2	equ	0xFDB
  5890                           fsr2h	equ	0xFDA
  5891                           fsr2l	equ	0xFD9
  5892                           status	equ	0xFD8
  5893                           
  5894 ;; *************** function _key_waite_release *****************
  5895 ;; Defined at:
  5896 ;;		line 26 in file "src/api/key_menu.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  timeout         2    8[BANK0 ] unsigned int 
  5899 ;;  key             2   10[BANK0 ] PTR unsigned char 
  5900 ;;		 -> key_process@key(1), 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  t8              1   31[COMRAM] unsigned char 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  2    8[BANK0 ] unsigned int 
  5905 ;; Registers used:
  5906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        5 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    7
  5919 ;; This function calls:
  5920 ;;		_key_polling
  5921 ;; This function is called by:
  5922 ;;		_key_process
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text21
  5927  007372                     __ptext21:
  5928                           	opt stack 0
  5929  007372                     _key_waite_release:
  5930                           	opt stack 21
  5931                           
  5932                           ;key_menu.c: 28: uint8_t t8;
  5933                           ;key_menu.c: 30: userTicker_ms=0;
  5934                           
  5935                           ;incstack = 0
  5936  007372  0E00               	movlw	0
  5937  007374  6E26               	movwf	_userTicker_ms+1,c	;volatile
  5938  007376  0E00               	movlw	0
  5939  007378  6E25               	movwf	_userTicker_ms,c	;volatile
  5940                           
  5941                           ;key_menu.c: 31: while(userTicker_ms<timeout){
  5942  00737A  D006               	goto	l12314
  5943  00737C                     l12308:
  5944                           
  5945                           ;key_menu.c: 32: t8=key_polling();
  5946  00737C  EC4F  F037         	call	_key_polling	;wreg free
  5947  007380  6E20               	movwf	key_waite_release@t8,c
  5948                           
  5949                           ;key_menu.c: 33: if(t8==(0x0))break;
  5950  007382  5020               	movf	key_waite_release@t8,w,c
  5951  007384  B4D8               	btfsc	status,2,c
  5952  007386  D008               	goto	l12316
  5953  007388                     l12314:
  5954  007388  0100               	movlb	0	; () banked
  5955  00738A  5168               	movf	key_waite_release@timeout& (0+255),w,b
  5956  00738C  5C25               	subwf	_userTicker_ms,w,c	;volatile
  5957  00738E  0100               	movlb	0	; () banked
  5958  007390  5169               	movf	(key_waite_release@timeout+1)& (0+255),w,b
  5959  007392  5826               	subwfb	_userTicker_ms+1,w,c	;volatile
  5960  007394  A0D8               	btfss	status,0,c
  5961  007396  D7F2               	goto	l12308
  5962  007398                     l12316:
  5963                           
  5964                           ;key_menu.c: 34: }
  5965                           ;key_menu.c: 35: *key=t8;
  5966  007398  C06A  FFD9         	movff	key_waite_release@key,fsr2l
  5967  00739C  C06B  FFDA         	movff	key_waite_release@key+1,fsr2h
  5968  0073A0  C020  FFDF         	movff	key_waite_release@t8,indf2
  5969                           
  5970                           ;key_menu.c: 36: return userTicker_ms;
  5971  0073A4  C025  F068         	movff	_userTicker_ms,?_key_waite_release	;volatile
  5972  0073A8  C026  F069         	movff	_userTicker_ms+1,?_key_waite_release+1	;volatile
  5973  0073AC  0012               	return	
  5974  0073AE                     __end_of_key_waite_release:
  5975                           	opt stack 0
  5976                           tblptru	equ	0xFF8
  5977                           tblptrh	equ	0xFF7
  5978                           tblptrl	equ	0xFF6
  5979                           tablat	equ	0xFF5
  5980                           prodh	equ	0xFF4
  5981                           prodl	equ	0xFF3
  5982                           intcon	equ	0xFF2
  5983                           postinc0	equ	0xFEE
  5984                           wreg	equ	0xFE8
  5985                           postdec1	equ	0xFE5
  5986                           plusw1	equ	0xFE3
  5987                           fsr1h	equ	0xFE2
  5988                           fsr1l	equ	0xFE1
  5989                           indf2	equ	0xFDF
  5990                           plusw2	equ	0xFDB
  5991                           fsr2h	equ	0xFDA
  5992                           fsr2l	equ	0xFD9
  5993                           status	equ	0xFD8
  5994                           
  5995 ;; *************** function _key_polling *****************
  5996 ;; Defined at:
  5997 ;;		line 8 in file "src/driver/key.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;		None
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  t8              1    7[BANK0 ] unsigned char 
  6002 ;;  ktemp           1    6[BANK0 ] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      unsigned char 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;Total ram usage:        2 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    6
  6019 ;; This function calls:
  6020 ;;		_delay_ms
  6021 ;; This function is called by:
  6022 ;;		_key_waite_release
  6023 ;;		_event_process
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text22
  6028  006E9E                     __ptext22:
  6029                           	opt stack 0
  6030  006E9E                     _key_polling:
  6031                           	opt stack 21
  6032                           
  6033                           ;key.c: 10: uint8_t ktemp=(0x0);
  6034                           
  6035                           ;incstack = 0
  6036  006E9E  0E00               	movlw	0
  6037  006EA0  0100               	movlb	0	; () banked
  6038  006EA2  6F66               	movwf	key_polling@ktemp& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;key.c: 11: uint8_t t8=0xff;
  6042  006EA4  0100               	movlb	0	; () banked
  6043  006EA6  6967               	setf	key_polling@t8& (0+255),b
  6044                           
  6045                           ; BSR set to: 0
  6046                           
  6047                           ; BSR set to: 0
  6048                           
  6049                           ;key.c: 13: do{TRISB |= ((1<<1) | (1<<2) | (1<<3) );}while(0);;
  6050  006EA8  0E0E               	movlw	14
  6051  006EAA  1293               	iorwf	3987,f,c	;volatile
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;key.c: 14: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  6055                           
  6056                           ; BSR set to: 0
  6057  006EAC  5081               	movf	3969,w,c	;volatile
  6058  006EAE  0B0E               	andlw	14
  6059  006EB0  0100               	movlb	0	; () banked
  6060  006EB2  6F67               	movwf	key_polling@t8& (0+255),b
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;key.c: 15: if((t8 & ((1<<1) | (1<<2) | (1<<3) )) !=((1<<1) | (1<<2) | (1<<3) )){
  6064  006EB4  0100               	movlb	0	; () banked
  6065  006EB6  5167               	movf	key_polling@t8& (0+255),w,b
  6066  006EB8  0B0E               	andlw	14
  6067  006EBA  0A0E               	xorlw	14
  6068  006EBC  B4D8               	btfsc	status,2,c
  6069  006EBE  D01A               	goto	l11836
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;key.c: 16: delay_ms(10);
  6073  006EC0  0E00               	movlw	0
  6074  006EC2  0100               	movlb	0	; () banked
  6075  006EC4  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
  6076  006EC6  0E0A               	movlw	10
  6077  006EC8  6F64               	movwf	delay_ms@dly& (0+255),b
  6078  006ECA  ECD6  F03B         	call	_delay_ms	;wreg free
  6079                           
  6080                           ;key.c: 17: t8=(PORTB & ((1<<1) | (1<<2) | (1<<3) ));
  6081  006ECE  5081               	movf	3969,w,c	;volatile
  6082  006ED0  0B0E               	andlw	14
  6083  006ED2  0100               	movlb	0	; () banked
  6084  006ED4  6F67               	movwf	key_polling@t8& (0+255),b
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;key.c: 18: if(!( t8 & (1<<3))){
  6088  006ED6  0100               	movlb	0	; () banked
  6089  006ED8  B767               	btfsc	key_polling@t8& (0+255),3,b
  6090  006EDA  D002               	goto	l11828
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;key.c: 19: ktemp |= (0x01<<0x0);
  6094  006EDC  0100               	movlb	0	; () banked
  6095  006EDE  8166               	bsf	key_polling@ktemp& (0+255),0,b
  6096  006EE0                     l11828:
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;key.c: 20: }
  6100                           ;key.c: 21: if(!( t8 & (1<<2))){
  6101  006EE0  0100               	movlb	0	; () banked
  6102  006EE2  B567               	btfsc	key_polling@t8& (0+255),2,b
  6103  006EE4  D002               	goto	l11832
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;key.c: 22: ktemp |= (0x01<<0x01);
  6107  006EE6  0100               	movlb	0	; () banked
  6108  006EE8  8366               	bsf	key_polling@ktemp& (0+255),1,b
  6109  006EEA                     l11832:
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;key.c: 23: }
  6113                           ;key.c: 24: if(!( t8 & (1<<1))){
  6114  006EEA  0100               	movlb	0	; () banked
  6115  006EEC  B367               	btfsc	key_polling@t8& (0+255),1,b
  6116  006EEE  D002               	goto	l11836
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;key.c: 25: ktemp |= (0x01<<0x02);
  6120  006EF0  0100               	movlb	0	; () banked
  6121  006EF2  8566               	bsf	key_polling@ktemp& (0+255),2,b
  6122  006EF4                     l11836:
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;key.c: 26: }
  6126                           ;key.c: 27: }
  6127                           ;key.c: 29: return ktemp;
  6128  006EF4  0100               	movlb	0	; () banked
  6129  006EF6  5166               	movf	key_polling@ktemp& (0+255),w,b
  6130  006EF8  0012               	return	
  6131  006EFA                     __end_of_key_polling:
  6132                           	opt stack 0
  6133                           tblptru	equ	0xFF8
  6134                           tblptrh	equ	0xFF7
  6135                           tblptrl	equ	0xFF6
  6136                           tablat	equ	0xFF5
  6137                           prodh	equ	0xFF4
  6138                           prodl	equ	0xFF3
  6139                           intcon	equ	0xFF2
  6140                           postinc0	equ	0xFEE
  6141                           wreg	equ	0xFE8
  6142                           postdec1	equ	0xFE5
  6143                           plusw1	equ	0xFE3
  6144                           fsr1h	equ	0xFE2
  6145                           fsr1l	equ	0xFE1
  6146                           indf2	equ	0xFDF
  6147                           plusw2	equ	0xFDB
  6148                           fsr2h	equ	0xFDA
  6149                           fsr2l	equ	0xFD9
  6150                           status	equ	0xFD8
  6151                           
  6152 ;; *************** function _key_process_up *****************
  6153 ;; Defined at:
  6154 ;;		line 69 in file "src/api/key_menu.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;		None
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;		None
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  1    wreg      void 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;Total ram usage:        0 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    6
  6175 ;; This function calls:
  6176 ;;		_key_adj_value_fixed_point
  6177 ;; This function is called by:
  6178 ;;		_key_process
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text23
  6183  0075A2                     __ptext23:
  6184                           	opt stack 0
  6185  0075A2                     _key_process_up:
  6186                           	opt stack 22
  6187                           
  6188                           ;key_menu.c: 71: switch(menu){
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;incstack = 0
  6192  0075A2  D00B               	goto	l12336
  6193  0075A4                     l12332:
  6194  0075A4  0E39               	movlw	low _passWord
  6195  0075A6  0100               	movlb	0	; () banked
  6196  0075A8  6F6E               	movwf	key_adj_value_fixed_point@value& (0+255),b
  6197  0075AA  0E00               	movlw	high _passWord
  6198  0075AC  0100               	movlb	0	; () banked
  6199  0075AE  6F6F               	movwf	(key_adj_value_fixed_point@value+1)& (0+255),b
  6200  0075B0  C03B  F070         	movff	_adjLocation,key_adj_value_fixed_point@loc	;volatile
  6201  0075B4  ECB3  F02B         	call	_key_adj_value_fixed_point	;wreg free
  6202                           
  6203                           ;key_menu.c: 77: }
  6204                           
  6205                           ;key_menu.c: 76: default:break;
  6206  0075B8  0012               	return	
  6207  0075BA                     l12336:
  6208  0075BA  5038               	movf	_menu,w,c	;volatile
  6209                           
  6210                           ; Switch size 1, requested type "space"
  6211                           ; Number of cases is 4, Range of values is 0 to 16
  6212                           ; switch strategies available:
  6213                           ; Name         Instructions Cycles
  6214                           ; simple_byte           13     7 (average)
  6215                           ;	Chosen strategy is simple_byte
  6216  0075BC  0A00               	xorlw	0	; case 0
  6217  0075BE  B4D8               	btfsc	status,2,c
  6218  0075C0  0012               	return	
  6219  0075C2  0A01               	xorlw	1	; case 1
  6220  0075C4  B4D8               	btfsc	status,2,c
  6221  0075C6  0012               	return	
  6222  0075C8  0A03               	xorlw	3	; case 2
  6223  0075CA  B4D8               	btfsc	status,2,c
  6224  0075CC  0012               	return	
  6225  0075CE  0A12               	xorlw	18	; case 16
  6226  0075D0  A4D8               	btfss	status,2,c
  6227  0075D2  0012               	return	
  6228  0075D4  D7E7               	goto	l12332
  6229  0075D6                     __end_of_key_process_up:
  6230                           	opt stack 0
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           postinc0	equ	0xFEE
  6239                           wreg	equ	0xFE8
  6240                           postdec1	equ	0xFE5
  6241                           plusw1	equ	0xFE3
  6242                           fsr1h	equ	0xFE2
  6243                           fsr1l	equ	0xFE1
  6244                           indf2	equ	0xFDF
  6245                           plusw2	equ	0xFDB
  6246                           fsr2h	equ	0xFDA
  6247                           fsr2l	equ	0xFD9
  6248                           status	equ	0xFD8
  6249                           
  6250 ;; *************** function _key_adj_value_fixed_point *****************
  6251 ;; Defined at:
  6252 ;;		line 58 in file "src/api/key_menu.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  value           2   14[BANK0 ] PTR unsigned int 
  6255 ;;		 -> passWord(2), 
  6256 ;;  loc             1   16[BANK0 ] unsigned char 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  t16             2   19[BANK0 ] unsigned int 
  6259 ;;  dloc            2   17[BANK0 ] unsigned int 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6269 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;Total ram usage:        7 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    5
  6276 ;; This function calls:
  6277 ;;		___exp_10
  6278 ;;		___lwdiv
  6279 ;;		___lwmod
  6280 ;;		___wmul
  6281 ;; This function is called by:
  6282 ;;		_key_process_up
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text24
  6287  005766                     __ptext24:
  6288                           	opt stack 0
  6289  005766                     _key_adj_value_fixed_point:
  6290                           	opt stack 22
  6291                           
  6292                           ;key_menu.c: 60: uint16_t dloc;
  6293                           ;key_menu.c: 61: uint16_t t16=*value;
  6294                           
  6295                           ;incstack = 0
  6296  005766  C06E  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  6297  00576A  C06F  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  6298  00576E  CFDE F073          	movff	postinc2,key_adj_value_fixed_point@t16
  6299  005772  CFDD F074          	movff	postdec2,key_adj_value_fixed_point@t16+1
  6300                           
  6301                           ;key_menu.c: 62: dloc=(t16/__exp_10(loc))%10;
  6302  005776  0100               	movlb	0	; () banked
  6303  005778  5170               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  6304  00577A  EC7D  F037         	call	___exp_10
  6305  00577E  C060  F064         	movff	?___exp_10,___lwdiv@divisor
  6306  005782  C061  F065         	movff	?___exp_10+1,___lwdiv@divisor+1
  6307  005786  C073  F062         	movff	key_adj_value_fixed_point@t16,___lwdiv@dividend
  6308  00578A  C074  F063         	movff	key_adj_value_fixed_point@t16+1,___lwdiv@dividend+1
  6309  00578E  ECAA  F034         	call	___lwdiv	;wreg free
  6310  005792  C062  F069         	movff	?___lwdiv,___lwmod@dividend
  6311  005796  C063  F06A         	movff	?___lwdiv+1,___lwmod@dividend+1
  6312  00579A  0E00               	movlw	0
  6313  00579C  0100               	movlb	0	; () banked
  6314  00579E  6F6C               	movwf	(___lwmod@divisor+1)& (0+255),b
  6315  0057A0  0E0A               	movlw	10
  6316  0057A2  6F6B               	movwf	___lwmod@divisor& (0+255),b
  6317  0057A4  EC60  F036         	call	___lwmod	;wreg free
  6318  0057A8  C069  F071         	movff	?___lwmod,key_adj_value_fixed_point@dloc
  6319  0057AC  C06A  F072         	movff	?___lwmod+1,key_adj_value_fixed_point@dloc+1
  6320                           
  6321                           ;key_menu.c: 63: t16=t16-dloc*__exp_10(loc);
  6322  0057B0  0100               	movlb	0	; () banked
  6323  0057B2  5170               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  6324  0057B4  EC7D  F037         	call	___exp_10
  6325  0057B8  C060  F062         	movff	?___exp_10,___wmul@multiplier
  6326  0057BC  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  6327  0057C0  C071  F064         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  6328  0057C4  C072  F065         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  6329  0057C8  EC81  F03A         	call	___wmul	;wreg free
  6330  0057CC  0100               	movlb	0	; () banked
  6331  0057CE  1F62               	comf	?___wmul& (0+255),f,b
  6332  0057D0  0100               	movlb	0	; () banked
  6333  0057D2  1F63               	comf	(?___wmul+1)& (0+255),f,b
  6334  0057D4  0100               	movlb	0	; () banked
  6335  0057D6  4B62               	infsnz	?___wmul& (0+255),f,b
  6336  0057D8  2B63               	incf	(?___wmul+1)& (0+255),f,b
  6337  0057DA  0100               	movlb	0	; () banked
  6338  0057DC  5173               	movf	key_adj_value_fixed_point@t16& (0+255),w,b
  6339  0057DE  0100               	movlb	0	; () banked
  6340  0057E0  2562               	addwf	?___wmul& (0+255),w,b
  6341  0057E2  0100               	movlb	0	; () banked
  6342  0057E4  6F73               	movwf	key_adj_value_fixed_point@t16& (0+255),b
  6343  0057E6  0100               	movlb	0	; () banked
  6344  0057E8  5174               	movf	(key_adj_value_fixed_point@t16+1)& (0+255),w,b
  6345  0057EA  0100               	movlb	0	; () banked
  6346  0057EC  2163               	addwfc	(?___wmul+1)& (0+255),w,b
  6347  0057EE  0100               	movlb	0	; () banked
  6348  0057F0  6F74               	movwf	(key_adj_value_fixed_point@t16+1)& (0+255),b
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;key_menu.c: 64: dloc++;
  6352  0057F2  0100               	movlb	0	; () banked
  6353  0057F4  4B71               	infsnz	key_adj_value_fixed_point@dloc& (0+255),f,b
  6354  0057F6  2B72               	incf	(key_adj_value_fixed_point@dloc+1)& (0+255),f,b
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;key_menu.c: 65: if(dloc>9)dloc=0;
  6358  0057F8  0100               	movlb	0	; () banked
  6359  0057FA  5172               	movf	(key_adj_value_fixed_point@dloc+1)& (0+255),w,b
  6360  0057FC  E105               	bnz	u10880
  6361  0057FE  0E0A               	movlw	10
  6362  005800  0100               	movlb	0	; () banked
  6363  005802  5D71               	subwf	key_adj_value_fixed_point@dloc& (0+255),w,b
  6364  005804  A0D8               	btfss	status,0,c
  6365  005806  D005               	goto	l11866
  6366  005808                     u10880:
  6367                           
  6368                           ; BSR set to: 0
  6369  005808  0E00               	movlw	0
  6370  00580A  0100               	movlb	0	; () banked
  6371  00580C  6F72               	movwf	(key_adj_value_fixed_point@dloc+1)& (0+255),b
  6372  00580E  0E00               	movlw	0
  6373  005810  6F71               	movwf	key_adj_value_fixed_point@dloc& (0+255),b
  6374  005812                     l11866:
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;key_menu.c: 66: t16+=(dloc*__exp_10(loc));
  6378  005812  0100               	movlb	0	; () banked
  6379  005814  5170               	movf	key_adj_value_fixed_point@loc& (0+255),w,b
  6380  005816  EC7D  F037         	call	___exp_10
  6381  00581A  C060  F062         	movff	?___exp_10,___wmul@multiplier
  6382  00581E  C061  F063         	movff	?___exp_10+1,___wmul@multiplier+1
  6383  005822  C071  F064         	movff	key_adj_value_fixed_point@dloc,___wmul@multiplicand
  6384  005826  C072  F065         	movff	key_adj_value_fixed_point@dloc+1,___wmul@multiplicand+1
  6385  00582A  EC81  F03A         	call	___wmul	;wreg free
  6386  00582E  0100               	movlb	0	; () banked
  6387  005830  5162               	movf	?___wmul& (0+255),w,b
  6388  005832  0100               	movlb	0	; () banked
  6389  005834  2773               	addwf	key_adj_value_fixed_point@t16& (0+255),f,b
  6390  005836  0100               	movlb	0	; () banked
  6391  005838  5163               	movf	(?___wmul+1)& (0+255),w,b
  6392  00583A  0100               	movlb	0	; () banked
  6393  00583C  2374               	addwfc	(key_adj_value_fixed_point@t16+1)& (0+255),f,b
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;key_menu.c: 67: *value=t16;
  6397  00583E  C06E  FFD9         	movff	key_adj_value_fixed_point@value,fsr2l
  6398  005842  C06F  FFDA         	movff	key_adj_value_fixed_point@value+1,fsr2h
  6399  005846  C073  FFDE         	movff	key_adj_value_fixed_point@t16,postinc2
  6400  00584A  C074  FFDD         	movff	key_adj_value_fixed_point@t16+1,postdec2
  6401                           
  6402                           ; BSR set to: 0
  6403  00584E  0012               	return		;funcret
  6404  005850                     __end_of_key_adj_value_fixed_point:
  6405                           	opt stack 0
  6406                           tblptru	equ	0xFF8
  6407                           tblptrh	equ	0xFF7
  6408                           tblptrl	equ	0xFF6
  6409                           tablat	equ	0xFF5
  6410                           prodh	equ	0xFF4
  6411                           prodl	equ	0xFF3
  6412                           intcon	equ	0xFF2
  6413                           postinc0	equ	0xFEE
  6414                           wreg	equ	0xFE8
  6415                           postdec1	equ	0xFE5
  6416                           plusw1	equ	0xFE3
  6417                           fsr1h	equ	0xFE2
  6418                           fsr1l	equ	0xFE1
  6419                           indf2	equ	0xFDF
  6420                           postinc2	equ	0xFDE
  6421                           postdec2	equ	0xFDD
  6422                           plusw2	equ	0xFDB
  6423                           fsr2h	equ	0xFDA
  6424                           fsr2l	equ	0xFD9
  6425                           status	equ	0xFD8
  6426                           
  6427 ;; *************** function ___lwmod *****************
  6428 ;; Defined at:
  6429 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  dividend        2    9[BANK0 ] unsigned int 
  6432 ;;  divisor         2   11[BANK0 ] unsigned int 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  counter         1   13[BANK0 ] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  2    9[BANK0 ] unsigned int 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;Total ram usage:        5 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    4
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_key_adj_value_fixed_point
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text25
  6459  006CC0                     __ptext25:
  6460                           	opt stack 0
  6461  006CC0                     ___lwmod:
  6462                           	opt stack 22
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;incstack = 0
  6466  006CC0  0100               	movlb	0	; () banked
  6467  006CC2  516B               	movf	___lwmod@divisor& (0+255),w,b
  6468  006CC4  0100               	movlb	0	; () banked
  6469  006CC6  116C               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6470  006CC8  B4D8               	btfsc	status,2,c
  6471  006CCA  D026               	goto	l2205
  6472                           
  6473                           ; BSR set to: 0
  6474  006CCC  0E01               	movlw	1
  6475  006CCE  0100               	movlb	0	; () banked
  6476  006CD0  6F6D               	movwf	___lwmod@counter& (0+255),b
  6477  006CD2  D006               	goto	l11618
  6478  006CD4                     l11616:
  6479                           
  6480                           ; BSR set to: 0
  6481  006CD4  0100               	movlb	0	; () banked
  6482  006CD6  90D8               	bcf	status,0,c
  6483  006CD8  376B               	rlcf	___lwmod@divisor& (0+255),f,b
  6484  006CDA  376C               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6485  006CDC  0100               	movlb	0	; () banked
  6486  006CDE  2B6D               	incf	___lwmod@counter& (0+255),f,b
  6487  006CE0                     l11618:
  6488                           
  6489                           ; BSR set to: 0
  6490  006CE0  0100               	movlb	0	; () banked
  6491  006CE2  AF6C               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6492  006CE4  D7F7               	goto	l11616
  6493  006CE6                     l11620:
  6494                           
  6495                           ; BSR set to: 0
  6496  006CE6  0100               	movlb	0	; () banked
  6497  006CE8  516B               	movf	___lwmod@divisor& (0+255),w,b
  6498  006CEA  0100               	movlb	0	; () banked
  6499  006CEC  5D69               	subwf	___lwmod@dividend& (0+255),w,b
  6500  006CEE  0100               	movlb	0	; () banked
  6501  006CF0  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6502  006CF2  0100               	movlb	0	; () banked
  6503  006CF4  596A               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6504  006CF6  A0D8               	btfss	status,0,c
  6505  006CF8  D008               	goto	l11624
  6506                           
  6507                           ; BSR set to: 0
  6508  006CFA  0100               	movlb	0	; () banked
  6509  006CFC  516B               	movf	___lwmod@divisor& (0+255),w,b
  6510  006CFE  0100               	movlb	0	; () banked
  6511  006D00  5F69               	subwf	___lwmod@dividend& (0+255),f,b
  6512  006D02  0100               	movlb	0	; () banked
  6513  006D04  516C               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6514  006D06  0100               	movlb	0	; () banked
  6515  006D08  5B6A               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6516  006D0A                     l11624:
  6517                           
  6518                           ; BSR set to: 0
  6519  006D0A  0100               	movlb	0	; () banked
  6520  006D0C  90D8               	bcf	status,0,c
  6521  006D0E  336C               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6522  006D10  336B               	rrcf	___lwmod@divisor& (0+255),f,b
  6523                           
  6524                           ; BSR set to: 0
  6525  006D12  0100               	movlb	0	; () banked
  6526  006D14  2F6D               	decfsz	___lwmod@counter& (0+255),f,b
  6527  006D16  D7E7               	goto	l11620
  6528  006D18                     l2205:
  6529                           
  6530                           ; BSR set to: 0
  6531  006D18  C069  F069         	movff	___lwmod@dividend,?___lwmod
  6532  006D1C  C06A  F06A         	movff	___lwmod@dividend+1,?___lwmod+1
  6533                           
  6534                           ; BSR set to: 0
  6535  006D20  0012               	return		;funcret
  6536  006D22                     __end_of___lwmod:
  6537                           	opt stack 0
  6538                           tblptru	equ	0xFF8
  6539                           tblptrh	equ	0xFF7
  6540                           tblptrl	equ	0xFF6
  6541                           tablat	equ	0xFF5
  6542                           prodh	equ	0xFF4
  6543                           prodl	equ	0xFF3
  6544                           intcon	equ	0xFF2
  6545                           postinc0	equ	0xFEE
  6546                           wreg	equ	0xFE8
  6547                           postdec1	equ	0xFE5
  6548                           plusw1	equ	0xFE3
  6549                           fsr1h	equ	0xFE2
  6550                           fsr1l	equ	0xFE1
  6551                           indf2	equ	0xFDF
  6552                           postinc2	equ	0xFDE
  6553                           postdec2	equ	0xFDD
  6554                           plusw2	equ	0xFDB
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function ___lwdiv *****************
  6560 ;; Defined at:
  6561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  dividend        2    2[BANK0 ] unsigned int 
  6564 ;;  divisor         2    4[BANK0 ] unsigned int 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  quotient        2    7[BANK0 ] unsigned int 
  6567 ;;  counter         1    6[BANK0 ] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  2    2[BANK0 ] unsigned int 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;Total ram usage:        7 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    4
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_key_adj_value_fixed_point
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text26
  6592  006954                     __ptext26:
  6593                           	opt stack 0
  6594  006954                     ___lwdiv:
  6595                           	opt stack 22
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;incstack = 0
  6599  006954  0E00               	movlw	0
  6600  006956  0100               	movlb	0	; () banked
  6601  006958  6F68               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6602  00695A  0E00               	movlw	0
  6603  00695C  6F67               	movwf	___lwdiv@quotient& (0+255),b
  6604                           
  6605                           ; BSR set to: 0
  6606  00695E  0100               	movlb	0	; () banked
  6607  006960  5164               	movf	___lwdiv@divisor& (0+255),w,b
  6608  006962  0100               	movlb	0	; () banked
  6609  006964  1165               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6610  006966  B4D8               	btfsc	status,2,c
  6611  006968  D02C               	goto	l2195
  6612                           
  6613                           ; BSR set to: 0
  6614  00696A  0E01               	movlw	1
  6615  00696C  0100               	movlb	0	; () banked
  6616  00696E  6F66               	movwf	___lwdiv@counter& (0+255),b
  6617  006970  D006               	goto	l11598
  6618  006972                     l11596:
  6619                           
  6620                           ; BSR set to: 0
  6621  006972  0100               	movlb	0	; () banked
  6622  006974  90D8               	bcf	status,0,c
  6623  006976  3764               	rlcf	___lwdiv@divisor& (0+255),f,b
  6624  006978  3765               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6625  00697A  0100               	movlb	0	; () banked
  6626  00697C  2B66               	incf	___lwdiv@counter& (0+255),f,b
  6627  00697E                     l11598:
  6628                           
  6629                           ; BSR set to: 0
  6630  00697E  0100               	movlb	0	; () banked
  6631  006980  AF65               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6632  006982  D7F7               	goto	l11596
  6633  006984                     l11600:
  6634                           
  6635                           ; BSR set to: 0
  6636  006984  0100               	movlb	0	; () banked
  6637  006986  90D8               	bcf	status,0,c
  6638  006988  3767               	rlcf	___lwdiv@quotient& (0+255),f,b
  6639  00698A  3768               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6640                           
  6641                           ; BSR set to: 0
  6642  00698C  0100               	movlb	0	; () banked
  6643  00698E  5164               	movf	___lwdiv@divisor& (0+255),w,b
  6644  006990  0100               	movlb	0	; () banked
  6645  006992  5D62               	subwf	___lwdiv@dividend& (0+255),w,b
  6646  006994  0100               	movlb	0	; () banked
  6647  006996  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6648  006998  0100               	movlb	0	; () banked
  6649  00699A  5963               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6650  00699C  A0D8               	btfss	status,0,c
  6651  00699E  D00A               	goto	l11608
  6652                           
  6653                           ; BSR set to: 0
  6654  0069A0  0100               	movlb	0	; () banked
  6655  0069A2  5164               	movf	___lwdiv@divisor& (0+255),w,b
  6656  0069A4  0100               	movlb	0	; () banked
  6657  0069A6  5F62               	subwf	___lwdiv@dividend& (0+255),f,b
  6658  0069A8  0100               	movlb	0	; () banked
  6659  0069AA  5165               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6660  0069AC  0100               	movlb	0	; () banked
  6661  0069AE  5B63               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6662                           
  6663                           ; BSR set to: 0
  6664  0069B0  0100               	movlb	0	; () banked
  6665  0069B2  8167               	bsf	___lwdiv@quotient& (0+255),0,b
  6666  0069B4                     l11608:
  6667                           
  6668                           ; BSR set to: 0
  6669  0069B4  0100               	movlb	0	; () banked
  6670  0069B6  90D8               	bcf	status,0,c
  6671  0069B8  3365               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6672  0069BA  3364               	rrcf	___lwdiv@divisor& (0+255),f,b
  6673                           
  6674                           ; BSR set to: 0
  6675  0069BC  0100               	movlb	0	; () banked
  6676  0069BE  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  6677  0069C0  D7E1               	goto	l11600
  6678  0069C2                     l2195:
  6679                           
  6680                           ; BSR set to: 0
  6681  0069C2  C067  F062         	movff	___lwdiv@quotient,?___lwdiv
  6682  0069C6  C068  F063         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6683                           
  6684                           ; BSR set to: 0
  6685  0069CA  0012               	return		;funcret
  6686  0069CC                     __end_of___lwdiv:
  6687                           	opt stack 0
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           postdec1	equ	0xFE5
  6698                           plusw1	equ	0xFE3
  6699                           fsr1h	equ	0xFE2
  6700                           fsr1l	equ	0xFE1
  6701                           indf2	equ	0xFDF
  6702                           postinc2	equ	0xFDE
  6703                           postdec2	equ	0xFDD
  6704                           plusw2	equ	0xFDB
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8
  6708                           
  6709 ;; *************** function ___exp_10 *****************
  6710 ;; Defined at:
  6711 ;;		line 15 in file "src/api/key_menu.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  n               1    wreg     unsigned char 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  n               1   31[COMRAM] unsigned char 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  2    0[BANK0 ] unsigned int 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;Total ram usage:        3 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    4
  6732 ;; This function calls:
  6733 ;;		Nothing
  6734 ;; This function is called by:
  6735 ;;		_key_adj_value_fixed_point
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text27
  6740  006EFA                     __ptext27:
  6741                           	opt stack 0
  6742  006EFA                     ___exp_10:
  6743                           	opt stack 22
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;incstack = 0
  6747                           ;___exp_10@n stored from wreg
  6748  006EFA  6E20               	movwf	___exp_10@n,c
  6749                           
  6750                           ;key_menu.c: 17: switch(n){
  6751  006EFC  D01E               	goto	l11402
  6752  006EFE                     l11380:
  6753  006EFE  0E00               	movlw	0
  6754  006F00  0100               	movlb	0	; () banked
  6755  006F02  6F61               	movwf	(?___exp_10+1)& (0+255),b
  6756  006F04  0E01               	movlw	1
  6757  006F06  6F60               	movwf	?___exp_10& (0+255),b
  6758                           
  6759                           ; BSR set to: 0
  6760  006F08  0012               	return	
  6761  006F0A                     l11384:
  6762  006F0A  0E00               	movlw	0
  6763  006F0C  0100               	movlb	0	; () banked
  6764  006F0E  6F61               	movwf	(?___exp_10+1)& (0+255),b
  6765  006F10  0E0A               	movlw	10
  6766  006F12  6F60               	movwf	?___exp_10& (0+255),b
  6767                           
  6768                           ; BSR set to: 0
  6769  006F14  0012               	return	
  6770  006F16                     l11388:
  6771  006F16  0E00               	movlw	0
  6772  006F18  0100               	movlb	0	; () banked
  6773  006F1A  6F61               	movwf	(?___exp_10+1)& (0+255),b
  6774  006F1C  0E64               	movlw	100
  6775  006F1E  6F60               	movwf	?___exp_10& (0+255),b
  6776                           
  6777                           ; BSR set to: 0
  6778  006F20  0012               	return	
  6779  006F22                     l11392:
  6780  006F22  0E03               	movlw	3
  6781  006F24  0100               	movlb	0	; () banked
  6782  006F26  6F61               	movwf	(?___exp_10+1)& (0+255),b
  6783  006F28  0EE8               	movlw	232
  6784  006F2A  6F60               	movwf	?___exp_10& (0+255),b
  6785                           
  6786                           ; BSR set to: 0
  6787  006F2C  0012               	return	
  6788  006F2E                     l11396:
  6789  006F2E  0E27               	movlw	39
  6790  006F30  0100               	movlb	0	; () banked
  6791  006F32  6F61               	movwf	(?___exp_10+1)& (0+255),b
  6792  006F34  0E10               	movlw	16
  6793  006F36  6F60               	movwf	?___exp_10& (0+255),b
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;key_menu.c: 23: }
  6797                           
  6798                           ; BSR set to: 0
  6799  006F38  0012               	return	
  6800  006F3A                     l11402:
  6801  006F3A  5020               	movf	___exp_10@n,w,c
  6802                           
  6803                           ; Switch size 1, requested type "space"
  6804                           ; Number of cases is 4, Range of values is 0 to 4
  6805                           ; switch strategies available:
  6806                           ; Name         Instructions Cycles
  6807                           ; simple_byte           13     7 (average)
  6808                           ;	Chosen strategy is simple_byte
  6809  006F3C  0A00               	xorlw	0	; case 0
  6810  006F3E  B4D8               	btfsc	status,2,c
  6811  006F40  D7DE               	goto	l11380
  6812  006F42  0A02               	xorlw	2	; case 2
  6813  006F44  B4D8               	btfsc	status,2,c
  6814  006F46  D7E1               	goto	l11384
  6815  006F48  0A01               	xorlw	1	; case 3
  6816  006F4A  B4D8               	btfsc	status,2,c
  6817  006F4C  D7E4               	goto	l11388
  6818  006F4E  0A07               	xorlw	7	; case 4
  6819  006F50  B4D8               	btfsc	status,2,c
  6820  006F52  D7E7               	goto	l11392
  6821  006F54  D7EC               	goto	l11396
  6822  006F56                     __end_of___exp_10:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           intcon	equ	0xFF2
  6831                           postinc0	equ	0xFEE
  6832                           wreg	equ	0xFE8
  6833                           postdec1	equ	0xFE5
  6834                           plusw1	equ	0xFE3
  6835                           fsr1h	equ	0xFE2
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           plusw2	equ	0xFDB
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845 ;; *************** function _key_process_set_long *****************
  6846 ;; Defined at:
  6847 ;;		line 139 in file "src/api/key_menu.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		None
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;Total ram usage:        0 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    4
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_key_process
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text28
  6876  007950                     __ptext28:
  6877                           	opt stack 0
  6878  007950                     _key_process_set_long:
  6879                           	opt stack 24
  6880                           
  6881                           ;incstack = 0
  6882  007950  0012               	return		;funcret
  6883  007952                     __end_of_key_process_set_long:
  6884                           	opt stack 0
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           postinc0	equ	0xFEE
  6893                           wreg	equ	0xFE8
  6894                           postdec1	equ	0xFE5
  6895                           plusw1	equ	0xFE3
  6896                           fsr1h	equ	0xFE2
  6897                           fsr1l	equ	0xFE1
  6898                           indf2	equ	0xFDF
  6899                           postinc2	equ	0xFDE
  6900                           postdec2	equ	0xFDD
  6901                           plusw2	equ	0xFDB
  6902                           fsr2h	equ	0xFDA
  6903                           fsr2l	equ	0xFD9
  6904                           status	equ	0xFD8
  6905                           
  6906 ;; *************** function _key_process_set_down_long *****************
  6907 ;; Defined at:
  6908 ;;		line 106 in file "src/api/key_menu.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;Total ram usage:        2 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    7
  6929 ;; This function calls:
  6930 ;;		___enter_menu_set_base_zero
  6931 ;;		___enter_menu_set_density
  6932 ;;		___enter_menu_set_pose
  6933 ;; This function is called by:
  6934 ;;		_key_process
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text29
  6939  0059E0                     __ptext29:
  6940                           	opt stack 0
  6941  0059E0                     _key_process_set_down_long:
  6942                           	opt stack 21
  6943                           
  6944                           ;key_menu.c: 108: if(menu==0x10){
  6945                           
  6946                           ;incstack = 0
  6947  0059E0  0E10               	movlw	16
  6948  0059E2  1838               	xorwf	_menu,w,c	;volatile
  6949  0059E4  A4D8               	btfss	status,2,c
  6950  0059E6  0012               	return	
  6951  0059E8  D02A               	goto	l12374
  6952  0059EA                     l12342:
  6953                           
  6954                           ;key_menu.c: 111: menu=0x20; __enter_menu_set_density(); break;
  6955  0059EA  0E20               	movlw	32
  6956  0059EC  6E38               	movwf	_menu,c	;volatile
  6957  0059EE  EC66  F03A         	call	___enter_menu_set_density	;wreg free
  6958  0059F2  0012               	return	
  6959  0059F4                     l12346:
  6960                           
  6961                           ;key_menu.c: 113: menu=0x30; __enter_menu_set_pose(); break;
  6962  0059F4  0E30               	movlw	48
  6963  0059F6  6E38               	movwf	_menu,c	;volatile
  6964  0059F8  EC35  F03B         	call	___enter_menu_set_pose	;wreg free
  6965  0059FC  0012               	return	
  6966  0059FE                     l12350:
  6967                           
  6968                           ;key_menu.c: 115: menu=0x40;__enter_menu_set_base_zero(); break;
  6969  0059FE  0E40               	movlw	64
  6970  005A00  6E38               	movwf	_menu,c	;volatile
  6971  005A02  EC5E  F038         	call	___enter_menu_set_base_zero	;wreg free
  6972  005A06  0012               	return	
  6973  005A08                     l12354:
  6974                           
  6975                           ;key_menu.c: 117: menu=0x50; break;
  6976  005A08  0E50               	movlw	80
  6977  005A0A  6E38               	movwf	_menu,c	;volatile
  6978  005A0C  0012               	return	
  6979  005A0E                     l12356:
  6980                           
  6981                           ;key_menu.c: 119: menu=0x60; break;
  6982  005A0E  0E60               	movlw	96
  6983  005A10  6E38               	movwf	_menu,c	;volatile
  6984  005A12  0012               	return	
  6985  005A14                     l12358:
  6986                           
  6987                           ;key_menu.c: 121: menu=0x70; break;
  6988  005A14  0E70               	movlw	112
  6989  005A16  6E38               	movwf	_menu,c	;volatile
  6990  005A18  0012               	return	
  6991  005A1A                     l12360:
  6992                           
  6993                           ;key_menu.c: 123: menu=0x80; break;
  6994  005A1A  0E80               	movlw	128
  6995  005A1C  6E38               	movwf	_menu,c	;volatile
  6996  005A1E  0012               	return	
  6997  005A20                     l12362:
  6998                           
  6999                           ;key_menu.c: 125: menu=0x90; break;
  7000  005A20  0E90               	movlw	144
  7001  005A22  6E38               	movwf	_menu,c	;volatile
  7002  005A24  0012               	return	
  7003  005A26                     l12364:
  7004                           
  7005                           ;key_menu.c: 127: menu=0xa0; break;
  7006  005A26  0EA0               	movlw	160
  7007  005A28  6E38               	movwf	_menu,c	;volatile
  7008  005A2A  0012               	return	
  7009  005A2C                     l12366:
  7010                           
  7011                           ;key_menu.c: 129: menu=0xb0; break;
  7012  005A2C  0EB0               	movlw	176
  7013  005A2E  6E38               	movwf	_menu,c	;volatile
  7014  005A30  0012               	return	
  7015  005A32                     l12368:
  7016                           
  7017                           ;key_menu.c: 131: menu=0xc0; break;
  7018  005A32  0EC0               	movlw	192
  7019  005A34  6E38               	movwf	_menu,c	;volatile
  7020  005A36  0012               	return	
  7021  005A38                     l12370:
  7022                           
  7023                           ;key_menu.c: 133: menu=0xf0; break;
  7024  005A38  0EF0               	movlw	240
  7025  005A3A  6E38               	movwf	_menu,c	;volatile
  7026                           
  7027                           ;key_menu.c: 135: }
  7028                           
  7029                           ;key_menu.c: 134: default:break;
  7030  005A3C  0012               	return	
  7031  005A3E                     l12374:
  7032  005A3E  C039  F07F         	movff	_passWord,??_key_process_set_down_long	;volatile
  7033  005A42  C03A  F080         	movff	_passWord+1,??_key_process_set_down_long+1	;volatile
  7034                           
  7035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7036                           ; Switch size 1, requested type "space"
  7037                           ; Number of cases is 1, Range of values is 0 to 0
  7038                           ; switch strategies available:
  7039                           ; Name         Instructions Cycles
  7040                           ; simple_byte            4     3 (average)
  7041                           ;	Chosen strategy is simple_byte
  7042  005A46  0100               	movlb	0	; () banked
  7043  005A48  5180               	movf	(??_key_process_set_down_long+1)& (0+255),w,b
  7044  005A4A  0A00               	xorlw	0	; case 0
  7045  005A4C  A4D8               	btfss	status,2,c
  7046  005A4E  0012               	return	
  7047                           
  7048                           ; BSR set to: 0
  7049                           ; Switch size 1, requested type "space"
  7050                           ; Number of cases is 12, Range of values is 6 to 188
  7051                           ; switch strategies available:
  7052                           ; Name         Instructions Cycles
  7053                           ; simple_byte           37    19 (average)
  7054                           ;	Chosen strategy is simple_byte
  7055  005A50  0100               	movlb	0	; () banked
  7056  005A52  517F               	movf	??_key_process_set_down_long& (0+255),w,b
  7057  005A54  0A06               	xorlw	6	; case 6
  7058  005A56  B4D8               	btfsc	status,2,c
  7059  005A58  D7E0               	goto	l12360
  7060  005A5A  0A16               	xorlw	22	; case 16
  7061  005A5C  B4D8               	btfsc	status,2,c
  7062  005A5E  D7E0               	goto	l12362
  7063  005A60  0A02               	xorlw	2	; case 18
  7064  005A62  B4D8               	btfsc	status,2,c
  7065  005A64  D7E9               	goto	l12370
  7066  005A66  0A36               	xorlw	54	; case 36
  7067  005A68  B4D8               	btfsc	status,2,c
  7068  005A6A  D7BF               	goto	l12342
  7069  005A6C  0A1C               	xorlw	28	; case 56
  7070  005A6E  B4D8               	btfsc	status,2,c
  7071  005A70  D7C6               	goto	l12350
  7072  005A72  0A7A               	xorlw	122	; case 66
  7073  005A74  B4D8               	btfsc	status,2,c
  7074  005A76  D7BE               	goto	l12346
  7075  005A78  0AC7               	xorlw	199	; case 133
  7076  005A7A  B4D8               	btfsc	status,2,c
  7077  005A7C  D7CB               	goto	l12358
  7078  005A7E  0A0F               	xorlw	15	; case 138
  7079  005A80  B4D8               	btfsc	status,2,c
  7080  005A82  D7D1               	goto	l12364
  7081  005A84  0A01               	xorlw	1	; case 139
  7082  005A86  B4D8               	btfsc	status,2,c
  7083  005A88  D7D1               	goto	l12366
  7084  005A8A  0A23               	xorlw	35	; case 168
  7085  005A8C  B4D8               	btfsc	status,2,c
  7086  005A8E  D7BC               	goto	l12354
  7087  005A90  0A01               	xorlw	1	; case 169
  7088  005A92  B4D8               	btfsc	status,2,c
  7089  005A94  D7BC               	goto	l12356
  7090  005A96  0A15               	xorlw	21	; case 188
  7091  005A98  A4D8               	btfss	status,2,c
  7092                           
  7093                           ; BSR set to: 0
  7094  005A9A  0012               	return	
  7095  005A9C  D7CA               	goto	l12368
  7096  005A9E                     __end_of_key_process_set_down_long:
  7097                           	opt stack 0
  7098                           tblptru	equ	0xFF8
  7099                           tblptrh	equ	0xFF7
  7100                           tblptrl	equ	0xFF6
  7101                           tablat	equ	0xFF5
  7102                           prodh	equ	0xFF4
  7103                           prodl	equ	0xFF3
  7104                           intcon	equ	0xFF2
  7105                           postinc0	equ	0xFEE
  7106                           wreg	equ	0xFE8
  7107                           postdec1	equ	0xFE5
  7108                           plusw1	equ	0xFE3
  7109                           fsr1h	equ	0xFE2
  7110                           fsr1l	equ	0xFE1
  7111                           indf2	equ	0xFDF
  7112                           postinc2	equ	0xFDE
  7113                           postdec2	equ	0xFDD
  7114                           plusw2	equ	0xFDB
  7115                           fsr2h	equ	0xFDA
  7116                           fsr2l	equ	0xFD9
  7117                           status	equ	0xFD8
  7118                           
  7119 ;; *************** function ___enter_menu_set_pose *****************
  7120 ;; Defined at:
  7121 ;;		line 87 in file "src/api/key_menu.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  fps             2    0[BANK0 ] PTR struct .
  7126 ;;		 -> RAM(3923), 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;Total ram usage:        3 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    4
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_key_process_set_down_long
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text30
  7151  00766A                     __ptext30:
  7152                           	opt stack 0
  7153  00766A                     ___enter_menu_set_pose:
  7154                           	opt stack 23
  7155                           
  7156                           ;key_menu.c: 88: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  7157                           
  7158                           ;incstack = 0
  7159  00766A  0E00               	movlw	0
  7160  00766C  0100               	movlb	0	; () banked
  7161  00766E  6F60               	movwf	___enter_menu_set_pose@fps& (0+255),b
  7162  007670  0EF4               	movlw	244
  7163  007672  0100               	movlb	0	; () banked
  7164  007674  6F61               	movwf	(___enter_menu_set_pose@fps+1)& (0+255),b
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;key_menu.c: 89: adjValue=(uint8_t)(fps->pos);
  7168  007676  0100               	movlb	0	; () banked
  7169  007678  EE20 F004          	lfsr	2,4
  7170  00767C  5160               	movf	___enter_menu_set_pose@fps& (0+255),w,b
  7171  00767E  26D9               	addwf	fsr2l,f,c
  7172  007680  5161               	movf	(___enter_menu_set_pose@fps+1)& (0+255),w,b
  7173  007682  22DA               	addwfc	fsr2h,f,c
  7174  007684  50DF               	movf	indf2,w,c
  7175  007686  6E20               	movwf	??___enter_menu_set_pose& (0+255),c
  7176  007688  5020               	movf	??___enter_menu_set_pose,w,c
  7177  00768A  0101               	movlb	1	; () banked
  7178  00768C  6F46               	movwf	_adjValue& (0+255),b	;volatile
  7179  00768E  6B47               	clrf	(_adjValue+1)& (0+255),b	;volatile
  7180  007690  6B48               	clrf	(_adjValue+2)& (0+255),b	;volatile
  7181  007692  6B49               	clrf	(_adjValue+3)& (0+255),b	;volatile
  7182                           
  7183                           ; BSR set to: 1
  7184                           ;key_menu.c: 90: adjLocation=0;
  7185  007694  0E00               	movlw	0
  7186  007696  6E3B               	movwf	_adjLocation,c	;volatile
  7187                           
  7188                           ; BSR set to: 1
  7189  007698  0012               	return		;funcret
  7190  00769A                     __end_of___enter_menu_set_pose:
  7191                           	opt stack 0
  7192                           tblptru	equ	0xFF8
  7193                           tblptrh	equ	0xFF7
  7194                           tblptrl	equ	0xFF6
  7195                           tablat	equ	0xFF5
  7196                           prodh	equ	0xFF4
  7197                           prodl	equ	0xFF3
  7198                           intcon	equ	0xFF2
  7199                           postinc0	equ	0xFEE
  7200                           wreg	equ	0xFE8
  7201                           postdec1	equ	0xFE5
  7202                           plusw1	equ	0xFE3
  7203                           fsr1h	equ	0xFE2
  7204                           fsr1l	equ	0xFE1
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           plusw2	equ	0xFDB
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function ___enter_menu_set_density *****************
  7214 ;; Defined at:
  7215 ;;		line 81 in file "src/api/key_menu.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  fps             2    2[BANK0 ] PTR struct .
  7220 ;;		 -> RAM(3923), 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;Total ram usage:        4 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    4
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		_key_process_set_down_long
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text31
  7245  0074CC                     __ptext31:
  7246                           	opt stack 0
  7247  0074CC                     ___enter_menu_set_density:
  7248                           	opt stack 23
  7249                           
  7250                           ;key_menu.c: 82: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;incstack = 0
  7254  0074CC  0E00               	movlw	0
  7255  0074CE  0100               	movlb	0	; () banked
  7256  0074D0  6F62               	movwf	___enter_menu_set_density@fps& (0+255),b
  7257  0074D2  0EF4               	movlw	244
  7258  0074D4  0100               	movlb	0	; () banked
  7259  0074D6  6F63               	movwf	(___enter_menu_set_density@fps+1)& (0+255),b
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;key_menu.c: 83: adjValue=fps->density;
  7263  0074D8  0100               	movlb	0	; () banked
  7264  0074DA  EE20 F006          	lfsr	2,6
  7265  0074DE  5162               	movf	___enter_menu_set_density@fps& (0+255),w,b
  7266  0074E0  26D9               	addwf	fsr2l,f,c
  7267  0074E2  5163               	movf	(___enter_menu_set_density@fps+1)& (0+255),w,b
  7268  0074E4  22DA               	addwfc	fsr2h,f,c
  7269  0074E6  CFDE F060          	movff	postinc2,??___enter_menu_set_density
  7270  0074EA  CFDD F061          	movff	postdec2,??___enter_menu_set_density+1
  7271  0074EE  C060  F146         	movff	??___enter_menu_set_density,_adjValue	;volatile
  7272  0074F2  C061  F147         	movff	??___enter_menu_set_density+1,_adjValue+1	;volatile
  7273  0074F6  0101               	movlb	1	; () banked
  7274  0074F8  6B48               	clrf	(_adjValue+2)& (0+255),b	;volatile
  7275  0074FA  6B49               	clrf	(_adjValue+3)& (0+255),b	;volatile
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;key_menu.c: 84: adjLocation=0;
  7279  0074FC  0E00               	movlw	0
  7280  0074FE  6E3B               	movwf	_adjLocation,c	;volatile
  7281                           
  7282                           ; BSR set to: 1
  7283  007500  0012               	return		;funcret
  7284  007502                     __end_of___enter_menu_set_density:
  7285                           	opt stack 0
  7286                           tblptru	equ	0xFF8
  7287                           tblptrh	equ	0xFF7
  7288                           tblptrl	equ	0xFF6
  7289                           tablat	equ	0xFF5
  7290                           prodh	equ	0xFF4
  7291                           prodl	equ	0xFF3
  7292                           intcon	equ	0xFF2
  7293                           postinc0	equ	0xFEE
  7294                           wreg	equ	0xFE8
  7295                           postdec1	equ	0xFE5
  7296                           plusw1	equ	0xFE3
  7297                           fsr1h	equ	0xFE2
  7298                           fsr1l	equ	0xFE1
  7299                           indf2	equ	0xFDF
  7300                           postinc2	equ	0xFDE
  7301                           postdec2	equ	0xFDD
  7302                           plusw2	equ	0xFDB
  7303                           fsr2h	equ	0xFDA
  7304                           fsr2l	equ	0xFD9
  7305                           status	equ	0xFD8
  7306                           
  7307 ;; *************** function ___enter_menu_set_base_zero *****************
  7308 ;; Defined at:
  7309 ;;		line 92 in file "src/api/key_menu.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;		None
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  fps             2   29[BANK0 ] PTR struct .
  7314 ;;		 -> RAM(3923), 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;Total ram usage:        2 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    6
  7331 ;; This function calls:
  7332 ;;		___int32_2_mflot32
  7333 ;; This function is called by:
  7334 ;;		_key_process_set_down_long
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text32
  7339  0070BC                     __ptext32:
  7340                           	opt stack 0
  7341  0070BC                     ___enter_menu_set_base_zero:
  7342                           	opt stack 21
  7343                           
  7344                           ;key_menu.c: 93: st_sysDataDef* fps=(st_sysDataDef*)0xf400;
  7345                           
  7346                           ; BSR set to: 1
  7347                           ;incstack = 0
  7348  0070BC  0E00               	movlw	0
  7349  0070BE  0100               	movlb	0	; () banked
  7350  0070C0  6F7D               	movwf	___enter_menu_set_base_zero@fps& (0+255),b
  7351  0070C2  0EF4               	movlw	244
  7352  0070C4  0100               	movlb	0	; () banked
  7353  0070C6  6F7E               	movwf	(___enter_menu_set_base_zero@fps+1)& (0+255),b
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;key_menu.c: 94: adjValue=(fps->baseZero);
  7357  0070C8  0100               	movlb	0	; () banked
  7358  0070CA  EE20 F018          	lfsr	2,24
  7359  0070CE  517D               	movf	___enter_menu_set_base_zero@fps& (0+255),w,b
  7360  0070D0  26D9               	addwf	fsr2l,f,c
  7361  0070D2  517E               	movf	(___enter_menu_set_base_zero@fps+1)& (0+255),w,b
  7362  0070D4  22DA               	addwfc	fsr2h,f,c
  7363  0070D6  CFDE F146          	movff	postinc2,_adjValue	;volatile
  7364  0070DA  CFDE F147          	movff	postinc2,_adjValue+1	;volatile
  7365  0070DE  CFDE F148          	movff	postinc2,_adjValue+2	;volatile
  7366  0070E2  CFDE F149          	movff	postinc2,_adjValue+3	;volatile
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;key_menu.c: 95: adjValue=__int32_2_mflot32(adjValue);
  7370  0070E6  C146  F06D         	movff	_adjValue,___int32_2_mflot32@x	;volatile
  7371  0070EA  C147  F06E         	movff	_adjValue+1,___int32_2_mflot32@x+1	;volatile
  7372  0070EE  C148  F06F         	movff	_adjValue+2,___int32_2_mflot32@x+2	;volatile
  7373  0070F2  C149  F070         	movff	_adjValue+3,___int32_2_mflot32@x+3	;volatile
  7374  0070F6  EC3C  F029         	call	___int32_2_mflot32	;wreg free
  7375  0070FA  C06D  F146         	movff	?___int32_2_mflot32,_adjValue	;volatile
  7376  0070FE  C06E  F147         	movff	?___int32_2_mflot32+1,_adjValue+1	;volatile
  7377  007102  C06F  F148         	movff	?___int32_2_mflot32+2,_adjValue+2	;volatile
  7378  007106  C070  F149         	movff	?___int32_2_mflot32+3,_adjValue+3	;volatile
  7379                           
  7380                           ;key_menu.c: 96: adjLocation=0;
  7381  00710A  0E00               	movlw	0
  7382  00710C  6E3B               	movwf	_adjLocation,c	;volatile
  7383  00710E  0012               	return		;funcret
  7384  007110                     __end_of___enter_menu_set_base_zero:
  7385                           	opt stack 0
  7386                           tblptru	equ	0xFF8
  7387                           tblptrh	equ	0xFF7
  7388                           tblptrl	equ	0xFF6
  7389                           tablat	equ	0xFF5
  7390                           prodh	equ	0xFF4
  7391                           prodl	equ	0xFF3
  7392                           intcon	equ	0xFF2
  7393                           postinc0	equ	0xFEE
  7394                           wreg	equ	0xFE8
  7395                           postdec1	equ	0xFE5
  7396                           plusw1	equ	0xFE3
  7397                           fsr1h	equ	0xFE2
  7398                           fsr1l	equ	0xFE1
  7399                           indf2	equ	0xFDF
  7400                           postinc2	equ	0xFDE
  7401                           postdec2	equ	0xFDD
  7402                           plusw2	equ	0xFDB
  7403                           fsr2h	equ	0xFDA
  7404                           fsr2l	equ	0xFD9
  7405                           status	equ	0xFD8
  7406                           
  7407 ;; *************** function ___int32_2_mflot32 *****************
  7408 ;; Defined at:
  7409 ;;		line 24 in file "src/api/ui.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  x               4   13[BANK0 ] long 
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;  mf              4   25[BANK0 ] struct .
  7414 ;;  t32             4   21[BANK0 ] unsigned long 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  4   13[BANK0 ] long 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7424 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;Total ram usage:       16 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    5
  7431 ;; This function calls:
  7432 ;;		___lldiv
  7433 ;; This function is called by:
  7434 ;;		___enter_menu_set_base_zero
  7435 ;;		___enter_menu_calib_press_diff
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text33
  7440  005278                     __ptext33:
  7441                           	opt stack 0
  7442  005278                     ___int32_2_mflot32:
  7443                           	opt stack 21
  7444                           
  7445                           ;ui.c: 26: st_float32 mf={0};
  7446                           
  7447                           ;incstack = 0
  7448  005278  C142  F079         	movff	___int32_2_mflot32@F7620,___int32_2_mflot32@mf
  7449  00527C  C143  F07A         	movff	___int32_2_mflot32@F7620+1,___int32_2_mflot32@mf+1
  7450  005280  C144  F07B         	movff	___int32_2_mflot32@F7620+2,___int32_2_mflot32@mf+2
  7451  005284  C145  F07C         	movff	___int32_2_mflot32@F7620+3,___int32_2_mflot32@mf+3
  7452                           
  7453                           ;ui.c: 27: uint32_t t32;
  7454                           ;ui.c: 28: t32=x;
  7455  005288  C06D  F075         	movff	___int32_2_mflot32@x,___int32_2_mflot32@t32
  7456  00528C  C06E  F076         	movff	___int32_2_mflot32@x+1,___int32_2_mflot32@t32+1
  7457  005290  C06F  F077         	movff	___int32_2_mflot32@x+2,___int32_2_mflot32@t32+2
  7458  005294  C070  F078         	movff	___int32_2_mflot32@x+3,___int32_2_mflot32@t32+3
  7459                           
  7460                           ;ui.c: 29: if(x<0){
  7461  005298  0100               	movlb	0	; () banked
  7462  00529A  AF70               	btfss	(___int32_2_mflot32@x+3)& (0+255),7,b
  7463  00529C  D040               	goto	l11420
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;ui.c: 30: t32 = ((~x) +1);
  7467  00529E  C06D  F071         	movff	___int32_2_mflot32@x,??___int32_2_mflot32
  7468  0052A2  C06E  F072         	movff	___int32_2_mflot32@x+1,??___int32_2_mflot32+1
  7469  0052A6  C06F  F073         	movff	___int32_2_mflot32@x+2,??___int32_2_mflot32+2
  7470  0052AA  C070  F074         	movff	___int32_2_mflot32@x+3,??___int32_2_mflot32+3
  7471  0052AE  0100               	movlb	0	; () banked
  7472  0052B0  1F71               	comf	??___int32_2_mflot32& (0+255),f,b
  7473  0052B2  1F72               	comf	(??___int32_2_mflot32+1)& (0+255),f,b
  7474  0052B4  1F73               	comf	(??___int32_2_mflot32+2)& (0+255),f,b
  7475  0052B6  1F74               	comf	(??___int32_2_mflot32+3)& (0+255),f,b
  7476  0052B8  2B71               	incf	??___int32_2_mflot32& (0+255),f,b
  7477  0052BA  0E00               	movlw	0
  7478  0052BC  2372               	addwfc	(??___int32_2_mflot32+1)& (0+255),f,b
  7479  0052BE  2373               	addwfc	(??___int32_2_mflot32+2)& (0+255),f,b
  7480  0052C0  2374               	addwfc	(??___int32_2_mflot32+3)& (0+255),f,b
  7481  0052C2  C071  F075         	movff	??___int32_2_mflot32,___int32_2_mflot32@t32
  7482  0052C6  C072  F076         	movff	??___int32_2_mflot32+1,___int32_2_mflot32@t32+1
  7483  0052CA  C073  F077         	movff	??___int32_2_mflot32+2,___int32_2_mflot32@t32+2
  7484  0052CE  C074  F078         	movff	??___int32_2_mflot32+3,___int32_2_mflot32@t32+3
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;ui.c: 31: mf.stru.sign=1;
  7488  0052D2  0E01               	movlw	1
  7489  0052D4  0100               	movlb	0	; () banked
  7490  0052D6  6F7C               	movwf	(___int32_2_mflot32@mf+3)& (0+255),b
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;ui.c: 32: }
  7494                           ;ui.c: 33: while(t32>9999){
  7495  0052D8  D022               	goto	l11420
  7496  0052DA                     l11412:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;ui.c: 34: mf.stru.exponent++;
  7500  0052DA  0100               	movlb	0	; () banked
  7501  0052DC  2B7B               	incf	(___int32_2_mflot32@mf+2)& (0+255),f,b
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;ui.c: 35: t32/=10;
  7505  0052DE  C075  F060         	movff	___int32_2_mflot32@t32,___lldiv@dividend
  7506  0052E2  C076  F061         	movff	___int32_2_mflot32@t32+1,___lldiv@dividend+1
  7507  0052E6  C077  F062         	movff	___int32_2_mflot32@t32+2,___lldiv@dividend+2
  7508  0052EA  C078  F063         	movff	___int32_2_mflot32@t32+3,___lldiv@dividend+3
  7509  0052EE  0E0A               	movlw	10
  7510  0052F0  0100               	movlb	0	; () banked
  7511  0052F2  6F64               	movwf	___lldiv@divisor& (0+255),b
  7512  0052F4  0E00               	movlw	0
  7513  0052F6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  7514  0052F8  0E00               	movlw	0
  7515  0052FA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  7516  0052FC  0E00               	movlw	0
  7517  0052FE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  7518  005300  ECAE  F02D         	call	___lldiv	;wreg free
  7519  005304  C060  F075         	movff	?___lldiv,___int32_2_mflot32@t32
  7520  005308  C061  F076         	movff	?___lldiv+1,___int32_2_mflot32@t32+1
  7521  00530C  C062  F077         	movff	?___lldiv+2,___int32_2_mflot32@t32+2
  7522  005310  C063  F078         	movff	?___lldiv+3,___int32_2_mflot32@t32+3
  7523                           
  7524                           ;ui.c: 36: if( mf.stru.exponent==3)break;
  7525  005314  0E03               	movlw	3
  7526  005316  0100               	movlb	0	; () banked
  7527  005318  197B               	xorwf	(___int32_2_mflot32@mf+2)& (0+255),w,b
  7528  00531A  B4D8               	btfsc	status,2,c
  7529  00531C  D00D               	goto	l11422
  7530  00531E                     l11420:
  7531                           
  7532                           ; BSR set to: 0
  7533  00531E  0100               	movlb	0	; () banked
  7534  005320  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
  7535  005322  0100               	movlb	0	; () banked
  7536  005324  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
  7537  005326  E1D9               	bnz	l11412
  7538  005328  0E10               	movlw	16
  7539  00532A  0100               	movlb	0	; () banked
  7540  00532C  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
  7541  00532E  0E27               	movlw	39
  7542  005330  0100               	movlb	0	; () banked
  7543  005332  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
  7544  005334  B0D8               	btfsc	status,0,c
  7545  005336  D7D1               	goto	l11412
  7546  005338                     l11422:
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;ui.c: 37: }
  7550                           ;ui.c: 38: if(t32>9999)t32=9999;
  7551  005338  0100               	movlb	0	; () banked
  7552  00533A  5178               	movf	(___int32_2_mflot32@t32+3)& (0+255),w,b
  7553  00533C  0100               	movlb	0	; () banked
  7554  00533E  1177               	iorwf	(___int32_2_mflot32@t32+2)& (0+255),w,b
  7555  005340  E108               	bnz	u10240
  7556  005342  0E10               	movlw	16
  7557  005344  0100               	movlb	0	; () banked
  7558  005346  5D75               	subwf	___int32_2_mflot32@t32& (0+255),w,b
  7559  005348  0E27               	movlw	39
  7560  00534A  0100               	movlb	0	; () banked
  7561  00534C  5976               	subwfb	(___int32_2_mflot32@t32+1)& (0+255),w,b
  7562  00534E  A0D8               	btfss	status,0,c
  7563  005350  D009               	goto	l11426
  7564  005352                     u10240:
  7565                           
  7566                           ; BSR set to: 0
  7567  005352  0E0F               	movlw	15
  7568  005354  0100               	movlb	0	; () banked
  7569  005356  6F75               	movwf	___int32_2_mflot32@t32& (0+255),b
  7570  005358  0E27               	movlw	39
  7571  00535A  6F76               	movwf	(___int32_2_mflot32@t32+1)& (0+255),b
  7572  00535C  0E00               	movlw	0
  7573  00535E  6F77               	movwf	(___int32_2_mflot32@t32+2)& (0+255),b
  7574  005360  0E00               	movlw	0
  7575  005362  6F78               	movwf	(___int32_2_mflot32@t32+3)& (0+255),b
  7576  005364                     l11426:
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;ui.c: 39: mf.stru.significand=t32;
  7580  005364  C075  F079         	movff	___int32_2_mflot32@t32,___int32_2_mflot32@mf
  7581  005368  C076  F07A         	movff	___int32_2_mflot32@t32+1,___int32_2_mflot32@mf+1
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;ui.c: 40: return mf.t32;
  7585  00536C  C079  F06D         	movff	___int32_2_mflot32@mf,?___int32_2_mflot32
  7586  005370  C07A  F06E         	movff	___int32_2_mflot32@mf+1,?___int32_2_mflot32+1
  7587  005374  C07B  F06F         	movff	___int32_2_mflot32@mf+2,?___int32_2_mflot32+2
  7588  005378  C07C  F070         	movff	___int32_2_mflot32@mf+3,?___int32_2_mflot32+3
  7589  00537C  0012               	return	
  7590  00537E                     __end_of___int32_2_mflot32:
  7591                           	opt stack 0
  7592                           tblptru	equ	0xFF8
  7593                           tblptrh	equ	0xFF7
  7594                           tblptrl	equ	0xFF6
  7595                           tablat	equ	0xFF5
  7596                           prodh	equ	0xFF4
  7597                           prodl	equ	0xFF3
  7598                           intcon	equ	0xFF2
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           postdec1	equ	0xFE5
  7602                           plusw1	equ	0xFE3
  7603                           fsr1h	equ	0xFE2
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           postdec2	equ	0xFDD
  7608                           plusw2	equ	0xFDB
  7609                           fsr2h	equ	0xFDA
  7610                           fsr2l	equ	0xFD9
  7611                           status	equ	0xFD8
  7612                           
  7613 ;; *************** function ___lldiv *****************
  7614 ;; Defined at:
  7615 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  dividend        4    0[BANK0 ] unsigned long 
  7618 ;;  divisor         4    4[BANK0 ] unsigned long 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  quotient        4    8[BANK0 ] unsigned long 
  7621 ;;  counter         1   12[BANK0 ] unsigned char 
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  4    0[BANK0 ] unsigned long 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7631 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;Total ram usage:       13 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    4
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		___int32_2_mflot32
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text34
  7646  005B5C                     __ptext34:
  7647                           	opt stack 0
  7648  005B5C                     ___lldiv:
  7649                           	opt stack 21
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;incstack = 0
  7653  005B5C  0E00               	movlw	0
  7654  005B5E  0100               	movlb	0	; () banked
  7655  005B60  6F68               	movwf	___lldiv@quotient& (0+255),b
  7656  005B62  0E00               	movlw	0
  7657  005B64  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  7658  005B66  0E00               	movlw	0
  7659  005B68  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  7660  005B6A  0E00               	movlw	0
  7661  005B6C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  7662                           
  7663                           ; BSR set to: 0
  7664  005B6E  0100               	movlb	0	; () banked
  7665  005B70  5164               	movf	___lldiv@divisor& (0+255),w,b
  7666  005B72  0100               	movlb	0	; () banked
  7667  005B74  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7668  005B76  0100               	movlb	0	; () banked
  7669  005B78  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7670  005B7A  0100               	movlb	0	; () banked
  7671  005B7C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7672  005B7E  B4D8               	btfsc	status,2,c
  7673  005B80  D042               	goto	l2142
  7674                           
  7675                           ; BSR set to: 0
  7676  005B82  0E01               	movlw	1
  7677  005B84  0100               	movlb	0	; () banked
  7678  005B86  6F6C               	movwf	___lldiv@counter& (0+255),b
  7679  005B88  D008               	goto	l11292
  7680  005B8A                     l11290:
  7681                           
  7682                           ; BSR set to: 0
  7683  005B8A  0100               	movlb	0	; () banked
  7684  005B8C  90D8               	bcf	status,0,c
  7685  005B8E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  7686  005B90  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7687  005B92  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7688  005B94  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7689  005B96  0100               	movlb	0	; () banked
  7690  005B98  2B6C               	incf	___lldiv@counter& (0+255),f,b
  7691  005B9A                     l11292:
  7692                           
  7693                           ; BSR set to: 0
  7694  005B9A  0100               	movlb	0	; () banked
  7695  005B9C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7696  005B9E  D7F5               	goto	l11290
  7697  005BA0                     l11294:
  7698                           
  7699                           ; BSR set to: 0
  7700  005BA0  0100               	movlb	0	; () banked
  7701  005BA2  90D8               	bcf	status,0,c
  7702  005BA4  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  7703  005BA6  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7704  005BA8  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7705  005BAA  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7706                           
  7707                           ; BSR set to: 0
  7708  005BAC  0100               	movlb	0	; () banked
  7709  005BAE  5164               	movf	___lldiv@divisor& (0+255),w,b
  7710  005BB0  0100               	movlb	0	; () banked
  7711  005BB2  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  7712  005BB4  0100               	movlb	0	; () banked
  7713  005BB6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7714  005BB8  0100               	movlb	0	; () banked
  7715  005BBA  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7716  005BBC  0100               	movlb	0	; () banked
  7717  005BBE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7718  005BC0  0100               	movlb	0	; () banked
  7719  005BC2  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7720  005BC4  0100               	movlb	0	; () banked
  7721  005BC6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7722  005BC8  0100               	movlb	0	; () banked
  7723  005BCA  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7724  005BCC  A0D8               	btfss	status,0,c
  7725  005BCE  D012               	goto	l11302
  7726                           
  7727                           ; BSR set to: 0
  7728  005BD0  0100               	movlb	0	; () banked
  7729  005BD2  5164               	movf	___lldiv@divisor& (0+255),w,b
  7730  005BD4  0100               	movlb	0	; () banked
  7731  005BD6  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  7732  005BD8  0100               	movlb	0	; () banked
  7733  005BDA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7734  005BDC  0100               	movlb	0	; () banked
  7735  005BDE  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7736  005BE0  0100               	movlb	0	; () banked
  7737  005BE2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7738  005BE4  0100               	movlb	0	; () banked
  7739  005BE6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7740  005BE8  0100               	movlb	0	; () banked
  7741  005BEA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7742  005BEC  0100               	movlb	0	; () banked
  7743  005BEE  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7744                           
  7745                           ; BSR set to: 0
  7746  005BF0  0100               	movlb	0	; () banked
  7747  005BF2  8168               	bsf	___lldiv@quotient& (0+255),0,b
  7748  005BF4                     l11302:
  7749                           
  7750                           ; BSR set to: 0
  7751  005BF4  0100               	movlb	0	; () banked
  7752  005BF6  90D8               	bcf	status,0,c
  7753  005BF8  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7754  005BFA  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7755  005BFC  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7756  005BFE  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  7757                           
  7758                           ; BSR set to: 0
  7759  005C00  0100               	movlb	0	; () banked
  7760  005C02  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  7761  005C04  D7CD               	goto	l11294
  7762  005C06                     l2142:
  7763                           
  7764                           ; BSR set to: 0
  7765  005C06  C068  F060         	movff	___lldiv@quotient,?___lldiv
  7766  005C0A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  7767  005C0E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  7768  005C12  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  7769                           
  7770                           ; BSR set to: 0
  7771  005C16  0012               	return		;funcret
  7772  005C18                     __end_of___lldiv:
  7773                           	opt stack 0
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           prodh	equ	0xFF4
  7779                           prodl	equ	0xFF3
  7780                           intcon	equ	0xFF2
  7781                           postinc0	equ	0xFEE
  7782                           wreg	equ	0xFE8
  7783                           postdec1	equ	0xFE5
  7784                           plusw1	equ	0xFE3
  7785                           fsr1h	equ	0xFE2
  7786                           fsr1l	equ	0xFE1
  7787                           indf2	equ	0xFDF
  7788                           postinc2	equ	0xFDE
  7789                           postdec2	equ	0xFDD
  7790                           plusw2	equ	0xFDB
  7791                           fsr2h	equ	0xFDA
  7792                           fsr2l	equ	0xFD9
  7793                           status	equ	0xFD8
  7794                           
  7795 ;; *************** function _key_process_set *****************
  7796 ;; Defined at:
  7797 ;;		line 144 in file "src/api/key_menu.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;		None
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      void 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7815 ;;Total ram usage:        0 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    4
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_key_process
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text35
  7826  007758                     __ptext35:
  7827                           	opt stack 0
  7828  007758                     _key_process_set:
  7829                           	opt stack 24
  7830                           
  7831                           ;key_menu.c: 146: switch(menu){
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;incstack = 0
  7835  007758  D009               	goto	l8632
  7836  00775A                     l8628:
  7837                           
  7838                           ;key_menu.c: 148: case 0x01:
  7839                           ;key_menu.c: 149: case 0x02:{passWord=0x00;adjLocation=0x00;menu=0x10;break;}
  7840  00775A  0E00               	movlw	0
  7841  00775C  6E3A               	movwf	_passWord+1,c	;volatile
  7842  00775E  0E00               	movlw	0
  7843  007760  6E39               	movwf	_passWord,c	;volatile
  7844  007762  0E00               	movlw	0
  7845  007764  6E3B               	movwf	_adjLocation,c	;volatile
  7846  007766  0E10               	movlw	16
  7847  007768  6E38               	movwf	_menu,c	;volatile
  7848                           
  7849                           ;key_menu.c: 151: }
  7850                           
  7851                           ;key_menu.c: 150: default:break;
  7852  00776A  0012               	return	
  7853  00776C                     l8632:
  7854  00776C  5038               	movf	_menu,w,c	;volatile
  7855                           
  7856                           ; Switch size 1, requested type "space"
  7857                           ; Number of cases is 3, Range of values is 0 to 2
  7858                           ; switch strategies available:
  7859                           ; Name         Instructions Cycles
  7860                           ; simple_byte           10     6 (average)
  7861                           ;	Chosen strategy is simple_byte
  7862  00776E  0A00               	xorlw	0	; case 0
  7863  007770  B4D8               	btfsc	status,2,c
  7864  007772  D7F3               	goto	l8628
  7865  007774  0A01               	xorlw	1	; case 1
  7866  007776  B4D8               	btfsc	status,2,c
  7867  007778  D7F0               	goto	l8628
  7868  00777A  0A03               	xorlw	3	; case 2
  7869  00777C  A4D8               	btfss	status,2,c
  7870  00777E  0012               	return	
  7871  007780  D7EC               	goto	l8628
  7872  007782                     __end_of_key_process_set:
  7873                           	opt stack 0
  7874                           tblptru	equ	0xFF8
  7875                           tblptrh	equ	0xFF7
  7876                           tblptrl	equ	0xFF6
  7877                           tablat	equ	0xFF5
  7878                           prodh	equ	0xFF4
  7879                           prodl	equ	0xFF3
  7880                           intcon	equ	0xFF2
  7881                           postinc0	equ	0xFEE
  7882                           wreg	equ	0xFE8
  7883                           postdec1	equ	0xFE5
  7884                           plusw1	equ	0xFE3
  7885                           fsr1h	equ	0xFE2
  7886                           fsr1l	equ	0xFE1
  7887                           indf2	equ	0xFDF
  7888                           postinc2	equ	0xFDE
  7889                           postdec2	equ	0xFDD
  7890                           plusw2	equ	0xFDB
  7891                           fsr2h	equ	0xFDA
  7892                           fsr2l	equ	0xFD9
  7893                           status	equ	0xFD8
  7894                           
  7895 ;; *************** function _key_process_down *****************
  7896 ;; Defined at:
  7897 ;;		line 47 in file "src/api/key_menu.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;		None
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      void 
  7904 ;; Registers used:
  7905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;Total ram usage:        0 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    5
  7918 ;; This function calls:
  7919 ;;		_key_shift_loc_fixed_point
  7920 ;; This function is called by:
  7921 ;;		_key_process
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text36
  7926  0073AE                     __ptext36:
  7927                           	opt stack 0
  7928  0073AE                     _key_process_down:
  7929                           	opt stack 23
  7930                           
  7931                           ;key_menu.c: 49: switch(menu){
  7932                           
  7933                           ;incstack = 0
  7934  0073AE  D00F               	goto	l12328
  7935  0073B0                     l12324:
  7936  0073B0  0E3B               	movlw	low _adjLocation
  7937  0073B2  0100               	movlb	0	; () banked
  7938  0073B4  6F60               	movwf	key_shift_loc_fixed_point@loc& (0+255),b
  7939  0073B6  0E00               	movlw	high _adjLocation
  7940  0073B8  0100               	movlb	0	; () banked
  7941  0073BA  6F61               	movwf	(key_shift_loc_fixed_point@loc+1)& (0+255),b
  7942  0073BC  0E00               	movlw	0
  7943  0073BE  0100               	movlb	0	; () banked
  7944  0073C0  6F62               	movwf	key_shift_loc_fixed_point@min& (0+255),b
  7945  0073C2  0E03               	movlw	3
  7946  0073C4  0100               	movlb	0	; () banked
  7947  0073C6  6F63               	movwf	key_shift_loc_fixed_point@max& (0+255),b
  7948  0073C8  ECEB  F03A         	call	_key_shift_loc_fixed_point	;wreg free
  7949                           
  7950                           ;key_menu.c: 55: }
  7951                           
  7952                           ;key_menu.c: 54: default:break;
  7953  0073CC  0012               	return	
  7954  0073CE                     l12328:
  7955  0073CE  5038               	movf	_menu,w,c	;volatile
  7956                           
  7957                           ; Switch size 1, requested type "space"
  7958                           ; Number of cases is 4, Range of values is 0 to 16
  7959                           ; switch strategies available:
  7960                           ; Name         Instructions Cycles
  7961                           ; simple_byte           13     7 (average)
  7962                           ;	Chosen strategy is simple_byte
  7963  0073D0  0A00               	xorlw	0	; case 0
  7964  0073D2  B4D8               	btfsc	status,2,c
  7965  0073D4  0012               	return	
  7966  0073D6  0A01               	xorlw	1	; case 1
  7967  0073D8  B4D8               	btfsc	status,2,c
  7968  0073DA  0012               	return	
  7969  0073DC  0A03               	xorlw	3	; case 2
  7970  0073DE  B4D8               	btfsc	status,2,c
  7971  0073E0  0012               	return	
  7972  0073E2  0A12               	xorlw	18	; case 16
  7973  0073E4  A4D8               	btfss	status,2,c
  7974  0073E6  0012               	return	
  7975  0073E8  D7E3               	goto	l12324
  7976  0073EA                     __end_of_key_process_down:
  7977                           	opt stack 0
  7978                           tblptru	equ	0xFF8
  7979                           tblptrh	equ	0xFF7
  7980                           tblptrl	equ	0xFF6
  7981                           tablat	equ	0xFF5
  7982                           prodh	equ	0xFF4
  7983                           prodl	equ	0xFF3
  7984                           intcon	equ	0xFF2
  7985                           postinc0	equ	0xFEE
  7986                           wreg	equ	0xFE8
  7987                           postdec1	equ	0xFE5
  7988                           plusw1	equ	0xFE3
  7989                           fsr1h	equ	0xFE2
  7990                           fsr1l	equ	0xFE1
  7991                           indf2	equ	0xFDF
  7992                           postinc2	equ	0xFDE
  7993                           postdec2	equ	0xFDD
  7994                           plusw2	equ	0xFDB
  7995                           fsr2h	equ	0xFDA
  7996                           fsr2l	equ	0xFD9
  7997                           status	equ	0xFD8
  7998                           
  7999 ;; *************** function _key_shift_loc_fixed_point *****************
  8000 ;; Defined at:
  8001 ;;		line 39 in file "src/api/key_menu.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  loc             2    0[BANK0 ] PTR unsigned char 
  8004 ;;		 -> adjLocation(1), 
  8005 ;;  min             1    2[BANK0 ] unsigned char 
  8006 ;;  max             1    3[BANK0 ] unsigned char 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  t8              1   31[COMRAM] unsigned char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8021 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8022 ;;Total ram usage:        5 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; Hardware stack levels required when called:    4
  8025 ;; This function calls:
  8026 ;;		Nothing
  8027 ;; This function is called by:
  8028 ;;		_key_process_down
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text37
  8033  0075D6                     __ptext37:
  8034                           	opt stack 0
  8035  0075D6                     _key_shift_loc_fixed_point:
  8036                           	opt stack 23
  8037                           
  8038                           ;key_menu.c: 41: uint8_t t8=*loc;
  8039                           
  8040                           ;incstack = 0
  8041  0075D6  C060  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
  8042  0075DA  C061  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
  8043  0075DE  50DF               	movf	indf2,w,c
  8044  0075E0  6E20               	movwf	key_shift_loc_fixed_point@t8,c
  8045                           
  8046                           ;key_menu.c: 42: if(min<max)return;
  8047  0075E2  0100               	movlb	0	; () banked
  8048  0075E4  5163               	movf	key_shift_loc_fixed_point@max& (0+255),w,b
  8049  0075E6  0100               	movlb	0	; () banked
  8050  0075E8  5D62               	subwf	key_shift_loc_fixed_point@min& (0+255),w,b
  8051  0075EA  A0D8               	btfss	status,0,c
  8052  0075EC  0012               	return	
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;key_menu.c: 43: t8++;
  8056                           
  8057                           ; BSR set to: 0
  8058                           
  8059                           ; BSR set to: 0
  8060  0075EE  2A20               	incf	key_shift_loc_fixed_point@t8,f,c
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;key_menu.c: 44: if(t8>max)t8=min;
  8064  0075F0  5020               	movf	key_shift_loc_fixed_point@t8,w,c
  8065  0075F2  0100               	movlb	0	; () banked
  8066  0075F4  5D63               	subwf	key_shift_loc_fixed_point@max& (0+255),w,b
  8067  0075F6  A0D8               	btfss	status,0,c
  8068                           
  8069                           ; BSR set to: 0
  8070  0075F8  C062  F020         	movff	key_shift_loc_fixed_point@min,key_shift_loc_fixed_point@t8
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;key_menu.c: 45: *loc=t8;
  8074                           
  8075                           ; BSR set to: 0
  8076  0075FC  C060  FFD9         	movff	key_shift_loc_fixed_point@loc,fsr2l
  8077  007600  C061  FFDA         	movff	key_shift_loc_fixed_point@loc+1,fsr2h
  8078  007604  C020  FFDF         	movff	key_shift_loc_fixed_point@t8,indf2
  8079                           
  8080                           ; BSR set to: 0
  8081  007608  0012               	return		;funcret
  8082  00760A                     __end_of_key_shift_loc_fixed_point:
  8083                           	opt stack 0
  8084                           tblptru	equ	0xFF8
  8085                           tblptrh	equ	0xFF7
  8086                           tblptrl	equ	0xFF6
  8087                           tablat	equ	0xFF5
  8088                           prodh	equ	0xFF4
  8089                           prodl	equ	0xFF3
  8090                           intcon	equ	0xFF2
  8091                           postinc0	equ	0xFEE
  8092                           wreg	equ	0xFE8
  8093                           postdec1	equ	0xFE5
  8094                           plusw1	equ	0xFE3
  8095                           fsr1h	equ	0xFE2
  8096                           fsr1l	equ	0xFE1
  8097                           indf2	equ	0xFDF
  8098                           postinc2	equ	0xFDE
  8099                           postdec2	equ	0xFDD
  8100                           plusw2	equ	0xFDB
  8101                           fsr2h	equ	0xFDA
  8102                           fsr2l	equ	0xFD9
  8103                           status	equ	0xFD8
  8104                           
  8105 ;; *************** function _event_process_time_out *****************
  8106 ;; Defined at:
  8107 ;;		line 56 in file "src/app/event.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;		None
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  1    wreg      char 
  8114 ;; Registers used:
  8115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;Total ram usage:        0 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:   10
  8128 ;; This function calls:
  8129 ;;		_sample_diff_pr_chip_fast
  8130 ;; This function is called by:
  8131 ;;		_event_process
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text38
  8136  0078F8                     __ptext38:
  8137                           	opt stack 0
  8138  0078F8                     _event_process_time_out:
  8139                           	opt stack 19
  8140                           
  8141                           ;event.c: 58: if(dwm!=WORK_MODE){
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;incstack = 0
  8145  0078F8  0100               	movlb	0	; () banked
  8146  0078FA  05FF               	decf	_dwm& (0+255),w,b	;volatile
  8147  0078FC  B4D8               	btfsc	status,2,c
  8148  0078FE  0012               	return	
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;event.c: 59: sample_diff_pr_chip_fast();
  8152  007900  EC1D  F027         	call	_sample_diff_pr_chip_fast	;wreg free
  8153  007904  0012               	return	
  8154  007906                     __end_of_event_process_time_out:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           intcon	equ	0xFF2
  8163                           postinc0	equ	0xFEE
  8164                           wreg	equ	0xFE8
  8165                           postdec1	equ	0xFE5
  8166                           plusw1	equ	0xFE3
  8167                           fsr1h	equ	0xFE2
  8168                           fsr1l	equ	0xFE1
  8169                           indf2	equ	0xFDF
  8170                           postinc2	equ	0xFDE
  8171                           postdec2	equ	0xFDD
  8172                           plusw2	equ	0xFDB
  8173                           fsr2h	equ	0xFDA
  8174                           fsr2l	equ	0xFD9
  8175                           status	equ	0xFD8
  8176                           
  8177 ;; *************** function _event_process_ticker *****************
  8178 ;; Defined at:
  8179 ;;		line 48 in file "src/app/event.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;		None
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      char 
  8186 ;; Registers used:
  8187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;Total ram usage:        0 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:   10
  8200 ;; This function calls:
  8201 ;;		_sample_diff_pr_chip_fast
  8202 ;; This function is called by:
  8203 ;;		_event_process
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           	psect	text39
  8208  007906                     __ptext39:
  8209                           	opt stack 0
  8210  007906                     _event_process_ticker:
  8211                           	opt stack 19
  8212                           
  8213                           ;event.c: 50: if(dwm!=WORK_MODE){
  8214                           
  8215                           ;incstack = 0
  8216  007906  0100               	movlb	0	; () banked
  8217  007908  05FF               	decf	_dwm& (0+255),w,b	;volatile
  8218  00790A  B4D8               	btfsc	status,2,c
  8219  00790C  0012               	return	
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;event.c: 51: sample_diff_pr_chip_fast();
  8223  00790E  EC1D  F027         	call	_sample_diff_pr_chip_fast	;wreg free
  8224  007912  0012               	return	
  8225  007914                     __end_of_event_process_ticker:
  8226                           	opt stack 0
  8227                           tblptru	equ	0xFF8
  8228                           tblptrh	equ	0xFF7
  8229                           tblptrl	equ	0xFF6
  8230                           tablat	equ	0xFF5
  8231                           prodh	equ	0xFF4
  8232                           prodl	equ	0xFF3
  8233                           intcon	equ	0xFF2
  8234                           postinc0	equ	0xFEE
  8235                           wreg	equ	0xFE8
  8236                           postdec1	equ	0xFE5
  8237                           plusw1	equ	0xFE3
  8238                           fsr1h	equ	0xFE2
  8239                           fsr1l	equ	0xFE1
  8240                           indf2	equ	0xFDF
  8241                           postinc2	equ	0xFDE
  8242                           postdec2	equ	0xFDD
  8243                           plusw2	equ	0xFDB
  8244                           fsr2h	equ	0xFDA
  8245                           fsr2l	equ	0xFD9
  8246                           status	equ	0xFD8
  8247                           
  8248 ;; *************** function _sample_diff_pr_chip_fast *****************
  8249 ;; Defined at:
  8250 ;;		line 82 in file "src/api/sample.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;		None
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  t16             2   38[BANK0 ] int 
  8255 ;;  ret             1   37[BANK0 ] unsigned char 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      unsigned char 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;Total ram usage:        3 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    9
  8272 ;; This function calls:
  8273 ;;		_ads1115_read_conversion
  8274 ;;		_ads1115_set_mux
  8275 ;;		_ads1115_start_conversion
  8276 ;;		_sample_diff_pr_fliter
  8277 ;; This function is called by:
  8278 ;;		_event_process_ticker
  8279 ;;		_event_process_time_out
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text40
  8284  004E3A                     __ptext40:
  8285                           	opt stack 0
  8286  004E3A                     _sample_diff_pr_chip_fast:
  8287                           	opt stack 19
  8288                           
  8289                           ;sample.c: 84: uint8_t ret=0;
  8290                           
  8291                           ;incstack = 0
  8292  004E3A  0E00               	movlw	0
  8293  004E3C  0100               	movlb	0	; () banked
  8294  004E3E  6F85               	movwf	sample_diff_pr_chip_fast@ret& (0+255),b
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;sample.c: 85: int16_t t16;
  8298                           ;sample.c: 86: fastSampTimer+=100;
  8299  004E40  0E64               	movlw	100
  8300  004E42  0101               	movlb	1	; () banked
  8301  004E44  2770               	addwf	_fastSampTimer& (0+255),f,b	;volatile
  8302  004E46  0E00               	movlw	0
  8303  004E48  2371               	addwfc	(_fastSampTimer+1)& (0+255),f,b	;volatile
  8304                           
  8305                           ; BSR set to: 1
  8306                           ;sample.c: 87: if(fastSampTimer>(1000/20)){
  8307  004E4A  0101               	movlb	1	; () banked
  8308  004E4C  5171               	movf	(_fastSampTimer+1)& (0+255),w,b	;volatile
  8309  004E4E  E105               	bnz	u11310
  8310  004E50  0E33               	movlw	51
  8311  004E52  0101               	movlb	1	; () banked
  8312  004E54  5D70               	subwf	_fastSampTimer& (0+255),w,b	;volatile
  8313  004E56  A0D8               	btfss	status,0,c
  8314  004E58  0012               	return	
  8315  004E5A                     u11310:
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;sample.c: 88: fastSampTimer=0;
  8319  004E5A  0E00               	movlw	0
  8320  004E5C  0101               	movlb	1	; () banked
  8321  004E5E  6F71               	movwf	(_fastSampTimer+1)& (0+255),b	;volatile
  8322  004E60  0E00               	movlw	0
  8323  004E62  6F70               	movwf	_fastSampTimer& (0+255),b	;volatile
  8324                           
  8325                           ; BSR set to: 1
  8326                           ;sample.c: 89: t16=ads1115_read_conversion(pAds1115DiffPrObj);
  8327  004E64  C023  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
  8328  004E68  C024  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
  8329  004E6C  ECD4  F038         	call	_ads1115_read_conversion	;wreg free
  8330  004E70  C06A  F086         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_fast@t16
  8331  004E74  C06B  F087         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_fast@t16+1
  8332                           
  8333                           ;sample.c: 90: if(diffSampCh==0){
  8334  004E78  5035               	movf	_diffSampCh,w,c
  8335  004E7A  A4D8               	btfss	status,2,c
  8336  004E7C  D01B               	goto	l12422
  8337                           
  8338                           ;sample.c: 91: if(diffSampCount_D01<20/3){
  8339  004E7E  0E06               	movlw	6
  8340  004E80  6037               	cpfslt	_diffSampCount_D01,c
  8341  004E82  D00D               	goto	l12418
  8342                           
  8343                           ;sample.c: 92: sampBufDiffPr_D01[diffSampCount_D01]=t16;
  8344  004E84  5037               	movf	_diffSampCount_D01,w,c
  8345  004E86  0D02               	mullw	2
  8346  004E88  0EAC               	movlw	low _sampBufDiffPr_D01
  8347  004E8A  24F3               	addwf	prodl,w,c
  8348  004E8C  6ED9               	movwf	fsr2l,c
  8349  004E8E  0E01               	movlw	high _sampBufDiffPr_D01
  8350  004E90  20F4               	addwfc	prodh,w,c
  8351  004E92  6EDA               	movwf	fsr2h,c
  8352  004E94  C086  FFDE         	movff	sample_diff_pr_chip_fast@t16,postinc2
  8353  004E98  C087  FFDD         	movff	sample_diff_pr_chip_fast@t16+1,postdec2
  8354                           
  8355                           ;sample.c: 93: diffSampCount_D01++;
  8356  004E9C  2A37               	incf	_diffSampCount_D01,f,c
  8357  004E9E                     l12418:
  8358                           
  8359                           ;sample.c: 94: }
  8360                           ;sample.c: 95: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_2_3);
  8361  004E9E  C023  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  8362  004EA2  C024  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  8363  004EA6  0E03               	movlw	3
  8364  004EA8  0100               	movlb	0	; () banked
  8365  004EAA  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
  8366  004EAC  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
  8367                           
  8368                           ;sample.c: 96: diffSampCh=1;
  8369  004EB0  0E01               	movlw	1
  8370  004EB2  D030               	goto	L2
  8371  004EB4                     l12422:
  8372  004EB4  0435               	decf	_diffSampCh,w,c
  8373  004EB6  A4D8               	btfss	status,2,c
  8374  004EB8  D01B               	goto	l542
  8375                           
  8376                           ;sample.c: 98: if(diffSampCount_D23<20/3){
  8377  004EBA  0E06               	movlw	6
  8378  004EBC  6036               	cpfslt	_diffSampCount_D23,c
  8379  004EBE  D00D               	goto	l12430
  8380                           
  8381                           ;sample.c: 99: sampBufDiffPr_D23[diffSampCount_D23]=t16;
  8382  004EC0  5036               	movf	_diffSampCount_D23,w,c
  8383  004EC2  0D02               	mullw	2
  8384  004EC4  0E9C               	movlw	low _sampBufDiffPr_D23
  8385  004EC6  24F3               	addwf	prodl,w,c
  8386  004EC8  6ED9               	movwf	fsr2l,c
  8387  004ECA  0E01               	movlw	high _sampBufDiffPr_D23
  8388  004ECC  20F4               	addwfc	prodh,w,c
  8389  004ECE  6EDA               	movwf	fsr2h,c
  8390  004ED0  C086  FFDE         	movff	sample_diff_pr_chip_fast@t16,postinc2
  8391  004ED4  C087  FFDD         	movff	sample_diff_pr_chip_fast@t16+1,postdec2
  8392                           
  8393                           ;sample.c: 100: diffSampCount_D23++;
  8394  004ED8  2A36               	incf	_diffSampCount_D23,f,c
  8395  004EDA                     l12430:
  8396                           
  8397                           ;sample.c: 101: }
  8398                           ;sample.c: 102: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_SINGLE_1);
  8399  004EDA  C023  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  8400  004EDE  C024  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  8401  004EE2  0E05               	movlw	5
  8402  004EE4  0100               	movlb	0	; () banked
  8403  004EE6  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
  8404  004EE8  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
  8405                           
  8406                           ;sample.c: 103: diffSampCh=2;
  8407  004EEC  0E02               	movlw	2
  8408  004EEE  D012               	goto	L2
  8409  004EF0                     l542:
  8410                           
  8411                           ;sample.c: 105: sampBufDiffPr_S1=t16;
  8412  004EF0  C086  F17A         	movff	sample_diff_pr_chip_fast@t16,_sampBufDiffPr_S1	;volatile
  8413  004EF4  C087  F17B         	movff	sample_diff_pr_chip_fast@t16+1,_sampBufDiffPr_S1+1	;volatile
  8414                           
  8415                           ;sample.c: 106: adc_inPt100=t16;
  8416  004EF8  C086  F184         	movff	sample_diff_pr_chip_fast@t16,_adc_inPt100	;volatile
  8417  004EFC  C087  F185         	movff	sample_diff_pr_chip_fast@t16+1,_adc_inPt100+1	;volatile
  8418                           
  8419                           ;sample.c: 107: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_0_1);
  8420  004F00  C023  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
  8421  004F04  C024  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
  8422  004F08  0E00               	movlw	0
  8423  004F0A  0100               	movlb	0	; () banked
  8424  004F0C  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
  8425  004F0E  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
  8426                           
  8427                           ;sample.c: 108: diffSampCh=0;
  8428  004F12  0E00               	movlw	0
  8429  004F14                     L2:
  8430  004F14  6E35               	movwf	_diffSampCh,c
  8431                           
  8432                           ;sample.c: 109: }
  8433                           ;sample.c: 111: ads1115_start_conversion(pAds1115DiffPrObj);
  8434  004F16  C023  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
  8435  004F1A  C024  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
  8436  004F1E  ECC1  F03B         	call	_ads1115_start_conversion	;wreg free
  8437                           
  8438                           ;sample.c: 113: if((diffSampCount_D01 >= diffSampCount_D23) && (diffSampCount_D01 >= 20/
      +                          3)){
  8439  004F22  5036               	movf	_diffSampCount_D23,w,c
  8440  004F24  5C37               	subwf	_diffSampCount_D01,w,c
  8441  004F26  A0D8               	btfss	status,0,c
  8442  004F28  0012               	return	
  8443  004F2A  0E05               	movlw	5
  8444  004F2C  6437               	cpfsgt	_diffSampCount_D01,c
  8445  004F2E  0012               	return	
  8446                           
  8447                           ;sample.c: 114: sample_diff_pr_fliter(&x_prDiffData);
  8448  004F30  0EEA               	movlw	low _x_prDiffData
  8449  004F32  0100               	movlb	0	; () banked
  8450  004F34  6F83               	movwf	sample_diff_pr_fliter@xin& (0+255),b
  8451  004F36  0E01               	movlw	high _x_prDiffData
  8452  004F38  0100               	movlb	0	; () banked
  8453  004F3A  6F84               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
  8454  004F3C  ECB0  F033         	call	_sample_diff_pr_fliter	;wreg free
  8455                           
  8456                           ;sample.c: 115: diffSampCount_D01=diffSampCount_D23=0;
  8457  004F40  0E00               	movlw	0
  8458  004F42  6E36               	movwf	_diffSampCount_D23,c
  8459  004F44  C036  F037         	movff	_diffSampCount_D23,_diffSampCount_D01
  8460                           
  8461                           ;sample.c: 116: diffPrSampleUpdate=1;
  8462  004F48  0E01               	movlw	1
  8463  004F4A  6E34               	movwf	_diffPrSampleUpdate,c
  8464                           
  8465                           ;sample.c: 118: in_pt100SampleUpdate=1;
  8466  004F4C  0E01               	movlw	1
  8467  004F4E  6E33               	movwf	_in_pt100SampleUpdate,c
  8468                           
  8469                           ;sample.c: 119: return 1;
  8470                           ;	Return value of _sample_diff_pr_chip_fast is never used
  8471  004F50  0012               	return	
  8472  004F52                     __end_of_sample_diff_pr_chip_fast:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           intcon	equ	0xFF2
  8481                           postinc0	equ	0xFEE
  8482                           wreg	equ	0xFE8
  8483                           postdec1	equ	0xFE5
  8484                           plusw1	equ	0xFE3
  8485                           fsr1h	equ	0xFE2
  8486                           fsr1l	equ	0xFE1
  8487                           indf2	equ	0xFDF
  8488                           postinc2	equ	0xFDE
  8489                           postdec2	equ	0xFDD
  8490                           plusw2	equ	0xFDB
  8491                           fsr2h	equ	0xFDA
  8492                           fsr2l	equ	0xFD9
  8493                           status	equ	0xFD8
  8494                           
  8495 ;; *************** function _event_process_rtc *****************
  8496 ;; Defined at:
  8497 ;;		line 6 in file "src/app/event.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;		None
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  ret             1    0[BANK1 ] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  1    wreg      char 
  8504 ;; Registers used:
  8505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;Total ram usage:        1 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; Hardware stack levels required when called:   13
  8518 ;; This function calls:
  8519 ;;		_cal_additional_pressute
  8520 ;;		_cal_diff_press
  8521 ;;		_cal_press
  8522 ;;		_cal_pt100_temperature_ex
  8523 ;;		_cal_pt100_temperature_in
  8524 ;;		_sample_diff_pr_chip_slow
  8525 ;;		_sample_in_soc_adc_ch
  8526 ;;		_sample_pr_chip_comm
  8527 ;;		_ui_disp_menu
  8528 ;; This function is called by:
  8529 ;;		_event_process
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text41
  8534  006658                     __ptext41:
  8535                           	opt stack 0
  8536  006658                     _event_process_rtc:
  8537                           	opt stack 16
  8538                           
  8539                           ;event.c: 8: uint8_t ret=0;
  8540                           
  8541                           ;incstack = 0
  8542  006658  0E00               	movlw	0
  8543  00665A  0101               	movlb	1	; () banked
  8544  00665C  6FFF               	movwf	event_process_rtc@ret& (0+255),b
  8545                           
  8546                           ; BSR set to: 1
  8547                           ;event.c: 9: if(dwm==WORK_MODE){
  8548  00665E  0100               	movlb	0	; () banked
  8549  006660  05FF               	decf	_dwm& (0+255),w,b	;volatile
  8550  006662  B4D8               	btfsc	status,2,c
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;event.c: 10: sample_diff_pr_chip_slow();
  8554  006664  EC4A  F025         	call	_sample_diff_pr_chip_slow	;wreg free
  8555                           
  8556                           ;event.c: 11: }
  8557                           ;event.c: 12: sample_pr_chip_comm();
  8558  006668  ECED  F020         	call	_sample_pr_chip_comm	;wreg free
  8559                           
  8560                           ;event.c: 13: sample_in_soc_adc_ch();
  8561  00666C  EC64  F019         	call	_sample_in_soc_adc_ch	;wreg free
  8562                           
  8563                           ;event.c: 15: if(glNoEventTimeOut){
  8564  006670  503F               	movf	_glNoEventTimeOut,w,c	;volatile
  8565  006672  B4D8               	btfsc	status,2,c
  8566  006674  D004               	goto	l12964
  8567                           
  8568                           ;event.c: 16: glNoEventTimeOut--;
  8569  006676  063F               	decf	_glNoEventTimeOut,f,c	;volatile
  8570                           
  8571                           ;event.c: 17: if(!glNoEventTimeOut){
  8572  006678  503F               	movf	_glNoEventTimeOut,w,c	;volatile
  8573  00667A  B4D8               	btfsc	status,2,c
  8574                           
  8575                           ;event.c: 18: glbEvent |= (1<<2);
  8576  00667C  842F               	bsf	_glbEvent,2,c	;volatile
  8577  00667E                     l12964:
  8578                           
  8579                           ;event.c: 19: }
  8580                           ;event.c: 20: }
  8581                           ;event.c: 21: if(diffPrSampleUpdate){
  8582  00667E  5034               	movf	_diffPrSampleUpdate,w,c
  8583  006680  B4D8               	btfsc	status,2,c
  8584  006682  D004               	goto	l12970
  8585                           
  8586                           ;event.c: 23: diffPrSampleUpdate=0;
  8587  006684  0E00               	movlw	0
  8588  006686  6E34               	movwf	_diffPrSampleUpdate,c
  8589                           
  8590                           ;event.c: 24: cal_diff_press();
  8591  006688  ECA9  F027         	call	_cal_diff_press	;wreg free
  8592  00668C                     l12970:
  8593                           
  8594                           ;event.c: 25: }
  8595                           ;event.c: 26: if(in_pt100SampleUpdate){
  8596  00668C  5033               	movf	_in_pt100SampleUpdate,w,c
  8597  00668E  B4D8               	btfsc	status,2,c
  8598  006690  D004               	goto	l12976
  8599                           
  8600                           ;event.c: 27: in_pt100SampleUpdate=0;
  8601  006692  0E00               	movlw	0
  8602  006694  6E33               	movwf	_in_pt100SampleUpdate,c
  8603                           
  8604                           ;event.c: 28: cal_pt100_temperature_in();
  8605  006696  ECE7  F016         	call	_cal_pt100_temperature_in	;wreg free
  8606  00669A                     l12976:
  8607                           
  8608                           ;event.c: 29: }
  8609                           ;event.c: 30: if(prSampleUpdate){
  8610  00669A  0101               	movlb	1	; () banked
  8611  00669C  5188               	movf	_prSampleUpdate& (0+255),w,b
  8612  00669E  B4D8               	btfsc	status,2,c
  8613  0066A0  D005               	goto	l12982
  8614                           
  8615                           ; BSR set to: 1
  8616                           ;event.c: 31: prSampleUpdate=0;
  8617  0066A2  0E00               	movlw	0
  8618  0066A4  0101               	movlb	1	; () banked
  8619  0066A6  6F88               	movwf	_prSampleUpdate& (0+255),b
  8620                           
  8621                           ; BSR set to: 1
  8622                           ;event.c: 32: cal_press();
  8623  0066A8  EC2E  F034         	call	_cal_press	;wreg free
  8624  0066AC                     l12982:
  8625                           
  8626                           ;event.c: 33: }
  8627                           ;event.c: 34: if(ex_pt100SampleUpdate){
  8628  0066AC  0101               	movlb	1	; () banked
  8629  0066AE  5189               	movf	_ex_pt100SampleUpdate& (0+255),w,b
  8630  0066B0  B4D8               	btfsc	status,2,c
  8631  0066B2  D005               	goto	l12988
  8632                           
  8633                           ; BSR set to: 1
  8634                           ;event.c: 35: ex_pt100SampleUpdate=0;
  8635  0066B4  0E00               	movlw	0
  8636  0066B6  0101               	movlb	1	; () banked
  8637  0066B8  6F89               	movwf	_ex_pt100SampleUpdate& (0+255),b
  8638                           
  8639                           ; BSR set to: 1
  8640                           ;event.c: 36: cal_pt100_temperature_ex();
  8641  0066BA  EC28  F014         	call	_cal_pt100_temperature_ex	;wreg free
  8642  0066BE                     l12988:
  8643                           
  8644                           ;event.c: 37: }
  8645                           ;event.c: 38: if(inSocAdcSampleUpdate){
  8646  0066BE  0101               	movlb	1	; () banked
  8647  0066C0  5187               	movf	_inSocAdcSampleUpdate& (0+255),w,b
  8648  0066C2  B4D8               	btfsc	status,2,c
  8649  0066C4  D009               	goto	l12996
  8650                           
  8651                           ; BSR set to: 1
  8652                           ;event.c: 39: inSocAdcSampleUpdate=0;
  8653  0066C6  0E00               	movlw	0
  8654  0066C8  0101               	movlb	1	; () banked
  8655  0066CA  6F87               	movwf	_inSocAdcSampleUpdate& (0+255),b
  8656                           
  8657                           ; BSR set to: 1
  8658                           ;event.c: 40: cal_additional_pressute(0);
  8659  0066CC  0E00               	movlw	0
  8660  0066CE  EC77  F01B         	call	_cal_additional_pressute
  8661                           
  8662                           ;event.c: 41: cal_additional_pressute(1);
  8663  0066D2  0E01               	movlw	1
  8664  0066D4  EC77  F01B         	call	_cal_additional_pressute
  8665  0066D8                     l12996:
  8666                           
  8667                           ;event.c: 43: }
  8668                           ;event.c: 44: ui_disp_menu();
  8669  0066D8  ECE9  F03B         	call	_ui_disp_menu	;wreg free
  8670  0066DC  0012               	return	
  8671  0066DE                     __end_of_event_process_rtc:
  8672                           	opt stack 0
  8673                           tblptru	equ	0xFF8
  8674                           tblptrh	equ	0xFF7
  8675                           tblptrl	equ	0xFF6
  8676                           tablat	equ	0xFF5
  8677                           prodh	equ	0xFF4
  8678                           prodl	equ	0xFF3
  8679                           intcon	equ	0xFF2
  8680                           postinc0	equ	0xFEE
  8681                           wreg	equ	0xFE8
  8682                           postdec1	equ	0xFE5
  8683                           plusw1	equ	0xFE3
  8684                           fsr1h	equ	0xFE2
  8685                           fsr1l	equ	0xFE1
  8686                           indf2	equ	0xFDF
  8687                           postinc2	equ	0xFDE
  8688                           postdec2	equ	0xFDD
  8689                           plusw2	equ	0xFDB
  8690                           fsr2h	equ	0xFDA
  8691                           fsr2l	equ	0xFD9
  8692                           status	equ	0xFD8
  8693                           
  8694 ;; *************** function _ui_disp_menu *****************
  8695 ;; Defined at:
  8696 ;;		line 205 in file "src/api/ui.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;		None
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;		None
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  1    wreg      void 
  8703 ;; Registers used:
  8704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;Total ram usage:        0 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; Hardware stack levels required when called:   12
  8717 ;; This function calls:
  8718 ;;		_ui_disp_menu_psw_adj
  8719 ;; This function is called by:
  8720 ;;		_key_process
  8721 ;;		_event_process_rtc
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text42
  8726  0077D2                     __ptext42:
  8727                           	opt stack 0
  8728  0077D2                     _ui_disp_menu:
  8729                           	opt stack 16
  8730                           
  8731                           ;ui.c: 207: switch(menu){
  8732                           
  8733                           ;incstack = 0
  8734  0077D2  D003               	goto	l12386
  8735  0077D4                     l12382:
  8736  0077D4  EC2F  F03C         	call	_ui_disp_menu_psw_adj	;wreg free
  8737                           
  8738                           ;ui.c: 215: }
  8739                           
  8740                           ;ui.c: 213: default:break;
  8741  0077D8  0012               	return	
  8742  0077DA                     l12386:
  8743  0077DA  5038               	movf	_menu,w,c	;volatile
  8744                           
  8745                           ; Switch size 1, requested type "space"
  8746                           ; Number of cases is 4, Range of values is 0 to 16
  8747                           ; switch strategies available:
  8748                           ; Name         Instructions Cycles
  8749                           ; simple_byte           13     7 (average)
  8750                           ;	Chosen strategy is simple_byte
  8751  0077DC  0A00               	xorlw	0	; case 0
  8752  0077DE  B4D8               	btfsc	status,2,c
  8753  0077E0  0012               	return	
  8754  0077E2  0A01               	xorlw	1	; case 1
  8755  0077E4  B4D8               	btfsc	status,2,c
  8756  0077E6  0012               	return	
  8757  0077E8  0A03               	xorlw	3	; case 2
  8758  0077EA  B4D8               	btfsc	status,2,c
  8759  0077EC  0012               	return	
  8760  0077EE  0A12               	xorlw	18	; case 16
  8761  0077F0  A4D8               	btfss	status,2,c
  8762  0077F2  0012               	return	
  8763  0077F4  D7EF               	goto	l12382
  8764  0077F6                     __end_of_ui_disp_menu:
  8765                           	opt stack 0
  8766                           tblptru	equ	0xFF8
  8767                           tblptrh	equ	0xFF7
  8768                           tblptrl	equ	0xFF6
  8769                           tablat	equ	0xFF5
  8770                           prodh	equ	0xFF4
  8771                           prodl	equ	0xFF3
  8772                           intcon	equ	0xFF2
  8773                           postinc0	equ	0xFEE
  8774                           wreg	equ	0xFE8
  8775                           postdec1	equ	0xFE5
  8776                           plusw1	equ	0xFE3
  8777                           fsr1h	equ	0xFE2
  8778                           fsr1l	equ	0xFE1
  8779                           indf2	equ	0xFDF
  8780                           postinc2	equ	0xFDE
  8781                           postdec2	equ	0xFDD
  8782                           plusw2	equ	0xFDB
  8783                           fsr2h	equ	0xFDA
  8784                           fsr2l	equ	0xFD9
  8785                           status	equ	0xFD8
  8786                           
  8787 ;; *************** function _ui_disp_menu_psw_adj *****************
  8788 ;; Defined at:
  8789 ;;		line 200 in file "src/api/ui.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;		None
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;		None
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      void 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8807 ;;Total ram usage:        0 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:   11
  8810 ;; This function calls:
  8811 ;;		_ui_disp_adj_xfixed_pt
  8812 ;; This function is called by:
  8813 ;;		_ui_disp_menu
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text43
  8818  00785E                     __ptext43:
  8819                           	opt stack 0
  8820  00785E                     _ui_disp_menu_psw_adj:
  8821                           	opt stack 16
  8822                           
  8823                           ;ui.c: 202: ui_disp_adj_xfixed_pt((uint8_t*)" psd",passWord,adjLocation);
  8824                           
  8825                           ;incstack = 0
  8826  00785E  0EF2               	movlw	low STR_3
  8827  007860  0100               	movlb	0	; () banked
  8828  007862  6F76               	movwf	ui_disp_adj_xfixed_pt@str& (0+255),b
  8829  007864  0EFF               	movlw	high STR_3
  8830  007866  0100               	movlb	0	; () banked
  8831  007868  6F77               	movwf	(ui_disp_adj_xfixed_pt@str+1)& (0+255),b
  8832  00786A  C039  F078         	movff	_passWord,ui_disp_adj_xfixed_pt@x	;volatile
  8833  00786E  C03A  F079         	movff	_passWord+1,ui_disp_adj_xfixed_pt@x+1	;volatile
  8834  007872  C03B  F07A         	movff	_adjLocation,ui_disp_adj_xfixed_pt@loc	;volatile
  8835  007876  EC68  F02E         	call	_ui_disp_adj_xfixed_pt	;wreg free
  8836  00787A  0012               	return		;funcret
  8837  00787C                     __end_of_ui_disp_menu_psw_adj:
  8838                           	opt stack 0
  8839                           tblptru	equ	0xFF8
  8840                           tblptrh	equ	0xFF7
  8841                           tblptrl	equ	0xFF6
  8842                           tablat	equ	0xFF5
  8843                           prodh	equ	0xFF4
  8844                           prodl	equ	0xFF3
  8845                           intcon	equ	0xFF2
  8846                           postinc0	equ	0xFEE
  8847                           wreg	equ	0xFE8
  8848                           postdec1	equ	0xFE5
  8849                           plusw1	equ	0xFE3
  8850                           fsr1h	equ	0xFE2
  8851                           fsr1l	equ	0xFE1
  8852                           indf2	equ	0xFDF
  8853                           postinc2	equ	0xFDE
  8854                           postdec2	equ	0xFDD
  8855                           plusw2	equ	0xFDB
  8856                           fsr2h	equ	0xFDA
  8857                           fsr2l	equ	0xFD9
  8858                           status	equ	0xFD8
  8859                           
  8860 ;; *************** function _ui_disp_adj_xfixed_pt *****************
  8861 ;; Defined at:
  8862 ;;		line 186 in file "src/api/ui.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;  str             2   22[BANK0 ] PTR unsigned char 
  8865 ;;		 -> STR_3(5), 
  8866 ;;  x               2   24[BANK0 ] unsigned int 
  8867 ;;  loc             1   26[BANK0 ] unsigned char 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  buf            10   29[BANK0 ] unsigned char [10]
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      void 
  8872 ;; Registers used:
  8873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8879 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8880 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;Total ram usage:       17 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; Hardware stack levels required when called:   10
  8886 ;; This function calls:
  8887 ;;		___x_arrange_str
  8888 ;;		_lcd_disp_refresh
  8889 ;;		_lcd_show_string
  8890 ;;		_m_int16_2_str_4
  8891 ;;		_m_mem_cpy
  8892 ;;		_ui_disp_clear_num_dp
  8893 ;; This function is called by:
  8894 ;;		_ui_disp_menu_psw_adj
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           	psect	text44
  8899  005CD0                     __ptext44:
  8900                           	opt stack 0
  8901  005CD0                     _ui_disp_adj_xfixed_pt:
  8902                           	opt stack 16
  8903                           
  8904                           ;ui.c: 188: uint8_t buf[10];
  8905                           ;ui.c: 189: ui_disp_clear_num_dp();
  8906                           
  8907                           ;incstack = 0
  8908  005CD0  ECD8  F037         	call	_ui_disp_clear_num_dp	;wreg free
  8909                           
  8910                           ;ui.c: 190: if(x>9999)x=9999;
  8911  005CD4  0E10               	movlw	16
  8912  005CD6  0100               	movlb	0	; () banked
  8913  005CD8  5D78               	subwf	ui_disp_adj_xfixed_pt@x& (0+255),w,b
  8914  005CDA  0E27               	movlw	39
  8915  005CDC  0100               	movlb	0	; () banked
  8916  005CDE  5979               	subwfb	(ui_disp_adj_xfixed_pt@x+1)& (0+255),w,b
  8917  005CE0  A0D8               	btfss	status,0,c
  8918  005CE2  D005               	goto	l11438
  8919                           
  8920                           ; BSR set to: 0
  8921  005CE4  0E27               	movlw	39
  8922  005CE6  0100               	movlb	0	; () banked
  8923  005CE8  6F79               	movwf	(ui_disp_adj_xfixed_pt@x+1)& (0+255),b
  8924  005CEA  0E0F               	movlw	15
  8925  005CEC  6F78               	movwf	ui_disp_adj_xfixed_pt@x& (0+255),b
  8926  005CEE                     l11438:
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;ui.c: 191: m_mem_cpy(buf,str);
  8930  005CEE  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  8931  005CF0  0100               	movlb	0	; () banked
  8932  005CF2  6F60               	movwf	m_mem_cpy@d& (0+255),b
  8933  005CF4  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  8934  005CF6  0100               	movlb	0	; () banked
  8935  005CF8  6F61               	movwf	(m_mem_cpy@d+1)& (0+255),b
  8936  005CFA  C076  F062         	movff	ui_disp_adj_xfixed_pt@str,m_mem_cpy@s
  8937  005CFE  C077  F063         	movff	ui_disp_adj_xfixed_pt@str+1,m_mem_cpy@s+1
  8938  005D02  EC19  F039         	call	_m_mem_cpy	;wreg free
  8939                           
  8940                           ;ui.c: 192: m_int16_2_str_4(buf+4,x);
  8941  005D06  0E81               	movlw	low (ui_disp_adj_xfixed_pt@buf+4)
  8942  005D08  0100               	movlb	0	; () banked
  8943  005D0A  6F68               	movwf	m_int16_2_str_4@buf& (0+255),b
  8944  005D0C  0E00               	movlw	high (ui_disp_adj_xfixed_pt@buf+4)
  8945  005D0E  0100               	movlb	0	; () banked
  8946  005D10  6F69               	movwf	(m_int16_2_str_4@buf+1)& (0+255),b
  8947  005D12  C078  F06A         	movff	ui_disp_adj_xfixed_pt@x,m_int16_2_str_4@x
  8948  005D16  C079  F06B         	movff	ui_disp_adj_xfixed_pt@x+1,m_int16_2_str_4@x+1
  8949  005D1A  EC9B  F024         	call	_m_int16_2_str_4	;wreg free
  8950                           
  8951                           ;ui.c: 193: __x_arrange_str(buf,8);
  8952  005D1E  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  8953  005D20  0100               	movlb	0	; () banked
  8954  005D22  6F60               	movwf	___x_arrange_str@str& (0+255),b
  8955  005D24  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  8956  005D26  0100               	movlb	0	; () banked
  8957  005D28  6F61               	movwf	(___x_arrange_str@str+1)& (0+255),b
  8958  005D2A  0E08               	movlw	8
  8959  005D2C  0100               	movlb	0	; () banked
  8960  005D2E  6F62               	movwf	___x_arrange_str@len& (0+255),b
  8961  005D30  ECF1  F036         	call	___x_arrange_str	;wreg free
  8962                           
  8963                           ;ui.c: 194: if(loc>3)loc=3;
  8964  005D34  0E03               	movlw	3
  8965  005D36  0100               	movlb	0	; () banked
  8966  005D38  657A               	cpfsgt	ui_disp_adj_xfixed_pt@loc& (0+255),b
  8967  005D3A  D003               	goto	l11448
  8968                           
  8969                           ; BSR set to: 0
  8970  005D3C  0E03               	movlw	3
  8971  005D3E  0100               	movlb	0	; () banked
  8972  005D40  6F7A               	movwf	ui_disp_adj_xfixed_pt@loc& (0+255),b
  8973  005D42                     l11448:
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;ui.c: 195: if(!(RTCCFGbits.HALFSEC))buf[4+loc]=' ';
  8977  005D42  010F               	movlb	15	; () banked
  8978  005D44  B75F               	btfsc	95,3,b	;volatile
  8979  005D46  D014               	goto	l11452
  8980                           
  8981                           ; BSR set to: 15
  8982  005D48  0100               	movlb	0	; () banked
  8983  005D4A  517A               	movf	ui_disp_adj_xfixed_pt@loc& (0+255),w,b
  8984  005D4C  0100               	movlb	0	; () banked
  8985  005D4E  6F7B               	movwf	??_ui_disp_adj_xfixed_pt& (0+255),b
  8986  005D50  6B7C               	clrf	(??_ui_disp_adj_xfixed_pt+1)& (0+255),b
  8987  005D52  0E04               	movlw	4
  8988  005D54  0100               	movlb	0	; () banked
  8989  005D56  277B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),f,b
  8990  005D58  0E00               	movlw	0
  8991  005D5A  237C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),f,b
  8992  005D5C  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  8993  005D5E  0100               	movlb	0	; () banked
  8994  005D60  257B               	addwf	??_ui_disp_adj_xfixed_pt& (0+255),w,b
  8995  005D62  6ED9               	movwf	fsr2l,c
  8996  005D64  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  8997  005D66  0100               	movlb	0	; () banked
  8998  005D68  217C               	addwfc	(??_ui_disp_adj_xfixed_pt+1)& (0+255),w,b
  8999  005D6A  6EDA               	movwf	fsr2h,c
  9000  005D6C  0E20               	movlw	32
  9001  005D6E  6EDF               	movwf	indf2,c
  9002  005D70                     l11452:
  9003                           
  9004                           ;ui.c: 196: lcd_show_string(buf);
  9005  005D70  0E7D               	movlw	low ui_disp_adj_xfixed_pt@buf
  9006  005D72  0100               	movlb	0	; () banked
  9007  005D74  6F73               	movwf	lcd_show_string@str& (0+255),b
  9008  005D76  0E00               	movlw	high ui_disp_adj_xfixed_pt@buf
  9009  005D78  0100               	movlb	0	; () banked
  9010  005D7A  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
  9011  005D7C  EC21  F035         	call	_lcd_show_string	;wreg free
  9012                           
  9013                           ;ui.c: 197: lcd_disp_refresh();
  9014  005D80  EC91  F036         	call	_lcd_disp_refresh	;wreg free
  9015  005D84  0012               	return		;funcret
  9016  005D86                     __end_of_ui_disp_adj_xfixed_pt:
  9017                           	opt stack 0
  9018                           tblptru	equ	0xFF8
  9019                           tblptrh	equ	0xFF7
  9020                           tblptrl	equ	0xFF6
  9021                           tablat	equ	0xFF5
  9022                           prodh	equ	0xFF4
  9023                           prodl	equ	0xFF3
  9024                           intcon	equ	0xFF2
  9025                           postinc0	equ	0xFEE
  9026                           wreg	equ	0xFE8
  9027                           postdec1	equ	0xFE5
  9028                           plusw1	equ	0xFE3
  9029                           fsr1h	equ	0xFE2
  9030                           fsr1l	equ	0xFE1
  9031                           indf2	equ	0xFDF
  9032                           postinc2	equ	0xFDE
  9033                           postdec2	equ	0xFDD
  9034                           plusw2	equ	0xFDB
  9035                           fsr2h	equ	0xFDA
  9036                           fsr2l	equ	0xFD9
  9037                           status	equ	0xFD8
  9038                           
  9039 ;; *************** function _ui_disp_clear_num_dp *****************
  9040 ;; Defined at:
  9041 ;;		line 159 in file "src/api/ui.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;		None
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;		None
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  1    wreg      void 
  9048 ;; Registers used:
  9049 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/0
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;Total ram usage:        0 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:    9
  9062 ;; This function calls:
  9063 ;;		_lcd_show_dp
  9064 ;;		_lcd_show_string
  9065 ;; This function is called by:
  9066 ;;		_ui_disp_adj_xfixed_pt
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text45
  9071  006FB0                     __ptext45:
  9072                           	opt stack 0
  9073  006FB0                     _ui_disp_clear_num_dp:
  9074                           	opt stack 16
  9075                           
  9076                           ;ui.c: 161: lcd_show_string((uint8_t*)"        ");
  9077                           
  9078                           ;incstack = 0
  9079  006FB0  0EE4               	movlw	low STR_2
  9080  006FB2  0100               	movlb	0	; () banked
  9081  006FB4  6F73               	movwf	lcd_show_string@str& (0+255),b
  9082  006FB6  0EFF               	movlw	high STR_2
  9083  006FB8  0100               	movlb	0	; () banked
  9084  006FBA  6F74               	movwf	(lcd_show_string@str+1)& (0+255),b
  9085  006FBC  EC21  F035         	call	_lcd_show_string	;wreg free
  9086                           
  9087                           ;ui.c: 162: lcd_show_dp(0,0);
  9088  006FC0  0E00               	movlw	0
  9089  006FC2  0100               	movlb	0	; () banked
  9090  006FC4  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9091  006FC6  0E00               	movlw	0
  9092  006FC8  EC58  F035         	call	_lcd_show_dp
  9093                           
  9094                           ;ui.c: 163: lcd_show_dp(1,0);
  9095  006FCC  0E00               	movlw	0
  9096  006FCE  0100               	movlb	0	; () banked
  9097  006FD0  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9098  006FD2  0E01               	movlw	1
  9099  006FD4  EC58  F035         	call	_lcd_show_dp
  9100                           
  9101                           ;ui.c: 164: lcd_show_dp(2,0);
  9102  006FD8  0E00               	movlw	0
  9103  006FDA  0100               	movlb	0	; () banked
  9104  006FDC  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9105  006FDE  0E02               	movlw	2
  9106  006FE0  EC58  F035         	call	_lcd_show_dp
  9107                           
  9108                           ;ui.c: 165: lcd_show_dp(4,0);
  9109  006FE4  0E00               	movlw	0
  9110  006FE6  0100               	movlb	0	; () banked
  9111  006FE8  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9112  006FEA  0E04               	movlw	4
  9113  006FEC  EC58  F035         	call	_lcd_show_dp
  9114                           
  9115                           ;ui.c: 166: lcd_show_dp(5,0);
  9116  006FF0  0E00               	movlw	0
  9117  006FF2  0100               	movlb	0	; () banked
  9118  006FF4  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9119  006FF6  0E05               	movlw	5
  9120  006FF8  EC58  F035         	call	_lcd_show_dp
  9121                           
  9122                           ;ui.c: 167: lcd_show_dp(6,0);
  9123  006FFC  0E00               	movlw	0
  9124  006FFE  0100               	movlb	0	; () banked
  9125  007000  6F70               	movwf	lcd_show_dp@show& (0+255),b
  9126  007002  0E06               	movlw	6
  9127  007004  EC58  F035         	call	_lcd_show_dp
  9128  007008  0012               	return		;funcret
  9129  00700A                     __end_of_ui_disp_clear_num_dp:
  9130                           	opt stack 0
  9131                           tblptru	equ	0xFF8
  9132                           tblptrh	equ	0xFF7
  9133                           tblptrl	equ	0xFF6
  9134                           tablat	equ	0xFF5
  9135                           prodh	equ	0xFF4
  9136                           prodl	equ	0xFF3
  9137                           intcon	equ	0xFF2
  9138                           postinc0	equ	0xFEE
  9139                           wreg	equ	0xFE8
  9140                           postdec1	equ	0xFE5
  9141                           plusw1	equ	0xFE3
  9142                           fsr1h	equ	0xFE2
  9143                           fsr1l	equ	0xFE1
  9144                           indf2	equ	0xFDF
  9145                           postinc2	equ	0xFDE
  9146                           postdec2	equ	0xFDD
  9147                           plusw2	equ	0xFDB
  9148                           fsr2h	equ	0xFDA
  9149                           fsr2l	equ	0xFD9
  9150                           status	equ	0xFD8
  9151                           
  9152 ;; *************** function _lcd_show_string *****************
  9153 ;; Defined at:
  9154 ;;		line 534 in file "src/driver/lcd.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  str             2   19[BANK0 ] PTR unsigned char 
  9157 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), STR_2(9), ui_disp_rtc_mm_ss@buf(10), 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  t8              1   21[BANK0 ] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9172 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9173 ;;Total ram usage:        3 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    8
  9176 ;; This function calls:
  9177 ;;		_lcd_show_chr
  9178 ;; This function is called by:
  9179 ;;		_ui_disp_clear_num_dp
  9180 ;;		_ui_disp_adj_xfixed_pt
  9181 ;;		_ui_disp_rtc_mm_ss
  9182 ;;		_ui_disp_adj_xfloat_pt
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text46
  9187  006A42                     __ptext46:
  9188                           	opt stack 0
  9189  006A42                     _lcd_show_string:
  9190                           	opt stack 16
  9191                           
  9192                           ;lcd.c: 536: uint8_t t8=0;
  9193                           
  9194                           ;incstack = 0
  9195  006A42  0E00               	movlw	0
  9196  006A44  0100               	movlb	0	; () banked
  9197  006A46  6F75               	movwf	lcd_show_string@t8& (0+255),b
  9198                           
  9199                           ;lcd.c: 537: while(*str!='\0' && t8<8){
  9200  006A48  D01B               	goto	l10302
  9201  006A4A                     l10296:
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;lcd.c: 538: lcd_show_chr(t8,*str);
  9205  006A4A  C073  FFF6         	movff	lcd_show_string@str,tblptrl
  9206  006A4E  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
  9207  006A52  6AF8               	clrf	tblptru,c
  9208  006A54  0E0F               	movlw	(high __ramtop+-1)
  9209  006A56  64F7               	cpfsgt	tblptrh,c
  9210  006A58  D003               	bra	u8867
  9211  006A5A  0008               	tblrd		*
  9212  006A5C  50F5               	movf	tablat,w,c
  9213  006A5E  D005               	bra	u8860
  9214  006A60                     u8867:
  9215  006A60  CFF6 FFE9          	movff	tblptrl,fsr0l
  9216  006A64  CFF7 FFEA          	movff	tblptrh,fsr0h
  9217  006A68  50EF               	movf	indf0,w,c
  9218  006A6A                     u8860:
  9219  006A6A  0100               	movlb	0	; () banked
  9220  006A6C  6F70               	movwf	lcd_show_chr@chr& (0+255),b
  9221  006A6E  0100               	movlb	0	; () banked
  9222  006A70  5175               	movf	lcd_show_string@t8& (0+255),w,b
  9223  006A72  EC5A  F030         	call	_lcd_show_chr
  9224                           
  9225                           ;lcd.c: 539: str++;
  9226  006A76  0100               	movlb	0	; () banked
  9227  006A78  4B73               	infsnz	lcd_show_string@str& (0+255),f,b
  9228  006A7A  2B74               	incf	(lcd_show_string@str+1)& (0+255),f,b
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;lcd.c: 540: t8++;
  9232  006A7C  0100               	movlb	0	; () banked
  9233  006A7E  2B75               	incf	lcd_show_string@t8& (0+255),f,b
  9234  006A80                     l10302:
  9235                           
  9236                           ; BSR set to: 0
  9237  006A80  C073  FFF6         	movff	lcd_show_string@str,tblptrl
  9238  006A84  C074  FFF7         	movff	lcd_show_string@str+1,tblptrh
  9239  006A88  6AF8               	clrf	tblptru,c
  9240  006A8A  0E0F               	movlw	(high __ramtop+-1)
  9241  006A8C  64F7               	cpfsgt	tblptrh,c
  9242  006A8E  D003               	bra	u8877
  9243  006A90  0008               	tblrd		*
  9244  006A92  50F5               	movf	tablat,w,c
  9245  006A94  D005               	bra	u8870
  9246  006A96                     u8877:
  9247  006A96  CFF6 FFE9          	movff	tblptrl,fsr0l
  9248  006A9A  CFF7 FFEA          	movff	tblptrh,fsr0h
  9249  006A9E  50EF               	movf	indf0,w,c
  9250  006AA0                     u8870:
  9251  006AA0  0900               	iorlw	0
  9252  006AA2  B4D8               	btfsc	status,2,c
  9253  006AA4  0012               	return	
  9254  006AA6  0E07               	movlw	7
  9255  006AA8  0100               	movlb	0	; () banked
  9256  006AAA  6575               	cpfsgt	lcd_show_string@t8& (0+255),b
  9257  006AAC  D7CE               	goto	l10296
  9258  006AAE  0012               	return	
  9259  006AB0                     __end_of_lcd_show_string:
  9260                           	opt stack 0
  9261                           tblptru	equ	0xFF8
  9262                           tblptrh	equ	0xFF7
  9263                           tblptrl	equ	0xFF6
  9264                           tablat	equ	0xFF5
  9265                           prodh	equ	0xFF4
  9266                           prodl	equ	0xFF3
  9267                           intcon	equ	0xFF2
  9268                           indf0	equ	0xFEF
  9269                           postinc0	equ	0xFEE
  9270                           fsr0h	equ	0xFEA
  9271                           fsr0l	equ	0xFE9
  9272                           wreg	equ	0xFE8
  9273                           postdec1	equ	0xFE5
  9274                           plusw1	equ	0xFE3
  9275                           fsr1h	equ	0xFE2
  9276                           fsr1l	equ	0xFE1
  9277                           indf2	equ	0xFDF
  9278                           postinc2	equ	0xFDE
  9279                           postdec2	equ	0xFDD
  9280                           plusw2	equ	0xFDB
  9281                           fsr2h	equ	0xFDA
  9282                           fsr2l	equ	0xFD9
  9283                           status	equ	0xFD8
  9284                           
  9285 ;; *************** function _lcd_show_chr *****************
  9286 ;; Defined at:
  9287 ;;		line 489 in file "src/driver/lcd.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  loc             1    wreg     unsigned char 
  9290 ;;  chr             1   16[BANK0 ] unsigned char 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  loc             1   17[BANK0 ] unsigned char 
  9293 ;;  code            1   18[BANK0 ] unsigned char 
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      void 
  9296 ;; Registers used:
  9297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9303 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;Total ram usage:        3 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    7
  9310 ;; This function calls:
  9311 ;;		_lcd_disp_chr_loc_0
  9312 ;;		_lcd_disp_chr_loc_1
  9313 ;;		_lcd_disp_chr_loc_2
  9314 ;;		_lcd_disp_chr_loc_3
  9315 ;;		_lcd_disp_chr_loc_4
  9316 ;;		_lcd_disp_chr_loc_5
  9317 ;;		_lcd_disp_chr_loc_6
  9318 ;;		_lcd_disp_chr_loc_7
  9319 ;;		_lcd_disp_get_code
  9320 ;; This function is called by:
  9321 ;;		_lcd_show_string_l0
  9322 ;;		_lcd_show_string_l1
  9323 ;;		_lcd_show_string
  9324 ;;		_lcd_show_chr_lc
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           	psect	text47
  9329  0060B4                     __ptext47:
  9330                           	opt stack 0
  9331  0060B4                     _lcd_show_chr:
  9332                           	opt stack 21
  9333                           
  9334                           ;incstack = 0
  9335                           ;lcd_show_chr@loc stored from wreg
  9336  0060B4  0100               	movlb	0	; () banked
  9337  0060B6  6F71               	movwf	lcd_show_chr@loc& (0+255),b
  9338                           
  9339                           ;lcd.c: 491: uint8_t code=lcd_disp_get_code(chr);
  9340  0060B8  0100               	movlb	0	; () banked
  9341  0060BA  5170               	movf	lcd_show_chr@chr& (0+255),w,b
  9342  0060BC  ECC2  F036         	call	_lcd_disp_get_code
  9343  0060C0  0100               	movlb	0	; () banked
  9344  0060C2  6F72               	movwf	lcd_show_chr@code& (0+255),b
  9345                           
  9346                           ;lcd.c: 492: switch(loc){
  9347  0060C4  D028               	goto	l10274
  9348  0060C6                     l10256:
  9349                           
  9350                           ; BSR set to: 0
  9351  0060C6  0100               	movlb	0	; () banked
  9352  0060C8  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9353  0060CA  EC9E  F032         	call	_lcd_disp_chr_loc_0
  9354  0060CE  0012               	return	
  9355  0060D0                     l10258:
  9356  0060D0  0100               	movlb	0	; () banked
  9357  0060D2  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9358  0060D4  EC56  F032         	call	_lcd_disp_chr_loc_1
  9359  0060D8  0012               	return	
  9360  0060DA                     l10260:
  9361  0060DA  0100               	movlb	0	; () banked
  9362  0060DC  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9363  0060DE  EC0E  F032         	call	_lcd_disp_chr_loc_2
  9364  0060E2  0012               	return	
  9365  0060E4                     l10262:
  9366  0060E4  0100               	movlb	0	; () banked
  9367  0060E6  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9368  0060E8  ECC6  F031         	call	_lcd_disp_chr_loc_3
  9369  0060EC  0012               	return	
  9370  0060EE                     l10264:
  9371  0060EE  0100               	movlb	0	; () banked
  9372  0060F0  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9373  0060F2  EC7E  F031         	call	_lcd_disp_chr_loc_4
  9374  0060F6  0012               	return	
  9375  0060F8                     l10266:
  9376  0060F8  0100               	movlb	0	; () banked
  9377  0060FA  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9378  0060FC  EC36  F031         	call	_lcd_disp_chr_loc_5
  9379  006100  0012               	return	
  9380  006102                     l10268:
  9381  006102  0100               	movlb	0	; () banked
  9382  006104  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9383  006106  ECEE  F030         	call	_lcd_disp_chr_loc_6
  9384  00610A  0012               	return	
  9385  00610C                     l10270:
  9386  00610C  0100               	movlb	0	; () banked
  9387  00610E  5172               	movf	lcd_show_chr@code& (0+255),w,b
  9388  006110  ECA6  F030         	call	_lcd_disp_chr_loc_7
  9389                           
  9390                           ;lcd.c: 502: }
  9391                           
  9392                           ;lcd.c: 501: default:break;
  9393  006114  0012               	return	
  9394  006116                     l10274:
  9395  006116  0100               	movlb	0	; () banked
  9396  006118  5171               	movf	lcd_show_chr@loc& (0+255),w,b
  9397                           
  9398                           ; Switch size 1, requested type "space"
  9399                           ; Number of cases is 8, Range of values is 0 to 7
  9400                           ; switch strategies available:
  9401                           ; Name         Instructions Cycles
  9402                           ; simple_byte           25    13 (average)
  9403                           ;	Chosen strategy is simple_byte
  9404  00611A  0A00               	xorlw	0	; case 0
  9405  00611C  B4D8               	btfsc	status,2,c
  9406  00611E  D7D3               	goto	l10256
  9407  006120  0A01               	xorlw	1	; case 1
  9408  006122  B4D8               	btfsc	status,2,c
  9409  006124  D7D5               	goto	l10258
  9410  006126  0A03               	xorlw	3	; case 2
  9411  006128  B4D8               	btfsc	status,2,c
  9412  00612A  D7D7               	goto	l10260
  9413  00612C  0A01               	xorlw	1	; case 3
  9414  00612E  B4D8               	btfsc	status,2,c
  9415  006130  D7D9               	goto	l10262
  9416  006132  0A07               	xorlw	7	; case 4
  9417  006134  B4D8               	btfsc	status,2,c
  9418  006136  D7DB               	goto	l10264
  9419  006138  0A01               	xorlw	1	; case 5
  9420  00613A  B4D8               	btfsc	status,2,c
  9421  00613C  D7DD               	goto	l10266
  9422  00613E  0A03               	xorlw	3	; case 6
  9423  006140  B4D8               	btfsc	status,2,c
  9424  006142  D7DF               	goto	l10268
  9425  006144  0A01               	xorlw	1	; case 7
  9426  006146  A4D8               	btfss	status,2,c
  9427  006148  0012               	return	
  9428  00614A  D7E0               	goto	l10270
  9429  00614C                     __end_of_lcd_show_chr:
  9430                           	opt stack 0
  9431                           tblptru	equ	0xFF8
  9432                           tblptrh	equ	0xFF7
  9433                           tblptrl	equ	0xFF6
  9434                           tablat	equ	0xFF5
  9435                           prodh	equ	0xFF4
  9436                           prodl	equ	0xFF3
  9437                           intcon	equ	0xFF2
  9438                           indf0	equ	0xFEF
  9439                           postinc0	equ	0xFEE
  9440                           fsr0h	equ	0xFEA
  9441                           fsr0l	equ	0xFE9
  9442                           wreg	equ	0xFE8
  9443                           postdec1	equ	0xFE5
  9444                           plusw1	equ	0xFE3
  9445                           fsr1h	equ	0xFE2
  9446                           fsr1l	equ	0xFE1
  9447                           indf2	equ	0xFDF
  9448                           postinc2	equ	0xFDE
  9449                           postdec2	equ	0xFDD
  9450                           plusw2	equ	0xFDB
  9451                           fsr2h	equ	0xFDA
  9452                           fsr2l	equ	0xFD9
  9453                           status	equ	0xFD8
  9454                           
  9455 ;; *************** function _lcd_disp_get_code *****************
  9456 ;; Defined at:
  9457 ;;		line 461 in file "src/driver/lcd.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  chr             1    wreg     unsigned char 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  chr             1    0[BANK0 ] unsigned char 
  9462 ;;  i               1    2[BANK0 ] unsigned char 
  9463 ;;  ret             1    1[BANK0 ] unsigned char 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      unsigned char 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;Total ram usage:        3 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    4
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_lcd_show_chr
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text48
  9488  006D84                     __ptext48:
  9489                           	opt stack 0
  9490  006D84                     _lcd_disp_get_code:
  9491                           	opt stack 23
  9492                           
  9493                           ;incstack = 0
  9494                           ;lcd_disp_get_code@chr stored from wreg
  9495  006D84  0100               	movlb	0	; () banked
  9496  006D86  6F60               	movwf	lcd_disp_get_code@chr& (0+255),b
  9497                           
  9498                           ;lcd.c: 463: uint8_t i;
  9499                           ;lcd.c: 464: uint8_t ret;
  9500                           ;lcd.c: 465: for(i=0;i<sizeof(LCDDigitalIndexTable);i++){
  9501  006D88  0E00               	movlw	0
  9502  006D8A  0100               	movlb	0	; () banked
  9503  006D8C  6F62               	movwf	lcd_disp_get_code@i& (0+255),b
  9504  006D8E                     l10166:
  9505                           
  9506                           ; BSR set to: 0
  9507  006D8E  0E28               	movlw	40
  9508  006D90  0100               	movlb	0	; () banked
  9509  006D92  6562               	cpfsgt	lcd_disp_get_code@i& (0+255),b
  9510  006D94  D001               	goto	l10170
  9511  006D96  D012               	goto	l10178
  9512  006D98                     l10170:
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;lcd.c: 466: if(chr==LCDDigitalIndexTable[i])break;
  9516  006D98  0100               	movlb	0	; () banked
  9517  006D9A  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
  9518  006D9C  0D01               	mullw	1
  9519  006D9E  0E83               	movlw	low _LCDDigitalIndexTable
  9520  006DA0  24F3               	addwf	prodl,w,c
  9521  006DA2  6EF6               	movwf	tblptrl,c
  9522  006DA4  0EFB               	movlw	high _LCDDigitalIndexTable
  9523  006DA6  20F4               	addwfc	prodh,w,c
  9524  006DA8  6EF7               	movwf	tblptrh,c
  9525  006DAA                     	if	0	;There are less than 3 active tblptr bytes
  9526  006DAA                     	endif
  9527  006DAA  0008               	tblrd		*
  9528  006DAC  50F5               	movf	tablat,w,c
  9529  006DAE  0100               	movlb	0	; () banked
  9530  006DB0  1960               	xorwf	lcd_disp_get_code@chr& (0+255),w,b
  9531  006DB2  B4D8               	btfsc	status,2,c
  9532  006DB4  D003               	goto	l10178
  9533                           
  9534                           ; BSR set to: 0
  9535                           
  9536                           ; BSR set to: 0
  9537                           
  9538                           ; BSR set to: 0
  9539  006DB6  0100               	movlb	0	; () banked
  9540  006DB8  2B62               	incf	lcd_disp_get_code@i& (0+255),f,b
  9541  006DBA  D7E9               	goto	l10166
  9542  006DBC                     l10178:
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;lcd.c: 467: }
  9546                           ;lcd.c: 468: if(i<sizeof(LCDDigitalIndexTable)){
  9547  006DBC  0E29               	movlw	41
  9548  006DBE  0100               	movlb	0	; () banked
  9549  006DC0  6162               	cpfslt	lcd_disp_get_code@i& (0+255),b
  9550  006DC2  D00C               	goto	l10182
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;lcd.c: 469: ret= LCDDigitalTable[i];
  9554  006DC4  0100               	movlb	0	; () banked
  9555  006DC6  5162               	movf	lcd_disp_get_code@i& (0+255),w,b
  9556  006DC8  0D01               	mullw	1
  9557  006DCA  0EAC               	movlw	low _LCDDigitalTable
  9558  006DCC  24F3               	addwf	prodl,w,c
  9559  006DCE  6EF6               	movwf	tblptrl,c
  9560  006DD0  0EFB               	movlw	high _LCDDigitalTable
  9561  006DD2  20F4               	addwfc	prodh,w,c
  9562  006DD4  6EF7               	movwf	tblptrh,c
  9563  006DD6                     	if	0	;There are less than 3 active tblptr bytes
  9564  006DD6                     	endif
  9565  006DD6  0008               	tblrd		*
  9566  006DD8  CFF5 F061          	movff	tablat,lcd_disp_get_code@ret
  9567  006DDC                     l10182:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;lcd.c: 470: }
  9571                           ;lcd.c: 471: return ret;
  9572  006DDC  0100               	movlb	0	; () banked
  9573  006DDE  5161               	movf	lcd_disp_get_code@ret& (0+255),w,b
  9574  006DE0  0012               	return	
  9575  006DE2                     __end_of_lcd_disp_get_code:
  9576                           	opt stack 0
  9577                           tblptru	equ	0xFF8
  9578                           tblptrh	equ	0xFF7
  9579                           tblptrl	equ	0xFF6
  9580                           tablat	equ	0xFF5
  9581                           prodh	equ	0xFF4
  9582                           prodl	equ	0xFF3
  9583                           intcon	equ	0xFF2
  9584                           indf0	equ	0xFEF
  9585                           postinc0	equ	0xFEE
  9586                           fsr0h	equ	0xFEA
  9587                           fsr0l	equ	0xFE9
  9588                           wreg	equ	0xFE8
  9589                           postdec1	equ	0xFE5
  9590                           plusw1	equ	0xFE3
  9591                           fsr1h	equ	0xFE2
  9592                           fsr1l	equ	0xFE1
  9593                           indf2	equ	0xFDF
  9594                           postinc2	equ	0xFDE
  9595                           postdec2	equ	0xFDD
  9596                           plusw2	equ	0xFDB
  9597                           fsr2h	equ	0xFDA
  9598                           fsr2l	equ	0xFD9
  9599                           status	equ	0xFD8
  9600                           
  9601 ;; *************** function _lcd_disp_chr_loc_7 *****************
  9602 ;; Defined at:
  9603 ;;		line 353 in file "src/driver/lcd.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  code            1    wreg     unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  code            1   31[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;Total ram usage:        1 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:    6
  9624 ;; This function calls:
  9625 ;;		_lcd_set_com_seg
  9626 ;; This function is called by:
  9627 ;;		_lcd_show_chr
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text49
  9632  00614C                     __ptext49:
  9633                           	opt stack 0
  9634  00614C                     _lcd_disp_chr_loc_7:
  9635                           	opt stack 21
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;incstack = 0
  9639                           ;lcd_disp_chr_loc_7@code stored from wreg
  9640  00614C  6E20               	movwf	lcd_disp_chr_loc_7@code,c
  9641                           
  9642                           ;lcd.c: 355: lcd_set_com_seg(0,19,code&0x08);
  9643  00614E  0E13               	movlw	19
  9644  006150  0100               	movlb	0	; () banked
  9645  006152  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9646  006154  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  9647  006156  0B08               	andlw	8
  9648  006158  0100               	movlb	0	; () banked
  9649  00615A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9650  00615C  0E00               	movlw	0
  9651  00615E  EC28  F02C         	call	_lcd_set_com_seg
  9652                           
  9653                           ;lcd.c: 356: lcd_set_com_seg(1,19,code&0x10);
  9654  006162  0E13               	movlw	19
  9655  006164  0100               	movlb	0	; () banked
  9656  006166  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9657  006168  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  9658  00616A  0B10               	andlw	16
  9659  00616C  0100               	movlb	0	; () banked
  9660  00616E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9661  006170  0E01               	movlw	1
  9662  006172  EC28  F02C         	call	_lcd_set_com_seg
  9663                           
  9664                           ;lcd.c: 357: lcd_set_com_seg(2,19,code&0x20);
  9665  006176  0E13               	movlw	19
  9666  006178  0100               	movlb	0	; () banked
  9667  00617A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9668  00617C  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  9669  00617E  0B20               	andlw	32
  9670  006180  0100               	movlb	0	; () banked
  9671  006182  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9672  006184  0E02               	movlw	2
  9673  006186  EC28  F02C         	call	_lcd_set_com_seg
  9674                           
  9675                           ;lcd.c: 358: lcd_set_com_seg(3,19,code&0x01);
  9676  00618A  0E13               	movlw	19
  9677  00618C  0100               	movlb	0	; () banked
  9678  00618E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9679  006190  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  9680  006192  0B01               	andlw	1
  9681  006194  0100               	movlb	0	; () banked
  9682  006196  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9683  006198  0E03               	movlw	3
  9684  00619A  EC28  F02C         	call	_lcd_set_com_seg
  9685                           
  9686                           ;lcd.c: 360: lcd_set_com_seg(1,40,code&0x04);
  9687  00619E  0E28               	movlw	40
  9688  0061A0  0100               	movlb	0	; () banked
  9689  0061A2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9690  0061A4  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  9691  0061A6  0B04               	andlw	4
  9692  0061A8  0100               	movlb	0	; () banked
  9693  0061AA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9694  0061AC  0E01               	movlw	1
  9695  0061AE  EC28  F02C         	call	_lcd_set_com_seg
  9696                           
  9697                           ;lcd.c: 361: lcd_set_com_seg(2,40,code&0x40);
  9698  0061B2  0E28               	movlw	40
  9699  0061B4  0100               	movlb	0	; () banked
  9700  0061B6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9701  0061B8  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  9702  0061BA  0B40               	andlw	64
  9703  0061BC  0100               	movlb	0	; () banked
  9704  0061BE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9705  0061C0  0E02               	movlw	2
  9706  0061C2  EC28  F02C         	call	_lcd_set_com_seg
  9707                           
  9708                           ;lcd.c: 362: lcd_set_com_seg(3,40,code&0x02);
  9709  0061C6  0E28               	movlw	40
  9710  0061C8  0100               	movlb	0	; () banked
  9711  0061CA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9712  0061CC  5020               	movf	lcd_disp_chr_loc_7@code,w,c
  9713  0061CE  0B02               	andlw	2
  9714  0061D0  0100               	movlb	0	; () banked
  9715  0061D2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9716  0061D4  0E03               	movlw	3
  9717  0061D6  EC28  F02C         	call	_lcd_set_com_seg
  9718  0061DA  0012               	return		;funcret
  9719  0061DC                     __end_of_lcd_disp_chr_loc_7:
  9720                           	opt stack 0
  9721                           tblptru	equ	0xFF8
  9722                           tblptrh	equ	0xFF7
  9723                           tblptrl	equ	0xFF6
  9724                           tablat	equ	0xFF5
  9725                           prodh	equ	0xFF4
  9726                           prodl	equ	0xFF3
  9727                           intcon	equ	0xFF2
  9728                           indf0	equ	0xFEF
  9729                           postinc0	equ	0xFEE
  9730                           fsr0h	equ	0xFEA
  9731                           fsr0l	equ	0xFE9
  9732                           wreg	equ	0xFE8
  9733                           postdec1	equ	0xFE5
  9734                           plusw1	equ	0xFE3
  9735                           fsr1h	equ	0xFE2
  9736                           fsr1l	equ	0xFE1
  9737                           indf2	equ	0xFDF
  9738                           postinc2	equ	0xFDE
  9739                           postdec2	equ	0xFDD
  9740                           plusw2	equ	0xFDB
  9741                           fsr2h	equ	0xFDA
  9742                           fsr2l	equ	0xFD9
  9743                           status	equ	0xFD8
  9744                           
  9745 ;; *************** function _lcd_disp_chr_loc_6 *****************
  9746 ;; Defined at:
  9747 ;;		line 334 in file "src/driver/lcd.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  code            1    wreg     unsigned char 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  code            1   31[COMRAM] unsigned char 
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  1    wreg      void 
  9754 ;; Registers used:
  9755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;Total ram usage:        1 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:    6
  9768 ;; This function calls:
  9769 ;;		_lcd_set_com_seg
  9770 ;; This function is called by:
  9771 ;;		_lcd_show_chr
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text50
  9776  0061DC                     __ptext50:
  9777                           	opt stack 0
  9778  0061DC                     _lcd_disp_chr_loc_6:
  9779                           	opt stack 21
  9780                           
  9781                           ;incstack = 0
  9782                           ;lcd_disp_chr_loc_6@code stored from wreg
  9783  0061DC  6E20               	movwf	lcd_disp_chr_loc_6@code,c
  9784                           
  9785                           ;lcd.c: 336: lcd_set_com_seg(0,14,code&0x08);
  9786  0061DE  0E0E               	movlw	14
  9787  0061E0  0100               	movlb	0	; () banked
  9788  0061E2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9789  0061E4  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  9790  0061E6  0B08               	andlw	8
  9791  0061E8  0100               	movlb	0	; () banked
  9792  0061EA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9793  0061EC  0E00               	movlw	0
  9794  0061EE  EC28  F02C         	call	_lcd_set_com_seg
  9795                           
  9796                           ;lcd.c: 337: lcd_set_com_seg(1,14,code&0x10);
  9797  0061F2  0E0E               	movlw	14
  9798  0061F4  0100               	movlb	0	; () banked
  9799  0061F6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9800  0061F8  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  9801  0061FA  0B10               	andlw	16
  9802  0061FC  0100               	movlb	0	; () banked
  9803  0061FE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9804  006200  0E01               	movlw	1
  9805  006202  EC28  F02C         	call	_lcd_set_com_seg
  9806                           
  9807                           ;lcd.c: 338: lcd_set_com_seg(2,14,code&0x20);
  9808  006206  0E0E               	movlw	14
  9809  006208  0100               	movlb	0	; () banked
  9810  00620A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9811  00620C  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  9812  00620E  0B20               	andlw	32
  9813  006210  0100               	movlb	0	; () banked
  9814  006212  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9815  006214  0E02               	movlw	2
  9816  006216  EC28  F02C         	call	_lcd_set_com_seg
  9817                           
  9818                           ;lcd.c: 339: lcd_set_com_seg(3,14,code&0x01);
  9819  00621A  0E0E               	movlw	14
  9820  00621C  0100               	movlb	0	; () banked
  9821  00621E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9822  006220  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  9823  006222  0B01               	andlw	1
  9824  006224  0100               	movlb	0	; () banked
  9825  006226  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9826  006228  0E03               	movlw	3
  9827  00622A  EC28  F02C         	call	_lcd_set_com_seg
  9828                           
  9829                           ;lcd.c: 341: lcd_set_com_seg(1,15,code&0x04);
  9830  00622E  0E0F               	movlw	15
  9831  006230  0100               	movlb	0	; () banked
  9832  006232  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9833  006234  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  9834  006236  0B04               	andlw	4
  9835  006238  0100               	movlb	0	; () banked
  9836  00623A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9837  00623C  0E01               	movlw	1
  9838  00623E  EC28  F02C         	call	_lcd_set_com_seg
  9839                           
  9840                           ;lcd.c: 342: lcd_set_com_seg(2,15,code&0x40);
  9841  006242  0E0F               	movlw	15
  9842  006244  0100               	movlb	0	; () banked
  9843  006246  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9844  006248  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  9845  00624A  0B40               	andlw	64
  9846  00624C  0100               	movlb	0	; () banked
  9847  00624E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9848  006250  0E02               	movlw	2
  9849  006252  EC28  F02C         	call	_lcd_set_com_seg
  9850                           
  9851                           ;lcd.c: 343: lcd_set_com_seg(3,15,code&0x02);
  9852  006256  0E0F               	movlw	15
  9853  006258  0100               	movlb	0	; () banked
  9854  00625A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9855  00625C  5020               	movf	lcd_disp_chr_loc_6@code,w,c
  9856  00625E  0B02               	andlw	2
  9857  006260  0100               	movlb	0	; () banked
  9858  006262  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9859  006264  0E03               	movlw	3
  9860  006266  EC28  F02C         	call	_lcd_set_com_seg
  9861  00626A  0012               	return		;funcret
  9862  00626C                     __end_of_lcd_disp_chr_loc_6:
  9863                           	opt stack 0
  9864                           tblptru	equ	0xFF8
  9865                           tblptrh	equ	0xFF7
  9866                           tblptrl	equ	0xFF6
  9867                           tablat	equ	0xFF5
  9868                           prodh	equ	0xFF4
  9869                           prodl	equ	0xFF3
  9870                           intcon	equ	0xFF2
  9871                           indf0	equ	0xFEF
  9872                           postinc0	equ	0xFEE
  9873                           fsr0h	equ	0xFEA
  9874                           fsr0l	equ	0xFE9
  9875                           wreg	equ	0xFE8
  9876                           postdec1	equ	0xFE5
  9877                           plusw1	equ	0xFE3
  9878                           fsr1h	equ	0xFE2
  9879                           fsr1l	equ	0xFE1
  9880                           indf2	equ	0xFDF
  9881                           postinc2	equ	0xFDE
  9882                           postdec2	equ	0xFDD
  9883                           plusw2	equ	0xFDB
  9884                           fsr2h	equ	0xFDA
  9885                           fsr2l	equ	0xFD9
  9886                           status	equ	0xFD8
  9887                           
  9888 ;; *************** function _lcd_disp_chr_loc_5 *****************
  9889 ;; Defined at:
  9890 ;;		line 315 in file "src/driver/lcd.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  code            1    wreg     unsigned char 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  code            1   31[COMRAM] unsigned char 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;Total ram usage:        1 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    6
  9911 ;; This function calls:
  9912 ;;		_lcd_set_com_seg
  9913 ;; This function is called by:
  9914 ;;		_lcd_show_chr
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text51
  9919  00626C                     __ptext51:
  9920                           	opt stack 0
  9921  00626C                     _lcd_disp_chr_loc_5:
  9922                           	opt stack 21
  9923                           
  9924                           ;incstack = 0
  9925                           ;lcd_disp_chr_loc_5@code stored from wreg
  9926  00626C  6E20               	movwf	lcd_disp_chr_loc_5@code,c
  9927                           
  9928                           ;lcd.c: 317: lcd_set_com_seg(0,38,code&0x08);
  9929  00626E  0E26               	movlw	38
  9930  006270  0100               	movlb	0	; () banked
  9931  006272  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9932  006274  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  9933  006276  0B08               	andlw	8
  9934  006278  0100               	movlb	0	; () banked
  9935  00627A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9936  00627C  0E00               	movlw	0
  9937  00627E  EC28  F02C         	call	_lcd_set_com_seg
  9938                           
  9939                           ;lcd.c: 318: lcd_set_com_seg(1,38,code&0x10);
  9940  006282  0E26               	movlw	38
  9941  006284  0100               	movlb	0	; () banked
  9942  006286  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9943  006288  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  9944  00628A  0B10               	andlw	16
  9945  00628C  0100               	movlb	0	; () banked
  9946  00628E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9947  006290  0E01               	movlw	1
  9948  006292  EC28  F02C         	call	_lcd_set_com_seg
  9949                           
  9950                           ;lcd.c: 319: lcd_set_com_seg(2,38,code&0x20);
  9951  006296  0E26               	movlw	38
  9952  006298  0100               	movlb	0	; () banked
  9953  00629A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9954  00629C  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  9955  00629E  0B20               	andlw	32
  9956  0062A0  0100               	movlb	0	; () banked
  9957  0062A2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9958  0062A4  0E02               	movlw	2
  9959  0062A6  EC28  F02C         	call	_lcd_set_com_seg
  9960                           
  9961                           ;lcd.c: 320: lcd_set_com_seg(3,38,code&0x01);
  9962  0062AA  0E26               	movlw	38
  9963  0062AC  0100               	movlb	0	; () banked
  9964  0062AE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9965  0062B0  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  9966  0062B2  0B01               	andlw	1
  9967  0062B4  0100               	movlb	0	; () banked
  9968  0062B6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9969  0062B8  0E03               	movlw	3
  9970  0062BA  EC28  F02C         	call	_lcd_set_com_seg
  9971                           
  9972                           ;lcd.c: 322: lcd_set_com_seg(1,39,code&0x04);
  9973  0062BE  0E27               	movlw	39
  9974  0062C0  0100               	movlb	0	; () banked
  9975  0062C2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9976  0062C4  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  9977  0062C6  0B04               	andlw	4
  9978  0062C8  0100               	movlb	0	; () banked
  9979  0062CA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9980  0062CC  0E01               	movlw	1
  9981  0062CE  EC28  F02C         	call	_lcd_set_com_seg
  9982                           
  9983                           ;lcd.c: 323: lcd_set_com_seg(2,39,code&0x40);
  9984  0062D2  0E27               	movlw	39
  9985  0062D4  0100               	movlb	0	; () banked
  9986  0062D6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9987  0062D8  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  9988  0062DA  0B40               	andlw	64
  9989  0062DC  0100               	movlb	0	; () banked
  9990  0062DE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
  9991  0062E0  0E02               	movlw	2
  9992  0062E2  EC28  F02C         	call	_lcd_set_com_seg
  9993                           
  9994                           ;lcd.c: 324: lcd_set_com_seg(3,39,code&0x02);
  9995  0062E6  0E27               	movlw	39
  9996  0062E8  0100               	movlb	0	; () banked
  9997  0062EA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
  9998  0062EC  5020               	movf	lcd_disp_chr_loc_5@code,w,c
  9999  0062EE  0B02               	andlw	2
 10000  0062F0  0100               	movlb	0	; () banked
 10001  0062F2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10002  0062F4  0E03               	movlw	3
 10003  0062F6  EC28  F02C         	call	_lcd_set_com_seg
 10004  0062FA  0012               	return		;funcret
 10005  0062FC                     __end_of_lcd_disp_chr_loc_5:
 10006                           	opt stack 0
 10007                           tblptru	equ	0xFF8
 10008                           tblptrh	equ	0xFF7
 10009                           tblptrl	equ	0xFF6
 10010                           tablat	equ	0xFF5
 10011                           prodh	equ	0xFF4
 10012                           prodl	equ	0xFF3
 10013                           intcon	equ	0xFF2
 10014                           indf0	equ	0xFEF
 10015                           postinc0	equ	0xFEE
 10016                           fsr0h	equ	0xFEA
 10017                           fsr0l	equ	0xFE9
 10018                           wreg	equ	0xFE8
 10019                           postdec1	equ	0xFE5
 10020                           plusw1	equ	0xFE3
 10021                           fsr1h	equ	0xFE2
 10022                           fsr1l	equ	0xFE1
 10023                           indf2	equ	0xFDF
 10024                           postinc2	equ	0xFDE
 10025                           postdec2	equ	0xFDD
 10026                           plusw2	equ	0xFDB
 10027                           fsr2h	equ	0xFDA
 10028                           fsr2l	equ	0xFD9
 10029                           status	equ	0xFD8
 10030                           
 10031 ;; *************** function _lcd_disp_chr_loc_4 *****************
 10032 ;; Defined at:
 10033 ;;		line 296 in file "src/driver/lcd.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  code            1    wreg     unsigned char 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  code            1   31[COMRAM] unsigned char 
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;Total ram usage:        1 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    6
 10054 ;; This function calls:
 10055 ;;		_lcd_set_com_seg
 10056 ;; This function is called by:
 10057 ;;		_lcd_show_chr
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text52
 10062  0062FC                     __ptext52:
 10063                           	opt stack 0
 10064  0062FC                     _lcd_disp_chr_loc_4:
 10065                           	opt stack 21
 10066                           
 10067                           ;incstack = 0
 10068                           ;lcd_disp_chr_loc_4@code stored from wreg
 10069  0062FC  6E20               	movwf	lcd_disp_chr_loc_4@code,c
 10070                           
 10071                           ;lcd.c: 298: lcd_set_com_seg(0,36,code&0x08);
 10072  0062FE  0E24               	movlw	36
 10073  006300  0100               	movlb	0	; () banked
 10074  006302  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10075  006304  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10076  006306  0B08               	andlw	8
 10077  006308  0100               	movlb	0	; () banked
 10078  00630A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10079  00630C  0E00               	movlw	0
 10080  00630E  EC28  F02C         	call	_lcd_set_com_seg
 10081                           
 10082                           ;lcd.c: 299: lcd_set_com_seg(1,36,code&0x10);
 10083  006312  0E24               	movlw	36
 10084  006314  0100               	movlb	0	; () banked
 10085  006316  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10086  006318  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10087  00631A  0B10               	andlw	16
 10088  00631C  0100               	movlb	0	; () banked
 10089  00631E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10090  006320  0E01               	movlw	1
 10091  006322  EC28  F02C         	call	_lcd_set_com_seg
 10092                           
 10093                           ;lcd.c: 300: lcd_set_com_seg(2,36,code&0x20);
 10094  006326  0E24               	movlw	36
 10095  006328  0100               	movlb	0	; () banked
 10096  00632A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10097  00632C  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10098  00632E  0B20               	andlw	32
 10099  006330  0100               	movlb	0	; () banked
 10100  006332  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10101  006334  0E02               	movlw	2
 10102  006336  EC28  F02C         	call	_lcd_set_com_seg
 10103                           
 10104                           ;lcd.c: 301: lcd_set_com_seg(3,36,code&0x01);
 10105  00633A  0E24               	movlw	36
 10106  00633C  0100               	movlb	0	; () banked
 10107  00633E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10108  006340  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10109  006342  0B01               	andlw	1
 10110  006344  0100               	movlb	0	; () banked
 10111  006346  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10112  006348  0E03               	movlw	3
 10113  00634A  EC28  F02C         	call	_lcd_set_com_seg
 10114                           
 10115                           ;lcd.c: 303: lcd_set_com_seg(1,37,code&0x04);
 10116  00634E  0E25               	movlw	37
 10117  006350  0100               	movlb	0	; () banked
 10118  006352  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10119  006354  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10120  006356  0B04               	andlw	4
 10121  006358  0100               	movlb	0	; () banked
 10122  00635A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10123  00635C  0E01               	movlw	1
 10124  00635E  EC28  F02C         	call	_lcd_set_com_seg
 10125                           
 10126                           ;lcd.c: 304: lcd_set_com_seg(2,37,code&0x40);
 10127  006362  0E25               	movlw	37
 10128  006364  0100               	movlb	0	; () banked
 10129  006366  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10130  006368  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10131  00636A  0B40               	andlw	64
 10132  00636C  0100               	movlb	0	; () banked
 10133  00636E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10134  006370  0E02               	movlw	2
 10135  006372  EC28  F02C         	call	_lcd_set_com_seg
 10136                           
 10137                           ;lcd.c: 305: lcd_set_com_seg(3,37,code&0x02);
 10138  006376  0E25               	movlw	37
 10139  006378  0100               	movlb	0	; () banked
 10140  00637A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10141  00637C  5020               	movf	lcd_disp_chr_loc_4@code,w,c
 10142  00637E  0B02               	andlw	2
 10143  006380  0100               	movlb	0	; () banked
 10144  006382  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10145  006384  0E03               	movlw	3
 10146  006386  EC28  F02C         	call	_lcd_set_com_seg
 10147  00638A  0012               	return		;funcret
 10148  00638C                     __end_of_lcd_disp_chr_loc_4:
 10149                           	opt stack 0
 10150                           tblptru	equ	0xFF8
 10151                           tblptrh	equ	0xFF7
 10152                           tblptrl	equ	0xFF6
 10153                           tablat	equ	0xFF5
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           intcon	equ	0xFF2
 10157                           indf0	equ	0xFEF
 10158                           postinc0	equ	0xFEE
 10159                           fsr0h	equ	0xFEA
 10160                           fsr0l	equ	0xFE9
 10161                           wreg	equ	0xFE8
 10162                           postdec1	equ	0xFE5
 10163                           plusw1	equ	0xFE3
 10164                           fsr1h	equ	0xFE2
 10165                           fsr1l	equ	0xFE1
 10166                           indf2	equ	0xFDF
 10167                           postinc2	equ	0xFDE
 10168                           postdec2	equ	0xFDD
 10169                           plusw2	equ	0xFDB
 10170                           fsr2h	equ	0xFDA
 10171                           fsr2l	equ	0xFD9
 10172                           status	equ	0xFD8
 10173                           
 10174 ;; *************** function _lcd_disp_chr_loc_3 *****************
 10175 ;; Defined at:
 10176 ;;		line 284 in file "src/driver/lcd.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  code            1    wreg     unsigned char 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  code            1   31[COMRAM] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;Total ram usage:        1 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    6
 10197 ;; This function calls:
 10198 ;;		_lcd_set_com_seg
 10199 ;; This function is called by:
 10200 ;;		_lcd_show_chr
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text53
 10205  00638C                     __ptext53:
 10206                           	opt stack 0
 10207  00638C                     _lcd_disp_chr_loc_3:
 10208                           	opt stack 21
 10209                           
 10210                           ;incstack = 0
 10211                           ;lcd_disp_chr_loc_3@code stored from wreg
 10212  00638C  6E20               	movwf	lcd_disp_chr_loc_3@code,c
 10213                           
 10214                           ;lcd.c: 286: lcd_set_com_seg(0,43,code&0x01);
 10215  00638E  0E2B               	movlw	43
 10216  006390  0100               	movlb	0	; () banked
 10217  006392  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10218  006394  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10219  006396  0B01               	andlw	1
 10220  006398  0100               	movlb	0	; () banked
 10221  00639A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10222  00639C  0E00               	movlw	0
 10223  00639E  EC28  F02C         	call	_lcd_set_com_seg
 10224                           
 10225                           ;lcd.c: 287: lcd_set_com_seg(1,43,code&0x20);
 10226  0063A2  0E2B               	movlw	43
 10227  0063A4  0100               	movlb	0	; () banked
 10228  0063A6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10229  0063A8  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10230  0063AA  0B20               	andlw	32
 10231  0063AC  0100               	movlb	0	; () banked
 10232  0063AE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10233  0063B0  0E01               	movlw	1
 10234  0063B2  EC28  F02C         	call	_lcd_set_com_seg
 10235                           
 10236                           ;lcd.c: 288: lcd_set_com_seg(2,43,code&0x10);
 10237  0063B6  0E2B               	movlw	43
 10238  0063B8  0100               	movlb	0	; () banked
 10239  0063BA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10240  0063BC  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10241  0063BE  0B10               	andlw	16
 10242  0063C0  0100               	movlb	0	; () banked
 10243  0063C2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10244  0063C4  0E02               	movlw	2
 10245  0063C6  EC28  F02C         	call	_lcd_set_com_seg
 10246                           
 10247                           ;lcd.c: 289: lcd_set_com_seg(3,43,code&0x08);
 10248  0063CA  0E2B               	movlw	43
 10249  0063CC  0100               	movlb	0	; () banked
 10250  0063CE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10251  0063D0  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10252  0063D2  0B08               	andlw	8
 10253  0063D4  0100               	movlb	0	; () banked
 10254  0063D6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10255  0063D8  0E03               	movlw	3
 10256  0063DA  EC28  F02C         	call	_lcd_set_com_seg
 10257                           
 10258                           ;lcd.c: 291: lcd_set_com_seg(0,42,code&0x02);
 10259  0063DE  0E2A               	movlw	42
 10260  0063E0  0100               	movlb	0	; () banked
 10261  0063E2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10262  0063E4  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10263  0063E6  0B02               	andlw	2
 10264  0063E8  0100               	movlb	0	; () banked
 10265  0063EA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10266  0063EC  0E00               	movlw	0
 10267  0063EE  EC28  F02C         	call	_lcd_set_com_seg
 10268                           
 10269                           ;lcd.c: 292: lcd_set_com_seg(1,42,code&0x40);
 10270  0063F2  0E2A               	movlw	42
 10271  0063F4  0100               	movlb	0	; () banked
 10272  0063F6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10273  0063F8  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10274  0063FA  0B40               	andlw	64
 10275  0063FC  0100               	movlb	0	; () banked
 10276  0063FE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10277  006400  0E01               	movlw	1
 10278  006402  EC28  F02C         	call	_lcd_set_com_seg
 10279                           
 10280                           ;lcd.c: 293: lcd_set_com_seg(2,42,code&0x04);
 10281  006406  0E2A               	movlw	42
 10282  006408  0100               	movlb	0	; () banked
 10283  00640A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10284  00640C  5020               	movf	lcd_disp_chr_loc_3@code,w,c
 10285  00640E  0B04               	andlw	4
 10286  006410  0100               	movlb	0	; () banked
 10287  006412  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10288  006414  0E02               	movlw	2
 10289  006416  EC28  F02C         	call	_lcd_set_com_seg
 10290  00641A  0012               	return		;funcret
 10291  00641C                     __end_of_lcd_disp_chr_loc_3:
 10292                           	opt stack 0
 10293                           tblptru	equ	0xFF8
 10294                           tblptrh	equ	0xFF7
 10295                           tblptrl	equ	0xFF6
 10296                           tablat	equ	0xFF5
 10297                           prodh	equ	0xFF4
 10298                           prodl	equ	0xFF3
 10299                           intcon	equ	0xFF2
 10300                           indf0	equ	0xFEF
 10301                           postinc0	equ	0xFEE
 10302                           fsr0h	equ	0xFEA
 10303                           fsr0l	equ	0xFE9
 10304                           wreg	equ	0xFE8
 10305                           postdec1	equ	0xFE5
 10306                           plusw1	equ	0xFE3
 10307                           fsr1h	equ	0xFE2
 10308                           fsr1l	equ	0xFE1
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           postdec2	equ	0xFDD
 10312                           plusw2	equ	0xFDB
 10313                           fsr2h	equ	0xFDA
 10314                           fsr2l	equ	0xFD9
 10315                           status	equ	0xFD8
 10316                           
 10317 ;; *************** function _lcd_disp_chr_loc_2 *****************
 10318 ;; Defined at:
 10319 ;;		line 265 in file "src/driver/lcd.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  code            1    wreg     unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  code            1   31[COMRAM] unsigned char 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10337 ;;Total ram usage:        1 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:    6
 10340 ;; This function calls:
 10341 ;;		_lcd_set_com_seg
 10342 ;; This function is called by:
 10343 ;;		_lcd_show_chr
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           	psect	text54
 10348  00641C                     __ptext54:
 10349                           	opt stack 0
 10350  00641C                     _lcd_disp_chr_loc_2:
 10351                           	opt stack 21
 10352                           
 10353                           ;incstack = 0
 10354                           ;lcd_disp_chr_loc_2@code stored from wreg
 10355  00641C  6E20               	movwf	lcd_disp_chr_loc_2@code,c
 10356                           
 10357                           ;lcd.c: 267: lcd_set_com_seg(0,21,code&0x01);
 10358  00641E  0E15               	movlw	21
 10359  006420  0100               	movlb	0	; () banked
 10360  006422  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10361  006424  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10362  006426  0B01               	andlw	1
 10363  006428  0100               	movlb	0	; () banked
 10364  00642A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10365  00642C  0E00               	movlw	0
 10366  00642E  EC28  F02C         	call	_lcd_set_com_seg
 10367                           
 10368                           ;lcd.c: 268: lcd_set_com_seg(1,21,code&0x20);
 10369  006432  0E15               	movlw	21
 10370  006434  0100               	movlb	0	; () banked
 10371  006436  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10372  006438  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10373  00643A  0B20               	andlw	32
 10374  00643C  0100               	movlb	0	; () banked
 10375  00643E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10376  006440  0E01               	movlw	1
 10377  006442  EC28  F02C         	call	_lcd_set_com_seg
 10378                           
 10379                           ;lcd.c: 269: lcd_set_com_seg(2,21,code&0x10);
 10380  006446  0E15               	movlw	21
 10381  006448  0100               	movlb	0	; () banked
 10382  00644A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10383  00644C  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10384  00644E  0B10               	andlw	16
 10385  006450  0100               	movlb	0	; () banked
 10386  006452  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10387  006454  0E02               	movlw	2
 10388  006456  EC28  F02C         	call	_lcd_set_com_seg
 10389                           
 10390                           ;lcd.c: 270: lcd_set_com_seg(3,21,code&0x08);
 10391  00645A  0E15               	movlw	21
 10392  00645C  0100               	movlb	0	; () banked
 10393  00645E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10394  006460  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10395  006462  0B08               	andlw	8
 10396  006464  0100               	movlb	0	; () banked
 10397  006466  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10398  006468  0E03               	movlw	3
 10399  00646A  EC28  F02C         	call	_lcd_set_com_seg
 10400                           
 10401                           ;lcd.c: 272: lcd_set_com_seg(0,20,code&0x02);
 10402  00646E  0E14               	movlw	20
 10403  006470  0100               	movlb	0	; () banked
 10404  006472  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10405  006474  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10406  006476  0B02               	andlw	2
 10407  006478  0100               	movlb	0	; () banked
 10408  00647A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10409  00647C  0E00               	movlw	0
 10410  00647E  EC28  F02C         	call	_lcd_set_com_seg
 10411                           
 10412                           ;lcd.c: 273: lcd_set_com_seg(1,20,code&0x40);
 10413  006482  0E14               	movlw	20
 10414  006484  0100               	movlb	0	; () banked
 10415  006486  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10416  006488  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10417  00648A  0B40               	andlw	64
 10418  00648C  0100               	movlb	0	; () banked
 10419  00648E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10420  006490  0E01               	movlw	1
 10421  006492  EC28  F02C         	call	_lcd_set_com_seg
 10422                           
 10423                           ;lcd.c: 274: lcd_set_com_seg(2,20,code&0x04);
 10424  006496  0E14               	movlw	20
 10425  006498  0100               	movlb	0	; () banked
 10426  00649A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10427  00649C  5020               	movf	lcd_disp_chr_loc_2@code,w,c
 10428  00649E  0B04               	andlw	4
 10429  0064A0  0100               	movlb	0	; () banked
 10430  0064A2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10431  0064A4  0E02               	movlw	2
 10432  0064A6  EC28  F02C         	call	_lcd_set_com_seg
 10433  0064AA  0012               	return		;funcret
 10434  0064AC                     __end_of_lcd_disp_chr_loc_2:
 10435                           	opt stack 0
 10436                           tblptru	equ	0xFF8
 10437                           tblptrh	equ	0xFF7
 10438                           tblptrl	equ	0xFF6
 10439                           tablat	equ	0xFF5
 10440                           prodh	equ	0xFF4
 10441                           prodl	equ	0xFF3
 10442                           intcon	equ	0xFF2
 10443                           indf0	equ	0xFEF
 10444                           postinc0	equ	0xFEE
 10445                           fsr0h	equ	0xFEA
 10446                           fsr0l	equ	0xFE9
 10447                           wreg	equ	0xFE8
 10448                           postdec1	equ	0xFE5
 10449                           plusw1	equ	0xFE3
 10450                           fsr1h	equ	0xFE2
 10451                           fsr1l	equ	0xFE1
 10452                           indf2	equ	0xFDF
 10453                           postinc2	equ	0xFDE
 10454                           postdec2	equ	0xFDD
 10455                           plusw2	equ	0xFDB
 10456                           fsr2h	equ	0xFDA
 10457                           fsr2l	equ	0xFD9
 10458                           status	equ	0xFD8
 10459                           
 10460 ;; *************** function _lcd_disp_chr_loc_1 *****************
 10461 ;; Defined at:
 10462 ;;		line 246 in file "src/driver/lcd.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;  code            1    wreg     unsigned char 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  code            1   31[COMRAM] unsigned char 
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  1    wreg      void 
 10469 ;; Registers used:
 10470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;Total ram usage:        1 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    6
 10483 ;; This function calls:
 10484 ;;		_lcd_set_com_seg
 10485 ;; This function is called by:
 10486 ;;		_lcd_show_chr
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           	psect	text55
 10491  0064AC                     __ptext55:
 10492                           	opt stack 0
 10493  0064AC                     _lcd_disp_chr_loc_1:
 10494                           	opt stack 21
 10495                           
 10496                           ;incstack = 0
 10497                           ;lcd_disp_chr_loc_1@code stored from wreg
 10498  0064AC  6E20               	movwf	lcd_disp_chr_loc_1@code,c
 10499                           
 10500                           ;lcd.c: 248: lcd_set_com_seg(0,23,code&0x01);
 10501  0064AE  0E17               	movlw	23
 10502  0064B0  0100               	movlb	0	; () banked
 10503  0064B2  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10504  0064B4  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 10505  0064B6  0B01               	andlw	1
 10506  0064B8  0100               	movlb	0	; () banked
 10507  0064BA  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10508  0064BC  0E00               	movlw	0
 10509  0064BE  EC28  F02C         	call	_lcd_set_com_seg
 10510                           
 10511                           ;lcd.c: 249: lcd_set_com_seg(1,23,code&0x20);
 10512  0064C2  0E17               	movlw	23
 10513  0064C4  0100               	movlb	0	; () banked
 10514  0064C6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10515  0064C8  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 10516  0064CA  0B20               	andlw	32
 10517  0064CC  0100               	movlb	0	; () banked
 10518  0064CE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10519  0064D0  0E01               	movlw	1
 10520  0064D2  EC28  F02C         	call	_lcd_set_com_seg
 10521                           
 10522                           ;lcd.c: 250: lcd_set_com_seg(2,23,code&0x10);
 10523  0064D6  0E17               	movlw	23
 10524  0064D8  0100               	movlb	0	; () banked
 10525  0064DA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10526  0064DC  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 10527  0064DE  0B10               	andlw	16
 10528  0064E0  0100               	movlb	0	; () banked
 10529  0064E2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10530  0064E4  0E02               	movlw	2
 10531  0064E6  EC28  F02C         	call	_lcd_set_com_seg
 10532                           
 10533                           ;lcd.c: 251: lcd_set_com_seg(3,23,code&0x08);
 10534  0064EA  0E17               	movlw	23
 10535  0064EC  0100               	movlb	0	; () banked
 10536  0064EE  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10537  0064F0  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 10538  0064F2  0B08               	andlw	8
 10539  0064F4  0100               	movlb	0	; () banked
 10540  0064F6  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10541  0064F8  0E03               	movlw	3
 10542  0064FA  EC28  F02C         	call	_lcd_set_com_seg
 10543                           
 10544                           ;lcd.c: 253: lcd_set_com_seg(0,22,code&0x02);
 10545  0064FE  0E16               	movlw	22
 10546  006500  0100               	movlb	0	; () banked
 10547  006502  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10548  006504  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 10549  006506  0B02               	andlw	2
 10550  006508  0100               	movlb	0	; () banked
 10551  00650A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10552  00650C  0E00               	movlw	0
 10553  00650E  EC28  F02C         	call	_lcd_set_com_seg
 10554                           
 10555                           ;lcd.c: 254: lcd_set_com_seg(1,22,code&0x40);
 10556  006512  0E16               	movlw	22
 10557  006514  0100               	movlb	0	; () banked
 10558  006516  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10559  006518  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 10560  00651A  0B40               	andlw	64
 10561  00651C  0100               	movlb	0	; () banked
 10562  00651E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10563  006520  0E01               	movlw	1
 10564  006522  EC28  F02C         	call	_lcd_set_com_seg
 10565                           
 10566                           ;lcd.c: 255: lcd_set_com_seg(2,22,code&0x04);
 10567  006526  0E16               	movlw	22
 10568  006528  0100               	movlb	0	; () banked
 10569  00652A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10570  00652C  5020               	movf	lcd_disp_chr_loc_1@code,w,c
 10571  00652E  0B04               	andlw	4
 10572  006530  0100               	movlb	0	; () banked
 10573  006532  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10574  006534  0E02               	movlw	2
 10575  006536  EC28  F02C         	call	_lcd_set_com_seg
 10576  00653A  0012               	return		;funcret
 10577  00653C                     __end_of_lcd_disp_chr_loc_1:
 10578                           	opt stack 0
 10579                           tblptru	equ	0xFF8
 10580                           tblptrh	equ	0xFF7
 10581                           tblptrl	equ	0xFF6
 10582                           tablat	equ	0xFF5
 10583                           prodh	equ	0xFF4
 10584                           prodl	equ	0xFF3
 10585                           intcon	equ	0xFF2
 10586                           indf0	equ	0xFEF
 10587                           postinc0	equ	0xFEE
 10588                           fsr0h	equ	0xFEA
 10589                           fsr0l	equ	0xFE9
 10590                           wreg	equ	0xFE8
 10591                           postdec1	equ	0xFE5
 10592                           plusw1	equ	0xFE3
 10593                           fsr1h	equ	0xFE2
 10594                           fsr1l	equ	0xFE1
 10595                           indf2	equ	0xFDF
 10596                           postinc2	equ	0xFDE
 10597                           postdec2	equ	0xFDD
 10598                           plusw2	equ	0xFDB
 10599                           fsr2h	equ	0xFDA
 10600                           fsr2l	equ	0xFD9
 10601                           status	equ	0xFD8
 10602                           
 10603 ;; *************** function _lcd_disp_chr_loc_0 *****************
 10604 ;; Defined at:
 10605 ;;		line 226 in file "src/driver/lcd.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;  code            1    wreg     unsigned char 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  code            1   31[COMRAM] unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;Total ram usage:        1 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    6
 10626 ;; This function calls:
 10627 ;;		_lcd_set_com_seg
 10628 ;; This function is called by:
 10629 ;;		_lcd_show_chr
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text56
 10634  00653C                     __ptext56:
 10635                           	opt stack 0
 10636  00653C                     _lcd_disp_chr_loc_0:
 10637                           	opt stack 21
 10638                           
 10639                           ;incstack = 0
 10640                           ;lcd_disp_chr_loc_0@code stored from wreg
 10641  00653C  6E20               	movwf	lcd_disp_chr_loc_0@code,c
 10642                           
 10643                           ;lcd.c: 228: lcd_set_com_seg(0,25,code&0x01);
 10644  00653E  0E19               	movlw	25
 10645  006540  0100               	movlb	0	; () banked
 10646  006542  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10647  006544  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 10648  006546  0B01               	andlw	1
 10649  006548  0100               	movlb	0	; () banked
 10650  00654A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10651  00654C  0E00               	movlw	0
 10652  00654E  EC28  F02C         	call	_lcd_set_com_seg
 10653                           
 10654                           ;lcd.c: 229: lcd_set_com_seg(1,25,code&0x20);
 10655  006552  0E19               	movlw	25
 10656  006554  0100               	movlb	0	; () banked
 10657  006556  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10658  006558  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 10659  00655A  0B20               	andlw	32
 10660  00655C  0100               	movlb	0	; () banked
 10661  00655E  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10662  006560  0E01               	movlw	1
 10663  006562  EC28  F02C         	call	_lcd_set_com_seg
 10664                           
 10665                           ;lcd.c: 230: lcd_set_com_seg(2,25,code&0x10);
 10666  006566  0E19               	movlw	25
 10667  006568  0100               	movlb	0	; () banked
 10668  00656A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10669  00656C  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 10670  00656E  0B10               	andlw	16
 10671  006570  0100               	movlb	0	; () banked
 10672  006572  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10673  006574  0E02               	movlw	2
 10674  006576  EC28  F02C         	call	_lcd_set_com_seg
 10675                           
 10676                           ;lcd.c: 231: lcd_set_com_seg(3,25,code&0x08);
 10677  00657A  0E19               	movlw	25
 10678  00657C  0100               	movlb	0	; () banked
 10679  00657E  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10680  006580  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 10681  006582  0B08               	andlw	8
 10682  006584  0100               	movlb	0	; () banked
 10683  006586  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10684  006588  0E03               	movlw	3
 10685  00658A  EC28  F02C         	call	_lcd_set_com_seg
 10686                           
 10687                           ;lcd.c: 233: lcd_set_com_seg(0,24,code&0x02);
 10688  00658E  0E18               	movlw	24
 10689  006590  0100               	movlb	0	; () banked
 10690  006592  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10691  006594  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 10692  006596  0B02               	andlw	2
 10693  006598  0100               	movlb	0	; () banked
 10694  00659A  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10695  00659C  0E00               	movlw	0
 10696  00659E  EC28  F02C         	call	_lcd_set_com_seg
 10697                           
 10698                           ;lcd.c: 234: lcd_set_com_seg(1,24,code&0x40);
 10699  0065A2  0E18               	movlw	24
 10700  0065A4  0100               	movlb	0	; () banked
 10701  0065A6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10702  0065A8  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 10703  0065AA  0B40               	andlw	64
 10704  0065AC  0100               	movlb	0	; () banked
 10705  0065AE  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10706  0065B0  0E01               	movlw	1
 10707  0065B2  EC28  F02C         	call	_lcd_set_com_seg
 10708                           
 10709                           ;lcd.c: 235: lcd_set_com_seg(2,24,code&0x04);
 10710  0065B6  0E18               	movlw	24
 10711  0065B8  0100               	movlb	0	; () banked
 10712  0065BA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10713  0065BC  5020               	movf	lcd_disp_chr_loc_0@code,w,c
 10714  0065BE  0B04               	andlw	4
 10715  0065C0  0100               	movlb	0	; () banked
 10716  0065C2  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10717  0065C4  0E02               	movlw	2
 10718  0065C6  EC28  F02C         	call	_lcd_set_com_seg
 10719  0065CA  0012               	return		;funcret
 10720  0065CC                     __end_of_lcd_disp_chr_loc_0:
 10721                           	opt stack 0
 10722                           tblptru	equ	0xFF8
 10723                           tblptrh	equ	0xFF7
 10724                           tblptrl	equ	0xFF6
 10725                           tablat	equ	0xFF5
 10726                           prodh	equ	0xFF4
 10727                           prodl	equ	0xFF3
 10728                           intcon	equ	0xFF2
 10729                           indf0	equ	0xFEF
 10730                           postinc0	equ	0xFEE
 10731                           fsr0h	equ	0xFEA
 10732                           fsr0l	equ	0xFE9
 10733                           wreg	equ	0xFE8
 10734                           postdec1	equ	0xFE5
 10735                           plusw1	equ	0xFE3
 10736                           fsr1h	equ	0xFE2
 10737                           fsr1l	equ	0xFE1
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           postdec2	equ	0xFDD
 10741                           plusw2	equ	0xFDB
 10742                           fsr2h	equ	0xFDA
 10743                           fsr2l	equ	0xFD9
 10744                           status	equ	0xFD8
 10745                           
 10746 ;; *************** function _lcd_show_dp *****************
 10747 ;; Defined at:
 10748 ;;		line 474 in file "src/driver/lcd.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;  loc             1    wreg     unsigned char 
 10751 ;;  show            1   16[BANK0 ] unsigned char 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;  loc             1   17[BANK0 ] unsigned char 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1    wreg      void 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10763 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10766 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10767 ;;Total ram usage:        2 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    7
 10770 ;; This function calls:
 10771 ;;		_lcd_disp_dp_loc_0
 10772 ;;		_lcd_disp_dp_loc_1
 10773 ;;		_lcd_disp_dp_loc_2
 10774 ;; This function is called by:
 10775 ;;		_ui_disp_clear_num_dp
 10776 ;;		_ui_disp_rtc_mm_ss
 10777 ;;		_ui_disp_adj_xfloat_pt
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           	psect	text57
 10782  006AB0                     __ptext57:
 10783                           	opt stack 0
 10784  006AB0                     _lcd_show_dp:
 10785                           	opt stack 17
 10786                           
 10787                           ;incstack = 0
 10788                           ;lcd_show_dp@loc stored from wreg
 10789  006AB0  0100               	movlb	0	; () banked
 10790  006AB2  6F71               	movwf	lcd_show_dp@loc& (0+255),b
 10791                           
 10792                           ;lcd.c: 476: switch(loc){
 10793  006AB4  D01E               	goto	l10292
 10794  006AB6                     l10278:
 10795  006AB6  0100               	movlb	0	; () banked
 10796  006AB8  5170               	movf	lcd_show_dp@show& (0+255),w,b
 10797  006ABA  EC7D  F03B         	call	_lcd_disp_dp_loc_0
 10798  006ABE  0012               	return	
 10799  006AC0                     l10280:
 10800  006AC0  0100               	movlb	0	; () banked
 10801  006AC2  5170               	movf	lcd_show_dp@show& (0+255),w,b
 10802  006AC4  EC65  F03B         	call	_lcd_disp_dp_loc_1
 10803  006AC8  0012               	return	
 10804  006ACA                     l10282:
 10805  006ACA  0100               	movlb	0	; () banked
 10806  006ACC  5170               	movf	lcd_show_dp@show& (0+255),w,b
 10807  006ACE  EC4D  F03B         	call	_lcd_disp_dp_loc_2
 10808  006AD2  0012               	return	
 10809  006AD4                     l10284:
 10810  006AD4  0100               	movlb	0	; () banked
 10811  006AD6  5170               	movf	lcd_show_dp@show& (0+255),w,b
 10812  006AD8  EC7D  F03B         	call	_lcd_disp_dp_loc_0
 10813  006ADC  0012               	return	
 10814  006ADE                     l10286:
 10815  006ADE  0100               	movlb	0	; () banked
 10816  006AE0  5170               	movf	lcd_show_dp@show& (0+255),w,b
 10817  006AE2  EC65  F03B         	call	_lcd_disp_dp_loc_1
 10818  006AE6  0012               	return	
 10819  006AE8                     l10288:
 10820  006AE8  0100               	movlb	0	; () banked
 10821  006AEA  5170               	movf	lcd_show_dp@show& (0+255),w,b
 10822  006AEC  EC4D  F03B         	call	_lcd_disp_dp_loc_2
 10823                           
 10824                           ;lcd.c: 486: }
 10825                           
 10826                           ;lcd.c: 485: default:break;
 10827  006AF0  0012               	return	
 10828  006AF2                     l10292:
 10829  006AF2  0100               	movlb	0	; () banked
 10830  006AF4  5171               	movf	lcd_show_dp@loc& (0+255),w,b
 10831                           
 10832                           ; Switch size 1, requested type "space"
 10833                           ; Number of cases is 6, Range of values is 0 to 6
 10834                           ; switch strategies available:
 10835                           ; Name         Instructions Cycles
 10836                           ; simple_byte           19    10 (average)
 10837                           ;	Chosen strategy is simple_byte
 10838  006AF6  0A00               	xorlw	0	; case 0
 10839  006AF8  B4D8               	btfsc	status,2,c
 10840  006AFA  D7DD               	goto	l10278
 10841  006AFC  0A01               	xorlw	1	; case 1
 10842  006AFE  B4D8               	btfsc	status,2,c
 10843  006B00  D7DF               	goto	l10280
 10844  006B02  0A03               	xorlw	3	; case 2
 10845  006B04  B4D8               	btfsc	status,2,c
 10846  006B06  D7E1               	goto	l10282
 10847  006B08  0A06               	xorlw	6	; case 4
 10848  006B0A  B4D8               	btfsc	status,2,c
 10849  006B0C  D7E3               	goto	l10284
 10850  006B0E  0A01               	xorlw	1	; case 5
 10851  006B10  B4D8               	btfsc	status,2,c
 10852  006B12  D7E5               	goto	l10286
 10853  006B14  0A03               	xorlw	3	; case 6
 10854  006B16  A4D8               	btfss	status,2,c
 10855  006B18  0012               	return	
 10856  006B1A  D7E6               	goto	l10288
 10857  006B1C                     __end_of_lcd_show_dp:
 10858                           	opt stack 0
 10859                           tblptru	equ	0xFF8
 10860                           tblptrh	equ	0xFF7
 10861                           tblptrl	equ	0xFF6
 10862                           tablat	equ	0xFF5
 10863                           prodh	equ	0xFF4
 10864                           prodl	equ	0xFF3
 10865                           intcon	equ	0xFF2
 10866                           indf0	equ	0xFEF
 10867                           postinc0	equ	0xFEE
 10868                           fsr0h	equ	0xFEA
 10869                           fsr0l	equ	0xFE9
 10870                           wreg	equ	0xFE8
 10871                           postdec1	equ	0xFE5
 10872                           plusw1	equ	0xFE3
 10873                           fsr1h	equ	0xFE2
 10874                           fsr1l	equ	0xFE1
 10875                           indf2	equ	0xFDF
 10876                           postinc2	equ	0xFDE
 10877                           postdec2	equ	0xFDD
 10878                           plusw2	equ	0xFDB
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8
 10882                           
 10883 ;; *************** function _lcd_disp_dp_loc_2 *****************
 10884 ;; Defined at:
 10885 ;;		line 276 in file "src/driver/lcd.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  dp              1    wreg     unsigned char 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;  dp              1   31[COMRAM] unsigned char 
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  1    wreg      void 
 10892 ;; Registers used:
 10893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10894 ;; Tracked objects:
 10895 ;;		On entry : 0/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;Total ram usage:        1 bytes
 10904 ;; Hardware stack levels used:    1
 10905 ;; Hardware stack levels required when called:    6
 10906 ;; This function calls:
 10907 ;;		_lcd_set_com_seg
 10908 ;; This function is called by:
 10909 ;;		_lcd_show_dp
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text58
 10914  00769A                     __ptext58:
 10915                           	opt stack 0
 10916  00769A                     _lcd_disp_dp_loc_2:
 10917                           	opt stack 17
 10918                           
 10919                           ;incstack = 0
 10920                           ;lcd_disp_dp_loc_2@dp stored from wreg
 10921  00769A  6E20               	movwf	lcd_disp_dp_loc_2@dp,c
 10922                           
 10923                           ;lcd.c: 278: if(dp)
 10924  00769C  5020               	movf	lcd_disp_dp_loc_2@dp,w,c
 10925  00769E  B4D8               	btfsc	status,2,c
 10926  0076A0  D00A               	goto	l10252
 10927                           
 10928                           ;lcd.c: 279: lcd_set_com_seg(3,20,0x80);
 10929  0076A2  0E14               	movlw	20
 10930  0076A4  0100               	movlb	0	; () banked
 10931  0076A6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10932  0076A8  0E80               	movlw	128
 10933  0076AA  0100               	movlb	0	; () banked
 10934  0076AC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10935  0076AE  0E03               	movlw	3
 10936  0076B0  EC28  F02C         	call	_lcd_set_com_seg
 10937  0076B4  0012               	return	
 10938  0076B6                     l10252:
 10939                           
 10940                           ;lcd.c: 280: else
 10941                           ;lcd.c: 281: lcd_set_com_seg(3,20,0);
 10942  0076B6  0E14               	movlw	20
 10943  0076B8  0100               	movlb	0	; () banked
 10944  0076BA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 10945  0076BC  0E00               	movlw	0
 10946  0076BE  0100               	movlb	0	; () banked
 10947  0076C0  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 10948  0076C2  0E03               	movlw	3
 10949  0076C4  EC28  F02C         	call	_lcd_set_com_seg
 10950  0076C8  0012               	return	
 10951  0076CA                     __end_of_lcd_disp_dp_loc_2:
 10952                           	opt stack 0
 10953                           tblptru	equ	0xFF8
 10954                           tblptrh	equ	0xFF7
 10955                           tblptrl	equ	0xFF6
 10956                           tablat	equ	0xFF5
 10957                           prodh	equ	0xFF4
 10958                           prodl	equ	0xFF3
 10959                           intcon	equ	0xFF2
 10960                           indf0	equ	0xFEF
 10961                           postinc0	equ	0xFEE
 10962                           fsr0h	equ	0xFEA
 10963                           fsr0l	equ	0xFE9
 10964                           wreg	equ	0xFE8
 10965                           postdec1	equ	0xFE5
 10966                           plusw1	equ	0xFE3
 10967                           fsr1h	equ	0xFE2
 10968                           fsr1l	equ	0xFE1
 10969                           indf2	equ	0xFDF
 10970                           postinc2	equ	0xFDE
 10971                           postdec2	equ	0xFDD
 10972                           plusw2	equ	0xFDB
 10973                           fsr2h	equ	0xFDA
 10974                           fsr2l	equ	0xFD9
 10975                           status	equ	0xFD8
 10976                           
 10977 ;; *************** function _lcd_disp_dp_loc_1 *****************
 10978 ;; Defined at:
 10979 ;;		line 257 in file "src/driver/lcd.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  dp              1    wreg     unsigned char 
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;  dp              1   31[COMRAM] unsigned char 
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;Total ram usage:        1 bytes
 10998 ;; Hardware stack levels used:    1
 10999 ;; Hardware stack levels required when called:    6
 11000 ;; This function calls:
 11001 ;;		_lcd_set_com_seg
 11002 ;; This function is called by:
 11003 ;;		_lcd_show_dp
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           	psect	text59
 11008  0076CA                     __ptext59:
 11009                           	opt stack 0
 11010  0076CA                     _lcd_disp_dp_loc_1:
 11011                           	opt stack 17
 11012                           
 11013                           ;incstack = 0
 11014                           ;lcd_disp_dp_loc_1@dp stored from wreg
 11015  0076CA  6E20               	movwf	lcd_disp_dp_loc_1@dp,c
 11016                           
 11017                           ;lcd.c: 259: if(dp)
 11018  0076CC  5020               	movf	lcd_disp_dp_loc_1@dp,w,c
 11019  0076CE  B4D8               	btfsc	status,2,c
 11020  0076D0  D00A               	goto	l10246
 11021                           
 11022                           ;lcd.c: 260: lcd_set_com_seg(3,22,0x80);
 11023  0076D2  0E16               	movlw	22
 11024  0076D4  0100               	movlb	0	; () banked
 11025  0076D6  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11026  0076D8  0E80               	movlw	128
 11027  0076DA  0100               	movlb	0	; () banked
 11028  0076DC  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11029  0076DE  0E03               	movlw	3
 11030  0076E0  EC28  F02C         	call	_lcd_set_com_seg
 11031  0076E4  0012               	return	
 11032  0076E6                     l10246:
 11033                           
 11034                           ;lcd.c: 261: else
 11035                           ;lcd.c: 262: lcd_set_com_seg(3,22,0);
 11036  0076E6  0E16               	movlw	22
 11037  0076E8  0100               	movlb	0	; () banked
 11038  0076EA  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11039  0076EC  0E00               	movlw	0
 11040  0076EE  0100               	movlb	0	; () banked
 11041  0076F0  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11042  0076F2  0E03               	movlw	3
 11043  0076F4  EC28  F02C         	call	_lcd_set_com_seg
 11044  0076F8  0012               	return	
 11045  0076FA                     __end_of_lcd_disp_dp_loc_1:
 11046                           	opt stack 0
 11047                           tblptru	equ	0xFF8
 11048                           tblptrh	equ	0xFF7
 11049                           tblptrl	equ	0xFF6
 11050                           tablat	equ	0xFF5
 11051                           prodh	equ	0xFF4
 11052                           prodl	equ	0xFF3
 11053                           intcon	equ	0xFF2
 11054                           indf0	equ	0xFEF
 11055                           postinc0	equ	0xFEE
 11056                           fsr0h	equ	0xFEA
 11057                           fsr0l	equ	0xFE9
 11058                           wreg	equ	0xFE8
 11059                           postdec1	equ	0xFE5
 11060                           plusw1	equ	0xFE3
 11061                           fsr1h	equ	0xFE2
 11062                           fsr1l	equ	0xFE1
 11063                           indf2	equ	0xFDF
 11064                           postinc2	equ	0xFDE
 11065                           postdec2	equ	0xFDD
 11066                           plusw2	equ	0xFDB
 11067                           fsr2h	equ	0xFDA
 11068                           fsr2l	equ	0xFD9
 11069                           status	equ	0xFD8
 11070                           
 11071 ;; *************** function _lcd_disp_dp_loc_0 *****************
 11072 ;; Defined at:
 11073 ;;		line 238 in file "src/driver/lcd.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;  dp              1    wreg     unsigned char 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;  dp              1   31[COMRAM] unsigned char 
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      void 
 11080 ;; Registers used:
 11081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;Total ram usage:        1 bytes
 11092 ;; Hardware stack levels used:    1
 11093 ;; Hardware stack levels required when called:    6
 11094 ;; This function calls:
 11095 ;;		_lcd_set_com_seg
 11096 ;; This function is called by:
 11097 ;;		_lcd_show_dp
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text60
 11102  0076FA                     __ptext60:
 11103                           	opt stack 0
 11104  0076FA                     _lcd_disp_dp_loc_0:
 11105                           	opt stack 17
 11106                           
 11107                           ;incstack = 0
 11108                           ;lcd_disp_dp_loc_0@dp stored from wreg
 11109  0076FA  6E20               	movwf	lcd_disp_dp_loc_0@dp,c
 11110                           
 11111                           ;lcd.c: 240: if(dp)
 11112  0076FC  5020               	movf	lcd_disp_dp_loc_0@dp,w,c
 11113  0076FE  B4D8               	btfsc	status,2,c
 11114  007700  D00A               	goto	l10240
 11115                           
 11116                           ;lcd.c: 241: lcd_set_com_seg(3,24,0x80);
 11117  007702  0E18               	movlw	24
 11118  007704  0100               	movlb	0	; () banked
 11119  007706  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11120  007708  0E80               	movlw	128
 11121  00770A  0100               	movlb	0	; () banked
 11122  00770C  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11123  00770E  0E03               	movlw	3
 11124  007710  EC28  F02C         	call	_lcd_set_com_seg
 11125  007714  0012               	return	
 11126  007716                     l10240:
 11127                           
 11128                           ;lcd.c: 242: else
 11129                           ;lcd.c: 243: lcd_set_com_seg(3,24,0);
 11130  007716  0E18               	movlw	24
 11131  007718  0100               	movlb	0	; () banked
 11132  00771A  6F68               	movwf	lcd_set_com_seg@seg& (0+255),b
 11133  00771C  0E00               	movlw	0
 11134  00771E  0100               	movlb	0	; () banked
 11135  007720  6F69               	movwf	lcd_set_com_seg@show& (0+255),b
 11136  007722  0E03               	movlw	3
 11137  007724  EC28  F02C         	call	_lcd_set_com_seg
 11138  007728  0012               	return	
 11139  00772A                     __end_of_lcd_disp_dp_loc_0:
 11140                           	opt stack 0
 11141                           tblptru	equ	0xFF8
 11142                           tblptrh	equ	0xFF7
 11143                           tblptrl	equ	0xFF6
 11144                           tablat	equ	0xFF5
 11145                           prodh	equ	0xFF4
 11146                           prodl	equ	0xFF3
 11147                           intcon	equ	0xFF2
 11148                           indf0	equ	0xFEF
 11149                           postinc0	equ	0xFEE
 11150                           fsr0h	equ	0xFEA
 11151                           fsr0l	equ	0xFE9
 11152                           wreg	equ	0xFE8
 11153                           postdec1	equ	0xFE5
 11154                           plusw1	equ	0xFE3
 11155                           fsr1h	equ	0xFE2
 11156                           fsr1l	equ	0xFE1
 11157                           indf2	equ	0xFDF
 11158                           postinc2	equ	0xFDE
 11159                           postdec2	equ	0xFDD
 11160                           plusw2	equ	0xFDB
 11161                           fsr2h	equ	0xFDA
 11162                           fsr2l	equ	0xFD9
 11163                           status	equ	0xFD8
 11164                           
 11165 ;; *************** function _lcd_set_com_seg *****************
 11166 ;; Defined at:
 11167 ;;		line 32 in file "src/driver/lcd.c"
 11168 ;; Parameters:    Size  Location     Type
 11169 ;;  com             1    wreg     unsigned char 
 11170 ;;  seg             1    8[BANK0 ] unsigned char 
 11171 ;;  show            1    9[BANK0 ] unsigned char 
 11172 ;; Auto vars:     Size  Location     Type
 11173 ;;  com             1   13[BANK0 ] unsigned char 
 11174 ;;  bits            1   15[BANK0 ] unsigned char 
 11175 ;;  offset          1   14[BANK0 ] unsigned char 
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      void 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;Total ram usage:        8 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:    5
 11192 ;; This function calls:
 11193 ;;		___awdiv
 11194 ;; This function is called by:
 11195 ;;		_lcd_disp_level_bar
 11196 ;;		_lcd_disp_chr_loc_0
 11197 ;;		_lcd_disp_dp_loc_0
 11198 ;;		_lcd_disp_chr_loc_1
 11199 ;;		_lcd_disp_dp_loc_1
 11200 ;;		_lcd_disp_chr_loc_2
 11201 ;;		_lcd_disp_dp_loc_2
 11202 ;;		_lcd_disp_chr_loc_3
 11203 ;;		_lcd_disp_chr_loc_4
 11204 ;;		_lcd_disp_chr_loc_5
 11205 ;;		_lcd_disp_chr_loc_6
 11206 ;;		_lcd_disp_chr_loc_7
 11207 ;;		_lcd_disp_logo
 11208 ;;		_lcd_disp_battary_bar
 11209 ;;		_lcd_disp_rf_bar
 11210 ;;		_lcd_disp_light_bar
 11211 ;;		_lcd_disp_dp_loc_4
 11212 ;;		_lcd_disp_dp_loc_5
 11213 ;;		_lcd_disp_dp_loc_6
 11214 ;;		_lcd_disp_unit_t
 11215 ;;		_lcd_disp_unit_1st_m
 11216 ;;		_lcd_disp_unit_1st_m3
 11217 ;;		_lcd_disp_unit_temperature
 11218 ;;		_lcd_disp_unit_2nd_m
 11219 ;;		_lcd_disp_unit_2nd_m3
 11220 ;;		_lcd_disp_unit_mpa
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text61
 11225  005850                     __ptext61:
 11226                           	opt stack 0
 11227  005850                     _lcd_set_com_seg:
 11228                           	opt stack 21
 11229                           
 11230                           ;incstack = 0
 11231                           ;lcd_set_com_seg@com stored from wreg
 11232  005850  0100               	movlb	0	; () banked
 11233  005852  6F6D               	movwf	lcd_set_com_seg@com& (0+255),b
 11234                           
 11235                           ;lcd.c: 34: uint8_t offset;
 11236                           ;lcd.c: 35: uint8_t bits;
 11237                           ;lcd.c: 36: if(com>3)return;
 11238  005854  0E03               	movlw	3
 11239  005856  0100               	movlb	0	; () banked
 11240  005858  656D               	cpfsgt	lcd_set_com_seg@com& (0+255),b
 11241  00585A  D001               	goto	l10134
 11242  00585C  0012               	return	
 11243  00585E                     l10134:
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;lcd.c: 37: if(seg>47)return;
 11247  00585E  0E2F               	movlw	47
 11248  005860  0100               	movlb	0	; () banked
 11249  005862  6568               	cpfsgt	lcd_set_com_seg@seg& (0+255),b
 11250  005864  D001               	goto	l10138
 11251  005866  0012               	return	
 11252  005868                     l10138:
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;lcd.c: 38: offset=com*6 + seg/8;
 11256  005868  C068  F060         	movff	lcd_set_com_seg@seg,___awdiv@dividend
 11257  00586C  0100               	movlb	0	; () banked
 11258  00586E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 11259  005870  0E00               	movlw	0
 11260  005872  0100               	movlb	0	; () banked
 11261  005874  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 11262  005876  0E08               	movlw	8
 11263  005878  6F62               	movwf	___awdiv@divisor& (0+255),b
 11264  00587A  EC4F  F02D         	call	___awdiv	;wreg free
 11265  00587E  0100               	movlb	0	; () banked
 11266  005880  516D               	movf	lcd_set_com_seg@com& (0+255),w,b
 11267  005882  0D06               	mullw	6
 11268  005884  50F3               	movf	prodl,w,c
 11269  005886  0100               	movlb	0	; () banked
 11270  005888  2560               	addwf	?___awdiv& (0+255),w,b
 11271  00588A  0100               	movlb	0	; () banked
 11272  00588C  6F6E               	movwf	lcd_set_com_seg@offset& (0+255),b
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;lcd.c: 39: bits=seg%8;
 11276  00588E  0100               	movlb	0	; () banked
 11277  005890  5168               	movf	lcd_set_com_seg@seg& (0+255),w,b
 11278  005892  0B07               	andlw	7
 11279  005894  0100               	movlb	0	; () banked
 11280  005896  6F6F               	movwf	lcd_set_com_seg@bits& (0+255),b
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;lcd.c: 40: if(show){
 11284  005898  0100               	movlb	0	; () banked
 11285  00589A  5169               	movf	lcd_set_com_seg@show& (0+255),w,b
 11286  00589C  0100               	movlb	0	; () banked
 11287  00589E  B4D8               	btfsc	status,2,c
 11288  0058A0  D01B               	goto	l10146
 11289                           
 11290                           ; BSR set to: 0
 11291                           ;lcd.c: 41: pLCD[offset] |= (1<<bits);
 11292  0058A2  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 11293  0058A6  0E01               	movlw	1
 11294  0058A8  0100               	movlb	0	; () banked
 11295  0058AA  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 11296  0058AC  0100               	movlb	0	; () banked
 11297  0058AE  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 11298  0058B0  D003               	goto	u8774
 11299  0058B2                     u8775:
 11300  0058B2  0100               	movlb	0	; () banked
 11301  0058B4  90D8               	bcf	status,0,c
 11302  0058B6  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 11303  0058B8                     u8774:
 11304  0058B8  0100               	movlb	0	; () banked
 11305  0058BA  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 11306  0058BC  D7FA               	goto	u8775
 11307  0058BE  0100               	movlb	0	; () banked
 11308  0058C0  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 11309  0058C2  0D01               	mullw	1
 11310  0058C4  0E00               	movlw	low _pLCD
 11311  0058C6  24F3               	addwf	prodl,w,c
 11312  0058C8  6ED9               	movwf	fsr2l,c
 11313  0058CA  0E01               	movlw	high _pLCD
 11314  0058CC  20F4               	addwfc	prodh,w,c
 11315  0058CE  6EDA               	movwf	fsr2h,c
 11316  0058D0  0100               	movlb	0	; () banked
 11317  0058D2  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 11318  0058D4  12DF               	iorwf	indf2,f,c
 11319                           
 11320                           ;lcd.c: 42: }else{
 11321  0058D6  0012               	return	
 11322  0058D8                     l10146:
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;lcd.c: 43: pLCD[offset] &= ~(1<<bits);
 11326  0058D8  C06F  F06A         	movff	lcd_set_com_seg@bits,??_lcd_set_com_seg
 11327  0058DC  0E01               	movlw	1
 11328  0058DE  0100               	movlb	0	; () banked
 11329  0058E0  6F6B               	movwf	(??_lcd_set_com_seg+1)& (0+255),b
 11330  0058E2  0100               	movlb	0	; () banked
 11331  0058E4  2B6A               	incf	??_lcd_set_com_seg& (0+255),f,b
 11332  0058E6  D003               	goto	u8784
 11333  0058E8                     u8785:
 11334  0058E8  0100               	movlb	0	; () banked
 11335  0058EA  90D8               	bcf	status,0,c
 11336  0058EC  376B               	rlcf	(??_lcd_set_com_seg+1)& (0+255),f,b
 11337  0058EE                     u8784:
 11338  0058EE  0100               	movlb	0	; () banked
 11339  0058F0  2F6A               	decfsz	??_lcd_set_com_seg& (0+255),f,b
 11340  0058F2  D7FA               	goto	u8785
 11341  0058F4  0100               	movlb	0	; () banked
 11342  0058F6  516B               	movf	(??_lcd_set_com_seg+1)& (0+255),w,b
 11343  0058F8  0AFF               	xorlw	255
 11344  0058FA  0100               	movlb	0	; () banked
 11345  0058FC  6F6C               	movwf	(??_lcd_set_com_seg+2)& (0+255),b
 11346  0058FE  0100               	movlb	0	; () banked
 11347  005900  516E               	movf	lcd_set_com_seg@offset& (0+255),w,b
 11348  005902  0D01               	mullw	1
 11349  005904  0E00               	movlw	low _pLCD
 11350  005906  24F3               	addwf	prodl,w,c
 11351  005908  6ED9               	movwf	fsr2l,c
 11352  00590A  0E01               	movlw	high _pLCD
 11353  00590C  20F4               	addwfc	prodh,w,c
 11354  00590E  6EDA               	movwf	fsr2h,c
 11355  005910  0100               	movlb	0	; () banked
 11356  005912  516C               	movf	(??_lcd_set_com_seg+2)& (0+255),w,b
 11357  005914  16DF               	andwf	indf2,f,c
 11358  005916  0012               	return	
 11359  005918                     __end_of_lcd_set_com_seg:
 11360                           	opt stack 0
 11361                           tblptru	equ	0xFF8
 11362                           tblptrh	equ	0xFF7
 11363                           tblptrl	equ	0xFF6
 11364                           tablat	equ	0xFF5
 11365                           prodh	equ	0xFF4
 11366                           prodl	equ	0xFF3
 11367                           intcon	equ	0xFF2
 11368                           indf0	equ	0xFEF
 11369                           postinc0	equ	0xFEE
 11370                           fsr0h	equ	0xFEA
 11371                           fsr0l	equ	0xFE9
 11372                           wreg	equ	0xFE8
 11373                           postdec1	equ	0xFE5
 11374                           plusw1	equ	0xFE3
 11375                           fsr1h	equ	0xFE2
 11376                           fsr1l	equ	0xFE1
 11377                           indf2	equ	0xFDF
 11378                           postinc2	equ	0xFDE
 11379                           postdec2	equ	0xFDD
 11380                           plusw2	equ	0xFDB
 11381                           fsr2h	equ	0xFDA
 11382                           fsr2l	equ	0xFD9
 11383                           status	equ	0xFD8
 11384                           
 11385 ;; *************** function _m_mem_cpy *****************
 11386 ;; Defined at:
 11387 ;;		line 51 in file "src/depend/m_string.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  d               2    0[BANK0 ] PTR unsigned char 
 11390 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 11391 ;;  s               2    2[BANK0 ] PTR unsigned char 
 11392 ;;		 -> STR_3(5), 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;		None
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  1    wreg      void 
 11397 ;; Registers used:
 11398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;Total ram usage:        4 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; Hardware stack levels required when called:    4
 11411 ;; This function calls:
 11412 ;;		Nothing
 11413 ;; This function is called by:
 11414 ;;		_ui_disp_adj_xfixed_pt
 11415 ;;		_ui_disp_adj_xfloat_pt
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text62
 11420  007232                     __ptext62:
 11421                           	opt stack 0
 11422  007232                     _m_mem_cpy:
 11423                           	opt stack 21
 11424                           
 11425                           ;m_string.c: 53: while(*s!='\0')
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;incstack = 0
 11429  007232  D011               	goto	l10586
 11430  007234                     l10580:
 11431                           
 11432                           ;m_string.c: 54: {
 11433                           ;m_string.c: 55: *d++=*s++;
 11434  007234  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 11435  007238  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 11436  00723C                     	if	0	;tblptru may be non-zero
 11437  00723C                     	endif
 11438  00723C                     	if	0	;tblptru may be non-zero
 11439  00723C                     	endif
 11440  00723C  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 11441  007240  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 11442  007244  0008               	tblrd		*
 11443  007246  CFF5 FFDF          	movff	tablat,indf2
 11444  00724A  0100               	movlb	0	; () banked
 11445  00724C  4B62               	infsnz	m_mem_cpy@s& (0+255),f,b
 11446  00724E  2B63               	incf	(m_mem_cpy@s+1)& (0+255),f,b
 11447                           
 11448                           ; BSR set to: 0
 11449  007250  0100               	movlb	0	; () banked
 11450  007252  4B60               	infsnz	m_mem_cpy@d& (0+255),f,b
 11451  007254  2B61               	incf	(m_mem_cpy@d+1)& (0+255),f,b
 11452  007256                     l10586:
 11453  007256  C062  FFF6         	movff	m_mem_cpy@s,tblptrl
 11454  00725A  C063  FFF7         	movff	m_mem_cpy@s+1,tblptrh
 11455  00725E                     	if	0	;tblptru may be non-zero
 11456  00725E                     	endif
 11457  00725E                     	if	0	;tblptru may be non-zero
 11458  00725E                     	endif
 11459  00725E  0008               	tblrd		*
 11460  007260  50F5               	movf	tablat,w,c
 11461  007262  0900               	iorlw	0
 11462  007264  A4D8               	btfss	status,2,c
 11463  007266  D7E6               	goto	l10580
 11464                           
 11465                           ;m_string.c: 56: }
 11466                           ;m_string.c: 57: *d='\0';
 11467  007268  C060  FFD9         	movff	m_mem_cpy@d,fsr2l
 11468  00726C  C061  FFDA         	movff	m_mem_cpy@d+1,fsr2h
 11469  007270  0E00               	movlw	0
 11470  007272  6EDF               	movwf	indf2,c
 11471  007274  0012               	return		;funcret
 11472  007276                     __end_of_m_mem_cpy:
 11473                           	opt stack 0
 11474                           tblptru	equ	0xFF8
 11475                           tblptrh	equ	0xFF7
 11476                           tblptrl	equ	0xFF6
 11477                           tablat	equ	0xFF5
 11478                           prodh	equ	0xFF4
 11479                           prodl	equ	0xFF3
 11480                           intcon	equ	0xFF2
 11481                           indf0	equ	0xFEF
 11482                           postinc0	equ	0xFEE
 11483                           fsr0h	equ	0xFEA
 11484                           fsr0l	equ	0xFE9
 11485                           wreg	equ	0xFE8
 11486                           postdec1	equ	0xFE5
 11487                           plusw1	equ	0xFE3
 11488                           fsr1h	equ	0xFE2
 11489                           fsr1l	equ	0xFE1
 11490                           indf2	equ	0xFDF
 11491                           postinc2	equ	0xFDE
 11492                           postdec2	equ	0xFDD
 11493                           plusw2	equ	0xFDB
 11494                           fsr2h	equ	0xFDA
 11495                           fsr2l	equ	0xFD9
 11496                           status	equ	0xFD8
 11497                           
 11498 ;; *************** function _m_int16_2_str_4 *****************
 11499 ;; Defined at:
 11500 ;;		line 260 in file "src/depend/m_string.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;  buf             2    8[BANK0 ] PTR unsigned char 
 11503 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 11504 ;;  x               2   10[BANK0 ] int 
 11505 ;; Auto vars:     Size  Location     Type
 11506 ;;		None
 11507 ;; Return value:  Size  Location     Type
 11508 ;;                  1    wreg      void 
 11509 ;; Registers used:
 11510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11511 ;; Tracked objects:
 11512 ;;		On entry : 0/0
 11513 ;;		On exit  : 0/0
 11514 ;;		Unchanged: 0/0
 11515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;Total ram usage:        4 bytes
 11521 ;; Hardware stack levels used:    1
 11522 ;; Hardware stack levels required when called:    5
 11523 ;; This function calls:
 11524 ;;		___awdiv
 11525 ;;		___awmod
 11526 ;; This function is called by:
 11527 ;;		_ui_disp_adj_xfixed_pt
 11528 ;;		_ui_disp_adj_xfloat_pt
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text63
 11533  004936                     __ptext63:
 11534                           	opt stack 0
 11535  004936                     _m_int16_2_str_4:
 11536                           	opt stack 20
 11537                           
 11538                           ;m_string.c: 262: if(x>9999)x=9999;
 11539                           
 11540                           ;incstack = 0
 11541  004936  0100               	movlb	0	; () banked
 11542  004938  BF6B               	btfsc	(m_int16_2_str_4@x+1)& (0+255),7,b
 11543  00493A  D00D               	goto	l10594
 11544  00493C  0E10               	movlw	16
 11545  00493E  0100               	movlb	0	; () banked
 11546  004940  5D6A               	subwf	m_int16_2_str_4@x& (0+255),w,b
 11547  004942  0E27               	movlw	39
 11548  004944  0100               	movlb	0	; () banked
 11549  004946  596B               	subwfb	(m_int16_2_str_4@x+1)& (0+255),w,b
 11550  004948  A0D8               	btfss	status,0,c
 11551  00494A  D005               	goto	l10594
 11552                           
 11553                           ; BSR set to: 0
 11554  00494C  0E27               	movlw	39
 11555  00494E  0100               	movlb	0	; () banked
 11556  004950  6F6B               	movwf	(m_int16_2_str_4@x+1)& (0+255),b
 11557  004952  0E0F               	movlw	15
 11558  004954  6F6A               	movwf	m_int16_2_str_4@x& (0+255),b
 11559  004956                     l10594:
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;m_string.c: 263: buf[3]=HexTable[x%10];
 11563  004956  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 11564  00495A  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11565  00495E  0E00               	movlw	0
 11566  004960  0100               	movlb	0	; () banked
 11567  004962  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11568  004964  0E0A               	movlw	10
 11569  004966  6F62               	movwf	___awmod@divisor& (0+255),b
 11570  004968  EC6B  F02F         	call	___awmod	;wreg free
 11571  00496C  0ED4               	movlw	low _HexTable
 11572  00496E  0100               	movlb	0	; () banked
 11573  004970  2560               	addwf	?___awmod& (0+255),w,b
 11574  004972  6EF6               	movwf	tblptrl,c
 11575  004974  0EFB               	movlw	high _HexTable
 11576  004976  0100               	movlb	0	; () banked
 11577  004978  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 11578  00497A  6EF7               	movwf	tblptrh,c
 11579  00497C                     	if	0	;There are less than 3 active tblptr bytes
 11580  00497C                     	endif
 11581  00497C  0100               	movlb	0	; () banked
 11582  00497E  EE20 F003          	lfsr	2,3
 11583  004982  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 11584  004984  26D9               	addwf	fsr2l,f,c
 11585  004986  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 11586  004988  22DA               	addwfc	fsr2h,f,c
 11587  00498A  0008               	tblrd		*
 11588  00498C  CFF5 FFDF          	movff	tablat,indf2
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;m_string.c: 264: x/=10;
 11592  004990  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 11593  004994  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 11594  004998  0E00               	movlw	0
 11595  00499A  0100               	movlb	0	; () banked
 11596  00499C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 11597  00499E  0E0A               	movlw	10
 11598  0049A0  6F62               	movwf	___awdiv@divisor& (0+255),b
 11599  0049A2  EC4F  F02D         	call	___awdiv	;wreg free
 11600  0049A6  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 11601  0049AA  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 11602                           
 11603                           ;m_string.c: 265: buf[2]=HexTable[x%10];
 11604  0049AE  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 11605  0049B2  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11606  0049B6  0E00               	movlw	0
 11607  0049B8  0100               	movlb	0	; () banked
 11608  0049BA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11609  0049BC  0E0A               	movlw	10
 11610  0049BE  6F62               	movwf	___awmod@divisor& (0+255),b
 11611  0049C0  EC6B  F02F         	call	___awmod	;wreg free
 11612  0049C4  0ED4               	movlw	low _HexTable
 11613  0049C6  0100               	movlb	0	; () banked
 11614  0049C8  2560               	addwf	?___awmod& (0+255),w,b
 11615  0049CA  6EF6               	movwf	tblptrl,c
 11616  0049CC  0EFB               	movlw	high _HexTable
 11617  0049CE  0100               	movlb	0	; () banked
 11618  0049D0  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 11619  0049D2  6EF7               	movwf	tblptrh,c
 11620  0049D4                     	if	0	;There are less than 3 active tblptr bytes
 11621  0049D4                     	endif
 11622  0049D4  0100               	movlb	0	; () banked
 11623  0049D6  EE20 F002          	lfsr	2,2
 11624  0049DA  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 11625  0049DC  26D9               	addwf	fsr2l,f,c
 11626  0049DE  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 11627  0049E0  22DA               	addwfc	fsr2h,f,c
 11628  0049E2  0008               	tblrd		*
 11629  0049E4  CFF5 FFDF          	movff	tablat,indf2
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;m_string.c: 266: x/=10;
 11633  0049E8  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 11634  0049EC  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 11635  0049F0  0E00               	movlw	0
 11636  0049F2  0100               	movlb	0	; () banked
 11637  0049F4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 11638  0049F6  0E0A               	movlw	10
 11639  0049F8  6F62               	movwf	___awdiv@divisor& (0+255),b
 11640  0049FA  EC4F  F02D         	call	___awdiv	;wreg free
 11641  0049FE  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 11642  004A02  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 11643                           
 11644                           ;m_string.c: 267: buf[1]=HexTable[x%10];
 11645  004A06  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 11646  004A0A  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11647  004A0E  0E00               	movlw	0
 11648  004A10  0100               	movlb	0	; () banked
 11649  004A12  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11650  004A14  0E0A               	movlw	10
 11651  004A16  6F62               	movwf	___awmod@divisor& (0+255),b
 11652  004A18  EC6B  F02F         	call	___awmod	;wreg free
 11653  004A1C  0ED4               	movlw	low _HexTable
 11654  004A1E  0100               	movlb	0	; () banked
 11655  004A20  2560               	addwf	?___awmod& (0+255),w,b
 11656  004A22  6EF6               	movwf	tblptrl,c
 11657  004A24  0EFB               	movlw	high _HexTable
 11658  004A26  0100               	movlb	0	; () banked
 11659  004A28  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 11660  004A2A  6EF7               	movwf	tblptrh,c
 11661  004A2C                     	if	0	;There are less than 3 active tblptr bytes
 11662  004A2C                     	endif
 11663  004A2C  0100               	movlb	0	; () banked
 11664  004A2E  EE20 F001          	lfsr	2,1
 11665  004A32  5168               	movf	m_int16_2_str_4@buf& (0+255),w,b
 11666  004A34  26D9               	addwf	fsr2l,f,c
 11667  004A36  5169               	movf	(m_int16_2_str_4@buf+1)& (0+255),w,b
 11668  004A38  22DA               	addwfc	fsr2h,f,c
 11669  004A3A  0008               	tblrd		*
 11670  004A3C  CFF5 FFDF          	movff	tablat,indf2
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;m_string.c: 268: x/=10;
 11674  004A40  C06A  F060         	movff	m_int16_2_str_4@x,___awdiv@dividend
 11675  004A44  C06B  F061         	movff	m_int16_2_str_4@x+1,___awdiv@dividend+1
 11676  004A48  0E00               	movlw	0
 11677  004A4A  0100               	movlb	0	; () banked
 11678  004A4C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 11679  004A4E  0E0A               	movlw	10
 11680  004A50  6F62               	movwf	___awdiv@divisor& (0+255),b
 11681  004A52  EC4F  F02D         	call	___awdiv	;wreg free
 11682  004A56  C060  F06A         	movff	?___awdiv,m_int16_2_str_4@x
 11683  004A5A  C061  F06B         	movff	?___awdiv+1,m_int16_2_str_4@x+1
 11684                           
 11685                           ;m_string.c: 269: buf[0]=HexTable[x%10];
 11686  004A5E  C06A  F060         	movff	m_int16_2_str_4@x,___awmod@dividend
 11687  004A62  C06B  F061         	movff	m_int16_2_str_4@x+1,___awmod@dividend+1
 11688  004A66  0E00               	movlw	0
 11689  004A68  0100               	movlb	0	; () banked
 11690  004A6A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11691  004A6C  0E0A               	movlw	10
 11692  004A6E  6F62               	movwf	___awmod@divisor& (0+255),b
 11693  004A70  EC6B  F02F         	call	___awmod	;wreg free
 11694  004A74  0ED4               	movlw	low _HexTable
 11695  004A76  0100               	movlb	0	; () banked
 11696  004A78  2560               	addwf	?___awmod& (0+255),w,b
 11697  004A7A  6EF6               	movwf	tblptrl,c
 11698  004A7C  0EFB               	movlw	high _HexTable
 11699  004A7E  0100               	movlb	0	; () banked
 11700  004A80  2161               	addwfc	(?___awmod+1)& (0+255),w,b
 11701  004A82  6EF7               	movwf	tblptrh,c
 11702  004A84                     	if	0	;There are less than 3 active tblptr bytes
 11703  004A84                     	endif
 11704  004A84  C068  FFD9         	movff	m_int16_2_str_4@buf,fsr2l
 11705  004A88  C069  FFDA         	movff	m_int16_2_str_4@buf+1,fsr2h
 11706  004A8C  0008               	tblrd		*
 11707  004A8E  CFF5 FFDF          	movff	tablat,indf2
 11708                           
 11709                           ; BSR set to: 0
 11710  004A92  0012               	return		;funcret
 11711  004A94                     __end_of_m_int16_2_str_4:
 11712                           	opt stack 0
 11713                           tblptru	equ	0xFF8
 11714                           tblptrh	equ	0xFF7
 11715                           tblptrl	equ	0xFF6
 11716                           tablat	equ	0xFF5
 11717                           prodh	equ	0xFF4
 11718                           prodl	equ	0xFF3
 11719                           intcon	equ	0xFF2
 11720                           indf0	equ	0xFEF
 11721                           postinc0	equ	0xFEE
 11722                           fsr0h	equ	0xFEA
 11723                           fsr0l	equ	0xFE9
 11724                           wreg	equ	0xFE8
 11725                           postdec1	equ	0xFE5
 11726                           plusw1	equ	0xFE3
 11727                           fsr1h	equ	0xFE2
 11728                           fsr1l	equ	0xFE1
 11729                           indf2	equ	0xFDF
 11730                           postinc2	equ	0xFDE
 11731                           postdec2	equ	0xFDD
 11732                           plusw2	equ	0xFDB
 11733                           fsr2h	equ	0xFDA
 11734                           fsr2l	equ	0xFD9
 11735                           status	equ	0xFD8
 11736                           
 11737 ;; *************** function ___awmod *****************
 11738 ;; Defined at:
 11739 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;  dividend        2    0[BANK0 ] int 
 11742 ;;  divisor         2    2[BANK0 ] int 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  sign            1    5[BANK0 ] unsigned char 
 11745 ;;  counter         1    4[BANK0 ] unsigned char 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  2    0[BANK0 ] int 
 11748 ;; Registers used:
 11749 ;;		wreg, status,2, status,0
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11756 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11758 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;Total ram usage:        6 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; Hardware stack levels required when called:    4
 11762 ;; This function calls:
 11763 ;;		Nothing
 11764 ;; This function is called by:
 11765 ;;		_m_int16_2_str_4
 11766 ;; This function uses a non-reentrant model
 11767 ;;
 11768                           
 11769                           	psect	text64
 11770  005ED6                     __ptext64:
 11771                           	opt stack 0
 11772  005ED6                     ___awmod:
 11773                           	opt stack 20
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;incstack = 0
 11777  005ED6  0E00               	movlw	0
 11778  005ED8  0100               	movlb	0	; () banked
 11779  005EDA  6F65               	movwf	___awmod@sign& (0+255),b
 11780                           
 11781                           ; BSR set to: 0
 11782  005EDC  0100               	movlb	0	; () banked
 11783  005EDE  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11784  005EE0  D008               	goto	l10522
 11785                           
 11786                           ; BSR set to: 0
 11787  005EE2  0100               	movlb	0	; () banked
 11788  005EE4  6D60               	negf	___awmod@dividend& (0+255),b
 11789  005EE6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11790  005EE8  B0D8               	btfsc	status,0,c
 11791  005EEA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11792                           
 11793                           ; BSR set to: 0
 11794  005EEC  0E01               	movlw	1
 11795  005EEE  0100               	movlb	0	; () banked
 11796  005EF0  6F65               	movwf	___awmod@sign& (0+255),b
 11797  005EF2                     l10522:
 11798                           
 11799                           ; BSR set to: 0
 11800  005EF2  0100               	movlb	0	; () banked
 11801  005EF4  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11802  005EF6  D005               	goto	l10526
 11803                           
 11804                           ; BSR set to: 0
 11805  005EF8  0100               	movlb	0	; () banked
 11806  005EFA  6D62               	negf	___awmod@divisor& (0+255),b
 11807  005EFC  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11808  005EFE  B0D8               	btfsc	status,0,c
 11809  005F00  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11810  005F02                     l10526:
 11811                           
 11812                           ; BSR set to: 0
 11813  005F02  0100               	movlb	0	; () banked
 11814  005F04  5162               	movf	___awmod@divisor& (0+255),w,b
 11815  005F06  0100               	movlb	0	; () banked
 11816  005F08  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11817  005F0A  B4D8               	btfsc	status,2,c
 11818  005F0C  D026               	goto	l10542
 11819                           
 11820                           ; BSR set to: 0
 11821  005F0E  0E01               	movlw	1
 11822  005F10  0100               	movlb	0	; () banked
 11823  005F12  6F64               	movwf	___awmod@counter& (0+255),b
 11824  005F14  D006               	goto	l10532
 11825  005F16                     l10530:
 11826                           
 11827                           ; BSR set to: 0
 11828  005F16  0100               	movlb	0	; () banked
 11829  005F18  90D8               	bcf	status,0,c
 11830  005F1A  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11831  005F1C  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11832  005F1E  0100               	movlb	0	; () banked
 11833  005F20  2B64               	incf	___awmod@counter& (0+255),f,b
 11834  005F22                     l10532:
 11835                           
 11836                           ; BSR set to: 0
 11837  005F22  0100               	movlb	0	; () banked
 11838  005F24  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11839  005F26  D7F7               	goto	l10530
 11840  005F28                     l10534:
 11841                           
 11842                           ; BSR set to: 0
 11843  005F28  0100               	movlb	0	; () banked
 11844  005F2A  5162               	movf	___awmod@divisor& (0+255),w,b
 11845  005F2C  0100               	movlb	0	; () banked
 11846  005F2E  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11847  005F30  0100               	movlb	0	; () banked
 11848  005F32  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11849  005F34  0100               	movlb	0	; () banked
 11850  005F36  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11851  005F38  A0D8               	btfss	status,0,c
 11852  005F3A  D008               	goto	l10538
 11853                           
 11854                           ; BSR set to: 0
 11855  005F3C  0100               	movlb	0	; () banked
 11856  005F3E  5162               	movf	___awmod@divisor& (0+255),w,b
 11857  005F40  0100               	movlb	0	; () banked
 11858  005F42  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11859  005F44  0100               	movlb	0	; () banked
 11860  005F46  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11861  005F48  0100               	movlb	0	; () banked
 11862  005F4A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11863  005F4C                     l10538:
 11864                           
 11865                           ; BSR set to: 0
 11866  005F4C  0100               	movlb	0	; () banked
 11867  005F4E  90D8               	bcf	status,0,c
 11868  005F50  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11869  005F52  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11870                           
 11871                           ; BSR set to: 0
 11872  005F54  0100               	movlb	0	; () banked
 11873  005F56  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11874  005F58  D7E7               	goto	l10534
 11875  005F5A                     l10542:
 11876                           
 11877                           ; BSR set to: 0
 11878  005F5A  0100               	movlb	0	; () banked
 11879  005F5C  5165               	movf	___awmod@sign& (0+255),w,b
 11880  005F5E  0100               	movlb	0	; () banked
 11881  005F60  B4D8               	btfsc	status,2,c
 11882  005F62  D005               	goto	l10546
 11883                           
 11884                           ; BSR set to: 0
 11885  005F64  0100               	movlb	0	; () banked
 11886  005F66  6D60               	negf	___awmod@dividend& (0+255),b
 11887  005F68  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11888  005F6A  B0D8               	btfsc	status,0,c
 11889  005F6C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11890  005F6E                     l10546:
 11891                           
 11892                           ; BSR set to: 0
 11893  005F6E  C060  F060         	movff	___awmod@dividend,?___awmod
 11894  005F72  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11895  005F76  0012               	return	
 11896  005F78                     __end_of___awmod:
 11897                           	opt stack 0
 11898                           tblptru	equ	0xFF8
 11899                           tblptrh	equ	0xFF7
 11900                           tblptrl	equ	0xFF6
 11901                           tablat	equ	0xFF5
 11902                           prodh	equ	0xFF4
 11903                           prodl	equ	0xFF3
 11904                           intcon	equ	0xFF2
 11905                           indf0	equ	0xFEF
 11906                           postinc0	equ	0xFEE
 11907                           fsr0h	equ	0xFEA
 11908                           fsr0l	equ	0xFE9
 11909                           wreg	equ	0xFE8
 11910                           postdec1	equ	0xFE5
 11911                           plusw1	equ	0xFE3
 11912                           fsr1h	equ	0xFE2
 11913                           fsr1l	equ	0xFE1
 11914                           indf2	equ	0xFDF
 11915                           postinc2	equ	0xFDE
 11916                           postdec2	equ	0xFDD
 11917                           plusw2	equ	0xFDB
 11918                           fsr2h	equ	0xFDA
 11919                           fsr2l	equ	0xFD9
 11920                           status	equ	0xFD8
 11921                           
 11922 ;; *************** function ___awdiv *****************
 11923 ;; Defined at:
 11924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;  dividend        2    0[BANK0 ] int 
 11927 ;;  divisor         2    2[BANK0 ] int 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  quotient        2    6[BANK0 ] int 
 11930 ;;  sign            1    5[BANK0 ] unsigned char 
 11931 ;;  counter         1    4[BANK0 ] unsigned char 
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  2    0[BANK0 ] int 
 11934 ;; Registers used:
 11935 ;;		wreg, status,2, status,0
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11941 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11942 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11944 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11945 ;;Total ram usage:        8 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; Hardware stack levels required when called:    4
 11948 ;; This function calls:
 11949 ;;		Nothing
 11950 ;; This function is called by:
 11951 ;;		_m_int16_2_str_4
 11952 ;;		_lcd_set_com_seg
 11953 ;; This function uses a non-reentrant model
 11954 ;;
 11955                           
 11956                           	psect	text65
 11957  005A9E                     __ptext65:
 11958                           	opt stack 0
 11959  005A9E                     ___awdiv:
 11960                           	opt stack 21
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;incstack = 0
 11964  005A9E  0E00               	movlw	0
 11965  005AA0  0100               	movlb	0	; () banked
 11966  005AA2  6F65               	movwf	___awdiv@sign& (0+255),b
 11967                           
 11968                           ; BSR set to: 0
 11969  005AA4  0100               	movlb	0	; () banked
 11970  005AA6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11971  005AA8  D008               	goto	l10094
 11972                           
 11973                           ; BSR set to: 0
 11974  005AAA  0100               	movlb	0	; () banked
 11975  005AAC  6D62               	negf	___awdiv@divisor& (0+255),b
 11976  005AAE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11977  005AB0  B0D8               	btfsc	status,0,c
 11978  005AB2  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11979                           
 11980                           ; BSR set to: 0
 11981  005AB4  0E01               	movlw	1
 11982  005AB6  0100               	movlb	0	; () banked
 11983  005AB8  6F65               	movwf	___awdiv@sign& (0+255),b
 11984  005ABA                     l10094:
 11985                           
 11986                           ; BSR set to: 0
 11987  005ABA  0100               	movlb	0	; () banked
 11988  005ABC  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11989  005ABE  D008               	goto	l10100
 11990                           
 11991                           ; BSR set to: 0
 11992  005AC0  0100               	movlb	0	; () banked
 11993  005AC2  6D60               	negf	___awdiv@dividend& (0+255),b
 11994  005AC4  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11995  005AC6  B0D8               	btfsc	status,0,c
 11996  005AC8  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11997                           
 11998                           ; BSR set to: 0
 11999  005ACA  0E01               	movlw	1
 12000  005ACC  0100               	movlb	0	; () banked
 12001  005ACE  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 12002  005AD0                     l10100:
 12003                           
 12004                           ; BSR set to: 0
 12005  005AD0  0E00               	movlw	0
 12006  005AD2  0100               	movlb	0	; () banked
 12007  005AD4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 12008  005AD6  0E00               	movlw	0
 12009  005AD8  6F66               	movwf	___awdiv@quotient& (0+255),b
 12010                           
 12011                           ; BSR set to: 0
 12012  005ADA  0100               	movlb	0	; () banked
 12013  005ADC  5162               	movf	___awdiv@divisor& (0+255),w,b
 12014  005ADE  0100               	movlb	0	; () banked
 12015  005AE0  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12016  005AE2  B4D8               	btfsc	status,2,c
 12017  005AE4  D02C               	goto	l10122
 12018                           
 12019                           ; BSR set to: 0
 12020  005AE6  0E01               	movlw	1
 12021  005AE8  0100               	movlb	0	; () banked
 12022  005AEA  6F64               	movwf	___awdiv@counter& (0+255),b
 12023  005AEC  D006               	goto	l10108
 12024  005AEE                     l10106:
 12025                           
 12026                           ; BSR set to: 0
 12027  005AEE  0100               	movlb	0	; () banked
 12028  005AF0  90D8               	bcf	status,0,c
 12029  005AF2  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 12030  005AF4  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12031  005AF6  0100               	movlb	0	; () banked
 12032  005AF8  2B64               	incf	___awdiv@counter& (0+255),f,b
 12033  005AFA                     l10108:
 12034                           
 12035                           ; BSR set to: 0
 12036  005AFA  0100               	movlb	0	; () banked
 12037  005AFC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12038  005AFE  D7F7               	goto	l10106
 12039  005B00                     l10110:
 12040                           
 12041                           ; BSR set to: 0
 12042  005B00  0100               	movlb	0	; () banked
 12043  005B02  90D8               	bcf	status,0,c
 12044  005B04  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 12045  005B06  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12046                           
 12047                           ; BSR set to: 0
 12048  005B08  0100               	movlb	0	; () banked
 12049  005B0A  5162               	movf	___awdiv@divisor& (0+255),w,b
 12050  005B0C  0100               	movlb	0	; () banked
 12051  005B0E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 12052  005B10  0100               	movlb	0	; () banked
 12053  005B12  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12054  005B14  0100               	movlb	0	; () banked
 12055  005B16  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12056  005B18  A0D8               	btfss	status,0,c
 12057  005B1A  D00A               	goto	l10118
 12058                           
 12059                           ; BSR set to: 0
 12060  005B1C  0100               	movlb	0	; () banked
 12061  005B1E  5162               	movf	___awdiv@divisor& (0+255),w,b
 12062  005B20  0100               	movlb	0	; () banked
 12063  005B22  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 12064  005B24  0100               	movlb	0	; () banked
 12065  005B26  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12066  005B28  0100               	movlb	0	; () banked
 12067  005B2A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070  005B2C  0100               	movlb	0	; () banked
 12071  005B2E  8166               	bsf	___awdiv@quotient& (0+255),0,b
 12072  005B30                     l10118:
 12073                           
 12074                           ; BSR set to: 0
 12075  005B30  0100               	movlb	0	; () banked
 12076  005B32  90D8               	bcf	status,0,c
 12077  005B34  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12078  005B36  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 12079                           
 12080                           ; BSR set to: 0
 12081  005B38  0100               	movlb	0	; () banked
 12082  005B3A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 12083  005B3C  D7E1               	goto	l10110
 12084  005B3E                     l10122:
 12085                           
 12086                           ; BSR set to: 0
 12087  005B3E  0100               	movlb	0	; () banked
 12088  005B40  5165               	movf	___awdiv@sign& (0+255),w,b
 12089  005B42  0100               	movlb	0	; () banked
 12090  005B44  B4D8               	btfsc	status,2,c
 12091  005B46  D005               	goto	l10126
 12092                           
 12093                           ; BSR set to: 0
 12094  005B48  0100               	movlb	0	; () banked
 12095  005B4A  6D66               	negf	___awdiv@quotient& (0+255),b
 12096  005B4C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12097  005B4E  B0D8               	btfsc	status,0,c
 12098  005B50  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12099  005B52                     l10126:
 12100                           
 12101                           ; BSR set to: 0
 12102  005B52  C066  F060         	movff	___awdiv@quotient,?___awdiv
 12103  005B56  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 12104  005B5A  0012               	return	
 12105  005B5C                     __end_of___awdiv:
 12106                           	opt stack 0
 12107                           tblptru	equ	0xFF8
 12108                           tblptrh	equ	0xFF7
 12109                           tblptrl	equ	0xFF6
 12110                           tablat	equ	0xFF5
 12111                           prodh	equ	0xFF4
 12112                           prodl	equ	0xFF3
 12113                           intcon	equ	0xFF2
 12114                           indf0	equ	0xFEF
 12115                           postinc0	equ	0xFEE
 12116                           fsr0h	equ	0xFEA
 12117                           fsr0l	equ	0xFE9
 12118                           wreg	equ	0xFE8
 12119                           postdec1	equ	0xFE5
 12120                           plusw1	equ	0xFE3
 12121                           fsr1h	equ	0xFE2
 12122                           fsr1l	equ	0xFE1
 12123                           indf2	equ	0xFDF
 12124                           postinc2	equ	0xFDE
 12125                           postdec2	equ	0xFDD
 12126                           plusw2	equ	0xFDB
 12127                           fsr2h	equ	0xFDA
 12128                           fsr2l	equ	0xFD9
 12129                           status	equ	0xFD8
 12130                           
 12131 ;; *************** function _lcd_disp_refresh *****************
 12132 ;; Defined at:
 12133 ;;		line 547 in file "src/driver/lcd.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;		None
 12136 ;; Auto vars:     Size  Location     Type
 12137 ;;		None
 12138 ;; Return value:  Size  Location     Type
 12139 ;;                  1    wreg      void 
 12140 ;; Registers used:
 12141 ;;		None
 12142 ;; Tracked objects:
 12143 ;;		On entry : 0/0
 12144 ;;		On exit  : 0/0
 12145 ;;		Unchanged: 0/0
 12146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12151 ;;Total ram usage:        0 bytes
 12152 ;; Hardware stack levels used:    1
 12153 ;; Hardware stack levels required when called:    4
 12154 ;; This function calls:
 12155 ;;		Nothing
 12156 ;; This function is called by:
 12157 ;;		_ui_disp_start_cs600
 12158 ;;		_ui_disp_adj_xfixed_pt
 12159 ;;		_ui_disp_all_on
 12160 ;;		_ui_disp_all_off
 12161 ;;		_ui_disp_rtc_mm_ss
 12162 ;;		_ui_disp_adj_xfloat_pt
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text66
 12167  006D22                     __ptext66:
 12168                           	opt stack 0
 12169  006D22                     _lcd_disp_refresh:
 12170                           	opt stack 25
 12171                           
 12172                           ;lcd.c: 550: LCDDATA0=pLCD[0];
 12173                           
 12174                           ; BSR set to: 0
 12175                           ;incstack = 0
 12176  006D22  C100  FFBB         	movff	_pLCD,4027	;volatile
 12177                           
 12178                           ;lcd.c: 551: LCDDATA1=pLCD[1];
 12179  006D26  C101  FFBC         	movff	_pLCD+1,4028	;volatile
 12180                           
 12181                           ;lcd.c: 552: LCDDATA2=pLCD[2];
 12182  006D2A  C102  FFBD         	movff	_pLCD+2,4029	;volatile
 12183                           
 12184                           ;lcd.c: 553: LCDDATA3=pLCD[3];
 12185  006D2E  C103  FFBE         	movff	_pLCD+3,4030	;volatile
 12186                           
 12187                           ;lcd.c: 554: LCDDATA4=pLCD[4];
 12188  006D32  C104  FFBF         	movff	_pLCD+4,4031	;volatile
 12189                           
 12190                           ;lcd.c: 555: LCDDATA5=pLCD[5];
 12191  006D36  C105  FF6B         	movff	_pLCD+5,3947	;volatile
 12192                           
 12193                           ;lcd.c: 556: LCDDATA6=pLCD[6];
 12194  006D3A  C106  FF6C         	movff	_pLCD+6,3948	;volatile
 12195                           
 12196                           ;lcd.c: 557: LCDDATA7=pLCD[7];
 12197  006D3E  C107  FF6D         	movff	_pLCD+7,3949	;volatile
 12198                           
 12199                           ;lcd.c: 558: LCDDATA8=pLCD[8];
 12200  006D42  C108  FF6E         	movff	_pLCD+8,3950	;volatile
 12201                           
 12202                           ;lcd.c: 559: LCDDATA9=pLCD[9];
 12203  006D46  C109  FF6F         	movff	_pLCD+9,3951	;volatile
 12204                           
 12205                           ;lcd.c: 561: LCDDATA10=pLCD[10];
 12206  006D4A  C10A  FF70         	movff	_pLCD+10,3952	;volatile
 12207                           
 12208                           ;lcd.c: 562: LCDDATA11=pLCD[11];
 12209  006D4E  C10B  FF71         	movff	_pLCD+11,3953	;volatile
 12210                           
 12211                           ;lcd.c: 563: LCDDATA12=pLCD[12];
 12212  006D52  C10C  FF72         	movff	_pLCD+12,3954	;volatile
 12213                           
 12214                           ;lcd.c: 564: LCDDATA13=pLCD[13];
 12215  006D56  C10D  FF73         	movff	_pLCD+13,3955	;volatile
 12216                           
 12217                           ;lcd.c: 565: LCDDATA14=pLCD[14];
 12218  006D5A  C10E  FF74         	movff	_pLCD+14,3956	;volatile
 12219                           
 12220                           ;lcd.c: 566: LCDDATA15=pLCD[15];
 12221  006D5E  C10F  FF75         	movff	_pLCD+15,3957	;volatile
 12222                           
 12223                           ;lcd.c: 567: LCDDATA16=pLCD[16];
 12224  006D62  C110  FF76         	movff	_pLCD+16,3958	;volatile
 12225                           
 12226                           ;lcd.c: 568: LCDDATA17=pLCD[17];
 12227  006D66  C111  FF77         	movff	_pLCD+17,3959	;volatile
 12228                           
 12229                           ;lcd.c: 569: LCDDATA18=pLCD[18];
 12230  006D6A  C112  FF78         	movff	_pLCD+18,3960	;volatile
 12231                           
 12232                           ;lcd.c: 570: LCDDATA19=pLCD[19];
 12233  006D6E  C113  FF79         	movff	_pLCD+19,3961	;volatile
 12234                           
 12235                           ;lcd.c: 572: LCDDATA20=pLCD[20];
 12236  006D72  C114  FF7A         	movff	_pLCD+20,3962	;volatile
 12237                           
 12238                           ;lcd.c: 573: LCDDATA21=pLCD[21];
 12239  006D76  C115  FF7B         	movff	_pLCD+21,3963	;volatile
 12240                           
 12241                           ;lcd.c: 574: LCDDATA22=pLCD[22];
 12242  006D7A  C116  FF7C         	movff	_pLCD+22,3964	;volatile
 12243                           
 12244                           ;lcd.c: 575: LCDDATA23=pLCD[23];
 12245  006D7E  C117  FF7D         	movff	_pLCD+23,3965	;volatile
 12246  006D82  0012               	return		;funcret
 12247  006D84                     __end_of_lcd_disp_refresh:
 12248                           	opt stack 0
 12249                           tblptru	equ	0xFF8
 12250                           tblptrh	equ	0xFF7
 12251                           tblptrl	equ	0xFF6
 12252                           tablat	equ	0xFF5
 12253                           prodh	equ	0xFF4
 12254                           prodl	equ	0xFF3
 12255                           intcon	equ	0xFF2
 12256                           indf0	equ	0xFEF
 12257                           postinc0	equ	0xFEE
 12258                           fsr0h	equ	0xFEA
 12259                           fsr0l	equ	0xFE9
 12260                           wreg	equ	0xFE8
 12261                           postdec1	equ	0xFE5
 12262                           plusw1	equ	0xFE3
 12263                           fsr1h	equ	0xFE2
 12264                           fsr1l	equ	0xFE1
 12265                           indf2	equ	0xFDF
 12266                           postinc2	equ	0xFDE
 12267                           postdec2	equ	0xFDD
 12268                           plusw2	equ	0xFDB
 12269                           fsr2h	equ	0xFDA
 12270                           fsr2l	equ	0xFD9
 12271                           status	equ	0xFD8
 12272                           
 12273 ;; *************** function ___x_arrange_str *****************
 12274 ;; Defined at:
 12275 ;;		line 9 in file "src/api/ui.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  str             2    0[BANK0 ] PTR unsigned char 
 12278 ;;		 -> ui_disp_adj_xfixed_pt@buf(10), ui_disp_adj_xfloat_pt@buf(10), 
 12279 ;;  len             1    2[BANK0 ] unsigned char 
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;  i               1   31[COMRAM] unsigned char 
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12291 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12294 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;Total ram usage:        4 bytes
 12296 ;; Hardware stack levels used:    1
 12297 ;; Hardware stack levels required when called:    4
 12298 ;; This function calls:
 12299 ;;		Nothing
 12300 ;; This function is called by:
 12301 ;;		_ui_disp_adj_xfixed_pt
 12302 ;;		_ui_disp_adj_xfloat_pt
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306                           	psect	text67
 12307  006DE2                     __ptext67:
 12308                           	opt stack 0
 12309  006DE2                     ___x_arrange_str:
 12310                           	opt stack 21
 12311                           
 12312                           ;ui.c: 11: uint8_t i;
 12313                           ;ui.c: 12: for(i=0;i<len;i++){
 12314                           
 12315                           ;incstack = 0
 12316  006DE2  0E00               	movlw	0
 12317  006DE4  6E20               	movwf	___x_arrange_str@i,c
 12318  006DE6  D01A               	goto	l10558
 12319  006DE8                     l10552:
 12320                           
 12321                           ;ui.c: 13: if(str[i]=='\0')str[i]=' ';
 12322  006DE8  5020               	movf	___x_arrange_str@i,w,c
 12323  006DEA  0D01               	mullw	1
 12324  006DEC  50F3               	movf	prodl,w,c
 12325  006DEE  0100               	movlb	0	; () banked
 12326  006DF0  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 12327  006DF2  6ED9               	movwf	fsr2l,c
 12328  006DF4  50F4               	movf	prodh,w,c
 12329  006DF6  0100               	movlb	0	; () banked
 12330  006DF8  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 12331  006DFA  6EDA               	movwf	fsr2h,c
 12332  006DFC  50DF               	movf	indf2,w,c
 12333  006DFE  A4D8               	btfss	status,2,c
 12334  006E00  D00C               	goto	l10556
 12335                           
 12336                           ; BSR set to: 0
 12337  006E02  5020               	movf	___x_arrange_str@i,w,c
 12338  006E04  0D01               	mullw	1
 12339  006E06  50F3               	movf	prodl,w,c
 12340  006E08  0100               	movlb	0	; () banked
 12341  006E0A  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 12342  006E0C  6ED9               	movwf	fsr2l,c
 12343  006E0E  50F4               	movf	prodh,w,c
 12344  006E10  0100               	movlb	0	; () banked
 12345  006E12  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 12346  006E14  6EDA               	movwf	fsr2h,c
 12347  006E16  0E20               	movlw	32
 12348  006E18  6EDF               	movwf	indf2,c
 12349  006E1A                     l10556:
 12350                           
 12351                           ; BSR set to: 0
 12352  006E1A  2A20               	incf	___x_arrange_str@i,f,c
 12353  006E1C                     l10558:
 12354  006E1C  0100               	movlb	0	; () banked
 12355  006E1E  5162               	movf	___x_arrange_str@len& (0+255),w,b
 12356  006E20  5C20               	subwf	___x_arrange_str@i,w,c
 12357  006E22  A0D8               	btfss	status,0,c
 12358  006E24  D7E1               	goto	l10552
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;ui.c: 14: }
 12362                           ;ui.c: 15: str[i]='\0';
 12363                           
 12364                           ; BSR set to: 0
 12365  006E26  5020               	movf	___x_arrange_str@i,w,c
 12366  006E28  0D01               	mullw	1
 12367  006E2A  50F3               	movf	prodl,w,c
 12368  006E2C  0100               	movlb	0	; () banked
 12369  006E2E  2560               	addwf	___x_arrange_str@str& (0+255),w,b
 12370  006E30  6ED9               	movwf	fsr2l,c
 12371  006E32  50F4               	movf	prodh,w,c
 12372  006E34  0100               	movlb	0	; () banked
 12373  006E36  2161               	addwfc	(___x_arrange_str@str+1)& (0+255),w,b
 12374  006E38  6EDA               	movwf	fsr2h,c
 12375  006E3A  0E00               	movlw	0
 12376  006E3C  6EDF               	movwf	indf2,c
 12377                           
 12378                           ; BSR set to: 0
 12379  006E3E  0012               	return		;funcret
 12380  006E40                     __end_of___x_arrange_str:
 12381                           	opt stack 0
 12382                           tblptru	equ	0xFF8
 12383                           tblptrh	equ	0xFF7
 12384                           tblptrl	equ	0xFF6
 12385                           tablat	equ	0xFF5
 12386                           prodh	equ	0xFF4
 12387                           prodl	equ	0xFF3
 12388                           intcon	equ	0xFF2
 12389                           indf0	equ	0xFEF
 12390                           postinc0	equ	0xFEE
 12391                           fsr0h	equ	0xFEA
 12392                           fsr0l	equ	0xFE9
 12393                           wreg	equ	0xFE8
 12394                           postdec1	equ	0xFE5
 12395                           plusw1	equ	0xFE3
 12396                           fsr1h	equ	0xFE2
 12397                           fsr1l	equ	0xFE1
 12398                           indf2	equ	0xFDF
 12399                           postinc2	equ	0xFDE
 12400                           postdec2	equ	0xFDD
 12401                           plusw2	equ	0xFDB
 12402                           fsr2h	equ	0xFDA
 12403                           fsr2l	equ	0xFD9
 12404                           status	equ	0xFD8
 12405                           
 12406 ;; *************** function _sample_pr_chip_comm *****************
 12407 ;; Defined at:
 12408 ;;		line 179 in file "src/api/sample.c"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;		None
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;  t16             2   33[BANK0 ] int 
 12413 ;;  ret             1   32[BANK0 ] unsigned char 
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      unsigned char 
 12416 ;; Registers used:
 12417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/0
 12420 ;;		On exit  : 0/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12425 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12426 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12427 ;;Total ram usage:        5 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; Hardware stack levels required when called:    9
 12430 ;; This function calls:
 12431 ;;		___x_sample_fifo
 12432 ;;		_ads1115_read_conversion
 12433 ;;		_ads1115_set_mux
 12434 ;;		_ads1115_start_conversion
 12435 ;;		_delay_ms
 12436 ;; This function is called by:
 12437 ;;		_event_process_rtc
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           	psect	text68
 12442  0041DA                     __ptext68:
 12443                           	opt stack 0
 12444  0041DA                     _sample_pr_chip_comm:
 12445                           	opt stack 19
 12446                           
 12447                           ;sample.c: 181: uint8_t ret=0;
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;incstack = 0
 12451  0041DA  0E00               	movlw	0
 12452  0041DC  0100               	movlb	0	; () banked
 12453  0041DE  6F80               	movwf	sample_pr_chip_comm@ret& (0+255),b
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;sample.c: 182: int16_t t16;
 12457                           ;sample.c: 183: commonSampleTimer++;
 12458  0041E0  2A31               	incf	_commonSampleTimer,f,c	;volatile
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;sample.c: 184: if(commonSampleTimer>=60){
 12462  0041E2  0E3B               	movlw	59
 12463  0041E4  6431               	cpfsgt	_commonSampleTimer,c	;volatile
 12464  0041E6  0012               	return	
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;sample.c: 185: commonSampleTimer=0;
 12468  0041E8  0E00               	movlw	0
 12469  0041EA  6E31               	movwf	_commonSampleTimer,c	;volatile
 12470                           
 12471                           ; BSR set to: 0
 12472                           
 12473                           ; BSR set to: 0
 12474                           
 12475                           ; BSR set to: 0
 12476                           
 12477                           ;sample.c: 186: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while
      +                          (0);;
 12478  0041EC  9893               	bcf	3987,4,c	;volatile
 12479                           
 12480                           ; BSR set to: 0
 12481                           
 12482                           ; BSR set to: 0
 12483                           
 12484                           ; BSR set to: 0
 12485  0041EE  888A               	bsf	3978,4,c	;volatile
 12486                           
 12487                           ; BSR set to: 0
 12488                           
 12489                           ; BSR set to: 0
 12490                           
 12491                           ; BSR set to: 0
 12492                           
 12493                           ;sample.c: 187: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC |= (1<<5);}while(0);; }while
      +                          (0);;
 12494                           
 12495                           ; BSR set to: 0
 12496                           
 12497                           ; BSR set to: 0
 12498  0041F0  9A94               	bcf	3988,5,c	;volatile
 12499                           
 12500                           ; BSR set to: 0
 12501                           
 12502                           ; BSR set to: 0
 12503                           
 12504                           ; BSR set to: 0
 12505  0041F2  8A8B               	bsf	3979,5,c	;volatile
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;sample.c: 188: delay_ms(20);
 12509                           
 12510                           ; BSR set to: 0
 12511                           
 12512                           ; BSR set to: 0
 12513  0041F4  0E00               	movlw	0
 12514  0041F6  0100               	movlb	0	; () banked
 12515  0041F8  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 12516  0041FA  0E14               	movlw	20
 12517  0041FC  6F64               	movwf	delay_ms@dly& (0+255),b
 12518  0041FE  ECD6  F03B         	call	_delay_ms	;wreg free
 12519                           
 12520                           ;sample.c: 189: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_SINGLE_0);
 12521  004202  C021  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 12522  004206  C022  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 12523  00420A  0E04               	movlw	4
 12524  00420C  0100               	movlb	0	; () banked
 12525  00420E  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 12526  004210  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
 12527                           
 12528                           ;sample.c: 190: ads1115_start_conversion(pAds1115PrObj);
 12529  004214  C021  F067         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 12530  004218  C022  F068         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 12531  00421C  ECC1  F03B         	call	_ads1115_start_conversion	;wreg free
 12532                           
 12533                           ;sample.c: 191: delay_ms(20);
 12534  004220  0E00               	movlw	0
 12535  004222  0100               	movlb	0	; () banked
 12536  004224  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 12537  004226  0E14               	movlw	20
 12538  004228  6F64               	movwf	delay_ms@dly& (0+255),b
 12539  00422A  ECD6  F03B         	call	_delay_ms	;wreg free
 12540                           
 12541                           ;sample.c: 192: t16=ads1115_read_conversion(pAds1115PrObj);
 12542  00422E  C021  F06A         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 12543  004232  C022  F06B         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 12544  004236  ECD4  F038         	call	_ads1115_read_conversion	;wreg free
 12545  00423A  C06A  F081         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 12546  00423E  C06B  F082         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 12547                           
 12548                           ;sample.c: 193: adc_exPt100=__x_sample_fifo(sampBufPt100ExA,t16,sizeof(sampBufPt100ExA)/
      +                          sizeof(int16_t));
 12549  004242  0EE2               	movlw	low _sampBufPt100ExA
 12550  004244  0100               	movlb	0	; () banked
 12551  004246  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 12552  004248  0E01               	movlw	high _sampBufPt100ExA
 12553  00424A  0100               	movlb	0	; () banked
 12554  00424C  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 12555  00424E  C081  F070         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 12556  004252  C082  F071         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 12557  004256  0E04               	movlw	4
 12558  004258  0100               	movlb	0	; () banked
 12559  00425A  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 12560  00425C  EC80  F022         	call	___x_sample_fifo	;wreg free
 12561  004260  C06E  F027         	movff	?___x_sample_fifo,_adc_exPt100	;volatile
 12562  004264  C06F  F028         	movff	?___x_sample_fifo+1,_adc_exPt100+1	;volatile
 12563                           
 12564                           ;sample.c: 196: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_SINGLE_0);
 12565  004268  C021  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 12566  00426C  C022  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 12567  004270  0E04               	movlw	4
 12568  004272  0100               	movlb	0	; () banked
 12569  004274  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 12570  004276  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
 12571                           
 12572                           ;sample.c: 197: ads1115_start_conversion(pAds1115PrObj);
 12573  00427A  C021  F067         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 12574  00427E  C022  F068         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 12575  004282  ECC1  F03B         	call	_ads1115_start_conversion	;wreg free
 12576                           
 12577                           ;sample.c: 198: delay_ms(20);
 12578  004286  0E00               	movlw	0
 12579  004288  0100               	movlb	0	; () banked
 12580  00428A  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 12581  00428C  0E14               	movlw	20
 12582  00428E  6F64               	movwf	delay_ms@dly& (0+255),b
 12583  004290  ECD6  F03B         	call	_delay_ms	;wreg free
 12584                           
 12585                           ;sample.c: 199: t16=ads1115_read_conversion(pAds1115PrObj);
 12586  004294  C021  F06A         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 12587  004298  C022  F06B         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 12588  00429C  ECD4  F038         	call	_ads1115_read_conversion	;wreg free
 12589  0042A0  C06A  F081         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 12590  0042A4  C06B  F082         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 12591                           
 12592                           ;sample.c: 200: t16=__x_sample_fifo(sampBufPt100ExB,t16,sizeof(sampBufPt100ExB)/sizeof(i
      +                          nt16_t));
 12593  0042A8  0EDA               	movlw	low _sampBufPt100ExB
 12594  0042AA  0100               	movlb	0	; () banked
 12595  0042AC  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 12596  0042AE  0E01               	movlw	high _sampBufPt100ExB
 12597  0042B0  0100               	movlb	0	; () banked
 12598  0042B2  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 12599  0042B4  C081  F070         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 12600  0042B8  C082  F071         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 12601  0042BC  0E04               	movlw	4
 12602  0042BE  0100               	movlb	0	; () banked
 12603  0042C0  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 12604  0042C2  EC80  F022         	call	___x_sample_fifo	;wreg free
 12605  0042C6  C06E  F081         	movff	?___x_sample_fifo,sample_pr_chip_comm@t16
 12606  0042CA  C06F  F082         	movff	?___x_sample_fifo+1,sample_pr_chip_comm@t16+1
 12607                           
 12608                           ;sample.c: 201: adc_exPt100=adc_exPt100-t16-t16;
 12609  0042CE  C081  F07E         	movff	sample_pr_chip_comm@t16,??_sample_pr_chip_comm
 12610  0042D2  C082  F07F         	movff	sample_pr_chip_comm@t16+1,??_sample_pr_chip_comm+1
 12611  0042D6  90D8               	bcf	status,0,c
 12612  0042D8  0100               	movlb	0	; () banked
 12613  0042DA  377E               	rlcf	??_sample_pr_chip_comm& (0+255),f,b
 12614  0042DC  377F               	rlcf	(??_sample_pr_chip_comm+1)& (0+255),f,b
 12615  0042DE  0100               	movlb	0	; () banked
 12616  0042E0  1F7E               	comf	??_sample_pr_chip_comm& (0+255),f,b
 12617  0042E2  1F7F               	comf	(??_sample_pr_chip_comm+1)& (0+255),f,b
 12618  0042E4  4B7E               	infsnz	??_sample_pr_chip_comm& (0+255),f,b
 12619  0042E6  2B7F               	incf	(??_sample_pr_chip_comm+1)& (0+255),f,b
 12620  0042E8  5027               	movf	_adc_exPt100,w,c	;volatile
 12621  0042EA  0100               	movlb	0	; () banked
 12622  0042EC  257E               	addwf	??_sample_pr_chip_comm& (0+255),w,b
 12623  0042EE  6E27               	movwf	_adc_exPt100,c	;volatile
 12624  0042F0  5028               	movf	_adc_exPt100+1,w,c	;volatile
 12625  0042F2  0100               	movlb	0	; () banked
 12626  0042F4  217F               	addwfc	(??_sample_pr_chip_comm+1)& (0+255),w,b
 12627  0042F6  6E28               	movwf	_adc_exPt100+1,c	;volatile
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;sample.c: 202: ex_pt100SampleUpdate=1;
 12631  0042F8  0E01               	movlw	1
 12632  0042FA  0101               	movlb	1	; () banked
 12633  0042FC  6F89               	movwf	_ex_pt100SampleUpdate& (0+255),b
 12634                           
 12635                           ; BSR set to: 1
 12636                           ;sample.c: 204: ads1115_set_mux(pAds1115PrObj,ADS1X1X_MUX_DIFF_2_3);
 12637  0042FE  C021  F060         	movff	_pAds1115PrObj,ads1115_set_mux@pAds1115
 12638  004302  C022  F061         	movff	_pAds1115PrObj+1,ads1115_set_mux@pAds1115+1
 12639  004306  0E03               	movlw	3
 12640  004308  0100               	movlb	0	; () banked
 12641  00430A  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 12642  00430C  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
 12643                           
 12644                           ;sample.c: 205: ads1115_start_conversion(pAds1115PrObj);
 12645  004310  C021  F067         	movff	_pAds1115PrObj,ads1115_start_conversion@pAds1115
 12646  004314  C022  F068         	movff	_pAds1115PrObj+1,ads1115_start_conversion@pAds1115+1
 12647  004318  ECC1  F03B         	call	_ads1115_start_conversion	;wreg free
 12648                           
 12649                           ;sample.c: 206: delay_ms(20);
 12650  00431C  0E00               	movlw	0
 12651  00431E  0100               	movlb	0	; () banked
 12652  004320  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 12653  004322  0E14               	movlw	20
 12654  004324  6F64               	movwf	delay_ms@dly& (0+255),b
 12655  004326  ECD6  F03B         	call	_delay_ms	;wreg free
 12656                           
 12657                           ;sample.c: 207: t16=ads1115_read_conversion(pAds1115PrObj);
 12658  00432A  C021  F06A         	movff	_pAds1115PrObj,ads1115_read_conversion@pAds1115
 12659  00432E  C022  F06B         	movff	_pAds1115PrObj+1,ads1115_read_conversion@pAds1115+1
 12660  004332  ECD4  F038         	call	_ads1115_read_conversion	;wreg free
 12661  004336  C06A  F081         	movff	?_ads1115_read_conversion,sample_pr_chip_comm@t16
 12662  00433A  C06B  F082         	movff	?_ads1115_read_conversion+1,sample_pr_chip_comm@t16+1
 12663                           
 12664                           ;sample.c: 208: adc_pressure=__x_sample_fifo(sampBufPr,t16,sizeof(sampBufPr)/sizeof(int1
      +                          6_t));
 12665  00433E  0ED2               	movlw	low _sampBufPr
 12666  004340  0100               	movlb	0	; () banked
 12667  004342  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 12668  004344  0E01               	movlw	high _sampBufPr
 12669  004346  0100               	movlb	0	; () banked
 12670  004348  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 12671  00434A  C081  F070         	movff	sample_pr_chip_comm@t16,___x_sample_fifo@x
 12672  00434E  C082  F071         	movff	sample_pr_chip_comm@t16+1,___x_sample_fifo@x+1
 12673  004352  0E04               	movlw	4
 12674  004354  0100               	movlb	0	; () banked
 12675  004356  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 12676  004358  EC80  F022         	call	___x_sample_fifo	;wreg free
 12677  00435C  C06E  F182         	movff	?___x_sample_fifo,_adc_pressure	;volatile
 12678  004360  C06F  F183         	movff	?___x_sample_fifo+1,_adc_pressure+1	;volatile
 12679                           
 12680                           ;sample.c: 209: prSampleUpdate=1;
 12681  004364  0E01               	movlw	1
 12682  004366  0101               	movlb	1	; () banked
 12683  004368  6F88               	movwf	_prSampleUpdate& (0+255),b
 12684                           
 12685                           ; BSR set to: 1
 12686                           
 12687                           ; BSR set to: 1
 12688                           
 12689                           ; BSR set to: 1
 12690                           
 12691                           ;sample.c: 211: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 12692  00436A  9A94               	bcf	3988,5,c	;volatile
 12693                           
 12694                           ; BSR set to: 1
 12695                           
 12696                           ; BSR set to: 1
 12697                           
 12698                           ; BSR set to: 1
 12699  00436C  9A8B               	bcf	3979,5,c	;volatile
 12700                           
 12701                           ; BSR set to: 1
 12702                           ;sample.c: 213: return 1;
 12703                           ;	Return value of _sample_pr_chip_comm is never used
 12704                           
 12705                           ; BSR set to: 1
 12706                           
 12707                           ; BSR set to: 1
 12708  00436E  0012               	return	
 12709  004370                     __end_of_sample_pr_chip_comm:
 12710                           	opt stack 0
 12711                           tblptru	equ	0xFF8
 12712                           tblptrh	equ	0xFF7
 12713                           tblptrl	equ	0xFF6
 12714                           tablat	equ	0xFF5
 12715                           prodh	equ	0xFF4
 12716                           prodl	equ	0xFF3
 12717                           intcon	equ	0xFF2
 12718                           indf0	equ	0xFEF
 12719                           postinc0	equ	0xFEE
 12720                           fsr0h	equ	0xFEA
 12721                           fsr0l	equ	0xFE9
 12722                           wreg	equ	0xFE8
 12723                           postdec1	equ	0xFE5
 12724                           plusw1	equ	0xFE3
 12725                           fsr1h	equ	0xFE2
 12726                           fsr1l	equ	0xFE1
 12727                           indf2	equ	0xFDF
 12728                           postinc2	equ	0xFDE
 12729                           postdec2	equ	0xFDD
 12730                           plusw2	equ	0xFDB
 12731                           fsr2h	equ	0xFDA
 12732                           fsr2l	equ	0xFD9
 12733                           status	equ	0xFD8
 12734                           
 12735 ;; *************** function _sample_in_soc_adc_ch *****************
 12736 ;; Defined at:
 12737 ;;		line 218 in file "src/api/sample.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;		None
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  ret             4   15[BANK0 ] unsigned long 
 12742 ;;  t16             2   13[BANK0 ] unsigned int 
 12743 ;;  i               1   19[BANK0 ] unsigned char 
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  1    wreg      unsigned char 
 12746 ;; Registers used:
 12747 ;;		wreg, status,2, status,0, cstack
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12755 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12756 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12757 ;;Total ram usage:       11 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    6
 12760 ;; This function calls:
 12761 ;;		_in_adc_init
 12762 ;;		_in_adc_start_and_read
 12763 ;; This function is called by:
 12764 ;;		_event_process_rtc
 12765 ;; This function uses a non-reentrant model
 12766 ;;
 12767                           
 12768                           	psect	text69
 12769  0032C8                     __ptext69:
 12770                           	opt stack 0
 12771  0032C8                     _sample_in_soc_adc_ch:
 12772                           	opt stack 22
 12773                           
 12774                           ;sample.c: 220: uint8_t i;
 12775                           ;sample.c: 221: uint16_t t16;
 12776                           ;sample.c: 222: uint32_t ret=0;
 12777                           
 12778                           ;incstack = 0
 12779  0032C8  0E00               	movlw	0
 12780  0032CA  0100               	movlb	0	; () banked
 12781  0032CC  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12782  0032CE  0E00               	movlw	0
 12783  0032D0  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12784  0032D2  0E00               	movlw	0
 12785  0032D4  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12786  0032D6  0E00               	movlw	0
 12787  0032D8  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;sample.c: 223: inSocSampleTimer++;
 12791  0032DA  2A30               	incf	_inSocSampleTimer,f,c	;volatile
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;sample.c: 224: if(inSocSampleTimer>=60){
 12795  0032DC  0E3B               	movlw	59
 12796  0032DE  6430               	cpfsgt	_inSocSampleTimer,c	;volatile
 12797  0032E0  0012               	return	
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;sample.c: 225: inSocSampleTimer=0;
 12801  0032E2  0E00               	movlw	0
 12802  0032E4  6E30               	movwf	_inSocSampleTimer,c	;volatile
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;sample.c: 227: in_adc_init();
 12806  0032E6  ECFB  F03B         	call	_in_adc_init	;wreg free
 12807                           
 12808                           ;sample.c: 228: ret=0;
 12809  0032EA  0E00               	movlw	0
 12810  0032EC  0100               	movlb	0	; () banked
 12811  0032EE  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12812  0032F0  0E00               	movlw	0
 12813  0032F2  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12814  0032F4  0E00               	movlw	0
 12815  0032F6  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12816  0032F8  0E00               	movlw	0
 12817  0032FA  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;sample.c: 229: for(i=0;i<4;i++){
 12821  0032FC  0E00               	movlw	0
 12822  0032FE  0100               	movlb	0	; () banked
 12823  003300  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 12824  003302                     l12590:
 12825                           
 12826                           ; BSR set to: 0
 12827  003302  0E03               	movlw	3
 12828  003304  0100               	movlb	0	; () banked
 12829  003306  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 12830  003308  D001               	goto	l12594
 12831  00330A  D018               	goto	l12602
 12832  00330C                     l12594:
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;sample.c: 230: t16=in_adc_start_and_read(2);
 12836  00330C  0E02               	movlw	2
 12837  00330E  ECC4  F035         	call	_in_adc_start_and_read
 12838  003312  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 12839  003316  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 12840                           
 12841                           ;sample.c: 231: ret+=t16;
 12842  00331A  0100               	movlb	0	; () banked
 12843  00331C  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 12844  00331E  0100               	movlb	0	; () banked
 12845  003320  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 12846  003322  0100               	movlb	0	; () banked
 12847  003324  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 12848  003326  0100               	movlb	0	; () banked
 12849  003328  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 12850  00332A  0E00               	movlw	0
 12851  00332C  0100               	movlb	0	; () banked
 12852  00332E  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 12853  003330  0E00               	movlw	0
 12854  003332  0100               	movlb	0	; () banked
 12855  003334  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 12856                           
 12857                           ; BSR set to: 0
 12858  003336  0100               	movlb	0	; () banked
 12859  003338  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 12860  00333A  D7E3               	goto	l12590
 12861  00333C                     l12602:
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;sample.c: 232: }
 12865                           ;sample.c: 233: adc_iPrEx[0]=(uint16_t)(ret/4);
 12866  00333C  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 12867  003340  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 12868  003344  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 12869  003348  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 12870  00334C  0E03               	movlw	3
 12871  00334E  D006               	goto	u11450
 12872  003350                     u11455:
 12873  003350  0100               	movlb	0	; () banked
 12874  003352  90D8               	bcf	status,0,c
 12875  003354  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 12876  003356  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 12877  003358  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 12878  00335A  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 12879  00335C                     u11450:
 12880  00335C  2EE8               	decfsz	wreg,f,c
 12881  00335E  D7F8               	goto	u11455
 12882  003360  C069  F16A         	movff	??_sample_in_soc_adc_ch,_adc_iPrEx	;volatile
 12883  003364  C06A  F16B         	movff	??_sample_in_soc_adc_ch+1,_adc_iPrEx+1	;volatile
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;sample.c: 236: ret=0;
 12887  003368  0E00               	movlw	0
 12888  00336A  0100               	movlb	0	; () banked
 12889  00336C  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12890  00336E  0E00               	movlw	0
 12891  003370  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12892  003372  0E00               	movlw	0
 12893  003374  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12894  003376  0E00               	movlw	0
 12895  003378  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;sample.c: 237: for(i=0;i<4;i++){
 12899  00337A  0E00               	movlw	0
 12900  00337C  0100               	movlb	0	; () banked
 12901  00337E  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 12902  003380  0E03               	movlw	3
 12903  003382  0100               	movlb	0	; () banked
 12904  003384  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 12905  003386  D001               	goto	l12610
 12906  003388  D018               	goto	l12618
 12907  00338A                     l12610:
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;sample.c: 238: t16=in_adc_start_and_read(1);
 12911  00338A  0E01               	movlw	1
 12912  00338C  ECC4  F035         	call	_in_adc_start_and_read
 12913  003390  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 12914  003394  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 12915                           
 12916                           ;sample.c: 239: ret+=t16;
 12917  003398  0100               	movlb	0	; () banked
 12918  00339A  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 12919  00339C  0100               	movlb	0	; () banked
 12920  00339E  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 12921  0033A0  0100               	movlb	0	; () banked
 12922  0033A2  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 12923  0033A4  0100               	movlb	0	; () banked
 12924  0033A6  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 12925  0033A8  0E00               	movlw	0
 12926  0033AA  0100               	movlb	0	; () banked
 12927  0033AC  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 12928  0033AE  0E00               	movlw	0
 12929  0033B0  0100               	movlb	0	; () banked
 12930  0033B2  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 12931                           
 12932                           ; BSR set to: 0
 12933  0033B4  0100               	movlb	0	; () banked
 12934  0033B6  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 12935  0033B8  D7E3               	goto	L3
 12936  0033BA                     l12618:
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;sample.c: 240: }
 12940                           ;sample.c: 241: adc_iPrEx[1]=(uint16_t)(ret/4);
 12941  0033BA  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 12942  0033BE  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 12943  0033C2  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 12944  0033C6  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 12945  0033CA  0E03               	movlw	3
 12946  0033CC  D006               	goto	u11480
 12947  0033CE                     u11485:
 12948  0033CE  0100               	movlb	0	; () banked
 12949  0033D0  90D8               	bcf	status,0,c
 12950  0033D2  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 12951  0033D4  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 12952  0033D6  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 12953  0033D8  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 12954  0033DA                     u11480:
 12955  0033DA  2EE8               	decfsz	wreg,f,c
 12956  0033DC  D7F8               	goto	u11485
 12957  0033DE  C069  F16C         	movff	??_sample_in_soc_adc_ch,_adc_iPrEx+2	;volatile
 12958  0033E2  C06A  F16D         	movff	??_sample_in_soc_adc_ch+1,_adc_iPrEx+3	;volatile
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;sample.c: 243: ret=0;
 12962  0033E6  0E00               	movlw	0
 12963  0033E8  0100               	movlb	0	; () banked
 12964  0033EA  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 12965  0033EC  0E00               	movlw	0
 12966  0033EE  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 12967  0033F0  0E00               	movlw	0
 12968  0033F2  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 12969  0033F4  0E00               	movlw	0
 12970  0033F6  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;sample.c: 244: for(i=0;i<4;i++){
 12974  0033F8  0E00               	movlw	0
 12975  0033FA  0100               	movlb	0	; () banked
 12976  0033FC  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 12977  0033FE  0E03               	movlw	3
 12978  003400  0100               	movlb	0	; () banked
 12979  003402  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 12980  003404  D001               	goto	l12626
 12981  003406  D018               	goto	l12634
 12982  003408                     l12626:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;sample.c: 245: t16=in_adc_start_and_read(0);
 12986  003408  0E00               	movlw	0
 12987  00340A  ECC4  F035         	call	_in_adc_start_and_read
 12988  00340E  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 12989  003412  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 12990                           
 12991                           ;sample.c: 246: ret+=t16;
 12992  003416  0100               	movlb	0	; () banked
 12993  003418  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 12994  00341A  0100               	movlb	0	; () banked
 12995  00341C  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 12996  00341E  0100               	movlb	0	; () banked
 12997  003420  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 12998  003422  0100               	movlb	0	; () banked
 12999  003424  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 13000  003426  0E00               	movlw	0
 13001  003428  0100               	movlb	0	; () banked
 13002  00342A  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 13003  00342C  0E00               	movlw	0
 13004  00342E  0100               	movlb	0	; () banked
 13005  003430  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 13006                           
 13007                           ; BSR set to: 0
 13008  003432  0100               	movlb	0	; () banked
 13009  003434  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 13010  003436  D7E3               	goto	L4
 13011  003438                     l12634:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;sample.c: 247: }
 13015                           ;sample.c: 248: sampBufBatInSoc=(uint16_t)(ret/4);
 13016  003438  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 13017  00343C  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 13018  003440  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 13019  003444  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 13020  003448  0E03               	movlw	3
 13021  00344A  D006               	goto	u11510
 13022  00344C                     u11515:
 13023  00344C  0100               	movlb	0	; () banked
 13024  00344E  90D8               	bcf	status,0,c
 13025  003450  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 13026  003452  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 13027  003454  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 13028  003456  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 13029  003458                     u11510:
 13030  003458  2EE8               	decfsz	wreg,f,c
 13031  00345A  D7F8               	goto	u11515
 13032  00345C  C069  F174         	movff	??_sample_in_soc_adc_ch,_sampBufBatInSoc
 13033  003460  C06A  F175         	movff	??_sample_in_soc_adc_ch+1,_sampBufBatInSoc+1
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;sample.c: 250: ret=0;
 13037  003464  0E00               	movlw	0
 13038  003466  0100               	movlb	0	; () banked
 13039  003468  6F6F               	movwf	sample_in_soc_adc_ch@ret& (0+255),b
 13040  00346A  0E00               	movlw	0
 13041  00346C  6F70               	movwf	(sample_in_soc_adc_ch@ret+1)& (0+255),b
 13042  00346E  0E00               	movlw	0
 13043  003470  6F71               	movwf	(sample_in_soc_adc_ch@ret+2)& (0+255),b
 13044  003472  0E00               	movlw	0
 13045  003474  6F72               	movwf	(sample_in_soc_adc_ch@ret+3)& (0+255),b
 13046                           
 13047                           ; BSR set to: 0
 13048                           ;sample.c: 251: for(i=0;i<4;i++){
 13049  003476  0E00               	movlw	0
 13050  003478  0100               	movlb	0	; () banked
 13051  00347A  6F73               	movwf	sample_in_soc_adc_ch@i& (0+255),b
 13052  00347C  0E03               	movlw	3
 13053  00347E  0100               	movlb	0	; () banked
 13054  003480  6573               	cpfsgt	sample_in_soc_adc_ch@i& (0+255),b
 13055  003482  D001               	goto	l12642
 13056  003484  D018               	goto	l12650
 13057  003486                     l12642:
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;sample.c: 252: t16=in_adc_start_and_read(3);
 13061  003486  0E03               	movlw	3
 13062  003488  ECC4  F035         	call	_in_adc_start_and_read
 13063  00348C  C064  F06D         	movff	?_in_adc_start_and_read,sample_in_soc_adc_ch@t16
 13064  003490  C065  F06E         	movff	?_in_adc_start_and_read+1,sample_in_soc_adc_ch@t16+1
 13065                           
 13066                           ;sample.c: 253: ret+=t16;
 13067  003494  0100               	movlb	0	; () banked
 13068  003496  516D               	movf	sample_in_soc_adc_ch@t16& (0+255),w,b
 13069  003498  0100               	movlb	0	; () banked
 13070  00349A  276F               	addwf	sample_in_soc_adc_ch@ret& (0+255),f,b
 13071  00349C  0100               	movlb	0	; () banked
 13072  00349E  516E               	movf	(sample_in_soc_adc_ch@t16+1)& (0+255),w,b
 13073  0034A0  0100               	movlb	0	; () banked
 13074  0034A2  2370               	addwfc	(sample_in_soc_adc_ch@ret+1)& (0+255),f,b
 13075  0034A4  0E00               	movlw	0
 13076  0034A6  0100               	movlb	0	; () banked
 13077  0034A8  2371               	addwfc	(sample_in_soc_adc_ch@ret+2)& (0+255),f,b
 13078  0034AA  0E00               	movlw	0
 13079  0034AC  0100               	movlb	0	; () banked
 13080  0034AE  2372               	addwfc	(sample_in_soc_adc_ch@ret+3)& (0+255),f,b
 13081                           
 13082                           ; BSR set to: 0
 13083  0034B0  0100               	movlb	0	; () banked
 13084  0034B2  2B73               	incf	sample_in_soc_adc_ch@i& (0+255),f,b
 13085  0034B4  D7E3               	goto	L5
 13086  0034B6                     l12650:
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;sample.c: 254: }
 13090                           ;sample.c: 255: sampBufRefInSoc=(uint16_t)(ret/4);
 13091  0034B6  C06F  F069         	movff	sample_in_soc_adc_ch@ret,??_sample_in_soc_adc_ch
 13092  0034BA  C070  F06A         	movff	sample_in_soc_adc_ch@ret+1,??_sample_in_soc_adc_ch+1
 13093  0034BE  C071  F06B         	movff	sample_in_soc_adc_ch@ret+2,??_sample_in_soc_adc_ch+2
 13094  0034C2  C072  F06C         	movff	sample_in_soc_adc_ch@ret+3,??_sample_in_soc_adc_ch+3
 13095  0034C6  0E03               	movlw	3
 13096  0034C8  D006               	goto	u11540
 13097  0034CA                     u11545:
 13098  0034CA  0100               	movlb	0	; () banked
 13099  0034CC  90D8               	bcf	status,0,c
 13100  0034CE  336C               	rrcf	(??_sample_in_soc_adc_ch+3)& (0+255),f,b
 13101  0034D0  336B               	rrcf	(??_sample_in_soc_adc_ch+2)& (0+255),f,b
 13102  0034D2  336A               	rrcf	(??_sample_in_soc_adc_ch+1)& (0+255),f,b
 13103  0034D4  3369               	rrcf	??_sample_in_soc_adc_ch& (0+255),f,b
 13104  0034D6                     u11540:
 13105  0034D6  2EE8               	decfsz	wreg,f,c
 13106  0034D8  D7F8               	goto	u11545
 13107  0034DA  C069  F172         	movff	??_sample_in_soc_adc_ch,_sampBufRefInSoc
 13108  0034DE  C06A  F173         	movff	??_sample_in_soc_adc_ch+1,_sampBufRefInSoc+1
 13109                           
 13110                           ; BSR set to: 0
 13111                           ;sample.c: 256: inSocAdcSampleUpdate=1;
 13112  0034E2  0E01               	movlw	1
 13113  0034E4  0101               	movlb	1	; () banked
 13114  0034E6  6F87               	movwf	_inSocAdcSampleUpdate& (0+255),b
 13115                           
 13116                           ; BSR set to: 1
 13117                           ;sample.c: 257: return 1;
 13118                           ;	Return value of _sample_in_soc_adc_ch is never used
 13119  0034E8  0012               	return	
 13120  0034EA                     __end_of_sample_in_soc_adc_ch:
 13121                           	opt stack 0
 13122                           tblptru	equ	0xFF8
 13123                           tblptrh	equ	0xFF7
 13124                           tblptrl	equ	0xFF6
 13125                           tablat	equ	0xFF5
 13126                           prodh	equ	0xFF4
 13127                           prodl	equ	0xFF3
 13128                           intcon	equ	0xFF2
 13129                           indf0	equ	0xFEF
 13130                           postinc0	equ	0xFEE
 13131                           fsr0h	equ	0xFEA
 13132                           fsr0l	equ	0xFE9
 13133                           wreg	equ	0xFE8
 13134                           postdec1	equ	0xFE5
 13135                           plusw1	equ	0xFE3
 13136                           fsr1h	equ	0xFE2
 13137                           fsr1l	equ	0xFE1
 13138                           indf2	equ	0xFDF
 13139                           postinc2	equ	0xFDE
 13140                           postdec2	equ	0xFDD
 13141                           plusw2	equ	0xFDB
 13142                           fsr2h	equ	0xFDA
 13143                           fsr2l	equ	0xFD9
 13144                           status	equ	0xFD8
 13145                           
 13146 ;; *************** function _in_adc_start_and_read *****************
 13147 ;; Defined at:
 13148 ;;		line 21 in file "src/driver/in_adc.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;  ch              1    wreg     unsigned char 
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;  ch              1    6[BANK0 ] unsigned char 
 13153 ;;  ret             2    7[BANK0 ] unsigned int 
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  2    4[BANK0 ] unsigned int 
 13156 ;; Registers used:
 13157 ;;		wreg, status,2, status,0, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13164 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13167 ;;Total ram usage:        6 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:    5
 13170 ;; This function calls:
 13171 ;;		_delay_us
 13172 ;; This function is called by:
 13173 ;;		_sample_in_soc_adc_ch
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text70
 13178  006B88                     __ptext70:
 13179                           	opt stack 0
 13180  006B88                     _in_adc_start_and_read:
 13181                           	opt stack 22
 13182                           
 13183                           ;incstack = 0
 13184                           ;in_adc_start_and_read@ch stored from wreg
 13185  006B88  0100               	movlb	0	; () banked
 13186  006B8A  6F66               	movwf	in_adc_start_and_read@ch& (0+255),b
 13187                           
 13188                           ;in_adc.c: 23: uint16_t ret=0;
 13189  006B8C  0E00               	movlw	0
 13190  006B8E  0100               	movlb	0	; () banked
 13191  006B90  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 13192  006B92  0E00               	movlw	0
 13193  006B94  6F67               	movwf	in_adc_start_and_read@ret& (0+255),b
 13194                           
 13195                           ; BSR set to: 0
 13196                           
 13197                           ; BSR set to: 0
 13198                           
 13199                           ;in_adc.c: 24: do{ADCON0bits.ADON=1;}while(0);;
 13200  006B96  80C2               	bsf	4034,0,c	;volatile
 13201                           
 13202                           ; BSR set to: 0
 13203                           
 13204                           ; BSR set to: 0
 13205                           
 13206                           ;in_adc.c: 25: do{ADCON0bits.CHS=ch;}while(0);;
 13207                           
 13208                           ; BSR set to: 0
 13209  006B98  C066  F020         	movff	in_adc_start_and_read@ch,??_in_adc_start_and_read
 13210  006B9C  4620               	rlncf	??_in_adc_start_and_read,f,c
 13211  006B9E  4620               	rlncf	??_in_adc_start_and_read,f,c
 13212  006BA0  50C2               	movf	4034,w,c	;volatile
 13213  006BA2  1820               	xorwf	??_in_adc_start_and_read,w,c
 13214  006BA4  0BC3               	andlw	-61
 13215  006BA6  1820               	xorwf	??_in_adc_start_and_read,w,c
 13216  006BA8  6EC2               	movwf	4034,c	;volatile
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;in_adc.c: 26: delay_us(2);
 13220                           
 13221                           ; BSR set to: 0
 13222  006BAA  0E00               	movlw	0
 13223  006BAC  0100               	movlb	0	; () banked
 13224  006BAE  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 13225  006BB0  0E02               	movlw	2
 13226  006BB2  6F60               	movwf	delay_us@dly& (0+255),b
 13227  006BB4  EC13  F03A         	call	_delay_us	;wreg free
 13228                           
 13229                           ;in_adc.c: 27: do{ADCON0bits.GO=1;}while(0);;
 13230  006BB8  82C2               	bsf	4034,1,c	;volatile
 13231                           
 13232                           ;in_adc.c: 28: while(ADCON0bits.DONE){__nop();};;
 13233  006BBA  D001               	goto	l1153
 13234  006BBC                     l1154:
 13235  006BBC  F000               	nop	
 13236  006BBE                     l1153:
 13237  006BBE  B2C2               	btfsc	4034,1,c	;volatile
 13238  006BC0  D7FD               	goto	l1154
 13239                           
 13240                           ;in_adc.c: 30: ret=ADRESH;
 13241  006BC2  CFC4 F067          	movff	4036,in_adc_start_and_read@ret	;volatile
 13242  006BC6  0100               	movlb	0	; () banked
 13243  006BC8  6B68               	clrf	(in_adc_start_and_read@ret+1)& (0+255),b
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;in_adc.c: 31: ret<<=8;
 13247  006BCA  0100               	movlb	0	; () banked
 13248  006BCC  5167               	movf	in_adc_start_and_read@ret& (0+255),w,b
 13249  006BCE  6F68               	movwf	(in_adc_start_and_read@ret+1)& (0+255),b
 13250  006BD0  6B67               	clrf	in_adc_start_and_read@ret& (0+255),b
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;in_adc.c: 32: ret |= ADRESL;
 13254  006BD2  50C3               	movf	4035,w,c	;volatile
 13255  006BD4  0100               	movlb	0	; () banked
 13256  006BD6  1367               	iorwf	in_adc_start_and_read@ret& (0+255),f,b
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;in_adc.c: 33: delay_us(2);
 13260  006BD8  0E00               	movlw	0
 13261  006BDA  0100               	movlb	0	; () banked
 13262  006BDC  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 13263  006BDE  0E02               	movlw	2
 13264  006BE0  6F60               	movwf	delay_us@dly& (0+255),b
 13265  006BE2  EC13  F03A         	call	_delay_us	;wreg free
 13266                           
 13267                           ;in_adc.c: 34: do{ADCON0bits.ADON=0;}while(0);;
 13268  006BE6  90C2               	bcf	4034,0,c	;volatile
 13269                           
 13270                           ;in_adc.c: 35: return ret;
 13271  006BE8  C067  F064         	movff	in_adc_start_and_read@ret,?_in_adc_start_and_read
 13272  006BEC  C068  F065         	movff	in_adc_start_and_read@ret+1,?_in_adc_start_and_read+1
 13273  006BF0  0012               	return	
 13274  006BF2                     __end_of_in_adc_start_and_read:
 13275                           	opt stack 0
 13276                           tblptru	equ	0xFF8
 13277                           tblptrh	equ	0xFF7
 13278                           tblptrl	equ	0xFF6
 13279                           tablat	equ	0xFF5
 13280                           prodh	equ	0xFF4
 13281                           prodl	equ	0xFF3
 13282                           intcon	equ	0xFF2
 13283                           indf0	equ	0xFEF
 13284                           postinc0	equ	0xFEE
 13285                           fsr0h	equ	0xFEA
 13286                           fsr0l	equ	0xFE9
 13287                           wreg	equ	0xFE8
 13288                           postdec1	equ	0xFE5
 13289                           plusw1	equ	0xFE3
 13290                           fsr1h	equ	0xFE2
 13291                           fsr1l	equ	0xFE1
 13292                           indf2	equ	0xFDF
 13293                           postinc2	equ	0xFDE
 13294                           postdec2	equ	0xFDD
 13295                           plusw2	equ	0xFDB
 13296                           fsr2h	equ	0xFDA
 13297                           fsr2l	equ	0xFD9
 13298                           status	equ	0xFD8
 13299                           
 13300 ;; *************** function _in_adc_init *****************
 13301 ;; Defined at:
 13302 ;;		line 9 in file "src/driver/in_adc.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, status,2
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;Total ram usage:        0 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; Hardware stack levels required when called:    4
 13323 ;; This function calls:
 13324 ;;		Nothing
 13325 ;; This function is called by:
 13326 ;;		_sample_in_soc_adc_ch
 13327 ;;		_main
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text71
 13332  0077F6                     __ptext71:
 13333                           	opt stack 0
 13334  0077F6                     _in_adc_init:
 13335                           	opt stack 26
 13336                           
 13337                           ;in_adc.c: 11: ADCON1=0b00001101;
 13338                           
 13339                           ;incstack = 0
 13340  0077F6  0E0D               	movlw	13
 13341  0077F8  6EC1               	movwf	4033,c	;volatile
 13342                           
 13343                           ;in_adc.c: 12: ADCON2bits.ADFM=1;
 13344  0077FA  8EC0               	bsf	4032,7,c	;volatile
 13345                           
 13346                           ;in_adc.c: 13: ADCON2bits.ACQT=0x07;
 13347  0077FC  86C0               	bsf	4032,3,c	;volatile
 13348  0077FE  88C0               	bsf	4032,4,c	;volatile
 13349  007800  8AC0               	bsf	4032,5,c	;volatile
 13350                           
 13351                           ;in_adc.c: 14: ADCON2bits.ADCS=0x07;
 13352  007802  80C0               	bsf	4032,0,c	;volatile
 13353  007804  82C0               	bsf	4032,1,c	;volatile
 13354  007806  84C0               	bsf	4032,2,c	;volatile
 13355                           
 13356                           ;in_adc.c: 15: ADCON0bits.ADCAL=1;
 13357  007808  8EC2               	bsf	4034,7,c	;volatile
 13358                           
 13359                           ;in_adc.c: 16: do{ADCON0bits.CHS=3;}while(0);;
 13360  00780A  50C2               	movf	4034,w,c	;volatile
 13361  00780C  0BC3               	andlw	-61
 13362  00780E  090C               	iorlw	12
 13363  007810  6EC2               	movwf	4034,c	;volatile
 13364                           
 13365                           ;in_adc.c: 17: PIR1bits.ADIF=0;
 13366  007812  9C9E               	bcf	3998,6,c	;volatile
 13367                           
 13368                           ;in_adc.c: 18: PIE1bits.ADIE=0;
 13369  007814  9C9D               	bcf	3997,6,c	;volatile
 13370                           
 13371                           ;in_adc.c: 19: IPR1bits.ADIP=0;
 13372  007816  9C9F               	bcf	3999,6,c	;volatile
 13373  007818  0012               	return		;funcret
 13374  00781A                     __end_of_in_adc_init:
 13375                           	opt stack 0
 13376                           tblptru	equ	0xFF8
 13377                           tblptrh	equ	0xFF7
 13378                           tblptrl	equ	0xFF6
 13379                           tablat	equ	0xFF5
 13380                           prodh	equ	0xFF4
 13381                           prodl	equ	0xFF3
 13382                           intcon	equ	0xFF2
 13383                           indf0	equ	0xFEF
 13384                           postinc0	equ	0xFEE
 13385                           fsr0h	equ	0xFEA
 13386                           fsr0l	equ	0xFE9
 13387                           wreg	equ	0xFE8
 13388                           postdec1	equ	0xFE5
 13389                           plusw1	equ	0xFE3
 13390                           fsr1h	equ	0xFE2
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           postinc2	equ	0xFDE
 13394                           postdec2	equ	0xFDD
 13395                           plusw2	equ	0xFDB
 13396                           fsr2h	equ	0xFDA
 13397                           fsr2l	equ	0xFD9
 13398                           status	equ	0xFD8
 13399                           
 13400 ;; *************** function _sample_diff_pr_chip_slow *****************
 13401 ;; Defined at:
 13402 ;;		line 125 in file "src/api/sample.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;		None
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;  t16             2   38[BANK0 ] int 
 13407 ;;  ret             1   37[BANK0 ] unsigned char 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  1    wreg      unsigned char 
 13410 ;; Registers used:
 13411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/0
 13414 ;;		On exit  : 0/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13420 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13421 ;;Total ram usage:        3 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    9
 13424 ;; This function calls:
 13425 ;;		___x_sample_fifo
 13426 ;;		_ads1115_read_conversion
 13427 ;;		_ads1115_set_mux
 13428 ;;		_ads1115_start_conversion
 13429 ;;		_delay_ms
 13430 ;;		_sample_diff_pr_fliter
 13431 ;; This function is called by:
 13432 ;;		_event_process_rtc
 13433 ;; This function uses a non-reentrant model
 13434 ;;
 13435                           
 13436                           	psect	text72
 13437  004A94                     __ptext72:
 13438                           	opt stack 0
 13439  004A94                     _sample_diff_pr_chip_slow:
 13440                           	opt stack 19
 13441                           
 13442                           ;sample.c: 127: uint8_t ret=0;
 13443                           
 13444                           ;incstack = 0
 13445  004A94  0E00               	movlw	0
 13446  004A96  0100               	movlb	0	; () banked
 13447  004A98  6F85               	movwf	sample_diff_pr_chip_slow@ret& (0+255),b
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;sample.c: 128: int16_t t16;
 13451                           ;sample.c: 129: slowSampleTimer++;
 13452  004A9A  2A32               	incf	_slowSampleTimer,f,c	;volatile
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;sample.c: 130: if(slowSampleTimer>=60){
 13456  004A9C  0E3B               	movlw	59
 13457  004A9E  6432               	cpfsgt	_slowSampleTimer,c	;volatile
 13458  004AA0  0012               	return	
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;sample.c: 131: slowSampleTimer=0;
 13462  004AA2  0E00               	movlw	0
 13463  004AA4  6E32               	movwf	_slowSampleTimer,c	;volatile
 13464                           
 13465                           ; BSR set to: 0
 13466                           
 13467                           ; BSR set to: 0
 13468                           
 13469                           ; BSR set to: 0
 13470                           
 13471                           ;sample.c: 132: do{ do{TRISB &= ~(1<<4);}while(0);; do{LATB |= (1<<4);}while(0);; }while
      +                          (0);;
 13472  004AA6  9893               	bcf	3987,4,c	;volatile
 13473                           
 13474                           ; BSR set to: 0
 13475                           
 13476                           ; BSR set to: 0
 13477                           
 13478                           ; BSR set to: 0
 13479  004AA8  888A               	bsf	3978,4,c	;volatile
 13480                           
 13481                           ; BSR set to: 0
 13482                           
 13483                           ; BSR set to: 0
 13484                           
 13485                           ; BSR set to: 0
 13486                           
 13487                           ;sample.c: 133: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC |= (1<<5);}while(0);; }while
      +                          (0);;
 13488                           
 13489                           ; BSR set to: 0
 13490                           
 13491                           ; BSR set to: 0
 13492  004AAA  9A94               	bcf	3988,5,c	;volatile
 13493                           
 13494                           ; BSR set to: 0
 13495                           
 13496                           ; BSR set to: 0
 13497                           
 13498                           ; BSR set to: 0
 13499  004AAC  8A8B               	bsf	3979,5,c	;volatile
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;sample.c: 134: delay_ms(20);
 13503                           
 13504                           ; BSR set to: 0
 13505                           
 13506                           ; BSR set to: 0
 13507  004AAE  0E00               	movlw	0
 13508  004AB0  0100               	movlb	0	; () banked
 13509  004AB2  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 13510  004AB4  0E14               	movlw	20
 13511  004AB6  6F64               	movwf	delay_ms@dly& (0+255),b
 13512  004AB8  ECD6  F03B         	call	_delay_ms	;wreg free
 13513                           
 13514                           ;sample.c: 135: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_0_1);
 13515  004ABC  C023  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 13516  004AC0  C024  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 13517  004AC4  0E00               	movlw	0
 13518  004AC6  0100               	movlb	0	; () banked
 13519  004AC8  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 13520  004ACA  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
 13521                           
 13522                           ;sample.c: 136: ads1115_start_conversion(pAds1115DiffPrObj);
 13523  004ACE  C023  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 13524  004AD2  C024  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 13525  004AD6  ECC1  F03B         	call	_ads1115_start_conversion	;wreg free
 13526                           
 13527                           ;sample.c: 137: delay_ms(20);
 13528  004ADA  0E00               	movlw	0
 13529  004ADC  0100               	movlb	0	; () banked
 13530  004ADE  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 13531  004AE0  0E14               	movlw	20
 13532  004AE2  6F64               	movwf	delay_ms@dly& (0+255),b
 13533  004AE4  ECD6  F03B         	call	_delay_ms	;wreg free
 13534                           
 13535                           ;sample.c: 138: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 13536  004AE8  C023  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 13537  004AEC  C024  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 13538  004AF0  ECD4  F038         	call	_ads1115_read_conversion	;wreg free
 13539  004AF4  C06A  F086         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 13540  004AF8  C06B  F087         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 13541                           
 13542                           ;sample.c: 141: __x_sample_fifo(sampBufDiffPr_D01,t16,sizeof(sampBufDiffPr_D01)/sizeof(s
      +                          ampBufDiffPr_D01[0]));
 13543  004AFC  0EAC               	movlw	low _sampBufDiffPr_D01
 13544  004AFE  0100               	movlb	0	; () banked
 13545  004B00  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 13546  004B02  0E01               	movlw	high _sampBufDiffPr_D01
 13547  004B04  0100               	movlb	0	; () banked
 13548  004B06  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 13549  004B08  C086  F070         	movff	sample_diff_pr_chip_slow@t16,___x_sample_fifo@x
 13550  004B0C  C087  F071         	movff	sample_diff_pr_chip_slow@t16+1,___x_sample_fifo@x+1
 13551  004B10  0E08               	movlw	8
 13552  004B12  0100               	movlb	0	; () banked
 13553  004B14  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 13554  004B16  EC80  F022         	call	___x_sample_fifo	;wreg free
 13555                           
 13556                           ;sample.c: 148: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_DIFF_2_3);
 13557  004B1A  C023  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 13558  004B1E  C024  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 13559  004B22  0E03               	movlw	3
 13560  004B24  0100               	movlb	0	; () banked
 13561  004B26  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 13562  004B28  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
 13563                           
 13564                           ;sample.c: 149: ads1115_start_conversion(pAds1115DiffPrObj);
 13565  004B2C  C023  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 13566  004B30  C024  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 13567  004B34  ECC1  F03B         	call	_ads1115_start_conversion	;wreg free
 13568                           
 13569                           ;sample.c: 150: delay_ms(20);
 13570  004B38  0E00               	movlw	0
 13571  004B3A  0100               	movlb	0	; () banked
 13572  004B3C  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 13573  004B3E  0E14               	movlw	20
 13574  004B40  6F64               	movwf	delay_ms@dly& (0+255),b
 13575  004B42  ECD6  F03B         	call	_delay_ms	;wreg free
 13576                           
 13577                           ;sample.c: 151: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 13578  004B46  C023  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 13579  004B4A  C024  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 13580  004B4E  ECD4  F038         	call	_ads1115_read_conversion	;wreg free
 13581  004B52  C06A  F086         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 13582  004B56  C06B  F087         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 13583                           
 13584                           ;sample.c: 153: __x_sample_fifo(sampBufDiffPr_D23,t16,sizeof(sampBufDiffPr_D23)/sizeof(s
      +                          ampBufDiffPr_D23[0]));
 13585  004B5A  0E9C               	movlw	low _sampBufDiffPr_D23
 13586  004B5C  0100               	movlb	0	; () banked
 13587  004B5E  6F6E               	movwf	___x_sample_fifo@buf& (0+255),b
 13588  004B60  0E01               	movlw	high _sampBufDiffPr_D23
 13589  004B62  0100               	movlb	0	; () banked
 13590  004B64  6F6F               	movwf	(___x_sample_fifo@buf+1)& (0+255),b
 13591  004B66  C086  F070         	movff	sample_diff_pr_chip_slow@t16,___x_sample_fifo@x
 13592  004B6A  C087  F071         	movff	sample_diff_pr_chip_slow@t16+1,___x_sample_fifo@x+1
 13593  004B6E  0E08               	movlw	8
 13594  004B70  0100               	movlb	0	; () banked
 13595  004B72  6F72               	movwf	___x_sample_fifo@len& (0+255),b
 13596  004B74  EC80  F022         	call	___x_sample_fifo	;wreg free
 13597                           
 13598                           ;sample.c: 160: ads1115_set_mux(pAds1115DiffPrObj,ADS1X1X_MUX_SINGLE_1);
 13599  004B78  C023  F060         	movff	_pAds1115DiffPrObj,ads1115_set_mux@pAds1115
 13600  004B7C  C024  F061         	movff	_pAds1115DiffPrObj+1,ads1115_set_mux@pAds1115+1
 13601  004B80  0E05               	movlw	5
 13602  004B82  0100               	movlb	0	; () banked
 13603  004B84  6F62               	movwf	ads1115_set_mux@mux& (0+255),b
 13604  004B86  EC0D  F03C         	call	_ads1115_set_mux	;wreg free
 13605                           
 13606                           ;sample.c: 161: ads1115_start_conversion(pAds1115DiffPrObj);
 13607  004B8A  C023  F067         	movff	_pAds1115DiffPrObj,ads1115_start_conversion@pAds1115
 13608  004B8E  C024  F068         	movff	_pAds1115DiffPrObj+1,ads1115_start_conversion@pAds1115+1
 13609  004B92  ECC1  F03B         	call	_ads1115_start_conversion	;wreg free
 13610                           
 13611                           ;sample.c: 162: delay_ms(20);
 13612  004B96  0E00               	movlw	0
 13613  004B98  0100               	movlb	0	; () banked
 13614  004B9A  6F65               	movwf	(delay_ms@dly+1)& (0+255),b
 13615  004B9C  0E14               	movlw	20
 13616  004B9E  6F64               	movwf	delay_ms@dly& (0+255),b
 13617  004BA0  ECD6  F03B         	call	_delay_ms	;wreg free
 13618                           
 13619                           ;sample.c: 163: t16=ads1115_read_conversion(pAds1115DiffPrObj);
 13620  004BA4  C023  F06A         	movff	_pAds1115DiffPrObj,ads1115_read_conversion@pAds1115
 13621  004BA8  C024  F06B         	movff	_pAds1115DiffPrObj+1,ads1115_read_conversion@pAds1115+1
 13622  004BAC  ECD4  F038         	call	_ads1115_read_conversion	;wreg free
 13623  004BB0  C06A  F086         	movff	?_ads1115_read_conversion,sample_diff_pr_chip_slow@t16
 13624  004BB4  C06B  F087         	movff	?_ads1115_read_conversion+1,sample_diff_pr_chip_slow@t16+1
 13625                           
 13626                           ;sample.c: 164: sampBufDiffPr_S1=t16;
 13627  004BB8  C086  F17A         	movff	sample_diff_pr_chip_slow@t16,_sampBufDiffPr_S1	;volatile
 13628  004BBC  C087  F17B         	movff	sample_diff_pr_chip_slow@t16+1,_sampBufDiffPr_S1+1	;volatile
 13629                           
 13630                           ;sample.c: 165: do{ do{TRISC &= ~(1<<5);}while(0);; do{LATC &= ~(1<<5);}while(0);; }whil
      +                          e(0);;
 13631  004BC0  9A94               	bcf	3988,5,c	;volatile
 13632  004BC2  9A8B               	bcf	3979,5,c	;volatile
 13633                           
 13634                           ;sample.c: 167: if((diffSampCount_D01 >= diffSampCount_D23) && (diffSampCount_D01 >= 20/
      +                          3)){
 13635  004BC4  5036               	movf	_diffSampCount_D23,w,c
 13636  004BC6  5C37               	subwf	_diffSampCount_D01,w,c
 13637  004BC8  A0D8               	btfss	status,0,c
 13638  004BCA  0012               	return	
 13639  004BCC  0E05               	movlw	5
 13640  004BCE  6437               	cpfsgt	_diffSampCount_D01,c
 13641  004BD0  0012               	return	
 13642                           
 13643                           ;sample.c: 168: sample_diff_pr_fliter(&x_prDiffData);
 13644  004BD2  0EEA               	movlw	low _x_prDiffData
 13645  004BD4  0100               	movlb	0	; () banked
 13646  004BD6  6F83               	movwf	sample_diff_pr_fliter@xin& (0+255),b
 13647  004BD8  0E01               	movlw	high _x_prDiffData
 13648  004BDA  0100               	movlb	0	; () banked
 13649  004BDC  6F84               	movwf	(sample_diff_pr_fliter@xin+1)& (0+255),b
 13650  004BDE  ECB0  F033         	call	_sample_diff_pr_fliter	;wreg free
 13651                           
 13652                           ;sample.c: 172: diffPrSampleUpdate=1;
 13653  004BE2  0E01               	movlw	1
 13654  004BE4  6E34               	movwf	_diffPrSampleUpdate,c
 13655  004BE6  0012               	return	
 13656  004BE8                     __end_of_sample_diff_pr_chip_slow:
 13657                           	opt stack 0
 13658                           tblptru	equ	0xFF8
 13659                           tblptrh	equ	0xFF7
 13660                           tblptrl	equ	0xFF6
 13661                           tablat	equ	0xFF5
 13662                           prodh	equ	0xFF4
 13663                           prodl	equ	0xFF3
 13664                           intcon	equ	0xFF2
 13665                           indf0	equ	0xFEF
 13666                           postinc0	equ	0xFEE
 13667                           fsr0h	equ	0xFEA
 13668                           fsr0l	equ	0xFE9
 13669                           wreg	equ	0xFE8
 13670                           postdec1	equ	0xFE5
 13671                           plusw1	equ	0xFE3
 13672                           fsr1h	equ	0xFE2
 13673                           fsr1l	equ	0xFE1
 13674                           indf2	equ	0xFDF
 13675                           postinc2	equ	0xFDE
 13676                           postdec2	equ	0xFDD
 13677                           plusw2	equ	0xFDB
 13678                           fsr2h	equ	0xFDA
 13679                           fsr2l	equ	0xFD9
 13680                           status	equ	0xFD8
 13681                           
 13682 ;; *************** function _sample_diff_pr_fliter *****************
 13683 ;; Defined at:
 13684 ;;		line 74 in file "src/api/sample.c"
 13685 ;; Parameters:    Size  Location     Type
 13686 ;;  xin             2   35[BANK0 ] PTR struct .
 13687 ;;		 -> x_prDiffData(8), 
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;		None
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1    wreg      unsigned char 
 13692 ;; Registers used:
 13693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13694 ;; Tracked objects:
 13695 ;;		On entry : 0/0
 13696 ;;		On exit  : 0/0
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13703 ;;Total ram usage:        2 bytes
 13704 ;; Hardware stack levels used:    1
 13705 ;; Hardware stack levels required when called:    6
 13706 ;; This function calls:
 13707 ;;		___x_sample_fliter
 13708 ;; This function is called by:
 13709 ;;		_sample_diff_pr_chip_fast
 13710 ;;		_sample_diff_pr_chip_slow
 13711 ;; This function uses a non-reentrant model
 13712 ;;
 13713                           
 13714                           	psect	text73
 13715  006760                     __ptext73:
 13716                           	opt stack 0
 13717  006760                     _sample_diff_pr_fliter:
 13718                           	opt stack 21
 13719                           
 13720                           ;sample.c: 76: xin->tAdcValue=__x_sample_fliter(sampBufDiffPr_D01,20/3,4);
 13721                           
 13722                           ;incstack = 0
 13723  006760  0EAC               	movlw	low _sampBufDiffPr_D01
 13724  006762  0100               	movlb	0	; () banked
 13725  006764  6F6E               	movwf	___x_sample_fliter@buf& (0+255),b
 13726  006766  0E01               	movlw	high _sampBufDiffPr_D01
 13727  006768  0100               	movlb	0	; () banked
 13728  00676A  6F6F               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 13729  00676C  0E06               	movlw	6
 13730  00676E  0100               	movlb	0	; () banked
 13731  006770  6F70               	movwf	___x_sample_fliter@len& (0+255),b
 13732  006772  0E04               	movlw	4
 13733  006774  0100               	movlb	0	; () banked
 13734  006776  6F71               	movwf	___x_sample_fliter@loop& (0+255),b
 13735  006778  EC35  F018         	call	___x_sample_fliter	;wreg free
 13736  00677C  0100               	movlb	0	; () banked
 13737  00677E  EE20 F006          	lfsr	2,6
 13738  006782  5183               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 13739  006784  26D9               	addwf	fsr2l,f,c
 13740  006786  5184               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 13741  006788  22DA               	addwfc	fsr2h,f,c
 13742  00678A  0100               	movlb	0	; () banked
 13743  00678C  C06E  FFDE         	movff	?___x_sample_fliter,postinc2
 13744  006790  0100               	movlb	0	; () banked
 13745  006792  C06F  FFDD         	movff	?___x_sample_fliter+1,postdec2
 13746                           
 13747                           ;sample.c: 77: xin->pAdcValue=__x_sample_fliter(sampBufDiffPr_D23,20/3,4);
 13748  006796  0E9C               	movlw	low _sampBufDiffPr_D23
 13749  006798  0100               	movlb	0	; () banked
 13750  00679A  6F6E               	movwf	___x_sample_fliter@buf& (0+255),b
 13751  00679C  0E01               	movlw	high _sampBufDiffPr_D23
 13752  00679E  0100               	movlb	0	; () banked
 13753  0067A0  6F6F               	movwf	(___x_sample_fliter@buf+1)& (0+255),b
 13754  0067A2  0E06               	movlw	6
 13755  0067A4  0100               	movlb	0	; () banked
 13756  0067A6  6F70               	movwf	___x_sample_fliter@len& (0+255),b
 13757  0067A8  0E04               	movlw	4
 13758  0067AA  0100               	movlb	0	; () banked
 13759  0067AC  6F71               	movwf	___x_sample_fliter@loop& (0+255),b
 13760  0067AE  EC35  F018         	call	___x_sample_fliter	;wreg free
 13761  0067B2  0100               	movlb	0	; () banked
 13762  0067B4  EE20 F004          	lfsr	2,4
 13763  0067B8  5183               	movf	sample_diff_pr_fliter@xin& (0+255),w,b
 13764  0067BA  26D9               	addwf	fsr2l,f,c
 13765  0067BC  5184               	movf	(sample_diff_pr_fliter@xin+1)& (0+255),w,b
 13766  0067BE  22DA               	addwfc	fsr2h,f,c
 13767  0067C0  0100               	movlb	0	; () banked
 13768  0067C2  C06E  FFDE         	movff	?___x_sample_fliter,postinc2
 13769  0067C6  0100               	movlb	0	; () banked
 13770  0067C8  C06F  FFDD         	movff	?___x_sample_fliter+1,postdec2
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;sample.c: 78: xin->pValue=0;
 13774  0067CC  C083  FFD9         	movff	sample_diff_pr_fliter@xin,fsr2l
 13775  0067D0  C084  FFDA         	movff	sample_diff_pr_fliter@xin+1,fsr2h
 13776  0067D4  6ADE               	clrf	postinc2,c
 13777  0067D6  6ADE               	clrf	postinc2,c
 13778  0067D8  6ADE               	clrf	postinc2,c
 13779  0067DA  6ADD               	clrf	postdec2,c
 13780  0067DC  0012               	return	
 13781  0067DE                     __end_of_sample_diff_pr_fliter:
 13782                           	opt stack 0
 13783                           tblptru	equ	0xFF8
 13784                           tblptrh	equ	0xFF7
 13785                           tblptrl	equ	0xFF6
 13786                           tablat	equ	0xFF5
 13787                           prodh	equ	0xFF4
 13788                           prodl	equ	0xFF3
 13789                           intcon	equ	0xFF2
 13790                           indf0	equ	0xFEF
 13791                           postinc0	equ	0xFEE
 13792                           fsr0h	equ	0xFEA
 13793                           fsr0l	equ	0xFE9
 13794                           wreg	equ	0xFE8
 13795                           postdec1	equ	0xFE5
 13796                           plusw1	equ	0xFE3
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           plusw2	equ	0xFDB
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function ___x_sample_fliter *****************
 13808 ;; Defined at:
 13809 ;;		line 38 in file "src/api/sample.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;  buf             2   14[BANK0 ] PTR int 
 13812 ;;		 -> sampBufDiffPr_D23(16), sampBufDiffPr_D01(16), 
 13813 ;;  len             1   16[BANK0 ] unsigned char 
 13814 ;;  loop            1   17[BANK0 ] unsigned char 
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;  t32             4   30[BANK0 ] long 
 13817 ;;  min             2   28[BANK0 ] int 
 13818 ;;  max             2   26[BANK0 ] int 
 13819 ;;  i               1   34[BANK0 ] unsigned char 
 13820 ;;  minLoc          1   25[BANK0 ] unsigned char 
 13821 ;;  maxLoc          1   24[BANK0 ] unsigned char 
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  2   14[BANK0 ] int 
 13824 ;; Registers used:
 13825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13826 ;; Tracked objects:
 13827 ;;		On entry : 0/0
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13832 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13833 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13834 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13835 ;;Total ram usage:       21 bytes
 13836 ;; Hardware stack levels used:    1
 13837 ;; Hardware stack levels required when called:    5
 13838 ;; This function calls:
 13839 ;;		___aldiv
 13840 ;; This function is called by:
 13841 ;;		_sample_diff_pr_fliter
 13842 ;; This function uses a non-reentrant model
 13843 ;;
 13844                           
 13845                           	psect	text74
 13846  00306A                     __ptext74:
 13847                           	opt stack 0
 13848  00306A                     ___x_sample_fliter:
 13849                           	opt stack 21
 13850                           
 13851                           ;sample.c: 40: int16_t max,min;
 13852                           ;sample.c: 41: uint8_t i,maxLoc,minLoc;
 13853                           ;sample.c: 42: int32_t t32=0;
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;incstack = 0
 13857  00306A  0E00               	movlw	0
 13858  00306C  0100               	movlb	0	; () banked
 13859  00306E  6F7E               	movwf	___x_sample_fliter@t32& (0+255),b
 13860  003070  0E00               	movlw	0
 13861  003072  6F7F               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 13862  003074  0E00               	movlw	0
 13863  003076  6F80               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 13864  003078  0E00               	movlw	0
 13865  00307A  6F81               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 13866                           
 13867                           ; BSR set to: 0
 13868                           ;sample.c: 43: if(len<3)return 0;
 13869  00307C  0E03               	movlw	3
 13870  00307E  0100               	movlb	0	; () banked
 13871  003080  6170               	cpfslt	___x_sample_fliter@len& (0+255),b
 13872  003082  D118               	goto	l11494
 13873                           
 13874                           ; BSR set to: 0
 13875  003084  0E00               	movlw	0
 13876  003086  0100               	movlb	0	; () banked
 13877  003088  6F6F               	movwf	(?___x_sample_fliter+1)& (0+255),b
 13878  00308A  0E00               	movlw	0
 13879  00308C  6F6E               	movwf	?___x_sample_fliter& (0+255),b
 13880                           
 13881                           ; BSR set to: 0
 13882  00308E  0012               	return	
 13883  003090                     l11464:
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;sample.c: 45: min=max=buf[0];
 13887  003090  C06E  FFD9         	movff	___x_sample_fliter@buf,fsr2l
 13888  003094  C06F  FFDA         	movff	___x_sample_fliter@buf+1,fsr2h
 13889  003098  CFDE F07A          	movff	postinc2,___x_sample_fliter@max
 13890  00309C  CFDD F07B          	movff	postdec2,___x_sample_fliter@max+1
 13891  0030A0  C07A  F07C         	movff	___x_sample_fliter@max,___x_sample_fliter@min
 13892  0030A4  C07B  F07D         	movff	___x_sample_fliter@max+1,___x_sample_fliter@min+1
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;sample.c: 46: t32=0;
 13896  0030A8  0E00               	movlw	0
 13897  0030AA  0100               	movlb	0	; () banked
 13898  0030AC  6F7E               	movwf	___x_sample_fliter@t32& (0+255),b
 13899  0030AE  0E00               	movlw	0
 13900  0030B0  6F7F               	movwf	(___x_sample_fliter@t32+1)& (0+255),b
 13901  0030B2  0E00               	movlw	0
 13902  0030B4  6F80               	movwf	(___x_sample_fliter@t32+2)& (0+255),b
 13903  0030B6  0E00               	movlw	0
 13904  0030B8  6F81               	movwf	(___x_sample_fliter@t32+3)& (0+255),b
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;sample.c: 47: for(i=0;i<len;i++){
 13908  0030BA  0E00               	movlw	0
 13909  0030BC  0100               	movlb	0	; () banked
 13910  0030BE  6F82               	movwf	___x_sample_fliter@i& (0+255),b
 13911  0030C0  D07F               	goto	l11482
 13912  0030C2                     l11470:
 13913                           
 13914                           ; BSR set to: 0
 13915                           ;sample.c: 48: if(min>buf[i]){min=buf[i];minLoc=i;}
 13916  0030C2  0100               	movlb	0	; () banked
 13917  0030C4  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 13918  0030C6  0D02               	mullw	2
 13919  0030C8  50F3               	movf	prodl,w,c
 13920  0030CA  0100               	movlb	0	; () banked
 13921  0030CC  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13922  0030CE  6ED9               	movwf	fsr2l,c
 13923  0030D0  50F4               	movf	prodh,w,c
 13924  0030D2  0100               	movlb	0	; () banked
 13925  0030D4  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13926  0030D6  6EDA               	movwf	fsr2h,c
 13927  0030D8  0100               	movlb	0	; () banked
 13928  0030DA  517C               	movf	___x_sample_fliter@min& (0+255),w,b
 13929  0030DC  5CDE               	subwf	postinc2,w,c
 13930  0030DE  50DE               	movf	postinc2,w,c
 13931  0030E0  0A80               	xorlw	128
 13932  0030E2  0100               	movlb	0	; () banked
 13933  0030E4  6F74               	movwf	(??___x_sample_fliter+2)& (0+255),b
 13934  0030E6  0100               	movlb	0	; () banked
 13935  0030E8  517D               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 13936  0030EA  0A80               	xorlw	128
 13937  0030EC  0100               	movlb	0	; () banked
 13938  0030EE  5974               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 13939  0030F0  B0D8               	btfsc	status,0,c
 13940  0030F2  D011               	goto	l524
 13941                           
 13942                           ; BSR set to: 0
 13943  0030F4  0100               	movlb	0	; () banked
 13944  0030F6  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 13945  0030F8  0D02               	mullw	2
 13946  0030FA  50F3               	movf	prodl,w,c
 13947  0030FC  0100               	movlb	0	; () banked
 13948  0030FE  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13949  003100  6ED9               	movwf	fsr2l,c
 13950  003102  50F4               	movf	prodh,w,c
 13951  003104  0100               	movlb	0	; () banked
 13952  003106  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13953  003108  6EDA               	movwf	fsr2h,c
 13954  00310A  CFDE F07C          	movff	postinc2,___x_sample_fliter@min
 13955  00310E  CFDD F07D          	movff	postdec2,___x_sample_fliter@min+1
 13956                           
 13957                           ; BSR set to: 0
 13958  003112  C082  F079         	movff	___x_sample_fliter@i,___x_sample_fliter@minLoc
 13959  003116                     l524:
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;sample.c: 49: if(max<buf[i]){max=buf[i];maxLoc=i;}
 13963  003116  0100               	movlb	0	; () banked
 13964  003118  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 13965  00311A  0D02               	mullw	2
 13966  00311C  50F3               	movf	prodl,w,c
 13967  00311E  0100               	movlb	0	; () banked
 13968  003120  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13969  003122  6ED9               	movwf	fsr2l,c
 13970  003124  50F4               	movf	prodh,w,c
 13971  003126  0100               	movlb	0	; () banked
 13972  003128  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 13973  00312A  6EDA               	movwf	fsr2h,c
 13974  00312C  50DE               	movf	postinc2,w,c
 13975  00312E  0100               	movlb	0	; () banked
 13976  003130  5D7A               	subwf	___x_sample_fliter@max& (0+255),w,b
 13977  003132  0100               	movlb	0	; () banked
 13978  003134  517B               	movf	(___x_sample_fliter@max+1)& (0+255),w,b
 13979  003136  0A80               	xorlw	128
 13980  003138  0100               	movlb	0	; () banked
 13981  00313A  6F74               	movwf	(??___x_sample_fliter+2)& (0+255),b
 13982  00313C  50DE               	movf	postinc2,w,c
 13983  00313E  0A80               	xorlw	128
 13984  003140  0100               	movlb	0	; () banked
 13985  003142  5974               	subwfb	(??___x_sample_fliter+2)& (0+255),w,b
 13986  003144  B0D8               	btfsc	status,0,c
 13987  003146  D011               	goto	l525
 13988                           
 13989                           ; BSR set to: 0
 13990  003148  0100               	movlb	0	; () banked
 13991  00314A  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 13992  00314C  0D02               	mullw	2
 13993  00314E  50F3               	movf	prodl,w,c
 13994  003150  0100               	movlb	0	; () banked
 13995  003152  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 13996  003154  6ED9               	movwf	fsr2l,c
 13997  003156  50F4               	movf	prodh,w,c
 13998  003158  0100               	movlb	0	; () banked
 13999  00315A  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 14000  00315C  6EDA               	movwf	fsr2h,c
 14001  00315E  CFDE F07A          	movff	postinc2,___x_sample_fliter@max
 14002  003162  CFDD F07B          	movff	postdec2,___x_sample_fliter@max+1
 14003                           
 14004                           ; BSR set to: 0
 14005  003166  C082  F078         	movff	___x_sample_fliter@i,___x_sample_fliter@maxLoc
 14006  00316A                     l525:
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;sample.c: 50: t32+=buf[i];
 14010  00316A  0100               	movlb	0	; () banked
 14011  00316C  5182               	movf	___x_sample_fliter@i& (0+255),w,b
 14012  00316E  0D02               	mullw	2
 14013  003170  50F3               	movf	prodl,w,c
 14014  003172  0100               	movlb	0	; () banked
 14015  003174  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 14016  003176  6ED9               	movwf	fsr2l,c
 14017  003178  50F4               	movf	prodh,w,c
 14018  00317A  0100               	movlb	0	; () banked
 14019  00317C  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 14020  00317E  6EDA               	movwf	fsr2h,c
 14021  003180  CFDE F072          	movff	postinc2,??___x_sample_fliter
 14022  003184  CFDD F073          	movff	postdec2,??___x_sample_fliter+1
 14023  003188  C072  F074         	movff	??___x_sample_fliter,??___x_sample_fliter+2
 14024  00318C  C073  F075         	movff	??___x_sample_fliter+1,??___x_sample_fliter+3
 14025  003190  0E00               	movlw	0
 14026  003192  0100               	movlb	0	; () banked
 14027  003194  BF75               	btfsc	(??___x_sample_fliter+3)& (0+255),7,b
 14028  003196  0EFF               	movlw	255
 14029  003198  6F76               	movwf	(??___x_sample_fliter+4)& (0+255),b
 14030  00319A  6F77               	movwf	(??___x_sample_fliter+5)& (0+255),b
 14031  00319C  0100               	movlb	0	; () banked
 14032  00319E  5174               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 14033  0031A0  0100               	movlb	0	; () banked
 14034  0031A2  277E               	addwf	___x_sample_fliter@t32& (0+255),f,b
 14035  0031A4  0100               	movlb	0	; () banked
 14036  0031A6  5175               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 14037  0031A8  0100               	movlb	0	; () banked
 14038  0031AA  237F               	addwfc	(___x_sample_fliter@t32+1)& (0+255),f,b
 14039  0031AC  0100               	movlb	0	; () banked
 14040  0031AE  5176               	movf	(??___x_sample_fliter+4)& (0+255),w,b
 14041  0031B0  0100               	movlb	0	; () banked
 14042  0031B2  2380               	addwfc	(___x_sample_fliter@t32+2)& (0+255),f,b
 14043  0031B4  0100               	movlb	0	; () banked
 14044  0031B6  5177               	movf	(??___x_sample_fliter+5)& (0+255),w,b
 14045  0031B8  0100               	movlb	0	; () banked
 14046  0031BA  2381               	addwfc	(___x_sample_fliter@t32+3)& (0+255),f,b
 14047                           
 14048                           ; BSR set to: 0
 14049  0031BC  0100               	movlb	0	; () banked
 14050  0031BE  2B82               	incf	___x_sample_fliter@i& (0+255),f,b
 14051  0031C0                     l11482:
 14052                           
 14053                           ; BSR set to: 0
 14054  0031C0  0100               	movlb	0	; () banked
 14055  0031C2  5170               	movf	___x_sample_fliter@len& (0+255),w,b
 14056  0031C4  0100               	movlb	0	; () banked
 14057  0031C6  5D82               	subwf	___x_sample_fliter@i& (0+255),w,b
 14058  0031C8  A0D8               	btfss	status,0,c
 14059  0031CA  D77B               	goto	l11470
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;sample.c: 51: }
 14063                           ;sample.c: 52: t32-=(max+min);
 14064                           
 14065                           ; BSR set to: 0
 14066  0031CC  0100               	movlb	0	; () banked
 14067  0031CE  517C               	movf	___x_sample_fliter@min& (0+255),w,b
 14068  0031D0  0100               	movlb	0	; () banked
 14069  0031D2  257A               	addwf	___x_sample_fliter@max& (0+255),w,b
 14070  0031D4  0100               	movlb	0	; () banked
 14071  0031D6  6F72               	movwf	??___x_sample_fliter& (0+255),b
 14072  0031D8  0100               	movlb	0	; () banked
 14073  0031DA  517D               	movf	(___x_sample_fliter@min+1)& (0+255),w,b
 14074  0031DC  0100               	movlb	0	; () banked
 14075  0031DE  217B               	addwfc	(___x_sample_fliter@max+1)& (0+255),w,b
 14076  0031E0  0100               	movlb	0	; () banked
 14077  0031E2  6F73               	movwf	(??___x_sample_fliter+1)& (0+255),b
 14078  0031E4  0100               	movlb	0	; () banked
 14079  0031E6  6B74               	clrf	(??___x_sample_fliter+2)& (0+255),b
 14080  0031E8  0100               	movlb	0	; () banked
 14081  0031EA  BF73               	btfsc	(??___x_sample_fliter+1)& (0+255),7,b
 14082  0031EC  0774               	decf	(??___x_sample_fliter+2)& (0+255),f,b
 14083  0031EE  0100               	movlb	0	; () banked
 14084  0031F0  5174               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 14085  0031F2  0100               	movlb	0	; () banked
 14086  0031F4  6F75               	movwf	(??___x_sample_fliter+3)& (0+255),b
 14087  0031F6  0100               	movlb	0	; () banked
 14088  0031F8  5172               	movf	??___x_sample_fliter& (0+255),w,b
 14089  0031FA  0100               	movlb	0	; () banked
 14090  0031FC  5F7E               	subwf	___x_sample_fliter@t32& (0+255),f,b
 14091  0031FE  0100               	movlb	0	; () banked
 14092  003200  5173               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 14093  003202  0100               	movlb	0	; () banked
 14094  003204  5B7F               	subwfb	(___x_sample_fliter@t32+1)& (0+255),f,b
 14095  003206  0100               	movlb	0	; () banked
 14096  003208  5174               	movf	(??___x_sample_fliter+2)& (0+255),w,b
 14097  00320A  0100               	movlb	0	; () banked
 14098  00320C  5B80               	subwfb	(___x_sample_fliter@t32+2)& (0+255),f,b
 14099  00320E  0100               	movlb	0	; () banked
 14100  003210  5175               	movf	(??___x_sample_fliter+3)& (0+255),w,b
 14101  003212  0100               	movlb	0	; () banked
 14102  003214  5B81               	subwfb	(___x_sample_fliter@t32+3)& (0+255),f,b
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;sample.c: 53: t32=t32/(len-2);
 14106  003216  C07E  F060         	movff	___x_sample_fliter@t32,___aldiv@dividend
 14107  00321A  C07F  F061         	movff	___x_sample_fliter@t32+1,___aldiv@dividend+1
 14108  00321E  C080  F062         	movff	___x_sample_fliter@t32+2,___aldiv@dividend+2
 14109  003222  C081  F063         	movff	___x_sample_fliter@t32+3,___aldiv@dividend+3
 14110  003226  0EFE               	movlw	254
 14111  003228  0100               	movlb	0	; () banked
 14112  00322A  6F72               	movwf	??___x_sample_fliter& (0+255),b
 14113  00322C  0EFF               	movlw	255
 14114  00322E  0100               	movlb	0	; () banked
 14115  003230  6F73               	movwf	(??___x_sample_fliter+1)& (0+255),b
 14116  003232  0100               	movlb	0	; () banked
 14117  003234  5170               	movf	___x_sample_fliter@len& (0+255),w,b
 14118  003236  0100               	movlb	0	; () banked
 14119  003238  6F74               	movwf	(??___x_sample_fliter+2)& (0+255),b
 14120  00323A  6B75               	clrf	(??___x_sample_fliter+3)& (0+255),b
 14121  00323C  0100               	movlb	0	; () banked
 14122  00323E  5172               	movf	??___x_sample_fliter& (0+255),w,b
 14123  003240  0100               	movlb	0	; () banked
 14124  003242  2774               	addwf	(??___x_sample_fliter+2)& (0+255),f,b
 14125  003244  0100               	movlb	0	; () banked
 14126  003246  5173               	movf	(??___x_sample_fliter+1)& (0+255),w,b
 14127  003248  0100               	movlb	0	; () banked
 14128  00324A  2375               	addwfc	(??___x_sample_fliter+3)& (0+255),f,b
 14129  00324C  C074  F064         	movff	??___x_sample_fliter+2,___aldiv@divisor
 14130  003250  C075  F065         	movff	??___x_sample_fliter+3,___aldiv@divisor+1
 14131  003254  0100               	movlb	0	; () banked
 14132  003256  0E00               	movlw	0
 14133  003258  BF65               	btfsc	(___aldiv@divisor+1)& (0+255),7,b
 14134  00325A  0EFF               	movlw	-1
 14135  00325C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 14136  00325E  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 14137  003260  EC90  F026         	call	___aldiv	;wreg free
 14138  003264  C060  F07E         	movff	?___aldiv,___x_sample_fliter@t32
 14139  003268  C061  F07F         	movff	?___aldiv+1,___x_sample_fliter@t32+1
 14140  00326C  C062  F080         	movff	?___aldiv+2,___x_sample_fliter@t32+2
 14141  003270  C063  F081         	movff	?___aldiv+3,___x_sample_fliter@t32+3
 14142                           
 14143                           ;sample.c: 54: buf[minLoc]=(int16_t)t32;
 14144  003274  0100               	movlb	0	; () banked
 14145  003276  5179               	movf	___x_sample_fliter@minLoc& (0+255),w,b
 14146  003278  0D02               	mullw	2
 14147  00327A  50F3               	movf	prodl,w,c
 14148  00327C  0100               	movlb	0	; () banked
 14149  00327E  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 14150  003280  6ED9               	movwf	fsr2l,c
 14151  003282  50F4               	movf	prodh,w,c
 14152  003284  0100               	movlb	0	; () banked
 14153  003286  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 14154  003288  6EDA               	movwf	fsr2h,c
 14155  00328A  C07E  FFDE         	movff	___x_sample_fliter@t32,postinc2
 14156  00328E  C07F  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;sample.c: 55: buf[maxLoc]=(int16_t)t32;
 14160  003292  0100               	movlb	0	; () banked
 14161  003294  5178               	movf	___x_sample_fliter@maxLoc& (0+255),w,b
 14162  003296  0D02               	mullw	2
 14163  003298  50F3               	movf	prodl,w,c
 14164  00329A  0100               	movlb	0	; () banked
 14165  00329C  256E               	addwf	___x_sample_fliter@buf& (0+255),w,b
 14166  00329E  6ED9               	movwf	fsr2l,c
 14167  0032A0  50F4               	movf	prodh,w,c
 14168  0032A2  0100               	movlb	0	; () banked
 14169  0032A4  216F               	addwfc	(___x_sample_fliter@buf+1)& (0+255),w,b
 14170  0032A6  6EDA               	movwf	fsr2h,c
 14171  0032A8  C07E  FFDE         	movff	___x_sample_fliter@t32,postinc2
 14172  0032AC  C07F  FFDD         	movff	___x_sample_fliter@t32+1,postdec2
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;sample.c: 56: loop--;
 14176  0032B0  0100               	movlb	0	; () banked
 14177  0032B2  0771               	decf	___x_sample_fliter@loop& (0+255),f,b
 14178  0032B4                     l11494:
 14179                           
 14180                           ; BSR set to: 0
 14181  0032B4  0100               	movlb	0	; () banked
 14182  0032B6  5171               	movf	___x_sample_fliter@loop& (0+255),w,b
 14183  0032B8  0100               	movlb	0	; () banked
 14184  0032BA  A4D8               	btfss	status,2,c
 14185  0032BC  D6E9               	goto	l11464
 14186                           
 14187                           ; BSR set to: 0
 14188                           ;sample.c: 57: }
 14189                           ;sample.c: 58: return (int16_t)t32;
 14190  0032BE  C07E  F06E         	movff	___x_sample_fliter@t32,?___x_sample_fliter
 14191  0032C2  C07F  F06F         	movff	___x_sample_fliter@t32+1,?___x_sample_fliter+1
 14192                           
 14193                           ; BSR set to: 0
 14194  0032C6  0012               	return		;funcret
 14195  0032C8                     __end_of___x_sample_fliter:
 14196                           	opt stack 0
 14197                           tblptru	equ	0xFF8
 14198                           tblptrh	equ	0xFF7
 14199                           tblptrl	equ	0xFF6
 14200                           tablat	equ	0xFF5
 14201                           prodh	equ	0xFF4
 14202                           prodl	equ	0xFF3
 14203                           intcon	equ	0xFF2
 14204                           indf0	equ	0xFEF
 14205                           postinc0	equ	0xFEE
 14206                           fsr0h	equ	0xFEA
 14207                           fsr0l	equ	0xFE9
 14208                           wreg	equ	0xFE8
 14209                           postdec1	equ	0xFE5
 14210                           plusw1	equ	0xFE3
 14211                           fsr1h	equ	0xFE2
 14212                           fsr1l	equ	0xFE1
 14213                           indf2	equ	0xFDF
 14214                           postinc2	equ	0xFDE
 14215                           postdec2	equ	0xFDD
 14216                           plusw2	equ	0xFDB
 14217                           fsr2h	equ	0xFDA
 14218                           fsr2l	equ	0xFD9
 14219                           status	equ	0xFD8
 14220                           
 14221 ;; *************** function _delay_ms *****************
 14222 ;; Defined at:
 14223 ;;		line 97 in file "src/soc/clock.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;  dly             2    4[BANK0 ] unsigned int 
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;		None
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1    wreg      void 
 14230 ;; Registers used:
 14231 ;;		wreg, status,2, status,0, cstack
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14237 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14240 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14241 ;;Total ram usage:        2 bytes
 14242 ;; Hardware stack levels used:    1
 14243 ;; Hardware stack levels required when called:    5
 14244 ;; This function calls:
 14245 ;;		_delay_us
 14246 ;; This function is called by:
 14247 ;;		_sample_diff_pr_chip_slow
 14248 ;;		_sample_pr_chip_comm
 14249 ;;		_key_polling
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text75
 14254  0077AC                     __ptext75:
 14255                           	opt stack 0
 14256  0077AC                     _delay_ms:
 14257                           	opt stack 21
 14258                           
 14259                           ;clock.c: 99: while(dly>0){
 14260                           
 14261                           ; BSR set to: 0
 14262                           ;incstack = 0
 14263  0077AC  D00B               	goto	l11502
 14264  0077AE                     l11498:
 14265                           
 14266                           ;clock.c: 100: delay_us(1000);
 14267  0077AE  0E03               	movlw	3
 14268  0077B0  0100               	movlb	0	; () banked
 14269  0077B2  6F61               	movwf	(delay_us@dly+1)& (0+255),b
 14270  0077B4  0EE8               	movlw	232
 14271  0077B6  6F60               	movwf	delay_us@dly& (0+255),b
 14272  0077B8  EC13  F03A         	call	_delay_us	;wreg free
 14273                           
 14274                           ;clock.c: 101: dly--;
 14275  0077BC  0100               	movlb	0	; () banked
 14276  0077BE  0764               	decf	delay_ms@dly& (0+255),f,b
 14277  0077C0  A0D8               	btfss	status,0,c
 14278  0077C2  0765               	decf	(delay_ms@dly+1)& (0+255),f,b
 14279  0077C4                     l11502:
 14280  0077C4  0100               	movlb	0	; () banked
 14281  0077C6  5164               	movf	delay_ms@dly& (0+255),w,b
 14282  0077C8  0100               	movlb	0	; () banked
 14283  0077CA  1165               	iorwf	(delay_ms@dly+1)& (0+255),w,b
 14284  0077CC  B4D8               	btfsc	status,2,c
 14285  0077CE  0012               	return	
 14286  0077D0  D7EE               	goto	l11498
 14287  0077D2                     __end_of_delay_ms:
 14288                           	opt stack 0
 14289                           tblptru	equ	0xFF8
 14290                           tblptrh	equ	0xFF7
 14291                           tblptrl	equ	0xFF6
 14292                           tablat	equ	0xFF5
 14293                           prodh	equ	0xFF4
 14294                           prodl	equ	0xFF3
 14295                           intcon	equ	0xFF2
 14296                           indf0	equ	0xFEF
 14297                           postinc0	equ	0xFEE
 14298                           fsr0h	equ	0xFEA
 14299                           fsr0l	equ	0xFE9
 14300                           wreg	equ	0xFE8
 14301                           postdec1	equ	0xFE5
 14302                           plusw1	equ	0xFE3
 14303                           fsr1h	equ	0xFE2
 14304                           fsr1l	equ	0xFE1
 14305                           indf2	equ	0xFDF
 14306                           postinc2	equ	0xFDE
 14307                           postdec2	equ	0xFDD
 14308                           plusw2	equ	0xFDB
 14309                           fsr2h	equ	0xFDA
 14310                           fsr2l	equ	0xFD9
 14311                           status	equ	0xFD8
 14312                           
 14313 ;; *************** function _delay_us *****************
 14314 ;; Defined at:
 14315 ;;		line 82 in file "src/soc/clock.c"
 14316 ;; Parameters:    Size  Location     Type
 14317 ;;  dly             2    0[BANK0 ] unsigned int 
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;  i               2    2[BANK0 ] unsigned int 
 14320 ;; Return value:  Size  Location     Type
 14321 ;;                  1    wreg      void 
 14322 ;; Registers used:
 14323 ;;		wreg, status,2, status,0
 14324 ;; Tracked objects:
 14325 ;;		On entry : 0/0
 14326 ;;		On exit  : 0/0
 14327 ;;		Unchanged: 0/0
 14328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14333 ;;Total ram usage:        4 bytes
 14334 ;; Hardware stack levels used:    1
 14335 ;; Hardware stack levels required when called:    4
 14336 ;; This function calls:
 14337 ;;		Nothing
 14338 ;; This function is called by:
 14339 ;;		_in_adc_start_and_read
 14340 ;;		_delay_ms
 14341 ;; This function uses a non-reentrant model
 14342 ;;
 14343                           
 14344                           	psect	text76
 14345  007426                     __ptext76:
 14346                           	opt stack 0
 14347  007426                     _delay_us:
 14348                           	opt stack 21
 14349                           
 14350                           ;clock.c: 84: uint16_t i;
 14351                           ;clock.c: 85: for(i=0;i<dly;i++){
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;incstack = 0
 14355  007426  0E00               	movlw	0
 14356  007428  0100               	movlb	0	; () banked
 14357  00742A  6F63               	movwf	(delay_us@i+1)& (0+255),b
 14358  00742C  0E00               	movlw	0
 14359  00742E  6F62               	movwf	delay_us@i& (0+255),b
 14360  007430  D00B               	goto	l10740
 14361  007432                     l1638:
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;clock.c: 86: __nop();
 14365  007432  F000               	nop	
 14366                           
 14367                           ;clock.c: 87: __nop();
 14368  007434  F000               	nop	
 14369                           
 14370                           ;clock.c: 88: __nop();
 14371  007436  F000               	nop	
 14372                           
 14373                           ;clock.c: 89: __nop();
 14374  007438  F000               	nop	
 14375                           
 14376                           ;clock.c: 91: __nop();
 14377  00743A  F000               	nop	
 14378                           
 14379                           ;clock.c: 92: __nop();
 14380  00743C  F000               	nop	
 14381                           
 14382                           ;clock.c: 93: __nop();
 14383  00743E  F000               	nop	
 14384                           
 14385                           ;clock.c: 94: __nop();
 14386  007440  F000               	nop	
 14387  007442  0100               	movlb	0	; () banked
 14388  007444  4B62               	infsnz	delay_us@i& (0+255),f,b
 14389  007446  2B63               	incf	(delay_us@i+1)& (0+255),f,b
 14390  007448                     l10740:
 14391                           
 14392                           ; BSR set to: 0
 14393  007448  0100               	movlb	0	; () banked
 14394  00744A  5160               	movf	delay_us@dly& (0+255),w,b
 14395  00744C  0100               	movlb	0	; () banked
 14396  00744E  5D62               	subwf	delay_us@i& (0+255),w,b
 14397  007450  0100               	movlb	0	; () banked
 14398  007452  5161               	movf	(delay_us@dly+1)& (0+255),w,b
 14399  007454  0100               	movlb	0	; () banked
 14400  007456  5963               	subwfb	(delay_us@i+1)& (0+255),w,b
 14401  007458  B0D8               	btfsc	status,0,c
 14402  00745A  0012               	return	
 14403  00745C  D7EA               	goto	l1638
 14404  00745E                     __end_of_delay_us:
 14405                           	opt stack 0
 14406                           tblptru	equ	0xFF8
 14407                           tblptrh	equ	0xFF7
 14408                           tblptrl	equ	0xFF6
 14409                           tablat	equ	0xFF5
 14410                           prodh	equ	0xFF4
 14411                           prodl	equ	0xFF3
 14412                           intcon	equ	0xFF2
 14413                           indf0	equ	0xFEF
 14414                           postinc0	equ	0xFEE
 14415                           fsr0h	equ	0xFEA
 14416                           fsr0l	equ	0xFE9
 14417                           wreg	equ	0xFE8
 14418                           postdec1	equ	0xFE5
 14419                           plusw1	equ	0xFE3
 14420                           fsr1h	equ	0xFE2
 14421                           fsr1l	equ	0xFE1
 14422                           indf2	equ	0xFDF
 14423                           postinc2	equ	0xFDE
 14424                           postdec2	equ	0xFDD
 14425                           plusw2	equ	0xFDB
 14426                           fsr2h	equ	0xFDA
 14427                           fsr2l	equ	0xFD9
 14428                           status	equ	0xFD8
 14429                           
 14430 ;; *************** function _ads1115_start_conversion *****************
 14431 ;; Defined at:
 14432 ;;		line 122 in file "src/driver/ads1115.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  pAds1115        2    7[BANK0 ] PTR struct .
 14435 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;		None
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  1    wreg      void 
 14440 ;; Registers used:
 14441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14442 ;; Tracked objects:
 14443 ;;		On entry : 0/0
 14444 ;;		On exit  : 0/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14451 ;;Total ram usage:        2 bytes
 14452 ;; Hardware stack levels used:    1
 14453 ;; Hardware stack levels required when called:    8
 14454 ;; This function calls:
 14455 ;;		_ads1115_write_reg
 14456 ;; This function is called by:
 14457 ;;		_sample_diff_pr_chip_fast
 14458 ;;		_sample_diff_pr_chip_slow
 14459 ;;		_sample_pr_chip_comm
 14460 ;; This function uses a non-reentrant model
 14461 ;;
 14462                           
 14463                           	psect	text77
 14464  007782                     __ptext77:
 14465                           	opt stack 0
 14466  007782                     _ads1115_start_conversion:
 14467                           	opt stack 19
 14468                           
 14469                           ;ads1115.c: 124: ads1115_write_reg(pAds1115,(0x01),pAds1115->config.data);
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;incstack = 0
 14473  007782  C067  F062         	movff	ads1115_start_conversion@pAds1115,ads1115_write_reg@pAds1115
 14474  007786  C068  F063         	movff	ads1115_start_conversion@pAds1115+1,ads1115_write_reg@pAds1115+1
 14475  00778A  0E01               	movlw	1
 14476  00778C  0100               	movlb	0	; () banked
 14477  00778E  6F64               	movwf	ads1115_write_reg@addr& (0+255),b
 14478  007790  0100               	movlb	0	; () banked
 14479  007792  EE20 F002          	lfsr	2,2
 14480  007796  5167               	movf	ads1115_start_conversion@pAds1115& (0+255),w,b
 14481  007798  26D9               	addwf	fsr2l,f,c
 14482  00779A  5168               	movf	(ads1115_start_conversion@pAds1115+1)& (0+255),w,b
 14483  00779C  22DA               	addwfc	fsr2h,f,c
 14484  00779E  CFDE F065          	movff	postinc2,ads1115_write_reg@value
 14485  0077A2  CFDD F066          	movff	postdec2,ads1115_write_reg@value+1
 14486  0077A6  ECBF  F029         	call	_ads1115_write_reg	;wreg free
 14487  0077AA  0012               	return		;funcret
 14488  0077AC                     __end_of_ads1115_start_conversion:
 14489                           	opt stack 0
 14490                           tblptru	equ	0xFF8
 14491                           tblptrh	equ	0xFF7
 14492                           tblptrl	equ	0xFF6
 14493                           tablat	equ	0xFF5
 14494                           prodh	equ	0xFF4
 14495                           prodl	equ	0xFF3
 14496                           intcon	equ	0xFF2
 14497                           indf0	equ	0xFEF
 14498                           postinc0	equ	0xFEE
 14499                           fsr0h	equ	0xFEA
 14500                           fsr0l	equ	0xFE9
 14501                           wreg	equ	0xFE8
 14502                           postdec1	equ	0xFE5
 14503                           plusw1	equ	0xFE3
 14504                           fsr1h	equ	0xFE2
 14505                           fsr1l	equ	0xFE1
 14506                           indf2	equ	0xFDF
 14507                           postinc2	equ	0xFDE
 14508                           postdec2	equ	0xFDD
 14509                           plusw2	equ	0xFDB
 14510                           fsr2h	equ	0xFDA
 14511                           fsr2l	equ	0xFD9
 14512                           status	equ	0xFD8
 14513                           
 14514 ;; *************** function _ads1115_write_reg *****************
 14515 ;; Defined at:
 14516 ;;		line 17 in file "src/driver/ads1115.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;  pAds1115        2    2[BANK0 ] PTR struct .
 14519 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14520 ;;  addr            1    4[BANK0 ] unsigned char 
 14521 ;;  value           2    5[BANK0 ] unsigned int 
 14522 ;; Auto vars:     Size  Location     Type
 14523 ;;		None
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  1    wreg      void 
 14526 ;; Registers used:
 14527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14528 ;; Tracked objects:
 14529 ;;		On entry : 0/0
 14530 ;;		On exit  : 0/0
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14533 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14536 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14537 ;;Total ram usage:        5 bytes
 14538 ;; Hardware stack levels used:    1
 14539 ;; Hardware stack levels required when called:    7
 14540 ;; This function calls:
 14541 ;;		_iic_send_byte
 14542 ;;		_iic_start
 14543 ;;		_iic_stop
 14544 ;; This function is called by:
 14545 ;;		_ads1115_start_conversion
 14546 ;;		_ads1115_set_threshold_lo
 14547 ;;		_ads1115_set_threshold_hi
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           	psect	text78
 14552  00537E                     __ptext78:
 14553                           	opt stack 0
 14554  00537E                     _ads1115_write_reg:
 14555                           	opt stack 19
 14556                           
 14557                           ;ads1115.c: 19: pAds1115->iic_start();
 14558                           
 14559                           ;incstack = 0
 14560  00537E  0100               	movlb	0	; () banked
 14561  005380  EE20 F006          	lfsr	2,6
 14562  005384  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14563  005386  26D9               	addwf	fsr2l,f,c
 14564  005388  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14565  00538A  22DA               	addwfc	fsr2h,f,c
 14566  00538C  D801               	call	u10348
 14567  00538E  D00A               	goto	u10349
 14568  005390                     u10348:
 14569  005390  0005               	push	
 14570  005392  6EFA               	movwf	pclath,c
 14571  005394  50DE               	movf	postinc2,w,c
 14572  005396  6EFD               	movwf	tosl,c
 14573  005398  50DE               	movf	postinc2,w,c
 14574  00539A  6EFE               	movwf	tosh,c
 14575  00539C  50F8               	movf	tblptru,w,c
 14576  00539E  6EFF               	movwf	tosu,c
 14577  0053A0  50FA               	movf	pclath,w,c
 14578  0053A2  0012               	return		;indir
 14579  0053A4                     u10349:
 14580                           
 14581                           ;ads1115.c: 21: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 14582  0053A4  0100               	movlb	0	; () banked
 14583  0053A6  EE20 F00A          	lfsr	2,10
 14584  0053AA  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14585  0053AC  26D9               	addwf	fsr2l,f,c
 14586  0053AE  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14587  0053B0  22DA               	addwfc	fsr2h,f,c
 14588  0053B2  D801               	call	u10358
 14589  0053B4  D012               	goto	u10359
 14590  0053B6                     u10358:
 14591  0053B6  0005               	push	
 14592  0053B8  6EFA               	movwf	pclath,c
 14593  0053BA  50DE               	movf	postinc2,w,c
 14594  0053BC  6EFD               	movwf	tosl,c
 14595  0053BE  50DE               	movf	postinc2,w,c
 14596  0053C0  6EFE               	movwf	tosh,c
 14597  0053C2  50F8               	movf	tblptru,w,c
 14598  0053C4  6EFF               	movwf	tosu,c
 14599  0053C6  50FA               	movf	pclath,w,c
 14600  0053C8  0100               	movlb	0	; () banked
 14601  0053CA  EE20 F001          	lfsr	2,1
 14602  0053CE  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14603  0053D0  26D9               	addwf	fsr2l,f,c
 14604  0053D2  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14605  0053D4  22DA               	addwfc	fsr2h,f,c
 14606  0053D6  50DF               	movf	indf2,w,c
 14607  0053D8  0012               	return		;indir
 14608  0053DA                     u10359:
 14609                           
 14610                           ;ads1115.c: 22: pAds1115->iic_send_byte(addr);
 14611  0053DA  0100               	movlb	0	; () banked
 14612  0053DC  EE20 F00A          	lfsr	2,10
 14613  0053E0  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14614  0053E2  26D9               	addwf	fsr2l,f,c
 14615  0053E4  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14616  0053E6  22DA               	addwfc	fsr2h,f,c
 14617  0053E8  D801               	call	u10368
 14618  0053EA  D00C               	goto	u10369
 14619  0053EC                     u10368:
 14620  0053EC  0005               	push	
 14621  0053EE  6EFA               	movwf	pclath,c
 14622  0053F0  50DE               	movf	postinc2,w,c
 14623  0053F2  6EFD               	movwf	tosl,c
 14624  0053F4  50DE               	movf	postinc2,w,c
 14625  0053F6  6EFE               	movwf	tosh,c
 14626  0053F8  50F8               	movf	tblptru,w,c
 14627  0053FA  6EFF               	movwf	tosu,c
 14628  0053FC  50FA               	movf	pclath,w,c
 14629  0053FE  0100               	movlb	0	; () banked
 14630  005400  5164               	movf	ads1115_write_reg@addr& (0+255),w,b
 14631  005402  0012               	return		;indir
 14632  005404                     u10369:
 14633                           
 14634                           ;ads1115.c: 24: pAds1115->iic_send_byte((uint8_t)(value>>8));
 14635  005404  0100               	movlb	0	; () banked
 14636  005406  EE20 F00A          	lfsr	2,10
 14637  00540A  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14638  00540C  26D9               	addwf	fsr2l,f,c
 14639  00540E  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14640  005410  22DA               	addwfc	fsr2h,f,c
 14641  005412  D801               	call	u10378
 14642  005414  D00C               	goto	u10379
 14643  005416                     u10378:
 14644  005416  0005               	push	
 14645  005418  6EFA               	movwf	pclath,c
 14646  00541A  50DE               	movf	postinc2,w,c
 14647  00541C  6EFD               	movwf	tosl,c
 14648  00541E  50DE               	movf	postinc2,w,c
 14649  005420  6EFE               	movwf	tosh,c
 14650  005422  50F8               	movf	tblptru,w,c
 14651  005424  6EFF               	movwf	tosu,c
 14652  005426  50FA               	movf	pclath,w,c
 14653  005428  0100               	movlb	0	; () banked
 14654  00542A  5166               	movf	(ads1115_write_reg@value+1)& (0+255),w,b
 14655  00542C  0012               	return		;indir
 14656  00542E                     u10379:
 14657                           
 14658                           ;ads1115.c: 25: pAds1115->iic_send_byte((uint8_t)(value&0xff));
 14659  00542E  0100               	movlb	0	; () banked
 14660  005430  EE20 F00A          	lfsr	2,10
 14661  005434  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14662  005436  26D9               	addwf	fsr2l,f,c
 14663  005438  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14664  00543A  22DA               	addwfc	fsr2h,f,c
 14665  00543C  D801               	call	u10388
 14666  00543E  D00C               	goto	u10389
 14667  005440                     u10388:
 14668  005440  0005               	push	
 14669  005442  6EFA               	movwf	pclath,c
 14670  005444  50DE               	movf	postinc2,w,c
 14671  005446  6EFD               	movwf	tosl,c
 14672  005448  50DE               	movf	postinc2,w,c
 14673  00544A  6EFE               	movwf	tosh,c
 14674  00544C  50F8               	movf	tblptru,w,c
 14675  00544E  6EFF               	movwf	tosu,c
 14676  005450  50FA               	movf	pclath,w,c
 14677  005452  0100               	movlb	0	; () banked
 14678  005454  5165               	movf	ads1115_write_reg@value& (0+255),w,b
 14679  005456  0012               	return		;indir
 14680  005458                     u10389:
 14681                           
 14682                           ;ads1115.c: 26: pAds1115->iic_stop();
 14683  005458  0100               	movlb	0	; () banked
 14684  00545A  EE20 F008          	lfsr	2,8
 14685  00545E  5162               	movf	ads1115_write_reg@pAds1115& (0+255),w,b
 14686  005460  26D9               	addwf	fsr2l,f,c
 14687  005462  5163               	movf	(ads1115_write_reg@pAds1115+1)& (0+255),w,b
 14688  005464  22DA               	addwfc	fsr2h,f,c
 14689  005466  D801               	call	u10398
 14690  005468  0012               	return	
 14691  00546A                     u10398:
 14692  00546A  0005               	push	
 14693  00546C  6EFA               	movwf	pclath,c
 14694  00546E  50DE               	movf	postinc2,w,c
 14695  005470  6EFD               	movwf	tosl,c
 14696  005472  50DE               	movf	postinc2,w,c
 14697  005474  6EFE               	movwf	tosh,c
 14698  005476  50F8               	movf	tblptru,w,c
 14699  005478  6EFF               	movwf	tosu,c
 14700  00547A  50FA               	movf	pclath,w,c
 14701  00547C  0012               	return		;indir
 14702  00547E                     __end_of_ads1115_write_reg:
 14703                           	opt stack 0
 14704                           tosu	equ	0xFFF
 14705                           tosh	equ	0xFFE
 14706                           tosl	equ	0xFFD
 14707                           pclath	equ	0xFFA
 14708                           tblptru	equ	0xFF8
 14709                           tblptrh	equ	0xFF7
 14710                           tblptrl	equ	0xFF6
 14711                           tablat	equ	0xFF5
 14712                           prodh	equ	0xFF4
 14713                           prodl	equ	0xFF3
 14714                           intcon	equ	0xFF2
 14715                           indf0	equ	0xFEF
 14716                           postinc0	equ	0xFEE
 14717                           fsr0h	equ	0xFEA
 14718                           fsr0l	equ	0xFE9
 14719                           wreg	equ	0xFE8
 14720                           postdec1	equ	0xFE5
 14721                           plusw1	equ	0xFE3
 14722                           fsr1h	equ	0xFE2
 14723                           fsr1l	equ	0xFE1
 14724                           indf2	equ	0xFDF
 14725                           postinc2	equ	0xFDE
 14726                           postdec2	equ	0xFDD
 14727                           plusw2	equ	0xFDB
 14728                           fsr2h	equ	0xFDA
 14729                           fsr2l	equ	0xFD9
 14730                           status	equ	0xFD8
 14731                           
 14732 ;; *************** function _ads1115_set_mux *****************
 14733 ;; Defined at:
 14734 ;;		line 54 in file "src/driver/ads1115.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 14737 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14738 ;;  mux             1    2[BANK0 ] enum E6976
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;		None
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      void 
 14743 ;; Registers used:
 14744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14750 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14753 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14754 ;;Total ram usage:        4 bytes
 14755 ;; Hardware stack levels used:    1
 14756 ;; Hardware stack levels required when called:    4
 14757 ;; This function calls:
 14758 ;;		Nothing
 14759 ;; This function is called by:
 14760 ;;		_sample_diff_pr_chip_fast
 14761 ;;		_sample_diff_pr_chip_slow
 14762 ;;		_sample_pr_chip_comm
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text79
 14767  00781A                     __ptext79:
 14768                           	opt stack 0
 14769  00781A                     _ads1115_set_mux:
 14770                           	opt stack 23
 14771                           
 14772                           ;ads1115.c: 56: pAds1115->config.bits.MUX=mux;
 14773                           
 14774                           ;incstack = 0
 14775  00781A  C062  F020         	movff	ads1115_set_mux@mux,??_ads1115_set_mux
 14776  00781E  0100               	movlb	0	; () banked
 14777  007820  EE20 F003          	lfsr	2,3
 14778  007824  5160               	movf	ads1115_set_mux@pAds1115& (0+255),w,b
 14779  007826  26D9               	addwf	fsr2l,f,c
 14780  007828  5161               	movf	(ads1115_set_mux@pAds1115+1)& (0+255),w,b
 14781  00782A  22DA               	addwfc	fsr2h,f,c
 14782  00782C  3A20               	swapf	??_ads1115_set_mux,f,c
 14783  00782E  0100               	movlb	0	; () banked
 14784  007830  50DF               	movf	223,w,c
 14785  007832  1820               	xorwf	??_ads1115_set_mux,w,c
 14786  007834  0B8F               	andlw	-113
 14787  007836  1820               	xorwf	??_ads1115_set_mux,w,c
 14788  007838  0100               	movlb	0	; () banked
 14789  00783A  6EDF               	movwf	223,c
 14790                           
 14791                           ; BSR set to: 0
 14792  00783C  0012               	return		;funcret
 14793  00783E                     __end_of_ads1115_set_mux:
 14794                           	opt stack 0
 14795                           tosu	equ	0xFFF
 14796                           tosh	equ	0xFFE
 14797                           tosl	equ	0xFFD
 14798                           pclath	equ	0xFFA
 14799                           tblptru	equ	0xFF8
 14800                           tblptrh	equ	0xFF7
 14801                           tblptrl	equ	0xFF6
 14802                           tablat	equ	0xFF5
 14803                           prodh	equ	0xFF4
 14804                           prodl	equ	0xFF3
 14805                           intcon	equ	0xFF2
 14806                           indf0	equ	0xFEF
 14807                           postinc0	equ	0xFEE
 14808                           fsr0h	equ	0xFEA
 14809                           fsr0l	equ	0xFE9
 14810                           wreg	equ	0xFE8
 14811                           postdec1	equ	0xFE5
 14812                           plusw1	equ	0xFE3
 14813                           fsr1h	equ	0xFE2
 14814                           fsr1l	equ	0xFE1
 14815                           indf2	equ	0xFDF
 14816                           postinc2	equ	0xFDE
 14817                           postdec2	equ	0xFDD
 14818                           plusw2	equ	0xFDB
 14819                           fsr2h	equ	0xFDA
 14820                           fsr2l	equ	0xFD9
 14821                           status	equ	0xFD8
 14822                           
 14823 ;; *************** function _ads1115_read_conversion *****************
 14824 ;; Defined at:
 14825 ;;		line 127 in file "src/driver/ads1115.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;  pAds1115        2   10[BANK0 ] PTR struct .
 14828 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;  result          2   13[BANK0 ] unsigned int 
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  2   10[BANK0 ] unsigned int 
 14833 ;; Registers used:
 14834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14844 ;;Total ram usage:        5 bytes
 14845 ;; Hardware stack levels used:    1
 14846 ;; Hardware stack levels required when called:    8
 14847 ;; This function calls:
 14848 ;;		_ads1115_read_reg
 14849 ;; This function is called by:
 14850 ;;		_sample_diff_pr_chip_fast
 14851 ;;		_sample_diff_pr_chip_slow
 14852 ;;		_sample_pr_chip_comm
 14853 ;; This function uses a non-reentrant model
 14854 ;;
 14855                           
 14856                           	psect	text80
 14857  0071A8                     __ptext80:
 14858                           	opt stack 0
 14859  0071A8                     _ads1115_read_conversion:
 14860                           	opt stack 19
 14861                           
 14862                           ;ads1115.c: 129: uint16_t result;
 14863                           ;ads1115.c: 130: result=ads1115_read_reg(pAds1115,(0x00));
 14864                           
 14865                           ; BSR set to: 0
 14866                           ;incstack = 0
 14867  0071A8  C06A  F064         	movff	ads1115_read_conversion@pAds1115,ads1115_read_reg@pAds1115
 14868  0071AC  C06B  F065         	movff	ads1115_read_conversion@pAds1115+1,ads1115_read_reg@pAds1115+1
 14869  0071B0  0E00               	movlw	0
 14870  0071B2  0100               	movlb	0	; () banked
 14871  0071B4  6F66               	movwf	ads1115_read_reg@addr& (0+255),b
 14872  0071B6  EC33  F01F         	call	_ads1115_read_reg
 14873  0071BA  C064  F06D         	movff	?_ads1115_read_reg,ads1115_read_conversion@result
 14874  0071BE  C065  F06E         	movff	?_ads1115_read_reg+1,ads1115_read_conversion@result+1
 14875                           
 14876                           ;ads1115.c: 131: if(pAds1115->chip<ADS1113){
 14877  0071C2  C06A  FFD9         	movff	ads1115_read_conversion@pAds1115,fsr2l
 14878  0071C6  C06B  FFDA         	movff	ads1115_read_conversion@pAds1115+1,fsr2h
 14879  0071CA  0E03               	movlw	3
 14880  0071CC  60DF               	cpfslt	indf2,c
 14881  0071CE  D00A               	goto	l11930
 14882                           
 14883                           ;ads1115.c: 132: result >>= 4;
 14884  0071D0  0100               	movlb	0	; () banked
 14885  0071D2  3B6D               	swapf	ads1115_read_conversion@result& (0+255),f,b
 14886  0071D4  3B6E               	swapf	(ads1115_read_conversion@result+1)& (0+255),f,b
 14887  0071D6  0E0F               	movlw	15
 14888  0071D8  176D               	andwf	ads1115_read_conversion@result& (0+255),f,b
 14889  0071DA  516E               	movf	(ads1115_read_conversion@result+1)& (0+255),w,b
 14890  0071DC  0BF0               	andlw	240
 14891  0071DE  136D               	iorwf	ads1115_read_conversion@result& (0+255),f,b
 14892  0071E0  0E0F               	movlw	15
 14893  0071E2  176E               	andwf	(ads1115_read_conversion@result+1)& (0+255),f,b
 14894  0071E4                     l11930:
 14895                           
 14896                           ;ads1115.c: 133: }
 14897                           ;ads1115.c: 134: return result;
 14898  0071E4  C06D  F06A         	movff	ads1115_read_conversion@result,?_ads1115_read_conversion
 14899  0071E8  C06E  F06B         	movff	ads1115_read_conversion@result+1,?_ads1115_read_conversion+1
 14900  0071EC  0012               	return	
 14901  0071EE                     __end_of_ads1115_read_conversion:
 14902                           	opt stack 0
 14903                           tosu	equ	0xFFF
 14904                           tosh	equ	0xFFE
 14905                           tosl	equ	0xFFD
 14906                           pclath	equ	0xFFA
 14907                           tblptru	equ	0xFF8
 14908                           tblptrh	equ	0xFF7
 14909                           tblptrl	equ	0xFF6
 14910                           tablat	equ	0xFF5
 14911                           prodh	equ	0xFF4
 14912                           prodl	equ	0xFF3
 14913                           intcon	equ	0xFF2
 14914                           indf0	equ	0xFEF
 14915                           postinc0	equ	0xFEE
 14916                           fsr0h	equ	0xFEA
 14917                           fsr0l	equ	0xFE9
 14918                           wreg	equ	0xFE8
 14919                           postdec1	equ	0xFE5
 14920                           plusw1	equ	0xFE3
 14921                           fsr1h	equ	0xFE2
 14922                           fsr1l	equ	0xFE1
 14923                           indf2	equ	0xFDF
 14924                           postinc2	equ	0xFDE
 14925                           postdec2	equ	0xFDD
 14926                           plusw2	equ	0xFDB
 14927                           fsr2h	equ	0xFDA
 14928                           fsr2l	equ	0xFD9
 14929                           status	equ	0xFD8
 14930                           
 14931 ;; *************** function _ads1115_read_reg *****************
 14932 ;; Defined at:
 14933 ;;		line 29 in file "src/driver/ads1115.c"
 14934 ;; Parameters:    Size  Location     Type
 14935 ;;  pAds1115        2    4[BANK0 ] PTR struct .
 14936 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 14937 ;;  addr            1    6[BANK0 ] unsigned char 
 14938 ;; Auto vars:     Size  Location     Type
 14939 ;;  t16             2    8[BANK0 ] unsigned int 
 14940 ;; Return value:  Size  Location     Type
 14941 ;;                  2    4[BANK0 ] unsigned int 
 14942 ;; Registers used:
 14943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14944 ;; Tracked objects:
 14945 ;;		On entry : 0/0
 14946 ;;		On exit  : 0/0
 14947 ;;		Unchanged: 0/0
 14948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14949 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14950 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14952 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14953 ;;Total ram usage:        6 bytes
 14954 ;; Hardware stack levels used:    1
 14955 ;; Hardware stack levels required when called:    7
 14956 ;; This function calls:
 14957 ;;		_iic_received_byte_if_ack
 14958 ;;		_iic_send_byte
 14959 ;;		_iic_start
 14960 ;;		_iic_stop
 14961 ;; This function is called by:
 14962 ;;		_ads1115_read_conversion
 14963 ;; This function uses a non-reentrant model
 14964 ;;
 14965                           
 14966                           	psect	text81
 14967  003E66                     __ptext81:
 14968                           	opt stack 0
 14969  003E66                     _ads1115_read_reg:
 14970                           	opt stack 19
 14971                           
 14972                           ;ads1115.c: 31: uint16_t t16=0;
 14973                           
 14974                           ;incstack = 0
 14975  003E66  0E00               	movlw	0
 14976  003E68  0100               	movlb	0	; () banked
 14977  003E6A  6F69               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 14978  003E6C  0E00               	movlw	0
 14979  003E6E  6F68               	movwf	ads1115_read_reg@t16& (0+255),b
 14980                           
 14981                           ; BSR set to: 0
 14982                           ;ads1115.c: 32: pAds1115->iic_start();
 14983  003E70  0100               	movlb	0	; () banked
 14984  003E72  EE20 F006          	lfsr	2,6
 14985  003E76  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 14986  003E78  26D9               	addwf	fsr2l,f,c
 14987  003E7A  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 14988  003E7C  22DA               	addwfc	fsr2h,f,c
 14989  003E7E  D801               	call	u10408
 14990  003E80  D00A               	goto	l11510
 14991  003E82                     u10408:
 14992  003E82  0005               	push	
 14993  003E84  6EFA               	movwf	pclath,c
 14994  003E86  50DE               	movf	postinc2,w,c
 14995  003E88  6EFD               	movwf	tosl,c
 14996  003E8A  50DE               	movf	postinc2,w,c
 14997  003E8C  6EFE               	movwf	tosh,c
 14998  003E8E  50F8               	movf	tblptru,w,c
 14999  003E90  6EFF               	movwf	tosu,c
 15000  003E92  50FA               	movf	pclath,w,c
 15001  003E94  0012               	return		;indir
 15002  003E96                     l11510:
 15003                           
 15004                           ;ads1115.c: 34: pAds1115->iic_send_byte(pAds1115->slaveAddr);
 15005  003E96  0100               	movlb	0	; () banked
 15006  003E98  EE20 F00A          	lfsr	2,10
 15007  003E9C  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15008  003E9E  26D9               	addwf	fsr2l,f,c
 15009  003EA0  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15010  003EA2  22DA               	addwfc	fsr2h,f,c
 15011  003EA4  D801               	call	u10418
 15012  003EA6  D012               	goto	l11512
 15013  003EA8                     u10418:
 15014  003EA8  0005               	push	
 15015  003EAA  6EFA               	movwf	pclath,c
 15016  003EAC  50DE               	movf	postinc2,w,c
 15017  003EAE  6EFD               	movwf	tosl,c
 15018  003EB0  50DE               	movf	postinc2,w,c
 15019  003EB2  6EFE               	movwf	tosh,c
 15020  003EB4  50F8               	movf	tblptru,w,c
 15021  003EB6  6EFF               	movwf	tosu,c
 15022  003EB8  50FA               	movf	pclath,w,c
 15023  003EBA  0100               	movlb	0	; () banked
 15024  003EBC  EE20 F001          	lfsr	2,1
 15025  003EC0  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15026  003EC2  26D9               	addwf	fsr2l,f,c
 15027  003EC4  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15028  003EC6  22DA               	addwfc	fsr2h,f,c
 15029  003EC8  50DF               	movf	indf2,w,c
 15030  003ECA  0012               	return		;indir
 15031  003ECC                     l11512:
 15032                           
 15033                           ;ads1115.c: 35: pAds1115->iic_send_byte(addr);
 15034  003ECC  0100               	movlb	0	; () banked
 15035  003ECE  EE20 F00A          	lfsr	2,10
 15036  003ED2  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15037  003ED4  26D9               	addwf	fsr2l,f,c
 15038  003ED6  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15039  003ED8  22DA               	addwfc	fsr2h,f,c
 15040  003EDA  D801               	call	u10428
 15041  003EDC  D00C               	goto	l11514
 15042  003EDE                     u10428:
 15043  003EDE  0005               	push	
 15044  003EE0  6EFA               	movwf	pclath,c
 15045  003EE2  50DE               	movf	postinc2,w,c
 15046  003EE4  6EFD               	movwf	tosl,c
 15047  003EE6  50DE               	movf	postinc2,w,c
 15048  003EE8  6EFE               	movwf	tosh,c
 15049  003EEA  50F8               	movf	tblptru,w,c
 15050  003EEC  6EFF               	movwf	tosu,c
 15051  003EEE  50FA               	movf	pclath,w,c
 15052  003EF0  0100               	movlb	0	; () banked
 15053  003EF2  5166               	movf	ads1115_read_reg@addr& (0+255),w,b
 15054  003EF4  0012               	return		;indir
 15055  003EF6                     l11514:
 15056                           
 15057                           ;ads1115.c: 36: pAds1115->iic_stop();
 15058  003EF6  0100               	movlb	0	; () banked
 15059  003EF8  EE20 F008          	lfsr	2,8
 15060  003EFC  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15061  003EFE  26D9               	addwf	fsr2l,f,c
 15062  003F00  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15063  003F02  22DA               	addwfc	fsr2h,f,c
 15064  003F04  D801               	call	u10438
 15065  003F06  D00A               	goto	l11516
 15066  003F08                     u10438:
 15067  003F08  0005               	push	
 15068  003F0A  6EFA               	movwf	pclath,c
 15069  003F0C  50DE               	movf	postinc2,w,c
 15070  003F0E  6EFD               	movwf	tosl,c
 15071  003F10  50DE               	movf	postinc2,w,c
 15072  003F12  6EFE               	movwf	tosh,c
 15073  003F14  50F8               	movf	tblptru,w,c
 15074  003F16  6EFF               	movwf	tosu,c
 15075  003F18  50FA               	movf	pclath,w,c
 15076  003F1A  0012               	return		;indir
 15077  003F1C                     l11516:
 15078                           
 15079                           ;ads1115.c: 38: pAds1115->iic_start();
 15080  003F1C  0100               	movlb	0	; () banked
 15081  003F1E  EE20 F006          	lfsr	2,6
 15082  003F22  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15083  003F24  26D9               	addwf	fsr2l,f,c
 15084  003F26  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15085  003F28  22DA               	addwfc	fsr2h,f,c
 15086  003F2A  D801               	call	u10448
 15087  003F2C  D00A               	goto	l11518
 15088  003F2E                     u10448:
 15089  003F2E  0005               	push	
 15090  003F30  6EFA               	movwf	pclath,c
 15091  003F32  50DE               	movf	postinc2,w,c
 15092  003F34  6EFD               	movwf	tosl,c
 15093  003F36  50DE               	movf	postinc2,w,c
 15094  003F38  6EFE               	movwf	tosh,c
 15095  003F3A  50F8               	movf	tblptru,w,c
 15096  003F3C  6EFF               	movwf	tosu,c
 15097  003F3E  50FA               	movf	pclath,w,c
 15098  003F40  0012               	return		;indir
 15099  003F42                     l11518:
 15100                           
 15101                           ;ads1115.c: 39: pAds1115->iic_send_byte((pAds1115->slaveAddr)+1);
 15102  003F42  0100               	movlb	0	; () banked
 15103  003F44  EE20 F00A          	lfsr	2,10
 15104  003F48  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15105  003F4A  26D9               	addwf	fsr2l,f,c
 15106  003F4C  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15107  003F4E  22DA               	addwfc	fsr2h,f,c
 15108  003F50  D801               	call	u10458
 15109  003F52  D016               	goto	l11520
 15110  003F54                     u10458:
 15111  003F54  0005               	push	
 15112  003F56  6EFA               	movwf	pclath,c
 15113  003F58  50DE               	movf	postinc2,w,c
 15114  003F5A  6EFD               	movwf	tosl,c
 15115  003F5C  50DE               	movf	postinc2,w,c
 15116  003F5E  6EFE               	movwf	tosh,c
 15117  003F60  50F8               	movf	tblptru,w,c
 15118  003F62  6EFF               	movwf	tosu,c
 15119  003F64  50FA               	movf	pclath,w,c
 15120  003F66  0100               	movlb	0	; () banked
 15121  003F68  EE20 F001          	lfsr	2,1
 15122  003F6C  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15123  003F6E  26D9               	addwf	fsr2l,f,c
 15124  003F70  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15125  003F72  22DA               	addwfc	fsr2h,f,c
 15126  003F74  50DF               	movf	indf2,w,c
 15127  003F76  0100               	movlb	0	; () banked
 15128  003F78  6F67               	movwf	??_ads1115_read_reg& (0+255),b
 15129  003F7A  0100               	movlb	0	; () banked
 15130  003F7C  2967               	incf	??_ads1115_read_reg& (0+255),w,b
 15131  003F7E  0012               	return		;indir
 15132  003F80                     l11520:
 15133                           
 15134                           ;ads1115.c: 40: t16=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 15135  003F80  0100               	movlb	0	; () banked
 15136  003F82  EE20 F00E          	lfsr	2,14
 15137  003F86  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15138  003F88  26D9               	addwf	fsr2l,f,c
 15139  003F8A  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15140  003F8C  22DA               	addwfc	fsr2h,f,c
 15141  003F8E  D801               	call	u10468
 15142  003F90  D00B               	goto	u10469
 15143  003F92                     u10468:
 15144  003F92  0005               	push	
 15145  003F94  6EFA               	movwf	pclath,c
 15146  003F96  50DE               	movf	postinc2,w,c
 15147  003F98  6EFD               	movwf	tosl,c
 15148  003F9A  50DE               	movf	postinc2,w,c
 15149  003F9C  6EFE               	movwf	tosh,c
 15150  003F9E  50F8               	movf	tblptru,w,c
 15151  003FA0  6EFF               	movwf	tosu,c
 15152  003FA2  50FA               	movf	pclath,w,c
 15153  003FA4  0E00               	movlw	0
 15154  003FA6  0012               	return		;indir
 15155  003FA8                     u10469:
 15156  003FA8  0100               	movlb	0	; () banked
 15157  003FAA  6F67               	movwf	??_ads1115_read_reg& (0+255),b
 15158  003FAC  0100               	movlb	0	; () banked
 15159  003FAE  5167               	movf	??_ads1115_read_reg& (0+255),w,b
 15160  003FB0  0100               	movlb	0	; () banked
 15161  003FB2  6F68               	movwf	ads1115_read_reg@t16& (0+255),b
 15162  003FB4  6B69               	clrf	(ads1115_read_reg@t16+1)& (0+255),b
 15163                           
 15164                           ; BSR set to: 0
 15165                           ;ads1115.c: 41: t16<<=8;
 15166  003FB6  0100               	movlb	0	; () banked
 15167  003FB8  5168               	movf	ads1115_read_reg@t16& (0+255),w,b
 15168  003FBA  6F69               	movwf	(ads1115_read_reg@t16+1)& (0+255),b
 15169  003FBC  6B68               	clrf	ads1115_read_reg@t16& (0+255),b
 15170                           
 15171                           ;ads1115.c: 42: t16|=pAds1115->iic_received_byte_if_ack(IIC_ACK);
 15172  003FBE  0100               	movlb	0	; () banked
 15173  003FC0  EE20 F00E          	lfsr	2,14
 15174  003FC4  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15175  003FC6  26D9               	addwf	fsr2l,f,c
 15176  003FC8  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15177  003FCA  22DA               	addwfc	fsr2h,f,c
 15178  003FCC  D801               	call	u10478
 15179  003FCE  D00B               	goto	u10479
 15180  003FD0                     u10478:
 15181  003FD0  0005               	push	
 15182  003FD2  6EFA               	movwf	pclath,c
 15183  003FD4  50DE               	movf	postinc2,w,c
 15184  003FD6  6EFD               	movwf	tosl,c
 15185  003FD8  50DE               	movf	postinc2,w,c
 15186  003FDA  6EFE               	movwf	tosh,c
 15187  003FDC  50F8               	movf	tblptru,w,c
 15188  003FDE  6EFF               	movwf	tosu,c
 15189  003FE0  50FA               	movf	pclath,w,c
 15190  003FE2  0E00               	movlw	0
 15191  003FE4  0012               	return		;indir
 15192  003FE6                     u10479:
 15193  003FE6  0100               	movlb	0	; () banked
 15194  003FE8  6F67               	movwf	??_ads1115_read_reg& (0+255),b
 15195  003FEA  0100               	movlb	0	; () banked
 15196  003FEC  5167               	movf	??_ads1115_read_reg& (0+255),w,b
 15197  003FEE  0100               	movlb	0	; () banked
 15198  003FF0  1368               	iorwf	ads1115_read_reg@t16& (0+255),f,b
 15199                           
 15200                           ;ads1115.c: 44: pAds1115->iic_stop();
 15201  003FF2  0100               	movlb	0	; () banked
 15202  003FF4  EE20 F008          	lfsr	2,8
 15203  003FF8  5164               	movf	ads1115_read_reg@pAds1115& (0+255),w,b
 15204  003FFA  26D9               	addwf	fsr2l,f,c
 15205  003FFC  5165               	movf	(ads1115_read_reg@pAds1115+1)& (0+255),w,b
 15206  003FFE  22DA               	addwfc	fsr2h,f,c
 15207  004000  D801               	call	u10488
 15208  004002  D00A               	goto	l11524
 15209  004004                     u10488:
 15210  004004  0005               	push	
 15211  004006  6EFA               	movwf	pclath,c
 15212  004008  50DE               	movf	postinc2,w,c
 15213  00400A  6EFD               	movwf	tosl,c
 15214  00400C  50DE               	movf	postinc2,w,c
 15215  00400E  6EFE               	movwf	tosh,c
 15216  004010  50F8               	movf	tblptru,w,c
 15217  004012  6EFF               	movwf	tosu,c
 15218  004014  50FA               	movf	pclath,w,c
 15219  004016  0012               	return		;indir
 15220  004018                     l11524:
 15221                           
 15222                           ;ads1115.c: 45: return t16;
 15223  004018  C068  F064         	movff	ads1115_read_reg@t16,?_ads1115_read_reg
 15224  00401C  C069  F065         	movff	ads1115_read_reg@t16+1,?_ads1115_read_reg+1
 15225  004020  0012               	return	
 15226  004022                     __end_of_ads1115_read_reg:
 15227                           	opt stack 0
 15228                           tosu	equ	0xFFF
 15229                           tosh	equ	0xFFE
 15230                           tosl	equ	0xFFD
 15231                           pclath	equ	0xFFA
 15232                           tblptru	equ	0xFF8
 15233                           tblptrh	equ	0xFF7
 15234                           tblptrl	equ	0xFF6
 15235                           tablat	equ	0xFF5
 15236                           prodh	equ	0xFF4
 15237                           prodl	equ	0xFF3
 15238                           intcon	equ	0xFF2
 15239                           indf0	equ	0xFEF
 15240                           postinc0	equ	0xFEE
 15241                           fsr0h	equ	0xFEA
 15242                           fsr0l	equ	0xFE9
 15243                           wreg	equ	0xFE8
 15244                           postdec1	equ	0xFE5
 15245                           plusw1	equ	0xFE3
 15246                           fsr1h	equ	0xFE2
 15247                           fsr1l	equ	0xFE1
 15248                           indf2	equ	0xFDF
 15249                           postinc2	equ	0xFDE
 15250                           postdec2	equ	0xFDD
 15251                           plusw2	equ	0xFDB
 15252                           fsr2h	equ	0xFDA
 15253                           fsr2l	equ	0xFD9
 15254                           status	equ	0xFD8
 15255                           
 15256 ;; *************** function ___x_sample_fifo *****************
 15257 ;; Defined at:
 15258 ;;		line 61 in file "src/api/sample.c"
 15259 ;; Parameters:    Size  Location     Type
 15260 ;;  buf             2   14[BANK0 ] PTR int 
 15261 ;;		 -> sampBufPr(8), sampBufPt100ExB(8), sampBufPt100ExA(8), sampBufDiffPr_D23(16), 
 15262 ;;		 -> sampBufDiffPr_D01(16), 
 15263 ;;  x               2   16[BANK0 ] int 
 15264 ;;  len             1   18[BANK0 ] unsigned char 
 15265 ;; Auto vars:     Size  Location     Type
 15266 ;;  ret             4   25[BANK0 ] long 
 15267 ;;  i               1   29[BANK0 ] unsigned char 
 15268 ;; Return value:  Size  Location     Type
 15269 ;;                  2   14[BANK0 ] int 
 15270 ;; Registers used:
 15271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15272 ;; Tracked objects:
 15273 ;;		On entry : 0/0
 15274 ;;		On exit  : 0/0
 15275 ;;		Unchanged: 0/0
 15276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15277 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15278 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15279 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15280 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15281 ;;Total ram usage:       16 bytes
 15282 ;; Hardware stack levels used:    1
 15283 ;; Hardware stack levels required when called:    5
 15284 ;; This function calls:
 15285 ;;		___aldiv
 15286 ;; This function is called by:
 15287 ;;		_sample_diff_pr_chip_slow
 15288 ;;		_sample_pr_chip_comm
 15289 ;; This function uses a non-reentrant model
 15290 ;;
 15291                           
 15292                           	psect	text82
 15293  004500                     __ptext82:
 15294                           	opt stack 0
 15295  004500                     ___x_sample_fifo:
 15296                           	opt stack 22
 15297                           
 15298                           ;sample.c: 63: int32_t ret=0;
 15299                           
 15300                           ;incstack = 0
 15301  004500  0E00               	movlw	0
 15302  004502  0100               	movlb	0	; () banked
 15303  004504  6F79               	movwf	___x_sample_fifo@ret& (0+255),b
 15304  004506  0E00               	movlw	0
 15305  004508  6F7A               	movwf	(___x_sample_fifo@ret+1)& (0+255),b
 15306  00450A  0E00               	movlw	0
 15307  00450C  6F7B               	movwf	(___x_sample_fifo@ret+2)& (0+255),b
 15308  00450E  0E00               	movlw	0
 15309  004510  6F7C               	movwf	(___x_sample_fifo@ret+3)& (0+255),b
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;sample.c: 64: uint8_t i;
 15313                           ;sample.c: 65: for(i=len-1;i>0;i--){
 15314  004512  0100               	movlb	0	; () banked
 15315  004514  0572               	decf	___x_sample_fifo@len& (0+255),w,b
 15316  004516  0100               	movlb	0	; () banked
 15317  004518  6F7D               	movwf	___x_sample_fifo@i& (0+255),b
 15318  00451A                     l11896:
 15319                           
 15320                           ; BSR set to: 0
 15321  00451A  0100               	movlb	0	; () banked
 15322  00451C  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 15323  00451E  0100               	movlb	0	; () banked
 15324  004520  B4D8               	btfsc	status,2,c
 15325  004522  D05C               	goto	l11908
 15326                           
 15327                           ; BSR set to: 0
 15328                           ;sample.c: 66: buf[i]=buf[i-1];
 15329                           
 15330                           ; BSR set to: 0
 15331                           
 15332                           ; BSR set to: 0
 15333  004524  0EFE               	movlw	254
 15334  004526  0100               	movlb	0	; () banked
 15335  004528  6F73               	movwf	??___x_sample_fifo& (0+255),b
 15336  00452A  0EFF               	movlw	255
 15337  00452C  0100               	movlb	0	; () banked
 15338  00452E  6F74               	movwf	(??___x_sample_fifo+1)& (0+255),b
 15339  004530  0100               	movlb	0	; () banked
 15340  004532  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 15341  004534  0100               	movlb	0	; () banked
 15342  004536  6F75               	movwf	(??___x_sample_fifo+2)& (0+255),b
 15343  004538  6B76               	clrf	(??___x_sample_fifo+3)& (0+255),b
 15344  00453A  90D8               	bcf	status,0,c
 15345  00453C  0100               	movlb	0	; () banked
 15346  00453E  3775               	rlcf	(??___x_sample_fifo+2)& (0+255),f,b
 15347  004540  3776               	rlcf	(??___x_sample_fifo+3)& (0+255),f,b
 15348  004542  0100               	movlb	0	; () banked
 15349  004544  5173               	movf	??___x_sample_fifo& (0+255),w,b
 15350  004546  0100               	movlb	0	; () banked
 15351  004548  2775               	addwf	(??___x_sample_fifo+2)& (0+255),f,b
 15352  00454A  0100               	movlb	0	; () banked
 15353  00454C  5174               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 15354  00454E  0100               	movlb	0	; () banked
 15355  004550  2376               	addwfc	(??___x_sample_fifo+3)& (0+255),f,b
 15356  004552  0100               	movlb	0	; () banked
 15357  004554  5175               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 15358  004556  0100               	movlb	0	; () banked
 15359  004558  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 15360  00455A  6ED9               	movwf	fsr2l,c
 15361  00455C  0100               	movlb	0	; () banked
 15362  00455E  5176               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 15363  004560  0100               	movlb	0	; () banked
 15364  004562  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 15365  004564  6EDA               	movwf	fsr2h,c
 15366  004566  0100               	movlb	0	; () banked
 15367  004568  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 15368  00456A  0D02               	mullw	2
 15369  00456C  50F3               	movf	prodl,w,c
 15370  00456E  0100               	movlb	0	; () banked
 15371  004570  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 15372  004572  6EE1               	movwf	fsr1l,c
 15373  004574  50F4               	movf	prodh,w,c
 15374  004576  0100               	movlb	0	; () banked
 15375  004578  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 15376  00457A  6EE2               	movwf	fsr1h,c
 15377  00457C  CFDE FFE6          	movff	postinc2,postinc1
 15378  004580  CFDD FFE5          	movff	postdec2,postdec1
 15379                           
 15380                           ; BSR set to: 0
 15381                           ;sample.c: 67: ret+=buf[i];
 15382  004584  0100               	movlb	0	; () banked
 15383  004586  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 15384  004588  0D02               	mullw	2
 15385  00458A  50F3               	movf	prodl,w,c
 15386  00458C  0100               	movlb	0	; () banked
 15387  00458E  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 15388  004590  6ED9               	movwf	fsr2l,c
 15389  004592  50F4               	movf	prodh,w,c
 15390  004594  0100               	movlb	0	; () banked
 15391  004596  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 15392  004598  6EDA               	movwf	fsr2h,c
 15393  00459A  CFDE F073          	movff	postinc2,??___x_sample_fifo
 15394  00459E  CFDD F074          	movff	postdec2,??___x_sample_fifo+1
 15395  0045A2  C073  F075         	movff	??___x_sample_fifo,??___x_sample_fifo+2
 15396  0045A6  C074  F076         	movff	??___x_sample_fifo+1,??___x_sample_fifo+3
 15397  0045AA  0E00               	movlw	0
 15398  0045AC  0100               	movlb	0	; () banked
 15399  0045AE  BF76               	btfsc	(??___x_sample_fifo+3)& (0+255),7,b
 15400  0045B0  0EFF               	movlw	255
 15401  0045B2  6F77               	movwf	(??___x_sample_fifo+4)& (0+255),b
 15402  0045B4  6F78               	movwf	(??___x_sample_fifo+5)& (0+255),b
 15403  0045B6  0100               	movlb	0	; () banked
 15404  0045B8  5175               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 15405  0045BA  0100               	movlb	0	; () banked
 15406  0045BC  2779               	addwf	___x_sample_fifo@ret& (0+255),f,b
 15407  0045BE  0100               	movlb	0	; () banked
 15408  0045C0  5176               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 15409  0045C2  0100               	movlb	0	; () banked
 15410  0045C4  237A               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 15411  0045C6  0100               	movlb	0	; () banked
 15412  0045C8  5177               	movf	(??___x_sample_fifo+4)& (0+255),w,b
 15413  0045CA  0100               	movlb	0	; () banked
 15414  0045CC  237B               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 15415  0045CE  0100               	movlb	0	; () banked
 15416  0045D0  5178               	movf	(??___x_sample_fifo+5)& (0+255),w,b
 15417  0045D2  0100               	movlb	0	; () banked
 15418  0045D4  237C               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 15419                           
 15420                           ; BSR set to: 0
 15421  0045D6  0100               	movlb	0	; () banked
 15422  0045D8  077D               	decf	___x_sample_fifo@i& (0+255),f,b
 15423  0045DA  D79F               	goto	l11896
 15424  0045DC                     l11908:
 15425                           
 15426                           ; BSR set to: 0
 15427                           ;sample.c: 68: }
 15428                           ;sample.c: 69: buf[i]=x;
 15429  0045DC  0100               	movlb	0	; () banked
 15430  0045DE  517D               	movf	___x_sample_fifo@i& (0+255),w,b
 15431  0045E0  0D02               	mullw	2
 15432  0045E2  50F3               	movf	prodl,w,c
 15433  0045E4  0100               	movlb	0	; () banked
 15434  0045E6  256E               	addwf	___x_sample_fifo@buf& (0+255),w,b
 15435  0045E8  6ED9               	movwf	fsr2l,c
 15436  0045EA  50F4               	movf	prodh,w,c
 15437  0045EC  0100               	movlb	0	; () banked
 15438  0045EE  216F               	addwfc	(___x_sample_fifo@buf+1)& (0+255),w,b
 15439  0045F0  6EDA               	movwf	fsr2h,c
 15440  0045F2  C070  FFDE         	movff	___x_sample_fifo@x,postinc2
 15441  0045F6  C071  FFDD         	movff	___x_sample_fifo@x+1,postdec2
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;sample.c: 70: ret+=x;
 15445  0045FA  C070  F073         	movff	___x_sample_fifo@x,??___x_sample_fifo
 15446  0045FE  C071  F074         	movff	___x_sample_fifo@x+1,??___x_sample_fifo+1
 15447  004602  0E00               	movlw	0
 15448  004604  0100               	movlb	0	; () banked
 15449  004606  BF74               	btfsc	(??___x_sample_fifo+1)& (0+255),7,b
 15450  004608  0EFF               	movlw	255
 15451  00460A  6F75               	movwf	(??___x_sample_fifo+2)& (0+255),b
 15452  00460C  6F76               	movwf	(??___x_sample_fifo+3)& (0+255),b
 15453  00460E  0100               	movlb	0	; () banked
 15454  004610  5173               	movf	??___x_sample_fifo& (0+255),w,b
 15455  004612  0100               	movlb	0	; () banked
 15456  004614  2779               	addwf	___x_sample_fifo@ret& (0+255),f,b
 15457  004616  0100               	movlb	0	; () banked
 15458  004618  5174               	movf	(??___x_sample_fifo+1)& (0+255),w,b
 15459  00461A  0100               	movlb	0	; () banked
 15460  00461C  237A               	addwfc	(___x_sample_fifo@ret+1)& (0+255),f,b
 15461  00461E  0100               	movlb	0	; () banked
 15462  004620  5175               	movf	(??___x_sample_fifo+2)& (0+255),w,b
 15463  004622  0100               	movlb	0	; () banked
 15464  004624  237B               	addwfc	(___x_sample_fifo@ret+2)& (0+255),f,b
 15465  004626  0100               	movlb	0	; () banked
 15466  004628  5176               	movf	(??___x_sample_fifo+3)& (0+255),w,b
 15467  00462A  0100               	movlb	0	; () banked
 15468  00462C  237C               	addwfc	(___x_sample_fifo@ret+3)& (0+255),f,b
 15469                           
 15470                           ; BSR set to: 0
 15471                           ;sample.c: 71: ret/=len;
 15472  00462E  C079  F060         	movff	___x_sample_fifo@ret,___aldiv@dividend
 15473  004632  C07A  F061         	movff	___x_sample_fifo@ret+1,___aldiv@dividend+1
 15474  004636  C07B  F062         	movff	___x_sample_fifo@ret+2,___aldiv@dividend+2
 15475  00463A  C07C  F063         	movff	___x_sample_fifo@ret+3,___aldiv@dividend+3
 15476  00463E  0100               	movlb	0	; () banked
 15477  004640  5172               	movf	___x_sample_fifo@len& (0+255),w,b
 15478  004642  0100               	movlb	0	; () banked
 15479  004644  6F64               	movwf	___aldiv@divisor& (0+255),b
 15480  004646  6B65               	clrf	(___aldiv@divisor+1)& (0+255),b
 15481  004648  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
 15482  00464A  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
 15483  00464C  EC90  F026         	call	___aldiv
 15484  004650  C060  F079         	movff	?___aldiv,___x_sample_fifo@ret
 15485  004654  C061  F07A         	movff	?___aldiv+1,___x_sample_fifo@ret+1
 15486  004658  C062  F07B         	movff	?___aldiv+2,___x_sample_fifo@ret+2
 15487  00465C  C063  F07C         	movff	?___aldiv+3,___x_sample_fifo@ret+3
 15488                           
 15489                           ;sample.c: 72: return (int16_t)(ret);
 15490  004660  C079  F06E         	movff	___x_sample_fifo@ret,?___x_sample_fifo
 15491  004664  C07A  F06F         	movff	___x_sample_fifo@ret+1,?___x_sample_fifo+1
 15492  004668  0012               	return	
 15493  00466A                     __end_of___x_sample_fifo:
 15494                           	opt stack 0
 15495                           tosu	equ	0xFFF
 15496                           tosh	equ	0xFFE
 15497                           tosl	equ	0xFFD
 15498                           pclath	equ	0xFFA
 15499                           tblptru	equ	0xFF8
 15500                           tblptrh	equ	0xFF7
 15501                           tblptrl	equ	0xFF6
 15502                           tablat	equ	0xFF5
 15503                           prodh	equ	0xFF4
 15504                           prodl	equ	0xFF3
 15505                           intcon	equ	0xFF2
 15506                           indf0	equ	0xFEF
 15507                           postinc0	equ	0xFEE
 15508                           fsr0h	equ	0xFEA
 15509                           fsr0l	equ	0xFE9
 15510                           wreg	equ	0xFE8
 15511                           postinc1	equ	0xFE6
 15512                           postdec1	equ	0xFE5
 15513                           plusw1	equ	0xFE3
 15514                           fsr1h	equ	0xFE2
 15515                           fsr1l	equ	0xFE1
 15516                           indf2	equ	0xFDF
 15517                           postinc2	equ	0xFDE
 15518                           postdec2	equ	0xFDD
 15519                           plusw2	equ	0xFDB
 15520                           fsr2h	equ	0xFDA
 15521                           fsr2l	equ	0xFD9
 15522                           status	equ	0xFD8
 15523                           
 15524 ;; *************** function _cal_pt100_temperature_in *****************
 15525 ;; Defined at:
 15526 ;;		line 515 in file "src/api/data.c"
 15527 ;; Parameters:    Size  Location     Type
 15528 ;;		None
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;  f1              4  106[BANK0 ] float 
 15531 ;;  f2              4  102[BANK0 ] float 
 15532 ;; Return value:  Size  Location     Type
 15533 ;;                  1    wreg      void 
 15534 ;; Registers used:
 15535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15536 ;; Tracked objects:
 15537 ;;		On entry : 0/0
 15538 ;;		On exit  : 0/0
 15539 ;;		Unchanged: 0/0
 15540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15542 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15544 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;Total ram usage:       12 bytes
 15546 ;; Hardware stack levels used:    1
 15547 ;; Hardware stack levels required when called:    5
 15548 ;; This function calls:
 15549 ;;		___fladd
 15550 ;;		___fldiv
 15551 ;;		___flmul
 15552 ;;		___flneg
 15553 ;;		___fltol
 15554 ;;		___xxtofl
 15555 ;; This function is called by:
 15556 ;;		_event_process_rtc
 15557 ;; This function uses a non-reentrant model
 15558 ;;
 15559                           
 15560                           	psect	text83
 15561  002DCE                     __ptext83:
 15562                           	opt stack 0
 15563  002DCE                     _cal_pt100_temperature_in:
 15564                           	opt stack 23
 15565                           
 15566                           ;data.c: 517: float f1,f2;
 15567                           ;data.c: 518: f1=(float)(adc_inPt100);
 15568                           
 15569                           ;incstack = 0
 15570  002DCE  C184  F060         	movff	_adc_inPt100,___xxtofl@val	;volatile
 15571  002DD2  C185  F061         	movff	_adc_inPt100+1,___xxtofl@val+1	;volatile
 15572  002DD6  0100               	movlb	0	; () banked
 15573  002DD8  0E00               	movlw	0
 15574  002DDA  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15575  002DDC  0EFF               	movlw	-1
 15576  002DDE  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15577  002DE0  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15578  002DE2  0E01               	movlw	1
 15579  002DE4  EC6A  F01D         	call	___xxtofl
 15580  002DE8  C060  F0CA         	movff	?___xxtofl,cal_pt100_temperature_in@f1
 15581  002DEC  C061  F0CB         	movff	?___xxtofl+1,cal_pt100_temperature_in@f1+1
 15582  002DF0  C062  F0CC         	movff	?___xxtofl+2,cal_pt100_temperature_in@f1+2
 15583  002DF4  C063  F0CD         	movff	?___xxtofl+3,cal_pt100_temperature_in@f1+3
 15584                           
 15585                           ;data.c: 520: f2=(float)(fpSysData->TempZero);
 15586  002DF8  0E5C               	movlw	92
 15587  002DFA  243C               	addwf	_fpSysData,w,c
 15588  002DFC  6EF6               	movwf	tblptrl,c
 15589  002DFE  0E00               	movlw	0
 15590  002E00  203D               	addwfc	_fpSysData+1,w,c
 15591  002E02  6EF7               	movwf	tblptrh,c
 15592  002E04  0E00               	movlw	0
 15593  002E06  203E               	addwfc	_fpSysData+2,w,c
 15594  002E08  6EF8               	movwf	tblptru,c
 15595  002E0A  0009               	tblrd		*+
 15596  002E0C  CFF5 F060          	movff	tablat,___xxtofl@val
 15597  002E10  0009               	tblrd		*+
 15598  002E12  CFF5 F061          	movff	tablat,___xxtofl@val+1
 15599  002E16  0009               	tblrd		*+
 15600  002E18  CFF5 F062          	movff	tablat,___xxtofl@val+2
 15601  002E1C  000A               	tblrd		*-
 15602  002E1E  CFF5 F063          	movff	tablat,___xxtofl@val+3
 15603  002E22  0E00               	movlw	0
 15604  002E24  EC6A  F01D         	call	___xxtofl
 15605  002E28  C060  F0C6         	movff	?___xxtofl,cal_pt100_temperature_in@f2
 15606  002E2C  C061  F0C7         	movff	?___xxtofl+1,cal_pt100_temperature_in@f2+1
 15607  002E30  C062  F0C8         	movff	?___xxtofl+2,cal_pt100_temperature_in@f2+2
 15608  002E34  C063  F0C9         	movff	?___xxtofl+3,cal_pt100_temperature_in@f2+3
 15609                           
 15610                           ;data.c: 521: f1=f1-f2;
 15611  002E38  C0C6  F0A0         	movff	cal_pt100_temperature_in@f2,___flneg@f1
 15612  002E3C  C0C7  F0A1         	movff	cal_pt100_temperature_in@f2+1,___flneg@f1+1
 15613  002E40  C0C8  F0A2         	movff	cal_pt100_temperature_in@f2+2,___flneg@f1+2
 15614  002E44  C0C9  F0A3         	movff	cal_pt100_temperature_in@f2+3,___flneg@f1+3
 15615  002E48  EC2F  F03A         	call	___flneg	;wreg free
 15616  002E4C  C0A0  F0A4         	movff	?___flneg,___fladd@b
 15617  002E50  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 15618  002E54  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 15619  002E58  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 15620  002E5C  C0CA  F0A8         	movff	cal_pt100_temperature_in@f1,___fladd@a
 15621  002E60  C0CB  F0A9         	movff	cal_pt100_temperature_in@f1+1,___fladd@a+1
 15622  002E64  C0CC  F0AA         	movff	cal_pt100_temperature_in@f1+2,___fladd@a+2
 15623  002E68  C0CD  F0AB         	movff	cal_pt100_temperature_in@f1+3,___fladd@a+3
 15624  002E6C  EC40  F009         	call	___fladd	;wreg free
 15625  002E70  C0A4  F0CA         	movff	?___fladd,cal_pt100_temperature_in@f1
 15626  002E74  C0A5  F0CB         	movff	?___fladd+1,cal_pt100_temperature_in@f1+1
 15627  002E78  C0A6  F0CC         	movff	?___fladd+2,cal_pt100_temperature_in@f1+2
 15628  002E7C  C0A7  F0CD         	movff	?___fladd+3,cal_pt100_temperature_in@f1+3
 15629                           
 15630                           ;data.c: 523: f2=(float)(fpSysData->TempLine);
 15631  002E80  0E60               	movlw	96
 15632  002E82  243C               	addwf	_fpSysData,w,c
 15633  002E84  6EF6               	movwf	tblptrl,c
 15634  002E86  0E00               	movlw	0
 15635  002E88  203D               	addwfc	_fpSysData+1,w,c
 15636  002E8A  6EF7               	movwf	tblptrh,c
 15637  002E8C  0E00               	movlw	0
 15638  002E8E  203E               	addwfc	_fpSysData+2,w,c
 15639  002E90  6EF8               	movwf	tblptru,c
 15640  002E92  0009               	tblrd		*+
 15641  002E94  CFF5 F060          	movff	tablat,___xxtofl@val
 15642  002E98  0009               	tblrd		*+
 15643  002E9A  CFF5 F061          	movff	tablat,___xxtofl@val+1
 15644  002E9E  0009               	tblrd		*+
 15645  002EA0  CFF5 F062          	movff	tablat,___xxtofl@val+2
 15646  002EA4  000A               	tblrd		*-
 15647  002EA6  CFF5 F063          	movff	tablat,___xxtofl@val+3
 15648  002EAA  0E00               	movlw	0
 15649  002EAC  EC6A  F01D         	call	___xxtofl
 15650  002EB0  C060  F0C6         	movff	?___xxtofl,cal_pt100_temperature_in@f2
 15651  002EB4  C061  F0C7         	movff	?___xxtofl+1,cal_pt100_temperature_in@f2+1
 15652  002EB8  C062  F0C8         	movff	?___xxtofl+2,cal_pt100_temperature_in@f2+2
 15653  002EBC  C063  F0C9         	movff	?___xxtofl+3,cal_pt100_temperature_in@f2+3
 15654                           
 15655                           ;data.c: 524: f2/=1000;
 15656  002EC0  C0C6  F087         	movff	cal_pt100_temperature_in@f2,___fldiv@b
 15657  002EC4  C0C7  F088         	movff	cal_pt100_temperature_in@f2+1,___fldiv@b+1
 15658  002EC8  C0C8  F089         	movff	cal_pt100_temperature_in@f2+2,___fldiv@b+2
 15659  002ECC  C0C9  F08A         	movff	cal_pt100_temperature_in@f2+3,___fldiv@b+3
 15660  002ED0  0E00               	movlw	0
 15661  002ED2  0100               	movlb	0	; () banked
 15662  002ED4  6F8B               	movwf	___fldiv@a& (0+255),b
 15663  002ED6  0E00               	movlw	0
 15664  002ED8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15665  002EDA  0E7A               	movlw	122
 15666  002EDC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15667  002EDE  0E44               	movlw	68
 15668  002EE0  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15669  002EE2  EC48  F012         	call	___fldiv	;wreg free
 15670  002EE6  C087  F0C6         	movff	?___fldiv,cal_pt100_temperature_in@f2
 15671  002EEA  C088  F0C7         	movff	?___fldiv+1,cal_pt100_temperature_in@f2+1
 15672  002EEE  C089  F0C8         	movff	?___fldiv+2,cal_pt100_temperature_in@f2+2
 15673  002EF2  C08A  F0C9         	movff	?___fldiv+3,cal_pt100_temperature_in@f2+3
 15674                           
 15675                           ;data.c: 525: f1=f1*f2;
 15676  002EF6  C0CA  F06E         	movff	cal_pt100_temperature_in@f1,___flmul@b
 15677  002EFA  C0CB  F06F         	movff	cal_pt100_temperature_in@f1+1,___flmul@b+1
 15678  002EFE  C0CC  F070         	movff	cal_pt100_temperature_in@f1+2,___flmul@b+2
 15679  002F02  C0CD  F071         	movff	cal_pt100_temperature_in@f1+3,___flmul@b+3
 15680  002F06  C0C6  F072         	movff	cal_pt100_temperature_in@f2,___flmul@a
 15681  002F0A  C0C7  F073         	movff	cal_pt100_temperature_in@f2+1,___flmul@a+1
 15682  002F0E  C0C8  F074         	movff	cal_pt100_temperature_in@f2+2,___flmul@a+2
 15683  002F12  C0C9  F075         	movff	cal_pt100_temperature_in@f2+3,___flmul@a+3
 15684  002F16  EC94  F00B         	call	___flmul	;wreg free
 15685  002F1A  C06E  F0CA         	movff	?___flmul,cal_pt100_temperature_in@f1
 15686  002F1E  C06F  F0CB         	movff	?___flmul+1,cal_pt100_temperature_in@f1+1
 15687  002F22  C070  F0CC         	movff	?___flmul+2,cal_pt100_temperature_in@f1+2
 15688  002F26  C071  F0CD         	movff	?___flmul+3,cal_pt100_temperature_in@f1+3
 15689                           
 15690                           ;data.c: 527: f1/=1000;
 15691  002F2A  C0CA  F087         	movff	cal_pt100_temperature_in@f1,___fldiv@b
 15692  002F2E  C0CB  F088         	movff	cal_pt100_temperature_in@f1+1,___fldiv@b+1
 15693  002F32  C0CC  F089         	movff	cal_pt100_temperature_in@f1+2,___fldiv@b+2
 15694  002F36  C0CD  F08A         	movff	cal_pt100_temperature_in@f1+3,___fldiv@b+3
 15695  002F3A  0E00               	movlw	0
 15696  002F3C  0100               	movlb	0	; () banked
 15697  002F3E  6F8B               	movwf	___fldiv@a& (0+255),b
 15698  002F40  0E00               	movlw	0
 15699  002F42  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 15700  002F44  0E7A               	movlw	122
 15701  002F46  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 15702  002F48  0E44               	movlw	68
 15703  002F4A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 15704  002F4C  EC48  F012         	call	___fldiv	;wreg free
 15705  002F50  C087  F0CA         	movff	?___fldiv,cal_pt100_temperature_in@f1
 15706  002F54  C088  F0CB         	movff	?___fldiv+1,cal_pt100_temperature_in@f1+1
 15707  002F58  C089  F0CC         	movff	?___fldiv+2,cal_pt100_temperature_in@f1+2
 15708  002F5C  C08A  F0CD         	movff	?___fldiv+3,cal_pt100_temperature_in@f1+3
 15709                           
 15710                           ;data.c: 528: f2=(1.484e-4f);
 15711  002F60  0ED2               	movlw	210
 15712  002F62  0100               	movlb	0	; () banked
 15713  002F64  6FC6               	movwf	cal_pt100_temperature_in@f2& (0+255),b
 15714  002F66  0E9B               	movlw	155
 15715  002F68  6FC7               	movwf	(cal_pt100_temperature_in@f2+1)& (0+255),b
 15716  002F6A  0E1B               	movlw	27
 15717  002F6C  6FC8               	movwf	(cal_pt100_temperature_in@f2+2)& (0+255),b
 15718  002F6E  0E39               	movlw	57
 15719  002F70  6FC9               	movwf	(cal_pt100_temperature_in@f2+3)& (0+255),b
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;data.c: 529: f2=f2*f1*f1;
 15723  002F72  C0CA  F072         	movff	cal_pt100_temperature_in@f1,___flmul@a
 15724  002F76  C0CB  F073         	movff	cal_pt100_temperature_in@f1+1,___flmul@a+1
 15725  002F7A  C0CC  F074         	movff	cal_pt100_temperature_in@f1+2,___flmul@a+2
 15726  002F7E  C0CD  F075         	movff	cal_pt100_temperature_in@f1+3,___flmul@a+3
 15727  002F82  C0C6  F06E         	movff	cal_pt100_temperature_in@f2,___flmul@b
 15728  002F86  C0C7  F06F         	movff	cal_pt100_temperature_in@f2+1,___flmul@b+1
 15729  002F8A  C0C8  F070         	movff	cal_pt100_temperature_in@f2+2,___flmul@b+2
 15730  002F8E  C0C9  F071         	movff	cal_pt100_temperature_in@f2+3,___flmul@b+3
 15731  002F92  EC94  F00B         	call	___flmul	;wreg free
 15732  002F96  C06E  F0C2         	movff	?___flmul,_cal_pt100_temperature_in$4328
 15733  002F9A  C06F  F0C3         	movff	?___flmul+1,_cal_pt100_temperature_in$4328+1
 15734  002F9E  C070  F0C4         	movff	?___flmul+2,_cal_pt100_temperature_in$4328+2
 15735  002FA2  C071  F0C5         	movff	?___flmul+3,_cal_pt100_temperature_in$4328+3
 15736                           
 15737                           ;data.c: 529: f2=f2*f1*f1;
 15738  002FA6  C0C2  F06E         	movff	_cal_pt100_temperature_in$4328,___flmul@b
 15739  002FAA  C0C3  F06F         	movff	_cal_pt100_temperature_in$4328+1,___flmul@b+1
 15740  002FAE  C0C4  F070         	movff	_cal_pt100_temperature_in$4328+2,___flmul@b+2
 15741  002FB2  C0C5  F071         	movff	_cal_pt100_temperature_in$4328+3,___flmul@b+3
 15742  002FB6  C0CA  F072         	movff	cal_pt100_temperature_in@f1,___flmul@a
 15743  002FBA  C0CB  F073         	movff	cal_pt100_temperature_in@f1+1,___flmul@a+1
 15744  002FBE  C0CC  F074         	movff	cal_pt100_temperature_in@f1+2,___flmul@a+2
 15745  002FC2  C0CD  F075         	movff	cal_pt100_temperature_in@f1+3,___flmul@a+3
 15746  002FC6  EC94  F00B         	call	___flmul	;wreg free
 15747  002FCA  C06E  F0C6         	movff	?___flmul,cal_pt100_temperature_in@f2
 15748  002FCE  C06F  F0C7         	movff	?___flmul+1,cal_pt100_temperature_in@f2+1
 15749  002FD2  C070  F0C8         	movff	?___flmul+2,cal_pt100_temperature_in@f2+2
 15750  002FD6  C071  F0C9         	movff	?___flmul+3,cal_pt100_temperature_in@f2+3
 15751                           
 15752                           ;data.c: 530: f1=f1+f2;
 15753  002FDA  C0CA  F0A4         	movff	cal_pt100_temperature_in@f1,___fladd@b
 15754  002FDE  C0CB  F0A5         	movff	cal_pt100_temperature_in@f1+1,___fladd@b+1
 15755  002FE2  C0CC  F0A6         	movff	cal_pt100_temperature_in@f1+2,___fladd@b+2
 15756  002FE6  C0CD  F0A7         	movff	cal_pt100_temperature_in@f1+3,___fladd@b+3
 15757  002FEA  C0C6  F0A8         	movff	cal_pt100_temperature_in@f2,___fladd@a
 15758  002FEE  C0C7  F0A9         	movff	cal_pt100_temperature_in@f2+1,___fladd@a+1
 15759  002FF2  C0C8  F0AA         	movff	cal_pt100_temperature_in@f2+2,___fladd@a+2
 15760  002FF6  C0C9  F0AB         	movff	cal_pt100_temperature_in@f2+3,___fladd@a+3
 15761  002FFA  EC40  F009         	call	___fladd	;wreg free
 15762  002FFE  C0A4  F0CA         	movff	?___fladd,cal_pt100_temperature_in@f1
 15763  003002  C0A5  F0CB         	movff	?___fladd+1,cal_pt100_temperature_in@f1+1
 15764  003006  C0A6  F0CC         	movff	?___fladd+2,cal_pt100_temperature_in@f1+2
 15765  00300A  C0A7  F0CD         	movff	?___fladd+3,cal_pt100_temperature_in@f1+3
 15766                           
 15767                           ;data.c: 532: f1=f1*1000;
 15768  00300E  C0CA  F06E         	movff	cal_pt100_temperature_in@f1,___flmul@b
 15769  003012  C0CB  F06F         	movff	cal_pt100_temperature_in@f1+1,___flmul@b+1
 15770  003016  C0CC  F070         	movff	cal_pt100_temperature_in@f1+2,___flmul@b+2
 15771  00301A  C0CD  F071         	movff	cal_pt100_temperature_in@f1+3,___flmul@b+3
 15772  00301E  0E00               	movlw	0
 15773  003020  0100               	movlb	0	; () banked
 15774  003022  6F72               	movwf	___flmul@a& (0+255),b
 15775  003024  0E00               	movlw	0
 15776  003026  6F73               	movwf	(___flmul@a+1)& (0+255),b
 15777  003028  0E7A               	movlw	122
 15778  00302A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 15779  00302C  0E44               	movlw	68
 15780  00302E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 15781  003030  EC94  F00B         	call	___flmul	;wreg free
 15782  003034  C06E  F0CA         	movff	?___flmul,cal_pt100_temperature_in@f1
 15783  003038  C06F  F0CB         	movff	?___flmul+1,cal_pt100_temperature_in@f1+1
 15784  00303C  C070  F0CC         	movff	?___flmul+2,cal_pt100_temperature_in@f1+2
 15785  003040  C071  F0CD         	movff	?___flmul+3,cal_pt100_temperature_in@f1+3
 15786                           
 15787                           ;data.c: 533: rtTemperatureIn= (int32_t)f1;
 15788  003044  C0CA  F0B8         	movff	cal_pt100_temperature_in@f1,___fltol@f1
 15789  003048  C0CB  F0B9         	movff	cal_pt100_temperature_in@f1+1,___fltol@f1+1
 15790  00304C  C0CC  F0BA         	movff	cal_pt100_temperature_in@f1+2,___fltol@f1+2
 15791  003050  C0CD  F0BB         	movff	cal_pt100_temperature_in@f1+3,___fltol@f1+3
 15792  003054  EC32  F028         	call	___fltol	;wreg free
 15793  003058  C0B8  F156         	movff	?___fltol,_rtTemperatureIn	;volatile
 15794  00305C  C0B9  F157         	movff	?___fltol+1,_rtTemperatureIn+1	;volatile
 15795  003060  C0BA  F158         	movff	?___fltol+2,_rtTemperatureIn+2	;volatile
 15796  003064  C0BB  F159         	movff	?___fltol+3,_rtTemperatureIn+3	;volatile
 15797  003068  0012               	return		;funcret
 15798  00306A                     __end_of_cal_pt100_temperature_in:
 15799                           	opt stack 0
 15800                           tosu	equ	0xFFF
 15801                           tosh	equ	0xFFE
 15802                           tosl	equ	0xFFD
 15803                           pclath	equ	0xFFA
 15804                           tblptru	equ	0xFF8
 15805                           tblptrh	equ	0xFF7
 15806                           tblptrl	equ	0xFF6
 15807                           tablat	equ	0xFF5
 15808                           prodh	equ	0xFF4
 15809                           prodl	equ	0xFF3
 15810                           intcon	equ	0xFF2
 15811                           indf0	equ	0xFEF
 15812                           postinc0	equ	0xFEE
 15813                           fsr0h	equ	0xFEA
 15814                           fsr0l	equ	0xFE9
 15815                           wreg	equ	0xFE8
 15816                           postinc1	equ	0xFE6
 15817                           postdec1	equ	0xFE5
 15818                           plusw1	equ	0xFE3
 15819                           fsr1h	equ	0xFE2
 15820                           fsr1l	equ	0xFE1
 15821                           indf2	equ	0xFDF
 15822                           postinc2	equ	0xFDE
 15823                           postdec2	equ	0xFDD
 15824                           plusw2	equ	0xFDB
 15825                           fsr2h	equ	0xFDA
 15826                           fsr2l	equ	0xFD9
 15827                           status	equ	0xFD8
 15828                           
 15829 ;; *************** function _cal_pt100_temperature_ex *****************
 15830 ;; Defined at:
 15831 ;;		line 536 in file "src/api/data.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;		None
 15834 ;; Auto vars:     Size  Location     Type
 15835 ;;  f1              4  111[BANK0 ] float 
 15836 ;;  f2              4  107[BANK0 ] float 
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      void 
 15839 ;; Registers used:
 15840 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/0
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15847 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15848 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15849 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15850 ;;Total ram usage:       17 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:    5
 15853 ;; This function calls:
 15854 ;;		___fladd
 15855 ;;		___fldiv
 15856 ;;		___flmul
 15857 ;;		___flneg
 15858 ;;		___fltol
 15859 ;;		___xxtofl
 15860 ;; This function is called by:
 15861 ;;		_event_process_rtc
 15862 ;; This function uses a non-reentrant model
 15863 ;;
 15864                           
 15865                           	psect	text84
 15866  002850                     __ptext84:
 15867                           	opt stack 0
 15868  002850                     _cal_pt100_temperature_ex:
 15869                           	opt stack 23
 15870                           
 15871                           ;data.c: 538: float f1,f2;
 15872                           ;data.c: 539: f1=(float)(adc_exPt100);
 15873                           
 15874                           ;incstack = 0
 15875  002850  C027  F060         	movff	_adc_exPt100,___xxtofl@val	;volatile
 15876  002854  C028  F061         	movff	_adc_exPt100+1,___xxtofl@val+1	;volatile
 15877  002858  0100               	movlb	0	; () banked
 15878  00285A  0E00               	movlw	0
 15879  00285C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 15880  00285E  0EFF               	movlw	-1
 15881  002860  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15882  002862  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 15883  002864  0E01               	movlw	1
 15884  002866  EC6A  F01D         	call	___xxtofl
 15885  00286A  C060  F0CF         	movff	?___xxtofl,cal_pt100_temperature_ex@f1
 15886  00286E  C061  F0D0         	movff	?___xxtofl+1,cal_pt100_temperature_ex@f1+1
 15887  002872  C062  F0D1         	movff	?___xxtofl+2,cal_pt100_temperature_ex@f1+2
 15888  002876  C063  F0D2         	movff	?___xxtofl+3,cal_pt100_temperature_ex@f1+3
 15889                           
 15890                           ;data.c: 541: f2=(float)(fpSysData->ex_pressZero);
 15891  00287A  0E64               	movlw	100
 15892  00287C  0100               	movlb	0	; () banked
 15893  00287E  6FC2               	movwf	??_cal_pt100_temperature_ex& (0+255),b
 15894  002880  0E00               	movlw	0
 15895  002882  0100               	movlb	0	; () banked
 15896  002884  6FC3               	movwf	(??_cal_pt100_temperature_ex+1)& (0+255),b
 15897  002886  0100               	movlb	0	; () banked
 15898  002888  51C2               	movf	??_cal_pt100_temperature_ex& (0+255),w,b
 15899  00288A  243C               	addwf	_fpSysData,w,c
 15900  00288C  0100               	movlb	0	; () banked
 15901  00288E  6FC4               	movwf	(??_cal_pt100_temperature_ex+2)& (0+255),b
 15902  002890  0100               	movlb	0	; () banked
 15903  002892  51C3               	movf	(??_cal_pt100_temperature_ex+1)& (0+255),w,b
 15904  002894  203D               	addwfc	_fpSysData+1,w,c
 15905  002896  0100               	movlb	0	; () banked
 15906  002898  6FC5               	movwf	(??_cal_pt100_temperature_ex+3)& (0+255),b
 15907  00289A  0E00               	movlw	0
 15908  00289C  203E               	addwfc	_fpSysData+2,w,c
 15909  00289E  0100               	movlb	0	; () banked
 15910  0028A0  6FC6               	movwf	(??_cal_pt100_temperature_ex+4)& (0+255),b
 15911  0028A2  0100               	movlb	0	; () banked
 15912  0028A4  51C4               	movf	(??_cal_pt100_temperature_ex+2)& (0+255),w,b
 15913  0028A6  0100               	movlb	0	; () banked
 15914  0028A8  6F60               	movwf	___xxtofl@val& (0+255),b
 15915  0028AA  0100               	movlb	0	; () banked
 15916  0028AC  51C5               	movf	(??_cal_pt100_temperature_ex+3)& (0+255),w,b
 15917  0028AE  0100               	movlb	0	; () banked
 15918  0028B0  6F61               	movwf	(___xxtofl@val+1)& (0+255),b
 15919  0028B2  0100               	movlb	0	; () banked
 15920  0028B4  51C6               	movf	(??_cal_pt100_temperature_ex+4)& (0+255),w,b
 15921  0028B6  0100               	movlb	0	; () banked
 15922  0028B8  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15923  0028BA  0100               	movlb	0	; () banked
 15924  0028BC  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 15925  0028BE  0E00               	movlw	0
 15926  0028C0  EC6A  F01D         	call	___xxtofl
 15927  0028C4  C060  F0CB         	movff	?___xxtofl,cal_pt100_temperature_ex@f2
 15928  0028C8  C061  F0CC         	movff	?___xxtofl+1,cal_pt100_temperature_ex@f2+1
 15929  0028CC  C062  F0CD         	movff	?___xxtofl+2,cal_pt100_temperature_ex@f2+2
 15930  0028D0  C063  F0CE         	movff	?___xxtofl+3,cal_pt100_temperature_ex@f2+3
 15931                           
 15932                           ;data.c: 542: f1=f1-f2;
 15933  0028D4  C0CB  F0A0         	movff	cal_pt100_temperature_ex@f2,___flneg@f1
 15934  0028D8  C0CC  F0A1         	movff	cal_pt100_temperature_ex@f2+1,___flneg@f1+1
 15935  0028DC  C0CD  F0A2         	movff	cal_pt100_temperature_ex@f2+2,___flneg@f1+2
 15936  0028E0  C0CE  F0A3         	movff	cal_pt100_temperature_ex@f2+3,___flneg@f1+3
 15937  0028E4  EC2F  F03A         	call	___flneg	;wreg free
 15938  0028E8  C0A0  F0A4         	movff	?___flneg,___fladd@b
 15939  0028EC  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 15940  0028F0  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 15941  0028F4  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 15942  0028F8  C0CF  F0A8         	movff	cal_pt100_temperature_ex@f1,___fladd@a
 15943  0028FC  C0D0  F0A9         	movff	cal_pt100_temperature_ex@f1+1,___fladd@a+1
 15944  002900  C0D1  F0AA         	movff	cal_pt100_temperature_ex@f1+2,___fladd@a+2
 15945  002904  C0D2  F0AB         	movff	cal_pt100_temperature_ex@f1+3,___fladd@a+3
 15946  002908  EC40  F009         	call	___fladd	;wreg free
 15947  00290C  C0A4  F0CF         	movff	?___fladd,cal_pt100_temperature_ex@f1
 15948  002910  C0A5  F0D0         	movff	?___fladd+1,cal_pt100_temperature_ex@f1+1
 15949  002914  C0A6  F0D1         	movff	?___fladd+2,cal_pt100_temperature_ex@f1+2
 15950  002918  C0A7  F0D2         	movff	?___fladd+3,cal_pt100_temperature_ex@f1+3
 15951                           
 15952                           ;data.c: 544: f2=(float)(fpSysData->ex_pressLine);
 15953  00291C  0E6C               	movlw	108
 15954  00291E  0100               	movlb	0	; () banked
 15955  002920  6FC2               	movwf	??_cal_pt100_temperature_ex& (0+255),b
 15956  002922  0E00               	movlw	0
 15957  002924  0100               	movlb	0	; () banked
 15958  002926  6FC3               	movwf	(??_cal_pt100_temperature_ex+1)& (0+255),b
 15959  002928  0100               	movlb	0	; () banked
 15960  00292A  51C2               	movf	??_cal_pt100_temperature_ex& (0+255),w,b
 15961  00292C  243C               	addwf	_fpSysData,w,c
 15962  00292E  0100               	movlb	0	; () banked
 15963  002930  6FC4               	movwf	(??_cal_pt100_temperature_ex+2)& (0+255),b
 15964  002932  0100               	movlb	0	; () banked
 15965  002934  51C3               	movf	(??_cal_pt100_temperature_ex+1)& (0+255),w,b
 15966  002936  203D               	addwfc	_fpSysData+1,w,c
 15967  002938  0100               	movlb	0	; () banked
 15968  00293A  6FC5               	movwf	(??_cal_pt100_temperature_ex+3)& (0+255),b
 15969  00293C  0E00               	movlw	0
 15970  00293E  203E               	addwfc	_fpSysData+2,w,c
 15971  002940  0100               	movlb	0	; () banked
 15972  002942  6FC6               	movwf	(??_cal_pt100_temperature_ex+4)& (0+255),b
 15973  002944  0100               	movlb	0	; () banked
 15974  002946  51C4               	movf	(??_cal_pt100_temperature_ex+2)& (0+255),w,b
 15975  002948  0100               	movlb	0	; () banked
 15976  00294A  6F60               	movwf	___xxtofl@val& (0+255),b
 15977  00294C  0100               	movlb	0	; () banked
 15978  00294E  51C5               	movf	(??_cal_pt100_temperature_ex+3)& (0+255),w,b
 15979  002950  0100               	movlb	0	; () banked
 15980  002952  6F61               	movwf	(___xxtofl@val+1)& (0+255),b
 15981  002954  0100               	movlb	0	; () banked
 15982  002956  51C6               	movf	(??_cal_pt100_temperature_ex+4)& (0+255),w,b
 15983  002958  0100               	movlb	0	; () banked
 15984  00295A  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 15985  00295C  0100               	movlb	0	; () banked
 15986  00295E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 15987  002960  0E00               	movlw	0
 15988  002962  EC6A  F01D         	call	___xxtofl
 15989  002966  C060  F0CB         	movff	?___xxtofl,cal_pt100_temperature_ex@f2
 15990  00296A  C061  F0CC         	movff	?___xxtofl+1,cal_pt100_temperature_ex@f2+1
 15991  00296E  C062  F0CD         	movff	?___xxtofl+2,cal_pt100_temperature_ex@f2+2
 15992  002972  C063  F0CE         	movff	?___xxtofl+3,cal_pt100_temperature_ex@f2+3
 15993                           
 15994                           ;data.c: 545: f2/=1000;
 15995  002976  C0CB  F087         	movff	cal_pt100_temperature_ex@f2,___fldiv@b
 15996  00297A  C0CC  F088         	movff	cal_pt100_temperature_ex@f2+1,___fldiv@b+1
 15997  00297E  C0CD  F089         	movff	cal_pt100_temperature_ex@f2+2,___fldiv@b+2
 15998  002982  C0CE  F08A         	movff	cal_pt100_temperature_ex@f2+3,___fldiv@b+3
 15999  002986  0E00               	movlw	0
 16000  002988  0100               	movlb	0	; () banked
 16001  00298A  6F8B               	movwf	___fldiv@a& (0+255),b
 16002  00298C  0E00               	movlw	0
 16003  00298E  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 16004  002990  0E7A               	movlw	122
 16005  002992  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 16006  002994  0E44               	movlw	68
 16007  002996  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 16008  002998  EC48  F012         	call	___fldiv	;wreg free
 16009  00299C  C087  F0CB         	movff	?___fldiv,cal_pt100_temperature_ex@f2
 16010  0029A0  C088  F0CC         	movff	?___fldiv+1,cal_pt100_temperature_ex@f2+1
 16011  0029A4  C089  F0CD         	movff	?___fldiv+2,cal_pt100_temperature_ex@f2+2
 16012  0029A8  C08A  F0CE         	movff	?___fldiv+3,cal_pt100_temperature_ex@f2+3
 16013                           
 16014                           ;data.c: 546: f1=f1*f2;
 16015  0029AC  C0CF  F06E         	movff	cal_pt100_temperature_ex@f1,___flmul@b
 16016  0029B0  C0D0  F06F         	movff	cal_pt100_temperature_ex@f1+1,___flmul@b+1
 16017  0029B4  C0D1  F070         	movff	cal_pt100_temperature_ex@f1+2,___flmul@b+2
 16018  0029B8  C0D2  F071         	movff	cal_pt100_temperature_ex@f1+3,___flmul@b+3
 16019  0029BC  C0CB  F072         	movff	cal_pt100_temperature_ex@f2,___flmul@a
 16020  0029C0  C0CC  F073         	movff	cal_pt100_temperature_ex@f2+1,___flmul@a+1
 16021  0029C4  C0CD  F074         	movff	cal_pt100_temperature_ex@f2+2,___flmul@a+2
 16022  0029C8  C0CE  F075         	movff	cal_pt100_temperature_ex@f2+3,___flmul@a+3
 16023  0029CC  EC94  F00B         	call	___flmul	;wreg free
 16024  0029D0  C06E  F0CF         	movff	?___flmul,cal_pt100_temperature_ex@f1
 16025  0029D4  C06F  F0D0         	movff	?___flmul+1,cal_pt100_temperature_ex@f1+1
 16026  0029D8  C070  F0D1         	movff	?___flmul+2,cal_pt100_temperature_ex@f1+2
 16027  0029DC  C071  F0D2         	movff	?___flmul+3,cal_pt100_temperature_ex@f1+3
 16028                           
 16029                           ;data.c: 548: f1/=1000;
 16030  0029E0  C0CF  F087         	movff	cal_pt100_temperature_ex@f1,___fldiv@b
 16031  0029E4  C0D0  F088         	movff	cal_pt100_temperature_ex@f1+1,___fldiv@b+1
 16032  0029E8  C0D1  F089         	movff	cal_pt100_temperature_ex@f1+2,___fldiv@b+2
 16033  0029EC  C0D2  F08A         	movff	cal_pt100_temperature_ex@f1+3,___fldiv@b+3
 16034  0029F0  0E00               	movlw	0
 16035  0029F2  0100               	movlb	0	; () banked
 16036  0029F4  6F8B               	movwf	___fldiv@a& (0+255),b
 16037  0029F6  0E00               	movlw	0
 16038  0029F8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 16039  0029FA  0E7A               	movlw	122
 16040  0029FC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 16041  0029FE  0E44               	movlw	68
 16042  002A00  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 16043  002A02  EC48  F012         	call	___fldiv	;wreg free
 16044  002A06  C087  F0CF         	movff	?___fldiv,cal_pt100_temperature_ex@f1
 16045  002A0A  C088  F0D0         	movff	?___fldiv+1,cal_pt100_temperature_ex@f1+1
 16046  002A0E  C089  F0D1         	movff	?___fldiv+2,cal_pt100_temperature_ex@f1+2
 16047  002A12  C08A  F0D2         	movff	?___fldiv+3,cal_pt100_temperature_ex@f1+3
 16048                           
 16049                           ;data.c: 549: f2=(1.484e-4f);
 16050  002A16  0ED2               	movlw	210
 16051  002A18  0100               	movlb	0	; () banked
 16052  002A1A  6FCB               	movwf	cal_pt100_temperature_ex@f2& (0+255),b
 16053  002A1C  0E9B               	movlw	155
 16054  002A1E  6FCC               	movwf	(cal_pt100_temperature_ex@f2+1)& (0+255),b
 16055  002A20  0E1B               	movlw	27
 16056  002A22  6FCD               	movwf	(cal_pt100_temperature_ex@f2+2)& (0+255),b
 16057  002A24  0E39               	movlw	57
 16058  002A26  6FCE               	movwf	(cal_pt100_temperature_ex@f2+3)& (0+255),b
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;data.c: 550: f2=f2*f1*f1;
 16062  002A28  C0CF  F072         	movff	cal_pt100_temperature_ex@f1,___flmul@a
 16063  002A2C  C0D0  F073         	movff	cal_pt100_temperature_ex@f1+1,___flmul@a+1
 16064  002A30  C0D1  F074         	movff	cal_pt100_temperature_ex@f1+2,___flmul@a+2
 16065  002A34  C0D2  F075         	movff	cal_pt100_temperature_ex@f1+3,___flmul@a+3
 16066  002A38  C0CB  F06E         	movff	cal_pt100_temperature_ex@f2,___flmul@b
 16067  002A3C  C0CC  F06F         	movff	cal_pt100_temperature_ex@f2+1,___flmul@b+1
 16068  002A40  C0CD  F070         	movff	cal_pt100_temperature_ex@f2+2,___flmul@b+2
 16069  002A44  C0CE  F071         	movff	cal_pt100_temperature_ex@f2+3,___flmul@b+3
 16070  002A48  EC94  F00B         	call	___flmul	;wreg free
 16071  002A4C  C06E  F0C7         	movff	?___flmul,_cal_pt100_temperature_ex$4329
 16072  002A50  C06F  F0C8         	movff	?___flmul+1,_cal_pt100_temperature_ex$4329+1
 16073  002A54  C070  F0C9         	movff	?___flmul+2,_cal_pt100_temperature_ex$4329+2
 16074  002A58  C071  F0CA         	movff	?___flmul+3,_cal_pt100_temperature_ex$4329+3
 16075                           
 16076                           ;data.c: 550: f2=f2*f1*f1;
 16077  002A5C  C0C7  F06E         	movff	_cal_pt100_temperature_ex$4329,___flmul@b
 16078  002A60  C0C8  F06F         	movff	_cal_pt100_temperature_ex$4329+1,___flmul@b+1
 16079  002A64  C0C9  F070         	movff	_cal_pt100_temperature_ex$4329+2,___flmul@b+2
 16080  002A68  C0CA  F071         	movff	_cal_pt100_temperature_ex$4329+3,___flmul@b+3
 16081  002A6C  C0CF  F072         	movff	cal_pt100_temperature_ex@f1,___flmul@a
 16082  002A70  C0D0  F073         	movff	cal_pt100_temperature_ex@f1+1,___flmul@a+1
 16083  002A74  C0D1  F074         	movff	cal_pt100_temperature_ex@f1+2,___flmul@a+2
 16084  002A78  C0D2  F075         	movff	cal_pt100_temperature_ex@f1+3,___flmul@a+3
 16085  002A7C  EC94  F00B         	call	___flmul	;wreg free
 16086  002A80  C06E  F0CB         	movff	?___flmul,cal_pt100_temperature_ex@f2
 16087  002A84  C06F  F0CC         	movff	?___flmul+1,cal_pt100_temperature_ex@f2+1
 16088  002A88  C070  F0CD         	movff	?___flmul+2,cal_pt100_temperature_ex@f2+2
 16089  002A8C  C071  F0CE         	movff	?___flmul+3,cal_pt100_temperature_ex@f2+3
 16090                           
 16091                           ;data.c: 551: f1=f1+f2;
 16092  002A90  C0CF  F0A4         	movff	cal_pt100_temperature_ex@f1,___fladd@b
 16093  002A94  C0D0  F0A5         	movff	cal_pt100_temperature_ex@f1+1,___fladd@b+1
 16094  002A98  C0D1  F0A6         	movff	cal_pt100_temperature_ex@f1+2,___fladd@b+2
 16095  002A9C  C0D2  F0A7         	movff	cal_pt100_temperature_ex@f1+3,___fladd@b+3
 16096  002AA0  C0CB  F0A8         	movff	cal_pt100_temperature_ex@f2,___fladd@a
 16097  002AA4  C0CC  F0A9         	movff	cal_pt100_temperature_ex@f2+1,___fladd@a+1
 16098  002AA8  C0CD  F0AA         	movff	cal_pt100_temperature_ex@f2+2,___fladd@a+2
 16099  002AAC  C0CE  F0AB         	movff	cal_pt100_temperature_ex@f2+3,___fladd@a+3
 16100  002AB0  EC40  F009         	call	___fladd	;wreg free
 16101  002AB4  C0A4  F0CF         	movff	?___fladd,cal_pt100_temperature_ex@f1
 16102  002AB8  C0A5  F0D0         	movff	?___fladd+1,cal_pt100_temperature_ex@f1+1
 16103  002ABC  C0A6  F0D1         	movff	?___fladd+2,cal_pt100_temperature_ex@f1+2
 16104  002AC0  C0A7  F0D2         	movff	?___fladd+3,cal_pt100_temperature_ex@f1+3
 16105                           
 16106                           ;data.c: 553: f1=f1*1000;
 16107  002AC4  C0CF  F06E         	movff	cal_pt100_temperature_ex@f1,___flmul@b
 16108  002AC8  C0D0  F06F         	movff	cal_pt100_temperature_ex@f1+1,___flmul@b+1
 16109  002ACC  C0D1  F070         	movff	cal_pt100_temperature_ex@f1+2,___flmul@b+2
 16110  002AD0  C0D2  F071         	movff	cal_pt100_temperature_ex@f1+3,___flmul@b+3
 16111  002AD4  0E00               	movlw	0
 16112  002AD6  0100               	movlb	0	; () banked
 16113  002AD8  6F72               	movwf	___flmul@a& (0+255),b
 16114  002ADA  0E00               	movlw	0
 16115  002ADC  6F73               	movwf	(___flmul@a+1)& (0+255),b
 16116  002ADE  0E7A               	movlw	122
 16117  002AE0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 16118  002AE2  0E44               	movlw	68
 16119  002AE4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 16120  002AE6  EC94  F00B         	call	___flmul	;wreg free
 16121  002AEA  C06E  F0CF         	movff	?___flmul,cal_pt100_temperature_ex@f1
 16122  002AEE  C06F  F0D0         	movff	?___flmul+1,cal_pt100_temperature_ex@f1+1
 16123  002AF2  C070  F0D1         	movff	?___flmul+2,cal_pt100_temperature_ex@f1+2
 16124  002AF6  C071  F0D2         	movff	?___flmul+3,cal_pt100_temperature_ex@f1+3
 16125                           
 16126                           ;data.c: 554: rtExTemperatureIn= (int32_t)f1;
 16127  002AFA  C0CF  F0B8         	movff	cal_pt100_temperature_ex@f1,___fltol@f1
 16128  002AFE  C0D0  F0B9         	movff	cal_pt100_temperature_ex@f1+1,___fltol@f1+1
 16129  002B02  C0D1  F0BA         	movff	cal_pt100_temperature_ex@f1+2,___fltol@f1+2
 16130  002B06  C0D2  F0BB         	movff	cal_pt100_temperature_ex@f1+3,___fltol@f1+3
 16131  002B0A  EC32  F028         	call	___fltol	;wreg free
 16132  002B0E  C0B8  F14E         	movff	?___fltol,_rtExTemperatureIn	;volatile
 16133  002B12  C0B9  F14F         	movff	?___fltol+1,_rtExTemperatureIn+1	;volatile
 16134  002B16  C0BA  F150         	movff	?___fltol+2,_rtExTemperatureIn+2	;volatile
 16135  002B1A  C0BB  F151         	movff	?___fltol+3,_rtExTemperatureIn+3	;volatile
 16136  002B1E  0012               	return		;funcret
 16137  002B20                     __end_of_cal_pt100_temperature_ex:
 16138                           	opt stack 0
 16139                           tosu	equ	0xFFF
 16140                           tosh	equ	0xFFE
 16141                           tosl	equ	0xFFD
 16142                           pclath	equ	0xFFA
 16143                           tblptru	equ	0xFF8
 16144                           tblptrh	equ	0xFF7
 16145                           tblptrl	equ	0xFF6
 16146                           tablat	equ	0xFF5
 16147                           prodh	equ	0xFF4
 16148                           prodl	equ	0xFF3
 16149                           intcon	equ	0xFF2
 16150                           indf0	equ	0xFEF
 16151                           postinc0	equ	0xFEE
 16152                           fsr0h	equ	0xFEA
 16153                           fsr0l	equ	0xFE9
 16154                           wreg	equ	0xFE8
 16155                           postinc1	equ	0xFE6
 16156                           postdec1	equ	0xFE5
 16157                           plusw1	equ	0xFE3
 16158                           fsr1h	equ	0xFE2
 16159                           fsr1l	equ	0xFE1
 16160                           indf2	equ	0xFDF
 16161                           postinc2	equ	0xFDE
 16162                           postdec2	equ	0xFDD
 16163                           plusw2	equ	0xFDB
 16164                           fsr2h	equ	0xFDA
 16165                           fsr2l	equ	0xFD9
 16166                           status	equ	0xFD8
 16167                           
 16168 ;; *************** function _cal_press *****************
 16169 ;; Defined at:
 16170 ;;		line 493 in file "src/api/data.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;		None
 16173 ;; Auto vars:     Size  Location     Type
 16174 ;;  xin             8   58[BANK0 ] struct .
 16175 ;;  tabrow          2   56[BANK0 ] PTR struct .
 16176 ;;		 -> prCalibTabDef.prCalibRow(156), prCalibTabDef(162), 
 16177 ;;  ret             1   55[BANK0 ] unsigned char 
 16178 ;; Return value:  Size  Location     Type
 16179 ;;                  1    wreg      unsigned char 
 16180 ;; Registers used:
 16181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16182 ;; Tracked objects:
 16183 ;;		On entry : 0/0
 16184 ;;		On exit  : 0/0
 16185 ;;		Unchanged: 0/0
 16186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16188 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16190 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16191 ;;Total ram usage:       11 bytes
 16192 ;; Hardware stack levels used:    1
 16193 ;; Hardware stack levels required when called:    6
 16194 ;; This function calls:
 16195 ;;		_m_interp1_cal_p_v
 16196 ;; This function is called by:
 16197 ;;		_event_process_rtc
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text85
 16202  00685C                     __ptext85:
 16203                           	opt stack 0
 16204  00685C                     _cal_press:
 16205                           	opt stack 22
 16206                           
 16207                           ;data.c: 495: uint8_t ret;
 16208                           ;data.c: 496: st_prData xin={0};
 16209                           
 16210                           ;incstack = 0
 16211  00685C  EE21  F023         	lfsr	2,cal_press@F7765
 16212  006860  EE10  F09A         	lfsr	1,cal_press@xin
 16213  006864  0E07               	movlw	7
 16214  006866                     u11241:
 16215  006866  CFDB FFE3          	movff	plusw2,plusw1
 16216  00686A  06E8               	decf	wreg,f,c
 16217  00686C  E2FC               	bc	u11241
 16218                           
 16219                           ;data.c: 497: xin.pValue=0;
 16220  00686E  0E00               	movlw	0
 16221  006870  0100               	movlb	0	; () banked
 16222  006872  6F9A               	movwf	cal_press@xin& (0+255),b
 16223  006874  0E00               	movlw	0
 16224  006876  6F9B               	movwf	(cal_press@xin+1)& (0+255),b
 16225  006878  0E00               	movlw	0
 16226  00687A  6F9C               	movwf	(cal_press@xin+2)& (0+255),b
 16227  00687C  0E00               	movlw	0
 16228  00687E  6F9D               	movwf	(cal_press@xin+3)& (0+255),b
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;data.c: 498: xin.pAdcValue=adc_pressure;
 16232  006880  C182  F09E         	movff	_adc_pressure,cal_press@xin+4	;volatile
 16233  006884  C183  F09F         	movff	_adc_pressure+1,cal_press@xin+5	;volatile
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;data.c: 499: xin.tAdcValue=0;
 16237  006888  0E00               	movlw	0
 16238  00688A  0100               	movlb	0	; () banked
 16239  00688C  6FA1               	movwf	(cal_press@xin+7)& (0+255),b
 16240  00688E  0E00               	movlw	0
 16241  006890  6FA0               	movwf	(cal_press@xin+6)& (0+255),b
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;data.c: 500: st_prCalibRowDef* tabrow;
 16245                           ;data.c: 501: tabrow= &prCalibTabDef.prCalibRow[0];
 16246  006892  0E04               	movlw	low (_prCalibTabDef+4)
 16247  006894  0100               	movlb	0	; () banked
 16248  006896  6F98               	movwf	cal_press@tabrow& (0+255),b
 16249  006898  0E03               	movlw	high (_prCalibTabDef+4)
 16250  00689A  0100               	movlb	0	; () banked
 16251  00689C  6F99               	movwf	(cal_press@tabrow+1)& (0+255),b
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;data.c: 502: ret=m_interp1_cal_p_v(tabrow,&xin,(0));
 16255  00689E  C098  F07A         	movff	cal_press@tabrow,m_interp1_cal_p_v@tabrow
 16256  0068A2  C099  F07B         	movff	cal_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 16257  0068A6  0E9A               	movlw	low cal_press@xin
 16258  0068A8  0100               	movlb	0	; () banked
 16259  0068AA  6F7C               	movwf	m_interp1_cal_p_v@xin& (0+255),b
 16260  0068AC  0E00               	movlw	high cal_press@xin
 16261  0068AE  0100               	movlb	0	; () banked
 16262  0068B0  6F7D               	movwf	(m_interp1_cal_p_v@xin+1)& (0+255),b
 16263  0068B2  0E00               	movlw	0
 16264  0068B4  0100               	movlb	0	; () banked
 16265  0068B6  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 16266  0068B8  0E00               	movlw	0
 16267  0068BA  0100               	movlb	0	; () banked
 16268  0068BC  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 16269  0068BE  EC37  F004         	call	_m_interp1_cal_p_v	;wreg free
 16270  0068C2  0100               	movlb	0	; () banked
 16271  0068C4  6F97               	movwf	cal_press@ret& (0+255),b
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;data.c: 503: rtPressure=xin.pValue;
 16275  0068C6  C09A  F152         	movff	cal_press@xin,_rtPressure	;volatile
 16276  0068CA  C09B  F153         	movff	cal_press@xin+1,_rtPressure+1	;volatile
 16277  0068CE  C09C  F154         	movff	cal_press@xin+2,_rtPressure+2	;volatile
 16278  0068D2  C09D  F155         	movff	cal_press@xin+3,_rtPressure+3	;volatile
 16279  0068D6  0012               	return	
 16280  0068D8                     __end_of_cal_press:
 16281                           	opt stack 0
 16282                           tosu	equ	0xFFF
 16283                           tosh	equ	0xFFE
 16284                           tosl	equ	0xFFD
 16285                           pclath	equ	0xFFA
 16286                           tblptru	equ	0xFF8
 16287                           tblptrh	equ	0xFF7
 16288                           tblptrl	equ	0xFF6
 16289                           tablat	equ	0xFF5
 16290                           prodh	equ	0xFF4
 16291                           prodl	equ	0xFF3
 16292                           intcon	equ	0xFF2
 16293                           indf0	equ	0xFEF
 16294                           postinc0	equ	0xFEE
 16295                           fsr0h	equ	0xFEA
 16296                           fsr0l	equ	0xFE9
 16297                           wreg	equ	0xFE8
 16298                           postinc1	equ	0xFE6
 16299                           postdec1	equ	0xFE5
 16300                           plusw1	equ	0xFE3
 16301                           fsr1h	equ	0xFE2
 16302                           fsr1l	equ	0xFE1
 16303                           indf2	equ	0xFDF
 16304                           postinc2	equ	0xFDE
 16305                           postdec2	equ	0xFDD
 16306                           plusw2	equ	0xFDB
 16307                           fsr2h	equ	0xFDA
 16308                           fsr2l	equ	0xFD9
 16309                           status	equ	0xFD8
 16310                           
 16311 ;; *************** function _cal_diff_press *****************
 16312 ;; Defined at:
 16313 ;;		line 458 in file "src/api/data.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;		None
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;  tmpx           24    2[BANK2 ] struct .[3]
 16318 ;;  xin             2   26[BANK2 ] PTR struct .
 16319 ;;		 -> x_prDiffData(8), 
 16320 ;;  tabrow          2    0[BANK2 ] PTR struct .
 16321 ;;		 -> diff_prCalibTabDef.prCalibRow(156), diff_prCalibTabDef(162), 
 16322 ;;  i               1   28[BANK2 ] unsigned char 
 16323 ;; Return value:  Size  Location     Type
 16324 ;;                  1    wreg      unsigned char 
 16325 ;; Registers used:
 16326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16327 ;; Tracked objects:
 16328 ;;		On entry : 0/0
 16329 ;;		On exit  : 0/0
 16330 ;;		Unchanged: 0/0
 16331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16333 ;;      Locals:         0       0       0      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16335 ;;      Totals:         0       0       0      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16336 ;;Total ram usage:       29 bytes
 16337 ;; Hardware stack levels used:    1
 16338 ;; Hardware stack levels required when called:    7
 16339 ;; This function calls:
 16340 ;;		_cal_diff_hight_to_vol_h
 16341 ;;		_cal_diff_hight_to_vol_v
 16342 ;;		_cal_diff_p_to_h
 16343 ;;		_m_interp1_cal_p_t
 16344 ;;		_m_interp1_cal_p_v
 16345 ;; This function is called by:
 16346 ;;		_event_process_rtc
 16347 ;; This function uses a non-reentrant model
 16348 ;;
 16349                           
 16350                           	psect	text86
 16351  004F52                     __ptext86:
 16352                           	opt stack 0
 16353  004F52                     _cal_diff_press:
 16354                           	opt stack 21
 16355                           
 16356                           ;data.c: 460: st_prData* xin= &x_prDiffData;
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;incstack = 0
 16360  004F52  0EEA               	movlw	low _x_prDiffData
 16361  004F54  0102               	movlb	2	; () banked
 16362  004F56  6FCC               	movwf	cal_diff_press@xin& (0+255),b
 16363  004F58  0E01               	movlw	high _x_prDiffData
 16364  004F5A  0102               	movlb	2	; () banked
 16365  004F5C  6FCD               	movwf	(cal_diff_press@xin+1)& (0+255),b
 16366                           
 16367                           ; BSR set to: 2
 16368                           ;data.c: 462: st_prData tmpx[3];
 16369                           ;data.c: 463: uint8_t i=0;
 16370  004F5E  0E00               	movlw	0
 16371  004F60  0102               	movlb	2	; () banked
 16372  004F62  6FCE               	movwf	cal_diff_press@i& (0+255),b
 16373                           
 16374                           ; BSR set to: 2
 16375                           ;data.c: 464: st_prCalibRowDef* tabrow;
 16376                           ;data.c: 465: for(i=0;i<diff_prCalibTabDef.rowCount;i++){
 16377  004F64  0E00               	movlw	0
 16378  004F66  0102               	movlb	2	; () banked
 16379  004F68  6FCE               	movwf	cal_diff_press@i& (0+255),b
 16380  004F6A  D022               	goto	l12214
 16381  004F6C                     l12208:
 16382                           
 16383                           ; BSR set to: 2
 16384                           ;data.c: 466: tabrow = &(diff_prCalibTabDef.prCalibRow[i]);
 16385  004F6C  0102               	movlb	2	; () banked
 16386  004F6E  51CE               	movf	cal_diff_press@i& (0+255),w,b
 16387  004F70  0D34               	mullw	52
 16388  004F72  0E04               	movlw	low (_diff_prCalibTabDef+4)
 16389  004F74  24F3               	addwf	prodl,w,c
 16390  004F76  0102               	movlb	2	; () banked
 16391  004F78  6FB2               	movwf	cal_diff_press@tabrow& (0+255),b
 16392  004F7A  0E02               	movlw	high (_diff_prCalibTabDef+4)
 16393  004F7C  20F4               	addwfc	prodh,w,c
 16394  004F7E  0102               	movlb	2	; () banked
 16395  004F80  6FB3               	movwf	(cal_diff_press@tabrow+1)& (0+255),b
 16396                           
 16397                           ; BSR set to: 2
 16398                           ;data.c: 467: m_interp1_cal_p_v(tabrow,xin,&tmpx[i]);
 16399  004F82  C2B2  F07A         	movff	cal_diff_press@tabrow,m_interp1_cal_p_v@tabrow
 16400  004F86  C2B3  F07B         	movff	cal_diff_press@tabrow+1,m_interp1_cal_p_v@tabrow+1
 16401  004F8A  C2CC  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_v@xin
 16402  004F8E  C2CD  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_v@xin+1
 16403  004F92  0102               	movlb	2	; () banked
 16404  004F94  51CE               	movf	cal_diff_press@i& (0+255),w,b
 16405  004F96  0D08               	mullw	8
 16406  004F98  0EB4               	movlw	low cal_diff_press@tmpx
 16407  004F9A  24F3               	addwf	prodl,w,c
 16408  004F9C  0100               	movlb	0	; () banked
 16409  004F9E  6F7E               	movwf	m_interp1_cal_p_v@xout& (0+255),b
 16410  004FA0  0E02               	movlw	high cal_diff_press@tmpx
 16411  004FA2  20F4               	addwfc	prodh,w,c
 16412  004FA4  0100               	movlb	0	; () banked
 16413  004FA6  6F7F               	movwf	(m_interp1_cal_p_v@xout+1)& (0+255),b
 16414  004FA8  EC37  F004         	call	_m_interp1_cal_p_v	;wreg free
 16415  004FAC  0102               	movlb	2	; () banked
 16416  004FAE  2BCE               	incf	cal_diff_press@i& (0+255),f,b
 16417  004FB0                     l12214:
 16418                           
 16419                           ; BSR set to: 2
 16420  004FB0  0102               	movlb	2	; () banked
 16421  004FB2  5100               	movf	_diff_prCalibTabDef& (0+255),w,b
 16422  004FB4  0102               	movlb	2	; () banked
 16423  004FB6  5DCE               	subwf	cal_diff_press@i& (0+255),w,b
 16424  004FB8  A0D8               	btfss	status,0,c
 16425  004FBA  D7D8               	goto	l12208
 16426                           
 16427                           ; BSR set to: 2
 16428                           ;data.c: 468: }
 16429                           ;data.c: 469: m_interp1_cal_p_t(&tmpx[0],xin,i);
 16430                           
 16431                           ; BSR set to: 2
 16432  004FBC  0EB4               	movlw	low cal_diff_press@tmpx
 16433  004FBE  0100               	movlb	0	; () banked
 16434  004FC0  6F7A               	movwf	m_interp1_cal_p_t@tmpx& (0+255),b
 16435  004FC2  0E02               	movlw	high cal_diff_press@tmpx
 16436  004FC4  0100               	movlb	0	; () banked
 16437  004FC6  6F7B               	movwf	(m_interp1_cal_p_t@tmpx+1)& (0+255),b
 16438  004FC8  C2CC  F07C         	movff	cal_diff_press@xin,m_interp1_cal_p_t@xin
 16439  004FCC  C2CD  F07D         	movff	cal_diff_press@xin+1,m_interp1_cal_p_t@xin+1
 16440  004FD0  C2CE  F07E         	movff	cal_diff_press@i,m_interp1_cal_p_t@tmpxLen
 16441  004FD4  ECE7  F00D         	call	_m_interp1_cal_p_t	;wreg free
 16442                           
 16443                           ;data.c: 471: rtDiffPressure=xin->pValue;
 16444  004FD8  C2CC  FFD9         	movff	cal_diff_press@xin,fsr2l
 16445  004FDC  C2CD  FFDA         	movff	cal_diff_press@xin+1,fsr2h
 16446  004FE0  CFDE F166          	movff	postinc2,_rtDiffPressure	;volatile
 16447  004FE4  CFDE F167          	movff	postinc2,_rtDiffPressure+1	;volatile
 16448  004FE8  CFDE F168          	movff	postinc2,_rtDiffPressure+2	;volatile
 16449  004FEC  CFDE F169          	movff	postinc2,_rtDiffPressure+3	;volatile
 16450                           
 16451                           ;data.c: 473: cal_diff_p_to_h(xin);
 16452  004FF0  C2CC  F0C2         	movff	cal_diff_press@xin,cal_diff_p_to_h@xin
 16453  004FF4  C2CD  F0C3         	movff	cal_diff_press@xin+1,cal_diff_p_to_h@xin+1
 16454  004FF8  EC3B  F02B         	call	_cal_diff_p_to_h	;wreg free
 16455                           
 16456                           ;data.c: 474: if(fpSysData->pos==HOTIZONTAL){
 16457  004FFC  0E04               	movlw	4
 16458  004FFE  243C               	addwf	_fpSysData,w,c
 16459  005000  6EF6               	movwf	tblptrl,c
 16460  005002  0E00               	movlw	0
 16461  005004  203D               	addwfc	_fpSysData+1,w,c
 16462  005006  6EF7               	movwf	tblptrh,c
 16463  005008  0E00               	movlw	0
 16464  00500A  203E               	addwfc	_fpSysData+2,w,c
 16465  00500C  6EF8               	movwf	tblptru,c
 16466  00500E  0008               	tblrd		*
 16467  005010  50F5               	movf	tablat,w,c
 16468  005012  0900               	iorlw	0
 16469  005014  A4D8               	btfss	status,2,c
 16470  005016  D013               	goto	l12226
 16471                           
 16472                           ;data.c: 475: rtVolume=cal_diff_hight_to_vol_h(rtHight);
 16473  005018  C162  F0E6         	movff	_rtHight,cal_diff_hight_to_vol_h@h	;volatile
 16474  00501C  C163  F0E7         	movff	_rtHight+1,cal_diff_hight_to_vol_h@h+1	;volatile
 16475  005020  C164  F0E8         	movff	_rtHight+2,cal_diff_hight_to_vol_h@h+2	;volatile
 16476  005024  C165  F0E9         	movff	_rtHight+3,cal_diff_hight_to_vol_h@h+3	;volatile
 16477  005028  EC90  F015         	call	_cal_diff_hight_to_vol_h	;wreg free
 16478  00502C  C0E6  F15A         	movff	?_cal_diff_hight_to_vol_h,_rtVolume	;volatile
 16479  005030  C0E7  F15B         	movff	?_cal_diff_hight_to_vol_h+1,_rtVolume+1	;volatile
 16480  005034  C0E8  F15C         	movff	?_cal_diff_hight_to_vol_h+2,_rtVolume+2	;volatile
 16481  005038  C0E9  F15D         	movff	?_cal_diff_hight_to_vol_h+3,_rtVolume+3	;volatile
 16482                           
 16483                           ;data.c: 476: }else{
 16484  00503C  0012               	return	
 16485  00503E                     l12226:
 16486                           
 16487                           ;data.c: 477: rtVolume=cal_diff_hight_to_vol_v(rtHight);
 16488  00503E  C162  F0E6         	movff	_rtHight,cal_diff_hight_to_vol_v@h	;volatile
 16489  005042  C163  F0E7         	movff	_rtHight+1,cal_diff_hight_to_vol_v@h+1	;volatile
 16490  005046  C164  F0E8         	movff	_rtHight+2,cal_diff_hight_to_vol_v@h+2	;volatile
 16491  00504A  C165  F0E9         	movff	_rtHight+3,cal_diff_hight_to_vol_v@h+3	;volatile
 16492  00504E  EC6E  F000         	call	_cal_diff_hight_to_vol_v	;wreg free
 16493  005052  C0E6  F15A         	movff	?_cal_diff_hight_to_vol_v,_rtVolume	;volatile
 16494  005056  C0E7  F15B         	movff	?_cal_diff_hight_to_vol_v+1,_rtVolume+1	;volatile
 16495  00505A  C0E8  F15C         	movff	?_cal_diff_hight_to_vol_v+2,_rtVolume+2	;volatile
 16496  00505E  C0E9  F15D         	movff	?_cal_diff_hight_to_vol_v+3,_rtVolume+3	;volatile
 16497  005062  0012               	return	
 16498  005064                     __end_of_cal_diff_press:
 16499                           	opt stack 0
 16500                           tosu	equ	0xFFF
 16501                           tosh	equ	0xFFE
 16502                           tosl	equ	0xFFD
 16503                           pclath	equ	0xFFA
 16504                           tblptru	equ	0xFF8
 16505                           tblptrh	equ	0xFF7
 16506                           tblptrl	equ	0xFF6
 16507                           tablat	equ	0xFF5
 16508                           prodh	equ	0xFF4
 16509                           prodl	equ	0xFF3
 16510                           intcon	equ	0xFF2
 16511                           indf0	equ	0xFEF
 16512                           postinc0	equ	0xFEE
 16513                           fsr0h	equ	0xFEA
 16514                           fsr0l	equ	0xFE9
 16515                           wreg	equ	0xFE8
 16516                           postinc1	equ	0xFE6
 16517                           postdec1	equ	0xFE5
 16518                           plusw1	equ	0xFE3
 16519                           fsr1h	equ	0xFE2
 16520                           fsr1l	equ	0xFE1
 16521                           indf2	equ	0xFDF
 16522                           postinc2	equ	0xFDE
 16523                           postdec2	equ	0xFDD
 16524                           plusw2	equ	0xFDB
 16525                           fsr2h	equ	0xFDA
 16526                           fsr2l	equ	0xFD9
 16527                           status	equ	0xFD8
 16528                           
 16529 ;; *************** function _m_interp1_cal_p_v *****************
 16530 ;; Defined at:
 16531 ;;		line 314 in file "src/api/data.c"
 16532 ;; Parameters:    Size  Location     Type
 16533 ;;  tabrow          2   26[BANK0 ] PTR struct .
 16534 ;;		 -> prCalibTabDef.prCalibRow(156), diff_prCalibTabDef.prCalibRow(156), prCalibTabDef(162), diff_prCalibTabDef(162), 
 16535 ;;  xin             2   28[BANK0 ] PTR struct .
 16536 ;;		 -> cal_press@xin(8), x_prDiffData(8), 
 16537 ;;  xout            2   30[BANK0 ] PTR struct .
 16538 ;;		 -> cal_diff_press@tmpx(24), NULL(0), 
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;  x               4   50[BANK0 ] long 
 16541 ;;  y               4   46[BANK0 ] long 
 16542 ;;  i               1   54[BANK0 ] unsigned char 
 16543 ;; Return value:  Size  Location     Type
 16544 ;;                  1    wreg      unsigned char 
 16545 ;; Registers used:
 16546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16547 ;; Tracked objects:
 16548 ;;		On entry : 0/0
 16549 ;;		On exit  : 0/0
 16550 ;;		Unchanged: 0/0
 16551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16552 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16553 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16554 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16555 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16556 ;;Total ram usage:       29 bytes
 16557 ;; Hardware stack levels used:    1
 16558 ;; Hardware stack levels required when called:    5
 16559 ;; This function calls:
 16560 ;;		___aldiv
 16561 ;;		___lmul
 16562 ;; This function is called by:
 16563 ;;		_cal_diff_press
 16564 ;;		_cal_press
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text87
 16569  00086E                     __ptext87:
 16570                           	opt stack 0
 16571  00086E                     _m_interp1_cal_p_v:
 16572                           	opt stack 22
 16573                           
 16574                           ;data.c: 316: uint8_t i;
 16575                           ;data.c: 317: int32_t x,y;
 16576                           ;data.c: 318: for(i=0;i< (tabrow->pCount) - 1 ;i++){
 16577                           
 16578                           ;incstack = 0
 16579  00086E  0E00               	movlw	0
 16580  000870  0100               	movlb	0	; () banked
 16581  000872  6F96               	movwf	m_interp1_cal_p_v@i& (0+255),b
 16582  000874  D0C1               	goto	l11670
 16583  000876                     l11658:
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;data.c: 320: if(tabrow->prCalibPoint[i].pAdcValue < tabrow->prCalibPoint[i+1].pAdcValue
      +                          ){
 16587  000876  0100               	movlb	0	; () banked
 16588  000878  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16589  00087A  0100               	movlb	0	; () banked
 16590  00087C  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 16591  00087E  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 16592  000880  0100               	movlb	0	; () banked
 16593  000882  90D8               	bcf	status,0,c
 16594  000884  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16595  000886  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16596  000888  0100               	movlb	0	; () banked
 16597  00088A  90D8               	bcf	status,0,c
 16598  00088C  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16599  00088E  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16600  000890  0100               	movlb	0	; () banked
 16601  000892  90D8               	bcf	status,0,c
 16602  000894  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16603  000896  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16604  000898  0E0C               	movlw	12
 16605  00089A  0100               	movlb	0	; () banked
 16606  00089C  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 16607  00089E  0E00               	movlw	0
 16608  0008A0  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16609  0008A2  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 16610  0008A6  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 16611  0008AA  0100               	movlb	0	; () banked
 16612  0008AC  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 16613  0008AE  0100               	movlb	0	; () banked
 16614  0008B0  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16615  0008B2  0100               	movlb	0	; () banked
 16616  0008B4  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 16617  0008B6  0100               	movlb	0	; () banked
 16618  0008B8  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16619  0008BA  0E04               	movlw	4
 16620  0008BC  0100               	movlb	0	; () banked
 16621  0008BE  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 16622  0008C0  6ED9               	movwf	fsr2l,c
 16623  0008C2  0E00               	movlw	0
 16624  0008C4  0100               	movlb	0	; () banked
 16625  0008C6  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 16626  0008C8  6EDA               	movwf	fsr2h,c
 16627  0008CA  0100               	movlb	0	; () banked
 16628  0008CC  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16629  0008CE  0D08               	mullw	8
 16630  0008D0  0E04               	movlw	4
 16631  0008D2  26F3               	addwf	prodl,f,c
 16632  0008D4  0E00               	movlw	0
 16633  0008D6  22F4               	addwfc	prodh,f,c
 16634  0008D8  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 16635  0008DC  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 16636  0008E0  50F3               	movf	prodl,w,c
 16637  0008E2  0100               	movlb	0	; () banked
 16638  0008E4  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 16639  0008E6  50F4               	movf	prodh,w,c
 16640  0008E8  0100               	movlb	0	; () banked
 16641  0008EA  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 16642  0008EC  0E04               	movlw	4
 16643  0008EE  0100               	movlb	0	; () banked
 16644  0008F0  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 16645  0008F2  6EE1               	movwf	fsr1l,c
 16646  0008F4  0E00               	movlw	0
 16647  0008F6  0100               	movlb	0	; () banked
 16648  0008F8  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 16649  0008FA  6EE2               	movwf	fsr1h,c
 16650  0008FC  50DE               	movf	postinc2,w,c
 16651  0008FE  5CE6               	subwf	postinc1,w,c
 16652  000900  50E6               	movf	postinc1,w,c
 16653  000902  0A80               	xorlw	128
 16654  000904  0100               	movlb	0	; () banked
 16655  000906  6F8A               	movwf	(??_m_interp1_cal_p_v+10)& (0+255),b
 16656  000908  50DE               	movf	postinc2,w,c
 16657  00090A  0A80               	xorlw	128
 16658  00090C  0100               	movlb	0	; () banked
 16659  00090E  598A               	subwfb	(??_m_interp1_cal_p_v+10)& (0+255),w,b
 16660  000910  B0D8               	btfsc	status,0,c
 16661  000912  D03E               	goto	l11664
 16662                           
 16663                           ; BSR set to: 0
 16664                           ;data.c: 321: if(xin->pAdcValue <= tabrow->prCalibPoint[i+1].pAdcValue)break;
 16665  000914  0100               	movlb	0	; () banked
 16666  000916  EE20 F004          	lfsr	2,4
 16667  00091A  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 16668  00091C  26D9               	addwf	fsr2l,f,c
 16669  00091E  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 16670  000920  22DA               	addwfc	fsr2h,f,c
 16671  000922  0100               	movlb	0	; () banked
 16672  000924  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16673  000926  0100               	movlb	0	; () banked
 16674  000928  6F82               	movwf	(??_m_interp1_cal_p_v+2)& (0+255),b
 16675  00092A  6B83               	clrf	(??_m_interp1_cal_p_v+3)& (0+255),b
 16676  00092C  0100               	movlb	0	; () banked
 16677  00092E  90D8               	bcf	status,0,c
 16678  000930  3782               	rlcf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16679  000932  3783               	rlcf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16680  000934  0100               	movlb	0	; () banked
 16681  000936  90D8               	bcf	status,0,c
 16682  000938  3782               	rlcf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16683  00093A  3783               	rlcf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16684  00093C  0100               	movlb	0	; () banked
 16685  00093E  90D8               	bcf	status,0,c
 16686  000940  3782               	rlcf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16687  000942  3783               	rlcf	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16688  000944  0E0C               	movlw	12
 16689  000946  0100               	movlb	0	; () banked
 16690  000948  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16691  00094A  0E00               	movlw	0
 16692  00094C  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16693  00094E  C07A  F084         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+4
 16694  000952  C07B  F085         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+5
 16695  000956  0100               	movlb	0	; () banked
 16696  000958  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 16697  00095A  0100               	movlb	0	; () banked
 16698  00095C  2784               	addwf	(??_m_interp1_cal_p_v+4)& (0+255),f,b
 16699  00095E  0100               	movlb	0	; () banked
 16700  000960  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 16701  000962  0100               	movlb	0	; () banked
 16702  000964  2385               	addwfc	(??_m_interp1_cal_p_v+5)& (0+255),f,b
 16703  000966  0E04               	movlw	4
 16704  000968  0100               	movlb	0	; () banked
 16705  00096A  2584               	addwf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 16706  00096C  6EE1               	movwf	fsr1l,c
 16707  00096E  0E00               	movlw	0
 16708  000970  0100               	movlb	0	; () banked
 16709  000972  2185               	addwfc	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 16710  000974  6EE2               	movwf	fsr1h,c
 16711  000976  50DE               	movf	postinc2,w,c
 16712  000978  5CE6               	subwf	postinc1,w,c
 16713  00097A  50E6               	movf	postinc1,w,c
 16714  00097C  0A80               	xorlw	128
 16715  00097E  0100               	movlb	0	; () banked
 16716  000980  6F88               	movwf	(??_m_interp1_cal_p_v+8)& (0+255),b
 16717  000982  50DE               	movf	postinc2,w,c
 16718  000984  0A80               	xorlw	128
 16719  000986  0100               	movlb	0	; () banked
 16720  000988  5988               	subwfb	(??_m_interp1_cal_p_v+8)& (0+255),w,b
 16721  00098A  B0D8               	btfsc	status,0,c
 16722  00098C  D060               	goto	l11672
 16723  00098E  D032               	goto	l11668
 16724  000990                     l11664:
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;data.c: 323: if(xin->pAdcValue >= tabrow->prCalibPoint[i+1].pAdcValue)break;
 16728  000990  0100               	movlb	0	; () banked
 16729  000992  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16730  000994  0100               	movlb	0	; () banked
 16731  000996  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 16732  000998  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 16733  00099A  0100               	movlb	0	; () banked
 16734  00099C  90D8               	bcf	status,0,c
 16735  00099E  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16736  0009A0  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16737  0009A2  0100               	movlb	0	; () banked
 16738  0009A4  90D8               	bcf	status,0,c
 16739  0009A6  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16740  0009A8  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16741  0009AA  0100               	movlb	0	; () banked
 16742  0009AC  90D8               	bcf	status,0,c
 16743  0009AE  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16744  0009B0  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16745  0009B2  0E0C               	movlw	12
 16746  0009B4  0100               	movlb	0	; () banked
 16747  0009B6  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 16748  0009B8  0E00               	movlw	0
 16749  0009BA  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16750  0009BC  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 16751  0009C0  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 16752  0009C4  0100               	movlb	0	; () banked
 16753  0009C6  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 16754  0009C8  0100               	movlb	0	; () banked
 16755  0009CA  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16756  0009CC  0100               	movlb	0	; () banked
 16757  0009CE  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 16758  0009D0  0100               	movlb	0	; () banked
 16759  0009D2  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16760  0009D4  0E04               	movlw	4
 16761  0009D6  0100               	movlb	0	; () banked
 16762  0009D8  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 16763  0009DA  6ED9               	movwf	fsr2l,c
 16764  0009DC  0E00               	movlw	0
 16765  0009DE  0100               	movlb	0	; () banked
 16766  0009E0  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 16767  0009E2  6EDA               	movwf	fsr2h,c
 16768  0009E4  0100               	movlb	0	; () banked
 16769  0009E6  EE10 F004          	lfsr	1,4
 16770  0009EA  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 16771  0009EC  26E1               	addwf	fsr1l,f,c
 16772  0009EE  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 16773  0009F0  22E2               	addwfc	fsr1h,f,c
 16774  0009F2  D7C1               	goto	L6
 16775  0009F4                     l11668:
 16776                           
 16777                           ; BSR set to: 0
 16778  0009F4  0100               	movlb	0	; () banked
 16779  0009F6  2B96               	incf	m_interp1_cal_p_v@i& (0+255),f,b
 16780  0009F8                     l11670:
 16781                           
 16782                           ; BSR set to: 0
 16783  0009F8  0EFF               	movlw	255
 16784  0009FA  0100               	movlb	0	; () banked
 16785  0009FC  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 16786  0009FE  0EFF               	movlw	255
 16787  000A00  0100               	movlb	0	; () banked
 16788  000A02  6F81               	movwf	(??_m_interp1_cal_p_v+1)& (0+255),b
 16789  000A04  C07A  FFD9         	movff	m_interp1_cal_p_v@tabrow,fsr2l
 16790  000A08  C07B  FFDA         	movff	m_interp1_cal_p_v@tabrow+1,fsr2h
 16791  000A0C  50DF               	movf	indf2,w,c
 16792  000A0E  0100               	movlb	0	; () banked
 16793  000A10  6F82               	movwf	(??_m_interp1_cal_p_v+2)& (0+255),b
 16794  000A12  6B83               	clrf	(??_m_interp1_cal_p_v+3)& (0+255),b
 16795  000A14  0100               	movlb	0	; () banked
 16796  000A16  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 16797  000A18  0100               	movlb	0	; () banked
 16798  000A1A  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16799  000A1C  0100               	movlb	0	; () banked
 16800  000A1E  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 16801  000A20  0100               	movlb	0	; () banked
 16802  000A22  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16803  000A24  0100               	movlb	0	; () banked
 16804  000A26  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16805  000A28  0100               	movlb	0	; () banked
 16806  000A2A  6F84               	movwf	(??_m_interp1_cal_p_v+4)& (0+255),b
 16807  000A2C  6B85               	clrf	(??_m_interp1_cal_p_v+5)& (0+255),b
 16808  000A2E  0100               	movlb	0	; () banked
 16809  000A30  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 16810  000A32  0100               	movlb	0	; () banked
 16811  000A34  5D84               	subwf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 16812  000A36  0100               	movlb	0	; () banked
 16813  000A38  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 16814  000A3A  0A80               	xorlw	128
 16815  000A3C  0100               	movlb	0	; () banked
 16816  000A3E  6F86               	movwf	(??_m_interp1_cal_p_v+6)& (0+255),b
 16817  000A40  0100               	movlb	0	; () banked
 16818  000A42  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 16819  000A44  0A80               	xorlw	128
 16820  000A46  0100               	movlb	0	; () banked
 16821  000A48  5986               	subwfb	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 16822  000A4A  A0D8               	btfss	status,0,c
 16823  000A4C  D714               	goto	l11658
 16824  000A4E                     l11672:
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;data.c: 324: }
 16828                           ;data.c: 325: }
 16829                           ;data.c: 326: xin->pValue=tabrow->prCalibPoint[i].pValue;
 16830  000A4E  0100               	movlb	0	; () banked
 16831  000A50  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16832  000A52  0D08               	mullw	8
 16833  000A54  0E04               	movlw	4
 16834  000A56  26F3               	addwf	prodl,f,c
 16835  000A58  0E00               	movlw	0
 16836  000A5A  22F4               	addwfc	prodh,f,c
 16837  000A5C  50F3               	movf	prodl,w,c
 16838  000A5E  0100               	movlb	0	; () banked
 16839  000A60  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 16840  000A62  6ED9               	movwf	fsr2l,c
 16841  000A64  50F4               	movf	prodh,w,c
 16842  000A66  0100               	movlb	0	; () banked
 16843  000A68  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 16844  000A6A  6EDA               	movwf	fsr2h,c
 16845  000A6C  C07C  FFE1         	movff	m_interp1_cal_p_v@xin,fsr1l
 16846  000A70  C07D  FFE2         	movff	m_interp1_cal_p_v@xin+1,fsr1h
 16847  000A74  CFDE FFE6          	movff	postinc2,postinc1
 16848  000A78  CFDE FFE6          	movff	postinc2,postinc1
 16849  000A7C  CFDE FFE6          	movff	postinc2,postinc1
 16850  000A80  CFDE FFE6          	movff	postinc2,postinc1
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;data.c: 327: y = tabrow->prCalibPoint[i+1].pValue - tabrow->prCalibPoint[i].pValue ;
 16854  000A84  0100               	movlb	0	; () banked
 16855  000A86  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16856  000A88  0100               	movlb	0	; () banked
 16857  000A8A  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 16858  000A8C  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 16859  000A8E  0100               	movlb	0	; () banked
 16860  000A90  90D8               	bcf	status,0,c
 16861  000A92  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16862  000A94  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16863  000A96  0100               	movlb	0	; () banked
 16864  000A98  90D8               	bcf	status,0,c
 16865  000A9A  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16866  000A9C  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16867  000A9E  0100               	movlb	0	; () banked
 16868  000AA0  90D8               	bcf	status,0,c
 16869  000AA2  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16870  000AA4  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16871  000AA6  0E0C               	movlw	12
 16872  000AA8  0100               	movlb	0	; () banked
 16873  000AAA  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 16874  000AAC  0E00               	movlw	0
 16875  000AAE  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16876  000AB0  0100               	movlb	0	; () banked
 16877  000AB2  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 16878  000AB4  0100               	movlb	0	; () banked
 16879  000AB6  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 16880  000AB8  6ED9               	movwf	fsr2l,c
 16881  000ABA  0100               	movlb	0	; () banked
 16882  000ABC  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 16883  000ABE  0100               	movlb	0	; () banked
 16884  000AC0  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 16885  000AC2  6EDA               	movwf	fsr2h,c
 16886  000AC4  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 16887  000AC8  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_v+3
 16888  000ACC  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 16889  000AD0  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_v+5
 16890  000AD4  0100               	movlb	0	; () banked
 16891  000AD6  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16892  000AD8  0D08               	mullw	8
 16893  000ADA  0E04               	movlw	4
 16894  000ADC  26F3               	addwf	prodl,f,c
 16895  000ADE  0E00               	movlw	0
 16896  000AE0  22F4               	addwfc	prodh,f,c
 16897  000AE2  50F3               	movf	prodl,w,c
 16898  000AE4  0100               	movlb	0	; () banked
 16899  000AE6  257A               	addwf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 16900  000AE8  6ED9               	movwf	fsr2l,c
 16901  000AEA  50F4               	movf	prodh,w,c
 16902  000AEC  0100               	movlb	0	; () banked
 16903  000AEE  217B               	addwfc	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 16904  000AF0  6EDA               	movwf	fsr2h,c
 16905  000AF2  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_v+6
 16906  000AF6  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_v+7
 16907  000AFA  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 16908  000AFE  CFDE F089          	movff	postinc2,??_m_interp1_cal_p_v+9
 16909  000B02  0100               	movlb	0	; () banked
 16910  000B04  1F86               	comf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 16911  000B06  1F87               	comf	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 16912  000B08  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 16913  000B0A  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 16914  000B0C  2B86               	incf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 16915  000B0E  0E00               	movlw	0
 16916  000B10  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 16917  000B12  2388               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 16918  000B14  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 16919  000B16  0100               	movlb	0	; () banked
 16920  000B18  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 16921  000B1A  0100               	movlb	0	; () banked
 16922  000B1C  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 16923  000B1E  0100               	movlb	0	; () banked
 16924  000B20  6F8E               	movwf	m_interp1_cal_p_v@y& (0+255),b
 16925  000B22  0100               	movlb	0	; () banked
 16926  000B24  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 16927  000B26  0100               	movlb	0	; () banked
 16928  000B28  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 16929  000B2A  0100               	movlb	0	; () banked
 16930  000B2C  6F8F               	movwf	(m_interp1_cal_p_v@y+1)& (0+255),b
 16931  000B2E  0100               	movlb	0	; () banked
 16932  000B30  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 16933  000B32  0100               	movlb	0	; () banked
 16934  000B34  2188               	addwfc	(??_m_interp1_cal_p_v+8)& (0+255),w,b
 16935  000B36  0100               	movlb	0	; () banked
 16936  000B38  6F90               	movwf	(m_interp1_cal_p_v@y+2)& (0+255),b
 16937  000B3A  0100               	movlb	0	; () banked
 16938  000B3C  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 16939  000B3E  0100               	movlb	0	; () banked
 16940  000B40  2189               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),w,b
 16941  000B42  0100               	movlb	0	; () banked
 16942  000B44  6F91               	movwf	(m_interp1_cal_p_v@y+3)& (0+255),b
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;data.c: 328: x = tabrow->prCalibPoint[i+1].pAdcValue - tabrow->prCalibPoint[i].pAdcValu
      +                          e;
 16946  000B46  0100               	movlb	0	; () banked
 16947  000B48  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16948  000B4A  0100               	movlb	0	; () banked
 16949  000B4C  6F80               	movwf	??_m_interp1_cal_p_v& (0+255),b
 16950  000B4E  6B81               	clrf	(??_m_interp1_cal_p_v+1)& (0+255),b
 16951  000B50  0100               	movlb	0	; () banked
 16952  000B52  90D8               	bcf	status,0,c
 16953  000B54  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16954  000B56  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16955  000B58  0100               	movlb	0	; () banked
 16956  000B5A  90D8               	bcf	status,0,c
 16957  000B5C  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16958  000B5E  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16959  000B60  0100               	movlb	0	; () banked
 16960  000B62  90D8               	bcf	status,0,c
 16961  000B64  3780               	rlcf	??_m_interp1_cal_p_v& (0+255),f,b
 16962  000B66  3781               	rlcf	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16963  000B68  0E0C               	movlw	12
 16964  000B6A  0100               	movlb	0	; () banked
 16965  000B6C  2780               	addwf	??_m_interp1_cal_p_v& (0+255),f,b
 16966  000B6E  0E00               	movlw	0
 16967  000B70  2381               	addwfc	(??_m_interp1_cal_p_v+1)& (0+255),f,b
 16968  000B72  C07A  F082         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+2
 16969  000B76  C07B  F083         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+3
 16970  000B7A  0100               	movlb	0	; () banked
 16971  000B7C  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 16972  000B7E  0100               	movlb	0	; () banked
 16973  000B80  2782               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),f,b
 16974  000B82  0100               	movlb	0	; () banked
 16975  000B84  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 16976  000B86  0100               	movlb	0	; () banked
 16977  000B88  2383               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),f,b
 16978  000B8A  0E04               	movlw	4
 16979  000B8C  0100               	movlb	0	; () banked
 16980  000B8E  2582               	addwf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 16981  000B90  6ED9               	movwf	fsr2l,c
 16982  000B92  0E00               	movlw	0
 16983  000B94  0100               	movlb	0	; () banked
 16984  000B96  2183               	addwfc	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 16985  000B98  6EDA               	movwf	fsr2h,c
 16986  000B9A  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 16987  000B9E  CFDD F085          	movff	postdec2,??_m_interp1_cal_p_v+5
 16988  000BA2  0100               	movlb	0	; () banked
 16989  000BA4  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 16990  000BA6  0D08               	mullw	8
 16991  000BA8  0E04               	movlw	4
 16992  000BAA  26F3               	addwf	prodl,f,c
 16993  000BAC  0E00               	movlw	0
 16994  000BAE  22F4               	addwfc	prodh,f,c
 16995  000BB0  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 16996  000BB4  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 16997  000BB8  50F3               	movf	prodl,w,c
 16998  000BBA  0100               	movlb	0	; () banked
 16999  000BBC  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 17000  000BBE  50F4               	movf	prodh,w,c
 17001  000BC0  0100               	movlb	0	; () banked
 17002  000BC2  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 17003  000BC4  0E04               	movlw	4
 17004  000BC6  0100               	movlb	0	; () banked
 17005  000BC8  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 17006  000BCA  6ED9               	movwf	fsr2l,c
 17007  000BCC  0E00               	movlw	0
 17008  000BCE  0100               	movlb	0	; () banked
 17009  000BD0  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 17010  000BD2  6EDA               	movwf	fsr2h,c
 17011  000BD4  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 17012  000BD8  CFDD F089          	movff	postdec2,??_m_interp1_cal_p_v+9
 17013  000BDC  0100               	movlb	0	; () banked
 17014  000BDE  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 17015  000BE0  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 17016  000BE2  4B88               	infsnz	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 17017  000BE4  2B89               	incf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 17018  000BE6  0100               	movlb	0	; () banked
 17019  000BE8  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 17020  000BEA  0100               	movlb	0	; () banked
 17021  000BEC  2788               	addwf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 17022  000BEE  0100               	movlb	0	; () banked
 17023  000BF0  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 17024  000BF2  0100               	movlb	0	; () banked
 17025  000BF4  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 17026  000BF6  C088  F092         	movff	??_m_interp1_cal_p_v+8,m_interp1_cal_p_v@x
 17027  000BFA  C089  F093         	movff	??_m_interp1_cal_p_v+9,m_interp1_cal_p_v@x+1
 17028  000BFE  0100               	movlb	0	; () banked
 17029  000C00  0E00               	movlw	0
 17030  000C02  BF93               	btfsc	(m_interp1_cal_p_v@x+1)& (0+255),7,b
 17031  000C04  0EFF               	movlw	-1
 17032  000C06  6F94               	movwf	(m_interp1_cal_p_v@x+2)& (0+255),b
 17033  000C08  6F95               	movwf	(m_interp1_cal_p_v@x+3)& (0+255),b
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;data.c: 329: if(x != 0){
 17037  000C0A  0100               	movlb	0	; () banked
 17038  000C0C  5192               	movf	m_interp1_cal_p_v@x& (0+255),w,b
 17039  000C0E  0100               	movlb	0	; () banked
 17040  000C10  1193               	iorwf	(m_interp1_cal_p_v@x+1)& (0+255),w,b
 17041  000C12  0100               	movlb	0	; () banked
 17042  000C14  1194               	iorwf	(m_interp1_cal_p_v@x+2)& (0+255),w,b
 17043  000C16  0100               	movlb	0	; () banked
 17044  000C18  1195               	iorwf	(m_interp1_cal_p_v@x+3)& (0+255),w,b
 17045  000C1A  B4D8               	btfsc	status,2,c
 17046  000C1C  D08B               	goto	l11682
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;data.c: 330: xin->pValue = xin->pValue + (y/x)*(xin->pAdcValue - tabrow->prCalibPoint[i
      +                          ].pAdcValue);
 17050  000C1E  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 17051  000C22  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 17052  000C26  CFDE F080          	movff	postinc2,??_m_interp1_cal_p_v
 17053  000C2A  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_v+1
 17054  000C2E  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_v+2
 17055  000C32  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_v+3
 17056  000C36  C092  F064         	movff	m_interp1_cal_p_v@x,___aldiv@divisor
 17057  000C3A  C093  F065         	movff	m_interp1_cal_p_v@x+1,___aldiv@divisor+1
 17058  000C3E  C094  F066         	movff	m_interp1_cal_p_v@x+2,___aldiv@divisor+2
 17059  000C42  C095  F067         	movff	m_interp1_cal_p_v@x+3,___aldiv@divisor+3
 17060  000C46  C08E  F060         	movff	m_interp1_cal_p_v@y,___aldiv@dividend
 17061  000C4A  C08F  F061         	movff	m_interp1_cal_p_v@y+1,___aldiv@dividend+1
 17062  000C4E  C090  F062         	movff	m_interp1_cal_p_v@y+2,___aldiv@dividend+2
 17063  000C52  C091  F063         	movff	m_interp1_cal_p_v@y+3,___aldiv@dividend+3
 17064  000C56  EC90  F026         	call	___aldiv	;wreg free
 17065  000C5A  C060  F06E         	movff	?___aldiv,___lmul@multiplier
 17066  000C5E  C061  F06F         	movff	?___aldiv+1,___lmul@multiplier+1
 17067  000C62  C062  F070         	movff	?___aldiv+2,___lmul@multiplier+2
 17068  000C66  C063  F071         	movff	?___aldiv+3,___lmul@multiplier+3
 17069  000C6A  0100               	movlb	0	; () banked
 17070  000C6C  EE20 F004          	lfsr	2,4
 17071  000C70  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 17072  000C72  26D9               	addwf	fsr2l,f,c
 17073  000C74  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 17074  000C76  22DA               	addwfc	fsr2h,f,c
 17075  000C78  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_v+4
 17076  000C7C  CFDD F085          	movff	postdec2,??_m_interp1_cal_p_v+5
 17077  000C80  0100               	movlb	0	; () banked
 17078  000C82  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 17079  000C84  0D08               	mullw	8
 17080  000C86  0E04               	movlw	4
 17081  000C88  26F3               	addwf	prodl,f,c
 17082  000C8A  0E00               	movlw	0
 17083  000C8C  22F4               	addwfc	prodh,f,c
 17084  000C8E  C07A  F086         	movff	m_interp1_cal_p_v@tabrow,??_m_interp1_cal_p_v+6
 17085  000C92  C07B  F087         	movff	m_interp1_cal_p_v@tabrow+1,??_m_interp1_cal_p_v+7
 17086  000C96  50F3               	movf	prodl,w,c
 17087  000C98  0100               	movlb	0	; () banked
 17088  000C9A  2786               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),f,b
 17089  000C9C  50F4               	movf	prodh,w,c
 17090  000C9E  0100               	movlb	0	; () banked
 17091  000CA0  2387               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),f,b
 17092  000CA2  0E04               	movlw	4
 17093  000CA4  0100               	movlb	0	; () banked
 17094  000CA6  2586               	addwf	(??_m_interp1_cal_p_v+6)& (0+255),w,b
 17095  000CA8  6ED9               	movwf	fsr2l,c
 17096  000CAA  0E00               	movlw	0
 17097  000CAC  0100               	movlb	0	; () banked
 17098  000CAE  2187               	addwfc	(??_m_interp1_cal_p_v+7)& (0+255),w,b
 17099  000CB0  6EDA               	movwf	fsr2h,c
 17100  000CB2  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_v+8
 17101  000CB6  CFDD F089          	movff	postdec2,??_m_interp1_cal_p_v+9
 17102  000CBA  0100               	movlb	0	; () banked
 17103  000CBC  1F88               	comf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 17104  000CBE  1F89               	comf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 17105  000CC0  4B88               	infsnz	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 17106  000CC2  2B89               	incf	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 17107  000CC4  0100               	movlb	0	; () banked
 17108  000CC6  5184               	movf	(??_m_interp1_cal_p_v+4)& (0+255),w,b
 17109  000CC8  0100               	movlb	0	; () banked
 17110  000CCA  2788               	addwf	(??_m_interp1_cal_p_v+8)& (0+255),f,b
 17111  000CCC  0100               	movlb	0	; () banked
 17112  000CCE  5185               	movf	(??_m_interp1_cal_p_v+5)& (0+255),w,b
 17113  000CD0  0100               	movlb	0	; () banked
 17114  000CD2  2389               	addwfc	(??_m_interp1_cal_p_v+9)& (0+255),f,b
 17115  000CD4  C088  F072         	movff	??_m_interp1_cal_p_v+8,___lmul@multiplicand
 17116  000CD8  C089  F073         	movff	??_m_interp1_cal_p_v+9,___lmul@multiplicand+1
 17117  000CDC  0100               	movlb	0	; () banked
 17118  000CDE  0E00               	movlw	0
 17119  000CE0  BF73               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17120  000CE2  0EFF               	movlw	-1
 17121  000CE4  6F74               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17122  000CE6  6F75               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17123  000CE8  ECE6  F034         	call	___lmul	;wreg free
 17124  000CEC  0100               	movlb	0	; () banked
 17125  000CEE  5180               	movf	??_m_interp1_cal_p_v& (0+255),w,b
 17126  000CF0  0100               	movlb	0	; () banked
 17127  000CF2  256E               	addwf	?___lmul& (0+255),w,b
 17128  000CF4  0100               	movlb	0	; () banked
 17129  000CF6  6F8A               	movwf	(??_m_interp1_cal_p_v+10)& (0+255),b
 17130  000CF8  0100               	movlb	0	; () banked
 17131  000CFA  5181               	movf	(??_m_interp1_cal_p_v+1)& (0+255),w,b
 17132  000CFC  0100               	movlb	0	; () banked
 17133  000CFE  216F               	addwfc	(?___lmul+1)& (0+255),w,b
 17134  000D00  0100               	movlb	0	; () banked
 17135  000D02  6F8B               	movwf	(??_m_interp1_cal_p_v+11)& (0+255),b
 17136  000D04  0100               	movlb	0	; () banked
 17137  000D06  5182               	movf	(??_m_interp1_cal_p_v+2)& (0+255),w,b
 17138  000D08  0100               	movlb	0	; () banked
 17139  000D0A  2170               	addwfc	(?___lmul+2)& (0+255),w,b
 17140  000D0C  0100               	movlb	0	; () banked
 17141  000D0E  6F8C               	movwf	(??_m_interp1_cal_p_v+12)& (0+255),b
 17142  000D10  0100               	movlb	0	; () banked
 17143  000D12  5183               	movf	(??_m_interp1_cal_p_v+3)& (0+255),w,b
 17144  000D14  0100               	movlb	0	; () banked
 17145  000D16  2171               	addwfc	(?___lmul+3)& (0+255),w,b
 17146  000D18  0100               	movlb	0	; () banked
 17147  000D1A  6F8D               	movwf	(??_m_interp1_cal_p_v+13)& (0+255),b
 17148  000D1C  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 17149  000D20  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 17150  000D24  C08A  FFDE         	movff	??_m_interp1_cal_p_v+10,postinc2
 17151  000D28  C08B  FFDE         	movff	??_m_interp1_cal_p_v+11,postinc2
 17152  000D2C  C08C  FFDE         	movff	??_m_interp1_cal_p_v+12,postinc2
 17153  000D30  C08D  FFDE         	movff	??_m_interp1_cal_p_v+13,postinc2
 17154  000D34                     l11682:
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;data.c: 331: }
 17158                           ;data.c: 332: if(xout){
 17159  000D34  0100               	movlb	0	; () banked
 17160  000D36  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 17161  000D38  0100               	movlb	0	; () banked
 17162  000D3A  117F               	iorwf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 17163  000D3C  B4D8               	btfsc	status,2,c
 17164  000D3E  D034               	goto	l11690
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;data.c: 333: xout->pValue = xin->pValue;
 17168  000D40  C07C  FFD9         	movff	m_interp1_cal_p_v@xin,fsr2l
 17169  000D44  C07D  FFDA         	movff	m_interp1_cal_p_v@xin+1,fsr2h
 17170  000D48  C07E  FFE1         	movff	m_interp1_cal_p_v@xout,fsr1l
 17171  000D4C  C07F  FFE2         	movff	m_interp1_cal_p_v@xout+1,fsr1h
 17172  000D50  CFDE FFE6          	movff	postinc2,postinc1
 17173  000D54  CFDE FFE6          	movff	postinc2,postinc1
 17174  000D58  CFDE FFE6          	movff	postinc2,postinc1
 17175  000D5C  CFDE FFE6          	movff	postinc2,postinc1
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;data.c: 334: xout->pAdcValue = xin->pAdcValue;
 17179  000D60  0100               	movlb	0	; () banked
 17180  000D62  EE20 F004          	lfsr	2,4
 17181  000D66  517C               	movf	m_interp1_cal_p_v@xin& (0+255),w,b
 17182  000D68  26D9               	addwf	fsr2l,f,c
 17183  000D6A  517D               	movf	(m_interp1_cal_p_v@xin+1)& (0+255),w,b
 17184  000D6C  22DA               	addwfc	fsr2h,f,c
 17185  000D6E  0100               	movlb	0	; () banked
 17186  000D70  EE10 F004          	lfsr	1,4
 17187  000D74  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 17188  000D76  26E1               	addwf	fsr1l,f,c
 17189  000D78  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 17190  000D7A  22E2               	addwfc	fsr1h,f,c
 17191  000D7C  CFDE FFE6          	movff	postinc2,postinc1
 17192  000D80  CFDD FFE5          	movff	postdec2,postdec1
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;data.c: 335: xout->tAdcValue = tabrow->prCalibPoint[0].tAdcValue;
 17196  000D84  0100               	movlb	0	; () banked
 17197  000D86  EE20 F00A          	lfsr	2,10
 17198  000D8A  517A               	movf	m_interp1_cal_p_v@tabrow& (0+255),w,b
 17199  000D8C  26D9               	addwf	fsr2l,f,c
 17200  000D8E  517B               	movf	(m_interp1_cal_p_v@tabrow+1)& (0+255),w,b
 17201  000D90  22DA               	addwfc	fsr2h,f,c
 17202  000D92  0100               	movlb	0	; () banked
 17203  000D94  EE10 F006          	lfsr	1,6
 17204  000D98  517E               	movf	m_interp1_cal_p_v@xout& (0+255),w,b
 17205  000D9A  26E1               	addwf	fsr1l,f,c
 17206  000D9C  517F               	movf	(m_interp1_cal_p_v@xout+1)& (0+255),w,b
 17207  000D9E  22E2               	addwfc	fsr1h,f,c
 17208  000DA0  CFDE FFE6          	movff	postinc2,postinc1
 17209  000DA4  CFDD FFE5          	movff	postdec2,postdec1
 17210  000DA8                     l11690:
 17211                           
 17212                           ; BSR set to: 0
 17213                           ;data.c: 336: }
 17214                           ;data.c: 337: return i;
 17215  000DA8  0100               	movlb	0	; () banked
 17216  000DAA  5196               	movf	m_interp1_cal_p_v@i& (0+255),w,b
 17217  000DAC  0012               	return	
 17218  000DAE                     __end_of_m_interp1_cal_p_v:
 17219                           	opt stack 0
 17220                           tosu	equ	0xFFF
 17221                           tosh	equ	0xFFE
 17222                           tosl	equ	0xFFD
 17223                           pclath	equ	0xFFA
 17224                           tblptru	equ	0xFF8
 17225                           tblptrh	equ	0xFF7
 17226                           tblptrl	equ	0xFF6
 17227                           tablat	equ	0xFF5
 17228                           prodh	equ	0xFF4
 17229                           prodl	equ	0xFF3
 17230                           intcon	equ	0xFF2
 17231                           indf0	equ	0xFEF
 17232                           postinc0	equ	0xFEE
 17233                           fsr0h	equ	0xFEA
 17234                           fsr0l	equ	0xFE9
 17235                           wreg	equ	0xFE8
 17236                           postinc1	equ	0xFE6
 17237                           postdec1	equ	0xFE5
 17238                           plusw1	equ	0xFE3
 17239                           fsr1h	equ	0xFE2
 17240                           fsr1l	equ	0xFE1
 17241                           indf2	equ	0xFDF
 17242                           postinc2	equ	0xFDE
 17243                           postdec2	equ	0xFDD
 17244                           plusw2	equ	0xFDB
 17245                           fsr2h	equ	0xFDA
 17246                           fsr2l	equ	0xFD9
 17247                           status	equ	0xFD8
 17248                           
 17249 ;; *************** function _m_interp1_cal_p_t *****************
 17250 ;; Defined at:
 17251 ;;		line 343 in file "src/api/data.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;  tmpx            2   26[BANK0 ] PTR struct .
 17254 ;;		 -> cal_diff_press@tmpx(24), 
 17255 ;;  xin             2   28[BANK0 ] PTR struct .
 17256 ;;		 -> x_prDiffData(8), 
 17257 ;;  tmpxLen         1   30[BANK0 ] unsigned char 
 17258 ;; Auto vars:     Size  Location     Type
 17259 ;;  x               4   49[BANK0 ] long 
 17260 ;;  y               4   45[BANK0 ] long 
 17261 ;;  i               1   53[BANK0 ] unsigned char 
 17262 ;; Return value:  Size  Location     Type
 17263 ;;                  1    wreg      unsigned char 
 17264 ;; Registers used:
 17265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17266 ;; Tracked objects:
 17267 ;;		On entry : 0/0
 17268 ;;		On exit  : 0/0
 17269 ;;		Unchanged: 0/0
 17270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17271 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17272 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17273 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17274 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17275 ;;Total ram usage:       28 bytes
 17276 ;; Hardware stack levels used:    1
 17277 ;; Hardware stack levels required when called:    5
 17278 ;; This function calls:
 17279 ;;		___aldiv
 17280 ;;		___lmul
 17281 ;; This function is called by:
 17282 ;;		_cal_diff_press
 17283 ;; This function uses a non-reentrant model
 17284 ;;
 17285                           
 17286                           	psect	text88
 17287  001BCE                     __ptext88:
 17288                           	opt stack 0
 17289  001BCE                     _m_interp1_cal_p_t:
 17290                           	opt stack 22
 17291                           
 17292                           ;data.c: 345: uint8_t i;
 17293                           ;data.c: 346: int32_t x,y;
 17294                           ;data.c: 347: for(i=0;i<tmpxLen-1;i++){
 17295                           
 17296                           ; BSR set to: 0
 17297                           ;incstack = 0
 17298  001BCE  0E00               	movlw	0
 17299  001BD0  0100               	movlb	0	; () banked
 17300  001BD2  6F95               	movwf	m_interp1_cal_p_t@i& (0+255),b
 17301  001BD4  D0BD               	goto	l11708
 17302  001BD6                     l11696:
 17303                           
 17304                           ; BSR set to: 0
 17305                           ;data.c: 348: if(tmpx[i].tAdcValue < tmpx[i+1].tAdcValue){
 17306  001BD6  0100               	movlb	0	; () banked
 17307  001BD8  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17308  001BDA  0100               	movlb	0	; () banked
 17309  001BDC  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 17310  001BDE  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 17311  001BE0  0100               	movlb	0	; () banked
 17312  001BE2  90D8               	bcf	status,0,c
 17313  001BE4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17314  001BE6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17315  001BE8  0100               	movlb	0	; () banked
 17316  001BEA  90D8               	bcf	status,0,c
 17317  001BEC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17318  001BEE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17319  001BF0  0100               	movlb	0	; () banked
 17320  001BF2  90D8               	bcf	status,0,c
 17321  001BF4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17322  001BF6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17323  001BF8  0E08               	movlw	8
 17324  001BFA  0100               	movlb	0	; () banked
 17325  001BFC  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 17326  001BFE  0E00               	movlw	0
 17327  001C00  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17328  001C02  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 17329  001C06  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 17330  001C0A  0100               	movlb	0	; () banked
 17331  001C0C  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 17332  001C0E  0100               	movlb	0	; () banked
 17333  001C10  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17334  001C12  0100               	movlb	0	; () banked
 17335  001C14  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 17336  001C16  0100               	movlb	0	; () banked
 17337  001C18  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17338  001C1A  0E06               	movlw	6
 17339  001C1C  0100               	movlb	0	; () banked
 17340  001C1E  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 17341  001C20  6ED9               	movwf	fsr2l,c
 17342  001C22  0E00               	movlw	0
 17343  001C24  0100               	movlb	0	; () banked
 17344  001C26  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 17345  001C28  6EDA               	movwf	fsr2h,c
 17346  001C2A  0100               	movlb	0	; () banked
 17347  001C2C  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17348  001C2E  0D08               	mullw	8
 17349  001C30  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 17350  001C34  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 17351  001C38  50F3               	movf	prodl,w,c
 17352  001C3A  0100               	movlb	0	; () banked
 17353  001C3C  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 17354  001C3E  50F4               	movf	prodh,w,c
 17355  001C40  0100               	movlb	0	; () banked
 17356  001C42  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 17357  001C44  0E06               	movlw	6
 17358  001C46  0100               	movlb	0	; () banked
 17359  001C48  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 17360  001C4A  6EE1               	movwf	fsr1l,c
 17361  001C4C  0E00               	movlw	0
 17362  001C4E  0100               	movlb	0	; () banked
 17363  001C50  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 17364  001C52  6EE2               	movwf	fsr1h,c
 17365  001C54  50DE               	movf	postinc2,w,c
 17366  001C56  5CE6               	subwf	postinc1,w,c
 17367  001C58  50E6               	movf	postinc1,w,c
 17368  001C5A  0A80               	xorlw	128
 17369  001C5C  0100               	movlb	0	; () banked
 17370  001C5E  6F89               	movwf	(??_m_interp1_cal_p_t+10)& (0+255),b
 17371  001C60  50DE               	movf	postinc2,w,c
 17372  001C62  0A80               	xorlw	128
 17373  001C64  0100               	movlb	0	; () banked
 17374  001C66  5989               	subwfb	(??_m_interp1_cal_p_t+10)& (0+255),w,b
 17375  001C68  B0D8               	btfsc	status,0,c
 17376  001C6A  D03E               	goto	l11702
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;data.c: 349: if(xin->tAdcValue <= tmpx[i+1].tAdcValue)break;
 17380  001C6C  0100               	movlb	0	; () banked
 17381  001C6E  EE20 F006          	lfsr	2,6
 17382  001C72  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 17383  001C74  26D9               	addwf	fsr2l,f,c
 17384  001C76  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 17385  001C78  22DA               	addwfc	fsr2h,f,c
 17386  001C7A  0100               	movlb	0	; () banked
 17387  001C7C  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17388  001C7E  0100               	movlb	0	; () banked
 17389  001C80  6F81               	movwf	(??_m_interp1_cal_p_t+2)& (0+255),b
 17390  001C82  6B82               	clrf	(??_m_interp1_cal_p_t+3)& (0+255),b
 17391  001C84  0100               	movlb	0	; () banked
 17392  001C86  90D8               	bcf	status,0,c
 17393  001C88  3781               	rlcf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17394  001C8A  3782               	rlcf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17395  001C8C  0100               	movlb	0	; () banked
 17396  001C8E  90D8               	bcf	status,0,c
 17397  001C90  3781               	rlcf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17398  001C92  3782               	rlcf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17399  001C94  0100               	movlb	0	; () banked
 17400  001C96  90D8               	bcf	status,0,c
 17401  001C98  3781               	rlcf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17402  001C9A  3782               	rlcf	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17403  001C9C  0E08               	movlw	8
 17404  001C9E  0100               	movlb	0	; () banked
 17405  001CA0  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17406  001CA2  0E00               	movlw	0
 17407  001CA4  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17408  001CA6  C07A  F083         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+4
 17409  001CAA  C07B  F084         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+5
 17410  001CAE  0100               	movlb	0	; () banked
 17411  001CB0  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 17412  001CB2  0100               	movlb	0	; () banked
 17413  001CB4  2783               	addwf	(??_m_interp1_cal_p_t+4)& (0+255),f,b
 17414  001CB6  0100               	movlb	0	; () banked
 17415  001CB8  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 17416  001CBA  0100               	movlb	0	; () banked
 17417  001CBC  2384               	addwfc	(??_m_interp1_cal_p_t+5)& (0+255),f,b
 17418  001CBE  0E06               	movlw	6
 17419  001CC0  0100               	movlb	0	; () banked
 17420  001CC2  2583               	addwf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 17421  001CC4  6EE1               	movwf	fsr1l,c
 17422  001CC6  0E00               	movlw	0
 17423  001CC8  0100               	movlb	0	; () banked
 17424  001CCA  2184               	addwfc	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 17425  001CCC  6EE2               	movwf	fsr1h,c
 17426  001CCE  50DE               	movf	postinc2,w,c
 17427  001CD0  5CE6               	subwf	postinc1,w,c
 17428  001CD2  50E6               	movf	postinc1,w,c
 17429  001CD4  0A80               	xorlw	128
 17430  001CD6  0100               	movlb	0	; () banked
 17431  001CD8  6F87               	movwf	(??_m_interp1_cal_p_t+8)& (0+255),b
 17432  001CDA  50DE               	movf	postinc2,w,c
 17433  001CDC  0A80               	xorlw	128
 17434  001CDE  0100               	movlb	0	; () banked
 17435  001CE0  5987               	subwfb	(??_m_interp1_cal_p_t+8)& (0+255),w,b
 17436  001CE2  B0D8               	btfsc	status,0,c
 17437  001CE4  D05D               	goto	l11710
 17438  001CE6  D032               	goto	l11706
 17439  001CE8                     l11702:
 17440                           
 17441                           ; BSR set to: 0
 17442                           ;data.c: 351: if(xin->tAdcValue >= tmpx[i+1].tAdcValue)break;
 17443  001CE8  0100               	movlb	0	; () banked
 17444  001CEA  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17445  001CEC  0100               	movlb	0	; () banked
 17446  001CEE  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 17447  001CF0  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 17448  001CF2  0100               	movlb	0	; () banked
 17449  001CF4  90D8               	bcf	status,0,c
 17450  001CF6  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17451  001CF8  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17452  001CFA  0100               	movlb	0	; () banked
 17453  001CFC  90D8               	bcf	status,0,c
 17454  001CFE  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17455  001D00  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17456  001D02  0100               	movlb	0	; () banked
 17457  001D04  90D8               	bcf	status,0,c
 17458  001D06  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17459  001D08  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17460  001D0A  0E08               	movlw	8
 17461  001D0C  0100               	movlb	0	; () banked
 17462  001D0E  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 17463  001D10  0E00               	movlw	0
 17464  001D12  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17465  001D14  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 17466  001D18  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 17467  001D1C  0100               	movlb	0	; () banked
 17468  001D1E  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 17469  001D20  0100               	movlb	0	; () banked
 17470  001D22  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17471  001D24  0100               	movlb	0	; () banked
 17472  001D26  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 17473  001D28  0100               	movlb	0	; () banked
 17474  001D2A  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17475  001D2C  0E06               	movlw	6
 17476  001D2E  0100               	movlb	0	; () banked
 17477  001D30  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 17478  001D32  6ED9               	movwf	fsr2l,c
 17479  001D34  0E00               	movlw	0
 17480  001D36  0100               	movlb	0	; () banked
 17481  001D38  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 17482  001D3A  6EDA               	movwf	fsr2h,c
 17483  001D3C  0100               	movlb	0	; () banked
 17484  001D3E  EE10 F006          	lfsr	1,6
 17485  001D42  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 17486  001D44  26E1               	addwf	fsr1l,f,c
 17487  001D46  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 17488  001D48  22E2               	addwfc	fsr1h,f,c
 17489  001D4A  D7C1               	goto	L7
 17490  001D4C                     l11706:
 17491                           
 17492                           ; BSR set to: 0
 17493  001D4C  0100               	movlb	0	; () banked
 17494  001D4E  2B95               	incf	m_interp1_cal_p_t@i& (0+255),f,b
 17495  001D50                     l11708:
 17496                           
 17497                           ; BSR set to: 0
 17498  001D50  0EFF               	movlw	255
 17499  001D52  0100               	movlb	0	; () banked
 17500  001D54  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 17501  001D56  0EFF               	movlw	255
 17502  001D58  0100               	movlb	0	; () banked
 17503  001D5A  6F80               	movwf	(??_m_interp1_cal_p_t+1)& (0+255),b
 17504  001D5C  0100               	movlb	0	; () banked
 17505  001D5E  517E               	movf	m_interp1_cal_p_t@tmpxLen& (0+255),w,b
 17506  001D60  0100               	movlb	0	; () banked
 17507  001D62  6F81               	movwf	(??_m_interp1_cal_p_t+2)& (0+255),b
 17508  001D64  6B82               	clrf	(??_m_interp1_cal_p_t+3)& (0+255),b
 17509  001D66  0100               	movlb	0	; () banked
 17510  001D68  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 17511  001D6A  0100               	movlb	0	; () banked
 17512  001D6C  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17513  001D6E  0100               	movlb	0	; () banked
 17514  001D70  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 17515  001D72  0100               	movlb	0	; () banked
 17516  001D74  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17517  001D76  0100               	movlb	0	; () banked
 17518  001D78  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17519  001D7A  0100               	movlb	0	; () banked
 17520  001D7C  6F83               	movwf	(??_m_interp1_cal_p_t+4)& (0+255),b
 17521  001D7E  6B84               	clrf	(??_m_interp1_cal_p_t+5)& (0+255),b
 17522  001D80  0100               	movlb	0	; () banked
 17523  001D82  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 17524  001D84  0100               	movlb	0	; () banked
 17525  001D86  5D83               	subwf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 17526  001D88  0100               	movlb	0	; () banked
 17527  001D8A  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 17528  001D8C  0A80               	xorlw	128
 17529  001D8E  0100               	movlb	0	; () banked
 17530  001D90  6F85               	movwf	(??_m_interp1_cal_p_t+6)& (0+255),b
 17531  001D92  0100               	movlb	0	; () banked
 17532  001D94  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 17533  001D96  0A80               	xorlw	128
 17534  001D98  0100               	movlb	0	; () banked
 17535  001D9A  5985               	subwfb	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 17536  001D9C  A0D8               	btfss	status,0,c
 17537  001D9E  D71B               	goto	l11696
 17538  001DA0                     l11710:
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;data.c: 352: }
 17542                           ;data.c: 353: }
 17543                           ;data.c: 354: xin->pValue=tmpx[i].pValue;
 17544  001DA0  0100               	movlb	0	; () banked
 17545  001DA2  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17546  001DA4  0D08               	mullw	8
 17547  001DA6  50F3               	movf	prodl,w,c
 17548  001DA8  0100               	movlb	0	; () banked
 17549  001DAA  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 17550  001DAC  6ED9               	movwf	fsr2l,c
 17551  001DAE  50F4               	movf	prodh,w,c
 17552  001DB0  0100               	movlb	0	; () banked
 17553  001DB2  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 17554  001DB4  6EDA               	movwf	fsr2h,c
 17555  001DB6  C07C  FFE1         	movff	m_interp1_cal_p_t@xin,fsr1l
 17556  001DBA  C07D  FFE2         	movff	m_interp1_cal_p_t@xin+1,fsr1h
 17557  001DBE  CFDE FFE6          	movff	postinc2,postinc1
 17558  001DC2  CFDE FFE6          	movff	postinc2,postinc1
 17559  001DC6  CFDE FFE6          	movff	postinc2,postinc1
 17560  001DCA  CFDE FFE6          	movff	postinc2,postinc1
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;data.c: 355: y=tmpx[i+1].pValue-tmpx[i].pValue;
 17564  001DCE  0100               	movlb	0	; () banked
 17565  001DD0  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17566  001DD2  0100               	movlb	0	; () banked
 17567  001DD4  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 17568  001DD6  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 17569  001DD8  0100               	movlb	0	; () banked
 17570  001DDA  90D8               	bcf	status,0,c
 17571  001DDC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17572  001DDE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17573  001DE0  0100               	movlb	0	; () banked
 17574  001DE2  90D8               	bcf	status,0,c
 17575  001DE4  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17576  001DE6  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17577  001DE8  0100               	movlb	0	; () banked
 17578  001DEA  90D8               	bcf	status,0,c
 17579  001DEC  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17580  001DEE  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17581  001DF0  0E08               	movlw	8
 17582  001DF2  0100               	movlb	0	; () banked
 17583  001DF4  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 17584  001DF6  0E00               	movlw	0
 17585  001DF8  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17586  001DFA  0100               	movlb	0	; () banked
 17587  001DFC  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 17588  001DFE  0100               	movlb	0	; () banked
 17589  001E00  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 17590  001E02  6ED9               	movwf	fsr2l,c
 17591  001E04  0100               	movlb	0	; () banked
 17592  001E06  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 17593  001E08  0100               	movlb	0	; () banked
 17594  001E0A  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 17595  001E0C  6EDA               	movwf	fsr2h,c
 17596  001E0E  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 17597  001E12  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_t+3
 17598  001E16  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 17599  001E1A  CFDE F084          	movff	postinc2,??_m_interp1_cal_p_t+5
 17600  001E1E  0100               	movlb	0	; () banked
 17601  001E20  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17602  001E22  0D08               	mullw	8
 17603  001E24  50F3               	movf	prodl,w,c
 17604  001E26  0100               	movlb	0	; () banked
 17605  001E28  257A               	addwf	m_interp1_cal_p_t@tmpx& (0+255),w,b
 17606  001E2A  6ED9               	movwf	fsr2l,c
 17607  001E2C  50F4               	movf	prodh,w,c
 17608  001E2E  0100               	movlb	0	; () banked
 17609  001E30  217B               	addwfc	(m_interp1_cal_p_t@tmpx+1)& (0+255),w,b
 17610  001E32  6EDA               	movwf	fsr2h,c
 17611  001E34  CFDE F085          	movff	postinc2,??_m_interp1_cal_p_t+6
 17612  001E38  CFDE F086          	movff	postinc2,??_m_interp1_cal_p_t+7
 17613  001E3C  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 17614  001E40  CFDE F088          	movff	postinc2,??_m_interp1_cal_p_t+9
 17615  001E44  0100               	movlb	0	; () banked
 17616  001E46  1F85               	comf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 17617  001E48  1F86               	comf	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 17618  001E4A  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17619  001E4C  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17620  001E4E  2B85               	incf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 17621  001E50  0E00               	movlw	0
 17622  001E52  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 17623  001E54  2387               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17624  001E56  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17625  001E58  0100               	movlb	0	; () banked
 17626  001E5A  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 17627  001E5C  0100               	movlb	0	; () banked
 17628  001E5E  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 17629  001E60  0100               	movlb	0	; () banked
 17630  001E62  6F8D               	movwf	m_interp1_cal_p_t@y& (0+255),b
 17631  001E64  0100               	movlb	0	; () banked
 17632  001E66  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 17633  001E68  0100               	movlb	0	; () banked
 17634  001E6A  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 17635  001E6C  0100               	movlb	0	; () banked
 17636  001E6E  6F8E               	movwf	(m_interp1_cal_p_t@y+1)& (0+255),b
 17637  001E70  0100               	movlb	0	; () banked
 17638  001E72  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 17639  001E74  0100               	movlb	0	; () banked
 17640  001E76  2187               	addwfc	(??_m_interp1_cal_p_t+8)& (0+255),w,b
 17641  001E78  0100               	movlb	0	; () banked
 17642  001E7A  6F8F               	movwf	(m_interp1_cal_p_t@y+2)& (0+255),b
 17643  001E7C  0100               	movlb	0	; () banked
 17644  001E7E  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 17645  001E80  0100               	movlb	0	; () banked
 17646  001E82  2188               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),w,b
 17647  001E84  0100               	movlb	0	; () banked
 17648  001E86  6F90               	movwf	(m_interp1_cal_p_t@y+3)& (0+255),b
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;data.c: 356: x=tmpx[i+1].tAdcValue-tmpx[i].tAdcValue;
 17652  001E88  0100               	movlb	0	; () banked
 17653  001E8A  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17654  001E8C  0100               	movlb	0	; () banked
 17655  001E8E  6F7F               	movwf	??_m_interp1_cal_p_t& (0+255),b
 17656  001E90  6B80               	clrf	(??_m_interp1_cal_p_t+1)& (0+255),b
 17657  001E92  0100               	movlb	0	; () banked
 17658  001E94  90D8               	bcf	status,0,c
 17659  001E96  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17660  001E98  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17661  001E9A  0100               	movlb	0	; () banked
 17662  001E9C  90D8               	bcf	status,0,c
 17663  001E9E  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17664  001EA0  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17665  001EA2  0100               	movlb	0	; () banked
 17666  001EA4  90D8               	bcf	status,0,c
 17667  001EA6  377F               	rlcf	??_m_interp1_cal_p_t& (0+255),f,b
 17668  001EA8  3780               	rlcf	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17669  001EAA  0E08               	movlw	8
 17670  001EAC  0100               	movlb	0	; () banked
 17671  001EAE  277F               	addwf	??_m_interp1_cal_p_t& (0+255),f,b
 17672  001EB0  0E00               	movlw	0
 17673  001EB2  2380               	addwfc	(??_m_interp1_cal_p_t+1)& (0+255),f,b
 17674  001EB4  C07A  F081         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+2
 17675  001EB8  C07B  F082         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+3
 17676  001EBC  0100               	movlb	0	; () banked
 17677  001EBE  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 17678  001EC0  0100               	movlb	0	; () banked
 17679  001EC2  2781               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),f,b
 17680  001EC4  0100               	movlb	0	; () banked
 17681  001EC6  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 17682  001EC8  0100               	movlb	0	; () banked
 17683  001ECA  2382               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),f,b
 17684  001ECC  0E06               	movlw	6
 17685  001ECE  0100               	movlb	0	; () banked
 17686  001ED0  2581               	addwf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 17687  001ED2  6ED9               	movwf	fsr2l,c
 17688  001ED4  0E00               	movlw	0
 17689  001ED6  0100               	movlb	0	; () banked
 17690  001ED8  2182               	addwfc	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 17691  001EDA  6EDA               	movwf	fsr2h,c
 17692  001EDC  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 17693  001EE0  CFDD F084          	movff	postdec2,??_m_interp1_cal_p_t+5
 17694  001EE4  0100               	movlb	0	; () banked
 17695  001EE6  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17696  001EE8  0D08               	mullw	8
 17697  001EEA  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 17698  001EEE  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 17699  001EF2  50F3               	movf	prodl,w,c
 17700  001EF4  0100               	movlb	0	; () banked
 17701  001EF6  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 17702  001EF8  50F4               	movf	prodh,w,c
 17703  001EFA  0100               	movlb	0	; () banked
 17704  001EFC  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 17705  001EFE  0E06               	movlw	6
 17706  001F00  0100               	movlb	0	; () banked
 17707  001F02  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 17708  001F04  6ED9               	movwf	fsr2l,c
 17709  001F06  0E00               	movlw	0
 17710  001F08  0100               	movlb	0	; () banked
 17711  001F0A  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 17712  001F0C  6EDA               	movwf	fsr2h,c
 17713  001F0E  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 17714  001F12  CFDD F088          	movff	postdec2,??_m_interp1_cal_p_t+9
 17715  001F16  0100               	movlb	0	; () banked
 17716  001F18  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17717  001F1A  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17718  001F1C  4B87               	infsnz	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17719  001F1E  2B88               	incf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17720  001F20  0100               	movlb	0	; () banked
 17721  001F22  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 17722  001F24  0100               	movlb	0	; () banked
 17723  001F26  2787               	addwf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17724  001F28  0100               	movlb	0	; () banked
 17725  001F2A  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 17726  001F2C  0100               	movlb	0	; () banked
 17727  001F2E  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17728  001F30  C087  F091         	movff	??_m_interp1_cal_p_t+8,m_interp1_cal_p_t@x
 17729  001F34  C088  F092         	movff	??_m_interp1_cal_p_t+9,m_interp1_cal_p_t@x+1
 17730  001F38  0100               	movlb	0	; () banked
 17731  001F3A  0E00               	movlw	0
 17732  001F3C  BF92               	btfsc	(m_interp1_cal_p_t@x+1)& (0+255),7,b
 17733  001F3E  0EFF               	movlw	-1
 17734  001F40  6F93               	movwf	(m_interp1_cal_p_t@x+2)& (0+255),b
 17735  001F42  6F94               	movwf	(m_interp1_cal_p_t@x+3)& (0+255),b
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;data.c: 357: if(x!=0){
 17739  001F44  0100               	movlb	0	; () banked
 17740  001F46  5191               	movf	m_interp1_cal_p_t@x& (0+255),w,b
 17741  001F48  0100               	movlb	0	; () banked
 17742  001F4A  1192               	iorwf	(m_interp1_cal_p_t@x+1)& (0+255),w,b
 17743  001F4C  0100               	movlb	0	; () banked
 17744  001F4E  1193               	iorwf	(m_interp1_cal_p_t@x+2)& (0+255),w,b
 17745  001F50  0100               	movlb	0	; () banked
 17746  001F52  1194               	iorwf	(m_interp1_cal_p_t@x+3)& (0+255),w,b
 17747  001F54  B4D8               	btfsc	status,2,c
 17748  001F56  0012               	return	
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;data.c: 358: xin->pValue = xin->pValue + (y/x)*(xin->tAdcValue - tmpx[i].tAdcValue);
 17752  001F58  C07C  FFD9         	movff	m_interp1_cal_p_t@xin,fsr2l
 17753  001F5C  C07D  FFDA         	movff	m_interp1_cal_p_t@xin+1,fsr2h
 17754  001F60  CFDE F07F          	movff	postinc2,??_m_interp1_cal_p_t
 17755  001F64  CFDE F080          	movff	postinc2,??_m_interp1_cal_p_t+1
 17756  001F68  CFDE F081          	movff	postinc2,??_m_interp1_cal_p_t+2
 17757  001F6C  CFDE F082          	movff	postinc2,??_m_interp1_cal_p_t+3
 17758  001F70  C091  F064         	movff	m_interp1_cal_p_t@x,___aldiv@divisor
 17759  001F74  C092  F065         	movff	m_interp1_cal_p_t@x+1,___aldiv@divisor+1
 17760  001F78  C093  F066         	movff	m_interp1_cal_p_t@x+2,___aldiv@divisor+2
 17761  001F7C  C094  F067         	movff	m_interp1_cal_p_t@x+3,___aldiv@divisor+3
 17762  001F80  C08D  F060         	movff	m_interp1_cal_p_t@y,___aldiv@dividend
 17763  001F84  C08E  F061         	movff	m_interp1_cal_p_t@y+1,___aldiv@dividend+1
 17764  001F88  C08F  F062         	movff	m_interp1_cal_p_t@y+2,___aldiv@dividend+2
 17765  001F8C  C090  F063         	movff	m_interp1_cal_p_t@y+3,___aldiv@dividend+3
 17766  001F90  EC90  F026         	call	___aldiv	;wreg free
 17767  001F94  C060  F06E         	movff	?___aldiv,___lmul@multiplier
 17768  001F98  C061  F06F         	movff	?___aldiv+1,___lmul@multiplier+1
 17769  001F9C  C062  F070         	movff	?___aldiv+2,___lmul@multiplier+2
 17770  001FA0  C063  F071         	movff	?___aldiv+3,___lmul@multiplier+3
 17771  001FA4  0100               	movlb	0	; () banked
 17772  001FA6  EE20 F006          	lfsr	2,6
 17773  001FAA  517C               	movf	m_interp1_cal_p_t@xin& (0+255),w,b
 17774  001FAC  26D9               	addwf	fsr2l,f,c
 17775  001FAE  517D               	movf	(m_interp1_cal_p_t@xin+1)& (0+255),w,b
 17776  001FB0  22DA               	addwfc	fsr2h,f,c
 17777  001FB2  CFDE F083          	movff	postinc2,??_m_interp1_cal_p_t+4
 17778  001FB6  CFDD F084          	movff	postdec2,??_m_interp1_cal_p_t+5
 17779  001FBA  0100               	movlb	0	; () banked
 17780  001FBC  5195               	movf	m_interp1_cal_p_t@i& (0+255),w,b
 17781  001FBE  0D08               	mullw	8
 17782  001FC0  C07A  F085         	movff	m_interp1_cal_p_t@tmpx,??_m_interp1_cal_p_t+6
 17783  001FC4  C07B  F086         	movff	m_interp1_cal_p_t@tmpx+1,??_m_interp1_cal_p_t+7
 17784  001FC8  50F3               	movf	prodl,w,c
 17785  001FCA  0100               	movlb	0	; () banked
 17786  001FCC  2785               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),f,b
 17787  001FCE  50F4               	movf	prodh,w,c
 17788  001FD0  0100               	movlb	0	; () banked
 17789  001FD2  2386               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),f,b
 17790  001FD4  0E06               	movlw	6
 17791  001FD6  0100               	movlb	0	; () banked
 17792  001FD8  2585               	addwf	(??_m_interp1_cal_p_t+6)& (0+255),w,b
 17793  001FDA  6ED9               	movwf	fsr2l,c
 17794  001FDC  0E00               	movlw	0
 17795  001FDE  0100               	movlb	0	; () banked
 17796  001FE0  2186               	addwfc	(??_m_interp1_cal_p_t+7)& (0+255),w,b
 17797  001FE2  6EDA               	movwf	fsr2h,c
 17798  001FE4  CFDE F087          	movff	postinc2,??_m_interp1_cal_p_t+8
 17799  001FE8  CFDD F088          	movff	postdec2,??_m_interp1_cal_p_t+9
 17800  001FEC  0100               	movlb	0	; () banked
 17801  001FEE  1F87               	comf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17802  001FF0  1F88               	comf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17803  001FF2  4B87               	infsnz	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17804  001FF4  2B88               	incf	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17805  001FF6  0100               	movlb	0	; () banked
 17806  001FF8  5183               	movf	(??_m_interp1_cal_p_t+4)& (0+255),w,b
 17807  001FFA  0100               	movlb	0	; () banked
 17808  001FFC  2787               	addwf	(??_m_interp1_cal_p_t+8)& (0+255),f,b
 17809  001FFE  0100               	movlb	0	; () banked
 17810  002000  5184               	movf	(??_m_interp1_cal_p_t+5)& (0+255),w,b
 17811  002002  0100               	movlb	0	; () banked
 17812  002004  2388               	addwfc	(??_m_interp1_cal_p_t+9)& (0+255),f,b
 17813  002006  C087  F072         	movff	??_m_interp1_cal_p_t+8,___lmul@multiplicand
 17814  00200A  C088  F073         	movff	??_m_interp1_cal_p_t+9,___lmul@multiplicand+1
 17815  00200E  0100               	movlb	0	; () banked
 17816  002010  0E00               	movlw	0
 17817  002012  BF73               	btfsc	(___lmul@multiplicand+1)& (0+255),7,b
 17818  002014  0EFF               	movlw	-1
 17819  002016  6F74               	movwf	(___lmul@multiplicand+2)& (0+255),b
 17820  002018  6F75               	movwf	(___lmul@multiplicand+3)& (0+255),b
 17821  00201A  ECE6  F034         	call	___lmul	;wreg free
 17822  00201E  0100               	movlb	0	; () banked
 17823  002020  517F               	movf	??_m_interp1_cal_p_t& (0+255),w,b
 17824  002022  0100               	movlb	0	; () banked
 17825  002024  256E               	addwf	?___lmul& (0+255),w,b
 17826  002026  0100               	movlb	0	; () banked
 17827  002028  6F89               	movwf	(??_m_interp1_cal_p_t+10)& (0+255),b
 17828  00202A  0100               	movlb	0	; () banked
 17829  00202C  5180               	movf	(??_m_interp1_cal_p_t+1)& (0+255),w,b
 17830  00202E  0100               	movlb	0	; () banked
 17831  002030  216F               	addwfc	(?___lmul+1)& (0+255),w,b
 17832  002032  0100               	movlb	0	; () banked
 17833  002034  6F8A               	movwf	(??_m_interp1_cal_p_t+11)& (0+255),b
 17834  002036  0100               	movlb	0	; () banked
 17835  002038  5181               	movf	(??_m_interp1_cal_p_t+2)& (0+255),w,b
 17836  00203A  0100               	movlb	0	; () banked
 17837  00203C  2170               	addwfc	(?___lmul+2)& (0+255),w,b
 17838  00203E  0100               	movlb	0	; () banked
 17839  002040  6F8B               	movwf	(??_m_interp1_cal_p_t+12)& (0+255),b
 17840  002042  0100               	movlb	0	; () banked
 17841  002044  5182               	movf	(??_m_interp1_cal_p_t+3)& (0+255),w,b
 17842  002046  0100               	movlb	0	; () banked
 17843  002048  2171               	addwfc	(?___lmul+3)& (0+255),w,b
 17844  00204A  0100               	movlb	0	; () banked
 17845  00204C  6F8C               	movwf	(??_m_interp1_cal_p_t+13)& (0+255),b
 17846  00204E  C07C  FFD9         	movff	m_interp1_cal_p_t@xin,fsr2l
 17847  002052  C07D  FFDA         	movff	m_interp1_cal_p_t@xin+1,fsr2h
 17848  002056  C089  FFDE         	movff	??_m_interp1_cal_p_t+10,postinc2
 17849  00205A  C08A  FFDE         	movff	??_m_interp1_cal_p_t+11,postinc2
 17850  00205E  C08B  FFDE         	movff	??_m_interp1_cal_p_t+12,postinc2
 17851  002062  C08C  FFDE         	movff	??_m_interp1_cal_p_t+13,postinc2
 17852                           
 17853                           ; BSR set to: 0
 17854  002066  0012               	return	
 17855  002068                     __end_of_m_interp1_cal_p_t:
 17856                           	opt stack 0
 17857                           tosu	equ	0xFFF
 17858                           tosh	equ	0xFFE
 17859                           tosl	equ	0xFFD
 17860                           pclath	equ	0xFFA
 17861                           tblptru	equ	0xFF8
 17862                           tblptrh	equ	0xFF7
 17863                           tblptrl	equ	0xFF6
 17864                           tablat	equ	0xFF5
 17865                           prodh	equ	0xFF4
 17866                           prodl	equ	0xFF3
 17867                           intcon	equ	0xFF2
 17868                           indf0	equ	0xFEF
 17869                           postinc0	equ	0xFEE
 17870                           fsr0h	equ	0xFEA
 17871                           fsr0l	equ	0xFE9
 17872                           wreg	equ	0xFE8
 17873                           postinc1	equ	0xFE6
 17874                           postdec1	equ	0xFE5
 17875                           plusw1	equ	0xFE3
 17876                           fsr1h	equ	0xFE2
 17877                           fsr1l	equ	0xFE1
 17878                           indf2	equ	0xFDF
 17879                           postinc2	equ	0xFDE
 17880                           postdec2	equ	0xFDD
 17881                           plusw2	equ	0xFDB
 17882                           fsr2h	equ	0xFDA
 17883                           fsr2l	equ	0xFD9
 17884                           status	equ	0xFD8
 17885                           
 17886 ;; *************** function ___lmul *****************
 17887 ;; Defined at:
 17888 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
 17889 ;; Parameters:    Size  Location     Type
 17890 ;;  multiplier      4   14[BANK0 ] unsigned long 
 17891 ;;  multiplicand    4   18[BANK0 ] unsigned long 
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;  product         4   22[BANK0 ] unsigned long 
 17894 ;; Return value:  Size  Location     Type
 17895 ;;                  4   14[BANK0 ] unsigned long 
 17896 ;; Registers used:
 17897 ;;		wreg, status,2, status,0
 17898 ;; Tracked objects:
 17899 ;;		On entry : 0/0
 17900 ;;		On exit  : 0/0
 17901 ;;		Unchanged: 0/0
 17902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17904 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17906 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17907 ;;Total ram usage:       12 bytes
 17908 ;; Hardware stack levels used:    1
 17909 ;; Hardware stack levels required when called:    4
 17910 ;; This function calls:
 17911 ;;		Nothing
 17912 ;; This function is called by:
 17913 ;;		_m_interp1_cal_p_v
 17914 ;;		_m_interp1_cal_p_t
 17915 ;;		_cal_pt100_temperature
 17916 ;;		___mflot32_2_int32
 17917 ;;		_m_math_pow
 17918 ;; This function uses a non-reentrant model
 17919 ;;
 17920                           
 17921                           	psect	text89
 17922  0069CC                     __ptext89:
 17923                           	opt stack 0
 17924  0069CC                     ___lmul:
 17925                           	opt stack 22
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;incstack = 0
 17929  0069CC  0E00               	movlw	0
 17930  0069CE  0100               	movlb	0	; () banked
 17931  0069D0  6F76               	movwf	___lmul@product& (0+255),b
 17932  0069D2  0E00               	movlw	0
 17933  0069D4  6F77               	movwf	(___lmul@product+1)& (0+255),b
 17934  0069D6  0E00               	movlw	0
 17935  0069D8  6F78               	movwf	(___lmul@product+2)& (0+255),b
 17936  0069DA  0E00               	movlw	0
 17937  0069DC  6F79               	movwf	(___lmul@product+3)& (0+255),b
 17938  0069DE                     l11538:
 17939                           
 17940                           ; BSR set to: 0
 17941  0069DE  0100               	movlb	0	; () banked
 17942  0069E0  A16E               	btfss	___lmul@multiplier& (0+255),0,b
 17943  0069E2  D010               	goto	l11542
 17944                           
 17945                           ; BSR set to: 0
 17946  0069E4  0100               	movlb	0	; () banked
 17947  0069E6  5172               	movf	___lmul@multiplicand& (0+255),w,b
 17948  0069E8  0100               	movlb	0	; () banked
 17949  0069EA  2776               	addwf	___lmul@product& (0+255),f,b
 17950  0069EC  0100               	movlb	0	; () banked
 17951  0069EE  5173               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 17952  0069F0  0100               	movlb	0	; () banked
 17953  0069F2  2377               	addwfc	(___lmul@product+1)& (0+255),f,b
 17954  0069F4  0100               	movlb	0	; () banked
 17955  0069F6  5174               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 17956  0069F8  0100               	movlb	0	; () banked
 17957  0069FA  2378               	addwfc	(___lmul@product+2)& (0+255),f,b
 17958  0069FC  0100               	movlb	0	; () banked
 17959  0069FE  5175               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 17960  006A00  0100               	movlb	0	; () banked
 17961  006A02  2379               	addwfc	(___lmul@product+3)& (0+255),f,b
 17962  006A04                     l11542:
 17963                           
 17964                           ; BSR set to: 0
 17965  006A04  0100               	movlb	0	; () banked
 17966  006A06  90D8               	bcf	status,0,c
 17967  006A08  3772               	rlcf	___lmul@multiplicand& (0+255),f,b
 17968  006A0A  3773               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 17969  006A0C  3774               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 17970  006A0E  3775               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 17971                           
 17972                           ; BSR set to: 0
 17973  006A10  0100               	movlb	0	; () banked
 17974  006A12  90D8               	bcf	status,0,c
 17975  006A14  3371               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 17976  006A16  3370               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 17977  006A18  336F               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 17978  006A1A  336E               	rrcf	___lmul@multiplier& (0+255),f,b
 17979  006A1C  0100               	movlb	0	; () banked
 17980  006A1E  516E               	movf	___lmul@multiplier& (0+255),w,b
 17981  006A20  0100               	movlb	0	; () banked
 17982  006A22  116F               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 17983  006A24  0100               	movlb	0	; () banked
 17984  006A26  1170               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 17985  006A28  0100               	movlb	0	; () banked
 17986  006A2A  1171               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 17987  006A2C  A4D8               	btfss	status,2,c
 17988  006A2E  D7D7               	goto	l11538
 17989                           
 17990                           ; BSR set to: 0
 17991  006A30  C076  F06E         	movff	___lmul@product,?___lmul
 17992  006A34  C077  F06F         	movff	___lmul@product+1,?___lmul+1
 17993  006A38  C078  F070         	movff	___lmul@product+2,?___lmul+2
 17994  006A3C  C079  F071         	movff	___lmul@product+3,?___lmul+3
 17995                           
 17996                           ; BSR set to: 0
 17997  006A40  0012               	return		;funcret
 17998  006A42                     __end_of___lmul:
 17999                           	opt stack 0
 18000                           tosu	equ	0xFFF
 18001                           tosh	equ	0xFFE
 18002                           tosl	equ	0xFFD
 18003                           pclath	equ	0xFFA
 18004                           tblptru	equ	0xFF8
 18005                           tblptrh	equ	0xFF7
 18006                           tblptrl	equ	0xFF6
 18007                           tablat	equ	0xFF5
 18008                           prodh	equ	0xFF4
 18009                           prodl	equ	0xFF3
 18010                           intcon	equ	0xFF2
 18011                           indf0	equ	0xFEF
 18012                           postinc0	equ	0xFEE
 18013                           fsr0h	equ	0xFEA
 18014                           fsr0l	equ	0xFE9
 18015                           wreg	equ	0xFE8
 18016                           postinc1	equ	0xFE6
 18017                           postdec1	equ	0xFE5
 18018                           plusw1	equ	0xFE3
 18019                           fsr1h	equ	0xFE2
 18020                           fsr1l	equ	0xFE1
 18021                           indf2	equ	0xFDF
 18022                           postinc2	equ	0xFDE
 18023                           postdec2	equ	0xFDD
 18024                           plusw2	equ	0xFDB
 18025                           fsr2h	equ	0xFDA
 18026                           fsr2l	equ	0xFD9
 18027                           status	equ	0xFD8
 18028                           
 18029 ;; *************** function ___aldiv *****************
 18030 ;; Defined at:
 18031 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
 18032 ;; Parameters:    Size  Location     Type
 18033 ;;  dividend        4    0[BANK0 ] long 
 18034 ;;  divisor         4    4[BANK0 ] long 
 18035 ;; Auto vars:     Size  Location     Type
 18036 ;;  quotient        4   10[BANK0 ] long 
 18037 ;;  sign            1    9[BANK0 ] unsigned char 
 18038 ;;  counter         1    8[BANK0 ] unsigned char 
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  4    0[BANK0 ] long 
 18041 ;; Registers used:
 18042 ;;		wreg, status,2, status,0
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18048 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18049 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18051 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;Total ram usage:       14 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; Hardware stack levels required when called:    4
 18055 ;; This function calls:
 18056 ;;		Nothing
 18057 ;; This function is called by:
 18058 ;;		_m_interp1_cal_p_v
 18059 ;;		_m_interp1_cal_p_t
 18060 ;;		___x_sample_fliter
 18061 ;;		___x_sample_fifo
 18062 ;;		_cal_pt100_temperature
 18063 ;;		_m_int_2_str
 18064 ;; This function uses a non-reentrant model
 18065 ;;
 18066                           
 18067                           	psect	text90
 18068  004D20                     __ptext90:
 18069                           	opt stack 0
 18070  004D20                     ___aldiv:
 18071                           	opt stack 21
 18072                           
 18073                           ; BSR set to: 0
 18074                           ;incstack = 0
 18075  004D20  0E00               	movlw	0
 18076  004D22  0100               	movlb	0	; () banked
 18077  004D24  6F69               	movwf	___aldiv@sign& (0+255),b
 18078                           
 18079                           ; BSR set to: 0
 18080  004D26  0100               	movlb	0	; () banked
 18081  004D28  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 18082  004D2A  D00C               	goto	l10750
 18083                           
 18084                           ; BSR set to: 0
 18085  004D2C  0100               	movlb	0	; () banked
 18086  004D2E  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 18087  004D30  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 18088  004D32  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 18089  004D34  6D64               	negf	___aldiv@divisor& (0+255),b
 18090  004D36  0E00               	movlw	0
 18091  004D38  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 18092  004D3A  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 18093  004D3C  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 18094                           
 18095                           ; BSR set to: 0
 18096  004D3E  0E01               	movlw	1
 18097  004D40  0100               	movlb	0	; () banked
 18098  004D42  6F69               	movwf	___aldiv@sign& (0+255),b
 18099  004D44                     l10750:
 18100                           
 18101                           ; BSR set to: 0
 18102  004D44  0100               	movlb	0	; () banked
 18103  004D46  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 18104  004D48  D00C               	goto	l10756
 18105                           
 18106                           ; BSR set to: 0
 18107  004D4A  0100               	movlb	0	; () banked
 18108  004D4C  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 18109  004D4E  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 18110  004D50  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 18111  004D52  6D60               	negf	___aldiv@dividend& (0+255),b
 18112  004D54  0E00               	movlw	0
 18113  004D56  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 18114  004D58  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 18115  004D5A  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 18116                           
 18117                           ; BSR set to: 0
 18118  004D5C  0E01               	movlw	1
 18119  004D5E  0100               	movlb	0	; () banked
 18120  004D60  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 18121  004D62                     l10756:
 18122                           
 18123                           ; BSR set to: 0
 18124  004D62  0E00               	movlw	0
 18125  004D64  0100               	movlb	0	; () banked
 18126  004D66  6F6A               	movwf	___aldiv@quotient& (0+255),b
 18127  004D68  0E00               	movlw	0
 18128  004D6A  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 18129  004D6C  0E00               	movlw	0
 18130  004D6E  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 18131  004D70  0E00               	movlw	0
 18132  004D72  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 18133                           
 18134                           ; BSR set to: 0
 18135  004D74  0100               	movlb	0	; () banked
 18136  004D76  5164               	movf	___aldiv@divisor& (0+255),w,b
 18137  004D78  0100               	movlb	0	; () banked
 18138  004D7A  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 18139  004D7C  0100               	movlb	0	; () banked
 18140  004D7E  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 18141  004D80  0100               	movlb	0	; () banked
 18142  004D82  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 18143  004D84  B4D8               	btfsc	status,2,c
 18144  004D86  D042               	goto	l10778
 18145                           
 18146                           ; BSR set to: 0
 18147  004D88  0E01               	movlw	1
 18148  004D8A  0100               	movlb	0	; () banked
 18149  004D8C  6F68               	movwf	___aldiv@counter& (0+255),b
 18150  004D8E  D008               	goto	l10764
 18151  004D90                     l10762:
 18152                           
 18153                           ; BSR set to: 0
 18154  004D90  0100               	movlb	0	; () banked
 18155  004D92  90D8               	bcf	status,0,c
 18156  004D94  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 18157  004D96  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 18158  004D98  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 18159  004D9A  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 18160  004D9C  0100               	movlb	0	; () banked
 18161  004D9E  2B68               	incf	___aldiv@counter& (0+255),f,b
 18162  004DA0                     l10764:
 18163                           
 18164                           ; BSR set to: 0
 18165  004DA0  0100               	movlb	0	; () banked
 18166  004DA2  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 18167  004DA4  D7F5               	goto	l10762
 18168  004DA6                     l10766:
 18169                           
 18170                           ; BSR set to: 0
 18171  004DA6  0100               	movlb	0	; () banked
 18172  004DA8  90D8               	bcf	status,0,c
 18173  004DAA  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 18174  004DAC  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 18175  004DAE  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 18176  004DB0  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 18177                           
 18178                           ; BSR set to: 0
 18179  004DB2  0100               	movlb	0	; () banked
 18180  004DB4  5164               	movf	___aldiv@divisor& (0+255),w,b
 18181  004DB6  0100               	movlb	0	; () banked
 18182  004DB8  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 18183  004DBA  0100               	movlb	0	; () banked
 18184  004DBC  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 18185  004DBE  0100               	movlb	0	; () banked
 18186  004DC0  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 18187  004DC2  0100               	movlb	0	; () banked
 18188  004DC4  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 18189  004DC6  0100               	movlb	0	; () banked
 18190  004DC8  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 18191  004DCA  0100               	movlb	0	; () banked
 18192  004DCC  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 18193  004DCE  0100               	movlb	0	; () banked
 18194  004DD0  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 18195  004DD2  A0D8               	btfss	status,0,c
 18196  004DD4  D012               	goto	l10774
 18197                           
 18198                           ; BSR set to: 0
 18199  004DD6  0100               	movlb	0	; () banked
 18200  004DD8  5164               	movf	___aldiv@divisor& (0+255),w,b
 18201  004DDA  0100               	movlb	0	; () banked
 18202  004DDC  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 18203  004DDE  0100               	movlb	0	; () banked
 18204  004DE0  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 18205  004DE2  0100               	movlb	0	; () banked
 18206  004DE4  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 18207  004DE6  0100               	movlb	0	; () banked
 18208  004DE8  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 18209  004DEA  0100               	movlb	0	; () banked
 18210  004DEC  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 18211  004DEE  0100               	movlb	0	; () banked
 18212  004DF0  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 18213  004DF2  0100               	movlb	0	; () banked
 18214  004DF4  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 18215                           
 18216                           ; BSR set to: 0
 18217  004DF6  0100               	movlb	0	; () banked
 18218  004DF8  816A               	bsf	___aldiv@quotient& (0+255),0,b
 18219  004DFA                     l10774:
 18220                           
 18221                           ; BSR set to: 0
 18222  004DFA  0100               	movlb	0	; () banked
 18223  004DFC  90D8               	bcf	status,0,c
 18224  004DFE  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 18225  004E00  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 18226  004E02  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 18227  004E04  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 18228                           
 18229                           ; BSR set to: 0
 18230  004E06  0100               	movlb	0	; () banked
 18231  004E08  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 18232  004E0A  D7CD               	goto	l10766
 18233  004E0C                     l10778:
 18234                           
 18235                           ; BSR set to: 0
 18236  004E0C  0100               	movlb	0	; () banked
 18237  004E0E  5169               	movf	___aldiv@sign& (0+255),w,b
 18238  004E10  0100               	movlb	0	; () banked
 18239  004E12  B4D8               	btfsc	status,2,c
 18240  004E14  D009               	goto	l10782
 18241                           
 18242                           ; BSR set to: 0
 18243  004E16  0100               	movlb	0	; () banked
 18244  004E18  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 18245  004E1A  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 18246  004E1C  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 18247  004E1E  6D6A               	negf	___aldiv@quotient& (0+255),b
 18248  004E20  0E00               	movlw	0
 18249  004E22  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 18250  004E24  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 18251  004E26  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 18252  004E28                     l10782:
 18253                           
 18254                           ; BSR set to: 0
 18255  004E28  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 18256  004E2C  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 18257  004E30  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 18258  004E34  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 18259  004E38  0012               	return	
 18260  004E3A                     __end_of___aldiv:
 18261                           	opt stack 0
 18262                           tosu	equ	0xFFF
 18263                           tosh	equ	0xFFE
 18264                           tosl	equ	0xFFD
 18265                           pclath	equ	0xFFA
 18266                           tblptru	equ	0xFF8
 18267                           tblptrh	equ	0xFF7
 18268                           tblptrl	equ	0xFF6
 18269                           tablat	equ	0xFF5
 18270                           prodh	equ	0xFF4
 18271                           prodl	equ	0xFF3
 18272                           intcon	equ	0xFF2
 18273                           indf0	equ	0xFEF
 18274                           postinc0	equ	0xFEE
 18275                           fsr0h	equ	0xFEA
 18276                           fsr0l	equ	0xFE9
 18277                           wreg	equ	0xFE8
 18278                           postinc1	equ	0xFE6
 18279                           postdec1	equ	0xFE5
 18280                           plusw1	equ	0xFE3
 18281                           fsr1h	equ	0xFE2
 18282                           fsr1l	equ	0xFE1
 18283                           indf2	equ	0xFDF
 18284                           postinc2	equ	0xFDE
 18285                           postdec2	equ	0xFDD
 18286                           plusw2	equ	0xFDB
 18287                           fsr2h	equ	0xFDA
 18288                           fsr2l	equ	0xFD9
 18289                           status	equ	0xFD8
 18290                           
 18291 ;; *************** function _cal_diff_p_to_h *****************
 18292 ;; Defined at:
 18293 ;;		line 446 in file "src/api/data.c"
 18294 ;; Parameters:    Size  Location     Type
 18295 ;;  xin             2   98[BANK0 ] PTR struct .
 18296 ;;		 -> x_prDiffData(8), 
 18297 ;; Auto vars:     Size  Location     Type
 18298 ;;  f1              4  106[BANK0 ] float 
 18299 ;;  f2              4  102[BANK0 ] float 
 18300 ;; Return value:  Size  Location     Type
 18301 ;;                  4   98[BANK0 ] long 
 18302 ;; Registers used:
 18303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18304 ;; Tracked objects:
 18305 ;;		On entry : 0/0
 18306 ;;		On exit  : 0/0
 18307 ;;		Unchanged: 0/0
 18308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18310 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18311 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18312 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18313 ;;Total ram usage:       12 bytes
 18314 ;; Hardware stack levels used:    1
 18315 ;; Hardware stack levels required when called:    5
 18316 ;; This function calls:
 18317 ;;		___fldiv
 18318 ;;		___flmul
 18319 ;;		___fltol
 18320 ;;		___xxtofl
 18321 ;; This function is called by:
 18322 ;;		_cal_diff_press
 18323 ;; This function uses a non-reentrant model
 18324 ;;
 18325                           
 18326                           	psect	text91
 18327  005676                     __ptext91:
 18328                           	opt stack 0
 18329  005676                     _cal_diff_p_to_h:
 18330                           	opt stack 22
 18331                           
 18332                           ;data.c: 448: float f1,f2;
 18333                           ;data.c: 450: f1=(float)(xin->pValue);
 18334                           
 18335                           ; BSR set to: 0
 18336                           ;incstack = 0
 18337  005676  C0C2  FFD9         	movff	cal_diff_p_to_h@xin,fsr2l
 18338  00567A  C0C3  FFDA         	movff	cal_diff_p_to_h@xin+1,fsr2h
 18339  00567E  CFDE F060          	movff	postinc2,___xxtofl@val
 18340  005682  CFDE F061          	movff	postinc2,___xxtofl@val+1
 18341  005686  CFDE F062          	movff	postinc2,___xxtofl@val+2
 18342  00568A  CFDE F063          	movff	postinc2,___xxtofl@val+3
 18343  00568E  0E01               	movlw	1
 18344  005690  EC6A  F01D         	call	___xxtofl
 18345  005694  C060  F0CA         	movff	?___xxtofl,cal_diff_p_to_h@f1
 18346  005698  C061  F0CB         	movff	?___xxtofl+1,cal_diff_p_to_h@f1+1
 18347  00569C  C062  F0CC         	movff	?___xxtofl+2,cal_diff_p_to_h@f1+2
 18348  0056A0  C063  F0CD         	movff	?___xxtofl+3,cal_diff_p_to_h@f1+3
 18349                           
 18350                           ;data.c: 451: f2=(float)(fpSysData->density);
 18351  0056A4  0E06               	movlw	6
 18352  0056A6  243C               	addwf	_fpSysData,w,c
 18353  0056A8  6EF6               	movwf	tblptrl,c
 18354  0056AA  0E00               	movlw	0
 18355  0056AC  203D               	addwfc	_fpSysData+1,w,c
 18356  0056AE  6EF7               	movwf	tblptrh,c
 18357  0056B0  0E00               	movlw	0
 18358  0056B2  203E               	addwfc	_fpSysData+2,w,c
 18359  0056B4  6EF8               	movwf	tblptru,c
 18360  0056B6  0009               	tblrd		*+
 18361  0056B8  CFF5 F0C4          	movff	tablat,??_cal_diff_p_to_h
 18362  0056BC  0009               	tblrd		*+
 18363  0056BE  CFF5 F0C5          	movff	tablat,??_cal_diff_p_to_h+1
 18364  0056C2  C0C4  F060         	movff	??_cal_diff_p_to_h,___xxtofl@val
 18365  0056C6  C0C5  F061         	movff	??_cal_diff_p_to_h+1,___xxtofl@val+1
 18366  0056CA  0100               	movlb	0	; () banked
 18367  0056CC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 18368  0056CE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 18369  0056D0  0E00               	movlw	0
 18370  0056D2  EC6A  F01D         	call	___xxtofl
 18371  0056D6  C060  F0C6         	movff	?___xxtofl,cal_diff_p_to_h@f2
 18372  0056DA  C061  F0C7         	movff	?___xxtofl+1,cal_diff_p_to_h@f2+1
 18373  0056DE  C062  F0C8         	movff	?___xxtofl+2,cal_diff_p_to_h@f2+2
 18374  0056E2  C063  F0C9         	movff	?___xxtofl+3,cal_diff_p_to_h@f2+3
 18375                           
 18376                           ;data.c: 452: f1=f1/(f2*9.8f);
 18377  0056E6  C0CA  F087         	movff	cal_diff_p_to_h@f1,___fldiv@b
 18378  0056EA  C0CB  F088         	movff	cal_diff_p_to_h@f1+1,___fldiv@b+1
 18379  0056EE  C0CC  F089         	movff	cal_diff_p_to_h@f1+2,___fldiv@b+2
 18380  0056F2  C0CD  F08A         	movff	cal_diff_p_to_h@f1+3,___fldiv@b+3
 18381  0056F6  0ECD               	movlw	205
 18382  0056F8  0100               	movlb	0	; () banked
 18383  0056FA  6F72               	movwf	___flmul@a& (0+255),b
 18384  0056FC  0ECC               	movlw	204
 18385  0056FE  6F73               	movwf	(___flmul@a+1)& (0+255),b
 18386  005700  0E1C               	movlw	28
 18387  005702  6F74               	movwf	(___flmul@a+2)& (0+255),b
 18388  005704  0E41               	movlw	65
 18389  005706  6F75               	movwf	(___flmul@a+3)& (0+255),b
 18390  005708  C0C6  F06E         	movff	cal_diff_p_to_h@f2,___flmul@b
 18391  00570C  C0C7  F06F         	movff	cal_diff_p_to_h@f2+1,___flmul@b+1
 18392  005710  C0C8  F070         	movff	cal_diff_p_to_h@f2+2,___flmul@b+2
 18393  005714  C0C9  F071         	movff	cal_diff_p_to_h@f2+3,___flmul@b+3
 18394  005718  EC94  F00B         	call	___flmul	;wreg free
 18395  00571C  C06E  F08B         	movff	?___flmul,___fldiv@a
 18396  005720  C06F  F08C         	movff	?___flmul+1,___fldiv@a+1
 18397  005724  C070  F08D         	movff	?___flmul+2,___fldiv@a+2
 18398  005728  C071  F08E         	movff	?___flmul+3,___fldiv@a+3
 18399  00572C  EC48  F012         	call	___fldiv	;wreg free
 18400  005730  C087  F0CA         	movff	?___fldiv,cal_diff_p_to_h@f1
 18401  005734  C088  F0CB         	movff	?___fldiv+1,cal_diff_p_to_h@f1+1
 18402  005738  C089  F0CC         	movff	?___fldiv+2,cal_diff_p_to_h@f1+2
 18403  00573C  C08A  F0CD         	movff	?___fldiv+3,cal_diff_p_to_h@f1+3
 18404                           
 18405                           ;data.c: 453: rtHight=(int32_t)f1;
 18406  005740  C0CA  F0B8         	movff	cal_diff_p_to_h@f1,___fltol@f1
 18407  005744  C0CB  F0B9         	movff	cal_diff_p_to_h@f1+1,___fltol@f1+1
 18408  005748  C0CC  F0BA         	movff	cal_diff_p_to_h@f1+2,___fltol@f1+2
 18409  00574C  C0CD  F0BB         	movff	cal_diff_p_to_h@f1+3,___fltol@f1+3
 18410  005750  EC32  F028         	call	___fltol	;wreg free
 18411  005754  C0B8  F162         	movff	?___fltol,_rtHight	;volatile
 18412  005758  C0B9  F163         	movff	?___fltol+1,_rtHight+1	;volatile
 18413  00575C  C0BA  F164         	movff	?___fltol+2,_rtHight+2	;volatile
 18414  005760  C0BB  F165         	movff	?___fltol+3,_rtHight+3	;volatile
 18415  005764  0012               	return	
 18416  005766                     __end_of_cal_diff_p_to_h:
 18417                           	opt stack 0
 18418                           tosu	equ	0xFFF
 18419                           tosh	equ	0xFFE
 18420                           tosl	equ	0xFFD
 18421                           pclath	equ	0xFFA
 18422                           tblptru	equ	0xFF8
 18423                           tblptrh	equ	0xFF7
 18424                           tblptrl	equ	0xFF6
 18425                           tablat	equ	0xFF5
 18426                           prodh	equ	0xFF4
 18427                           prodl	equ	0xFF3
 18428                           intcon	equ	0xFF2
 18429                           indf0	equ	0xFEF
 18430                           postinc0	equ	0xFEE
 18431                           fsr0h	equ	0xFEA
 18432                           fsr0l	equ	0xFE9
 18433                           wreg	equ	0xFE8
 18434                           postinc1	equ	0xFE6
 18435                           postdec1	equ	0xFE5
 18436                           plusw1	equ	0xFE3
 18437                           fsr1h	equ	0xFE2
 18438                           fsr1l	equ	0xFE1
 18439                           indf2	equ	0xFDF
 18440                           postinc2	equ	0xFDE
 18441                           postdec2	equ	0xFDD
 18442                           plusw2	equ	0xFDB
 18443                           fsr2h	equ	0xFDA
 18444                           fsr2l	equ	0xFD9
 18445                           status	equ	0xFD8
 18446                           
 18447 ;; *************** function _cal_diff_hight_to_vol_v *****************
 18448 ;; Defined at:
 18449 ;;		line 415 in file "src/api/data.c"
 18450 ;; Parameters:    Size  Location     Type
 18451 ;;  h               4  134[BANK0 ] long 
 18452 ;; Auto vars:     Size  Location     Type
 18453 ;;  f1              4  154[BANK0 ] float 
 18454 ;;  D               4  150[BANK0 ] float 
 18455 ;;  v2              4  146[BANK0 ] float 
 18456 ;;  v1              4  142[BANK0 ] float 
 18457 ;; Return value:  Size  Location     Type
 18458 ;;                  4  134[BANK0 ] long 
 18459 ;; Registers used:
 18460 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18461 ;; Tracked objects:
 18462 ;;		On entry : 0/0
 18463 ;;		On exit  : 0/0
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18466 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18467 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18469 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18470 ;;Total ram usage:       24 bytes
 18471 ;; Hardware stack levels used:    1
 18472 ;; Hardware stack levels required when called:    6
 18473 ;; This function calls:
 18474 ;;		___fladd
 18475 ;;		___fldiv
 18476 ;;		___flge
 18477 ;;		___flmul
 18478 ;;		___flneg
 18479 ;;		___fltol
 18480 ;;		___xxtofl
 18481 ;;		_m_interp1_float_fast
 18482 ;; This function is called by:
 18483 ;;		_cal_diff_press
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           	psect	text92
 18488  0000DC                     __ptext92:
 18489                           	opt stack 0
 18490  0000DC                     _cal_diff_hight_to_vol_v:
 18491                           	opt stack 21
 18492                           
 18493                           ;data.c: 417: float v1,v2;
 18494                           ;data.c: 418: float f1,D;
 18495                           ;data.c: 419: v1=(float)(fpSysData->V1);
 18496                           
 18497                           ;incstack = 0
 18498  0000DC  0E10               	movlw	16
 18499  0000DE  243C               	addwf	_fpSysData,w,c
 18500  0000E0  6EF6               	movwf	tblptrl,c
 18501  0000E2  0E00               	movlw	0
 18502  0000E4  203D               	addwfc	_fpSysData+1,w,c
 18503  0000E6  6EF7               	movwf	tblptrh,c
 18504  0000E8  0E00               	movlw	0
 18505  0000EA  203E               	addwfc	_fpSysData+2,w,c
 18506  0000EC  6EF8               	movwf	tblptru,c
 18507  0000EE  0009               	tblrd		*+
 18508  0000F0  CFF5 F060          	movff	tablat,___xxtofl@val
 18509  0000F4  0009               	tblrd		*+
 18510  0000F6  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18511  0000FA  0009               	tblrd		*+
 18512  0000FC  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18513  000100  000A               	tblrd		*-
 18514  000102  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18515  000106  0E01               	movlw	1
 18516  000108  EC6A  F01D         	call	___xxtofl
 18517  00010C  C060  F0EE         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v1
 18518  000110  C061  F0EF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v1+1
 18519  000114  C062  F0F0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v1+2
 18520  000118  C063  F0F1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v1+3
 18521                           
 18522                           ;data.c: 420: v2=(float)(fpSysData->V2);
 18523  00011C  0E14               	movlw	20
 18524  00011E  243C               	addwf	_fpSysData,w,c
 18525  000120  6EF6               	movwf	tblptrl,c
 18526  000122  0E00               	movlw	0
 18527  000124  203D               	addwfc	_fpSysData+1,w,c
 18528  000126  6EF7               	movwf	tblptrh,c
 18529  000128  0E00               	movlw	0
 18530  00012A  203E               	addwfc	_fpSysData+2,w,c
 18531  00012C  6EF8               	movwf	tblptru,c
 18532  00012E  0009               	tblrd		*+
 18533  000130  CFF5 F060          	movff	tablat,___xxtofl@val
 18534  000134  0009               	tblrd		*+
 18535  000136  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18536  00013A  0009               	tblrd		*+
 18537  00013C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18538  000140  000A               	tblrd		*-
 18539  000142  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18540  000146  0E01               	movlw	1
 18541  000148  EC6A  F01D         	call	___xxtofl
 18542  00014C  C060  F0F2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 18543  000150  C061  F0F3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 18544  000154  C062  F0F4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 18545  000158  C063  F0F5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 18546                           
 18547                           ;data.c: 422: f1=(float)h;
 18548  00015C  C0E6  F060         	movff	cal_diff_hight_to_vol_v@h,___xxtofl@val
 18549  000160  C0E7  F061         	movff	cal_diff_hight_to_vol_v@h+1,___xxtofl@val+1
 18550  000164  C0E8  F062         	movff	cal_diff_hight_to_vol_v@h+2,___xxtofl@val+2
 18551  000168  C0E9  F063         	movff	cal_diff_hight_to_vol_v@h+3,___xxtofl@val+3
 18552  00016C  0E01               	movlw	1
 18553  00016E  EC6A  F01D         	call	___xxtofl
 18554  000172  C060  F0FA         	movff	?___xxtofl,cal_diff_hight_to_vol_v@f1
 18555  000176  C061  F0FB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@f1+1
 18556  00017A  C062  F0FC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@f1+2
 18557  00017E  C063  F0FD         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@f1+3
 18558                           
 18559                           ;data.c: 423: D=(float)(fpSysData->d);
 18560  000182  0E0C               	movlw	12
 18561  000184  243C               	addwf	_fpSysData,w,c
 18562  000186  6EF6               	movwf	tblptrl,c
 18563  000188  0E00               	movlw	0
 18564  00018A  203D               	addwfc	_fpSysData+1,w,c
 18565  00018C  6EF7               	movwf	tblptrh,c
 18566  00018E  0E00               	movlw	0
 18567  000190  203E               	addwfc	_fpSysData+2,w,c
 18568  000192  6EF8               	movwf	tblptru,c
 18569  000194  0009               	tblrd		*+
 18570  000196  CFF5 F060          	movff	tablat,___xxtofl@val
 18571  00019A  0009               	tblrd		*+
 18572  00019C  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18573  0001A0  0009               	tblrd		*+
 18574  0001A2  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18575  0001A6  000A               	tblrd		*-
 18576  0001A8  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18577  0001AC  0E00               	movlw	0
 18578  0001AE  EC6A  F01D         	call	___xxtofl
 18579  0001B2  C060  F0F6         	movff	?___xxtofl,cal_diff_hight_to_vol_v@D
 18580  0001B6  C061  F0F7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@D+1
 18581  0001BA  C062  F0F8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@D+2
 18582  0001BE  C063  F0F9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@D+3
 18583                           
 18584                           ;data.c: 424: if(f1<D/4){
 18585  0001C2  C0FA  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 18586  0001C6  C0FB  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 18587  0001CA  C0FC  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 18588  0001CE  C0FD  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 18589  0001D2  0E00               	movlw	0
 18590  0001D4  0100               	movlb	0	; () banked
 18591  0001D6  6F8B               	movwf	___fldiv@a& (0+255),b
 18592  0001D8  0E00               	movlw	0
 18593  0001DA  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 18594  0001DC  0E80               	movlw	128
 18595  0001DE  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 18596  0001E0  0E40               	movlw	64
 18597  0001E2  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 18598  0001E4  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 18599  0001E8  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 18600  0001EC  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 18601  0001F0  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 18602  0001F4  EC48  F012         	call	___fldiv	;wreg free
 18603  0001F8  C087  F0BC         	movff	?___fldiv,___flge@ff2
 18604  0001FC  C088  F0BD         	movff	?___fldiv+1,___flge@ff2+1
 18605  000200  C089  F0BE         	movff	?___fldiv+2,___flge@ff2+2
 18606  000204  C08A  F0BF         	movff	?___fldiv+3,___flge@ff2+3
 18607  000208  ECB8  F021         	call	___flge	;wreg free
 18608  00020C  0100               	movlb	0	; () banked
 18609  00020E  B0D8               	btfsc	status,0,c
 18610  000210  D07D               	goto	l11770
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;data.c: 425: f1=2*f1/D;
 18614  000212  0E00               	movlw	0
 18615  000214  0100               	movlb	0	; () banked
 18616  000216  6F72               	movwf	___flmul@a& (0+255),b
 18617  000218  0E00               	movlw	0
 18618  00021A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 18619  00021C  0E00               	movlw	0
 18620  00021E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 18621  000220  0E40               	movlw	64
 18622  000222  6F75               	movwf	(___flmul@a+3)& (0+255),b
 18623  000224  C0FA  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 18624  000228  C0FB  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 18625  00022C  C0FC  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 18626  000230  C0FD  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 18627  000234  EC94  F00B         	call	___flmul	;wreg free
 18628  000238  C06E  F087         	movff	?___flmul,___fldiv@b
 18629  00023C  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 18630  000240  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 18631  000244  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 18632  000248  C0F6  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 18633  00024C  C0F7  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 18634  000250  C0F8  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 18635  000254  C0F9  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 18636  000258  EC48  F012         	call	___fldiv	;wreg free
 18637  00025C  C087  F0FA         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 18638  000260  C088  F0FB         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 18639  000264  C089  F0FC         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 18640  000268  C08A  F0FD         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 18641                           
 18642                           ;data.c: 426: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 18643  00026C  0EE5               	movlw	low _hKel
 18644  00026E  0100               	movlb	0	; () banked
 18645  000270  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 18646  000272  0EFB               	movlw	high _hKel
 18647  000274  0100               	movlb	0	; () banked
 18648  000276  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 18649  000278  C0FA  F0C6         	movff	cal_diff_hight_to_vol_v@f1,m_interp1_float_fast@in
 18650  00027C  C0FB  F0C7         	movff	cal_diff_hight_to_vol_v@f1+1,m_interp1_float_fast@in+1
 18651  000280  C0FC  F0C8         	movff	cal_diff_hight_to_vol_v@f1+2,m_interp1_float_fast@in+2
 18652  000284  C0FD  F0C9         	movff	cal_diff_hight_to_vol_v@f1+3,m_interp1_float_fast@in+3
 18653  000288  0E00               	movlw	0
 18654  00028A  0100               	movlb	0	; () banked
 18655  00028C  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 18656  00028E  0E65               	movlw	101
 18657  000290  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 18658  000292  EC34  F010         	call	_m_interp1_float_fast	;wreg free
 18659  000296  C0C4  F0FA         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_v@f1
 18660  00029A  C0C5  F0FB         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_v@f1+1
 18661  00029E  C0C6  F0FC         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_v@f1+2
 18662  0002A2  C0C7  F0FD         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_v@f1+3
 18663                           
 18664                           ;data.c: 427: v2=(float)(fpSysData->V2);
 18665  0002A6  0E14               	movlw	20
 18666  0002A8  243C               	addwf	_fpSysData,w,c
 18667  0002AA  6EF6               	movwf	tblptrl,c
 18668  0002AC  0E00               	movlw	0
 18669  0002AE  203D               	addwfc	_fpSysData+1,w,c
 18670  0002B0  6EF7               	movwf	tblptrh,c
 18671  0002B2  0E00               	movlw	0
 18672  0002B4  203E               	addwfc	_fpSysData+2,w,c
 18673  0002B6  6EF8               	movwf	tblptru,c
 18674  0002B8  0009               	tblrd		*+
 18675  0002BA  CFF5 F060          	movff	tablat,___xxtofl@val
 18676  0002BE  0009               	tblrd		*+
 18677  0002C0  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18678  0002C4  0009               	tblrd		*+
 18679  0002C6  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18680  0002CA  000A               	tblrd		*-
 18681  0002CC  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18682  0002D0  0E01               	movlw	1
 18683  0002D2  EC6A  F01D         	call	___xxtofl
 18684  0002D6  C060  F0F2         	movff	?___xxtofl,cal_diff_hight_to_vol_v@v2
 18685  0002DA  C061  F0F3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_v@v2+1
 18686  0002DE  C062  F0F4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_v@v2+2
 18687  0002E2  C063  F0F5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_v@v2+3
 18688                           
 18689                           ;data.c: 428: return (int32_t)v2;
 18690  0002E6  C0F2  F0B8         	movff	cal_diff_hight_to_vol_v@v2,___fltol@f1
 18691  0002EA  C0F3  F0B9         	movff	cal_diff_hight_to_vol_v@v2+1,___fltol@f1+1
 18692  0002EE  C0F4  F0BA         	movff	cal_diff_hight_to_vol_v@v2+2,___fltol@f1+2
 18693  0002F2  C0F5  F0BB         	movff	cal_diff_hight_to_vol_v@v2+3,___fltol@f1+3
 18694  0002F6  EC32  F028         	call	___fltol	;wreg free
 18695  0002FA  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 18696  0002FE  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 18697  000302  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 18698  000306  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 18699                           
 18700                           ;data.c: 429: }else if(f1<D/4+fpSysData->h){
 18701  00030A  0012               	return	
 18702  00030C                     l11770:
 18703  00030C  C0FA  F0B8         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff1
 18704  000310  C0FB  F0B9         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff1+1
 18705  000314  C0FC  F0BA         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff1+2
 18706  000318  C0FD  F0BB         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff1+3
 18707  00031C  0E08               	movlw	8
 18708  00031E  243C               	addwf	_fpSysData,w,c
 18709  000320  6EF6               	movwf	tblptrl,c
 18710  000322  0E00               	movlw	0
 18711  000324  203D               	addwfc	_fpSysData+1,w,c
 18712  000326  6EF7               	movwf	tblptrh,c
 18713  000328  0E00               	movlw	0
 18714  00032A  203E               	addwfc	_fpSysData+2,w,c
 18715  00032C  6EF8               	movwf	tblptru,c
 18716  00032E  0009               	tblrd		*+
 18717  000330  CFF5 F060          	movff	tablat,___xxtofl@val
 18718  000334  0009               	tblrd		*+
 18719  000336  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18720  00033A  0009               	tblrd		*+
 18721  00033C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18722  000340  000A               	tblrd		*-
 18723  000342  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18724  000346  0E01               	movlw	1
 18725  000348  EC6A  F01D         	call	___xxtofl
 18726  00034C  C060  F0A8         	movff	?___xxtofl,___fladd@a
 18727  000350  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 18728  000354  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 18729  000358  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 18730  00035C  0E00               	movlw	0
 18731  00035E  0100               	movlb	0	; () banked
 18732  000360  6F8B               	movwf	___fldiv@a& (0+255),b
 18733  000362  0E00               	movlw	0
 18734  000364  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 18735  000366  0E80               	movlw	128
 18736  000368  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 18737  00036A  0E40               	movlw	64
 18738  00036C  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 18739  00036E  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 18740  000372  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 18741  000376  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 18742  00037A  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 18743  00037E  EC48  F012         	call	___fldiv	;wreg free
 18744  000382  C087  F0A4         	movff	?___fldiv,___fladd@b
 18745  000386  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 18746  00038A  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 18747  00038E  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 18748  000392  EC40  F009         	call	___fladd	;wreg free
 18749  000396  C0A4  F0BC         	movff	?___fladd,___flge@ff2
 18750  00039A  C0A5  F0BD         	movff	?___fladd+1,___flge@ff2+1
 18751  00039E  C0A6  F0BE         	movff	?___fladd+2,___flge@ff2+2
 18752  0003A2  C0A7  F0BF         	movff	?___fladd+3,___flge@ff2+3
 18753  0003A6  ECB8  F021         	call	___flge	;wreg free
 18754  0003AA  0100               	movlb	0	; () banked
 18755  0003AC  B0D8               	btfsc	status,0,c
 18756  0003AE  D0BB               	goto	l11784
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;data.c: 430: f1=f1-D/4;
 18760  0003B0  0E00               	movlw	0
 18761  0003B2  0100               	movlb	0	; () banked
 18762  0003B4  6F8B               	movwf	___fldiv@a& (0+255),b
 18763  0003B6  0E00               	movlw	0
 18764  0003B8  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 18765  0003BA  0E80               	movlw	128
 18766  0003BC  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 18767  0003BE  0E40               	movlw	64
 18768  0003C0  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 18769  0003C2  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 18770  0003C6  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 18771  0003CA  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 18772  0003CE  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 18773  0003D2  EC48  F012         	call	___fldiv	;wreg free
 18774  0003D6  C087  F0A0         	movff	?___fldiv,___flneg@f1
 18775  0003DA  C088  F0A1         	movff	?___fldiv+1,___flneg@f1+1
 18776  0003DE  C089  F0A2         	movff	?___fldiv+2,___flneg@f1+2
 18777  0003E2  C08A  F0A3         	movff	?___fldiv+3,___flneg@f1+3
 18778  0003E6  EC2F  F03A         	call	___flneg	;wreg free
 18779  0003EA  C0A0  F0A4         	movff	?___flneg,___fladd@b
 18780  0003EE  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 18781  0003F2  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 18782  0003F6  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 18783  0003FA  C0FA  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 18784  0003FE  C0FB  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 18785  000402  C0FC  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 18786  000406  C0FD  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 18787  00040A  EC40  F009         	call	___fladd	;wreg free
 18788  00040E  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 18789  000412  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 18790  000416  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 18791  00041A  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 18792                           
 18793                           ;data.c: 431: v2=v2*(f1/fpSysData->h);
 18794  00041E  0E08               	movlw	8
 18795  000420  243C               	addwf	_fpSysData,w,c
 18796  000422  6EF6               	movwf	tblptrl,c
 18797  000424  0E00               	movlw	0
 18798  000426  203D               	addwfc	_fpSysData+1,w,c
 18799  000428  6EF7               	movwf	tblptrh,c
 18800  00042A  0E00               	movlw	0
 18801  00042C  203E               	addwfc	_fpSysData+2,w,c
 18802  00042E  6EF8               	movwf	tblptru,c
 18803  000430  0009               	tblrd		*+
 18804  000432  CFF5 F060          	movff	tablat,___xxtofl@val
 18805  000436  0009               	tblrd		*+
 18806  000438  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18807  00043C  0009               	tblrd		*+
 18808  00043E  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18809  000442  000A               	tblrd		*-
 18810  000444  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18811  000448  0E01               	movlw	1
 18812  00044A  EC6A  F01D         	call	___xxtofl
 18813  00044E  C060  F08B         	movff	?___xxtofl,___fldiv@a
 18814  000452  C061  F08C         	movff	?___xxtofl+1,___fldiv@a+1
 18815  000456  C062  F08D         	movff	?___xxtofl+2,___fldiv@a+2
 18816  00045A  C063  F08E         	movff	?___xxtofl+3,___fldiv@a+3
 18817  00045E  C0FA  F087         	movff	cal_diff_hight_to_vol_v@f1,___fldiv@b
 18818  000462  C0FB  F088         	movff	cal_diff_hight_to_vol_v@f1+1,___fldiv@b+1
 18819  000466  C0FC  F089         	movff	cal_diff_hight_to_vol_v@f1+2,___fldiv@b+2
 18820  00046A  C0FD  F08A         	movff	cal_diff_hight_to_vol_v@f1+3,___fldiv@b+3
 18821  00046E  EC48  F012         	call	___fldiv	;wreg free
 18822  000472  C087  F06E         	movff	?___fldiv,___flmul@b
 18823  000476  C088  F06F         	movff	?___fldiv+1,___flmul@b+1
 18824  00047A  C089  F070         	movff	?___fldiv+2,___flmul@b+2
 18825  00047E  C08A  F071         	movff	?___fldiv+3,___flmul@b+3
 18826  000482  C0F2  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 18827  000486  C0F3  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 18828  00048A  C0F4  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 18829  00048E  C0F5  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 18830  000492  EC94  F00B         	call	___flmul	;wreg free
 18831  000496  C06E  F0F2         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 18832  00049A  C06F  F0F3         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 18833  00049E  C070  F0F4         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 18834  0004A2  C071  F0F5         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 18835                           
 18836                           ;data.c: 432: v1=v1/2;
 18837  0004A6  C0EE  F087         	movff	cal_diff_hight_to_vol_v@v1,___fldiv@b
 18838  0004AA  C0EF  F088         	movff	cal_diff_hight_to_vol_v@v1+1,___fldiv@b+1
 18839  0004AE  C0F0  F089         	movff	cal_diff_hight_to_vol_v@v1+2,___fldiv@b+2
 18840  0004B2  C0F1  F08A         	movff	cal_diff_hight_to_vol_v@v1+3,___fldiv@b+3
 18841  0004B6  0E00               	movlw	0
 18842  0004B8  0100               	movlb	0	; () banked
 18843  0004BA  6F8B               	movwf	___fldiv@a& (0+255),b
 18844  0004BC  0E00               	movlw	0
 18845  0004BE  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 18846  0004C0  0E00               	movlw	0
 18847  0004C2  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 18848  0004C4  0E40               	movlw	64
 18849  0004C6  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 18850  0004C8  EC48  F012         	call	___fldiv	;wreg free
 18851  0004CC  C087  F0EE         	movff	?___fldiv,cal_diff_hight_to_vol_v@v1
 18852  0004D0  C088  F0EF         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@v1+1
 18853  0004D4  C089  F0F0         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@v1+2
 18854  0004D8  C08A  F0F1         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@v1+3
 18855                           
 18856                           ;data.c: 433: return (int32_t)(v1+v2);
 18857  0004DC  C0F2  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 18858  0004E0  C0F3  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 18859  0004E4  C0F4  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 18860  0004E8  C0F5  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 18861  0004EC  C0EE  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 18862  0004F0  C0EF  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 18863  0004F4  C0F0  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 18864  0004F8  C0F1  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 18865  0004FC  EC40  F009         	call	___fladd	;wreg free
 18866  000500  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 18867  000504  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 18868  000508  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 18869  00050C  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 18870  000510  EC32  F028         	call	___fltol	;wreg free
 18871  000514  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 18872  000518  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 18873  00051C  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 18874  000520  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 18875                           
 18876                           ;data.c: 434: }else{
 18877  000524  0012               	return	
 18878  000526                     l11784:
 18879                           
 18880                           ;data.c: 435: if(f1>(float)(fpSysData->h)+D/2)f1=(float)(fpSysData->h)+D/2;
 18881  000526  0E00               	movlw	0
 18882  000528  0100               	movlb	0	; () banked
 18883  00052A  6F8B               	movwf	___fldiv@a& (0+255),b
 18884  00052C  0E00               	movlw	0
 18885  00052E  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 18886  000530  0E00               	movlw	0
 18887  000532  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 18888  000534  0E40               	movlw	64
 18889  000536  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 18890  000538  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 18891  00053C  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 18892  000540  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 18893  000544  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 18894  000548  EC48  F012         	call	___fldiv	;wreg free
 18895  00054C  C087  F0A8         	movff	?___fldiv,___fladd@a
 18896  000550  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 18897  000554  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 18898  000558  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 18899  00055C  0E08               	movlw	8
 18900  00055E  243C               	addwf	_fpSysData,w,c
 18901  000560  6EF6               	movwf	tblptrl,c
 18902  000562  0E00               	movlw	0
 18903  000564  203D               	addwfc	_fpSysData+1,w,c
 18904  000566  6EF7               	movwf	tblptrh,c
 18905  000568  0E00               	movlw	0
 18906  00056A  203E               	addwfc	_fpSysData+2,w,c
 18907  00056C  6EF8               	movwf	tblptru,c
 18908  00056E  0009               	tblrd		*+
 18909  000570  CFF5 F060          	movff	tablat,___xxtofl@val
 18910  000574  0009               	tblrd		*+
 18911  000576  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18912  00057A  0009               	tblrd		*+
 18913  00057C  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18914  000580  000A               	tblrd		*-
 18915  000582  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18916  000586  0E01               	movlw	1
 18917  000588  EC6A  F01D         	call	___xxtofl
 18918  00058C  C060  F0A4         	movff	?___xxtofl,___fladd@b
 18919  000590  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 18920  000594  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 18921  000598  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 18922  00059C  EC40  F009         	call	___fladd	;wreg free
 18923  0005A0  C0A4  F0B8         	movff	?___fladd,___flge@ff1
 18924  0005A4  C0A5  F0B9         	movff	?___fladd+1,___flge@ff1+1
 18925  0005A8  C0A6  F0BA         	movff	?___fladd+2,___flge@ff1+2
 18926  0005AC  C0A7  F0BB         	movff	?___fladd+3,___flge@ff1+3
 18927  0005B0  C0FA  F0BC         	movff	cal_diff_hight_to_vol_v@f1,___flge@ff2
 18928  0005B4  C0FB  F0BD         	movff	cal_diff_hight_to_vol_v@f1+1,___flge@ff2+1
 18929  0005B8  C0FC  F0BE         	movff	cal_diff_hight_to_vol_v@f1+2,___flge@ff2+2
 18930  0005BC  C0FD  F0BF         	movff	cal_diff_hight_to_vol_v@f1+3,___flge@ff2+3
 18931  0005C0  ECB8  F021         	call	___flge	;wreg free
 18932  0005C4  0100               	movlb	0	; () banked
 18933  0005C6  B0D8               	btfsc	status,0,c
 18934  0005C8  D045               	goto	l165
 18935                           
 18936                           ; BSR set to: 0
 18937  0005CA  0E08               	movlw	8
 18938  0005CC  243C               	addwf	_fpSysData,w,c
 18939  0005CE  6EF6               	movwf	tblptrl,c
 18940  0005D0  0E00               	movlw	0
 18941  0005D2  203D               	addwfc	_fpSysData+1,w,c
 18942  0005D4  6EF7               	movwf	tblptrh,c
 18943  0005D6  0E00               	movlw	0
 18944  0005D8  203E               	addwfc	_fpSysData+2,w,c
 18945  0005DA  6EF8               	movwf	tblptru,c
 18946  0005DC  0009               	tblrd		*+
 18947  0005DE  CFF5 F060          	movff	tablat,___xxtofl@val
 18948  0005E2  0009               	tblrd		*+
 18949  0005E4  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18950  0005E8  0009               	tblrd		*+
 18951  0005EA  CFF5 F062          	movff	tablat,___xxtofl@val+2
 18952  0005EE  000A               	tblrd		*-
 18953  0005F0  CFF5 F063          	movff	tablat,___xxtofl@val+3
 18954  0005F4  0E01               	movlw	1
 18955  0005F6  EC6A  F01D         	call	___xxtofl
 18956  0005FA  C060  F0A4         	movff	?___xxtofl,___fladd@b
 18957  0005FE  C061  F0A5         	movff	?___xxtofl+1,___fladd@b+1
 18958  000602  C062  F0A6         	movff	?___xxtofl+2,___fladd@b+2
 18959  000606  C063  F0A7         	movff	?___xxtofl+3,___fladd@b+3
 18960  00060A  0E00               	movlw	0
 18961  00060C  0100               	movlb	0	; () banked
 18962  00060E  6F8B               	movwf	___fldiv@a& (0+255),b
 18963  000610  0E00               	movlw	0
 18964  000612  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 18965  000614  0E00               	movlw	0
 18966  000616  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 18967  000618  0E40               	movlw	64
 18968  00061A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 18969  00061C  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 18970  000620  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 18971  000624  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 18972  000628  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 18973  00062C  EC48  F012         	call	___fldiv	;wreg free
 18974  000630  C087  F0A8         	movff	?___fldiv,___fladd@a
 18975  000634  C088  F0A9         	movff	?___fldiv+1,___fladd@a+1
 18976  000638  C089  F0AA         	movff	?___fldiv+2,___fladd@a+2
 18977  00063C  C08A  F0AB         	movff	?___fldiv+3,___fladd@a+3
 18978  000640  EC40  F009         	call	___fladd	;wreg free
 18979  000644  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 18980  000648  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 18981  00064C  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 18982  000650  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 18983  000654                     l165:
 18984                           
 18985                           ;data.c: 437: f1=f1-(D/4)-(float)(fpSysData->h);
 18986  000654  0E08               	movlw	8
 18987  000656  243C               	addwf	_fpSysData,w,c
 18988  000658  6EF6               	movwf	tblptrl,c
 18989  00065A  0E00               	movlw	0
 18990  00065C  203D               	addwfc	_fpSysData+1,w,c
 18991  00065E  6EF7               	movwf	tblptrh,c
 18992  000660  0E00               	movlw	0
 18993  000662  203E               	addwfc	_fpSysData+2,w,c
 18994  000664  6EF8               	movwf	tblptru,c
 18995  000666  0009               	tblrd		*+
 18996  000668  CFF5 F060          	movff	tablat,___xxtofl@val
 18997  00066C  0009               	tblrd		*+
 18998  00066E  CFF5 F061          	movff	tablat,___xxtofl@val+1
 18999  000672  0009               	tblrd		*+
 19000  000674  CFF5 F062          	movff	tablat,___xxtofl@val+2
 19001  000678  000A               	tblrd		*-
 19002  00067A  CFF5 F063          	movff	tablat,___xxtofl@val+3
 19003  00067E  0E01               	movlw	1
 19004  000680  EC6A  F01D         	call	___xxtofl
 19005  000684  C060  F0A8         	movff	?___xxtofl,___fladd@a
 19006  000688  C061  F0A9         	movff	?___xxtofl+1,___fladd@a+1
 19007  00068C  C062  F0AA         	movff	?___xxtofl+2,___fladd@a+2
 19008  000690  C063  F0AB         	movff	?___xxtofl+3,___fladd@a+3
 19009  000694  0E00               	movlw	0
 19010  000696  0100               	movlb	0	; () banked
 19011  000698  6F8B               	movwf	___fldiv@a& (0+255),b
 19012  00069A  0E00               	movlw	0
 19013  00069C  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 19014  00069E  0E80               	movlw	128
 19015  0006A0  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 19016  0006A2  0E40               	movlw	64
 19017  0006A4  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 19018  0006A6  C0F6  F087         	movff	cal_diff_hight_to_vol_v@D,___fldiv@b
 19019  0006AA  C0F7  F088         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@b+1
 19020  0006AE  C0F8  F089         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@b+2
 19021  0006B2  C0F9  F08A         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@b+3
 19022  0006B6  EC48  F012         	call	___fldiv	;wreg free
 19023  0006BA  C087  F0A4         	movff	?___fldiv,___fladd@b
 19024  0006BE  C088  F0A5         	movff	?___fldiv+1,___fladd@b+1
 19025  0006C2  C089  F0A6         	movff	?___fldiv+2,___fladd@b+2
 19026  0006C6  C08A  F0A7         	movff	?___fldiv+3,___fladd@b+3
 19027  0006CA  EC40  F009         	call	___fladd	;wreg free
 19028  0006CE  C0A4  F0A0         	movff	?___fladd,___flneg@f1
 19029  0006D2  C0A5  F0A1         	movff	?___fladd+1,___flneg@f1+1
 19030  0006D6  C0A6  F0A2         	movff	?___fladd+2,___flneg@f1+2
 19031  0006DA  C0A7  F0A3         	movff	?___fladd+3,___flneg@f1+3
 19032  0006DE  EC2F  F03A         	call	___flneg	;wreg free
 19033  0006E2  C0A0  F0EA         	movff	?___flneg,_cal_diff_hight_to_vol_v$4327
 19034  0006E6  C0A1  F0EB         	movff	?___flneg+1,_cal_diff_hight_to_vol_v$4327+1
 19035  0006EA  C0A2  F0EC         	movff	?___flneg+2,_cal_diff_hight_to_vol_v$4327+2
 19036  0006EE  C0A3  F0ED         	movff	?___flneg+3,_cal_diff_hight_to_vol_v$4327+3
 19037                           
 19038                           ;data.c: 437: f1=f1-(D/4)-(float)(fpSysData->h);
 19039  0006F2  C0EA  F0A4         	movff	_cal_diff_hight_to_vol_v$4327,___fladd@b
 19040  0006F6  C0EB  F0A5         	movff	_cal_diff_hight_to_vol_v$4327+1,___fladd@b+1
 19041  0006FA  C0EC  F0A6         	movff	_cal_diff_hight_to_vol_v$4327+2,___fladd@b+2
 19042  0006FE  C0ED  F0A7         	movff	_cal_diff_hight_to_vol_v$4327+3,___fladd@b+3
 19043  000702  C0FA  F0A8         	movff	cal_diff_hight_to_vol_v@f1,___fladd@a
 19044  000706  C0FB  F0A9         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@a+1
 19045  00070A  C0FC  F0AA         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@a+2
 19046  00070E  C0FD  F0AB         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@a+3
 19047  000712  EC40  F009         	call	___fladd	;wreg free
 19048  000716  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 19049  00071A  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 19050  00071E  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 19051  000722  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 19052                           
 19053                           ;data.c: 438: f1=2*f1/D;
 19054  000726  0E00               	movlw	0
 19055  000728  0100               	movlb	0	; () banked
 19056  00072A  6F72               	movwf	___flmul@a& (0+255),b
 19057  00072C  0E00               	movlw	0
 19058  00072E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 19059  000730  0E00               	movlw	0
 19060  000732  6F74               	movwf	(___flmul@a+2)& (0+255),b
 19061  000734  0E40               	movlw	64
 19062  000736  6F75               	movwf	(___flmul@a+3)& (0+255),b
 19063  000738  C0FA  F06E         	movff	cal_diff_hight_to_vol_v@f1,___flmul@b
 19064  00073C  C0FB  F06F         	movff	cal_diff_hight_to_vol_v@f1+1,___flmul@b+1
 19065  000740  C0FC  F070         	movff	cal_diff_hight_to_vol_v@f1+2,___flmul@b+2
 19066  000744  C0FD  F071         	movff	cal_diff_hight_to_vol_v@f1+3,___flmul@b+3
 19067  000748  EC94  F00B         	call	___flmul	;wreg free
 19068  00074C  C06E  F087         	movff	?___flmul,___fldiv@b
 19069  000750  C06F  F088         	movff	?___flmul+1,___fldiv@b+1
 19070  000754  C070  F089         	movff	?___flmul+2,___fldiv@b+2
 19071  000758  C071  F08A         	movff	?___flmul+3,___fldiv@b+3
 19072  00075C  C0F6  F08B         	movff	cal_diff_hight_to_vol_v@D,___fldiv@a
 19073  000760  C0F7  F08C         	movff	cal_diff_hight_to_vol_v@D+1,___fldiv@a+1
 19074  000764  C0F8  F08D         	movff	cal_diff_hight_to_vol_v@D+2,___fldiv@a+2
 19075  000768  C0F9  F08E         	movff	cal_diff_hight_to_vol_v@D+3,___fldiv@a+3
 19076  00076C  EC48  F012         	call	___fldiv	;wreg free
 19077  000770  C087  F0FA         	movff	?___fldiv,cal_diff_hight_to_vol_v@f1
 19078  000774  C088  F0FB         	movff	?___fldiv+1,cal_diff_hight_to_vol_v@f1+1
 19079  000778  C089  F0FC         	movff	?___fldiv+2,cal_diff_hight_to_vol_v@f1+2
 19080  00077C  C08A  F0FD         	movff	?___fldiv+3,cal_diff_hight_to_vol_v@f1+3
 19081                           
 19082                           ;data.c: 439: f1=0.5-f1;
 19083  000780  C0FA  F0A0         	movff	cal_diff_hight_to_vol_v@f1,___flneg@f1
 19084  000784  C0FB  F0A1         	movff	cal_diff_hight_to_vol_v@f1+1,___flneg@f1+1
 19085  000788  C0FC  F0A2         	movff	cal_diff_hight_to_vol_v@f1+2,___flneg@f1+2
 19086  00078C  C0FD  F0A3         	movff	cal_diff_hight_to_vol_v@f1+3,___flneg@f1+3
 19087  000790  EC2F  F03A         	call	___flneg	;wreg free
 19088  000794  C0A0  F0A4         	movff	?___flneg,___fladd@b
 19089  000798  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 19090  00079C  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 19091  0007A0  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 19092  0007A4  0E00               	movlw	0
 19093  0007A6  0100               	movlb	0	; () banked
 19094  0007A8  6FA8               	movwf	___fladd@a& (0+255),b
 19095  0007AA  0E00               	movlw	0
 19096  0007AC  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 19097  0007AE  0E00               	movlw	0
 19098  0007B0  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 19099  0007B2  0E3F               	movlw	63
 19100  0007B4  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 19101  0007B6  EC40  F009         	call	___fladd	;wreg free
 19102  0007BA  C0A4  F0FA         	movff	?___fladd,cal_diff_hight_to_vol_v@f1
 19103  0007BE  C0A5  F0FB         	movff	?___fladd+1,cal_diff_hight_to_vol_v@f1+1
 19104  0007C2  C0A6  F0FC         	movff	?___fladd+2,cal_diff_hight_to_vol_v@f1+2
 19105  0007C6  C0A7  F0FD         	movff	?___fladd+3,cal_diff_hight_to_vol_v@f1+3
 19106                           
 19107                           ;data.c: 440: v2=v2*(0.5+f1);
 19108  0007CA  0E00               	movlw	0
 19109  0007CC  0100               	movlb	0	; () banked
 19110  0007CE  6FA8               	movwf	___fladd@a& (0+255),b
 19111  0007D0  0E00               	movlw	0
 19112  0007D2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 19113  0007D4  0E00               	movlw	0
 19114  0007D6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 19115  0007D8  0E3F               	movlw	63
 19116  0007DA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 19117  0007DC  C0FA  F0A4         	movff	cal_diff_hight_to_vol_v@f1,___fladd@b
 19118  0007E0  C0FB  F0A5         	movff	cal_diff_hight_to_vol_v@f1+1,___fladd@b+1
 19119  0007E4  C0FC  F0A6         	movff	cal_diff_hight_to_vol_v@f1+2,___fladd@b+2
 19120  0007E8  C0FD  F0A7         	movff	cal_diff_hight_to_vol_v@f1+3,___fladd@b+3
 19121  0007EC  EC40  F009         	call	___fladd	;wreg free
 19122  0007F0  C0A4  F06E         	movff	?___fladd,___flmul@b
 19123  0007F4  C0A5  F06F         	movff	?___fladd+1,___flmul@b+1
 19124  0007F8  C0A6  F070         	movff	?___fladd+2,___flmul@b+2
 19125  0007FC  C0A7  F071         	movff	?___fladd+3,___flmul@b+3
 19126  000800  C0F2  F072         	movff	cal_diff_hight_to_vol_v@v2,___flmul@a
 19127  000804  C0F3  F073         	movff	cal_diff_hight_to_vol_v@v2+1,___flmul@a+1
 19128  000808  C0F4  F074         	movff	cal_diff_hight_to_vol_v@v2+2,___flmul@a+2
 19129  00080C  C0F5  F075         	movff	cal_diff_hight_to_vol_v@v2+3,___flmul@a+3
 19130  000810  EC94  F00B         	call	___flmul	;wreg free
 19131  000814  C06E  F0F2         	movff	?___flmul,cal_diff_hight_to_vol_v@v2
 19132  000818  C06F  F0F3         	movff	?___flmul+1,cal_diff_hight_to_vol_v@v2+1
 19133  00081C  C070  F0F4         	movff	?___flmul+2,cal_diff_hight_to_vol_v@v2+2
 19134  000820  C071  F0F5         	movff	?___flmul+3,cal_diff_hight_to_vol_v@v2+3
 19135                           
 19136                           ;data.c: 441: return (int32_t)(v1+v2);
 19137  000824  C0F2  F0A8         	movff	cal_diff_hight_to_vol_v@v2,___fladd@a
 19138  000828  C0F3  F0A9         	movff	cal_diff_hight_to_vol_v@v2+1,___fladd@a+1
 19139  00082C  C0F4  F0AA         	movff	cal_diff_hight_to_vol_v@v2+2,___fladd@a+2
 19140  000830  C0F5  F0AB         	movff	cal_diff_hight_to_vol_v@v2+3,___fladd@a+3
 19141  000834  C0EE  F0A4         	movff	cal_diff_hight_to_vol_v@v1,___fladd@b
 19142  000838  C0EF  F0A5         	movff	cal_diff_hight_to_vol_v@v1+1,___fladd@b+1
 19143  00083C  C0F0  F0A6         	movff	cal_diff_hight_to_vol_v@v1+2,___fladd@b+2
 19144  000840  C0F1  F0A7         	movff	cal_diff_hight_to_vol_v@v1+3,___fladd@b+3
 19145  000844  EC40  F009         	call	___fladd	;wreg free
 19146  000848  C0A4  F0B8         	movff	?___fladd,___fltol@f1
 19147  00084C  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
 19148  000850  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
 19149  000854  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
 19150  000858  EC32  F028         	call	___fltol	;wreg free
 19151  00085C  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_v
 19152  000860  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_v+1
 19153  000864  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_v+2
 19154  000868  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_v+3
 19155  00086C  0012               	return	
 19156  00086E                     __end_of_cal_diff_hight_to_vol_v:
 19157                           	opt stack 0
 19158                           tosu	equ	0xFFF
 19159                           tosh	equ	0xFFE
 19160                           tosl	equ	0xFFD
 19161                           pclath	equ	0xFFA
 19162                           tblptru	equ	0xFF8
 19163                           tblptrh	equ	0xFF7
 19164                           tblptrl	equ	0xFF6
 19165                           tablat	equ	0xFF5
 19166                           prodh	equ	0xFF4
 19167                           prodl	equ	0xFF3
 19168                           intcon	equ	0xFF2
 19169                           indf0	equ	0xFEF
 19170                           postinc0	equ	0xFEE
 19171                           fsr0h	equ	0xFEA
 19172                           fsr0l	equ	0xFE9
 19173                           wreg	equ	0xFE8
 19174                           postinc1	equ	0xFE6
 19175                           postdec1	equ	0xFE5
 19176                           plusw1	equ	0xFE3
 19177                           fsr1h	equ	0xFE2
 19178                           fsr1l	equ	0xFE1
 19179                           indf2	equ	0xFDF
 19180                           postinc2	equ	0xFDE
 19181                           postdec2	equ	0xFDD
 19182                           plusw2	equ	0xFDB
 19183                           fsr2h	equ	0xFDA
 19184                           fsr2l	equ	0xFD9
 19185                           status	equ	0xFD8
 19186                           
 19187 ;; *************** function _cal_diff_hight_to_vol_h *****************
 19188 ;; Defined at:
 19189 ;;		line 391 in file "src/api/data.c"
 19190 ;; Parameters:    Size  Location     Type
 19191 ;;  h               4  134[BANK0 ] long 
 19192 ;; Auto vars:     Size  Location     Type
 19193 ;;  f1              4  150[BANK0 ] float 
 19194 ;;  v1              4  146[BANK0 ] float 
 19195 ;;  f2              4  142[BANK0 ] float 
 19196 ;;  v2              4  138[BANK0 ] float 
 19197 ;; Return value:  Size  Location     Type
 19198 ;;                  4  134[BANK0 ] long 
 19199 ;; Registers used:
 19200 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19201 ;; Tracked objects:
 19202 ;;		On entry : 0/0
 19203 ;;		On exit  : 0/0
 19204 ;;		Unchanged: 0/0
 19205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19207 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19209 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19210 ;;Total ram usage:       20 bytes
 19211 ;; Hardware stack levels used:    1
 19212 ;; Hardware stack levels required when called:    6
 19213 ;; This function calls:
 19214 ;;		___fladd
 19215 ;;		___fldiv
 19216 ;;		___flge
 19217 ;;		___flmul
 19218 ;;		___fltol
 19219 ;;		___xxtofl
 19220 ;;		_m_interp1_float_fast
 19221 ;; This function is called by:
 19222 ;;		_cal_diff_press
 19223 ;; This function uses a non-reentrant model
 19224 ;;
 19225                           
 19226                           	psect	text93
 19227  002B20                     __ptext93:
 19228                           	opt stack 0
 19229  002B20                     _cal_diff_hight_to_vol_h:
 19230                           	opt stack 21
 19231                           
 19232                           ;data.c: 393: float v1,v2;
 19233                           ;data.c: 394: float f1,f2;
 19234                           ;data.c: 395: f1=(float)h;
 19235                           
 19236                           ;incstack = 0
 19237  002B20  C0E6  F060         	movff	cal_diff_hight_to_vol_h@h,___xxtofl@val
 19238  002B24  C0E7  F061         	movff	cal_diff_hight_to_vol_h@h+1,___xxtofl@val+1
 19239  002B28  C0E8  F062         	movff	cal_diff_hight_to_vol_h@h+2,___xxtofl@val+2
 19240  002B2C  C0E9  F063         	movff	cal_diff_hight_to_vol_h@h+3,___xxtofl@val+3
 19241  002B30  0E01               	movlw	1
 19242  002B32  EC6A  F01D         	call	___xxtofl
 19243  002B36  C060  F0F6         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f1
 19244  002B3A  C061  F0F7         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f1+1
 19245  002B3E  C062  F0F8         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f1+2
 19246  002B42  C063  F0F9         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f1+3
 19247                           
 19248                           ;data.c: 396: f2=(float)(fpSysData->d);
 19249  002B46  0E0C               	movlw	12
 19250  002B48  243C               	addwf	_fpSysData,w,c
 19251  002B4A  6EF6               	movwf	tblptrl,c
 19252  002B4C  0E00               	movlw	0
 19253  002B4E  203D               	addwfc	_fpSysData+1,w,c
 19254  002B50  6EF7               	movwf	tblptrh,c
 19255  002B52  0E00               	movlw	0
 19256  002B54  203E               	addwfc	_fpSysData+2,w,c
 19257  002B56  6EF8               	movwf	tblptru,c
 19258  002B58  0009               	tblrd		*+
 19259  002B5A  CFF5 F060          	movff	tablat,___xxtofl@val
 19260  002B5E  0009               	tblrd		*+
 19261  002B60  CFF5 F061          	movff	tablat,___xxtofl@val+1
 19262  002B64  0009               	tblrd		*+
 19263  002B66  CFF5 F062          	movff	tablat,___xxtofl@val+2
 19264  002B6A  000A               	tblrd		*-
 19265  002B6C  CFF5 F063          	movff	tablat,___xxtofl@val+3
 19266  002B70  0E00               	movlw	0
 19267  002B72  EC6A  F01D         	call	___xxtofl
 19268  002B76  C060  F0EE         	movff	?___xxtofl,cal_diff_hight_to_vol_h@f2
 19269  002B7A  C061  F0EF         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@f2+1
 19270  002B7E  C062  F0F0         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@f2+2
 19271  002B82  C063  F0F1         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@f2+3
 19272                           
 19273                           ;data.c: 397: f1=f1/f2;
 19274  002B86  C0F6  F087         	movff	cal_diff_hight_to_vol_h@f1,___fldiv@b
 19275  002B8A  C0F7  F088         	movff	cal_diff_hight_to_vol_h@f1+1,___fldiv@b+1
 19276  002B8E  C0F8  F089         	movff	cal_diff_hight_to_vol_h@f1+2,___fldiv@b+2
 19277  002B92  C0F9  F08A         	movff	cal_diff_hight_to_vol_h@f1+3,___fldiv@b+3
 19278  002B96  C0EE  F08B         	movff	cal_diff_hight_to_vol_h@f2,___fldiv@a
 19279  002B9A  C0EF  F08C         	movff	cal_diff_hight_to_vol_h@f2+1,___fldiv@a+1
 19280  002B9E  C0F0  F08D         	movff	cal_diff_hight_to_vol_h@f2+2,___fldiv@a+2
 19281  002BA2  C0F1  F08E         	movff	cal_diff_hight_to_vol_h@f2+3,___fldiv@a+3
 19282  002BA6  EC48  F012         	call	___fldiv	;wreg free
 19283  002BAA  C087  F0F6         	movff	?___fldiv,cal_diff_hight_to_vol_h@f1
 19284  002BAE  C088  F0F7         	movff	?___fldiv+1,cal_diff_hight_to_vol_h@f1+1
 19285  002BB2  C089  F0F8         	movff	?___fldiv+2,cal_diff_hight_to_vol_h@f1+2
 19286  002BB6  C08A  F0F9         	movff	?___fldiv+3,cal_diff_hight_to_vol_h@f1+3
 19287                           
 19288                           ;data.c: 398: if(f1>1.0)f1=1.0;
 19289  002BBA  0E00               	movlw	0
 19290  002BBC  0100               	movlb	0	; () banked
 19291  002BBE  6FB8               	movwf	___flge@ff1& (0+255),b
 19292  002BC0  0E00               	movlw	0
 19293  002BC2  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 19294  002BC4  0E80               	movlw	128
 19295  002BC6  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 19296  002BC8  0E3F               	movlw	63
 19297  002BCA  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 19298  002BCC  C0F6  F0BC         	movff	cal_diff_hight_to_vol_h@f1,___flge@ff2
 19299  002BD0  C0F7  F0BD         	movff	cal_diff_hight_to_vol_h@f1+1,___flge@ff2+1
 19300  002BD4  C0F8  F0BE         	movff	cal_diff_hight_to_vol_h@f1+2,___flge@ff2+2
 19301  002BD8  C0F9  F0BF         	movff	cal_diff_hight_to_vol_h@f1+3,___flge@ff2+3
 19302  002BDC  ECB8  F021         	call	___flge	;wreg free
 19303  002BE0  0100               	movlb	0	; () banked
 19304  002BE2  B0D8               	btfsc	status,0,c
 19305  002BE4  D009               	goto	l11732
 19306                           
 19307                           ; BSR set to: 0
 19308  002BE6  0E00               	movlw	0
 19309  002BE8  0100               	movlb	0	; () banked
 19310  002BEA  6FF6               	movwf	cal_diff_hight_to_vol_h@f1& (0+255),b
 19311  002BEC  0E00               	movlw	0
 19312  002BEE  6FF7               	movwf	(cal_diff_hight_to_vol_h@f1+1)& (0+255),b
 19313  002BF0  0E80               	movlw	128
 19314  002BF2  6FF8               	movwf	(cal_diff_hight_to_vol_h@f1+2)& (0+255),b
 19315  002BF4  0E3F               	movlw	63
 19316  002BF6  6FF9               	movwf	(cal_diff_hight_to_vol_h@f1+3)& (0+255),b
 19317  002BF8                     l11732:
 19318                           
 19319                           ; BSR set to: 0
 19320                           ;data.c: 400: f2=f1;
 19321  002BF8  C0F6  F0EE         	movff	cal_diff_hight_to_vol_h@f1,cal_diff_hight_to_vol_h@f2
 19322  002BFC  C0F7  F0EF         	movff	cal_diff_hight_to_vol_h@f1+1,cal_diff_hight_to_vol_h@f2+1
 19323  002C00  C0F8  F0F0         	movff	cal_diff_hight_to_vol_h@f1+2,cal_diff_hight_to_vol_h@f2+2
 19324  002C04  C0F9  F0F1         	movff	cal_diff_hight_to_vol_h@f1+3,cal_diff_hight_to_vol_h@f2+3
 19325                           
 19326                           ; BSR set to: 0
 19327                           ;data.c: 401: f1=m_interp1_float_fast((float*)hKcy,f1,sizeof(hKcy)/sizeof(hKcy[0]));
 19328  002C08  0E79               	movlw	low _hKcy
 19329  002C0A  0100               	movlb	0	; () banked
 19330  002C0C  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 19331  002C0E  0EFD               	movlw	high _hKcy
 19332  002C10  0100               	movlb	0	; () banked
 19333  002C12  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 19334  002C14  C0F6  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 19335  002C18  C0F7  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 19336  002C1C  C0F8  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 19337  002C20  C0F9  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 19338  002C24  0E00               	movlw	0
 19339  002C26  0100               	movlb	0	; () banked
 19340  002C28  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 19341  002C2A  0E65               	movlw	101
 19342  002C2C  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 19343  002C2E  EC34  F010         	call	_m_interp1_float_fast	;wreg free
 19344  002C32  C0C4  F0F6         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 19345  002C36  C0C5  F0F7         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 19346  002C3A  C0C6  F0F8         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 19347  002C3E  C0C7  F0F9         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 19348                           
 19349                           ;data.c: 402: v1=(float)(fpSysData->V1);
 19350  002C42  0E10               	movlw	16
 19351  002C44  243C               	addwf	_fpSysData,w,c
 19352  002C46  6EF6               	movwf	tblptrl,c
 19353  002C48  0E00               	movlw	0
 19354  002C4A  203D               	addwfc	_fpSysData+1,w,c
 19355  002C4C  6EF7               	movwf	tblptrh,c
 19356  002C4E  0E00               	movlw	0
 19357  002C50  203E               	addwfc	_fpSysData+2,w,c
 19358  002C52  6EF8               	movwf	tblptru,c
 19359  002C54  0009               	tblrd		*+
 19360  002C56  CFF5 F060          	movff	tablat,___xxtofl@val
 19361  002C5A  0009               	tblrd		*+
 19362  002C5C  CFF5 F061          	movff	tablat,___xxtofl@val+1
 19363  002C60  0009               	tblrd		*+
 19364  002C62  CFF5 F062          	movff	tablat,___xxtofl@val+2
 19365  002C66  000A               	tblrd		*-
 19366  002C68  CFF5 F063          	movff	tablat,___xxtofl@val+3
 19367  002C6C  0E01               	movlw	1
 19368  002C6E  EC6A  F01D         	call	___xxtofl
 19369  002C72  C060  F0F2         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v1
 19370  002C76  C061  F0F3         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v1+1
 19371  002C7A  C062  F0F4         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v1+2
 19372  002C7E  C063  F0F5         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v1+3
 19373                           
 19374                           ;data.c: 403: v1=v1*f1;
 19375  002C82  C0F2  F06E         	movff	cal_diff_hight_to_vol_h@v1,___flmul@b
 19376  002C86  C0F3  F06F         	movff	cal_diff_hight_to_vol_h@v1+1,___flmul@b+1
 19377  002C8A  C0F4  F070         	movff	cal_diff_hight_to_vol_h@v1+2,___flmul@b+2
 19378  002C8E  C0F5  F071         	movff	cal_diff_hight_to_vol_h@v1+3,___flmul@b+3
 19379  002C92  C0F6  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 19380  002C96  C0F7  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 19381  002C9A  C0F8  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 19382  002C9E  C0F9  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 19383  002CA2  EC94  F00B         	call	___flmul	;wreg free
 19384  002CA6  C06E  F0F2         	movff	?___flmul,cal_diff_hight_to_vol_h@v1
 19385  002CAA  C06F  F0F3         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v1+1
 19386  002CAE  C070  F0F4         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v1+2
 19387  002CB2  C071  F0F5         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v1+3
 19388                           
 19389                           ;data.c: 405: f1=f2;
 19390  002CB6  C0EE  F0F6         	movff	cal_diff_hight_to_vol_h@f2,cal_diff_hight_to_vol_h@f1
 19391  002CBA  C0EF  F0F7         	movff	cal_diff_hight_to_vol_h@f2+1,cal_diff_hight_to_vol_h@f1+1
 19392  002CBE  C0F0  F0F8         	movff	cal_diff_hight_to_vol_h@f2+2,cal_diff_hight_to_vol_h@f1+2
 19393  002CC2  C0F1  F0F9         	movff	cal_diff_hight_to_vol_h@f2+3,cal_diff_hight_to_vol_h@f1+3
 19394                           
 19395                           ;data.c: 406: f1=m_interp1_float_fast(hKel,f1,sizeof(hKel)/sizeof(hKel[0]));
 19396  002CC6  0EE5               	movlw	low _hKel
 19397  002CC8  0100               	movlb	0	; () banked
 19398  002CCA  6FC4               	movwf	m_interp1_float_fast@tab& (0+255),b
 19399  002CCC  0EFB               	movlw	high _hKel
 19400  002CCE  0100               	movlb	0	; () banked
 19401  002CD0  6FC5               	movwf	(m_interp1_float_fast@tab+1)& (0+255),b
 19402  002CD2  C0F6  F0C6         	movff	cal_diff_hight_to_vol_h@f1,m_interp1_float_fast@in
 19403  002CD6  C0F7  F0C7         	movff	cal_diff_hight_to_vol_h@f1+1,m_interp1_float_fast@in+1
 19404  002CDA  C0F8  F0C8         	movff	cal_diff_hight_to_vol_h@f1+2,m_interp1_float_fast@in+2
 19405  002CDE  C0F9  F0C9         	movff	cal_diff_hight_to_vol_h@f1+3,m_interp1_float_fast@in+3
 19406  002CE2  0E00               	movlw	0
 19407  002CE4  0100               	movlb	0	; () banked
 19408  002CE6  6FCB               	movwf	(m_interp1_float_fast@len+1)& (0+255),b
 19409  002CE8  0E65               	movlw	101
 19410  002CEA  6FCA               	movwf	m_interp1_float_fast@len& (0+255),b
 19411  002CEC  EC34  F010         	call	_m_interp1_float_fast	;wreg free
 19412  002CF0  C0C4  F0F6         	movff	?_m_interp1_float_fast,cal_diff_hight_to_vol_h@f1
 19413  002CF4  C0C5  F0F7         	movff	?_m_interp1_float_fast+1,cal_diff_hight_to_vol_h@f1+1
 19414  002CF8  C0C6  F0F8         	movff	?_m_interp1_float_fast+2,cal_diff_hight_to_vol_h@f1+2
 19415  002CFC  C0C7  F0F9         	movff	?_m_interp1_float_fast+3,cal_diff_hight_to_vol_h@f1+3
 19416                           
 19417                           ;data.c: 407: v2=(float)(fpSysData->V2);
 19418  002D00  0E14               	movlw	20
 19419  002D02  243C               	addwf	_fpSysData,w,c
 19420  002D04  6EF6               	movwf	tblptrl,c
 19421  002D06  0E00               	movlw	0
 19422  002D08  203D               	addwfc	_fpSysData+1,w,c
 19423  002D0A  6EF7               	movwf	tblptrh,c
 19424  002D0C  0E00               	movlw	0
 19425  002D0E  203E               	addwfc	_fpSysData+2,w,c
 19426  002D10  6EF8               	movwf	tblptru,c
 19427  002D12  0009               	tblrd		*+
 19428  002D14  CFF5 F060          	movff	tablat,___xxtofl@val
 19429  002D18  0009               	tblrd		*+
 19430  002D1A  CFF5 F061          	movff	tablat,___xxtofl@val+1
 19431  002D1E  0009               	tblrd		*+
 19432  002D20  CFF5 F062          	movff	tablat,___xxtofl@val+2
 19433  002D24  000A               	tblrd		*-
 19434  002D26  CFF5 F063          	movff	tablat,___xxtofl@val+3
 19435  002D2A  0E01               	movlw	1
 19436  002D2C  EC6A  F01D         	call	___xxtofl
 19437  002D30  C060  F0EA         	movff	?___xxtofl,cal_diff_hight_to_vol_h@v2
 19438  002D34  C061  F0EB         	movff	?___xxtofl+1,cal_diff_hight_to_vol_h@v2+1
 19439  002D38  C062  F0EC         	movff	?___xxtofl+2,cal_diff_hight_to_vol_h@v2+2
 19440  002D3C  C063  F0ED         	movff	?___xxtofl+3,cal_diff_hight_to_vol_h@v2+3
 19441                           
 19442                           ;data.c: 408: v2=v2*f1;
 19443  002D40  C0EA  F06E         	movff	cal_diff_hight_to_vol_h@v2,___flmul@b
 19444  002D44  C0EB  F06F         	movff	cal_diff_hight_to_vol_h@v2+1,___flmul@b+1
 19445  002D48  C0EC  F070         	movff	cal_diff_hight_to_vol_h@v2+2,___flmul@b+2
 19446  002D4C  C0ED  F071         	movff	cal_diff_hight_to_vol_h@v2+3,___flmul@b+3
 19447  002D50  C0F6  F072         	movff	cal_diff_hight_to_vol_h@f1,___flmul@a
 19448  002D54  C0F7  F073         	movff	cal_diff_hight_to_vol_h@f1+1,___flmul@a+1
 19449  002D58  C0F8  F074         	movff	cal_diff_hight_to_vol_h@f1+2,___flmul@a+2
 19450  002D5C  C0F9  F075         	movff	cal_diff_hight_to_vol_h@f1+3,___flmul@a+3
 19451  002D60  EC94  F00B         	call	___flmul	;wreg free
 19452  002D64  C06E  F0EA         	movff	?___flmul,cal_diff_hight_to_vol_h@v2
 19453  002D68  C06F  F0EB         	movff	?___flmul+1,cal_diff_hight_to_vol_h@v2+1
 19454  002D6C  C070  F0EC         	movff	?___flmul+2,cal_diff_hight_to_vol_h@v2+2
 19455  002D70  C071  F0ED         	movff	?___flmul+3,cal_diff_hight_to_vol_h@v2+3
 19456                           
 19457                           ;data.c: 410: v1=v1+v2;
 19458  002D74  C0F2  F0A4         	movff	cal_diff_hight_to_vol_h@v1,___fladd@b
 19459  002D78  C0F3  F0A5         	movff	cal_diff_hight_to_vol_h@v1+1,___fladd@b+1
 19460  002D7C  C0F4  F0A6         	movff	cal_diff_hight_to_vol_h@v1+2,___fladd@b+2
 19461  002D80  C0F5  F0A7         	movff	cal_diff_hight_to_vol_h@v1+3,___fladd@b+3
 19462  002D84  C0EA  F0A8         	movff	cal_diff_hight_to_vol_h@v2,___fladd@a
 19463  002D88  C0EB  F0A9         	movff	cal_diff_hight_to_vol_h@v2+1,___fladd@a+1
 19464  002D8C  C0EC  F0AA         	movff	cal_diff_hight_to_vol_h@v2+2,___fladd@a+2
 19465  002D90  C0ED  F0AB         	movff	cal_diff_hight_to_vol_h@v2+3,___fladd@a+3
 19466  002D94  EC40  F009         	call	___fladd	;wreg free
 19467  002D98  C0A4  F0F2         	movff	?___fladd,cal_diff_hight_to_vol_h@v1
 19468  002D9C  C0A5  F0F3         	movff	?___fladd+1,cal_diff_hight_to_vol_h@v1+1
 19469  002DA0  C0A6  F0F4         	movff	?___fladd+2,cal_diff_hight_to_vol_h@v1+2
 19470  002DA4  C0A7  F0F5         	movff	?___fladd+3,cal_diff_hight_to_vol_h@v1+3
 19471                           
 19472                           ;data.c: 411: return (int32_t)v1;
 19473  002DA8  C0F2  F0B8         	movff	cal_diff_hight_to_vol_h@v1,___fltol@f1
 19474  002DAC  C0F3  F0B9         	movff	cal_diff_hight_to_vol_h@v1+1,___fltol@f1+1
 19475  002DB0  C0F4  F0BA         	movff	cal_diff_hight_to_vol_h@v1+2,___fltol@f1+2
 19476  002DB4  C0F5  F0BB         	movff	cal_diff_hight_to_vol_h@v1+3,___fltol@f1+3
 19477  002DB8  EC32  F028         	call	___fltol	;wreg free
 19478  002DBC  C0B8  F0E6         	movff	?___fltol,?_cal_diff_hight_to_vol_h
 19479  002DC0  C0B9  F0E7         	movff	?___fltol+1,?_cal_diff_hight_to_vol_h+1
 19480  002DC4  C0BA  F0E8         	movff	?___fltol+2,?_cal_diff_hight_to_vol_h+2
 19481  002DC8  C0BB  F0E9         	movff	?___fltol+3,?_cal_diff_hight_to_vol_h+3
 19482  002DCC  0012               	return	
 19483  002DCE                     __end_of_cal_diff_hight_to_vol_h:
 19484                           	opt stack 0
 19485                           tosu	equ	0xFFF
 19486                           tosh	equ	0xFFE
 19487                           tosl	equ	0xFFD
 19488                           pclath	equ	0xFFA
 19489                           tblptru	equ	0xFF8
 19490                           tblptrh	equ	0xFF7
 19491                           tblptrl	equ	0xFF6
 19492                           tablat	equ	0xFF5
 19493                           prodh	equ	0xFF4
 19494                           prodl	equ	0xFF3
 19495                           intcon	equ	0xFF2
 19496                           indf0	equ	0xFEF
 19497                           postinc0	equ	0xFEE
 19498                           fsr0h	equ	0xFEA
 19499                           fsr0l	equ	0xFE9
 19500                           wreg	equ	0xFE8
 19501                           postinc1	equ	0xFE6
 19502                           postdec1	equ	0xFE5
 19503                           plusw1	equ	0xFE3
 19504                           fsr1h	equ	0xFE2
 19505                           fsr1l	equ	0xFE1
 19506                           indf2	equ	0xFDF
 19507                           postinc2	equ	0xFDE
 19508                           postdec2	equ	0xFDD
 19509                           plusw2	equ	0xFDB
 19510                           fsr2h	equ	0xFDA
 19511                           fsr2l	equ	0xFD9
 19512                           status	equ	0xFD8
 19513                           
 19514 ;; *************** function _m_interp1_float_fast *****************
 19515 ;; Defined at:
 19516 ;;		line 362 in file "src/api/data.c"
 19517 ;; Parameters:    Size  Location     Type
 19518 ;;  tab             2  100[BANK0 ] PTR float 
 19519 ;;		 -> hKel(404), hKcy(404), 
 19520 ;;  in              4  102[BANK0 ] float 
 19521 ;;  len             2  106[BANK0 ] int 
 19522 ;; Auto vars:     Size  Location     Type
 19523 ;;  f               4  128[BANK0 ] float 
 19524 ;;  y               4  120[BANK0 ] float 
 19525 ;;  x               4  116[BANK0 ] float 
 19526 ;;  i               2  132[BANK0 ] unsigned int 
 19527 ;; Return value:  Size  Location     Type
 19528 ;;                  4  100[BANK0 ] float 
 19529 ;; Registers used:
 19530 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19531 ;; Tracked objects:
 19532 ;;		On entry : 0/0
 19533 ;;		On exit  : 0/0
 19534 ;;		Unchanged: 0/0
 19535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19536 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19537 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19538 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19539 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19540 ;;Total ram usage:       34 bytes
 19541 ;; Hardware stack levels used:    1
 19542 ;; Hardware stack levels required when called:    5
 19543 ;; This function calls:
 19544 ;;		___fladd
 19545 ;;		___fldiv
 19546 ;;		___flge
 19547 ;;		___flmul
 19548 ;;		___flneg
 19549 ;;		___xxtofl
 19550 ;; This function is called by:
 19551 ;;		_cal_diff_hight_to_vol_h
 19552 ;;		_cal_diff_hight_to_vol_v
 19553 ;; This function uses a non-reentrant model
 19554 ;;
 19555                           
 19556                           	psect	text94
 19557  002068                     __ptext94:
 19558                           	opt stack 0
 19559  002068                     _m_interp1_float_fast:
 19560                           	opt stack 21
 19561                           
 19562                           ;data.c: 364: uint16_t i;
 19563                           ;data.c: 365: float f,x,y;
 19564                           ;data.c: 366: for(i=0;i<len-1;i++){
 19565                           
 19566                           ;incstack = 0
 19567  002068  0E00               	movlw	0
 19568  00206A  0100               	movlb	0	; () banked
 19569  00206C  6FE5               	movwf	(m_interp1_float_fast@i+1)& (0+255),b
 19570  00206E  0E00               	movlw	0
 19571  002070  6FE4               	movwf	m_interp1_float_fast@i& (0+255),b
 19572  002072  D0D0               	goto	l11362
 19573  002074                     l11350:
 19574                           
 19575                           ; BSR set to: 0
 19576                           ;data.c: 367: if(tab[i]<tab[i+1]){
 19577  002074  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 19578  002078  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 19579  00207C  0100               	movlb	0	; () banked
 19580  00207E  90D8               	bcf	status,0,c
 19581  002080  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19582  002082  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19583  002084  0100               	movlb	0	; () banked
 19584  002086  90D8               	bcf	status,0,c
 19585  002088  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19586  00208A  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19587  00208C  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 19588  002090  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 19589  002094  0100               	movlb	0	; () banked
 19590  002096  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 19591  002098  0100               	movlb	0	; () banked
 19592  00209A  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 19593  00209C  0100               	movlb	0	; () banked
 19594  00209E  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 19595  0020A0  0100               	movlb	0	; () banked
 19596  0020A2  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 19597  0020A4  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 19598  0020A8  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 19599  0020AC                     	if	0	;tblptru may be non-zero
 19600  0020AC                     	endif
 19601  0020AC                     	if	0	;tblptru may be non-zero
 19602  0020AC                     	endif
 19603  0020AC  0009               	tblrd		*+
 19604  0020AE  CFF5 F0B8          	movff	tablat,___flge@ff1
 19605  0020B2  0009               	tblrd		*+
 19606  0020B4  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 19607  0020B8  0009               	tblrd		*+
 19608  0020BA  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 19609  0020BE  000A               	tblrd		*-
 19610  0020C0  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 19611  0020C4  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 19612  0020C8  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 19613  0020CC  0100               	movlb	0	; () banked
 19614  0020CE  90D8               	bcf	status,0,c
 19615  0020D0  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 19616  0020D2  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 19617  0020D4  0100               	movlb	0	; () banked
 19618  0020D6  90D8               	bcf	status,0,c
 19619  0020D8  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 19620  0020DA  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 19621  0020DC  0E04               	movlw	4
 19622  0020DE  0100               	movlb	0	; () banked
 19623  0020E0  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 19624  0020E2  0E00               	movlw	0
 19625  0020E4  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 19626  0020E6  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 19627  0020EA  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 19628  0020EE  0100               	movlb	0	; () banked
 19629  0020F0  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 19630  0020F2  0100               	movlb	0	; () banked
 19631  0020F4  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 19632  0020F6  0100               	movlb	0	; () banked
 19633  0020F8  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 19634  0020FA  0100               	movlb	0	; () banked
 19635  0020FC  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 19636  0020FE  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 19637  002102  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 19638  002106                     	if	0	;tblptru may be non-zero
 19639  002106                     	endif
 19640  002106                     	if	0	;tblptru may be non-zero
 19641  002106                     	endif
 19642  002106  0009               	tblrd		*+
 19643  002108  CFF5 F0BC          	movff	tablat,___flge@ff2
 19644  00210C  0009               	tblrd		*+
 19645  00210E  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 19646  002112  0009               	tblrd		*+
 19647  002114  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 19648  002118  000A               	tblrd		*-
 19649  00211A  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 19650  00211E  ECB8  F021         	call	___flge	;wreg free
 19651  002122  0100               	movlb	0	; () banked
 19652  002124  B0D8               	btfsc	status,0,c
 19653  002126  D03B               	goto	l11356
 19654                           
 19655                           ; BSR set to: 0
 19656                           ;data.c: 368: if(in<=tab[i+1])break;
 19657  002128  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 19658  00212C  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 19659  002130  0100               	movlb	0	; () banked
 19660  002132  90D8               	bcf	status,0,c
 19661  002134  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19662  002136  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19663  002138  0100               	movlb	0	; () banked
 19664  00213A  90D8               	bcf	status,0,c
 19665  00213C  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19666  00213E  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19667  002140  0E04               	movlw	4
 19668  002142  0100               	movlb	0	; () banked
 19669  002144  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 19670  002146  0E00               	movlw	0
 19671  002148  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 19672  00214A  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 19673  00214E  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 19674  002152  0100               	movlb	0	; () banked
 19675  002154  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 19676  002156  0100               	movlb	0	; () banked
 19677  002158  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 19678  00215A  0100               	movlb	0	; () banked
 19679  00215C  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 19680  00215E  0100               	movlb	0	; () banked
 19681  002160  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 19682  002162  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 19683  002166  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 19684  00216A                     	if	0	;tblptru may be non-zero
 19685  00216A                     	endif
 19686  00216A                     	if	0	;tblptru may be non-zero
 19687  00216A                     	endif
 19688  00216A  0009               	tblrd		*+
 19689  00216C  CFF5 F0B8          	movff	tablat,___flge@ff1
 19690  002170  0009               	tblrd		*+
 19691  002172  CFF5 F0B9          	movff	tablat,___flge@ff1+1
 19692  002176  0009               	tblrd		*+
 19693  002178  CFF5 F0BA          	movff	tablat,___flge@ff1+2
 19694  00217C  000A               	tblrd		*-
 19695  00217E  CFF5 F0BB          	movff	tablat,___flge@ff1+3
 19696  002182  C0C6  F0BC         	movff	m_interp1_float_fast@in,___flge@ff2
 19697  002186  C0C7  F0BD         	movff	m_interp1_float_fast@in+1,___flge@ff2+1
 19698  00218A  C0C8  F0BE         	movff	m_interp1_float_fast@in+2,___flge@ff2+2
 19699  00218E  C0C9  F0BF         	movff	m_interp1_float_fast@in+3,___flge@ff2+3
 19700  002192  ECB8  F021         	call	___flge	;wreg free
 19701  002196  0100               	movlb	0	; () banked
 19702  002198  B0D8               	btfsc	status,0,c
 19703  00219A  D058               	goto	l11364
 19704  00219C  D038               	goto	l11360
 19705  00219E                     l11356:
 19706                           
 19707                           ; BSR set to: 0
 19708                           ;data.c: 370: if(in>=tab[i+1])break;
 19709  00219E  C0C6  F0B8         	movff	m_interp1_float_fast@in,___flge@ff1
 19710  0021A2  C0C7  F0B9         	movff	m_interp1_float_fast@in+1,___flge@ff1+1
 19711  0021A6  C0C8  F0BA         	movff	m_interp1_float_fast@in+2,___flge@ff1+2
 19712  0021AA  C0C9  F0BB         	movff	m_interp1_float_fast@in+3,___flge@ff1+3
 19713  0021AE  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 19714  0021B2  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 19715  0021B6  0100               	movlb	0	; () banked
 19716  0021B8  90D8               	bcf	status,0,c
 19717  0021BA  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19718  0021BC  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19719  0021BE  0100               	movlb	0	; () banked
 19720  0021C0  90D8               	bcf	status,0,c
 19721  0021C2  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19722  0021C4  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19723  0021C6  0E04               	movlw	4
 19724  0021C8  0100               	movlb	0	; () banked
 19725  0021CA  27CC               	addwf	??_m_interp1_float_fast& (0+255),f,b
 19726  0021CC  0E00               	movlw	0
 19727  0021CE  23CD               	addwfc	(??_m_interp1_float_fast+1)& (0+255),f,b
 19728  0021D0  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 19729  0021D4  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 19730  0021D8  0100               	movlb	0	; () banked
 19731  0021DA  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 19732  0021DC  0100               	movlb	0	; () banked
 19733  0021DE  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 19734  0021E0  0100               	movlb	0	; () banked
 19735  0021E2  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 19736  0021E4  0100               	movlb	0	; () banked
 19737  0021E6  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 19738  0021E8  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 19739  0021EC  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 19740  0021F0                     	if	0	;tblptru may be non-zero
 19741  0021F0                     	endif
 19742  0021F0                     	if	0	;tblptru may be non-zero
 19743  0021F0                     	endif
 19744  0021F0  0009               	tblrd		*+
 19745  0021F2  CFF5 F0BC          	movff	tablat,___flge@ff2
 19746  0021F6  0009               	tblrd		*+
 19747  0021F8  CFF5 F0BD          	movff	tablat,___flge@ff2+1
 19748  0021FC  0009               	tblrd		*+
 19749  0021FE  CFF5 F0BE          	movff	tablat,___flge@ff2+2
 19750  002202  000A               	tblrd		*-
 19751  002204  CFF5 F0BF          	movff	tablat,___flge@ff2+3
 19752  002208  ECB8  F021         	call	___flge	;wreg free
 19753  00220C  D7C4               	goto	L8
 19754  00220E                     l11360:
 19755                           
 19756                           ; BSR set to: 0
 19757  00220E  0100               	movlb	0	; () banked
 19758  002210  4BE4               	infsnz	m_interp1_float_fast@i& (0+255),f,b
 19759  002212  2BE5               	incf	(m_interp1_float_fast@i+1)& (0+255),f,b
 19760  002214                     l11362:
 19761                           
 19762                           ; BSR set to: 0
 19763  002214  0EFF               	movlw	255
 19764  002216  0100               	movlb	0	; () banked
 19765  002218  6FCC               	movwf	??_m_interp1_float_fast& (0+255),b
 19766  00221A  0EFF               	movlw	255
 19767  00221C  0100               	movlb	0	; () banked
 19768  00221E  6FCD               	movwf	(??_m_interp1_float_fast+1)& (0+255),b
 19769  002220  C0CA  F0CE         	movff	m_interp1_float_fast@len,??_m_interp1_float_fast+2
 19770  002224  C0CB  F0CF         	movff	m_interp1_float_fast@len+1,??_m_interp1_float_fast+3
 19771  002228  0100               	movlb	0	; () banked
 19772  00222A  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 19773  00222C  0100               	movlb	0	; () banked
 19774  00222E  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 19775  002230  0100               	movlb	0	; () banked
 19776  002232  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 19777  002234  0100               	movlb	0	; () banked
 19778  002236  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 19779  002238  0100               	movlb	0	; () banked
 19780  00223A  51CE               	movf	(??_m_interp1_float_fast+2)& (0+255),w,b
 19781  00223C  0100               	movlb	0	; () banked
 19782  00223E  5DE4               	subwf	m_interp1_float_fast@i& (0+255),w,b
 19783  002240  0100               	movlb	0	; () banked
 19784  002242  51CF               	movf	(??_m_interp1_float_fast+3)& (0+255),w,b
 19785  002244  0100               	movlb	0	; () banked
 19786  002246  59E5               	subwfb	(m_interp1_float_fast@i+1)& (0+255),w,b
 19787  002248  A0D8               	btfss	status,0,c
 19788  00224A  D714               	goto	l11350
 19789  00224C                     l11364:
 19790                           
 19791                           ; BSR set to: 0
 19792                           ;data.c: 371: }
 19793                           ;data.c: 372: }
 19794                           ;data.c: 373: f=tab[i];
 19795  00224C  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 19796  002250  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 19797  002254  0100               	movlb	0	; () banked
 19798  002256  90D8               	bcf	status,0,c
 19799  002258  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19800  00225A  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19801  00225C  0100               	movlb	0	; () banked
 19802  00225E  90D8               	bcf	status,0,c
 19803  002260  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19804  002262  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19805  002264  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 19806  002268  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 19807  00226C  0100               	movlb	0	; () banked
 19808  00226E  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 19809  002270  0100               	movlb	0	; () banked
 19810  002272  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 19811  002274  0100               	movlb	0	; () banked
 19812  002276  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 19813  002278  0100               	movlb	0	; () banked
 19814  00227A  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 19815  00227C  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 19816  002280  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 19817  002284                     	if	0	;tblptru may be non-zero
 19818  002284                     	endif
 19819  002284                     	if	0	;tblptru may be non-zero
 19820  002284                     	endif
 19821  002284  0009               	tblrd		*+
 19822  002286  CFF5 F0E0          	movff	tablat,m_interp1_float_fast@f
 19823  00228A  0009               	tblrd		*+
 19824  00228C  CFF5 F0E1          	movff	tablat,m_interp1_float_fast@f+1
 19825  002290  0009               	tblrd		*+
 19826  002292  CFF5 F0E2          	movff	tablat,m_interp1_float_fast@f+2
 19827  002296  000A               	tblrd		*-
 19828  002298  CFF5 F0E3          	movff	tablat,m_interp1_float_fast@f+3
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;data.c: 374: x=0.01f;
 19832  00229C  0E0A               	movlw	10
 19833  00229E  0100               	movlb	0	; () banked
 19834  0022A0  6FD4               	movwf	m_interp1_float_fast@x& (0+255),b
 19835  0022A2  0ED7               	movlw	215
 19836  0022A4  6FD5               	movwf	(m_interp1_float_fast@x+1)& (0+255),b
 19837  0022A6  0E23               	movlw	35
 19838  0022A8  6FD6               	movwf	(m_interp1_float_fast@x+2)& (0+255),b
 19839  0022AA  0E3C               	movlw	60
 19840  0022AC  6FD7               	movwf	(m_interp1_float_fast@x+3)& (0+255),b
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;data.c: 375: y=tab[i+1]-tab[i];
 19844  0022AE  C0E4  F0CC         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast
 19845  0022B2  C0E5  F0CD         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+1
 19846  0022B6  0100               	movlb	0	; () banked
 19847  0022B8  90D8               	bcf	status,0,c
 19848  0022BA  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19849  0022BC  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19850  0022BE  0100               	movlb	0	; () banked
 19851  0022C0  90D8               	bcf	status,0,c
 19852  0022C2  37CC               	rlcf	??_m_interp1_float_fast& (0+255),f,b
 19853  0022C4  37CD               	rlcf	(??_m_interp1_float_fast+1)& (0+255),f,b
 19854  0022C6  C0C4  F0CE         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+2
 19855  0022CA  C0C5  F0CF         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+3
 19856  0022CE  0100               	movlb	0	; () banked
 19857  0022D0  51CC               	movf	??_m_interp1_float_fast& (0+255),w,b
 19858  0022D2  0100               	movlb	0	; () banked
 19859  0022D4  27CE               	addwf	(??_m_interp1_float_fast+2)& (0+255),f,b
 19860  0022D6  0100               	movlb	0	; () banked
 19861  0022D8  51CD               	movf	(??_m_interp1_float_fast+1)& (0+255),w,b
 19862  0022DA  0100               	movlb	0	; () banked
 19863  0022DC  23CF               	addwfc	(??_m_interp1_float_fast+3)& (0+255),f,b
 19864  0022DE  C0CE  FFF6         	movff	??_m_interp1_float_fast+2,tblptrl
 19865  0022E2  C0CF  FFF7         	movff	??_m_interp1_float_fast+3,tblptrh
 19866  0022E6                     	if	0	;tblptru may be non-zero
 19867  0022E6                     	endif
 19868  0022E6                     	if	0	;tblptru may be non-zero
 19869  0022E6                     	endif
 19870  0022E6  0009               	tblrd		*+
 19871  0022E8  CFF5 F0A0          	movff	tablat,___flneg@f1
 19872  0022EC  0009               	tblrd		*+
 19873  0022EE  CFF5 F0A1          	movff	tablat,___flneg@f1+1
 19874  0022F2  0009               	tblrd		*+
 19875  0022F4  CFF5 F0A2          	movff	tablat,___flneg@f1+2
 19876  0022F8  000A               	tblrd		*-
 19877  0022FA  CFF5 F0A3          	movff	tablat,___flneg@f1+3
 19878  0022FE  EC2F  F03A         	call	___flneg	;wreg free
 19879  002302  C0A0  F0A4         	movff	?___flneg,___fladd@b
 19880  002306  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 19881  00230A  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 19882  00230E  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 19883  002312  C0E4  F0D0         	movff	m_interp1_float_fast@i,??_m_interp1_float_fast+4
 19884  002316  C0E5  F0D1         	movff	m_interp1_float_fast@i+1,??_m_interp1_float_fast+5
 19885  00231A  0100               	movlb	0	; () banked
 19886  00231C  90D8               	bcf	status,0,c
 19887  00231E  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 19888  002320  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 19889  002322  0100               	movlb	0	; () banked
 19890  002324  90D8               	bcf	status,0,c
 19891  002326  37D0               	rlcf	(??_m_interp1_float_fast+4)& (0+255),f,b
 19892  002328  37D1               	rlcf	(??_m_interp1_float_fast+5)& (0+255),f,b
 19893  00232A  0E04               	movlw	4
 19894  00232C  0100               	movlb	0	; () banked
 19895  00232E  27D0               	addwf	(??_m_interp1_float_fast+4)& (0+255),f,b
 19896  002330  0E00               	movlw	0
 19897  002332  23D1               	addwfc	(??_m_interp1_float_fast+5)& (0+255),f,b
 19898  002334  C0C4  F0D2         	movff	m_interp1_float_fast@tab,??_m_interp1_float_fast+6
 19899  002338  C0C5  F0D3         	movff	m_interp1_float_fast@tab+1,??_m_interp1_float_fast+7
 19900  00233C  0100               	movlb	0	; () banked
 19901  00233E  51D0               	movf	(??_m_interp1_float_fast+4)& (0+255),w,b
 19902  002340  0100               	movlb	0	; () banked
 19903  002342  27D2               	addwf	(??_m_interp1_float_fast+6)& (0+255),f,b
 19904  002344  0100               	movlb	0	; () banked
 19905  002346  51D1               	movf	(??_m_interp1_float_fast+5)& (0+255),w,b
 19906  002348  0100               	movlb	0	; () banked
 19907  00234A  23D3               	addwfc	(??_m_interp1_float_fast+7)& (0+255),f,b
 19908  00234C  C0D2  FFF6         	movff	??_m_interp1_float_fast+6,tblptrl
 19909  002350  C0D3  FFF7         	movff	??_m_interp1_float_fast+7,tblptrh
 19910  002354                     	if	0	;tblptru may be non-zero
 19911  002354                     	endif
 19912  002354                     	if	0	;tblptru may be non-zero
 19913  002354                     	endif
 19914  002354  0009               	tblrd		*+
 19915  002356  CFF5 F0A8          	movff	tablat,___fladd@a
 19916  00235A  0009               	tblrd		*+
 19917  00235C  CFF5 F0A9          	movff	tablat,___fladd@a+1
 19918  002360  0009               	tblrd		*+
 19919  002362  CFF5 F0AA          	movff	tablat,___fladd@a+2
 19920  002366  000A               	tblrd		*-
 19921  002368  CFF5 F0AB          	movff	tablat,___fladd@a+3
 19922  00236C  EC40  F009         	call	___fladd	;wreg free
 19923  002370  C0A4  F0D8         	movff	?___fladd,m_interp1_float_fast@y
 19924  002374  C0A5  F0D9         	movff	?___fladd+1,m_interp1_float_fast@y+1
 19925  002378  C0A6  F0DA         	movff	?___fladd+2,m_interp1_float_fast@y+2
 19926  00237C  C0A7  F0DB         	movff	?___fladd+3,m_interp1_float_fast@y+3
 19927                           
 19928                           ;data.c: 376: f=f+(in-0.01*i)*(y/x);
 19929  002380  C0C6  F0A8         	movff	m_interp1_float_fast@in,___fladd@a
 19930  002384  C0C7  F0A9         	movff	m_interp1_float_fast@in+1,___fladd@a+1
 19931  002388  C0C8  F0AA         	movff	m_interp1_float_fast@in+2,___fladd@a+2
 19932  00238C  C0C9  F0AB         	movff	m_interp1_float_fast@in+3,___fladd@a+3
 19933  002390  0E0A               	movlw	10
 19934  002392  0100               	movlb	0	; () banked
 19935  002394  6F72               	movwf	___flmul@a& (0+255),b
 19936  002396  0ED7               	movlw	215
 19937  002398  6F73               	movwf	(___flmul@a+1)& (0+255),b
 19938  00239A  0E23               	movlw	35
 19939  00239C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 19940  00239E  0E3C               	movlw	60
 19941  0023A0  6F75               	movwf	(___flmul@a+3)& (0+255),b
 19942  0023A2  C0E4  F060         	movff	m_interp1_float_fast@i,___xxtofl@val
 19943  0023A6  C0E5  F061         	movff	m_interp1_float_fast@i+1,___xxtofl@val+1
 19944  0023AA  0100               	movlb	0	; () banked
 19945  0023AC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 19946  0023AE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 19947  0023B0  0E00               	movlw	0
 19948  0023B2  EC6A  F01D         	call	___xxtofl
 19949  0023B6  C060  F06E         	movff	?___xxtofl,___flmul@b
 19950  0023BA  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
 19951  0023BE  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
 19952  0023C2  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
 19953  0023C6  EC94  F00B         	call	___flmul	;wreg free
 19954  0023CA  C06E  F0A0         	movff	?___flmul,___flneg@f1
 19955  0023CE  C06F  F0A1         	movff	?___flmul+1,___flneg@f1+1
 19956  0023D2  C070  F0A2         	movff	?___flmul+2,___flneg@f1+2
 19957  0023D6  C071  F0A3         	movff	?___flmul+3,___flneg@f1+3
 19958  0023DA  EC2F  F03A         	call	___flneg	;wreg free
 19959  0023DE  C0A0  F0A4         	movff	?___flneg,___fladd@b
 19960  0023E2  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 19961  0023E6  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 19962  0023EA  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 19963  0023EE  EC40  F009         	call	___fladd	;wreg free
 19964  0023F2  C0A4  F0DC         	movff	?___fladd,_m_interp1_float_fast$4326
 19965  0023F6  C0A5  F0DD         	movff	?___fladd+1,_m_interp1_float_fast$4326+1
 19966  0023FA  C0A6  F0DE         	movff	?___fladd+2,_m_interp1_float_fast$4326+2
 19967  0023FE  C0A7  F0DF         	movff	?___fladd+3,_m_interp1_float_fast$4326+3
 19968                           
 19969                           ;data.c: 376: f=f+(in-0.01*i)*(y/x);
 19970  002402  C0D4  F08B         	movff	m_interp1_float_fast@x,___fldiv@a
 19971  002406  C0D5  F08C         	movff	m_interp1_float_fast@x+1,___fldiv@a+1
 19972  00240A  C0D6  F08D         	movff	m_interp1_float_fast@x+2,___fldiv@a+2
 19973  00240E  C0D7  F08E         	movff	m_interp1_float_fast@x+3,___fldiv@a+3
 19974  002412  C0D8  F087         	movff	m_interp1_float_fast@y,___fldiv@b
 19975  002416  C0D9  F088         	movff	m_interp1_float_fast@y+1,___fldiv@b+1
 19976  00241A  C0DA  F089         	movff	m_interp1_float_fast@y+2,___fldiv@b+2
 19977  00241E  C0DB  F08A         	movff	m_interp1_float_fast@y+3,___fldiv@b+3
 19978  002422  EC48  F012         	call	___fldiv	;wreg free
 19979  002426  C087  F072         	movff	?___fldiv,___flmul@a
 19980  00242A  C088  F073         	movff	?___fldiv+1,___flmul@a+1
 19981  00242E  C089  F074         	movff	?___fldiv+2,___flmul@a+2
 19982  002432  C08A  F075         	movff	?___fldiv+3,___flmul@a+3
 19983  002436  C0DC  F06E         	movff	_m_interp1_float_fast$4326,___flmul@b
 19984  00243A  C0DD  F06F         	movff	_m_interp1_float_fast$4326+1,___flmul@b+1
 19985  00243E  C0DE  F070         	movff	_m_interp1_float_fast$4326+2,___flmul@b+2
 19986  002442  C0DF  F071         	movff	_m_interp1_float_fast$4326+3,___flmul@b+3
 19987  002446  EC94  F00B         	call	___flmul	;wreg free
 19988  00244A  C06E  F0A4         	movff	?___flmul,___fladd@b
 19989  00244E  C06F  F0A5         	movff	?___flmul+1,___fladd@b+1
 19990  002452  C070  F0A6         	movff	?___flmul+2,___fladd@b+2
 19991  002456  C071  F0A7         	movff	?___flmul+3,___fladd@b+3
 19992  00245A  C0E0  F0A8         	movff	m_interp1_float_fast@f,___fladd@a
 19993  00245E  C0E1  F0A9         	movff	m_interp1_float_fast@f+1,___fladd@a+1
 19994  002462  C0E2  F0AA         	movff	m_interp1_float_fast@f+2,___fladd@a+2
 19995  002466  C0E3  F0AB         	movff	m_interp1_float_fast@f+3,___fladd@a+3
 19996  00246A  EC40  F009         	call	___fladd	;wreg free
 19997  00246E  C0A4  F0E0         	movff	?___fladd,m_interp1_float_fast@f
 19998  002472  C0A5  F0E1         	movff	?___fladd+1,m_interp1_float_fast@f+1
 19999  002476  C0A6  F0E2         	movff	?___fladd+2,m_interp1_float_fast@f+2
 20000  00247A  C0A7  F0E3         	movff	?___fladd+3,m_interp1_float_fast@f+3
 20001                           
 20002                           ;data.c: 377: return f;
 20003  00247E  C0E0  F0C4         	movff	m_interp1_float_fast@f,?_m_interp1_float_fast
 20004  002482  C0E1  F0C5         	movff	m_interp1_float_fast@f+1,?_m_interp1_float_fast+1
 20005  002486  C0E2  F0C6         	movff	m_interp1_float_fast@f+2,?_m_interp1_float_fast+2
 20006  00248A  C0E3  F0C7         	movff	m_interp1_float_fast@f+3,?_m_interp1_float_fast+3
 20007  00248E  0012               	return	
 20008  002490                     __end_of_m_interp1_float_fast:
 20009                           	opt stack 0
 20010                           tosu	equ	0xFFF
 20011                           tosh	equ	0xFFE
 20012                           tosl	equ	0xFFD
 20013                           pclath	equ	0xFFA
 20014                           tblptru	equ	0xFF8
 20015                           tblptrh	equ	0xFF7
 20016                           tblptrl	equ	0xFF6
 20017                           tablat	equ	0xFF5
 20018                           prodh	equ	0xFF4
 20019                           prodl	equ	0xFF3
 20020                           intcon	equ	0xFF2
 20021                           indf0	equ	0xFEF
 20022                           postinc0	equ	0xFEE
 20023                           fsr0h	equ	0xFEA
 20024                           fsr0l	equ	0xFE9
 20025                           wreg	equ	0xFE8
 20026                           postinc1	equ	0xFE6
 20027                           postdec1	equ	0xFE5
 20028                           plusw1	equ	0xFE3
 20029                           fsr1h	equ	0xFE2
 20030                           fsr1l	equ	0xFE1
 20031                           indf2	equ	0xFDF
 20032                           postinc2	equ	0xFDE
 20033                           postdec2	equ	0xFDD
 20034                           plusw2	equ	0xFDB
 20035                           fsr2h	equ	0xFDA
 20036                           fsr2l	equ	0xFD9
 20037                           status	equ	0xFD8
 20038                           
 20039 ;; *************** function ___flge *****************
 20040 ;; Defined at:
 20041 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flge.c"
 20042 ;; Parameters:    Size  Location     Type
 20043 ;;  ff1             4   88[BANK0 ] float 
 20044 ;;  ff2             4   92[BANK0 ] float 
 20045 ;; Auto vars:     Size  Location     Type
 20046 ;;		None
 20047 ;; Return value:  Size  Location     Type
 20048 ;;		None               void
 20049 ;; Registers used:
 20050 ;;		wreg, status,2, status,0
 20051 ;; Tracked objects:
 20052 ;;		On entry : 0/0
 20053 ;;		On exit  : 0/0
 20054 ;;		Unchanged: 0/0
 20055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20056 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20058 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20059 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20060 ;;Total ram usage:       12 bytes
 20061 ;; Hardware stack levels used:    1
 20062 ;; Hardware stack levels required when called:    4
 20063 ;; This function calls:
 20064 ;;		Nothing
 20065 ;; This function is called by:
 20066 ;;		_m_interp1_float_fast
 20067 ;;		_cal_diff_hight_to_vol_h
 20068 ;;		_cal_diff_hight_to_vol_v
 20069 ;; This function uses a non-reentrant model
 20070 ;;
 20071                           
 20072                           	psect	text95
 20073  004370                     __ptext95:
 20074                           	opt stack 0
 20075  004370                     ___flge:
 20076                           	opt stack 21
 20077                           
 20078                           ;incstack = 0
 20079  004370  0E00               	movlw	0
 20080  004372  0100               	movlb	0	; () banked
 20081  004374  15B8               	andwf	___flge@ff1& (0+255),w,b
 20082  004376  0100               	movlb	0	; () banked
 20083  004378  6FC0               	movwf	??___flge& (0+255),b
 20084  00437A  0E00               	movlw	0
 20085  00437C  0100               	movlb	0	; () banked
 20086  00437E  15B9               	andwf	(___flge@ff1+1)& (0+255),w,b
 20087  004380  0100               	movlb	0	; () banked
 20088  004382  6FC1               	movwf	(??___flge+1)& (0+255),b
 20089  004384  0E80               	movlw	128
 20090  004386  0100               	movlb	0	; () banked
 20091  004388  15BA               	andwf	(___flge@ff1+2)& (0+255),w,b
 20092  00438A  0100               	movlb	0	; () banked
 20093  00438C  6FC2               	movwf	(??___flge+2)& (0+255),b
 20094  00438E  0E7F               	movlw	127
 20095  004390  0100               	movlb	0	; () banked
 20096  004392  15BB               	andwf	(___flge@ff1+3)& (0+255),w,b
 20097  004394  0100               	movlb	0	; () banked
 20098  004396  6FC3               	movwf	(??___flge+3)& (0+255),b
 20099  004398  0100               	movlb	0	; () banked
 20100  00439A  51C0               	movf	??___flge& (0+255),w,b
 20101  00439C  0100               	movlb	0	; () banked
 20102  00439E  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 20103  0043A0  0100               	movlb	0	; () banked
 20104  0043A2  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 20105  0043A4  0100               	movlb	0	; () banked
 20106  0043A6  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 20107  0043A8  A4D8               	btfss	status,2,c
 20108  0043AA  D009               	goto	l11258
 20109                           
 20110                           ; BSR set to: 0
 20111  0043AC  0E00               	movlw	0
 20112  0043AE  0100               	movlb	0	; () banked
 20113  0043B0  6FB8               	movwf	___flge@ff1& (0+255),b
 20114  0043B2  0E00               	movlw	0
 20115  0043B4  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 20116  0043B6  0E00               	movlw	0
 20117  0043B8  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 20118  0043BA  0E00               	movlw	0
 20119  0043BC  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 20120  0043BE                     l11258:
 20121                           
 20122                           ; BSR set to: 0
 20123  0043BE  0E00               	movlw	0
 20124  0043C0  0100               	movlb	0	; () banked
 20125  0043C2  15BC               	andwf	___flge@ff2& (0+255),w,b
 20126  0043C4  0100               	movlb	0	; () banked
 20127  0043C6  6FC0               	movwf	??___flge& (0+255),b
 20128  0043C8  0E00               	movlw	0
 20129  0043CA  0100               	movlb	0	; () banked
 20130  0043CC  15BD               	andwf	(___flge@ff2+1)& (0+255),w,b
 20131  0043CE  0100               	movlb	0	; () banked
 20132  0043D0  6FC1               	movwf	(??___flge+1)& (0+255),b
 20133  0043D2  0E80               	movlw	128
 20134  0043D4  0100               	movlb	0	; () banked
 20135  0043D6  15BE               	andwf	(___flge@ff2+2)& (0+255),w,b
 20136  0043D8  0100               	movlb	0	; () banked
 20137  0043DA  6FC2               	movwf	(??___flge+2)& (0+255),b
 20138  0043DC  0E7F               	movlw	127
 20139  0043DE  0100               	movlb	0	; () banked
 20140  0043E0  15BF               	andwf	(___flge@ff2+3)& (0+255),w,b
 20141  0043E2  0100               	movlb	0	; () banked
 20142  0043E4  6FC3               	movwf	(??___flge+3)& (0+255),b
 20143  0043E6  0100               	movlb	0	; () banked
 20144  0043E8  51C0               	movf	??___flge& (0+255),w,b
 20145  0043EA  0100               	movlb	0	; () banked
 20146  0043EC  11C1               	iorwf	(??___flge+1)& (0+255),w,b
 20147  0043EE  0100               	movlb	0	; () banked
 20148  0043F0  11C2               	iorwf	(??___flge+2)& (0+255),w,b
 20149  0043F2  0100               	movlb	0	; () banked
 20150  0043F4  11C3               	iorwf	(??___flge+3)& (0+255),w,b
 20151  0043F6  A4D8               	btfss	status,2,c
 20152  0043F8  D009               	goto	l11262
 20153                           
 20154                           ; BSR set to: 0
 20155  0043FA  0E00               	movlw	0
 20156  0043FC  0100               	movlb	0	; () banked
 20157  0043FE  6FBC               	movwf	___flge@ff2& (0+255),b
 20158  004400  0E00               	movlw	0
 20159  004402  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 20160  004404  0E00               	movlw	0
 20161  004406  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 20162  004408  0E00               	movlw	0
 20163  00440A  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 20164  00440C                     l11262:
 20165                           
 20166                           ; BSR set to: 0
 20167  00440C  0100               	movlb	0	; () banked
 20168  00440E  AFBB               	btfss	(___flge@ff1+3)& (0+255),7,b
 20169  004410  D026               	goto	l11266
 20170                           
 20171                           ; BSR set to: 0
 20172  004412  C0B8  F0C0         	movff	___flge@ff1,??___flge
 20173  004416  C0B9  F0C1         	movff	___flge@ff1+1,??___flge+1
 20174  00441A  C0BA  F0C2         	movff	___flge@ff1+2,??___flge+2
 20175  00441E  C0BB  F0C3         	movff	___flge@ff1+3,??___flge+3
 20176  004422  0100               	movlb	0	; () banked
 20177  004424  1FC0               	comf	??___flge& (0+255),f,b
 20178  004426  1FC1               	comf	(??___flge+1)& (0+255),f,b
 20179  004428  1FC2               	comf	(??___flge+2)& (0+255),f,b
 20180  00442A  1FC3               	comf	(??___flge+3)& (0+255),f,b
 20181  00442C  2BC0               	incf	??___flge& (0+255),f,b
 20182  00442E  0E00               	movlw	0
 20183  004430  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 20184  004432  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 20185  004434  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 20186  004436  0E00               	movlw	0
 20187  004438  0100               	movlb	0	; () banked
 20188  00443A  25C0               	addwf	??___flge& (0+255),w,b
 20189  00443C  0100               	movlb	0	; () banked
 20190  00443E  6FB8               	movwf	___flge@ff1& (0+255),b
 20191  004440  0E00               	movlw	0
 20192  004442  0100               	movlb	0	; () banked
 20193  004444  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 20194  004446  0100               	movlb	0	; () banked
 20195  004448  6FB9               	movwf	(___flge@ff1+1)& (0+255),b
 20196  00444A  0E00               	movlw	0
 20197  00444C  0100               	movlb	0	; () banked
 20198  00444E  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 20199  004450  0100               	movlb	0	; () banked
 20200  004452  6FBA               	movwf	(___flge@ff1+2)& (0+255),b
 20201  004454  0E80               	movlw	128
 20202  004456  0100               	movlb	0	; () banked
 20203  004458  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 20204  00445A  0100               	movlb	0	; () banked
 20205  00445C  6FBB               	movwf	(___flge@ff1+3)& (0+255),b
 20206  00445E                     l11266:
 20207                           
 20208                           ; BSR set to: 0
 20209  00445E  0100               	movlb	0	; () banked
 20210  004460  AFBF               	btfss	(___flge@ff2+3)& (0+255),7,b
 20211  004462  D026               	goto	l1995
 20212                           
 20213                           ; BSR set to: 0
 20214  004464  C0BC  F0C0         	movff	___flge@ff2,??___flge
 20215  004468  C0BD  F0C1         	movff	___flge@ff2+1,??___flge+1
 20216  00446C  C0BE  F0C2         	movff	___flge@ff2+2,??___flge+2
 20217  004470  C0BF  F0C3         	movff	___flge@ff2+3,??___flge+3
 20218  004474  0100               	movlb	0	; () banked
 20219  004476  1FC0               	comf	??___flge& (0+255),f,b
 20220  004478  1FC1               	comf	(??___flge+1)& (0+255),f,b
 20221  00447A  1FC2               	comf	(??___flge+2)& (0+255),f,b
 20222  00447C  1FC3               	comf	(??___flge+3)& (0+255),f,b
 20223  00447E  2BC0               	incf	??___flge& (0+255),f,b
 20224  004480  0E00               	movlw	0
 20225  004482  23C1               	addwfc	(??___flge+1)& (0+255),f,b
 20226  004484  23C2               	addwfc	(??___flge+2)& (0+255),f,b
 20227  004486  23C3               	addwfc	(??___flge+3)& (0+255),f,b
 20228  004488  0E00               	movlw	0
 20229  00448A  0100               	movlb	0	; () banked
 20230  00448C  25C0               	addwf	??___flge& (0+255),w,b
 20231  00448E  0100               	movlb	0	; () banked
 20232  004490  6FBC               	movwf	___flge@ff2& (0+255),b
 20233  004492  0E00               	movlw	0
 20234  004494  0100               	movlb	0	; () banked
 20235  004496  21C1               	addwfc	(??___flge+1)& (0+255),w,b
 20236  004498  0100               	movlb	0	; () banked
 20237  00449A  6FBD               	movwf	(___flge@ff2+1)& (0+255),b
 20238  00449C  0E00               	movlw	0
 20239  00449E  0100               	movlb	0	; () banked
 20240  0044A0  21C2               	addwfc	(??___flge+2)& (0+255),w,b
 20241  0044A2  0100               	movlb	0	; () banked
 20242  0044A4  6FBE               	movwf	(___flge@ff2+2)& (0+255),b
 20243  0044A6  0E80               	movlw	128
 20244  0044A8  0100               	movlb	0	; () banked
 20245  0044AA  21C3               	addwfc	(??___flge+3)& (0+255),w,b
 20246  0044AC  0100               	movlb	0	; () banked
 20247  0044AE  6FBF               	movwf	(___flge@ff2+3)& (0+255),b
 20248  0044B0                     l1995:
 20249                           
 20250                           ; BSR set to: 0
 20251  0044B0  0E00               	movlw	0
 20252  0044B2  0100               	movlb	0	; () banked
 20253  0044B4  1BB8               	xorwf	___flge@ff1& (0+255),f,b
 20254  0044B6  0E00               	movlw	0
 20255  0044B8  1BB9               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20256  0044BA  0E00               	movlw	0
 20257  0044BC  1BBA               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20258  0044BE  0E80               	movlw	128
 20259  0044C0  1BBB               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20260  0044C2  0E00               	movlw	0
 20261  0044C4  0100               	movlb	0	; () banked
 20262  0044C6  1BBC               	xorwf	___flge@ff2& (0+255),f,b
 20263  0044C8  0E00               	movlw	0
 20264  0044CA  1BBD               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20265  0044CC  0E00               	movlw	0
 20266  0044CE  1BBE               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20267  0044D0  0E80               	movlw	128
 20268  0044D2  1BBF               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20269  0044D4  0100               	movlb	0	; () banked
 20270  0044D6  51BC               	movf	___flge@ff2& (0+255),w,b
 20271  0044D8  0100               	movlb	0	; () banked
 20272  0044DA  5DB8               	subwf	___flge@ff1& (0+255),w,b
 20273  0044DC  0100               	movlb	0	; () banked
 20274  0044DE  51BD               	movf	(___flge@ff2+1)& (0+255),w,b
 20275  0044E0  0100               	movlb	0	; () banked
 20276  0044E2  59B9               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20277  0044E4  0100               	movlb	0	; () banked
 20278  0044E6  51BE               	movf	(___flge@ff2+2)& (0+255),w,b
 20279  0044E8  0100               	movlb	0	; () banked
 20280  0044EA  59BA               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20281  0044EC  0100               	movlb	0	; () banked
 20282  0044EE  51BF               	movf	(___flge@ff2+3)& (0+255),w,b
 20283  0044F0  0100               	movlb	0	; () banked
 20284  0044F2  59BB               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20285  0044F4  B0D8               	btfsc	status,0,c
 20286  0044F6  D002               	goto	l11272
 20287                           
 20288                           ; BSR set to: 0
 20289  0044F8  90D8               	bcf	status,0,c
 20290  0044FA  0012               	return	
 20291  0044FC                     l11272:
 20292                           
 20293                           ; BSR set to: 0
 20294  0044FC  80D8               	bsf	status,0,c
 20295                           
 20296                           ; BSR set to: 0
 20297  0044FE  0012               	return	
 20298  004500                     __end_of___flge:
 20299                           	opt stack 0
 20300                           tosu	equ	0xFFF
 20301                           tosh	equ	0xFFE
 20302                           tosl	equ	0xFFD
 20303                           pclath	equ	0xFFA
 20304                           tblptru	equ	0xFF8
 20305                           tblptrh	equ	0xFF7
 20306                           tblptrl	equ	0xFF6
 20307                           tablat	equ	0xFF5
 20308                           prodh	equ	0xFF4
 20309                           prodl	equ	0xFF3
 20310                           intcon	equ	0xFF2
 20311                           indf0	equ	0xFEF
 20312                           postinc0	equ	0xFEE
 20313                           fsr0h	equ	0xFEA
 20314                           fsr0l	equ	0xFE9
 20315                           wreg	equ	0xFE8
 20316                           postinc1	equ	0xFE6
 20317                           postdec1	equ	0xFE5
 20318                           plusw1	equ	0xFE3
 20319                           fsr1h	equ	0xFE2
 20320                           fsr1l	equ	0xFE1
 20321                           indf2	equ	0xFDF
 20322                           postinc2	equ	0xFDE
 20323                           postdec2	equ	0xFDD
 20324                           plusw2	equ	0xFDB
 20325                           fsr2h	equ	0xFDA
 20326                           fsr2l	equ	0xFD9
 20327                           status	equ	0xFD8
 20328                           
 20329 ;; *************** function _cal_additional_pressute *****************
 20330 ;; Defined at:
 20331 ;;		line 557 in file "src/api/data.c"
 20332 ;; Parameters:    Size  Location     Type
 20333 ;;  index           1    wreg     unsigned char 
 20334 ;; Auto vars:     Size  Location     Type
 20335 ;;  index           1  109[BANK0 ] unsigned char 
 20336 ;;  f2              4  105[BANK0 ] float 
 20337 ;;  f1              4  101[BANK0 ] float 
 20338 ;; Return value:  Size  Location     Type
 20339 ;;                  1    wreg      void 
 20340 ;; Registers used:
 20341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20342 ;; Tracked objects:
 20343 ;;		On entry : 0/0
 20344 ;;		On exit  : 0/0
 20345 ;;		Unchanged: 0/0
 20346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20348 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20349 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20350 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20351 ;;Total ram usage:       12 bytes
 20352 ;; Hardware stack levels used:    1
 20353 ;; Hardware stack levels required when called:    5
 20354 ;; This function calls:
 20355 ;;		___fladd
 20356 ;;		___fldiv
 20357 ;;		___flmul
 20358 ;;		___flneg
 20359 ;;		___fltol
 20360 ;;		___xxtofl
 20361 ;; This function is called by:
 20362 ;;		_event_process_rtc
 20363 ;; This function uses a non-reentrant model
 20364 ;;
 20365                           
 20366                           	psect	text96
 20367  0036EE                     __ptext96:
 20368                           	opt stack 0
 20369  0036EE                     _cal_additional_pressute:
 20370                           	opt stack 23
 20371                           
 20372                           ; BSR set to: 0
 20373                           ;incstack = 0
 20374                           ;cal_additional_pressute@index stored from wreg
 20375  0036EE  0100               	movlb	0	; () banked
 20376  0036F0  6FCD               	movwf	cal_additional_pressute@index& (0+255),b
 20377                           
 20378                           ;data.c: 559: if(index>1)return;
 20379  0036F2  0E01               	movlw	1
 20380  0036F4  0100               	movlb	0	; () banked
 20381  0036F6  65CD               	cpfsgt	cal_additional_pressute@index& (0+255),b
 20382  0036F8  D001               	goto	l12292
 20383  0036FA  0012               	return	
 20384  0036FC                     l12292:
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;data.c: 560: float f1,f2;
 20388                           ;data.c: 561: f1=(float)adc_iPrEx[index];
 20389  0036FC  0100               	movlb	0	; () banked
 20390  0036FE  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 20391  003700  0D02               	mullw	2
 20392  003702  0E6A               	movlw	low _adc_iPrEx
 20393  003704  24F3               	addwf	prodl,w,c
 20394  003706  6ED9               	movwf	fsr2l,c
 20395  003708  0E01               	movlw	high _adc_iPrEx
 20396  00370A  20F4               	addwfc	prodh,w,c
 20397  00370C  6EDA               	movwf	fsr2h,c
 20398  00370E  CFDE F060          	movff	postinc2,___xxtofl@val
 20399  003712  CFDD F061          	movff	postdec2,___xxtofl@val+1
 20400  003716  0100               	movlb	0	; () banked
 20401  003718  0E00               	movlw	0
 20402  00371A  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 20403  00371C  0EFF               	movlw	-1
 20404  00371E  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 20405  003720  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 20406  003722  0E01               	movlw	1
 20407  003724  EC6A  F01D         	call	___xxtofl
 20408  003728  C060  F0C5         	movff	?___xxtofl,cal_additional_pressute@f1
 20409  00372C  C061  F0C6         	movff	?___xxtofl+1,cal_additional_pressute@f1+1
 20410  003730  C062  F0C7         	movff	?___xxtofl+2,cal_additional_pressute@f1+2
 20411  003734  C063  F0C8         	movff	?___xxtofl+3,cal_additional_pressute@f1+3
 20412                           
 20413                           ;data.c: 562: f2=(float)(fpSysData->ex_pressZero[index]);
 20414  003738  0100               	movlb	0	; () banked
 20415  00373A  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 20416  00373C  0D04               	mullw	4
 20417  00373E  0E64               	movlw	100
 20418  003740  26F3               	addwf	prodl,f,c
 20419  003742  0E00               	movlw	0
 20420  003744  22F4               	addwfc	prodh,f,c
 20421  003746  50F3               	movf	prodl,w,c
 20422  003748  243C               	addwf	_fpSysData,w,c
 20423  00374A  0100               	movlb	0	; () banked
 20424  00374C  6FC2               	movwf	??_cal_additional_pressute& (0+255),b
 20425  00374E  50F4               	movf	prodh,w,c
 20426  003750  203D               	addwfc	_fpSysData+1,w,c
 20427  003752  0100               	movlb	0	; () banked
 20428  003754  6FC3               	movwf	(??_cal_additional_pressute+1)& (0+255),b
 20429  003756  0E00               	movlw	0
 20430  003758  203E               	addwfc	_fpSysData+2,w,c
 20431  00375A  0100               	movlb	0	; () banked
 20432  00375C  6FC4               	movwf	(??_cal_additional_pressute+2)& (0+255),b
 20433  00375E  C0C2  FFF6         	movff	??_cal_additional_pressute,tblptrl
 20434  003762  C0C3  FFF7         	movff	??_cal_additional_pressute+1,tblptrh
 20435  003766  C0C4  FFF8         	movff	??_cal_additional_pressute+2,tblptru
 20436  00376A  0009               	tblrd		*+
 20437  00376C  CFF5 F060          	movff	tablat,___xxtofl@val
 20438  003770  0009               	tblrd		*+
 20439  003772  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20440  003776  0009               	tblrd		*+
 20441  003778  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20442  00377C  000A               	tblrd		*-
 20443  00377E  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20444  003782  0E00               	movlw	0
 20445  003784  EC6A  F01D         	call	___xxtofl
 20446  003788  C060  F0C9         	movff	?___xxtofl,cal_additional_pressute@f2
 20447  00378C  C061  F0CA         	movff	?___xxtofl+1,cal_additional_pressute@f2+1
 20448  003790  C062  F0CB         	movff	?___xxtofl+2,cal_additional_pressute@f2+2
 20449  003794  C063  F0CC         	movff	?___xxtofl+3,cal_additional_pressute@f2+3
 20450                           
 20451                           ;data.c: 563: f1=f1-f2;
 20452  003798  C0C9  F0A0         	movff	cal_additional_pressute@f2,___flneg@f1
 20453  00379C  C0CA  F0A1         	movff	cal_additional_pressute@f2+1,___flneg@f1+1
 20454  0037A0  C0CB  F0A2         	movff	cal_additional_pressute@f2+2,___flneg@f1+2
 20455  0037A4  C0CC  F0A3         	movff	cal_additional_pressute@f2+3,___flneg@f1+3
 20456  0037A8  EC2F  F03A         	call	___flneg	;wreg free
 20457  0037AC  C0A0  F0A4         	movff	?___flneg,___fladd@b
 20458  0037B0  C0A1  F0A5         	movff	?___flneg+1,___fladd@b+1
 20459  0037B4  C0A2  F0A6         	movff	?___flneg+2,___fladd@b+2
 20460  0037B8  C0A3  F0A7         	movff	?___flneg+3,___fladd@b+3
 20461  0037BC  C0C5  F0A8         	movff	cal_additional_pressute@f1,___fladd@a
 20462  0037C0  C0C6  F0A9         	movff	cal_additional_pressute@f1+1,___fladd@a+1
 20463  0037C4  C0C7  F0AA         	movff	cal_additional_pressute@f1+2,___fladd@a+2
 20464  0037C8  C0C8  F0AB         	movff	cal_additional_pressute@f1+3,___fladd@a+3
 20465  0037CC  EC40  F009         	call	___fladd	;wreg free
 20466  0037D0  C0A4  F0C5         	movff	?___fladd,cal_additional_pressute@f1
 20467  0037D4  C0A5  F0C6         	movff	?___fladd+1,cal_additional_pressute@f1+1
 20468  0037D8  C0A6  F0C7         	movff	?___fladd+2,cal_additional_pressute@f1+2
 20469  0037DC  C0A7  F0C8         	movff	?___fladd+3,cal_additional_pressute@f1+3
 20470                           
 20471                           ;data.c: 565: f2=(float)(fpSysData->ex_pressLine[index]);
 20472  0037E0  0100               	movlb	0	; () banked
 20473  0037E2  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 20474  0037E4  0D04               	mullw	4
 20475  0037E6  0E6C               	movlw	108
 20476  0037E8  26F3               	addwf	prodl,f,c
 20477  0037EA  0E00               	movlw	0
 20478  0037EC  22F4               	addwfc	prodh,f,c
 20479  0037EE  50F3               	movf	prodl,w,c
 20480  0037F0  243C               	addwf	_fpSysData,w,c
 20481  0037F2  0100               	movlb	0	; () banked
 20482  0037F4  6FC2               	movwf	??_cal_additional_pressute& (0+255),b
 20483  0037F6  50F4               	movf	prodh,w,c
 20484  0037F8  203D               	addwfc	_fpSysData+1,w,c
 20485  0037FA  0100               	movlb	0	; () banked
 20486  0037FC  6FC3               	movwf	(??_cal_additional_pressute+1)& (0+255),b
 20487  0037FE  0E00               	movlw	0
 20488  003800  203E               	addwfc	_fpSysData+2,w,c
 20489  003802  0100               	movlb	0	; () banked
 20490  003804  6FC4               	movwf	(??_cal_additional_pressute+2)& (0+255),b
 20491  003806  C0C2  FFF6         	movff	??_cal_additional_pressute,tblptrl
 20492  00380A  C0C3  FFF7         	movff	??_cal_additional_pressute+1,tblptrh
 20493  00380E  C0C4  FFF8         	movff	??_cal_additional_pressute+2,tblptru
 20494  003812  0009               	tblrd		*+
 20495  003814  CFF5 F060          	movff	tablat,___xxtofl@val
 20496  003818  0009               	tblrd		*+
 20497  00381A  CFF5 F061          	movff	tablat,___xxtofl@val+1
 20498  00381E  0009               	tblrd		*+
 20499  003820  CFF5 F062          	movff	tablat,___xxtofl@val+2
 20500  003824  000A               	tblrd		*-
 20501  003826  CFF5 F063          	movff	tablat,___xxtofl@val+3
 20502  00382A  0E00               	movlw	0
 20503  00382C  EC6A  F01D         	call	___xxtofl
 20504  003830  C060  F0C9         	movff	?___xxtofl,cal_additional_pressute@f2
 20505  003834  C061  F0CA         	movff	?___xxtofl+1,cal_additional_pressute@f2+1
 20506  003838  C062  F0CB         	movff	?___xxtofl+2,cal_additional_pressute@f2+2
 20507  00383C  C063  F0CC         	movff	?___xxtofl+3,cal_additional_pressute@f2+3
 20508                           
 20509                           ;data.c: 566: f2/=1000;
 20510  003840  C0C9  F087         	movff	cal_additional_pressute@f2,___fldiv@b
 20511  003844  C0CA  F088         	movff	cal_additional_pressute@f2+1,___fldiv@b+1
 20512  003848  C0CB  F089         	movff	cal_additional_pressute@f2+2,___fldiv@b+2
 20513  00384C  C0CC  F08A         	movff	cal_additional_pressute@f2+3,___fldiv@b+3
 20514  003850  0E00               	movlw	0
 20515  003852  0100               	movlb	0	; () banked
 20516  003854  6F8B               	movwf	___fldiv@a& (0+255),b
 20517  003856  0E00               	movlw	0
 20518  003858  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 20519  00385A  0E7A               	movlw	122
 20520  00385C  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 20521  00385E  0E44               	movlw	68
 20522  003860  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 20523  003862  EC48  F012         	call	___fldiv	;wreg free
 20524  003866  C087  F0C9         	movff	?___fldiv,cal_additional_pressute@f2
 20525  00386A  C088  F0CA         	movff	?___fldiv+1,cal_additional_pressute@f2+1
 20526  00386E  C089  F0CB         	movff	?___fldiv+2,cal_additional_pressute@f2+2
 20527  003872  C08A  F0CC         	movff	?___fldiv+3,cal_additional_pressute@f2+3
 20528                           
 20529                           ;data.c: 568: f1=f1*f2;
 20530  003876  C0C5  F06E         	movff	cal_additional_pressute@f1,___flmul@b
 20531  00387A  C0C6  F06F         	movff	cal_additional_pressute@f1+1,___flmul@b+1
 20532  00387E  C0C7  F070         	movff	cal_additional_pressute@f1+2,___flmul@b+2
 20533  003882  C0C8  F071         	movff	cal_additional_pressute@f1+3,___flmul@b+3
 20534  003886  C0C9  F072         	movff	cal_additional_pressute@f2,___flmul@a
 20535  00388A  C0CA  F073         	movff	cal_additional_pressute@f2+1,___flmul@a+1
 20536  00388E  C0CB  F074         	movff	cal_additional_pressute@f2+2,___flmul@a+2
 20537  003892  C0CC  F075         	movff	cal_additional_pressute@f2+3,___flmul@a+3
 20538  003896  EC94  F00B         	call	___flmul	;wreg free
 20539  00389A  C06E  F0C5         	movff	?___flmul,cal_additional_pressute@f1
 20540  00389E  C06F  F0C6         	movff	?___flmul+1,cal_additional_pressute@f1+1
 20541  0038A2  C070  F0C7         	movff	?___flmul+2,cal_additional_pressute@f1+2
 20542  0038A6  C071  F0C8         	movff	?___flmul+3,cal_additional_pressute@f1+3
 20543                           
 20544                           ;data.c: 569: rtExPressure[index]=(int32_t)f1;
 20545  0038AA  C0C5  F0B8         	movff	cal_additional_pressute@f1,___fltol@f1
 20546  0038AE  C0C6  F0B9         	movff	cal_additional_pressute@f1+1,___fltol@f1+1
 20547  0038B2  C0C7  F0BA         	movff	cal_additional_pressute@f1+2,___fltol@f1+2
 20548  0038B6  C0C8  F0BB         	movff	cal_additional_pressute@f1+3,___fltol@f1+3
 20549  0038BA  EC32  F028         	call	___fltol	;wreg free
 20550  0038BE  0100               	movlb	0	; () banked
 20551  0038C0  51CD               	movf	cal_additional_pressute@index& (0+255),w,b
 20552  0038C2  0D04               	mullw	4
 20553  0038C4  0E2B               	movlw	low _rtExPressure
 20554  0038C6  24F3               	addwf	prodl,w,c
 20555  0038C8  6ED9               	movwf	fsr2l,c
 20556  0038CA  0E01               	movlw	high _rtExPressure
 20557  0038CC  20F4               	addwfc	prodh,w,c
 20558  0038CE  6EDA               	movwf	fsr2h,c
 20559  0038D0  0100               	movlb	0	; () banked
 20560  0038D2  C0B8  FFDE         	movff	?___fltol,postinc2
 20561  0038D6  0100               	movlb	0	; () banked
 20562  0038D8  C0B9  FFDE         	movff	?___fltol+1,postinc2
 20563  0038DC  0100               	movlb	0	; () banked
 20564  0038DE  C0BA  FFDE         	movff	?___fltol+2,postinc2
 20565  0038E2  0100               	movlb	0	; () banked
 20566  0038E4  C0BB  FFDE         	movff	?___fltol+3,postinc2
 20567                           
 20568                           ; BSR set to: 0
 20569  0038E8  0012               	return		;funcret
 20570  0038EA                     __end_of_cal_additional_pressute:
 20571                           	opt stack 0
 20572                           tosu	equ	0xFFF
 20573                           tosh	equ	0xFFE
 20574                           tosl	equ	0xFFD
 20575                           pclath	equ	0xFFA
 20576                           tblptru	equ	0xFF8
 20577                           tblptrh	equ	0xFF7
 20578                           tblptrl	equ	0xFF6
 20579                           tablat	equ	0xFF5
 20580                           prodh	equ	0xFF4
 20581                           prodl	equ	0xFF3
 20582                           intcon	equ	0xFF2
 20583                           indf0	equ	0xFEF
 20584                           postinc0	equ	0xFEE
 20585                           fsr0h	equ	0xFEA
 20586                           fsr0l	equ	0xFE9
 20587                           wreg	equ	0xFE8
 20588                           postinc1	equ	0xFE6
 20589                           postdec1	equ	0xFE5
 20590                           plusw1	equ	0xFE3
 20591                           fsr1h	equ	0xFE2
 20592                           fsr1l	equ	0xFE1
 20593                           indf2	equ	0xFDF
 20594                           postinc2	equ	0xFDE
 20595                           postdec2	equ	0xFDD
 20596                           plusw2	equ	0xFDB
 20597                           fsr2h	equ	0xFDA
 20598                           fsr2l	equ	0xFD9
 20599                           status	equ	0xFD8
 20600                           
 20601 ;; *************** function ___flneg *****************
 20602 ;; Defined at:
 20603 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\flneg.c"
 20604 ;; Parameters:    Size  Location     Type
 20605 ;;  f1              4   64[BANK0 ] void 
 20606 ;; Auto vars:     Size  Location     Type
 20607 ;;		None
 20608 ;; Return value:  Size  Location     Type
 20609 ;;                  4   64[BANK0 ] void 
 20610 ;; Registers used:
 20611 ;;		wreg, status,2, status,0
 20612 ;; Tracked objects:
 20613 ;;		On entry : 0/0
 20614 ;;		On exit  : 0/0
 20615 ;;		Unchanged: 0/0
 20616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20617 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20620 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20621 ;;Total ram usage:        4 bytes
 20622 ;; Hardware stack levels used:    1
 20623 ;; Hardware stack levels required when called:    4
 20624 ;; This function calls:
 20625 ;;		Nothing
 20626 ;; This function is called by:
 20627 ;;		_m_interp1_float_fast
 20628 ;;		_cal_diff_hight_to_vol_v
 20629 ;;		_cal_pt100_temperature_in
 20630 ;;		_cal_pt100_temperature_ex
 20631 ;;		_cal_additional_pressute
 20632 ;; This function uses a non-reentrant model
 20633 ;;
 20634                           
 20635                           	psect	text97
 20636  00745E                     __ptext97:
 20637                           	opt stack 0
 20638  00745E                     ___flneg:
 20639                           	opt stack 23
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;incstack = 0
 20643  00745E  0100               	movlb	0	; () banked
 20644  007460  51A0               	movf	___flneg@f1& (0+255),w,b
 20645  007462  0100               	movlb	0	; () banked
 20646  007464  11A1               	iorwf	(___flneg@f1+1)& (0+255),w,b
 20647  007466  0100               	movlb	0	; () banked
 20648  007468  11A2               	iorwf	(___flneg@f1+2)& (0+255),w,b
 20649  00746A  0100               	movlb	0	; () banked
 20650  00746C  11A3               	iorwf	(___flneg@f1+3)& (0+255),w,b
 20651  00746E  B4D8               	btfsc	status,2,c
 20652  007470  D009               	goto	l11280
 20653                           
 20654                           ; BSR set to: 0
 20655  007472  0E00               	movlw	0
 20656  007474  0100               	movlb	0	; () banked
 20657  007476  1BA0               	xorwf	___flneg@f1& (0+255),f,b
 20658  007478  0E00               	movlw	0
 20659  00747A  1BA1               	xorwf	(___flneg@f1+1)& (0+255),f,b
 20660  00747C  0E00               	movlw	0
 20661  00747E  1BA2               	xorwf	(___flneg@f1+2)& (0+255),f,b
 20662  007480  0E80               	movlw	128
 20663  007482  1BA3               	xorwf	(___flneg@f1+3)& (0+255),f,b
 20664  007484                     l11280:
 20665                           
 20666                           ; BSR set to: 0
 20667  007484  C0A0  F0A0         	movff	___flneg@f1,?___flneg
 20668  007488  C0A1  F0A1         	movff	___flneg@f1+1,?___flneg+1
 20669  00748C  C0A2  F0A2         	movff	___flneg@f1+2,?___flneg+2
 20670  007490  C0A3  F0A3         	movff	___flneg@f1+3,?___flneg+3
 20671  007494  0012               	return	
 20672  007496                     __end_of___flneg:
 20673                           	opt stack 0
 20674                           tosu	equ	0xFFF
 20675                           tosh	equ	0xFFE
 20676                           tosl	equ	0xFFD
 20677                           pclath	equ	0xFFA
 20678                           tblptru	equ	0xFF8
 20679                           tblptrh	equ	0xFF7
 20680                           tblptrl	equ	0xFF6
 20681                           tablat	equ	0xFF5
 20682                           prodh	equ	0xFF4
 20683                           prodl	equ	0xFF3
 20684                           intcon	equ	0xFF2
 20685                           indf0	equ	0xFEF
 20686                           postinc0	equ	0xFEE
 20687                           fsr0h	equ	0xFEA
 20688                           fsr0l	equ	0xFE9
 20689                           wreg	equ	0xFE8
 20690                           postinc1	equ	0xFE6
 20691                           postdec1	equ	0xFE5
 20692                           plusw1	equ	0xFE3
 20693                           fsr1h	equ	0xFE2
 20694                           fsr1l	equ	0xFE1
 20695                           indf2	equ	0xFDF
 20696                           postinc2	equ	0xFDE
 20697                           postdec2	equ	0xFDD
 20698                           plusw2	equ	0xFDB
 20699                           fsr2h	equ	0xFDA
 20700                           fsr2l	equ	0xFD9
 20701                           status	equ	0xFD8
 20702                           
 20703 ;; *************** function ___fladd *****************
 20704 ;; Defined at:
 20705 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcadd.c"
 20706 ;; Parameters:    Size  Location     Type
 20707 ;;  b               4   68[BANK0 ] void 
 20708 ;;  a               4   72[BANK0 ] void 
 20709 ;; Auto vars:     Size  Location     Type
 20710 ;;  grs             1   87[BANK0 ] unsigned char 
 20711 ;;  bexp            1   86[BANK0 ] unsigned char 
 20712 ;;  aexp            1   85[BANK0 ] unsigned char 
 20713 ;;  signs           1   84[BANK0 ] unsigned char 
 20714 ;; Return value:  Size  Location     Type
 20715 ;;                  4   68[BANK0 ] unsigned char 
 20716 ;; Registers used:
 20717 ;;		wreg, status,2, status,0
 20718 ;; Tracked objects:
 20719 ;;		On entry : 0/0
 20720 ;;		On exit  : 0/0
 20721 ;;		Unchanged: 0/0
 20722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20723 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20724 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20725 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20726 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20727 ;;Total ram usage:       20 bytes
 20728 ;; Hardware stack levels used:    1
 20729 ;; Hardware stack levels required when called:    4
 20730 ;; This function calls:
 20731 ;;		Nothing
 20732 ;; This function is called by:
 20733 ;;		_m_interp1_float_fast
 20734 ;;		_cal_diff_hight_to_vol_h
 20735 ;;		_cal_diff_hight_to_vol_v
 20736 ;;		_cal_pt100_temperature_in
 20737 ;;		_cal_pt100_temperature_ex
 20738 ;;		_cal_additional_pressute
 20739 ;; This function uses a non-reentrant model
 20740 ;;
 20741                           
 20742                           	psect	text98
 20743  001280                     __ptext98:
 20744                           	opt stack 0
 20745  001280                     ___fladd:
 20746                           	opt stack 23
 20747                           
 20748                           ; BSR set to: 0
 20749                           ;incstack = 0
 20750  001280  0100               	movlb	0	; () banked
 20751  001282  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 20752  001284  0B80               	andlw	128
 20753  001286  0100               	movlb	0	; () banked
 20754  001288  6FB4               	movwf	___fladd@signs& (0+255),b
 20755  00128A  0100               	movlb	0	; () banked
 20756  00128C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 20757  00128E  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 20758  001290  0100               	movlb	0	; () banked
 20759  001292  6FB6               	movwf	___fladd@bexp& (0+255),b
 20760                           
 20761                           ; BSR set to: 0
 20762  001294  0100               	movlb	0	; () banked
 20763  001296  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 20764  001298  D002               	goto	l10792
 20765                           
 20766                           ; BSR set to: 0
 20767  00129A  0100               	movlb	0	; () banked
 20768  00129C  81B6               	bsf	___fladd@bexp& (0+255),0,b
 20769  00129E                     l10792:
 20770                           
 20771                           ; BSR set to: 0
 20772  00129E  0100               	movlb	0	; () banked
 20773  0012A0  51B6               	movf	___fladd@bexp& (0+255),w,b
 20774  0012A2  0100               	movlb	0	; () banked
 20775  0012A4  B4D8               	btfsc	status,2,c
 20776  0012A6  D012               	goto	l10802
 20777                           
 20778                           ; BSR set to: 0
 20779  0012A8  0100               	movlb	0	; () banked
 20780  0012AA  29B6               	incf	___fladd@bexp& (0+255),w,b
 20781  0012AC  A4D8               	btfss	status,2,c
 20782  0012AE  D009               	goto	l10798
 20783                           
 20784                           ; BSR set to: 0
 20785  0012B0  0E00               	movlw	0
 20786  0012B2  0100               	movlb	0	; () banked
 20787  0012B4  6FA4               	movwf	___fladd@b& (0+255),b
 20788  0012B6  0E00               	movlw	0
 20789  0012B8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 20790  0012BA  0E00               	movlw	0
 20791  0012BC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 20792  0012BE  0E00               	movlw	0
 20793  0012C0  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 20794  0012C2                     l10798:
 20795                           
 20796                           ; BSR set to: 0
 20797  0012C2  0100               	movlb	0	; () banked
 20798  0012C4  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 20799                           
 20800                           ; BSR set to: 0
 20801  0012C6  0E00               	movlw	0
 20802  0012C8  0100               	movlb	0	; () banked
 20803  0012CA  D008               	goto	L9
 20804  0012CC                     l10802:
 20805                           
 20806                           ; BSR set to: 0
 20807  0012CC  0E00               	movlw	0
 20808  0012CE  0100               	movlb	0	; () banked
 20809  0012D0  6FA4               	movwf	___fladd@b& (0+255),b
 20810  0012D2  0E00               	movlw	0
 20811  0012D4  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 20812  0012D6  0E00               	movlw	0
 20813  0012D8  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 20814  0012DA  0E00               	movlw	0
 20815  0012DC                     L9:
 20816  0012DC  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 20817                           
 20818                           ; BSR set to: 0
 20819                           
 20820                           ; BSR set to: 0
 20821  0012DE  0100               	movlb	0	; () banked
 20822  0012E0  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 20823  0012E2  0B80               	andlw	128
 20824  0012E4  0100               	movlb	0	; () banked
 20825  0012E6  6FB5               	movwf	___fladd@aexp& (0+255),b
 20826                           
 20827                           ; BSR set to: 0
 20828  0012E8  0100               	movlb	0	; () banked
 20829  0012EA  51B4               	movf	___fladd@signs& (0+255),w,b
 20830  0012EC  0100               	movlb	0	; () banked
 20831  0012EE  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 20832  0012F0  B4D8               	btfsc	status,2,c
 20833  0012F2  D002               	goto	l10810
 20834                           
 20835                           ; BSR set to: 0
 20836  0012F4  0100               	movlb	0	; () banked
 20837  0012F6  8DB4               	bsf	___fladd@signs& (0+255),6,b
 20838  0012F8                     l10810:
 20839                           
 20840                           ; BSR set to: 0
 20841  0012F8  0100               	movlb	0	; () banked
 20842  0012FA  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 20843  0012FC  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 20844  0012FE  0100               	movlb	0	; () banked
 20845  001300  6FB5               	movwf	___fladd@aexp& (0+255),b
 20846                           
 20847                           ; BSR set to: 0
 20848  001302  0100               	movlb	0	; () banked
 20849  001304  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 20850  001306  D002               	goto	l10816
 20851                           
 20852                           ; BSR set to: 0
 20853  001308  0100               	movlb	0	; () banked
 20854  00130A  81B5               	bsf	___fladd@aexp& (0+255),0,b
 20855  00130C                     l10816:
 20856                           
 20857                           ; BSR set to: 0
 20858  00130C  0100               	movlb	0	; () banked
 20859  00130E  51B5               	movf	___fladd@aexp& (0+255),w,b
 20860  001310  0100               	movlb	0	; () banked
 20861  001312  B4D8               	btfsc	status,2,c
 20862  001314  D012               	goto	l10826
 20863                           
 20864                           ; BSR set to: 0
 20865  001316  0100               	movlb	0	; () banked
 20866  001318  29B5               	incf	___fladd@aexp& (0+255),w,b
 20867  00131A  A4D8               	btfss	status,2,c
 20868  00131C  D009               	goto	l10822
 20869                           
 20870                           ; BSR set to: 0
 20871  00131E  0E00               	movlw	0
 20872  001320  0100               	movlb	0	; () banked
 20873  001322  6FA8               	movwf	___fladd@a& (0+255),b
 20874  001324  0E00               	movlw	0
 20875  001326  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 20876  001328  0E00               	movlw	0
 20877  00132A  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 20878  00132C  0E00               	movlw	0
 20879  00132E  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 20880  001330                     l10822:
 20881                           
 20882                           ; BSR set to: 0
 20883  001330  0100               	movlb	0	; () banked
 20884  001332  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 20885                           
 20886                           ; BSR set to: 0
 20887  001334  0E00               	movlw	0
 20888  001336  0100               	movlb	0	; () banked
 20889  001338  D008               	goto	L10
 20890  00133A                     l10826:
 20891                           
 20892                           ; BSR set to: 0
 20893  00133A  0E00               	movlw	0
 20894  00133C  0100               	movlb	0	; () banked
 20895  00133E  6FA8               	movwf	___fladd@a& (0+255),b
 20896  001340  0E00               	movlw	0
 20897  001342  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 20898  001344  0E00               	movlw	0
 20899  001346  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 20900  001348  0E00               	movlw	0
 20901  00134A                     L10:
 20902  00134A  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 20903                           
 20904                           ; BSR set to: 0
 20905                           
 20906                           ; BSR set to: 0
 20907  00134C  0100               	movlb	0	; () banked
 20908  00134E  51B6               	movf	___fladd@bexp& (0+255),w,b
 20909  001350  0100               	movlb	0	; () banked
 20910  001352  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 20911  001354  B0D8               	btfsc	status,0,c
 20912  001356  D024               	goto	l10864
 20913                           
 20914                           ; BSR set to: 0
 20915  001358  0100               	movlb	0	; () banked
 20916  00135A  ADB4               	btfss	___fladd@signs& (0+255),6,b
 20917  00135C  D003               	goto	l10834
 20918                           
 20919                           ; BSR set to: 0
 20920  00135E  0E80               	movlw	128
 20921  001360  0100               	movlb	0	; () banked
 20922  001362  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 20923  001364                     l10834:
 20924                           
 20925                           ; BSR set to: 0
 20926  001364  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 20927                           
 20928                           ; BSR set to: 0
 20929  001368  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 20930                           
 20931                           ; BSR set to: 0
 20932  00136C  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 20933                           
 20934                           ; BSR set to: 0
 20935  001370  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 20936                           
 20937                           ; BSR set to: 0
 20938  001374  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 20939                           
 20940                           ; BSR set to: 0
 20941  001378  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 20942                           
 20943                           ; BSR set to: 0
 20944  00137C  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 20945                           
 20946                           ; BSR set to: 0
 20947  001380  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 20948                           
 20949                           ; BSR set to: 0
 20950  001384  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 20951                           
 20952                           ; BSR set to: 0
 20953  001388  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 20954                           
 20955                           ; BSR set to: 0
 20956  00138C  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 20957                           
 20958                           ; BSR set to: 0
 20959  001390  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 20960                           
 20961                           ; BSR set to: 0
 20962  001394  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 20963                           
 20964                           ; BSR set to: 0
 20965  001398  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 20966                           
 20967                           ; BSR set to: 0
 20968  00139C  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 20969  0013A0                     l10864:
 20970                           
 20971                           ; BSR set to: 0
 20972  0013A0  0E00               	movlw	0
 20973  0013A2  0100               	movlb	0	; () banked
 20974  0013A4  6FB7               	movwf	___fladd@grs& (0+255),b
 20975                           
 20976                           ; BSR set to: 0
 20977  0013A6  0100               	movlb	0	; () banked
 20978  0013A8  51B6               	movf	___fladd@bexp& (0+255),w,b
 20979  0013AA  0100               	movlb	0	; () banked
 20980  0013AC  6FAC               	movwf	??___fladd& (0+255),b
 20981  0013AE  6BAD               	clrf	(??___fladd+1)& (0+255),b
 20982  0013B0  0100               	movlb	0	; () banked
 20983  0013B2  1FAC               	comf	??___fladd& (0+255),f,b
 20984  0013B4  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 20985  0013B6  4BAC               	infsnz	??___fladd& (0+255),f,b
 20986  0013B8  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 20987  0013BA  0100               	movlb	0	; () banked
 20988  0013BC  51B5               	movf	___fladd@aexp& (0+255),w,b
 20989  0013BE  0100               	movlb	0	; () banked
 20990  0013C0  6FAE               	movwf	(??___fladd+2)& (0+255),b
 20991  0013C2  6BAF               	clrf	(??___fladd+3)& (0+255),b
 20992  0013C4  0100               	movlb	0	; () banked
 20993  0013C6  51AC               	movf	??___fladd& (0+255),w,b
 20994  0013C8  0100               	movlb	0	; () banked
 20995  0013CA  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 20996  0013CC  0100               	movlb	0	; () banked
 20997  0013CE  51AD               	movf	(??___fladd+1)& (0+255),w,b
 20998  0013D0  0100               	movlb	0	; () banked
 20999  0013D2  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 21000  0013D4  0100               	movlb	0	; () banked
 21001  0013D6  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 21002  0013D8  D03D               	goto	l2233
 21003  0013DA  0100               	movlb	0	; () banked
 21004  0013DC  51AF               	movf	(??___fladd+3)& (0+255),w,b
 21005  0013DE  E105               	bnz	u9260
 21006  0013E0  0E1A               	movlw	26
 21007  0013E2  0100               	movlb	0	; () banked
 21008  0013E4  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 21009  0013E6  A0D8               	btfss	status,0,c
 21010  0013E8  D035               	goto	l2233
 21011  0013EA                     u9260:
 21012                           
 21013                           ; BSR set to: 0
 21014  0013EA  0100               	movlb	0	; () banked
 21015  0013EC  51A4               	movf	___fladd@b& (0+255),w,b
 21016  0013EE  0100               	movlb	0	; () banked
 21017  0013F0  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 21018  0013F2  0100               	movlb	0	; () banked
 21019  0013F4  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 21020  0013F6  0100               	movlb	0	; () banked
 21021  0013F8  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 21022  0013FA  B4D8               	btfsc	status,2,c
 21023  0013FC  D002               	goto	u9270
 21024  0013FE  0E01               	movlw	1
 21025  001400  D001               	goto	u9280
 21026  001402                     u9270:
 21027  001402  0E00               	movlw	0
 21028  001404                     u9280:
 21029  001404  0100               	movlb	0	; () banked
 21030  001406  6FB7               	movwf	___fladd@grs& (0+255),b
 21031                           
 21032                           ; BSR set to: 0
 21033  001408  0E00               	movlw	0
 21034  00140A  0100               	movlb	0	; () banked
 21035  00140C  6FA4               	movwf	___fladd@b& (0+255),b
 21036  00140E  0E00               	movlw	0
 21037  001410  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 21038  001412  0E00               	movlw	0
 21039  001414  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 21040  001416  0E00               	movlw	0
 21041  001418  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 21042                           
 21043                           ; BSR set to: 0
 21044  00141A  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 21045  00141E  D020               	goto	l2232
 21046  001420                     l2234:
 21047                           
 21048                           ; BSR set to: 0
 21049  001420  0100               	movlb	0	; () banked
 21050  001422  A1B7               	btfss	___fladd@grs& (0+255),0,b
 21051  001424  D007               	goto	l10876
 21052                           
 21053                           ; BSR set to: 0
 21054  001426  0100               	movlb	0	; () banked
 21055  001428  90D8               	bcf	status,0,c
 21056  00142A  31B7               	rrcf	___fladd@grs& (0+255),w,b
 21057  00142C  0901               	iorlw	1
 21058  00142E  0100               	movlb	0	; () banked
 21059  001430  6FB7               	movwf	___fladd@grs& (0+255),b
 21060  001432  D003               	goto	l10878
 21061  001434                     l10876:
 21062                           
 21063                           ; BSR set to: 0
 21064  001434  0100               	movlb	0	; () banked
 21065  001436  90D8               	bcf	status,0,c
 21066  001438  33B7               	rrcf	___fladd@grs& (0+255),f,b
 21067  00143A                     l10878:
 21068                           
 21069                           ; BSR set to: 0
 21070  00143A  0100               	movlb	0	; () banked
 21071  00143C  A1A4               	btfss	___fladd@b& (0+255),0,b
 21072  00143E  D002               	goto	l10882
 21073                           
 21074                           ; BSR set to: 0
 21075  001440  0100               	movlb	0	; () banked
 21076  001442  8FB7               	bsf	___fladd@grs& (0+255),7,b
 21077  001444                     l10882:
 21078                           
 21079                           ; BSR set to: 0
 21080  001444  0100               	movlb	0	; () banked
 21081  001446  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 21082  001448  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 21083  00144A  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 21084  00144C  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 21085  00144E  33A4               	rrcf	___fladd@b& (0+255),f,b
 21086                           
 21087                           ; BSR set to: 0
 21088  001450  0100               	movlb	0	; () banked
 21089  001452  2BB6               	incf	___fladd@bexp& (0+255),f,b
 21090  001454                     l2233:
 21091                           
 21092                           ; BSR set to: 0
 21093  001454  0100               	movlb	0	; () banked
 21094  001456  51B5               	movf	___fladd@aexp& (0+255),w,b
 21095  001458  0100               	movlb	0	; () banked
 21096  00145A  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 21097  00145C  A0D8               	btfss	status,0,c
 21098  00145E  D7E0               	goto	l2234
 21099  001460                     l2232:
 21100                           
 21101                           ; BSR set to: 0
 21102  001460  0100               	movlb	0	; () banked
 21103  001462  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 21104  001464  D03F               	goto	l10910
 21105                           
 21106                           ; BSR set to: 0
 21107  001466  0100               	movlb	0	; () banked
 21108  001468  51B6               	movf	___fladd@bexp& (0+255),w,b
 21109  00146A  0100               	movlb	0	; () banked
 21110  00146C  A4D8               	btfss	status,2,c
 21111  00146E  D00A               	goto	l10892
 21112                           
 21113                           ; BSR set to: 0
 21114  001470  0E00               	movlw	0
 21115  001472  0100               	movlb	0	; () banked
 21116  001474  6FA4               	movwf	?___fladd& (0+255),b
 21117  001476  0E00               	movlw	0
 21118  001478  6FA5               	movwf	(?___fladd+1)& (0+255),b
 21119  00147A  0E00               	movlw	0
 21120  00147C  6FA6               	movwf	(?___fladd+2)& (0+255),b
 21121  00147E  0E00               	movlw	0
 21122  001480  6FA7               	movwf	(?___fladd+3)& (0+255),b
 21123                           
 21124                           ; BSR set to: 0
 21125  001482  0012               	return	
 21126  001484                     l10892:
 21127                           
 21128                           ; BSR set to: 0
 21129  001484  0100               	movlb	0	; () banked
 21130  001486  51A8               	movf	___fladd@a& (0+255),w,b
 21131  001488  0100               	movlb	0	; () banked
 21132  00148A  27A4               	addwf	___fladd@b& (0+255),f,b
 21133  00148C  0100               	movlb	0	; () banked
 21134  00148E  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 21135  001490  0100               	movlb	0	; () banked
 21136  001492  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 21137  001494  0100               	movlb	0	; () banked
 21138  001496  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 21139  001498  0100               	movlb	0	; () banked
 21140  00149A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 21141  00149C  0100               	movlb	0	; () banked
 21142  00149E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 21143  0014A0  0100               	movlb	0	; () banked
 21144  0014A2  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 21145                           
 21146                           ; BSR set to: 0
 21147  0014A4  0100               	movlb	0	; () banked
 21148  0014A6  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 21149  0014A8  D0CC               	goto	l10946
 21150                           
 21151                           ; BSR set to: 0
 21152  0014AA  0100               	movlb	0	; () banked
 21153  0014AC  A1B7               	btfss	___fladd@grs& (0+255),0,b
 21154  0014AE  D009               	goto	l10900
 21155                           
 21156                           ; BSR set to: 0
 21157  0014B0  0100               	movlb	0	; () banked
 21158  0014B2  90D8               	bcf	status,0,c
 21159  0014B4  33B7               	rrcf	___fladd@grs& (0+255),f,b
 21160  0014B6  0100               	movlb	0	; () banked
 21161  0014B8  51B7               	movf	___fladd@grs& (0+255),w,b
 21162  0014BA  0901               	iorlw	1
 21163  0014BC  0100               	movlb	0	; () banked
 21164  0014BE  6FB7               	movwf	___fladd@grs& (0+255),b
 21165  0014C0  D003               	goto	l10902
 21166  0014C2                     l10900:
 21167                           
 21168                           ; BSR set to: 0
 21169  0014C2  0100               	movlb	0	; () banked
 21170  0014C4  90D8               	bcf	status,0,c
 21171  0014C6  33B7               	rrcf	___fladd@grs& (0+255),f,b
 21172  0014C8                     l10902:
 21173                           
 21174                           ; BSR set to: 0
 21175  0014C8  0100               	movlb	0	; () banked
 21176  0014CA  A1A4               	btfss	___fladd@b& (0+255),0,b
 21177  0014CC  D002               	goto	l10906
 21178                           
 21179                           ; BSR set to: 0
 21180  0014CE  0100               	movlb	0	; () banked
 21181  0014D0  8FB7               	bsf	___fladd@grs& (0+255),7,b
 21182  0014D2                     l10906:
 21183                           
 21184                           ; BSR set to: 0
 21185  0014D2  0100               	movlb	0	; () banked
 21186  0014D4  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 21187  0014D6  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 21188  0014D8  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 21189  0014DA  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 21190  0014DC  33A4               	rrcf	___fladd@b& (0+255),f,b
 21191                           
 21192                           ; BSR set to: 0
 21193  0014DE  0100               	movlb	0	; () banked
 21194  0014E0  2BB6               	incf	___fladd@bexp& (0+255),f,b
 21195                           
 21196                           ; BSR set to: 0
 21197  0014E2  D0AF               	goto	l10946
 21198  0014E4                     l10910:
 21199                           
 21200                           ; BSR set to: 0
 21201  0014E4  0100               	movlb	0	; () banked
 21202  0014E6  51A8               	movf	___fladd@a& (0+255),w,b
 21203  0014E8  0100               	movlb	0	; () banked
 21204  0014EA  5DA4               	subwf	___fladd@b& (0+255),w,b
 21205  0014EC  0100               	movlb	0	; () banked
 21206  0014EE  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 21207  0014F0  0100               	movlb	0	; () banked
 21208  0014F2  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 21209  0014F4  0100               	movlb	0	; () banked
 21210  0014F6  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 21211  0014F8  0100               	movlb	0	; () banked
 21212  0014FA  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 21213  0014FC  0100               	movlb	0	; () banked
 21214  0014FE  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 21215  001500  0A80               	xorlw	128
 21216  001502  0100               	movlb	0	; () banked
 21217  001504  6FAC               	movwf	??___fladd& (0+255),b
 21218  001506  0100               	movlb	0	; () banked
 21219  001508  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 21220  00150A  0A80               	xorlw	128
 21221  00150C  0100               	movlb	0	; () banked
 21222  00150E  59AC               	subwfb	??___fladd& (0+255),w,b
 21223  001510  B0D8               	btfsc	status,0,c
 21224  001512  D050               	goto	l10920
 21225                           
 21226                           ; BSR set to: 0
 21227  001514  C0A4  F0AC         	movff	___fladd@b,??___fladd
 21228  001518  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 21229  00151C  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 21230  001520  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 21231  001524  0100               	movlb	0	; () banked
 21232  001526  1FAC               	comf	??___fladd& (0+255),f,b
 21233  001528  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 21234  00152A  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 21235  00152C  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 21236  00152E  2BAC               	incf	??___fladd& (0+255),f,b
 21237  001530  0E00               	movlw	0
 21238  001532  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 21239  001534  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 21240  001536  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 21241  001538  0100               	movlb	0	; () banked
 21242  00153A  51A8               	movf	___fladd@a& (0+255),w,b
 21243  00153C  0100               	movlb	0	; () banked
 21244  00153E  25AC               	addwf	??___fladd& (0+255),w,b
 21245  001540  0100               	movlb	0	; () banked
 21246  001542  6FB0               	movwf	(??___fladd+4)& (0+255),b
 21247  001544  0100               	movlb	0	; () banked
 21248  001546  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 21249  001548  0100               	movlb	0	; () banked
 21250  00154A  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 21251  00154C  0100               	movlb	0	; () banked
 21252  00154E  6FB1               	movwf	(??___fladd+5)& (0+255),b
 21253  001550  0100               	movlb	0	; () banked
 21254  001552  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 21255  001554  0100               	movlb	0	; () banked
 21256  001556  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 21257  001558  0100               	movlb	0	; () banked
 21258  00155A  6FB2               	movwf	(??___fladd+6)& (0+255),b
 21259  00155C  0100               	movlb	0	; () banked
 21260  00155E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 21261  001560  0100               	movlb	0	; () banked
 21262  001562  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 21263  001564  0100               	movlb	0	; () banked
 21264  001566  6FB3               	movwf	(??___fladd+7)& (0+255),b
 21265  001568  0EFF               	movlw	255
 21266  00156A  0100               	movlb	0	; () banked
 21267  00156C  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 21268  00156E  0100               	movlb	0	; () banked
 21269  001570  6FA4               	movwf	___fladd@b& (0+255),b
 21270  001572  0EFF               	movlw	255
 21271  001574  0100               	movlb	0	; () banked
 21272  001576  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 21273  001578  0100               	movlb	0	; () banked
 21274  00157A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 21275  00157C  0EFF               	movlw	255
 21276  00157E  0100               	movlb	0	; () banked
 21277  001580  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 21278  001582  0100               	movlb	0	; () banked
 21279  001584  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 21280  001586  0EFF               	movlw	255
 21281  001588  0100               	movlb	0	; () banked
 21282  00158A  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 21283  00158C  0100               	movlb	0	; () banked
 21284  00158E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 21285  001590  0E80               	movlw	128
 21286  001592  0100               	movlb	0	; () banked
 21287  001594  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 21288                           
 21289                           ; BSR set to: 0
 21290  001596  0100               	movlb	0	; () banked
 21291  001598  6DB7               	negf	___fladd@grs& (0+255),b
 21292                           
 21293                           ; BSR set to: 0
 21294  00159A  0100               	movlb	0	; () banked
 21295  00159C  51B7               	movf	___fladd@grs& (0+255),w,b
 21296  00159E  0100               	movlb	0	; () banked
 21297  0015A0  A4D8               	btfss	status,2,c
 21298  0015A2  D018               	goto	l2249
 21299                           
 21300                           ; BSR set to: 0
 21301  0015A4  0E01               	movlw	1
 21302  0015A6  0100               	movlb	0	; () banked
 21303  0015A8  27A4               	addwf	___fladd@b& (0+255),f,b
 21304  0015AA  0E00               	movlw	0
 21305  0015AC  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 21306  0015AE  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 21307  0015B0  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 21308                           
 21309                           ; BSR set to: 0
 21310  0015B2  D010               	goto	l2249
 21311  0015B4                     l10920:
 21312                           
 21313                           ; BSR set to: 0
 21314  0015B4  0100               	movlb	0	; () banked
 21315  0015B6  51A8               	movf	___fladd@a& (0+255),w,b
 21316  0015B8  0100               	movlb	0	; () banked
 21317  0015BA  5FA4               	subwf	___fladd@b& (0+255),f,b
 21318  0015BC  0100               	movlb	0	; () banked
 21319  0015BE  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 21320  0015C0  0100               	movlb	0	; () banked
 21321  0015C2  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 21322  0015C4  0100               	movlb	0	; () banked
 21323  0015C6  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 21324  0015C8  0100               	movlb	0	; () banked
 21325  0015CA  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 21326  0015CC  0100               	movlb	0	; () banked
 21327  0015CE  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 21328  0015D0  0100               	movlb	0	; () banked
 21329  0015D2  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 21330  0015D4                     l2249:
 21331                           
 21332                           ; BSR set to: 0
 21333  0015D4  0100               	movlb	0	; () banked
 21334  0015D6  51A4               	movf	___fladd@b& (0+255),w,b
 21335  0015D8  0100               	movlb	0	; () banked
 21336  0015DA  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 21337  0015DC  0100               	movlb	0	; () banked
 21338  0015DE  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 21339  0015E0  0100               	movlb	0	; () banked
 21340  0015E2  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 21341  0015E4  A4D8               	btfss	status,2,c
 21342  0015E6  D02A               	goto	l10944
 21343                           
 21344                           ; BSR set to: 0
 21345  0015E8  0100               	movlb	0	; () banked
 21346  0015EA  51B7               	movf	___fladd@grs& (0+255),w,b
 21347  0015EC  0100               	movlb	0	; () banked
 21348  0015EE  A4D8               	btfss	status,2,c
 21349  0015F0  D025               	goto	l10944
 21350                           
 21351                           ; BSR set to: 0
 21352  0015F2  0E00               	movlw	0
 21353  0015F4  0100               	movlb	0	; () banked
 21354  0015F6  6FA4               	movwf	?___fladd& (0+255),b
 21355  0015F8  0E00               	movlw	0
 21356  0015FA  6FA5               	movwf	(?___fladd+1)& (0+255),b
 21357  0015FC  0E00               	movlw	0
 21358  0015FE  6FA6               	movwf	(?___fladd+2)& (0+255),b
 21359  001600  0E00               	movlw	0
 21360  001602  6FA7               	movwf	(?___fladd+3)& (0+255),b
 21361                           
 21362                           ; BSR set to: 0
 21363  001604  0012               	return	
 21364  001606                     l10928:
 21365                           
 21366                           ; BSR set to: 0
 21367  001606  0100               	movlb	0	; () banked
 21368  001608  90D8               	bcf	status,0,c
 21369  00160A  37A4               	rlcf	___fladd@b& (0+255),f,b
 21370  00160C  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 21371  00160E  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 21372  001610  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 21373                           
 21374                           ; BSR set to: 0
 21375  001612  0100               	movlb	0	; () banked
 21376  001614  AFB7               	btfss	___fladd@grs& (0+255),7,b
 21377  001616  D002               	goto	l10934
 21378                           
 21379                           ; BSR set to: 0
 21380  001618  0100               	movlb	0	; () banked
 21381  00161A  81A4               	bsf	___fladd@b& (0+255),0,b
 21382  00161C                     l10934:
 21383                           
 21384                           ; BSR set to: 0
 21385  00161C  0100               	movlb	0	; () banked
 21386  00161E  A1B7               	btfss	___fladd@grs& (0+255),0,b
 21387  001620  D003               	goto	l10938
 21388                           
 21389                           ; BSR set to: 0
 21390  001622  80D8               	bsf	status,0,c
 21391  001624  0100               	movlb	0	; () banked
 21392  001626  D002               	goto	L11
 21393  001628                     l10938:
 21394                           
 21395                           ; BSR set to: 0
 21396  001628  0100               	movlb	0	; () banked
 21397  00162A  90D8               	bcf	status,0,c
 21398  00162C                     L11:
 21399  00162C  37B7               	rlcf	___fladd@grs& (0+255),f,b
 21400                           
 21401                           ; BSR set to: 0
 21402                           
 21403                           ; BSR set to: 0
 21404  00162E  0100               	movlb	0	; () banked
 21405  001630  51B6               	movf	___fladd@bexp& (0+255),w,b
 21406  001632  0100               	movlb	0	; () banked
 21407  001634  B4D8               	btfsc	status,2,c
 21408  001636  D002               	goto	l10944
 21409                           
 21410                           ; BSR set to: 0
 21411  001638  0100               	movlb	0	; () banked
 21412  00163A  07B6               	decf	___fladd@bexp& (0+255),f,b
 21413  00163C                     l10944:
 21414                           
 21415                           ; BSR set to: 0
 21416  00163C  0100               	movlb	0	; () banked
 21417  00163E  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 21418  001640  D7E2               	goto	l10928
 21419  001642                     l10946:
 21420                           
 21421                           ; BSR set to: 0
 21422  001642  0E00               	movlw	0
 21423  001644  0100               	movlb	0	; () banked
 21424  001646  6FB5               	movwf	___fladd@aexp& (0+255),b
 21425                           
 21426                           ; BSR set to: 0
 21427  001648  0100               	movlb	0	; () banked
 21428  00164A  AFB7               	btfss	___fladd@grs& (0+255),7,b
 21429  00164C  D00D               	goto	l2258
 21430                           
 21431                           ; BSR set to: 0
 21432  00164E  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 21433  001652  0E7F               	movlw	127
 21434  001654  0100               	movlb	0	; () banked
 21435  001656  17AC               	andwf	??___fladd& (0+255),f,b
 21436  001658  A4D8               	btfss	status,2,c
 21437  00165A  D003               	goto	l10954
 21438                           
 21439                           ; BSR set to: 0
 21440                           
 21441                           ; BSR set to: 0
 21442  00165C  0100               	movlb	0	; () banked
 21443  00165E  A1A4               	btfss	___fladd@b& (0+255),0,b
 21444  001660  D003               	goto	l2258
 21445  001662                     l10954:
 21446                           
 21447                           ; BSR set to: 0
 21448  001662  0E01               	movlw	1
 21449  001664  0100               	movlb	0	; () banked
 21450  001666  6FB5               	movwf	___fladd@aexp& (0+255),b
 21451  001668                     l2258:
 21452                           
 21453                           ; BSR set to: 0
 21454  001668  0100               	movlb	0	; () banked
 21455  00166A  51B5               	movf	___fladd@aexp& (0+255),w,b
 21456  00166C  0100               	movlb	0	; () banked
 21457  00166E  B4D8               	btfsc	status,2,c
 21458  001670  D026               	goto	l10964
 21459                           
 21460                           ; BSR set to: 0
 21461  001672  0E01               	movlw	1
 21462  001674  0100               	movlb	0	; () banked
 21463  001676  27A4               	addwf	___fladd@b& (0+255),f,b
 21464  001678  0E00               	movlw	0
 21465  00167A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 21466  00167C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 21467  00167E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 21468                           
 21469                           ; BSR set to: 0
 21470  001680  0100               	movlb	0	; () banked
 21471  001682  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 21472  001684  D01C               	goto	l10964
 21473                           
 21474                           ; BSR set to: 0
 21475  001686  C0A4  F0AC         	movff	___fladd@b,??___fladd
 21476  00168A  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 21477  00168E  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 21478  001692  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 21479  001696  0100               	movlb	0	; () banked
 21480  001698  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 21481  00169A  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 21482  00169C  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 21483  00169E  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 21484  0016A0  33AC               	rrcf	??___fladd& (0+255),f,b
 21485  0016A2  C0AC  F0A4         	movff	??___fladd,___fladd@b
 21486  0016A6  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 21487  0016AA  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 21488  0016AE  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 21489  0016B2  0100               	movlb	0	; () banked
 21490  0016B4  29B6               	incf	___fladd@bexp& (0+255),w,b
 21491  0016B6  B4D8               	btfsc	status,2,c
 21492  0016B8  D002               	goto	l10964
 21493                           
 21494                           ; BSR set to: 0
 21495  0016BA  0100               	movlb	0	; () banked
 21496  0016BC  2BB6               	incf	___fladd@bexp& (0+255),f,b
 21497  0016BE                     l10964:
 21498                           
 21499                           ; BSR set to: 0
 21500  0016BE  0100               	movlb	0	; () banked
 21501  0016C0  29B6               	incf	___fladd@bexp& (0+255),w,b
 21502  0016C2  B4D8               	btfsc	status,2,c
 21503  0016C4  D005               	goto	l10968
 21504                           
 21505                           ; BSR set to: 0
 21506  0016C6  0100               	movlb	0	; () banked
 21507  0016C8  51B6               	movf	___fladd@bexp& (0+255),w,b
 21508  0016CA  0100               	movlb	0	; () banked
 21509  0016CC  A4D8               	btfss	status,2,c
 21510  0016CE  D011               	goto	l10972
 21511  0016D0                     l10968:
 21512                           
 21513                           ; BSR set to: 0
 21514  0016D0  0E00               	movlw	0
 21515  0016D2  0100               	movlb	0	; () banked
 21516  0016D4  6FA4               	movwf	___fladd@b& (0+255),b
 21517  0016D6  0E00               	movlw	0
 21518  0016D8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 21519  0016DA  0E00               	movlw	0
 21520  0016DC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 21521  0016DE  0E00               	movlw	0
 21522  0016E0  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 21523  0016E2  0100               	movlb	0	; () banked
 21524  0016E4  51B6               	movf	___fladd@bexp& (0+255),w,b
 21525  0016E6  0100               	movlb	0	; () banked
 21526  0016E8  A4D8               	btfss	status,2,c
 21527  0016EA  D003               	goto	l10972
 21528                           
 21529                           ; BSR set to: 0
 21530  0016EC  0E00               	movlw	0
 21531  0016EE  0100               	movlb	0	; () banked
 21532  0016F0  6FB4               	movwf	___fladd@signs& (0+255),b
 21533  0016F2                     l10972:
 21534                           
 21535                           ; BSR set to: 0
 21536  0016F2  0100               	movlb	0	; () banked
 21537  0016F4  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 21538  0016F6  D003               	goto	l10976
 21539                           
 21540                           ; BSR set to: 0
 21541  0016F8  0100               	movlb	0	; () banked
 21542  0016FA  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 21543  0016FC  D002               	goto	l10978
 21544  0016FE                     l10976:
 21545                           
 21546                           ; BSR set to: 0
 21547  0016FE  0100               	movlb	0	; () banked
 21548  001700  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 21549  001702                     l10978:
 21550                           
 21551                           ; BSR set to: 0
 21552  001702  0100               	movlb	0	; () banked
 21553  001704  90D8               	bcf	status,0,c
 21554  001706  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 21555  001708  0100               	movlb	0	; () banked
 21556  00170A  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 21557                           
 21558                           ; BSR set to: 0
 21559  00170C  0100               	movlb	0	; () banked
 21560  00170E  AFB4               	btfss	___fladd@signs& (0+255),7,b
 21561  001710  D002               	goto	l10984
 21562                           
 21563                           ; BSR set to: 0
 21564  001712  0100               	movlb	0	; () banked
 21565  001714  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 21566  001716                     l10984:
 21567                           
 21568                           ; BSR set to: 0
 21569  001716  C0A4  F0A4         	movff	___fladd@b,?___fladd
 21570  00171A  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 21571  00171E  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 21572  001722  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 21573  001726  0012               	return	
 21574  001728                     __end_of___fladd:
 21575                           	opt stack 0
 21576                           tosu	equ	0xFFF
 21577                           tosh	equ	0xFFE
 21578                           tosl	equ	0xFFD
 21579                           pclath	equ	0xFFA
 21580                           tblptru	equ	0xFF8
 21581                           tblptrh	equ	0xFF7
 21582                           tblptrl	equ	0xFF6
 21583                           tablat	equ	0xFF5
 21584                           prodh	equ	0xFF4
 21585                           prodl	equ	0xFF3
 21586                           intcon	equ	0xFF2
 21587                           indf0	equ	0xFEF
 21588                           postinc0	equ	0xFEE
 21589                           fsr0h	equ	0xFEA
 21590                           fsr0l	equ	0xFE9
 21591                           wreg	equ	0xFE8
 21592                           postinc1	equ	0xFE6
 21593                           postdec1	equ	0xFE5
 21594                           plusw1	equ	0xFE3
 21595                           fsr1h	equ	0xFE2
 21596                           fsr1l	equ	0xFE1
 21597                           indf2	equ	0xFDF
 21598                           postinc2	equ	0xFDE
 21599                           postdec2	equ	0xFDD
 21600                           plusw2	equ	0xFDB
 21601                           fsr2h	equ	0xFDA
 21602                           fsr2l	equ	0xFD9
 21603                           status	equ	0xFD8
 21604                           
 21605 ;; *************** function _data_init_all *****************
 21606 ;; Defined at:
 21607 ;;		line 383 in file "src/api/data.c"
 21608 ;; Parameters:    Size  Location     Type
 21609 ;;		None
 21610 ;; Auto vars:     Size  Location     Type
 21611 ;;		None
 21612 ;; Return value:  Size  Location     Type
 21613 ;;                  1    wreg      void 
 21614 ;; Registers used:
 21615 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21616 ;; Tracked objects:
 21617 ;;		On entry : 0/0
 21618 ;;		On exit  : 0/0
 21619 ;;		Unchanged: 0/0
 21620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21625 ;;Total ram usage:        0 bytes
 21626 ;; Hardware stack levels used:    1
 21627 ;; Hardware stack levels required when called:    9
 21628 ;; This function calls:
 21629 ;;		_calib_data_init_diff_pr
 21630 ;;		_calib_data_init_pr
 21631 ;;		_data_sys_init
 21632 ;; This function is called by:
 21633 ;;		_main
 21634 ;; This function uses a non-reentrant model
 21635 ;;
 21636                           
 21637                           	psect	text99
 21638  007914                     __ptext99:
 21639                           	opt stack 0
 21640  007914                     _data_init_all:
 21641                           	opt stack 21
 21642                           
 21643                           ;data.c: 385: data_sys_init();
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;incstack = 0
 21647  007914  EC35  F023         	call	_data_sys_init	;wreg free
 21648                           
 21649                           ;data.c: 386: calib_data_init_diff_pr();
 21650  007918  ECBD  F02A         	call	_calib_data_init_diff_pr	;wreg free
 21651                           
 21652                           ;data.c: 387: calib_data_init_pr();
 21653  00791C  EC3F  F02A         	call	_calib_data_init_pr	;wreg free
 21654  007920  0012               	return		;funcret
 21655  007922                     __end_of_data_init_all:
 21656                           	opt stack 0
 21657                           tosu	equ	0xFFF
 21658                           tosh	equ	0xFFE
 21659                           tosl	equ	0xFFD
 21660                           pclath	equ	0xFFA
 21661                           tblptru	equ	0xFF8
 21662                           tblptrh	equ	0xFF7
 21663                           tblptrl	equ	0xFF6
 21664                           tablat	equ	0xFF5
 21665                           prodh	equ	0xFF4
 21666                           prodl	equ	0xFF3
 21667                           intcon	equ	0xFF2
 21668                           indf0	equ	0xFEF
 21669                           postinc0	equ	0xFEE
 21670                           fsr0h	equ	0xFEA
 21671                           fsr0l	equ	0xFE9
 21672                           wreg	equ	0xFE8
 21673                           postinc1	equ	0xFE6
 21674                           postdec1	equ	0xFE5
 21675                           plusw1	equ	0xFE3
 21676                           fsr1h	equ	0xFE2
 21677                           fsr1l	equ	0xFE1
 21678                           indf2	equ	0xFDF
 21679                           postinc2	equ	0xFDE
 21680                           postdec2	equ	0xFDD
 21681                           plusw2	equ	0xFDB
 21682                           fsr2h	equ	0xFDA
 21683                           fsr2l	equ	0xFD9
 21684                           status	equ	0xFD8
 21685                           
 21686 ;; *************** function _data_sys_init *****************
 21687 ;; Defined at:
 21688 ;;		line 174 in file "src/api/data.c"
 21689 ;; Parameters:    Size  Location     Type
 21690 ;;		None
 21691 ;; Auto vars:     Size  Location     Type
 21692 ;;  buf             2  129[BANK0 ] PTR unsigned char 
 21693 ;;		 -> globleBuffer0(256), 
 21694 ;;  stp             2  127[BANK0 ] PTR struct .
 21695 ;;		 -> globleBuffer0(256), 
 21696 ;;  ret             1  126[BANK0 ] unsigned char 
 21697 ;; Return value:  Size  Location     Type
 21698 ;;                  1    wreg      unsigned char 
 21699 ;; Registers used:
 21700 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21701 ;; Tracked objects:
 21702 ;;		On entry : 0/0
 21703 ;;		On exit  : 0/0
 21704 ;;		Unchanged: 0/0
 21705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21707 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21709 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21710 ;;Total ram usage:        5 bytes
 21711 ;; Hardware stack levels used:    1
 21712 ;; Hardware stack levels required when called:    7
 21713 ;; This function calls:
 21714 ;;		_crc_append
 21715 ;;		_crc_verify
 21716 ;;		_data_sys_cal_v1
 21717 ;;		_data_sys_cal_v2
 21718 ;;		_m_flash_read
 21719 ;;		_m_flash_write
 21720 ;;		_m_mem_cpy_len
 21721 ;; This function is called by:
 21722 ;;		_data_init_all
 21723 ;; This function uses a non-reentrant model
 21724 ;;
 21725                           
 21726                           	psect	text100
 21727  00466A                     __ptext100:
 21728                           	opt stack 0
 21729  00466A                     _data_sys_init:
 21730                           	opt stack 22
 21731                           
 21732                           ;data.c: 176: uint8_t ret;
 21733                           ;data.c: 177: uint8_t* buf=globleBuffer0;
 21734                           
 21735                           ;incstack = 0
 21736  00466A  0E00               	movlw	low _globleBuffer0
 21737  00466C  0100               	movlb	0	; () banked
 21738  00466E  6FE1               	movwf	data_sys_init@buf& (0+255),b
 21739  004670  0E04               	movlw	high _globleBuffer0
 21740  004672  0100               	movlb	0	; () banked
 21741  004674  6FE2               	movwf	(data_sys_init@buf+1)& (0+255),b
 21742                           
 21743                           ;data.c: 178: st_sysDataDef* stp=(st_sysDataDef*)buf;
 21744  004676  C0E1  F0DF         	movff	data_sys_init@buf,data_sys_init@stp
 21745  00467A  C0E2  F0E0         	movff	data_sys_init@buf+1,data_sys_init@stp+1
 21746                           
 21747                           ; BSR set to: 0
 21748                           ;data.c: 180: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 21749                           
 21750                           ; BSR set to: 0
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;	Return value of _data_sys_init is never used
 21754                           
 21755                           ;data.c: 179: if(sizeof(globleBuffer0)<sizeof(st_sysDataDef))return 0;
 21756  00467E  0E00               	movlw	0
 21757  004680  0100               	movlb	0	; () banked
 21758  004682  6F60               	movwf	m_flash_read@addr& (0+255),b
 21759  004684  0EF4               	movlw	244
 21760  004686  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 21761  004688  0E00               	movlw	0
 21762  00468A  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 21763  00468C  0E00               	movlw	0
 21764  00468E  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 21765  004690  C0E1  F064         	movff	data_sys_init@buf,m_flash_read@buf
 21766  004694  C0E2  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 21767  004698  0E00               	movlw	0
 21768  00469A  0100               	movlb	0	; () banked
 21769  00469C  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 21770  00469E  0E96               	movlw	150
 21771  0046A0  6F66               	movwf	m_flash_read@len& (0+255),b
 21772  0046A2  ECEF  F033         	call	_m_flash_read	;wreg free
 21773                           
 21774                           ;data.c: 181: ret=crc_verify(buf,sizeof(st_sysDataDef));
 21775  0046A6  C0E1  F06C         	movff	data_sys_init@buf,crc_verify@message
 21776  0046AA  C0E2  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 21777  0046AE  0E00               	movlw	0
 21778  0046B0  0100               	movlb	0	; () banked
 21779  0046B2  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 21780  0046B4  0E96               	movlw	150
 21781  0046B6  6F6E               	movwf	crc_verify@n& (0+255),b
 21782  0046B8  ECE6  F032         	call	_crc_verify	;wreg free
 21783  0046BC  0100               	movlb	0	; () banked
 21784  0046BE  6FDE               	movwf	data_sys_init@ret& (0+255),b
 21785                           
 21786                           ; BSR set to: 0
 21787                           ;data.c: 182: if(!ret){
 21788  0046C0  0100               	movlb	0	; () banked
 21789  0046C2  51DE               	movf	data_sys_init@ret& (0+255),w,b
 21790  0046C4  0100               	movlb	0	; () banked
 21791  0046C6  A4D8               	btfss	status,2,c
 21792  0046C8  0012               	return	
 21793                           
 21794                           ; BSR set to: 0
 21795                           ;data.c: 183: m_mem_cpy_len(buf,(uint8_t*)(&defultSystemData),sizeof(st_sysDataDef));
 21796  0046CA  C0E1  F060         	movff	data_sys_init@buf,m_mem_cpy_len@d
 21797  0046CE  C0E2  F061         	movff	data_sys_init@buf+1,m_mem_cpy_len@d+1
 21798  0046D2  0E0D               	movlw	low _defultSystemData
 21799  0046D4  0100               	movlb	0	; () banked
 21800  0046D6  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 21801  0046D8  0EFF               	movlw	high _defultSystemData
 21802  0046DA  0100               	movlb	0	; () banked
 21803  0046DC  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 21804  0046DE  0E00               	movlw	0
 21805  0046E0  0100               	movlb	0	; () banked
 21806  0046E2  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 21807  0046E4  0E96               	movlw	150
 21808  0046E6  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 21809  0046E8  EC88  F038         	call	_m_mem_cpy_len	;wreg free
 21810                           
 21811                           ;data.c: 184: stp->V1=data_sys_cal_v1(stp);
 21812  0046EC  C0DF  F0C2         	movff	data_sys_init@stp,data_sys_cal_v1@stp
 21813  0046F0  C0E0  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v1@stp+1
 21814  0046F4  EC75  F01A         	call	_data_sys_cal_v1	;wreg free
 21815  0046F8  0100               	movlb	0	; () banked
 21816  0046FA  EE20 F010          	lfsr	2,16
 21817  0046FE  51DF               	movf	data_sys_init@stp& (0+255),w,b
 21818  004700  26D9               	addwf	fsr2l,f,c
 21819  004702  51E0               	movf	(data_sys_init@stp+1)& (0+255),w,b
 21820  004704  22DA               	addwfc	fsr2h,f,c
 21821  004706  0100               	movlb	0	; () banked
 21822  004708  C0C2  FFDE         	movff	?_data_sys_cal_v1,postinc2
 21823  00470C  0100               	movlb	0	; () banked
 21824  00470E  C0C3  FFDE         	movff	?_data_sys_cal_v1+1,postinc2
 21825  004712  0100               	movlb	0	; () banked
 21826  004714  C0C4  FFDE         	movff	?_data_sys_cal_v1+2,postinc2
 21827  004718  0100               	movlb	0	; () banked
 21828  00471A  C0C5  FFDE         	movff	?_data_sys_cal_v1+3,postinc2
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;data.c: 185: stp->V2=data_sys_cal_v2(stp);
 21832  00471E  C0DF  F0C2         	movff	data_sys_init@stp,data_sys_cal_v2@stp
 21833  004722  C0E0  F0C3         	movff	data_sys_init@stp+1,data_sys_cal_v2@stp+1
 21834  004726  ECE9  F023         	call	_data_sys_cal_v2	;wreg free
 21835  00472A  0100               	movlb	0	; () banked
 21836  00472C  EE20 F014          	lfsr	2,20
 21837  004730  51DF               	movf	data_sys_init@stp& (0+255),w,b
 21838  004732  26D9               	addwf	fsr2l,f,c
 21839  004734  51E0               	movf	(data_sys_init@stp+1)& (0+255),w,b
 21840  004736  22DA               	addwfc	fsr2h,f,c
 21841  004738  0100               	movlb	0	; () banked
 21842  00473A  C0C2  FFDE         	movff	?_data_sys_cal_v2,postinc2
 21843  00473E  0100               	movlb	0	; () banked
 21844  004740  C0C3  FFDE         	movff	?_data_sys_cal_v2+1,postinc2
 21845  004744  0100               	movlb	0	; () banked
 21846  004746  C0C4  FFDE         	movff	?_data_sys_cal_v2+2,postinc2
 21847  00474A  0100               	movlb	0	; () banked
 21848  00474C  C0C5  FFDE         	movff	?_data_sys_cal_v2+3,postinc2
 21849                           
 21850                           ; BSR set to: 0
 21851                           ;data.c: 186: crc_append(buf,sizeof(st_sysDataDef)-2);
 21852  004750  C0E1  F06C         	movff	data_sys_init@buf,crc_append@message
 21853  004754  C0E2  F06D         	movff	data_sys_init@buf+1,crc_append@message+1
 21854  004758  0E00               	movlw	0
 21855  00475A  0100               	movlb	0	; () banked
 21856  00475C  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 21857  00475E  0E94               	movlw	148
 21858  004760  6F6E               	movwf	crc_append@n& (0+255),b
 21859  004762  EC2E  F036         	call	_crc_append	;wreg free
 21860                           
 21861                           ;data.c: 187: m_flash_write(0xf400,buf,sizeof(st_sysDataDef));
 21862  004766  0E00               	movlw	0
 21863  004768  0100               	movlb	0	; () banked
 21864  00476A  6F6E               	movwf	m_flash_write@addr& (0+255),b
 21865  00476C  0EF4               	movlw	244
 21866  00476E  6F6F               	movwf	(m_flash_write@addr+1)& (0+255),b
 21867  004770  0E00               	movlw	0
 21868  004772  6F70               	movwf	(m_flash_write@addr+2)& (0+255),b
 21869  004774  0E00               	movlw	0
 21870  004776  6F71               	movwf	(m_flash_write@addr+3)& (0+255),b
 21871  004778  C0E1  F072         	movff	data_sys_init@buf,m_flash_write@buf
 21872  00477C  C0E2  F073         	movff	data_sys_init@buf+1,m_flash_write@buf+1
 21873  004780  0E00               	movlw	0
 21874  004782  0100               	movlb	0	; () banked
 21875  004784  6F75               	movwf	(m_flash_write@len+1)& (0+255),b
 21876  004786  0E96               	movlw	150
 21877  004788  6F74               	movwf	m_flash_write@len& (0+255),b
 21878  00478A  ECF4  F025         	call	_m_flash_write	;wreg free
 21879                           
 21880                           ;data.c: 188: m_flash_read(0xf400,buf,sizeof(st_sysDataDef));
 21881  00478E  0E00               	movlw	0
 21882  004790  0100               	movlb	0	; () banked
 21883  004792  6F60               	movwf	m_flash_read@addr& (0+255),b
 21884  004794  0EF4               	movlw	244
 21885  004796  6F61               	movwf	(m_flash_read@addr+1)& (0+255),b
 21886  004798  0E00               	movlw	0
 21887  00479A  6F62               	movwf	(m_flash_read@addr+2)& (0+255),b
 21888  00479C  0E00               	movlw	0
 21889  00479E  6F63               	movwf	(m_flash_read@addr+3)& (0+255),b
 21890  0047A0  C0E1  F064         	movff	data_sys_init@buf,m_flash_read@buf
 21891  0047A4  C0E2  F065         	movff	data_sys_init@buf+1,m_flash_read@buf+1
 21892  0047A8  0E00               	movlw	0
 21893  0047AA  0100               	movlb	0	; () banked
 21894  0047AC  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 21895  0047AE  0E96               	movlw	150
 21896  0047B0  6F66               	movwf	m_flash_read@len& (0+255),b
 21897  0047B2  ECEF  F033         	call	_m_flash_read	;wreg free
 21898                           
 21899                           ;data.c: 189: ret=crc_verify(buf,sizeof(st_sysDataDef));
 21900  0047B6  C0E1  F06C         	movff	data_sys_init@buf,crc_verify@message
 21901  0047BA  C0E2  F06D         	movff	data_sys_init@buf+1,crc_verify@message+1
 21902  0047BE  0E00               	movlw	0
 21903  0047C0  0100               	movlb	0	; () banked
 21904  0047C2  6F6F               	movwf	(crc_verify@n+1)& (0+255),b
 21905  0047C4  0E96               	movlw	150
 21906  0047C6  6F6E               	movwf	crc_verify@n& (0+255),b
 21907  0047C8  ECE6  F032         	call	_crc_verify	;wreg free
 21908  0047CC  0100               	movlb	0	; () banked
 21909  0047CE  6FDE               	movwf	data_sys_init@ret& (0+255),b
 21910                           
 21911                           ; BSR set to: 0
 21912  0047D0  0012               	return	
 21913  0047D2                     __end_of_data_sys_init:
 21914                           	opt stack 0
 21915                           tosu	equ	0xFFF
 21916                           tosh	equ	0xFFE
 21917                           tosl	equ	0xFFD
 21918                           pclath	equ	0xFFA
 21919                           tblptru	equ	0xFF8
 21920                           tblptrh	equ	0xFF7
 21921                           tblptrl	equ	0xFF6
 21922                           tablat	equ	0xFF5
 21923                           prodh	equ	0xFF4
 21924                           prodl	equ	0xFF3
 21925                           intcon	equ	0xFF2
 21926                           indf0	equ	0xFEF
 21927                           postinc0	equ	0xFEE
 21928                           fsr0h	equ	0xFEA
 21929                           fsr0l	equ	0xFE9
 21930                           wreg	equ	0xFE8
 21931                           postinc1	equ	0xFE6
 21932                           postdec1	equ	0xFE5
 21933                           plusw1	equ	0xFE3
 21934                           fsr1h	equ	0xFE2
 21935                           fsr1l	equ	0xFE1
 21936                           indf2	equ	0xFDF
 21937                           postinc2	equ	0xFDE
 21938                           postdec2	equ	0xFDD
 21939                           plusw2	equ	0xFDB
 21940                           fsr2h	equ	0xFDA
 21941                           fsr2l	equ	0xFD9
 21942                           status	equ	0xFD8
 21943                           
 21944 ;; *************** function _m_flash_write *****************
 21945 ;; Defined at:
 21946 ;;		line 63 in file "src/driver/m_flash.c"
 21947 ;; Parameters:    Size  Location     Type
 21948 ;;  addr            4   14[BANK0 ] unsigned long 
 21949 ;;  buf             2   18[BANK0 ] PTR unsigned char 
 21950 ;;		 -> m_flash_test@tmp(16), globleBuffer0(256), 
 21951 ;;  len             2   20[BANK0 ] unsigned int 
 21952 ;; Auto vars:     Size  Location     Type
 21953 ;;  pageAddr        4   26[BANK0 ] unsigned long 
 21954 ;;  t16             2   33[BANK0 ] unsigned int 
 21955 ;;  tmpBuf          2   31[BANK0 ] PTR unsigned char 
 21956 ;;		 -> globleBuffer0(256), 
 21957 ;;  j               1   30[BANK0 ] unsigned char 
 21958 ;;  i               1   25[BANK0 ] unsigned char 
 21959 ;;  writeTimes      1   24[BANK0 ] unsigned char 
 21960 ;; Return value:  Size  Location     Type
 21961 ;;                  2   14[BANK0 ] unsigned int 
 21962 ;; Registers used:
 21963 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21964 ;; Tracked objects:
 21965 ;;		On entry : 0/0
 21966 ;;		On exit  : 0/0
 21967 ;;		Unchanged: 0/0
 21968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21969 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21970 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21971 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21972 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21973 ;;Total ram usage:       21 bytes
 21974 ;; Hardware stack levels used:    1
 21975 ;; Hardware stack levels required when called:    6
 21976 ;; This function calls:
 21977 ;;		_m_flash_erase
 21978 ;;		_m_flash_read
 21979 ;;		_m_flash_unlock
 21980 ;;		_m_mem_cpy_len
 21981 ;; This function is called by:
 21982 ;;		_data_sys_init
 21983 ;;		_data_sys_save
 21984 ;;		_m_flash_test
 21985 ;; This function uses a non-reentrant model
 21986 ;;
 21987                           
 21988                           	psect	text101
 21989  004BE8                     __ptext101:
 21990                           	opt stack 0
 21991  004BE8                     _m_flash_write:
 21992                           	opt stack 22
 21993                           
 21994                           ;m_flash.c: 65: uint8_t i,j,writeTimes;
 21995                           ;m_flash.c: 66: uint32_t pageAddr;
 21996                           ;m_flash.c: 67: uint16_t t16;
 21997                           ;m_flash.c: 68: uint8_t* tmpBuf=globleBuffer0;
 21998                           
 21999                           ; BSR set to: 0
 22000                           ;incstack = 0
 22001  004BE8  0E00               	movlw	low _globleBuffer0
 22002  004BEA  0100               	movlb	0	; () banked
 22003  004BEC  6F7F               	movwf	m_flash_write@tmpBuf& (0+255),b
 22004  004BEE  0E04               	movlw	high _globleBuffer0
 22005  004BF0  0100               	movlb	0	; () banked
 22006  004BF2  6F80               	movwf	(m_flash_write@tmpBuf+1)& (0+255),b
 22007                           
 22008                           ;m_flash.c: 70: t16=addr & ((1024)-1);
 22009  004BF4  0EFF               	movlw	255
 22010  004BF6  0100               	movlb	0	; () banked
 22011  004BF8  156E               	andwf	m_flash_write@addr& (0+255),w,b
 22012  004BFA  0100               	movlb	0	; () banked
 22013  004BFC  6F81               	movwf	m_flash_write@t16& (0+255),b
 22014  004BFE  0E03               	movlw	3
 22015  004C00  0100               	movlb	0	; () banked
 22016  004C02  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 22017  004C04  0100               	movlb	0	; () banked
 22018  004C06  6F82               	movwf	(m_flash_write@t16+1)& (0+255),b
 22019                           
 22020                           ;m_flash.c: 71: if(t16+len>(64)*4)return 0;
 22021  004C08  0100               	movlb	0	; () banked
 22022  004C0A  5174               	movf	m_flash_write@len& (0+255),w,b
 22023  004C0C  0100               	movlb	0	; () banked
 22024  004C0E  2581               	addwf	m_flash_write@t16& (0+255),w,b
 22025  004C10  0100               	movlb	0	; () banked
 22026  004C12  6F76               	movwf	??_m_flash_write& (0+255),b
 22027  004C14  0100               	movlb	0	; () banked
 22028  004C16  5175               	movf	(m_flash_write@len+1)& (0+255),w,b
 22029  004C18  0100               	movlb	0	; () banked
 22030  004C1A  2182               	addwfc	(m_flash_write@t16+1)& (0+255),w,b
 22031  004C1C  0100               	movlb	0	; () banked
 22032  004C1E  6F77               	movwf	(??_m_flash_write+1)& (0+255),b
 22033  004C20  0100               	movlb	0	; () banked
 22034  004C22  0576               	decf	??_m_flash_write& (0+255),w,b
 22035  004C24  0E01               	movlw	1
 22036  004C26  0100               	movlb	0	; () banked
 22037  004C28  5977               	subwfb	(??_m_flash_write+1)& (0+255),w,b
 22038  004C2A  B0D8               	btfsc	status,0,c
 22039  004C2C  0012               	return	
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;m_flash.c: 73: pageAddr=addr & ~((1024)-1);
 22043                           
 22044                           ; BSR set to: 0
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;	Return value of _m_flash_write is never used
 22048  004C2E  0E00               	movlw	0
 22049  004C30  0100               	movlb	0	; () banked
 22050  004C32  156E               	andwf	m_flash_write@addr& (0+255),w,b
 22051  004C34  0100               	movlb	0	; () banked
 22052  004C36  6F7A               	movwf	m_flash_write@pageAddr& (0+255),b
 22053  004C38  0EFC               	movlw	252
 22054  004C3A  0100               	movlb	0	; () banked
 22055  004C3C  156F               	andwf	(m_flash_write@addr+1)& (0+255),w,b
 22056  004C3E  0100               	movlb	0	; () banked
 22057  004C40  6F7B               	movwf	(m_flash_write@pageAddr+1)& (0+255),b
 22058  004C42  0EFF               	movlw	255
 22059  004C44  0100               	movlb	0	; () banked
 22060  004C46  1570               	andwf	(m_flash_write@addr+2)& (0+255),w,b
 22061  004C48  0100               	movlb	0	; () banked
 22062  004C4A  6F7C               	movwf	(m_flash_write@pageAddr+2)& (0+255),b
 22063  004C4C  0EFF               	movlw	255
 22064  004C4E  0100               	movlb	0	; () banked
 22065  004C50  1571               	andwf	(m_flash_write@addr+3)& (0+255),w,b
 22066  004C52  0100               	movlb	0	; () banked
 22067  004C54  6F7D               	movwf	(m_flash_write@pageAddr+3)& (0+255),b
 22068                           
 22069                           ; BSR set to: 0
 22070                           ;m_flash.c: 74: m_flash_read(pageAddr,tmpBuf,(64)*4);
 22071  004C56  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_read@addr
 22072  004C5A  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_read@addr+1
 22073  004C5E  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_read@addr+2
 22074  004C62  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_read@addr+3
 22075  004C66  C07F  F064         	movff	m_flash_write@tmpBuf,m_flash_read@buf
 22076  004C6A  C080  F065         	movff	m_flash_write@tmpBuf+1,m_flash_read@buf+1
 22077  004C6E  0E01               	movlw	1
 22078  004C70  0100               	movlb	0	; () banked
 22079  004C72  6F67               	movwf	(m_flash_read@len+1)& (0+255),b
 22080  004C74  0E00               	movlw	0
 22081  004C76  6F66               	movwf	m_flash_read@len& (0+255),b
 22082  004C78  ECEF  F033         	call	_m_flash_read	;wreg free
 22083                           
 22084                           ;m_flash.c: 75: m_mem_cpy_len(tmpBuf+t16,buf,len);
 22085  004C7C  0100               	movlb	0	; () banked
 22086  004C7E  5181               	movf	m_flash_write@t16& (0+255),w,b
 22087  004C80  0100               	movlb	0	; () banked
 22088  004C82  257F               	addwf	m_flash_write@tmpBuf& (0+255),w,b
 22089  004C84  0100               	movlb	0	; () banked
 22090  004C86  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 22091  004C88  0100               	movlb	0	; () banked
 22092  004C8A  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 22093  004C8C  0100               	movlb	0	; () banked
 22094  004C8E  2180               	addwfc	(m_flash_write@tmpBuf+1)& (0+255),w,b
 22095  004C90  0100               	movlb	0	; () banked
 22096  004C92  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 22097  004C94  C072  F062         	movff	m_flash_write@buf,m_mem_cpy_len@s
 22098  004C98  C073  F063         	movff	m_flash_write@buf+1,m_mem_cpy_len@s+1
 22099  004C9C  C074  F064         	movff	m_flash_write@len,m_mem_cpy_len@len
 22100  004CA0  C075  F065         	movff	m_flash_write@len+1,m_mem_cpy_len@len+1
 22101  004CA4  EC88  F038         	call	_m_mem_cpy_len	;wreg free
 22102                           
 22103                           ;m_flash.c: 77: m_flash_erase(pageAddr);
 22104  004CA8  C07A  F060         	movff	m_flash_write@pageAddr,m_flash_erase@addr
 22105  004CAC  C07B  F061         	movff	m_flash_write@pageAddr+1,m_flash_erase@addr+1
 22106  004CB0  C07C  F062         	movff	m_flash_write@pageAddr+2,m_flash_erase@addr+2
 22107  004CB4  C07D  F063         	movff	m_flash_write@pageAddr+3,m_flash_erase@addr+3
 22108  004CB8  EC05  F038         	call	_m_flash_erase	;wreg free
 22109                           
 22110                           ;m_flash.c: 79: writeTimes=(64)*4/(64);
 22111  004CBC  0E04               	movlw	4
 22112  004CBE  0100               	movlb	0	; () banked
 22113  004CC0  6F78               	movwf	m_flash_write@writeTimes& (0+255),b
 22114                           
 22115                           ; BSR set to: 0
 22116                           ;m_flash.c: 80: t16=(uint16_t)(&tmpBuf);
 22117  004CC2  0E00               	movlw	high m_flash_write@tmpBuf
 22118  004CC4  0100               	movlb	0	; () banked
 22119  004CC6  6F82               	movwf	(m_flash_write@t16+1)& (0+255),b
 22120  004CC8  0E7F               	movlw	low m_flash_write@tmpBuf
 22121  004CCA  6F81               	movwf	m_flash_write@t16& (0+255),b
 22122                           
 22123                           ; BSR set to: 0
 22124                           ;m_flash.c: 82: FSR0L=(uint8_t)(t16&0x00ff);
 22125  004CCC  C081  FFE9         	movff	m_flash_write@t16,fsr0l	;volatile
 22126                           
 22127                           ; BSR set to: 0
 22128                           ;m_flash.c: 83: t16>>=8;
 22129  004CD0  0100               	movlb	0	; () banked
 22130  004CD2  5182               	movf	(m_flash_write@t16+1)& (0+255),w,b
 22131  004CD4  6F81               	movwf	m_flash_write@t16& (0+255),b
 22132  004CD6  6B82               	clrf	(m_flash_write@t16+1)& (0+255),b
 22133                           
 22134                           ; BSR set to: 0
 22135                           ;m_flash.c: 84: FSR0H=(uint8_t)(t16&0x00ff);
 22136  004CD8  C081  FFEA         	movff	m_flash_write@t16,fsr0h	;volatile
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;m_flash.c: 86: for(i=0;i<writeTimes;i++){
 22140  004CDC  0E00               	movlw	0
 22141  004CDE  0100               	movlb	0	; () banked
 22142  004CE0  6F79               	movwf	m_flash_write@i& (0+255),b
 22143  004CE2  D017               	goto	l12110
 22144  004CE4                     l12094:
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;m_flash.c: 87: for(j=0;j<(64);j++){
 22148  004CE4  0E00               	movlw	0
 22149  004CE6  0100               	movlb	0	; () banked
 22150  004CE8  6F7E               	movwf	m_flash_write@j& (0+255),b
 22151  004CEA                     l12096:
 22152                           
 22153                           ; BSR set to: 0
 22154  004CEA  0E3F               	movlw	63
 22155  004CEC  0100               	movlb	0	; () banked
 22156  004CEE  657E               	cpfsgt	m_flash_write@j& (0+255),b
 22157  004CF0  D001               	goto	l1607
 22158  004CF2  D007               	goto	l1608
 22159  004CF4                     l1607:
 22160                           
 22161                           ; BSR set to: 0
 22162  004CF4  CFEE FFE8          	movff	postinc0,wreg	;# 
 22163  004CF8  6EF5               	movwf	tablat,c	;# 
 22164  004CFA  000D               	tblwt		*+	;# 
 22165  004CFC  0100               	movlb	0	; () banked
 22166  004CFE  2B7E               	incf	m_flash_write@j& (0+255),f,b
 22167  004D00  D7F4               	goto	l12096
 22168  004D02                     l1608:
 22169                           
 22170                           ; BSR set to: 0
 22171  004D02  000A               	tblrd		*-	;# 
 22172                           
 22173                           ;m_flash.c: 93: EECON1bits.WREN=1;
 22174  004D04  84A6               	bsf	4006,2,c	;volatile
 22175                           
 22176                           ;m_flash.c: 94: m_flash_unlock();
 22177  004D06  EC3E  F03C         	call	_m_flash_unlock	;wreg free
 22178                           
 22179                           ;m_flash.c: 95: EECON1bits.WREN=0;
 22180  004D0A  94A6               	bcf	4006,2,c	;volatile
 22181  004D0C  000D               	tblwt		*+	;# 
 22182  004D0E  0100               	movlb	0	; () banked
 22183  004D10  2B79               	incf	m_flash_write@i& (0+255),f,b
 22184  004D12                     l12110:
 22185                           
 22186                           ; BSR set to: 0
 22187  004D12  0100               	movlb	0	; () banked
 22188  004D14  5178               	movf	m_flash_write@writeTimes& (0+255),w,b
 22189  004D16  0100               	movlb	0	; () banked
 22190  004D18  5D79               	subwf	m_flash_write@i& (0+255),w,b
 22191  004D1A  B0D8               	btfsc	status,0,c
 22192  004D1C  0012               	return	
 22193  004D1E  D7E2               	goto	l12094
 22194  004D20                     __end_of_m_flash_write:
 22195                           	opt stack 0
 22196                           tosu	equ	0xFFF
 22197                           tosh	equ	0xFFE
 22198                           tosl	equ	0xFFD
 22199                           pclath	equ	0xFFA
 22200                           tblptru	equ	0xFF8
 22201                           tblptrh	equ	0xFF7
 22202                           tblptrl	equ	0xFF6
 22203                           tablat	equ	0xFF5
 22204                           prodh	equ	0xFF4
 22205                           prodl	equ	0xFF3
 22206                           intcon	equ	0xFF2
 22207                           indf0	equ	0xFEF
 22208                           postinc0	equ	0xFEE
 22209                           fsr0h	equ	0xFEA
 22210                           fsr0l	equ	0xFE9
 22211                           wreg	equ	0xFE8
 22212                           postinc1	equ	0xFE6
 22213                           postdec1	equ	0xFE5
 22214                           plusw1	equ	0xFE3
 22215                           fsr1h	equ	0xFE2
 22216                           fsr1l	equ	0xFE1
 22217                           indf2	equ	0xFDF
 22218                           postinc2	equ	0xFDE
 22219                           postdec2	equ	0xFDD
 22220                           plusw2	equ	0xFDB
 22221                           fsr2h	equ	0xFDA
 22222                           fsr2l	equ	0xFD9
 22223                           status	equ	0xFD8
 22224                           
 22225 ;; *************** function _m_flash_read *****************
 22226 ;; Defined at:
 22227 ;;		line 46 in file "src/driver/m_flash.c"
 22228 ;; Parameters:    Size  Location     Type
 22229 ;;  addr            4    0[BANK0 ] unsigned long 
 22230 ;;  buf             2    4[BANK0 ] PTR unsigned char 
 22231 ;;		 -> m_flash_test@tmp(16), globleBuffer0(256), 
 22232 ;;  len             2    6[BANK0 ] unsigned int 
 22233 ;; Auto vars:     Size  Location     Type
 22234 ;;  t32             4   10[BANK0 ] unsigned long 
 22235 ;;  i               2    8[BANK0 ] unsigned int 
 22236 ;; Return value:  Size  Location     Type
 22237 ;;                  2    0[BANK0 ] unsigned int 
 22238 ;; Registers used:
 22239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22240 ;; Tracked objects:
 22241 ;;		On entry : 0/0
 22242 ;;		On exit  : 0/0
 22243 ;;		Unchanged: 0/0
 22244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22245 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22246 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22248 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22249 ;;Total ram usage:       14 bytes
 22250 ;; Hardware stack levels used:    1
 22251 ;; Hardware stack levels required when called:    4
 22252 ;; This function calls:
 22253 ;;		Nothing
 22254 ;; This function is called by:
 22255 ;;		_data_sys_init
 22256 ;;		_m_flash_write
 22257 ;;		_data_sys_save
 22258 ;;		_m_flash_test
 22259 ;; This function uses a non-reentrant model
 22260 ;;
 22261                           
 22262                           	psect	text102
 22263  0067DE                     __ptext102:
 22264                           	opt stack 0
 22265  0067DE                     _m_flash_read:
 22266                           	opt stack 23
 22267                           
 22268                           ;m_flash.c: 48: uint16_t i;
 22269                           ;m_flash.c: 49: uint32_t t32=addr;
 22270                           
 22271                           ; BSR set to: 0
 22272                           ;incstack = 0
 22273  0067DE  C060  F06A         	movff	m_flash_read@addr,m_flash_read@t32
 22274  0067E2  C061  F06B         	movff	m_flash_read@addr+1,m_flash_read@t32+1
 22275  0067E6  C062  F06C         	movff	m_flash_read@addr+2,m_flash_read@t32+2
 22276  0067EA  C063  F06D         	movff	m_flash_read@addr+3,m_flash_read@t32+3
 22277                           
 22278                           ;m_flash.c: 51: TBLPTRL=(uint8_t)(t32 & 0xfful);
 22279  0067EE  C06A  FFF6         	movff	m_flash_read@t32,tblptrl	;volatile
 22280                           
 22281                           ;m_flash.c: 52: t32>>=8;
 22282  0067F2  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 22283  0067F6  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 22284  0067FA  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 22285  0067FE  0100               	movlb	0	; () banked
 22286  006800  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 22287                           
 22288                           ; BSR set to: 0
 22289                           ;m_flash.c: 53: TBLPTRH=(uint8_t)(t32 & 0xfful);
 22290  006802  C06A  FFF7         	movff	m_flash_read@t32,tblptrh	;volatile
 22291                           
 22292                           ;m_flash.c: 54: t32>>=8;
 22293  006806  C06B  F06A         	movff	m_flash_read@t32+1,m_flash_read@t32
 22294  00680A  C06C  F06B         	movff	m_flash_read@t32+2,m_flash_read@t32+1
 22295  00680E  C06D  F06C         	movff	m_flash_read@t32+3,m_flash_read@t32+2
 22296  006812  0100               	movlb	0	; () banked
 22297  006814  6B6D               	clrf	(m_flash_read@t32+3)& (0+255),b
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;m_flash.c: 55: TBLPTRU=(uint8_t)(t32 & 0xfful);
 22301  006816  C06A  FFF8         	movff	m_flash_read@t32,tblptru	;volatile
 22302                           
 22303                           ; BSR set to: 0
 22304                           ;m_flash.c: 57: for(i=0;i<len;i++){
 22305  00681A  0E00               	movlw	0
 22306  00681C  0100               	movlb	0	; () banked
 22307  00681E  6F69               	movwf	(m_flash_read@i+1)& (0+255),b
 22308  006820  0E00               	movlw	0
 22309  006822  6F68               	movwf	m_flash_read@i& (0+255),b
 22310  006824  D010               	goto	l11642
 22311  006826                     l1598:
 22312                           
 22313                           ; BSR set to: 0
 22314  006826  0009               	tblrd		*+	;# 
 22315                           
 22316                           ;m_flash.c: 59: buf[i]=TABLAT;
 22317  006828  0100               	movlb	0	; () banked
 22318  00682A  5168               	movf	m_flash_read@i& (0+255),w,b
 22319  00682C  0100               	movlb	0	; () banked
 22320  00682E  2564               	addwf	m_flash_read@buf& (0+255),w,b
 22321  006830  6ED9               	movwf	fsr2l,c
 22322  006832  0100               	movlb	0	; () banked
 22323  006834  5169               	movf	(m_flash_read@i+1)& (0+255),w,b
 22324  006836  0100               	movlb	0	; () banked
 22325  006838  2165               	addwfc	(m_flash_read@buf+1)& (0+255),w,b
 22326  00683A  6EDA               	movwf	fsr2h,c
 22327  00683C  CFF5 FFDF          	movff	tablat,indf2	;volatile
 22328                           
 22329                           ; BSR set to: 0
 22330  006840  0100               	movlb	0	; () banked
 22331  006842  4B68               	infsnz	m_flash_read@i& (0+255),f,b
 22332  006844  2B69               	incf	(m_flash_read@i+1)& (0+255),f,b
 22333  006846                     l11642:
 22334                           
 22335                           ; BSR set to: 0
 22336  006846  0100               	movlb	0	; () banked
 22337  006848  5166               	movf	m_flash_read@len& (0+255),w,b
 22338  00684A  0100               	movlb	0	; () banked
 22339  00684C  5D68               	subwf	m_flash_read@i& (0+255),w,b
 22340  00684E  0100               	movlb	0	; () banked
 22341  006850  5167               	movf	(m_flash_read@len+1)& (0+255),w,b
 22342  006852  0100               	movlb	0	; () banked
 22343  006854  5969               	subwfb	(m_flash_read@i+1)& (0+255),w,b
 22344  006856  B0D8               	btfsc	status,0,c
 22345  006858  0012               	return	
 22346  00685A  D7E5               	goto	l1598
 22347  00685C                     __end_of_m_flash_read:
 22348                           	opt stack 0
 22349                           tosu	equ	0xFFF
 22350                           tosh	equ	0xFFE
 22351                           tosl	equ	0xFFD
 22352                           pclath	equ	0xFFA
 22353                           tblptru	equ	0xFF8
 22354                           tblptrh	equ	0xFF7
 22355                           tblptrl	equ	0xFF6
 22356                           tablat	equ	0xFF5
 22357                           prodh	equ	0xFF4
 22358                           prodl	equ	0xFF3
 22359                           intcon	equ	0xFF2
 22360                           indf0	equ	0xFEF
 22361                           postinc0	equ	0xFEE
 22362                           fsr0h	equ	0xFEA
 22363                           fsr0l	equ	0xFE9
 22364                           wreg	equ	0xFE8
 22365                           postinc1	equ	0xFE6
 22366                           postdec1	equ	0xFE5
 22367                           plusw1	equ	0xFE3
 22368                           fsr1h	equ	0xFE2
 22369                           fsr1l	equ	0xFE1
 22370                           indf2	equ	0xFDF
 22371                           postinc2	equ	0xFDE
 22372                           postdec2	equ	0xFDD
 22373                           plusw2	equ	0xFDB
 22374                           fsr2h	equ	0xFDA
 22375                           fsr2l	equ	0xFD9
 22376                           status	equ	0xFD8
 22377                           
 22378 ;; *************** function _m_flash_erase *****************
 22379 ;; Defined at:
 22380 ;;		line 30 in file "src/driver/m_flash.c"
 22381 ;; Parameters:    Size  Location     Type
 22382 ;;  addr            4    0[BANK0 ] unsigned long 
 22383 ;; Auto vars:     Size  Location     Type
 22384 ;;  t32             4    4[BANK0 ] unsigned long 
 22385 ;; Return value:  Size  Location     Type
 22386 ;;                  1    wreg      void 
 22387 ;; Registers used:
 22388 ;;		wreg, status,2, status,0, cstack
 22389 ;; Tracked objects:
 22390 ;;		On entry : 0/0
 22391 ;;		On exit  : 0/0
 22392 ;;		Unchanged: 0/0
 22393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22395 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22397 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22398 ;;Total ram usage:        8 bytes
 22399 ;; Hardware stack levels used:    1
 22400 ;; Hardware stack levels required when called:    5
 22401 ;; This function calls:
 22402 ;;		_m_flash_unlock
 22403 ;; This function is called by:
 22404 ;;		_m_flash_write
 22405 ;; This function uses a non-reentrant model
 22406 ;;
 22407                           
 22408                           	psect	text103
 22409  00700A                     __ptext103:
 22410                           	opt stack 0
 22411  00700A                     _m_flash_erase:
 22412                           	opt stack 22
 22413                           
 22414                           ;m_flash.c: 32: uint32_t t32=addr;
 22415                           
 22416                           ; BSR set to: 0
 22417                           ;incstack = 0
 22418  00700A  C060  F064         	movff	m_flash_erase@addr,m_flash_erase@t32
 22419  00700E  C061  F065         	movff	m_flash_erase@addr+1,m_flash_erase@t32+1
 22420  007012  C062  F066         	movff	m_flash_erase@addr+2,m_flash_erase@t32+2
 22421  007016  C063  F067         	movff	m_flash_erase@addr+3,m_flash_erase@t32+3
 22422                           
 22423                           ;m_flash.c: 33: t32 &= (~0x3fful);
 22424  00701A  0E00               	movlw	0
 22425  00701C  0100               	movlb	0	; () banked
 22426  00701E  1764               	andwf	m_flash_erase@t32& (0+255),f,b
 22427  007020  0EFC               	movlw	252
 22428  007022  1765               	andwf	(m_flash_erase@t32+1)& (0+255),f,b
 22429  007024  0EFF               	movlw	255
 22430  007026  1766               	andwf	(m_flash_erase@t32+2)& (0+255),f,b
 22431  007028  0EFF               	movlw	255
 22432  00702A  1767               	andwf	(m_flash_erase@t32+3)& (0+255),f,b
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;m_flash.c: 36: TBLPTRL=(uint8_t)(t32 & 0xfful);
 22436  00702C  C064  FFF6         	movff	m_flash_erase@t32,tblptrl	;volatile
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;m_flash.c: 37: t32>>=8;
 22440  007030  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 22441  007034  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 22442  007038  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 22443  00703C  0100               	movlb	0	; () banked
 22444  00703E  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;m_flash.c: 38: TBLPTRH=(uint8_t)(t32 & 0xfful);
 22448  007040  C064  FFF7         	movff	m_flash_erase@t32,tblptrh	;volatile
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;m_flash.c: 39: t32>>=8;
 22452  007044  C065  F064         	movff	m_flash_erase@t32+1,m_flash_erase@t32
 22453  007048  C066  F065         	movff	m_flash_erase@t32+2,m_flash_erase@t32+1
 22454  00704C  C067  F066         	movff	m_flash_erase@t32+3,m_flash_erase@t32+2
 22455  007050  0100               	movlb	0	; () banked
 22456  007052  6B67               	clrf	(m_flash_erase@t32+3)& (0+255),b
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;m_flash.c: 40: TBLPTRU=(uint8_t)(t32 & 0xfful);
 22460  007054  C064  FFF8         	movff	m_flash_erase@t32,tblptru	;volatile
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;m_flash.c: 41: EECON1bits.WREN=1;
 22464  007058  84A6               	bsf	4006,2,c	;volatile
 22465                           
 22466                           ; BSR set to: 0
 22467                           ;m_flash.c: 42: EECON1bits.FREE=1;
 22468  00705A  88A6               	bsf	4006,4,c	;volatile
 22469                           
 22470                           ; BSR set to: 0
 22471                           ;m_flash.c: 43: m_flash_unlock();
 22472  00705C  EC3E  F03C         	call	_m_flash_unlock	;wreg free
 22473                           
 22474                           ;m_flash.c: 44: EECON1bits.WREN=0;
 22475  007060  94A6               	bcf	4006,2,c	;volatile
 22476  007062  0012               	return		;funcret
 22477  007064                     __end_of_m_flash_erase:
 22478                           	opt stack 0
 22479                           tosu	equ	0xFFF
 22480                           tosh	equ	0xFFE
 22481                           tosl	equ	0xFFD
 22482                           pclath	equ	0xFFA
 22483                           tblptru	equ	0xFF8
 22484                           tblptrh	equ	0xFF7
 22485                           tblptrl	equ	0xFF6
 22486                           tablat	equ	0xFF5
 22487                           prodh	equ	0xFF4
 22488                           prodl	equ	0xFF3
 22489                           intcon	equ	0xFF2
 22490                           indf0	equ	0xFEF
 22491                           postinc0	equ	0xFEE
 22492                           fsr0h	equ	0xFEA
 22493                           fsr0l	equ	0xFE9
 22494                           wreg	equ	0xFE8
 22495                           postinc1	equ	0xFE6
 22496                           postdec1	equ	0xFE5
 22497                           plusw1	equ	0xFE3
 22498                           fsr1h	equ	0xFE2
 22499                           fsr1l	equ	0xFE1
 22500                           indf2	equ	0xFDF
 22501                           postinc2	equ	0xFDE
 22502                           postdec2	equ	0xFDD
 22503                           plusw2	equ	0xFDB
 22504                           fsr2h	equ	0xFDA
 22505                           fsr2l	equ	0xFD9
 22506                           status	equ	0xFD8
 22507                           
 22508 ;; *************** function _m_flash_unlock *****************
 22509 ;; Defined at:
 22510 ;;		line 9 in file "src/driver/m_flash.c"
 22511 ;; Parameters:    Size  Location     Type
 22512 ;;		None
 22513 ;; Auto vars:     Size  Location     Type
 22514 ;;  oldGIE          1   31[COMRAM] volatile unsigned char 
 22515 ;; Return value:  Size  Location     Type
 22516 ;;                  1    wreg      void 
 22517 ;; Registers used:
 22518 ;;		None
 22519 ;; Tracked objects:
 22520 ;;		On entry : 0/0
 22521 ;;		On exit  : 0/0
 22522 ;;		Unchanged: 0/0
 22523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22528 ;;Total ram usage:        1 bytes
 22529 ;; Hardware stack levels used:    1
 22530 ;; Hardware stack levels required when called:    4
 22531 ;; This function calls:
 22532 ;;		Nothing
 22533 ;; This function is called by:
 22534 ;;		_m_flash_erase
 22535 ;;		_m_flash_write
 22536 ;; This function uses a non-reentrant model
 22537 ;;
 22538                           
 22539                           	psect	text104
 22540  00787C                     __ptext104:
 22541                           	opt stack 0
 22542  00787C                     _m_flash_unlock:
 22543                           	opt stack 23
 22544                           
 22545                           ;m_flash.c: 11: volatile unsigned char oldGIE;
 22546                           ;m_flash.c: 14: oldGIE=INTCON;
 22547                           
 22548                           ;incstack = 0
 22549  00787C  CFF2 F020          	movff	intcon,m_flash_unlock@oldGIE	;volatile
 22550                           
 22551                           ;m_flash.c: 15: INTCONbits.GIE = 0;
 22552  007880  9EF2               	bcf	intcon,7,c	;volatile
 22553                           
 22554                           ;m_flash.c: 16: __nop();
 22555  007882  F000               	nop	
 22556  007884  0E55               	movlw	85	;# 
 22557  007886  6EA7               	movwf	4007,c	;# 
 22558  007888  0EAA               	movlw	170	;# 
 22559  00788A  6EA7               	movwf	4007,c	;# 
 22560                           
 22561                           ;m_flash.c: 22: EECON1bits.WR=1;
 22562  00788C  82A6               	bsf	4006,1,c	;volatile
 22563                           
 22564                           ;m_flash.c: 23: __nop();
 22565  00788E  F000               	nop	
 22566                           
 22567                           ;m_flash.c: 27: INTCON=oldGIE;
 22568  007890  C020  FFF2         	movff	m_flash_unlock@oldGIE,intcon	;volatile
 22569                           
 22570                           ;m_flash.c: 28: return;
 22571  007894  0012               	return		;funcret
 22572  007896                     __end_of_m_flash_unlock:
 22573                           	opt stack 0
 22574                           tosu	equ	0xFFF
 22575                           tosh	equ	0xFFE
 22576                           tosl	equ	0xFFD
 22577                           pclath	equ	0xFFA
 22578                           tblptru	equ	0xFF8
 22579                           tblptrh	equ	0xFF7
 22580                           tblptrl	equ	0xFF6
 22581                           tablat	equ	0xFF5
 22582                           prodh	equ	0xFF4
 22583                           prodl	equ	0xFF3
 22584                           intcon	equ	0xFF2
 22585                           indf0	equ	0xFEF
 22586                           postinc0	equ	0xFEE
 22587                           fsr0h	equ	0xFEA
 22588                           fsr0l	equ	0xFE9
 22589                           wreg	equ	0xFE8
 22590                           postinc1	equ	0xFE6
 22591                           postdec1	equ	0xFE5
 22592                           plusw1	equ	0xFE3
 22593                           fsr1h	equ	0xFE2
 22594                           fsr1l	equ	0xFE1
 22595                           indf2	equ	0xFDF
 22596                           postinc2	equ	0xFDE
 22597                           postdec2	equ	0xFDD
 22598                           plusw2	equ	0xFDB
 22599                           fsr2h	equ	0xFDA
 22600                           fsr2l	equ	0xFD9
 22601                           status	equ	0xFD8
 22602                           
 22603 ;; *************** function _data_sys_cal_v2 *****************
 22604 ;; Defined at:
 22605 ;;		line 164 in file "src/api/data.c"
 22606 ;; Parameters:    Size  Location     Type
 22607 ;;  stp             2   98[BANK0 ] PTR struct .
 22608 ;;		 -> globleBuffer0(256), 
 22609 ;; Auto vars:     Size  Location     Type
 22610 ;;  d               4  114[BANK0 ] float 
 22611 ;;  f               4  110[BANK0 ] float 
 22612 ;; Return value:  Size  Location     Type
 22613 ;;                  4   98[BANK0 ] unsigned long 
 22614 ;; Registers used:
 22615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22616 ;; Tracked objects:
 22617 ;;		On entry : 0/0
 22618 ;;		On exit  : 0/0
 22619 ;;		Unchanged: 0/0
 22620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22622 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22624 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22625 ;;Total ram usage:       20 bytes
 22626 ;; Hardware stack levels used:    1
 22627 ;; Hardware stack levels required when called:    5
 22628 ;; This function calls:
 22629 ;;		___fldiv
 22630 ;;		___flmul
 22631 ;;		___fltol
 22632 ;;		___xxtofl
 22633 ;; This function is called by:
 22634 ;;		_data_sys_init
 22635 ;; This function uses a non-reentrant model
 22636 ;;
 22637                           
 22638                           	psect	text105
 22639  0047D2                     __ptext105:
 22640                           	opt stack 0
 22641  0047D2                     _data_sys_cal_v2:
 22642                           	opt stack 23
 22643                           
 22644                           ;data.c: 166: float d,f;
 22645                           ;data.c: 167: d=(float)(stp->d);
 22646                           
 22647                           ;incstack = 0
 22648  0047D2  0100               	movlb	0	; () banked
 22649  0047D4  EE20 F00C          	lfsr	2,12
 22650  0047D8  51C2               	movf	data_sys_cal_v2@stp& (0+255),w,b
 22651  0047DA  26D9               	addwf	fsr2l,f,c
 22652  0047DC  51C3               	movf	(data_sys_cal_v2@stp+1)& (0+255),w,b
 22653  0047DE  22DA               	addwfc	fsr2h,f,c
 22654  0047E0  CFDE F060          	movff	postinc2,___xxtofl@val
 22655  0047E4  CFDE F061          	movff	postinc2,___xxtofl@val+1
 22656  0047E8  CFDE F062          	movff	postinc2,___xxtofl@val+2
 22657  0047EC  CFDE F063          	movff	postinc2,___xxtofl@val+3
 22658  0047F0  0E00               	movlw	0
 22659  0047F2  EC6A  F01D         	call	___xxtofl
 22660  0047F6  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v2@d
 22661  0047FA  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v2@d+1
 22662  0047FE  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v2@d+2
 22663  004802  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v2@d+3
 22664                           
 22665                           ;data.c: 168: d=d/1000;
 22666  004806  C0D2  F087         	movff	data_sys_cal_v2@d,___fldiv@b
 22667  00480A  C0D3  F088         	movff	data_sys_cal_v2@d+1,___fldiv@b+1
 22668  00480E  C0D4  F089         	movff	data_sys_cal_v2@d+2,___fldiv@b+2
 22669  004812  C0D5  F08A         	movff	data_sys_cal_v2@d+3,___fldiv@b+3
 22670  004816  0E00               	movlw	0
 22671  004818  0100               	movlb	0	; () banked
 22672  00481A  6F8B               	movwf	___fldiv@a& (0+255),b
 22673  00481C  0E00               	movlw	0
 22674  00481E  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 22675  004820  0E7A               	movlw	122
 22676  004822  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 22677  004824  0E44               	movlw	68
 22678  004826  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 22679  004828  EC48  F012         	call	___fldiv	;wreg free
 22680  00482C  C087  F0D2         	movff	?___fldiv,data_sys_cal_v2@d
 22681  004830  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v2@d+1
 22682  004834  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v2@d+2
 22683  004838  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v2@d+3
 22684                           
 22685                           ;data.c: 169: f=0.2618f*d*d*d;
 22686  00483C  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 22687  004840  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 22688  004844  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 22689  004848  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 22690  00484C  C0D2  F06E         	movff	data_sys_cal_v2@d,___flmul@b
 22691  004850  C0D3  F06F         	movff	data_sys_cal_v2@d+1,___flmul@b+1
 22692  004854  C0D4  F070         	movff	data_sys_cal_v2@d+2,___flmul@b+2
 22693  004858  C0D5  F071         	movff	data_sys_cal_v2@d+3,___flmul@b+3
 22694  00485C  EC94  F00B         	call	___flmul	;wreg free
 22695  004860  C06E  F0C6         	movff	?___flmul,_data_sys_cal_v2$4324
 22696  004864  C06F  F0C7         	movff	?___flmul+1,_data_sys_cal_v2$4324+1
 22697  004868  C070  F0C8         	movff	?___flmul+2,_data_sys_cal_v2$4324+2
 22698  00486C  C071  F0C9         	movff	?___flmul+3,_data_sys_cal_v2$4324+3
 22699                           
 22700                           ;data.c: 169: f=0.2618f*d*d*d;
 22701  004870  C0D2  F072         	movff	data_sys_cal_v2@d,___flmul@a
 22702  004874  C0D3  F073         	movff	data_sys_cal_v2@d+1,___flmul@a+1
 22703  004878  C0D4  F074         	movff	data_sys_cal_v2@d+2,___flmul@a+2
 22704  00487C  C0D5  F075         	movff	data_sys_cal_v2@d+3,___flmul@a+3
 22705  004880  C0C6  F06E         	movff	_data_sys_cal_v2$4324,___flmul@b
 22706  004884  C0C7  F06F         	movff	_data_sys_cal_v2$4324+1,___flmul@b+1
 22707  004888  C0C8  F070         	movff	_data_sys_cal_v2$4324+2,___flmul@b+2
 22708  00488C  C0C9  F071         	movff	_data_sys_cal_v2$4324+3,___flmul@b+3
 22709  004890  EC94  F00B         	call	___flmul	;wreg free
 22710  004894  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v2$4325
 22711  004898  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v2$4325+1
 22712  00489C  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v2$4325+2
 22713  0048A0  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v2$4325+3
 22714                           
 22715                           ;data.c: 169: f=0.2618f*d*d*d;
 22716  0048A4  C0CA  F06E         	movff	_data_sys_cal_v2$4325,___flmul@b
 22717  0048A8  C0CB  F06F         	movff	_data_sys_cal_v2$4325+1,___flmul@b+1
 22718  0048AC  C0CC  F070         	movff	_data_sys_cal_v2$4325+2,___flmul@b+2
 22719  0048B0  C0CD  F071         	movff	_data_sys_cal_v2$4325+3,___flmul@b+3
 22720  0048B4  0EA6               	movlw	166
 22721  0048B6  0100               	movlb	0	; () banked
 22722  0048B8  6F72               	movwf	___flmul@a& (0+255),b
 22723  0048BA  0E0A               	movlw	10
 22724  0048BC  6F73               	movwf	(___flmul@a+1)& (0+255),b
 22725  0048BE  0E86               	movlw	134
 22726  0048C0  6F74               	movwf	(___flmul@a+2)& (0+255),b
 22727  0048C2  0E3E               	movlw	62
 22728  0048C4  6F75               	movwf	(___flmul@a+3)& (0+255),b
 22729  0048C6  EC94  F00B         	call	___flmul	;wreg free
 22730  0048CA  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 22731  0048CE  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 22732  0048D2  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 22733  0048D6  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 22734                           
 22735                           ;data.c: 170: f*=1000;
 22736  0048DA  C0CE  F06E         	movff	data_sys_cal_v2@f,___flmul@b
 22737  0048DE  C0CF  F06F         	movff	data_sys_cal_v2@f+1,___flmul@b+1
 22738  0048E2  C0D0  F070         	movff	data_sys_cal_v2@f+2,___flmul@b+2
 22739  0048E6  C0D1  F071         	movff	data_sys_cal_v2@f+3,___flmul@b+3
 22740  0048EA  0E00               	movlw	0
 22741  0048EC  0100               	movlb	0	; () banked
 22742  0048EE  6F72               	movwf	___flmul@a& (0+255),b
 22743  0048F0  0E00               	movlw	0
 22744  0048F2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 22745  0048F4  0E7A               	movlw	122
 22746  0048F6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 22747  0048F8  0E44               	movlw	68
 22748  0048FA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 22749  0048FC  EC94  F00B         	call	___flmul	;wreg free
 22750  004900  C06E  F0CE         	movff	?___flmul,data_sys_cal_v2@f
 22751  004904  C06F  F0CF         	movff	?___flmul+1,data_sys_cal_v2@f+1
 22752  004908  C070  F0D0         	movff	?___flmul+2,data_sys_cal_v2@f+2
 22753  00490C  C071  F0D1         	movff	?___flmul+3,data_sys_cal_v2@f+3
 22754                           
 22755                           ;data.c: 171: return (uint32_t)f;
 22756  004910  C0CE  F0B8         	movff	data_sys_cal_v2@f,___fltol@f1
 22757  004914  C0CF  F0B9         	movff	data_sys_cal_v2@f+1,___fltol@f1+1
 22758  004918  C0D0  F0BA         	movff	data_sys_cal_v2@f+2,___fltol@f1+2
 22759  00491C  C0D1  F0BB         	movff	data_sys_cal_v2@f+3,___fltol@f1+3
 22760  004920  EC32  F028         	call	___fltol	;wreg free
 22761  004924  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v2
 22762  004928  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v2+1
 22763  00492C  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v2+2
 22764  004930  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v2+3
 22765  004934  0012               	return	
 22766  004936                     __end_of_data_sys_cal_v2:
 22767                           	opt stack 0
 22768                           tosu	equ	0xFFF
 22769                           tosh	equ	0xFFE
 22770                           tosl	equ	0xFFD
 22771                           pclath	equ	0xFFA
 22772                           tblptru	equ	0xFF8
 22773                           tblptrh	equ	0xFF7
 22774                           tblptrl	equ	0xFF6
 22775                           tablat	equ	0xFF5
 22776                           prodh	equ	0xFF4
 22777                           prodl	equ	0xFF3
 22778                           intcon	equ	0xFF2
 22779                           indf0	equ	0xFEF
 22780                           postinc0	equ	0xFEE
 22781                           fsr0h	equ	0xFEA
 22782                           fsr0l	equ	0xFE9
 22783                           wreg	equ	0xFE8
 22784                           postinc1	equ	0xFE6
 22785                           postdec1	equ	0xFE5
 22786                           plusw1	equ	0xFE3
 22787                           fsr1h	equ	0xFE2
 22788                           fsr1l	equ	0xFE1
 22789                           indf2	equ	0xFDF
 22790                           postinc2	equ	0xFDE
 22791                           postdec2	equ	0xFDD
 22792                           plusw2	equ	0xFDB
 22793                           fsr2h	equ	0xFDA
 22794                           fsr2l	equ	0xFD9
 22795                           status	equ	0xFD8
 22796                           
 22797 ;; *************** function _data_sys_cal_v1 *****************
 22798 ;; Defined at:
 22799 ;;		line 152 in file "src/api/data.c"
 22800 ;; Parameters:    Size  Location     Type
 22801 ;;  stp             2   98[BANK0 ] PTR struct .
 22802 ;;		 -> globleBuffer0(256), 
 22803 ;; Auto vars:     Size  Location     Type
 22804 ;;  r               4  122[BANK0 ] float 
 22805 ;;  f               4  118[BANK0 ] float 
 22806 ;;  h               4  114[BANK0 ] float 
 22807 ;; Return value:  Size  Location     Type
 22808 ;;                  4   98[BANK0 ] unsigned long 
 22809 ;; Registers used:
 22810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22811 ;; Tracked objects:
 22812 ;;		On entry : 0/0
 22813 ;;		On exit  : 0/0
 22814 ;;		Unchanged: 0/0
 22815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22817 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22819 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22820 ;;Total ram usage:       28 bytes
 22821 ;; Hardware stack levels used:    1
 22822 ;; Hardware stack levels required when called:    5
 22823 ;; This function calls:
 22824 ;;		___fldiv
 22825 ;;		___flmul
 22826 ;;		___fltol
 22827 ;;		___xxtofl
 22828 ;; This function is called by:
 22829 ;;		_data_sys_init
 22830 ;; This function uses a non-reentrant model
 22831 ;;
 22832                           
 22833                           	psect	text106
 22834  0034EA                     __ptext106:
 22835                           	opt stack 0
 22836  0034EA                     _data_sys_cal_v1:
 22837                           	opt stack 23
 22838                           
 22839                           ;data.c: 154: float r,h,f;
 22840                           ;data.c: 155: r=(float)(stp->d);
 22841                           
 22842                           ;incstack = 0
 22843  0034EA  0100               	movlb	0	; () banked
 22844  0034EC  EE20 F00C          	lfsr	2,12
 22845  0034F0  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 22846  0034F2  26D9               	addwf	fsr2l,f,c
 22847  0034F4  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 22848  0034F6  22DA               	addwfc	fsr2h,f,c
 22849  0034F8  CFDE F060          	movff	postinc2,___xxtofl@val
 22850  0034FC  CFDE F061          	movff	postinc2,___xxtofl@val+1
 22851  003500  CFDE F062          	movff	postinc2,___xxtofl@val+2
 22852  003504  CFDE F063          	movff	postinc2,___xxtofl@val+3
 22853  003508  0E00               	movlw	0
 22854  00350A  EC6A  F01D         	call	___xxtofl
 22855  00350E  C060  F0DA         	movff	?___xxtofl,data_sys_cal_v1@r
 22856  003512  C061  F0DB         	movff	?___xxtofl+1,data_sys_cal_v1@r+1
 22857  003516  C062  F0DC         	movff	?___xxtofl+2,data_sys_cal_v1@r+2
 22858  00351A  C063  F0DD         	movff	?___xxtofl+3,data_sys_cal_v1@r+3
 22859                           
 22860                           ;data.c: 156: h=(float)(stp->h);
 22861  00351E  0100               	movlb	0	; () banked
 22862  003520  EE20 F008          	lfsr	2,8
 22863  003524  51C2               	movf	data_sys_cal_v1@stp& (0+255),w,b
 22864  003526  26D9               	addwf	fsr2l,f,c
 22865  003528  51C3               	movf	(data_sys_cal_v1@stp+1)& (0+255),w,b
 22866  00352A  22DA               	addwfc	fsr2h,f,c
 22867  00352C  CFDE F060          	movff	postinc2,___xxtofl@val
 22868  003530  CFDE F061          	movff	postinc2,___xxtofl@val+1
 22869  003534  CFDE F062          	movff	postinc2,___xxtofl@val+2
 22870  003538  CFDE F063          	movff	postinc2,___xxtofl@val+3
 22871  00353C  0E01               	movlw	1
 22872  00353E  EC6A  F01D         	call	___xxtofl
 22873  003542  C060  F0D2         	movff	?___xxtofl,data_sys_cal_v1@h
 22874  003546  C061  F0D3         	movff	?___xxtofl+1,data_sys_cal_v1@h+1
 22875  00354A  C062  F0D4         	movff	?___xxtofl+2,data_sys_cal_v1@h+2
 22876  00354E  C063  F0D5         	movff	?___xxtofl+3,data_sys_cal_v1@h+3
 22877                           
 22878                           ;data.c: 157: r=r/1000/2;
 22879  003552  0E00               	movlw	0
 22880  003554  0100               	movlb	0	; () banked
 22881  003556  6F8B               	movwf	___fldiv@a& (0+255),b
 22882  003558  0E00               	movlw	0
 22883  00355A  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 22884  00355C  0E7A               	movlw	122
 22885  00355E  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 22886  003560  0E44               	movlw	68
 22887  003562  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 22888  003564  C0DA  F087         	movff	data_sys_cal_v1@r,___fldiv@b
 22889  003568  C0DB  F088         	movff	data_sys_cal_v1@r+1,___fldiv@b+1
 22890  00356C  C0DC  F089         	movff	data_sys_cal_v1@r+2,___fldiv@b+2
 22891  003570  C0DD  F08A         	movff	data_sys_cal_v1@r+3,___fldiv@b+3
 22892  003574  EC48  F012         	call	___fldiv	;wreg free
 22893  003578  C087  F0C6         	movff	?___fldiv,_data_sys_cal_v1$4321
 22894  00357C  C088  F0C7         	movff	?___fldiv+1,_data_sys_cal_v1$4321+1
 22895  003580  C089  F0C8         	movff	?___fldiv+2,_data_sys_cal_v1$4321+2
 22896  003584  C08A  F0C9         	movff	?___fldiv+3,_data_sys_cal_v1$4321+3
 22897                           
 22898                           ;data.c: 157: r=r/1000/2;
 22899  003588  C0C6  F087         	movff	_data_sys_cal_v1$4321,___fldiv@b
 22900  00358C  C0C7  F088         	movff	_data_sys_cal_v1$4321+1,___fldiv@b+1
 22901  003590  C0C8  F089         	movff	_data_sys_cal_v1$4321+2,___fldiv@b+2
 22902  003594  C0C9  F08A         	movff	_data_sys_cal_v1$4321+3,___fldiv@b+3
 22903  003598  0E00               	movlw	0
 22904  00359A  0100               	movlb	0	; () banked
 22905  00359C  6F8B               	movwf	___fldiv@a& (0+255),b
 22906  00359E  0E00               	movlw	0
 22907  0035A0  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 22908  0035A2  0E00               	movlw	0
 22909  0035A4  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 22910  0035A6  0E40               	movlw	64
 22911  0035A8  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 22912  0035AA  EC48  F012         	call	___fldiv	;wreg free
 22913  0035AE  C087  F0DA         	movff	?___fldiv,data_sys_cal_v1@r
 22914  0035B2  C088  F0DB         	movff	?___fldiv+1,data_sys_cal_v1@r+1
 22915  0035B6  C089  F0DC         	movff	?___fldiv+2,data_sys_cal_v1@r+2
 22916  0035BA  C08A  F0DD         	movff	?___fldiv+3,data_sys_cal_v1@r+3
 22917                           
 22918                           ;data.c: 158: h=h/1000;
 22919  0035BE  C0D2  F087         	movff	data_sys_cal_v1@h,___fldiv@b
 22920  0035C2  C0D3  F088         	movff	data_sys_cal_v1@h+1,___fldiv@b+1
 22921  0035C6  C0D4  F089         	movff	data_sys_cal_v1@h+2,___fldiv@b+2
 22922  0035CA  C0D5  F08A         	movff	data_sys_cal_v1@h+3,___fldiv@b+3
 22923  0035CE  0E00               	movlw	0
 22924  0035D0  0100               	movlb	0	; () banked
 22925  0035D2  6F8B               	movwf	___fldiv@a& (0+255),b
 22926  0035D4  0E00               	movlw	0
 22927  0035D6  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 22928  0035D8  0E7A               	movlw	122
 22929  0035DA  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 22930  0035DC  0E44               	movlw	68
 22931  0035DE  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 22932  0035E0  EC48  F012         	call	___fldiv	;wreg free
 22933  0035E4  C087  F0D2         	movff	?___fldiv,data_sys_cal_v1@h
 22934  0035E8  C088  F0D3         	movff	?___fldiv+1,data_sys_cal_v1@h+1
 22935  0035EC  C089  F0D4         	movff	?___fldiv+2,data_sys_cal_v1@h+2
 22936  0035F0  C08A  F0D5         	movff	?___fldiv+3,data_sys_cal_v1@h+3
 22937                           
 22938                           ;data.c: 159: f=h*(r*r)*3.1416f;
 22939  0035F4  C0DA  F072         	movff	data_sys_cal_v1@r,___flmul@a
 22940  0035F8  C0DB  F073         	movff	data_sys_cal_v1@r+1,___flmul@a+1
 22941  0035FC  C0DC  F074         	movff	data_sys_cal_v1@r+2,___flmul@a+2
 22942  003600  C0DD  F075         	movff	data_sys_cal_v1@r+3,___flmul@a+3
 22943  003604  C0DA  F06E         	movff	data_sys_cal_v1@r,___flmul@b
 22944  003608  C0DB  F06F         	movff	data_sys_cal_v1@r+1,___flmul@b+1
 22945  00360C  C0DC  F070         	movff	data_sys_cal_v1@r+2,___flmul@b+2
 22946  003610  C0DD  F071         	movff	data_sys_cal_v1@r+3,___flmul@b+3
 22947  003614  EC94  F00B         	call	___flmul	;wreg free
 22948  003618  C06E  F0CA         	movff	?___flmul,_data_sys_cal_v1$4322
 22949  00361C  C06F  F0CB         	movff	?___flmul+1,_data_sys_cal_v1$4322+1
 22950  003620  C070  F0CC         	movff	?___flmul+2,_data_sys_cal_v1$4322+2
 22951  003624  C071  F0CD         	movff	?___flmul+3,_data_sys_cal_v1$4322+3
 22952                           
 22953                           ;data.c: 159: f=h*(r*r)*3.1416f;
 22954  003628  C0D2  F072         	movff	data_sys_cal_v1@h,___flmul@a
 22955  00362C  C0D3  F073         	movff	data_sys_cal_v1@h+1,___flmul@a+1
 22956  003630  C0D4  F074         	movff	data_sys_cal_v1@h+2,___flmul@a+2
 22957  003634  C0D5  F075         	movff	data_sys_cal_v1@h+3,___flmul@a+3
 22958  003638  C0CA  F06E         	movff	_data_sys_cal_v1$4322,___flmul@b
 22959  00363C  C0CB  F06F         	movff	_data_sys_cal_v1$4322+1,___flmul@b+1
 22960  003640  C0CC  F070         	movff	_data_sys_cal_v1$4322+2,___flmul@b+2
 22961  003644  C0CD  F071         	movff	_data_sys_cal_v1$4322+3,___flmul@b+3
 22962  003648  EC94  F00B         	call	___flmul	;wreg free
 22963  00364C  C06E  F0CE         	movff	?___flmul,_data_sys_cal_v1$4323
 22964  003650  C06F  F0CF         	movff	?___flmul+1,_data_sys_cal_v1$4323+1
 22965  003654  C070  F0D0         	movff	?___flmul+2,_data_sys_cal_v1$4323+2
 22966  003658  C071  F0D1         	movff	?___flmul+3,_data_sys_cal_v1$4323+3
 22967                           
 22968                           ;data.c: 159: f=h*(r*r)*3.1416f;
 22969  00365C  C0CE  F06E         	movff	_data_sys_cal_v1$4323,___flmul@b
 22970  003660  C0CF  F06F         	movff	_data_sys_cal_v1$4323+1,___flmul@b+1
 22971  003664  C0D0  F070         	movff	_data_sys_cal_v1$4323+2,___flmul@b+2
 22972  003668  C0D1  F071         	movff	_data_sys_cal_v1$4323+3,___flmul@b+3
 22973  00366C  0EF9               	movlw	249
 22974  00366E  0100               	movlb	0	; () banked
 22975  003670  6F72               	movwf	___flmul@a& (0+255),b
 22976  003672  0E0F               	movlw	15
 22977  003674  6F73               	movwf	(___flmul@a+1)& (0+255),b
 22978  003676  0E49               	movlw	73
 22979  003678  6F74               	movwf	(___flmul@a+2)& (0+255),b
 22980  00367A  0E40               	movlw	64
 22981  00367C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 22982  00367E  EC94  F00B         	call	___flmul	;wreg free
 22983  003682  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 22984  003686  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 22985  00368A  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 22986  00368E  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 22987                           
 22988                           ;data.c: 160: f*=1000;
 22989  003692  C0D6  F06E         	movff	data_sys_cal_v1@f,___flmul@b
 22990  003696  C0D7  F06F         	movff	data_sys_cal_v1@f+1,___flmul@b+1
 22991  00369A  C0D8  F070         	movff	data_sys_cal_v1@f+2,___flmul@b+2
 22992  00369E  C0D9  F071         	movff	data_sys_cal_v1@f+3,___flmul@b+3
 22993  0036A2  0E00               	movlw	0
 22994  0036A4  0100               	movlb	0	; () banked
 22995  0036A6  6F72               	movwf	___flmul@a& (0+255),b
 22996  0036A8  0E00               	movlw	0
 22997  0036AA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 22998  0036AC  0E7A               	movlw	122
 22999  0036AE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 23000  0036B0  0E44               	movlw	68
 23001  0036B2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 23002  0036B4  EC94  F00B         	call	___flmul	;wreg free
 23003  0036B8  C06E  F0D6         	movff	?___flmul,data_sys_cal_v1@f
 23004  0036BC  C06F  F0D7         	movff	?___flmul+1,data_sys_cal_v1@f+1
 23005  0036C0  C070  F0D8         	movff	?___flmul+2,data_sys_cal_v1@f+2
 23006  0036C4  C071  F0D9         	movff	?___flmul+3,data_sys_cal_v1@f+3
 23007                           
 23008                           ;data.c: 161: return (uint32_t)f;
 23009  0036C8  C0D6  F0B8         	movff	data_sys_cal_v1@f,___fltol@f1
 23010  0036CC  C0D7  F0B9         	movff	data_sys_cal_v1@f+1,___fltol@f1+1
 23011  0036D0  C0D8  F0BA         	movff	data_sys_cal_v1@f+2,___fltol@f1+2
 23012  0036D4  C0D9  F0BB         	movff	data_sys_cal_v1@f+3,___fltol@f1+3
 23013  0036D8  EC32  F028         	call	___fltol	;wreg free
 23014  0036DC  C0B8  F0C2         	movff	?___fltol,?_data_sys_cal_v1
 23015  0036E0  C0B9  F0C3         	movff	?___fltol+1,?_data_sys_cal_v1+1
 23016  0036E4  C0BA  F0C4         	movff	?___fltol+2,?_data_sys_cal_v1+2
 23017  0036E8  C0BB  F0C5         	movff	?___fltol+3,?_data_sys_cal_v1+3
 23018  0036EC  0012               	return	
 23019  0036EE                     __end_of_data_sys_cal_v1:
 23020                           	opt stack 0
 23021                           tosu	equ	0xFFF
 23022                           tosh	equ	0xFFE
 23023                           tosl	equ	0xFFD
 23024                           pclath	equ	0xFFA
 23025                           tblptru	equ	0xFF8
 23026                           tblptrh	equ	0xFF7
 23027                           tblptrl	equ	0xFF6
 23028                           tablat	equ	0xFF5
 23029                           prodh	equ	0xFF4
 23030                           prodl	equ	0xFF3
 23031                           intcon	equ	0xFF2
 23032                           indf0	equ	0xFEF
 23033                           postinc0	equ	0xFEE
 23034                           fsr0h	equ	0xFEA
 23035                           fsr0l	equ	0xFE9
 23036                           wreg	equ	0xFE8
 23037                           postinc1	equ	0xFE6
 23038                           postdec1	equ	0xFE5
 23039                           plusw1	equ	0xFE3
 23040                           fsr1h	equ	0xFE2
 23041                           fsr1l	equ	0xFE1
 23042                           indf2	equ	0xFDF
 23043                           postinc2	equ	0xFDE
 23044                           postdec2	equ	0xFDD
 23045                           plusw2	equ	0xFDB
 23046                           fsr2h	equ	0xFDA
 23047                           fsr2l	equ	0xFD9
 23048                           status	equ	0xFD8
 23049                           
 23050 ;; *************** function ___xxtofl *****************
 23051 ;; Defined at:
 23052 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\xxtofl.c"
 23053 ;; Parameters:    Size  Location     Type
 23054 ;;  sign            1    wreg     unsigned char 
 23055 ;;  val             4    0[BANK0 ] long 
 23056 ;; Auto vars:     Size  Location     Type
 23057 ;;  sign            1    8[BANK0 ] unsigned char 
 23058 ;;  arg             4   10[BANK0 ] unsigned long 
 23059 ;;  exp             1    9[BANK0 ] unsigned char 
 23060 ;; Return value:  Size  Location     Type
 23061 ;;                  4    0[BANK0 ] unsigned char 
 23062 ;; Registers used:
 23063 ;;		wreg, status,2, status,0
 23064 ;; Tracked objects:
 23065 ;;		On entry : 0/0
 23066 ;;		On exit  : 0/0
 23067 ;;		Unchanged: 0/0
 23068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23069 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23070 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23071 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23072 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23073 ;;Total ram usage:       14 bytes
 23074 ;; Hardware stack levels used:    1
 23075 ;; Hardware stack levels required when called:    4
 23076 ;; This function calls:
 23077 ;;		Nothing
 23078 ;; This function is called by:
 23079 ;;		_data_sys_cal_v1
 23080 ;;		_data_sys_cal_v2
 23081 ;;		_m_interp1_float_fast
 23082 ;;		_cal_diff_hight_to_vol_h
 23083 ;;		_cal_diff_hight_to_vol_v
 23084 ;;		_cal_diff_p_to_h
 23085 ;;		_cal_pt100_temperature_in
 23086 ;;		_cal_pt100_temperature_ex
 23087 ;;		_cal_additional_pressute
 23088 ;; This function uses a non-reentrant model
 23089 ;;
 23090                           
 23091                           	psect	text107
 23092  003AD4                     __ptext107:
 23093                           	opt stack 0
 23094  003AD4                     ___xxtofl:
 23095                           	opt stack 23
 23096                           
 23097                           ;incstack = 0
 23098                           ;___xxtofl@sign stored from wreg
 23099  003AD4  0100               	movlb	0	; () banked
 23100  003AD6  6F68               	movwf	___xxtofl@sign& (0+255),b
 23101  003AD8  0100               	movlb	0	; () banked
 23102  003ADA  5168               	movf	___xxtofl@sign& (0+255),w,b
 23103  003ADC  0100               	movlb	0	; () banked
 23104  003ADE  B4D8               	btfsc	status,2,c
 23105  003AE0  D01E               	goto	l2340
 23106                           
 23107                           ; BSR set to: 0
 23108  003AE2  0100               	movlb	0	; () banked
 23109  003AE4  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 23110  003AE6  D01B               	goto	l2340
 23111                           
 23112                           ; BSR set to: 0
 23113  003AE8  C060  F064         	movff	___xxtofl@val,??___xxtofl
 23114  003AEC  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 23115  003AF0  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 23116  003AF4  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 23117  003AF8  0100               	movlb	0	; () banked
 23118  003AFA  1F64               	comf	??___xxtofl& (0+255),f,b
 23119  003AFC  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 23120  003AFE  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 23121  003B00  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 23122  003B02  2B64               	incf	??___xxtofl& (0+255),f,b
 23123  003B04  0E00               	movlw	0
 23124  003B06  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 23125  003B08  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 23126  003B0A  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 23127  003B0C  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 23128  003B10  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 23129  003B14  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 23130  003B18  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 23131  003B1C  D008               	goto	l11312
 23132  003B1E                     l2340:
 23133                           
 23134                           ; BSR set to: 0
 23135  003B1E  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 23136  003B22  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 23137  003B26  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 23138  003B2A  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 23139  003B2E                     l11312:
 23140                           
 23141                           ; BSR set to: 0
 23142  003B2E  0100               	movlb	0	; () banked
 23143  003B30  5160               	movf	___xxtofl@val& (0+255),w,b
 23144  003B32  0100               	movlb	0	; () banked
 23145  003B34  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 23146  003B36  0100               	movlb	0	; () banked
 23147  003B38  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 23148  003B3A  0100               	movlb	0	; () banked
 23149  003B3C  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 23150  003B3E  A4D8               	btfss	status,2,c
 23151  003B40  D00A               	goto	l11318
 23152                           
 23153                           ; BSR set to: 0
 23154  003B42  0E00               	movlw	0
 23155  003B44  0100               	movlb	0	; () banked
 23156  003B46  6F60               	movwf	?___xxtofl& (0+255),b
 23157  003B48  0E00               	movlw	0
 23158  003B4A  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 23159  003B4C  0E00               	movlw	0
 23160  003B4E  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 23161  003B50  0E00               	movlw	0
 23162  003B52  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 23163                           
 23164                           ; BSR set to: 0
 23165  003B54  0012               	return	
 23166  003B56                     l11318:
 23167                           
 23168                           ; BSR set to: 0
 23169  003B56  0E96               	movlw	150
 23170  003B58  0100               	movlb	0	; () banked
 23171  003B5A  6F69               	movwf	___xxtofl@exp& (0+255),b
 23172  003B5C  D008               	goto	l11322
 23173  003B5E                     l11320:
 23174                           
 23175                           ; BSR set to: 0
 23176  003B5E  0100               	movlb	0	; () banked
 23177  003B60  2B69               	incf	___xxtofl@exp& (0+255),f,b
 23178  003B62  0100               	movlb	0	; () banked
 23179  003B64  90D8               	bcf	status,0,c
 23180  003B66  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 23181  003B68  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 23182  003B6A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 23183  003B6C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 23184  003B6E                     l11322:
 23185                           
 23186                           ; BSR set to: 0
 23187  003B6E  0E00               	movlw	0
 23188  003B70  0100               	movlb	0	; () banked
 23189  003B72  156A               	andwf	___xxtofl@arg& (0+255),w,b
 23190  003B74  0100               	movlb	0	; () banked
 23191  003B76  6F64               	movwf	??___xxtofl& (0+255),b
 23192  003B78  0E00               	movlw	0
 23193  003B7A  0100               	movlb	0	; () banked
 23194  003B7C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 23195  003B7E  0100               	movlb	0	; () banked
 23196  003B80  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 23197  003B82  0E00               	movlw	0
 23198  003B84  0100               	movlb	0	; () banked
 23199  003B86  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 23200  003B88  0100               	movlb	0	; () banked
 23201  003B8A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 23202  003B8C  0EFE               	movlw	254
 23203  003B8E  0100               	movlb	0	; () banked
 23204  003B90  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 23205  003B92  0100               	movlb	0	; () banked
 23206  003B94  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 23207  003B96  0100               	movlb	0	; () banked
 23208  003B98  5164               	movf	??___xxtofl& (0+255),w,b
 23209  003B9A  0100               	movlb	0	; () banked
 23210  003B9C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 23211  003B9E  0100               	movlb	0	; () banked
 23212  003BA0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 23213  003BA2  0100               	movlb	0	; () banked
 23214  003BA4  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 23215  003BA6  B4D8               	btfsc	status,2,c
 23216  003BA8  D010               	goto	l2347
 23217  003BAA  D7D9               	goto	l11320
 23218  003BAC                     l11324:
 23219                           
 23220                           ; BSR set to: 0
 23221  003BAC  0100               	movlb	0	; () banked
 23222  003BAE  2B69               	incf	___xxtofl@exp& (0+255),f,b
 23223                           
 23224                           ; BSR set to: 0
 23225  003BB0  0E01               	movlw	1
 23226  003BB2  0100               	movlb	0	; () banked
 23227  003BB4  276A               	addwf	___xxtofl@arg& (0+255),f,b
 23228  003BB6  0E00               	movlw	0
 23229  003BB8  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 23230  003BBA  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 23231  003BBC  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 23232                           
 23233                           ; BSR set to: 0
 23234  003BBE  0100               	movlb	0	; () banked
 23235  003BC0  90D8               	bcf	status,0,c
 23236  003BC2  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 23237  003BC4  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 23238  003BC6  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 23239  003BC8  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 23240  003BCA                     l2347:
 23241                           
 23242                           ; BSR set to: 0
 23243  003BCA  0E00               	movlw	0
 23244  003BCC  0100               	movlb	0	; () banked
 23245  003BCE  156A               	andwf	___xxtofl@arg& (0+255),w,b
 23246  003BD0  0100               	movlb	0	; () banked
 23247  003BD2  6F64               	movwf	??___xxtofl& (0+255),b
 23248  003BD4  0E00               	movlw	0
 23249  003BD6  0100               	movlb	0	; () banked
 23250  003BD8  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 23251  003BDA  0100               	movlb	0	; () banked
 23252  003BDC  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 23253  003BDE  0E00               	movlw	0
 23254  003BE0  0100               	movlb	0	; () banked
 23255  003BE2  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 23256  003BE4  0100               	movlb	0	; () banked
 23257  003BE6  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 23258  003BE8  0EFF               	movlw	255
 23259  003BEA  0100               	movlb	0	; () banked
 23260  003BEC  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 23261  003BEE  0100               	movlb	0	; () banked
 23262  003BF0  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 23263  003BF2  0100               	movlb	0	; () banked
 23264  003BF4  5164               	movf	??___xxtofl& (0+255),w,b
 23265  003BF6  0100               	movlb	0	; () banked
 23266  003BF8  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 23267  003BFA  0100               	movlb	0	; () banked
 23268  003BFC  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 23269  003BFE  0100               	movlb	0	; () banked
 23270  003C00  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 23271  003C02  B4D8               	btfsc	status,2,c
 23272  003C04  D009               	goto	l11332
 23273  003C06  D7D2               	goto	l11324
 23274  003C08                     l11330:
 23275                           
 23276                           ; BSR set to: 0
 23277  003C08  0100               	movlb	0	; () banked
 23278  003C0A  0769               	decf	___xxtofl@exp& (0+255),f,b
 23279  003C0C  0100               	movlb	0	; () banked
 23280  003C0E  90D8               	bcf	status,0,c
 23281  003C10  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 23282  003C12  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 23283  003C14  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 23284  003C16  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 23285  003C18                     l11332:
 23286                           
 23287                           ; BSR set to: 0
 23288  003C18  0100               	movlb	0	; () banked
 23289  003C1A  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 23290  003C1C  D004               	goto	l2354
 23291                           
 23292                           ; BSR set to: 0
 23293  003C1E  0E02               	movlw	2
 23294  003C20  0100               	movlb	0	; () banked
 23295  003C22  6169               	cpfslt	___xxtofl@exp& (0+255),b
 23296  003C24  D7F1               	goto	l11330
 23297  003C26                     l2354:
 23298                           
 23299                           ; BSR set to: 0
 23300  003C26  0100               	movlb	0	; () banked
 23301  003C28  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 23302  003C2A  D009               	goto	l2355
 23303                           
 23304                           ; BSR set to: 0
 23305  003C2C  0EFF               	movlw	255
 23306  003C2E  0100               	movlb	0	; () banked
 23307  003C30  176A               	andwf	___xxtofl@arg& (0+255),f,b
 23308  003C32  0EFF               	movlw	255
 23309  003C34  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 23310  003C36  0E7F               	movlw	127
 23311  003C38  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 23312  003C3A  0EFF               	movlw	255
 23313  003C3C  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 23314  003C3E                     l2355:
 23315                           
 23316                           ; BSR set to: 0
 23317  003C3E  0100               	movlb	0	; () banked
 23318  003C40  90D8               	bcf	status,0,c
 23319  003C42  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 23320  003C44  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 23321  003C48  0100               	movlb	0	; () banked
 23322  003C4A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 23323  003C4C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 23324  003C4E  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 23325  003C50  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 23326  003C54  0100               	movlb	0	; () banked
 23327  003C56  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 23328  003C58  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 23329  003C5A  6B64               	clrf	??___xxtofl& (0+255),b
 23330  003C5C  0100               	movlb	0	; () banked
 23331  003C5E  5164               	movf	??___xxtofl& (0+255),w,b
 23332  003C60  0100               	movlb	0	; () banked
 23333  003C62  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 23334  003C64  0100               	movlb	0	; () banked
 23335  003C66  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 23336  003C68  0100               	movlb	0	; () banked
 23337  003C6A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 23338  003C6C  0100               	movlb	0	; () banked
 23339  003C6E  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 23340  003C70  0100               	movlb	0	; () banked
 23341  003C72  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 23342  003C74  0100               	movlb	0	; () banked
 23343  003C76  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 23344  003C78  0100               	movlb	0	; () banked
 23345  003C7A  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 23346                           
 23347                           ; BSR set to: 0
 23348  003C7C  0100               	movlb	0	; () banked
 23349  003C7E  5168               	movf	___xxtofl@sign& (0+255),w,b
 23350  003C80  0100               	movlb	0	; () banked
 23351  003C82  B4D8               	btfsc	status,2,c
 23352  003C84  D005               	goto	l11344
 23353                           
 23354                           ; BSR set to: 0
 23355  003C86  0100               	movlb	0	; () banked
 23356  003C88  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 23357  003C8A  D002               	goto	l11344
 23358                           
 23359                           ; BSR set to: 0
 23360  003C8C  0100               	movlb	0	; () banked
 23361  003C8E  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 23362  003C90                     l11344:
 23363                           
 23364                           ; BSR set to: 0
 23365  003C90  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 23366  003C94  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 23367  003C98  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 23368  003C9C  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 23369  003CA0  0012               	return	
 23370  003CA2                     __end_of___xxtofl:
 23371                           	opt stack 0
 23372                           tosu	equ	0xFFF
 23373                           tosh	equ	0xFFE
 23374                           tosl	equ	0xFFD
 23375                           pclath	equ	0xFFA
 23376                           tblptru	equ	0xFF8
 23377                           tblptrh	equ	0xFF7
 23378                           tblptrl	equ	0xFF6
 23379                           tablat	equ	0xFF5
 23380                           prodh	equ	0xFF4
 23381                           prodl	equ	0xFF3
 23382                           intcon	equ	0xFF2
 23383                           indf0	equ	0xFEF
 23384                           postinc0	equ	0xFEE
 23385                           fsr0h	equ	0xFEA
 23386                           fsr0l	equ	0xFE9
 23387                           wreg	equ	0xFE8
 23388                           postinc1	equ	0xFE6
 23389                           postdec1	equ	0xFE5
 23390                           plusw1	equ	0xFE3
 23391                           fsr1h	equ	0xFE2
 23392                           fsr1l	equ	0xFE1
 23393                           indf2	equ	0xFDF
 23394                           postinc2	equ	0xFDE
 23395                           postdec2	equ	0xFDD
 23396                           plusw2	equ	0xFDB
 23397                           fsr2h	equ	0xFDA
 23398                           fsr2l	equ	0xFD9
 23399                           status	equ	0xFD8
 23400                           
 23401 ;; *************** function ___fltol *****************
 23402 ;; Defined at:
 23403 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fltol.c"
 23404 ;; Parameters:    Size  Location     Type
 23405 ;;  f1              4   88[BANK0 ] unsigned char 
 23406 ;; Auto vars:     Size  Location     Type
 23407 ;;  exp1            1   97[BANK0 ] unsigned char 
 23408 ;;  sign1           1   96[BANK0 ] unsigned char 
 23409 ;; Return value:  Size  Location     Type
 23410 ;;                  4   88[BANK0 ] long 
 23411 ;; Registers used:
 23412 ;;		wreg, status,2, status,0
 23413 ;; Tracked objects:
 23414 ;;		On entry : 0/0
 23415 ;;		On exit  : 0/0
 23416 ;;		Unchanged: 0/0
 23417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23418 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23420 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23421 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23422 ;;Total ram usage:       10 bytes
 23423 ;; Hardware stack levels used:    1
 23424 ;; Hardware stack levels required when called:    4
 23425 ;; This function calls:
 23426 ;;		Nothing
 23427 ;; This function is called by:
 23428 ;;		_data_sys_cal_v1
 23429 ;;		_data_sys_cal_v2
 23430 ;;		_cal_diff_hight_to_vol_h
 23431 ;;		_cal_diff_hight_to_vol_v
 23432 ;;		_cal_diff_p_to_h
 23433 ;;		_cal_pt100_temperature_in
 23434 ;;		_cal_pt100_temperature_ex
 23435 ;;		_cal_additional_pressute
 23436 ;; This function uses a non-reentrant model
 23437 ;;
 23438                           
 23439                           	psect	text108
 23440  005064                     __ptext108:
 23441                           	opt stack 0
 23442  005064                     ___fltol:
 23443                           	opt stack 23
 23444                           
 23445                           ; BSR set to: 0
 23446                           ;incstack = 0
 23447  005064  0100               	movlb	0	; () banked
 23448  005066  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 23449  005068  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 23450  00506A  0100               	movlb	0	; () banked
 23451  00506C  6FC1               	movwf	___fltol@exp1& (0+255),b
 23452  00506E  0100               	movlb	0	; () banked
 23453  005070  51C1               	movf	___fltol@exp1& (0+255),w,b
 23454  005072  A4D8               	btfss	status,2,c
 23455  005074  D00A               	goto	l11552
 23456                           
 23457                           ; BSR set to: 0
 23458  005076  0E00               	movlw	0
 23459  005078  0100               	movlb	0	; () banked
 23460  00507A  6FB8               	movwf	?___fltol& (0+255),b
 23461  00507C  0E00               	movlw	0
 23462  00507E  6FB9               	movwf	(?___fltol+1)& (0+255),b
 23463  005080  0E00               	movlw	0
 23464  005082  6FBA               	movwf	(?___fltol+2)& (0+255),b
 23465  005084  0E00               	movlw	0
 23466  005086  6FBB               	movwf	(?___fltol+3)& (0+255),b
 23467                           
 23468                           ; BSR set to: 0
 23469  005088  0012               	return	
 23470  00508A                     l11552:
 23471                           
 23472                           ; BSR set to: 0
 23473  00508A  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 23474  00508E  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 23475  005092  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 23476  005096  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 23477  00509A  0E20               	movlw	32
 23478  00509C  D006               	goto	u10520
 23479  00509E                     u10525:
 23480  00509E  0100               	movlb	0	; () banked
 23481  0050A0  90D8               	bcf	status,0,c
 23482  0050A2  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 23483  0050A4  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 23484  0050A6  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 23485  0050A8  33BC               	rrcf	??___fltol& (0+255),f,b
 23486  0050AA                     u10520:
 23487  0050AA  2EE8               	decfsz	wreg,f,c
 23488  0050AC  D7F8               	goto	u10525
 23489  0050AE  0100               	movlb	0	; () banked
 23490  0050B0  51BC               	movf	??___fltol& (0+255),w,b
 23491  0050B2  0100               	movlb	0	; () banked
 23492  0050B4  6FC0               	movwf	___fltol@sign1& (0+255),b
 23493                           
 23494                           ; BSR set to: 0
 23495  0050B6  0100               	movlb	0	; () banked
 23496  0050B8  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 23497                           
 23498                           ; BSR set to: 0
 23499  0050BA  0EFF               	movlw	255
 23500  0050BC  0100               	movlb	0	; () banked
 23501  0050BE  17B8               	andwf	___fltol@f1& (0+255),f,b
 23502  0050C0  0EFF               	movlw	255
 23503  0050C2  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 23504  0050C4  0EFF               	movlw	255
 23505  0050C6  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 23506  0050C8  0E00               	movlw	0
 23507  0050CA  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 23508                           
 23509                           ; BSR set to: 0
 23510  0050CC  0E96               	movlw	150
 23511  0050CE  0100               	movlb	0	; () banked
 23512  0050D0  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 23513                           
 23514                           ; BSR set to: 0
 23515  0050D2  0100               	movlb	0	; () banked
 23516  0050D4  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 23517  0050D6  D01A               	goto	l11572
 23518                           
 23519                           ; BSR set to: 0
 23520  0050D8  0100               	movlb	0	; () banked
 23521  0050DA  51C1               	movf	___fltol@exp1& (0+255),w,b
 23522  0050DC  0A80               	xorlw	128
 23523  0050DE  0F97               	addlw	151
 23524  0050E0  B0D8               	btfsc	status,0,c
 23525  0050E2  D00A               	goto	l11568
 23526                           
 23527                           ; BSR set to: 0
 23528  0050E4  0E00               	movlw	0
 23529  0050E6  0100               	movlb	0	; () banked
 23530  0050E8  6FB8               	movwf	?___fltol& (0+255),b
 23531  0050EA  0E00               	movlw	0
 23532  0050EC  6FB9               	movwf	(?___fltol+1)& (0+255),b
 23533  0050EE  0E00               	movlw	0
 23534  0050F0  6FBA               	movwf	(?___fltol+2)& (0+255),b
 23535  0050F2  0E00               	movlw	0
 23536  0050F4  6FBB               	movwf	(?___fltol+3)& (0+255),b
 23537                           
 23538                           ; BSR set to: 0
 23539  0050F6  0012               	return	
 23540  0050F8                     l11568:
 23541                           
 23542                           ; BSR set to: 0
 23543  0050F8  0100               	movlb	0	; () banked
 23544  0050FA  90D8               	bcf	status,0,c
 23545  0050FC  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 23546  0050FE  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 23547  005100  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 23548  005102  33B8               	rrcf	___fltol@f1& (0+255),f,b
 23549                           
 23550                           ; BSR set to: 0
 23551  005104  0100               	movlb	0	; () banked
 23552  005106  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 23553  005108  D7F7               	goto	l11568
 23554                           
 23555                           ; BSR set to: 0
 23556  00510A  D01B               	goto	l11582
 23557  00510C                     l11572:
 23558                           
 23559                           ; BSR set to: 0
 23560  00510C  0E1F               	movlw	31
 23561  00510E  0100               	movlb	0	; () banked
 23562  005110  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 23563  005112  D012               	goto	l11580
 23564                           
 23565                           ; BSR set to: 0
 23566  005114  0E00               	movlw	0
 23567  005116  0100               	movlb	0	; () banked
 23568  005118  6FB8               	movwf	?___fltol& (0+255),b
 23569  00511A  0E00               	movlw	0
 23570  00511C  6FB9               	movwf	(?___fltol+1)& (0+255),b
 23571  00511E  0E00               	movlw	0
 23572  005120  6FBA               	movwf	(?___fltol+2)& (0+255),b
 23573  005122  0E00               	movlw	0
 23574  005124  6FBB               	movwf	(?___fltol+3)& (0+255),b
 23575                           
 23576                           ; BSR set to: 0
 23577  005126  0012               	return	
 23578  005128                     l11578:
 23579                           
 23580                           ; BSR set to: 0
 23581  005128  0100               	movlb	0	; () banked
 23582  00512A  90D8               	bcf	status,0,c
 23583  00512C  37B8               	rlcf	___fltol@f1& (0+255),f,b
 23584  00512E  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 23585  005130  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 23586  005132  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 23587  005134  0100               	movlb	0	; () banked
 23588  005136  07C1               	decf	___fltol@exp1& (0+255),f,b
 23589  005138                     l11580:
 23590                           
 23591                           ; BSR set to: 0
 23592  005138  0100               	movlb	0	; () banked
 23593  00513A  51C1               	movf	___fltol@exp1& (0+255),w,b
 23594  00513C  0100               	movlb	0	; () banked
 23595  00513E  A4D8               	btfss	status,2,c
 23596  005140  D7F3               	goto	l11578
 23597  005142                     l11582:
 23598                           
 23599                           ; BSR set to: 0
 23600  005142  0100               	movlb	0	; () banked
 23601  005144  51C0               	movf	___fltol@sign1& (0+255),w,b
 23602  005146  0100               	movlb	0	; () banked
 23603  005148  B4D8               	btfsc	status,2,c
 23604  00514A  D009               	goto	l11586
 23605                           
 23606                           ; BSR set to: 0
 23607  00514C  0100               	movlb	0	; () banked
 23608  00514E  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 23609  005150  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 23610  005152  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 23611  005154  6DB8               	negf	___fltol@f1& (0+255),b
 23612  005156  0E00               	movlw	0
 23613  005158  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 23614  00515A  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 23615  00515C  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 23616  00515E                     l11586:
 23617                           
 23618                           ; BSR set to: 0
 23619  00515E  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 23620  005162  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 23621  005166  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 23622  00516A  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 23623  00516E  0012               	return	
 23624  005170                     __end_of___fltol:
 23625                           	opt stack 0
 23626                           tosu	equ	0xFFF
 23627                           tosh	equ	0xFFE
 23628                           tosl	equ	0xFFD
 23629                           pclath	equ	0xFFA
 23630                           tblptru	equ	0xFF8
 23631                           tblptrh	equ	0xFF7
 23632                           tblptrl	equ	0xFF6
 23633                           tablat	equ	0xFF5
 23634                           prodh	equ	0xFF4
 23635                           prodl	equ	0xFF3
 23636                           intcon	equ	0xFF2
 23637                           indf0	equ	0xFEF
 23638                           postinc0	equ	0xFEE
 23639                           fsr0h	equ	0xFEA
 23640                           fsr0l	equ	0xFE9
 23641                           wreg	equ	0xFE8
 23642                           postinc1	equ	0xFE6
 23643                           postdec1	equ	0xFE5
 23644                           plusw1	equ	0xFE3
 23645                           fsr1h	equ	0xFE2
 23646                           fsr1l	equ	0xFE1
 23647                           indf2	equ	0xFDF
 23648                           postinc2	equ	0xFDE
 23649                           postdec2	equ	0xFDD
 23650                           plusw2	equ	0xFDB
 23651                           fsr2h	equ	0xFDA
 23652                           fsr2l	equ	0xFD9
 23653                           status	equ	0xFD8
 23654                           
 23655 ;; *************** function ___flmul *****************
 23656 ;; Defined at:
 23657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcmul.c"
 23658 ;; Parameters:    Size  Location     Type
 23659 ;;  b               4   14[BANK0 ] long 
 23660 ;;  a               4   18[BANK0 ] long 
 23661 ;; Auto vars:     Size  Location     Type
 23662 ;;  prod            4   33[BANK0 ] struct .
 23663 ;;  grs             4   28[BANK0 ] unsigned long 
 23664 ;;  temp            2   37[BANK0 ] struct .
 23665 ;;  bexp            1   32[BANK0 ] unsigned char 
 23666 ;;  aexp            1   27[BANK0 ] unsigned char 
 23667 ;;  sign            1   26[BANK0 ] unsigned char 
 23668 ;; Return value:  Size  Location     Type
 23669 ;;                  4   14[BANK0 ] unsigned char 
 23670 ;; Registers used:
 23671 ;;		wreg, status,2, status,0, prodl, prodh
 23672 ;; Tracked objects:
 23673 ;;		On entry : 0/0
 23674 ;;		On exit  : 0/0
 23675 ;;		Unchanged: 0/0
 23676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23677 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23678 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23679 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23680 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23681 ;;Total ram usage:       25 bytes
 23682 ;; Hardware stack levels used:    1
 23683 ;; Hardware stack levels required when called:    4
 23684 ;; This function calls:
 23685 ;;		Nothing
 23686 ;; This function is called by:
 23687 ;;		_data_sys_cal_v1
 23688 ;;		_data_sys_cal_v2
 23689 ;;		_m_interp1_float_fast
 23690 ;;		_cal_diff_hight_to_vol_h
 23691 ;;		_cal_diff_hight_to_vol_v
 23692 ;;		_cal_diff_p_to_h
 23693 ;;		_cal_pt100_temperature_in
 23694 ;;		_cal_pt100_temperature_ex
 23695 ;;		_cal_additional_pressute
 23696 ;; This function uses a non-reentrant model
 23697 ;;
 23698                           
 23699                           	psect	text109
 23700  001728                     __ptext109:
 23701                           	opt stack 0
 23702  001728                     ___flmul:
 23703                           	opt stack 23
 23704                           
 23705                           ; BSR set to: 0
 23706                           ;incstack = 0
 23707  001728  0100               	movlb	0	; () banked
 23708  00172A  5171               	movf	(___flmul@b+3)& (0+255),w,b
 23709  00172C  0B80               	andlw	128
 23710  00172E  0100               	movlb	0	; () banked
 23711  001730  6F7A               	movwf	___flmul@sign& (0+255),b
 23712  001732  0100               	movlb	0	; () banked
 23713  001734  5171               	movf	(___flmul@b+3)& (0+255),w,b
 23714  001736  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 23715  001738  0100               	movlb	0	; () banked
 23716  00173A  6F80               	movwf	___flmul@bexp& (0+255),b
 23717                           
 23718                           ; BSR set to: 0
 23719  00173C  0100               	movlb	0	; () banked
 23720  00173E  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
 23721  001740  D002               	goto	l11130
 23722                           
 23723                           ; BSR set to: 0
 23724  001742  0100               	movlb	0	; () banked
 23725  001744  8180               	bsf	___flmul@bexp& (0+255),0,b
 23726  001746                     l11130:
 23727                           
 23728                           ; BSR set to: 0
 23729  001746  0100               	movlb	0	; () banked
 23730  001748  5180               	movf	___flmul@bexp& (0+255),w,b
 23731  00174A  0100               	movlb	0	; () banked
 23732  00174C  B4D8               	btfsc	status,2,c
 23733  00174E  D010               	goto	l11138
 23734                           
 23735                           ; BSR set to: 0
 23736  001750  0100               	movlb	0	; () banked
 23737  001752  2980               	incf	___flmul@bexp& (0+255),w,b
 23738  001754  A4D8               	btfss	status,2,c
 23739  001756  D009               	goto	l11136
 23740                           
 23741                           ; BSR set to: 0
 23742  001758  0E00               	movlw	0
 23743  00175A  0100               	movlb	0	; () banked
 23744  00175C  6F6E               	movwf	___flmul@b& (0+255),b
 23745  00175E  0E00               	movlw	0
 23746  001760  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 23747  001762  0E00               	movlw	0
 23748  001764  6F70               	movwf	(___flmul@b+2)& (0+255),b
 23749  001766  0E00               	movlw	0
 23750  001768  6F71               	movwf	(___flmul@b+3)& (0+255),b
 23751  00176A                     l11136:
 23752                           
 23753                           ; BSR set to: 0
 23754  00176A  0100               	movlb	0	; () banked
 23755  00176C  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 23756  00176E  D009               	goto	l11140
 23757  001770                     l11138:
 23758                           
 23759                           ; BSR set to: 0
 23760  001770  0E00               	movlw	0
 23761  001772  0100               	movlb	0	; () banked
 23762  001774  6F6E               	movwf	___flmul@b& (0+255),b
 23763  001776  0E00               	movlw	0
 23764  001778  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 23765  00177A  0E00               	movlw	0
 23766  00177C  6F70               	movwf	(___flmul@b+2)& (0+255),b
 23767  00177E  0E00               	movlw	0
 23768  001780  6F71               	movwf	(___flmul@b+3)& (0+255),b
 23769  001782                     l11140:
 23770                           
 23771                           ; BSR set to: 0
 23772  001782  0100               	movlb	0	; () banked
 23773  001784  5175               	movf	(___flmul@a+3)& (0+255),w,b
 23774  001786  0B80               	andlw	128
 23775  001788  0100               	movlb	0	; () banked
 23776  00178A  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 23777                           
 23778                           ; BSR set to: 0
 23779  00178C  0100               	movlb	0	; () banked
 23780  00178E  5175               	movf	(___flmul@a+3)& (0+255),w,b
 23781  001790  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 23782  001792  0100               	movlb	0	; () banked
 23783  001794  6F7B               	movwf	___flmul@aexp& (0+255),b
 23784                           
 23785                           ; BSR set to: 0
 23786  001796  0100               	movlb	0	; () banked
 23787  001798  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
 23788  00179A  D002               	goto	l11148
 23789                           
 23790                           ; BSR set to: 0
 23791  00179C  0100               	movlb	0	; () banked
 23792  00179E  817B               	bsf	___flmul@aexp& (0+255),0,b
 23793  0017A0                     l11148:
 23794                           
 23795                           ; BSR set to: 0
 23796  0017A0  0100               	movlb	0	; () banked
 23797  0017A2  517B               	movf	___flmul@aexp& (0+255),w,b
 23798  0017A4  0100               	movlb	0	; () banked
 23799  0017A6  B4D8               	btfsc	status,2,c
 23800  0017A8  D010               	goto	l11156
 23801                           
 23802                           ; BSR set to: 0
 23803  0017AA  0100               	movlb	0	; () banked
 23804  0017AC  297B               	incf	___flmul@aexp& (0+255),w,b
 23805  0017AE  A4D8               	btfss	status,2,c
 23806  0017B0  D009               	goto	l11154
 23807                           
 23808                           ; BSR set to: 0
 23809  0017B2  0E00               	movlw	0
 23810  0017B4  0100               	movlb	0	; () banked
 23811  0017B6  6F72               	movwf	___flmul@a& (0+255),b
 23812  0017B8  0E00               	movlw	0
 23813  0017BA  6F73               	movwf	(___flmul@a+1)& (0+255),b
 23814  0017BC  0E00               	movlw	0
 23815  0017BE  6F74               	movwf	(___flmul@a+2)& (0+255),b
 23816  0017C0  0E00               	movlw	0
 23817  0017C2  6F75               	movwf	(___flmul@a+3)& (0+255),b
 23818  0017C4                     l11154:
 23819                           
 23820                           ; BSR set to: 0
 23821  0017C4  0100               	movlb	0	; () banked
 23822  0017C6  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 23823  0017C8  D009               	goto	l2318
 23824  0017CA                     l11156:
 23825                           
 23826                           ; BSR set to: 0
 23827  0017CA  0E00               	movlw	0
 23828  0017CC  0100               	movlb	0	; () banked
 23829  0017CE  6F72               	movwf	___flmul@a& (0+255),b
 23830  0017D0  0E00               	movlw	0
 23831  0017D2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 23832  0017D4  0E00               	movlw	0
 23833  0017D6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 23834  0017D8  0E00               	movlw	0
 23835  0017DA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 23836  0017DC                     l2318:
 23837                           
 23838                           ; BSR set to: 0
 23839  0017DC  0100               	movlb	0	; () banked
 23840  0017DE  517B               	movf	___flmul@aexp& (0+255),w,b
 23841  0017E0  0100               	movlb	0	; () banked
 23842  0017E2  B4D8               	btfsc	status,2,c
 23843  0017E4  D005               	goto	l11160
 23844                           
 23845                           ; BSR set to: 0
 23846  0017E6  0100               	movlb	0	; () banked
 23847  0017E8  5180               	movf	___flmul@bexp& (0+255),w,b
 23848  0017EA  0100               	movlb	0	; () banked
 23849  0017EC  A4D8               	btfss	status,2,c
 23850  0017EE  D00A               	goto	l11164
 23851  0017F0                     l11160:
 23852                           
 23853                           ; BSR set to: 0
 23854  0017F0  0E00               	movlw	0
 23855  0017F2  0100               	movlb	0	; () banked
 23856  0017F4  6F6E               	movwf	?___flmul& (0+255),b
 23857  0017F6  0E00               	movlw	0
 23858  0017F8  6F6F               	movwf	(?___flmul+1)& (0+255),b
 23859  0017FA  0E00               	movlw	0
 23860  0017FC  6F70               	movwf	(?___flmul+2)& (0+255),b
 23861  0017FE  0E00               	movlw	0
 23862  001800  6F71               	movwf	(?___flmul+3)& (0+255),b
 23863                           
 23864                           ; BSR set to: 0
 23865  001802  0012               	return	
 23866  001804                     l11164:
 23867                           
 23868                           ; BSR set to: 0
 23869  001804  0100               	movlb	0	; () banked
 23870  001806  5174               	movf	(___flmul@a+2)& (0+255),w,b
 23871  001808  0100               	movlb	0	; () banked
 23872  00180A  036E               	mulwf	___flmul@b& (0+255),b
 23873  00180C  CFF3 F085          	movff	prodl,___flmul@temp
 23874  001810  CFF4 F086          	movff	prodh,___flmul@temp+1
 23875                           
 23876                           ; BSR set to: 0
 23877  001814  0100               	movlb	0	; () banked
 23878  001816  5185               	movf	___flmul@temp& (0+255),w,b
 23879  001818  0100               	movlb	0	; () banked
 23880  00181A  6F7C               	movwf	___flmul@grs& (0+255),b
 23881  00181C  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 23882  00181E  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 23883  001820  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 23884                           
 23885                           ; BSR set to: 0
 23886  001822  0100               	movlb	0	; () banked
 23887  001824  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 23888  001826  0100               	movlb	0	; () banked
 23889  001828  6F81               	movwf	___flmul@prod& (0+255),b
 23890  00182A  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 23891  00182C  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 23892  00182E  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 23893  001830  0100               	movlb	0	; () banked
 23894  001832  5173               	movf	(___flmul@a+1)& (0+255),w,b
 23895  001834  0100               	movlb	0	; () banked
 23896  001836  036F               	mulwf	(___flmul@b+1)& (0+255),b
 23897  001838  CFF3 F085          	movff	prodl,___flmul@temp
 23898  00183C  CFF4 F086          	movff	prodh,___flmul@temp+1
 23899                           
 23900                           ; BSR set to: 0
 23901  001840  0100               	movlb	0	; () banked
 23902  001842  5185               	movf	___flmul@temp& (0+255),w,b
 23903  001844  0100               	movlb	0	; () banked
 23904  001846  277C               	addwf	___flmul@grs& (0+255),f,b
 23905  001848  0E00               	movlw	0
 23906  00184A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23907  00184C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23908  00184E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23909                           
 23910                           ; BSR set to: 0
 23911  001850  0100               	movlb	0	; () banked
 23912  001852  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 23913  001854  0100               	movlb	0	; () banked
 23914  001856  2781               	addwf	___flmul@prod& (0+255),f,b
 23915  001858  0E00               	movlw	0
 23916  00185A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23917  00185C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23918  00185E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23919  001860  0100               	movlb	0	; () banked
 23920  001862  5172               	movf	___flmul@a& (0+255),w,b
 23921  001864  0100               	movlb	0	; () banked
 23922  001866  0370               	mulwf	(___flmul@b+2)& (0+255),b
 23923  001868  CFF3 F085          	movff	prodl,___flmul@temp
 23924  00186C  CFF4 F086          	movff	prodh,___flmul@temp+1
 23925                           
 23926                           ; BSR set to: 0
 23927  001870  0100               	movlb	0	; () banked
 23928  001872  5185               	movf	___flmul@temp& (0+255),w,b
 23929  001874  0100               	movlb	0	; () banked
 23930  001876  277C               	addwf	___flmul@grs& (0+255),f,b
 23931  001878  0E00               	movlw	0
 23932  00187A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23933  00187C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23934  00187E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23935                           
 23936                           ; BSR set to: 0
 23937  001880  0100               	movlb	0	; () banked
 23938  001882  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 23939  001884  0100               	movlb	0	; () banked
 23940  001886  2781               	addwf	___flmul@prod& (0+255),f,b
 23941  001888  0E00               	movlw	0
 23942  00188A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 23943  00188C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 23944  00188E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 23945                           
 23946                           ; BSR set to: 0
 23947  001890  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 23948  001894  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 23949  001898  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 23950  00189C  0100               	movlb	0	; () banked
 23951  00189E  6B7C               	clrf	___flmul@grs& (0+255),b
 23952                           
 23953                           ; BSR set to: 0
 23954  0018A0  0100               	movlb	0	; () banked
 23955  0018A2  5172               	movf	___flmul@a& (0+255),w,b
 23956  0018A4  0100               	movlb	0	; () banked
 23957  0018A6  036F               	mulwf	(___flmul@b+1)& (0+255),b
 23958  0018A8  CFF3 F085          	movff	prodl,___flmul@temp
 23959  0018AC  CFF4 F086          	movff	prodh,___flmul@temp+1
 23960                           
 23961                           ; BSR set to: 0
 23962  0018B0  0100               	movlb	0	; () banked
 23963  0018B2  5185               	movf	___flmul@temp& (0+255),w,b
 23964  0018B4  0100               	movlb	0	; () banked
 23965  0018B6  277C               	addwf	___flmul@grs& (0+255),f,b
 23966  0018B8  0100               	movlb	0	; () banked
 23967  0018BA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 23968  0018BC  0100               	movlb	0	; () banked
 23969  0018BE  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23970  0018C0  0E00               	movlw	0
 23971  0018C2  0100               	movlb	0	; () banked
 23972  0018C4  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23973  0018C6  0E00               	movlw	0
 23974  0018C8  0100               	movlb	0	; () banked
 23975  0018CA  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 23976                           
 23977                           ; BSR set to: 0
 23978  0018CC  0100               	movlb	0	; () banked
 23979  0018CE  5173               	movf	(___flmul@a+1)& (0+255),w,b
 23980  0018D0  0100               	movlb	0	; () banked
 23981  0018D2  036E               	mulwf	___flmul@b& (0+255),b
 23982  0018D4  CFF3 F085          	movff	prodl,___flmul@temp
 23983  0018D8  CFF4 F086          	movff	prodh,___flmul@temp+1
 23984                           
 23985                           ; BSR set to: 0
 23986  0018DC  0100               	movlb	0	; () banked
 23987  0018DE  5185               	movf	___flmul@temp& (0+255),w,b
 23988  0018E0  0100               	movlb	0	; () banked
 23989  0018E2  277C               	addwf	___flmul@grs& (0+255),f,b
 23990  0018E4  0100               	movlb	0	; () banked
 23991  0018E6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 23992  0018E8  0100               	movlb	0	; () banked
 23993  0018EA  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 23994  0018EC  0E00               	movlw	0
 23995  0018EE  0100               	movlb	0	; () banked
 23996  0018F0  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 23997  0018F2  0E00               	movlw	0
 23998  0018F4  0100               	movlb	0	; () banked
 23999  0018F6  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 24000                           
 24001                           ; BSR set to: 0
 24002  0018F8  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 24003  0018FC  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 24004  001900  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 24005  001904  0100               	movlb	0	; () banked
 24006  001906  6B7C               	clrf	___flmul@grs& (0+255),b
 24007  001908  0100               	movlb	0	; () banked
 24008  00190A  5172               	movf	___flmul@a& (0+255),w,b
 24009  00190C  0100               	movlb	0	; () banked
 24010  00190E  036E               	mulwf	___flmul@b& (0+255),b
 24011  001910  CFF3 F085          	movff	prodl,___flmul@temp
 24012  001914  CFF4 F086          	movff	prodh,___flmul@temp+1
 24013                           
 24014                           ; BSR set to: 0
 24015  001918  0100               	movlb	0	; () banked
 24016  00191A  5185               	movf	___flmul@temp& (0+255),w,b
 24017  00191C  0100               	movlb	0	; () banked
 24018  00191E  277C               	addwf	___flmul@grs& (0+255),f,b
 24019  001920  0100               	movlb	0	; () banked
 24020  001922  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 24021  001924  0100               	movlb	0	; () banked
 24022  001926  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 24023  001928  0E00               	movlw	0
 24024  00192A  0100               	movlb	0	; () banked
 24025  00192C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 24026  00192E  0E00               	movlw	0
 24027  001930  0100               	movlb	0	; () banked
 24028  001932  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 24029                           
 24030                           ; BSR set to: 0
 24031  001934  0100               	movlb	0	; () banked
 24032  001936  5174               	movf	(___flmul@a+2)& (0+255),w,b
 24033  001938  0100               	movlb	0	; () banked
 24034  00193A  036F               	mulwf	(___flmul@b+1)& (0+255),b
 24035  00193C  CFF3 F085          	movff	prodl,___flmul@temp
 24036  001940  CFF4 F086          	movff	prodh,___flmul@temp+1
 24037  001944  0100               	movlb	0	; () banked
 24038  001946  5185               	movf	___flmul@temp& (0+255),w,b
 24039  001948  0100               	movlb	0	; () banked
 24040  00194A  2781               	addwf	___flmul@prod& (0+255),f,b
 24041  00194C  0100               	movlb	0	; () banked
 24042  00194E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 24043  001950  0100               	movlb	0	; () banked
 24044  001952  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24045  001954  0E00               	movlw	0
 24046  001956  0100               	movlb	0	; () banked
 24047  001958  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24048  00195A  0E00               	movlw	0
 24049  00195C  0100               	movlb	0	; () banked
 24050  00195E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24051                           
 24052                           ; BSR set to: 0
 24053  001960  0100               	movlb	0	; () banked
 24054  001962  5173               	movf	(___flmul@a+1)& (0+255),w,b
 24055  001964  0100               	movlb	0	; () banked
 24056  001966  0370               	mulwf	(___flmul@b+2)& (0+255),b
 24057  001968  CFF3 F085          	movff	prodl,___flmul@temp
 24058  00196C  CFF4 F086          	movff	prodh,___flmul@temp+1
 24059                           
 24060                           ; BSR set to: 0
 24061  001970  0100               	movlb	0	; () banked
 24062  001972  5185               	movf	___flmul@temp& (0+255),w,b
 24063  001974  0100               	movlb	0	; () banked
 24064  001976  2781               	addwf	___flmul@prod& (0+255),f,b
 24065  001978  0100               	movlb	0	; () banked
 24066  00197A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 24067  00197C  0100               	movlb	0	; () banked
 24068  00197E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24069  001980  0E00               	movlw	0
 24070  001982  0100               	movlb	0	; () banked
 24071  001984  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24072  001986  0E00               	movlw	0
 24073  001988  0100               	movlb	0	; () banked
 24074  00198A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24075  00198C  0100               	movlb	0	; () banked
 24076  00198E  5174               	movf	(___flmul@a+2)& (0+255),w,b
 24077  001990  0100               	movlb	0	; () banked
 24078  001992  0370               	mulwf	(___flmul@b+2)& (0+255),b
 24079  001994  CFF3 F085          	movff	prodl,___flmul@temp
 24080  001998  CFF4 F086          	movff	prodh,___flmul@temp+1
 24081                           
 24082                           ; BSR set to: 0
 24083  00199C  0100               	movlb	0	; () banked
 24084  00199E  5185               	movf	___flmul@temp& (0+255),w,b
 24085  0019A0  0100               	movlb	0	; () banked
 24086  0019A2  6F76               	movwf	??___flmul& (0+255),b
 24087  0019A4  0100               	movlb	0	; () banked
 24088  0019A6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 24089  0019A8  0100               	movlb	0	; () banked
 24090  0019AA  6F77               	movwf	(??___flmul+1)& (0+255),b
 24091  0019AC  0100               	movlb	0	; () banked
 24092  0019AE  6B78               	clrf	(??___flmul+2)& (0+255),b
 24093  0019B0  0100               	movlb	0	; () banked
 24094  0019B2  6B79               	clrf	(??___flmul+3)& (0+255),b
 24095  0019B4  C078  F079         	movff	??___flmul+2,??___flmul+3
 24096  0019B8  C077  F078         	movff	??___flmul+1,??___flmul+2
 24097  0019BC  C076  F077         	movff	??___flmul,??___flmul+1
 24098  0019C0  0100               	movlb	0	; () banked
 24099  0019C2  6B76               	clrf	??___flmul& (0+255),b
 24100  0019C4  0100               	movlb	0	; () banked
 24101  0019C6  5176               	movf	??___flmul& (0+255),w,b
 24102  0019C8  0100               	movlb	0	; () banked
 24103  0019CA  2781               	addwf	___flmul@prod& (0+255),f,b
 24104  0019CC  0100               	movlb	0	; () banked
 24105  0019CE  5177               	movf	(??___flmul+1)& (0+255),w,b
 24106  0019D0  0100               	movlb	0	; () banked
 24107  0019D2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24108  0019D4  0100               	movlb	0	; () banked
 24109  0019D6  5178               	movf	(??___flmul+2)& (0+255),w,b
 24110  0019D8  0100               	movlb	0	; () banked
 24111  0019DA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24112  0019DC  0100               	movlb	0	; () banked
 24113  0019DE  5179               	movf	(??___flmul+3)& (0+255),w,b
 24114  0019E0  0100               	movlb	0	; () banked
 24115  0019E2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24116                           
 24117                           ; BSR set to: 0
 24118  0019E4  C07C  F076         	movff	___flmul@grs,??___flmul
 24119  0019E8  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 24120  0019EC  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 24121  0019F0  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 24122  0019F4  0E19               	movlw	25
 24123  0019F6  D006               	goto	u9870
 24124  0019F8                     u9875:
 24125  0019F8  0100               	movlb	0	; () banked
 24126  0019FA  90D8               	bcf	status,0,c
 24127  0019FC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 24128  0019FE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 24129  001A00  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 24130  001A02  3376               	rrcf	??___flmul& (0+255),f,b
 24131  001A04                     u9870:
 24132  001A04  2EE8               	decfsz	wreg,f,c
 24133  001A06  D7F8               	goto	u9875
 24134  001A08  0100               	movlb	0	; () banked
 24135  001A0A  5176               	movf	??___flmul& (0+255),w,b
 24136  001A0C  0100               	movlb	0	; () banked
 24137  001A0E  2781               	addwf	___flmul@prod& (0+255),f,b
 24138  001A10  0100               	movlb	0	; () banked
 24139  001A12  5177               	movf	(??___flmul+1)& (0+255),w,b
 24140  001A14  0100               	movlb	0	; () banked
 24141  001A16  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24142  001A18  0100               	movlb	0	; () banked
 24143  001A1A  5178               	movf	(??___flmul+2)& (0+255),w,b
 24144  001A1C  0100               	movlb	0	; () banked
 24145  001A1E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24146  001A20  0100               	movlb	0	; () banked
 24147  001A22  5179               	movf	(??___flmul+3)& (0+255),w,b
 24148  001A24  0100               	movlb	0	; () banked
 24149  001A26  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24150                           
 24151                           ; BSR set to: 0
 24152  001A28  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 24153  001A2C  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 24154  001A30  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 24155  001A34  0100               	movlb	0	; () banked
 24156  001A36  6B7C               	clrf	___flmul@grs& (0+255),b
 24157                           
 24158                           ; BSR set to: 0
 24159  001A38  0100               	movlb	0	; () banked
 24160  001A3A  517B               	movf	___flmul@aexp& (0+255),w,b
 24161  001A3C  C080  F076         	movff	___flmul@bexp,??___flmul
 24162  001A40  0100               	movlb	0	; () banked
 24163  001A42  6B77               	clrf	(??___flmul+1)& (0+255),b
 24164  001A44  0100               	movlb	0	; () banked
 24165  001A46  2776               	addwf	??___flmul& (0+255),f,b
 24166  001A48  0E00               	movlw	0
 24167  001A4A  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 24168  001A4C  0E82               	movlw	130
 24169  001A4E  0100               	movlb	0	; () banked
 24170  001A50  2576               	addwf	??___flmul& (0+255),w,b
 24171  001A52  0100               	movlb	0	; () banked
 24172  001A54  6F85               	movwf	___flmul@temp& (0+255),b
 24173  001A56  0EFF               	movlw	255
 24174  001A58  0100               	movlb	0	; () banked
 24175  001A5A  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 24176  001A5C  0100               	movlb	0	; () banked
 24177  001A5E  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 24178  001A60  D015               	goto	l11212
 24179  001A62                     l11206:
 24180                           
 24181                           ; BSR set to: 0
 24182  001A62  0100               	movlb	0	; () banked
 24183  001A64  90D8               	bcf	status,0,c
 24184  001A66  3781               	rlcf	___flmul@prod& (0+255),f,b
 24185  001A68  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 24186  001A6A  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 24187  001A6C  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 24188                           
 24189                           ; BSR set to: 0
 24190  001A6E  0100               	movlb	0	; () banked
 24191  001A70  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 24192  001A72  D002               	goto	l2325
 24193                           
 24194                           ; BSR set to: 0
 24195  001A74  0100               	movlb	0	; () banked
 24196  001A76  8181               	bsf	___flmul@prod& (0+255),0,b
 24197  001A78                     l2325:
 24198                           
 24199                           ; BSR set to: 0
 24200  001A78  0100               	movlb	0	; () banked
 24201  001A7A  90D8               	bcf	status,0,c
 24202  001A7C  377C               	rlcf	___flmul@grs& (0+255),f,b
 24203  001A7E  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 24204  001A80  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 24205  001A82  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 24206  001A84  0100               	movlb	0	; () banked
 24207  001A86  0785               	decf	___flmul@temp& (0+255),f,b
 24208  001A88  A0D8               	btfss	status,0,c
 24209  001A8A  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 24210  001A8C                     l11212:
 24211                           
 24212                           ; BSR set to: 0
 24213  001A8C  0100               	movlb	0	; () banked
 24214  001A8E  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 24215  001A90  D7E8               	goto	l11206
 24216                           
 24217                           ; BSR set to: 0
 24218                           
 24219                           ; BSR set to: 0
 24220  001A92  0E00               	movlw	0
 24221  001A94  0100               	movlb	0	; () banked
 24222  001A96  6F7B               	movwf	___flmul@aexp& (0+255),b
 24223                           
 24224                           ; BSR set to: 0
 24225  001A98  0100               	movlb	0	; () banked
 24226  001A9A  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 24227  001A9C  D024               	goto	l2327
 24228                           
 24229                           ; BSR set to: 0
 24230  001A9E  0EFF               	movlw	255
 24231  001AA0  0100               	movlb	0	; () banked
 24232  001AA2  157C               	andwf	___flmul@grs& (0+255),w,b
 24233  001AA4  0100               	movlb	0	; () banked
 24234  001AA6  6F76               	movwf	??___flmul& (0+255),b
 24235  001AA8  0EFF               	movlw	255
 24236  001AAA  0100               	movlb	0	; () banked
 24237  001AAC  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 24238  001AAE  0100               	movlb	0	; () banked
 24239  001AB0  6F77               	movwf	(??___flmul+1)& (0+255),b
 24240  001AB2  0EFF               	movlw	255
 24241  001AB4  0100               	movlb	0	; () banked
 24242  001AB6  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 24243  001AB8  0100               	movlb	0	; () banked
 24244  001ABA  6F78               	movwf	(??___flmul+2)& (0+255),b
 24245  001ABC  0E7F               	movlw	127
 24246  001ABE  0100               	movlb	0	; () banked
 24247  001AC0  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 24248  001AC2  0100               	movlb	0	; () banked
 24249  001AC4  6F79               	movwf	(??___flmul+3)& (0+255),b
 24250  001AC6  0100               	movlb	0	; () banked
 24251  001AC8  5176               	movf	??___flmul& (0+255),w,b
 24252  001ACA  0100               	movlb	0	; () banked
 24253  001ACC  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 24254  001ACE  0100               	movlb	0	; () banked
 24255  001AD0  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 24256  001AD2  0100               	movlb	0	; () banked
 24257  001AD4  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 24258  001AD6  A4D8               	btfss	status,2,c
 24259  001AD8  D003               	goto	l11222
 24260                           
 24261                           ; BSR set to: 0
 24262                           
 24263                           ; BSR set to: 0
 24264  001ADA  0100               	movlb	0	; () banked
 24265  001ADC  A181               	btfss	___flmul@prod& (0+255),0,b
 24266  001ADE  D003               	goto	l2327
 24267  001AE0                     l11222:
 24268                           
 24269                           ; BSR set to: 0
 24270  001AE0  0E01               	movlw	1
 24271  001AE2  0100               	movlb	0	; () banked
 24272  001AE4  6F7B               	movwf	___flmul@aexp& (0+255),b
 24273  001AE6                     l2327:
 24274                           
 24275                           ; BSR set to: 0
 24276  001AE6  0100               	movlb	0	; () banked
 24277  001AE8  517B               	movf	___flmul@aexp& (0+255),w,b
 24278  001AEA  0100               	movlb	0	; () banked
 24279  001AEC  B4D8               	btfsc	status,2,c
 24280  001AEE  D023               	goto	l11232
 24281                           
 24282                           ; BSR set to: 0
 24283  001AF0  0E01               	movlw	1
 24284  001AF2  0100               	movlb	0	; () banked
 24285  001AF4  2781               	addwf	___flmul@prod& (0+255),f,b
 24286  001AF6  0E00               	movlw	0
 24287  001AF8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 24288  001AFA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 24289  001AFC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 24290                           
 24291                           ; BSR set to: 0
 24292  001AFE  0100               	movlb	0	; () banked
 24293  001B00  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 24294  001B02  D019               	goto	l11232
 24295                           
 24296                           ; BSR set to: 0
 24297  001B04  C081  F076         	movff	___flmul@prod,??___flmul
 24298  001B08  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 24299  001B0C  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 24300  001B10  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 24301  001B14  0100               	movlb	0	; () banked
 24302  001B16  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 24303  001B18  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 24304  001B1A  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 24305  001B1C  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 24306  001B1E  3376               	rrcf	??___flmul& (0+255),f,b
 24307  001B20  C076  F081         	movff	??___flmul,___flmul@prod
 24308  001B24  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 24309  001B28  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 24310  001B2C  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 24311                           
 24312                           ; BSR set to: 0
 24313  001B30  0100               	movlb	0	; () banked
 24314  001B32  4B85               	infsnz	___flmul@temp& (0+255),f,b
 24315  001B34  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 24316  001B36                     l11232:
 24317                           
 24318                           ; BSR set to: 0
 24319  001B36  0100               	movlb	0	; () banked
 24320  001B38  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 24321  001B3A  D010               	goto	l11236
 24322  001B3C  0100               	movlb	0	; () banked
 24323  001B3E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 24324  001B40  E104               	bnz	u9950
 24325  001B42  0100               	movlb	0	; () banked
 24326  001B44  2985               	incf	___flmul@temp& (0+255),w,b
 24327  001B46  A0D8               	btfss	status,0,c
 24328  001B48  D009               	goto	l11236
 24329  001B4A                     u9950:
 24330                           
 24331                           ; BSR set to: 0
 24332  001B4A  0E00               	movlw	0
 24333  001B4C  0100               	movlb	0	; () banked
 24334  001B4E  6F81               	movwf	___flmul@prod& (0+255),b
 24335  001B50  0E00               	movlw	0
 24336  001B52  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 24337  001B54  0E80               	movlw	128
 24338  001B56  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 24339  001B58  0E7F               	movlw	127
 24340  001B5A  D02B               	goto	L12
 24341  001B5C                     l11236:
 24342                           
 24343                           ; BSR set to: 0
 24344  001B5C  0100               	movlb	0	; () banked
 24345  001B5E  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 24346  001B60  D007               	goto	l11238
 24347  001B62  0100               	movlb	0	; () banked
 24348  001B64  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 24349  001B66  E111               	bnz	l2335
 24350  001B68  0100               	movlb	0	; () banked
 24351  001B6A  0585               	decf	___flmul@temp& (0+255),w,b
 24352  001B6C  B0D8               	btfsc	status,0,c
 24353  001B6E  D00D               	goto	l2335
 24354  001B70                     l11238:
 24355                           
 24356                           ; BSR set to: 0
 24357  001B70  0E00               	movlw	0
 24358  001B72  0100               	movlb	0	; () banked
 24359  001B74  6F81               	movwf	___flmul@prod& (0+255),b
 24360  001B76  0E00               	movlw	0
 24361  001B78  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 24362  001B7A  0E00               	movlw	0
 24363  001B7C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 24364  001B7E  0E00               	movlw	0
 24365  001B80  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 24366  001B82  0E00               	movlw	0
 24367  001B84  0100               	movlb	0	; () banked
 24368  001B86  6F7A               	movwf	___flmul@sign& (0+255),b
 24369  001B88  D015               	goto	l11248
 24370  001B8A                     l2335:
 24371                           
 24372                           ; BSR set to: 0
 24373  001B8A  C085  F080         	movff	___flmul@temp,___flmul@bexp
 24374                           
 24375                           ; BSR set to: 0
 24376  001B8E  0EFF               	movlw	255
 24377  001B90  0100               	movlb	0	; () banked
 24378  001B92  1781               	andwf	___flmul@prod& (0+255),f,b
 24379  001B94  0EFF               	movlw	255
 24380  001B96  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 24381  001B98  0E7F               	movlw	127
 24382  001B9A  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 24383  001B9C  0E00               	movlw	0
 24384  001B9E  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 24385                           
 24386                           ; BSR set to: 0
 24387  001BA0  0100               	movlb	0	; () banked
 24388  001BA2  A180               	btfss	___flmul@bexp& (0+255),0,b
 24389  001BA4  D002               	goto	l11246
 24390                           
 24391                           ; BSR set to: 0
 24392  001BA6  0100               	movlb	0	; () banked
 24393  001BA8  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 24394  001BAA                     l11246:
 24395                           
 24396                           ; BSR set to: 0
 24397  001BAA  0100               	movlb	0	; () banked
 24398  001BAC  90D8               	bcf	status,0,c
 24399  001BAE  3180               	rrcf	___flmul@bexp& (0+255),w,b
 24400  001BB0  0100               	movlb	0	; () banked
 24401  001BB2                     L12:
 24402  001BB2  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 24403  001BB4                     l11248:
 24404                           
 24405                           ; BSR set to: 0
 24406  001BB4  0100               	movlb	0	; () banked
 24407  001BB6  517A               	movf	___flmul@sign& (0+255),w,b
 24408  001BB8  0100               	movlb	0	; () banked
 24409  001BBA  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 24410                           
 24411                           ; BSR set to: 0
 24412  001BBC  C081  F06E         	movff	___flmul@prod,?___flmul
 24413  001BC0  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 24414  001BC4  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 24415  001BC8  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 24416  001BCC  0012               	return	
 24417  001BCE                     __end_of___flmul:
 24418                           	opt stack 0
 24419                           tosu	equ	0xFFF
 24420                           tosh	equ	0xFFE
 24421                           tosl	equ	0xFFD
 24422                           pclath	equ	0xFFA
 24423                           tblptru	equ	0xFF8
 24424                           tblptrh	equ	0xFF7
 24425                           tblptrl	equ	0xFF6
 24426                           tablat	equ	0xFF5
 24427                           prodh	equ	0xFF4
 24428                           prodl	equ	0xFF3
 24429                           intcon	equ	0xFF2
 24430                           indf0	equ	0xFEF
 24431                           postinc0	equ	0xFEE
 24432                           fsr0h	equ	0xFEA
 24433                           fsr0l	equ	0xFE9
 24434                           wreg	equ	0xFE8
 24435                           postinc1	equ	0xFE6
 24436                           postdec1	equ	0xFE5
 24437                           plusw1	equ	0xFE3
 24438                           fsr1h	equ	0xFE2
 24439                           fsr1l	equ	0xFE1
 24440                           indf2	equ	0xFDF
 24441                           postinc2	equ	0xFDE
 24442                           postdec2	equ	0xFDD
 24443                           plusw2	equ	0xFDB
 24444                           fsr2h	equ	0xFDA
 24445                           fsr2l	equ	0xFD9
 24446                           status	equ	0xFD8
 24447                           
 24448 ;; *************** function ___fldiv *****************
 24449 ;; Defined at:
 24450 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprcdiv.c"
 24451 ;; Parameters:    Size  Location     Type
 24452 ;;  b               4   39[BANK0 ] unsigned char 
 24453 ;;  a               4   43[BANK0 ] unsigned char 
 24454 ;; Auto vars:     Size  Location     Type
 24455 ;;  grs             4   58[BANK0 ] unsigned long 
 24456 ;;  rem             4   52[BANK0 ] unsigned long 
 24457 ;;  new_exp         2   56[BANK0 ] int 
 24458 ;;  aexp            1   63[BANK0 ] unsigned char 
 24459 ;;  bexp            1   62[BANK0 ] unsigned char 
 24460 ;;  sign            1   51[BANK0 ] unsigned char 
 24461 ;; Return value:  Size  Location     Type
 24462 ;;                  4   39[BANK0 ] unsigned char 
 24463 ;; Registers used:
 24464 ;;		wreg, status,2, status,0
 24465 ;; Tracked objects:
 24466 ;;		On entry : 0/0
 24467 ;;		On exit  : 0/0
 24468 ;;		Unchanged: 0/0
 24469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24470 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24471 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24472 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24473 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24474 ;;Total ram usage:       25 bytes
 24475 ;; Hardware stack levels used:    1
 24476 ;; Hardware stack levels required when called:    4
 24477 ;; This function calls:
 24478 ;;		Nothing
 24479 ;; This function is called by:
 24480 ;;		_data_sys_cal_v1
 24481 ;;		_data_sys_cal_v2
 24482 ;;		_m_interp1_float_fast
 24483 ;;		_cal_diff_hight_to_vol_h
 24484 ;;		_cal_diff_hight_to_vol_v
 24485 ;;		_cal_diff_p_to_h
 24486 ;;		_cal_pt100_temperature_in
 24487 ;;		_cal_pt100_temperature_ex
 24488 ;;		_cal_additional_pressute
 24489 ;; This function uses a non-reentrant model
 24490 ;;
 24491                           
 24492                           	psect	text110
 24493  002490                     __ptext110:
 24494                           	opt stack 0
 24495  002490                     ___fldiv:
 24496                           	opt stack 23
 24497                           
 24498                           ; BSR set to: 0
 24499                           ;incstack = 0
 24500  002490  0100               	movlb	0	; () banked
 24501  002492  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 24502  002494  0B80               	andlw	128
 24503  002496  0100               	movlb	0	; () banked
 24504  002498  6F93               	movwf	___fldiv@sign& (0+255),b
 24505  00249A  0100               	movlb	0	; () banked
 24506  00249C  518A               	movf	(___fldiv@b+3)& (0+255),w,b
 24507  00249E  258A               	addwf	(___fldiv@b+3)& (0+255),w,b
 24508  0024A0  0100               	movlb	0	; () banked
 24509  0024A2  6F9E               	movwf	___fldiv@bexp& (0+255),b
 24510                           
 24511                           ; BSR set to: 0
 24512  0024A4  0100               	movlb	0	; () banked
 24513  0024A6  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 24514  0024A8  D002               	goto	l10994
 24515                           
 24516                           ; BSR set to: 0
 24517  0024AA  0100               	movlb	0	; () banked
 24518  0024AC  819E               	bsf	___fldiv@bexp& (0+255),0,b
 24519  0024AE                     l10994:
 24520                           
 24521                           ; BSR set to: 0
 24522  0024AE  0100               	movlb	0	; () banked
 24523  0024B0  519E               	movf	___fldiv@bexp& (0+255),w,b
 24524  0024B2  0100               	movlb	0	; () banked
 24525  0024B4  B4D8               	btfsc	status,2,c
 24526  0024B6  D012               	goto	l11004
 24527                           
 24528                           ; BSR set to: 0
 24529  0024B8  0100               	movlb	0	; () banked
 24530  0024BA  299E               	incf	___fldiv@bexp& (0+255),w,b
 24531  0024BC  A4D8               	btfss	status,2,c
 24532  0024BE  D009               	goto	l11000
 24533                           
 24534                           ; BSR set to: 0
 24535  0024C0  0E00               	movlw	0
 24536  0024C2  0100               	movlb	0	; () banked
 24537  0024C4  6F87               	movwf	___fldiv@b& (0+255),b
 24538  0024C6  0E00               	movlw	0
 24539  0024C8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 24540  0024CA  0E00               	movlw	0
 24541  0024CC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 24542  0024CE  0E00               	movlw	0
 24543  0024D0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 24544  0024D2                     l11000:
 24545                           
 24546                           ; BSR set to: 0
 24547  0024D2  0100               	movlb	0	; () banked
 24548  0024D4  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 24549                           
 24550                           ; BSR set to: 0
 24551  0024D6  0E00               	movlw	0
 24552  0024D8  0100               	movlb	0	; () banked
 24553  0024DA  D008               	goto	L13
 24554  0024DC                     l11004:
 24555                           
 24556                           ; BSR set to: 0
 24557  0024DC  0E00               	movlw	0
 24558  0024DE  0100               	movlb	0	; () banked
 24559  0024E0  6F87               	movwf	___fldiv@b& (0+255),b
 24560  0024E2  0E00               	movlw	0
 24561  0024E4  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 24562  0024E6  0E00               	movlw	0
 24563  0024E8  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 24564  0024EA  0E00               	movlw	0
 24565  0024EC                     L13:
 24566  0024EC  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 24567                           
 24568                           ; BSR set to: 0
 24569                           
 24570                           ; BSR set to: 0
 24571  0024EE  0100               	movlb	0	; () banked
 24572  0024F0  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 24573  0024F2  0B80               	andlw	128
 24574  0024F4  0100               	movlb	0	; () banked
 24575  0024F6  1B93               	xorwf	___fldiv@sign& (0+255),f,b
 24576                           
 24577                           ; BSR set to: 0
 24578  0024F8  0100               	movlb	0	; () banked
 24579  0024FA  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 24580  0024FC  258E               	addwf	(___fldiv@a+3)& (0+255),w,b
 24581  0024FE  0100               	movlb	0	; () banked
 24582  002500  6F9F               	movwf	___fldiv@aexp& (0+255),b
 24583                           
 24584                           ; BSR set to: 0
 24585  002502  0100               	movlb	0	; () banked
 24586  002504  AF8D               	btfss	(___fldiv@a+2)& (0+255),7,b
 24587  002506  D002               	goto	l11014
 24588                           
 24589                           ; BSR set to: 0
 24590  002508  0100               	movlb	0	; () banked
 24591  00250A  819F               	bsf	___fldiv@aexp& (0+255),0,b
 24592  00250C                     l11014:
 24593                           
 24594                           ; BSR set to: 0
 24595  00250C  0100               	movlb	0	; () banked
 24596  00250E  519F               	movf	___fldiv@aexp& (0+255),w,b
 24597  002510  0100               	movlb	0	; () banked
 24598  002512  B4D8               	btfsc	status,2,c
 24599  002514  D012               	goto	l11024
 24600                           
 24601                           ; BSR set to: 0
 24602  002516  0100               	movlb	0	; () banked
 24603  002518  299F               	incf	___fldiv@aexp& (0+255),w,b
 24604  00251A  A4D8               	btfss	status,2,c
 24605  00251C  D009               	goto	l11020
 24606                           
 24607                           ; BSR set to: 0
 24608  00251E  0E00               	movlw	0
 24609  002520  0100               	movlb	0	; () banked
 24610  002522  6F8B               	movwf	___fldiv@a& (0+255),b
 24611  002524  0E00               	movlw	0
 24612  002526  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 24613  002528  0E00               	movlw	0
 24614  00252A  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 24615  00252C  0E00               	movlw	0
 24616  00252E  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 24617  002530                     l11020:
 24618                           
 24619                           ; BSR set to: 0
 24620  002530  0100               	movlb	0	; () banked
 24621  002532  8F8D               	bsf	(___fldiv@a+2)& (0+255),7,b
 24622                           
 24623                           ; BSR set to: 0
 24624  002534  0E00               	movlw	0
 24625  002536  0100               	movlb	0	; () banked
 24626  002538  D008               	goto	L14
 24627  00253A                     l11024:
 24628                           
 24629                           ; BSR set to: 0
 24630  00253A  0E00               	movlw	0
 24631  00253C  0100               	movlb	0	; () banked
 24632  00253E  6F8B               	movwf	___fldiv@a& (0+255),b
 24633  002540  0E00               	movlw	0
 24634  002542  6F8C               	movwf	(___fldiv@a+1)& (0+255),b
 24635  002544  0E00               	movlw	0
 24636  002546  6F8D               	movwf	(___fldiv@a+2)& (0+255),b
 24637  002548  0E00               	movlw	0
 24638  00254A                     L14:
 24639  00254A  6F8E               	movwf	(___fldiv@a+3)& (0+255),b
 24640                           
 24641                           ; BSR set to: 0
 24642                           
 24643                           ; BSR set to: 0
 24644  00254C  0100               	movlb	0	; () banked
 24645  00254E  518B               	movf	___fldiv@a& (0+255),w,b
 24646  002550  0100               	movlb	0	; () banked
 24647  002552  118C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 24648  002554  0100               	movlb	0	; () banked
 24649  002556  118D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 24650  002558  0100               	movlb	0	; () banked
 24651  00255A  118E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 24652  00255C  A4D8               	btfss	status,2,c
 24653  00255E  D017               	goto	l11036
 24654                           
 24655                           ; BSR set to: 0
 24656  002560  0E00               	movlw	0
 24657  002562  0100               	movlb	0	; () banked
 24658  002564  6F87               	movwf	___fldiv@b& (0+255),b
 24659  002566  0E00               	movlw	0
 24660  002568  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 24661  00256A  0E00               	movlw	0
 24662  00256C  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 24663  00256E  0E00               	movlw	0
 24664  002570  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 24665                           
 24666                           ; BSR set to: 0
 24667  002572  0100               	movlb	0	; () banked
 24668  002574  0E80               	movlw	128
 24669  002576  1389               	iorwf	(___fldiv@b+2)& (0+255),f,b
 24670  002578  0E7F               	movlw	127
 24671  00257A  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 24672                           
 24673                           ; BSR set to: 0
 24674  00257C  C087  F087         	movff	___fldiv@b,?___fldiv
 24675  002580  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 24676  002584  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 24677  002588  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 24678                           
 24679                           ; BSR set to: 0
 24680  00258C  0012               	return	
 24681  00258E                     l11036:
 24682                           
 24683                           ; BSR set to: 0
 24684  00258E  0100               	movlb	0	; () banked
 24685  002590  519E               	movf	___fldiv@bexp& (0+255),w,b
 24686  002592  0100               	movlb	0	; () banked
 24687  002594  A4D8               	btfss	status,2,c
 24688  002596  D012               	goto	l11044
 24689                           
 24690                           ; BSR set to: 0
 24691  002598  0E00               	movlw	0
 24692  00259A  0100               	movlb	0	; () banked
 24693  00259C  6F87               	movwf	___fldiv@b& (0+255),b
 24694  00259E  0E00               	movlw	0
 24695  0025A0  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 24696  0025A2  0E00               	movlw	0
 24697  0025A4  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 24698  0025A6  0E00               	movlw	0
 24699  0025A8  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 24700                           
 24701                           ; BSR set to: 0
 24702  0025AA  C087  F087         	movff	___fldiv@b,?___fldiv
 24703  0025AE  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 24704  0025B2  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 24705  0025B6  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 24706                           
 24707                           ; BSR set to: 0
 24708  0025BA  0012               	return	
 24709  0025BC                     l11044:
 24710                           
 24711                           ; BSR set to: 0
 24712  0025BC  0100               	movlb	0	; () banked
 24713  0025BE  519F               	movf	___fldiv@aexp& (0+255),w,b
 24714  0025C0  0100               	movlb	0	; () banked
 24715  0025C2  6F8F               	movwf	??___fldiv& (0+255),b
 24716  0025C4  6B90               	clrf	(??___fldiv+1)& (0+255),b
 24717  0025C6  0100               	movlb	0	; () banked
 24718  0025C8  1F8F               	comf	??___fldiv& (0+255),f,b
 24719  0025CA  1F90               	comf	(??___fldiv+1)& (0+255),f,b
 24720  0025CC  4B8F               	infsnz	??___fldiv& (0+255),f,b
 24721  0025CE  2B90               	incf	(??___fldiv+1)& (0+255),f,b
 24722  0025D0  0100               	movlb	0	; () banked
 24723  0025D2  519E               	movf	___fldiv@bexp& (0+255),w,b
 24724  0025D4  0100               	movlb	0	; () banked
 24725  0025D6  6F91               	movwf	(??___fldiv+2)& (0+255),b
 24726  0025D8  6B92               	clrf	(??___fldiv+3)& (0+255),b
 24727  0025DA  0100               	movlb	0	; () banked
 24728  0025DC  518F               	movf	??___fldiv& (0+255),w,b
 24729  0025DE  0100               	movlb	0	; () banked
 24730  0025E0  2791               	addwf	(??___fldiv+2)& (0+255),f,b
 24731  0025E2  0100               	movlb	0	; () banked
 24732  0025E4  5190               	movf	(??___fldiv+1)& (0+255),w,b
 24733  0025E6  0100               	movlb	0	; () banked
 24734  0025E8  2392               	addwfc	(??___fldiv+3)& (0+255),f,b
 24735  0025EA  0E7F               	movlw	127
 24736  0025EC  0100               	movlb	0	; () banked
 24737  0025EE  2591               	addwf	(??___fldiv+2)& (0+255),w,b
 24738  0025F0  0100               	movlb	0	; () banked
 24739  0025F2  6F98               	movwf	___fldiv@new_exp& (0+255),b
 24740  0025F4  0E00               	movlw	0
 24741  0025F6  0100               	movlb	0	; () banked
 24742  0025F8  2192               	addwfc	(??___fldiv+3)& (0+255),w,b
 24743  0025FA  0100               	movlb	0	; () banked
 24744  0025FC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 24745                           
 24746                           ; BSR set to: 0
 24747  0025FE  C087  F094         	movff	___fldiv@b,___fldiv@rem
 24748  002602  C088  F095         	movff	___fldiv@b+1,___fldiv@rem+1
 24749  002606  C089  F096         	movff	___fldiv@b+2,___fldiv@rem+2
 24750  00260A  C08A  F097         	movff	___fldiv@b+3,___fldiv@rem+3
 24751                           
 24752                           ; BSR set to: 0
 24753  00260E  0E00               	movlw	0
 24754  002610  0100               	movlb	0	; () banked
 24755  002612  6F87               	movwf	___fldiv@b& (0+255),b
 24756  002614  0E00               	movlw	0
 24757  002616  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 24758  002618  0E00               	movlw	0
 24759  00261A  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 24760  00261C  0E00               	movlw	0
 24761  00261E  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 24762                           
 24763                           ; BSR set to: 0
 24764  002620  0E00               	movlw	0
 24765  002622  0100               	movlb	0	; () banked
 24766  002624  6F9A               	movwf	___fldiv@grs& (0+255),b
 24767  002626  0E00               	movlw	0
 24768  002628  6F9B               	movwf	(___fldiv@grs+1)& (0+255),b
 24769  00262A  0E00               	movlw	0
 24770  00262C  6F9C               	movwf	(___fldiv@grs+2)& (0+255),b
 24771  00262E  0E00               	movlw	0
 24772  002630  6F9D               	movwf	(___fldiv@grs+3)& (0+255),b
 24773                           
 24774                           ; BSR set to: 0
 24775  002632  0E00               	movlw	0
 24776  002634  0100               	movlb	0	; () banked
 24777  002636  6F9F               	movwf	___fldiv@aexp& (0+255),b
 24778  002638  D042               	goto	l2288
 24779  00263A                     l11054:
 24780                           
 24781                           ; BSR set to: 0
 24782  00263A  0100               	movlb	0	; () banked
 24783  00263C  519F               	movf	___fldiv@aexp& (0+255),w,b
 24784  00263E  0100               	movlb	0	; () banked
 24785  002640  B4D8               	btfsc	status,2,c
 24786  002642  D017               	goto	l11062
 24787                           
 24788                           ; BSR set to: 0
 24789  002644  0100               	movlb	0	; () banked
 24790  002646  90D8               	bcf	status,0,c
 24791  002648  3794               	rlcf	___fldiv@rem& (0+255),f,b
 24792  00264A  3795               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 24793  00264C  3796               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 24794  00264E  3797               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 24795  002650  0100               	movlb	0	; () banked
 24796  002652  90D8               	bcf	status,0,c
 24797  002654  3787               	rlcf	___fldiv@b& (0+255),f,b
 24798  002656  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 24799  002658  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 24800  00265A  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 24801                           
 24802                           ; BSR set to: 0
 24803  00265C  0100               	movlb	0	; () banked
 24804  00265E  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 24805  002660  D002               	goto	l2291
 24806                           
 24807                           ; BSR set to: 0
 24808  002662  0100               	movlb	0	; () banked
 24809  002664  8187               	bsf	___fldiv@b& (0+255),0,b
 24810  002666                     l2291:
 24811                           
 24812                           ; BSR set to: 0
 24813  002666  0100               	movlb	0	; () banked
 24814  002668  90D8               	bcf	status,0,c
 24815  00266A  379A               	rlcf	___fldiv@grs& (0+255),f,b
 24816  00266C  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 24817  00266E  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 24818  002670  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 24819  002672                     l11062:
 24820                           
 24821                           ; BSR set to: 0
 24822  002672  0100               	movlb	0	; () banked
 24823  002674  518B               	movf	___fldiv@a& (0+255),w,b
 24824  002676  0100               	movlb	0	; () banked
 24825  002678  5D94               	subwf	___fldiv@rem& (0+255),w,b
 24826  00267A  0100               	movlb	0	; () banked
 24827  00267C  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 24828  00267E  0100               	movlb	0	; () banked
 24829  002680  5995               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 24830  002682  0100               	movlb	0	; () banked
 24831  002684  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 24832  002686  0100               	movlb	0	; () banked
 24833  002688  5996               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 24834  00268A  0100               	movlb	0	; () banked
 24835  00268C  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 24836  00268E  0100               	movlb	0	; () banked
 24837  002690  5997               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 24838  002692  A0D8               	btfss	status,0,c
 24839  002694  D012               	goto	l11068
 24840                           
 24841                           ; BSR set to: 0
 24842  002696  0100               	movlb	0	; () banked
 24843  002698  8D9D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 24844                           
 24845                           ; BSR set to: 0
 24846  00269A  0100               	movlb	0	; () banked
 24847  00269C  518B               	movf	___fldiv@a& (0+255),w,b
 24848  00269E  0100               	movlb	0	; () banked
 24849  0026A0  5F94               	subwf	___fldiv@rem& (0+255),f,b
 24850  0026A2  0100               	movlb	0	; () banked
 24851  0026A4  518C               	movf	(___fldiv@a+1)& (0+255),w,b
 24852  0026A6  0100               	movlb	0	; () banked
 24853  0026A8  5B95               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 24854  0026AA  0100               	movlb	0	; () banked
 24855  0026AC  518D               	movf	(___fldiv@a+2)& (0+255),w,b
 24856  0026AE  0100               	movlb	0	; () banked
 24857  0026B0  5B96               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 24858  0026B2  0100               	movlb	0	; () banked
 24859  0026B4  518E               	movf	(___fldiv@a+3)& (0+255),w,b
 24860  0026B6  0100               	movlb	0	; () banked
 24861  0026B8  5B97               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 24862  0026BA                     l11068:
 24863                           
 24864                           ; BSR set to: 0
 24865  0026BA  0100               	movlb	0	; () banked
 24866  0026BC  2B9F               	incf	___fldiv@aexp& (0+255),f,b
 24867  0026BE                     l2288:
 24868                           
 24869                           ; BSR set to: 0
 24870  0026BE  0E19               	movlw	25
 24871  0026C0  0100               	movlb	0	; () banked
 24872  0026C2  659F               	cpfsgt	___fldiv@aexp& (0+255),b
 24873  0026C4  D7BA               	goto	l11054
 24874                           
 24875                           ; BSR set to: 0
 24876                           
 24877                           ; BSR set to: 0
 24878  0026C6  0100               	movlb	0	; () banked
 24879  0026C8  5194               	movf	___fldiv@rem& (0+255),w,b
 24880  0026CA  0100               	movlb	0	; () banked
 24881  0026CC  1195               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 24882  0026CE  0100               	movlb	0	; () banked
 24883  0026D0  1196               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 24884  0026D2  0100               	movlb	0	; () banked
 24885  0026D4  1197               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 24886  0026D6  B4D8               	btfsc	status,2,c
 24887  0026D8  D018               	goto	l11080
 24888                           
 24889                           ; BSR set to: 0
 24890  0026DA  0100               	movlb	0	; () banked
 24891  0026DC  819A               	bsf	___fldiv@grs& (0+255),0,b
 24892                           
 24893                           ; BSR set to: 0
 24894  0026DE  D015               	goto	l11080
 24895  0026E0                     l11074:
 24896                           
 24897                           ; BSR set to: 0
 24898  0026E0  0100               	movlb	0	; () banked
 24899  0026E2  90D8               	bcf	status,0,c
 24900  0026E4  3787               	rlcf	___fldiv@b& (0+255),f,b
 24901  0026E6  3788               	rlcf	(___fldiv@b+1)& (0+255),f,b
 24902  0026E8  3789               	rlcf	(___fldiv@b+2)& (0+255),f,b
 24903  0026EA  378A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 24904                           
 24905                           ; BSR set to: 0
 24906  0026EC  0100               	movlb	0	; () banked
 24907  0026EE  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 24908  0026F0  D002               	goto	l2297
 24909                           
 24910                           ; BSR set to: 0
 24911  0026F2  0100               	movlb	0	; () banked
 24912  0026F4  8187               	bsf	___fldiv@b& (0+255),0,b
 24913  0026F6                     l2297:
 24914                           
 24915                           ; BSR set to: 0
 24916  0026F6  0100               	movlb	0	; () banked
 24917  0026F8  90D8               	bcf	status,0,c
 24918  0026FA  379A               	rlcf	___fldiv@grs& (0+255),f,b
 24919  0026FC  379B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 24920  0026FE  379C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 24921  002700  379D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 24922  002702  0100               	movlb	0	; () banked
 24923  002704  0798               	decf	___fldiv@new_exp& (0+255),f,b
 24924  002706  A0D8               	btfss	status,0,c
 24925  002708  0799               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 24926  00270A                     l11080:
 24927                           
 24928                           ; BSR set to: 0
 24929  00270A  0100               	movlb	0	; () banked
 24930  00270C  AF89               	btfss	(___fldiv@b+2)& (0+255),7,b
 24931  00270E  D7E8               	goto	l11074
 24932                           
 24933                           ; BSR set to: 0
 24934                           
 24935                           ; BSR set to: 0
 24936  002710  0E00               	movlw	0
 24937  002712  0100               	movlb	0	; () banked
 24938  002714  6F9F               	movwf	___fldiv@aexp& (0+255),b
 24939                           
 24940                           ; BSR set to: 0
 24941  002716  0100               	movlb	0	; () banked
 24942  002718  AF9D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 24943  00271A  D024               	goto	l2299
 24944                           
 24945                           ; BSR set to: 0
 24946  00271C  0EFF               	movlw	255
 24947  00271E  0100               	movlb	0	; () banked
 24948  002720  159A               	andwf	___fldiv@grs& (0+255),w,b
 24949  002722  0100               	movlb	0	; () banked
 24950  002724  6F8F               	movwf	??___fldiv& (0+255),b
 24951  002726  0EFF               	movlw	255
 24952  002728  0100               	movlb	0	; () banked
 24953  00272A  159B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 24954  00272C  0100               	movlb	0	; () banked
 24955  00272E  6F90               	movwf	(??___fldiv+1)& (0+255),b
 24956  002730  0EFF               	movlw	255
 24957  002732  0100               	movlb	0	; () banked
 24958  002734  159C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 24959  002736  0100               	movlb	0	; () banked
 24960  002738  6F91               	movwf	(??___fldiv+2)& (0+255),b
 24961  00273A  0E7F               	movlw	127
 24962  00273C  0100               	movlb	0	; () banked
 24963  00273E  159D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 24964  002740  0100               	movlb	0	; () banked
 24965  002742  6F92               	movwf	(??___fldiv+3)& (0+255),b
 24966  002744  0100               	movlb	0	; () banked
 24967  002746  518F               	movf	??___fldiv& (0+255),w,b
 24968  002748  0100               	movlb	0	; () banked
 24969  00274A  1190               	iorwf	(??___fldiv+1)& (0+255),w,b
 24970  00274C  0100               	movlb	0	; () banked
 24971  00274E  1191               	iorwf	(??___fldiv+2)& (0+255),w,b
 24972  002750  0100               	movlb	0	; () banked
 24973  002752  1192               	iorwf	(??___fldiv+3)& (0+255),w,b
 24974  002754  A4D8               	btfss	status,2,c
 24975  002756  D003               	goto	l11090
 24976                           
 24977                           ; BSR set to: 0
 24978                           
 24979                           ; BSR set to: 0
 24980  002758  0100               	movlb	0	; () banked
 24981  00275A  A187               	btfss	___fldiv@b& (0+255),0,b
 24982  00275C  D003               	goto	l2299
 24983  00275E                     l11090:
 24984                           
 24985                           ; BSR set to: 0
 24986  00275E  0E01               	movlw	1
 24987  002760  0100               	movlb	0	; () banked
 24988  002762  6F9F               	movwf	___fldiv@aexp& (0+255),b
 24989  002764                     l2299:
 24990                           
 24991                           ; BSR set to: 0
 24992  002764  0100               	movlb	0	; () banked
 24993  002766  519F               	movf	___fldiv@aexp& (0+255),w,b
 24994  002768  0100               	movlb	0	; () banked
 24995  00276A  B4D8               	btfsc	status,2,c
 24996  00276C  D023               	goto	l11100
 24997                           
 24998                           ; BSR set to: 0
 24999  00276E  0E01               	movlw	1
 25000  002770  0100               	movlb	0	; () banked
 25001  002772  2787               	addwf	___fldiv@b& (0+255),f,b
 25002  002774  0E00               	movlw	0
 25003  002776  2388               	addwfc	(___fldiv@b+1)& (0+255),f,b
 25004  002778  2389               	addwfc	(___fldiv@b+2)& (0+255),f,b
 25005  00277A  238A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 25006                           
 25007                           ; BSR set to: 0
 25008  00277C  0100               	movlb	0	; () banked
 25009  00277E  A18A               	btfss	(___fldiv@b+3)& (0+255),0,b
 25010  002780  D019               	goto	l11100
 25011                           
 25012                           ; BSR set to: 0
 25013  002782  C087  F08F         	movff	___fldiv@b,??___fldiv
 25014  002786  C088  F090         	movff	___fldiv@b+1,??___fldiv+1
 25015  00278A  C089  F091         	movff	___fldiv@b+2,??___fldiv+2
 25016  00278E  C08A  F092         	movff	___fldiv@b+3,??___fldiv+3
 25017  002792  0100               	movlb	0	; () banked
 25018  002794  3592               	rlcf	(??___fldiv+3)& (0+255),w,b
 25019  002796  3392               	rrcf	(??___fldiv+3)& (0+255),f,b
 25020  002798  3391               	rrcf	(??___fldiv+2)& (0+255),f,b
 25021  00279A  3390               	rrcf	(??___fldiv+1)& (0+255),f,b
 25022  00279C  338F               	rrcf	??___fldiv& (0+255),f,b
 25023  00279E  C08F  F087         	movff	??___fldiv,___fldiv@b
 25024  0027A2  C090  F088         	movff	??___fldiv+1,___fldiv@b+1
 25025  0027A6  C091  F089         	movff	??___fldiv+2,___fldiv@b+2
 25026  0027AA  C092  F08A         	movff	??___fldiv+3,___fldiv@b+3
 25027                           
 25028                           ; BSR set to: 0
 25029  0027AE  0100               	movlb	0	; () banked
 25030  0027B0  4B98               	infsnz	___fldiv@new_exp& (0+255),f,b
 25031  0027B2  2B99               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 25032  0027B4                     l11100:
 25033                           
 25034                           ; BSR set to: 0
 25035  0027B4  0100               	movlb	0	; () banked
 25036  0027B6  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 25037  0027B8  D014               	goto	l11104
 25038  0027BA  0100               	movlb	0	; () banked
 25039  0027BC  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 25040  0027BE  E104               	bnz	u9760
 25041  0027C0  0100               	movlb	0	; () banked
 25042  0027C2  2998               	incf	___fldiv@new_exp& (0+255),w,b
 25043  0027C4  A0D8               	btfss	status,0,c
 25044  0027C6  D00D               	goto	l11104
 25045  0027C8                     u9760:
 25046                           
 25047                           ; BSR set to: 0
 25048  0027C8  0E00               	movlw	0
 25049  0027CA  0100               	movlb	0	; () banked
 25050  0027CC  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 25051  0027CE  6998               	setf	___fldiv@new_exp& (0+255),b
 25052  0027D0  0E00               	movlw	0
 25053  0027D2  0100               	movlb	0	; () banked
 25054  0027D4  6F87               	movwf	___fldiv@b& (0+255),b
 25055  0027D6  0E00               	movlw	0
 25056  0027D8  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 25057  0027DA  0E00               	movlw	0
 25058  0027DC  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 25059  0027DE  0E00               	movlw	0
 25060  0027E0  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 25061  0027E2                     l11104:
 25062                           
 25063                           ; BSR set to: 0
 25064  0027E2  0100               	movlb	0	; () banked
 25065  0027E4  BF99               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 25066  0027E6  D007               	goto	l11106
 25067  0027E8  0100               	movlb	0	; () banked
 25068  0027EA  5199               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 25069  0027EC  E115               	bnz	l11108
 25070  0027EE  0100               	movlb	0	; () banked
 25071  0027F0  0598               	decf	___fldiv@new_exp& (0+255),w,b
 25072  0027F2  B0D8               	btfsc	status,0,c
 25073  0027F4  D011               	goto	l11108
 25074  0027F6                     l11106:
 25075                           
 25076                           ; BSR set to: 0
 25077  0027F6  0E00               	movlw	0
 25078  0027F8  0100               	movlb	0	; () banked
 25079  0027FA  6F99               	movwf	(___fldiv@new_exp+1)& (0+255),b
 25080  0027FC  0E00               	movlw	0
 25081  0027FE  6F98               	movwf	___fldiv@new_exp& (0+255),b
 25082  002800  0E00               	movlw	0
 25083  002802  0100               	movlb	0	; () banked
 25084  002804  6F87               	movwf	___fldiv@b& (0+255),b
 25085  002806  0E00               	movlw	0
 25086  002808  6F88               	movwf	(___fldiv@b+1)& (0+255),b
 25087  00280A  0E00               	movlw	0
 25088  00280C  6F89               	movwf	(___fldiv@b+2)& (0+255),b
 25089  00280E  0E00               	movlw	0
 25090  002810  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 25091  002812  0E00               	movlw	0
 25092  002814  0100               	movlb	0	; () banked
 25093  002816  6F93               	movwf	___fldiv@sign& (0+255),b
 25094  002818                     l11108:
 25095                           
 25096                           ; BSR set to: 0
 25097  002818  C098  F09E         	movff	___fldiv@new_exp,___fldiv@bexp
 25098                           
 25099                           ; BSR set to: 0
 25100  00281C  0100               	movlb	0	; () banked
 25101  00281E  A19E               	btfss	___fldiv@bexp& (0+255),0,b
 25102  002820  D003               	goto	l11114
 25103                           
 25104                           ; BSR set to: 0
 25105  002822  0100               	movlb	0	; () banked
 25106  002824  8F89               	bsf	(___fldiv@b+2)& (0+255),7,b
 25107  002826  D002               	goto	l11116
 25108  002828                     l11114:
 25109                           
 25110                           ; BSR set to: 0
 25111  002828  0100               	movlb	0	; () banked
 25112  00282A  9F89               	bcf	(___fldiv@b+2)& (0+255),7,b
 25113  00282C                     l11116:
 25114                           
 25115                           ; BSR set to: 0
 25116  00282C  0100               	movlb	0	; () banked
 25117  00282E  90D8               	bcf	status,0,c
 25118  002830  319E               	rrcf	___fldiv@bexp& (0+255),w,b
 25119  002832  0100               	movlb	0	; () banked
 25120  002834  6F8A               	movwf	(___fldiv@b+3)& (0+255),b
 25121                           
 25122                           ; BSR set to: 0
 25123  002836  0100               	movlb	0	; () banked
 25124  002838  5193               	movf	___fldiv@sign& (0+255),w,b
 25125  00283A  0100               	movlb	0	; () banked
 25126  00283C  138A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 25127                           
 25128                           ; BSR set to: 0
 25129  00283E  C087  F087         	movff	___fldiv@b,?___fldiv
 25130  002842  C088  F088         	movff	___fldiv@b+1,?___fldiv+1
 25131  002846  C089  F089         	movff	___fldiv@b+2,?___fldiv+2
 25132  00284A  C08A  F08A         	movff	___fldiv@b+3,?___fldiv+3
 25133  00284E  0012               	return	
 25134  002850                     __end_of___fldiv:
 25135                           	opt stack 0
 25136                           tosu	equ	0xFFF
 25137                           tosh	equ	0xFFE
 25138                           tosl	equ	0xFFD
 25139                           pclath	equ	0xFFA
 25140                           tblptru	equ	0xFF8
 25141                           tblptrh	equ	0xFF7
 25142                           tblptrl	equ	0xFF6
 25143                           tablat	equ	0xFF5
 25144                           prodh	equ	0xFF4
 25145                           prodl	equ	0xFF3
 25146                           intcon	equ	0xFF2
 25147                           indf0	equ	0xFEF
 25148                           postinc0	equ	0xFEE
 25149                           fsr0h	equ	0xFEA
 25150                           fsr0l	equ	0xFE9
 25151                           wreg	equ	0xFE8
 25152                           postinc1	equ	0xFE6
 25153                           postdec1	equ	0xFE5
 25154                           plusw1	equ	0xFE3
 25155                           fsr1h	equ	0xFE2
 25156                           fsr1l	equ	0xFE1
 25157                           indf2	equ	0xFDF
 25158                           postinc2	equ	0xFDE
 25159                           postdec2	equ	0xFDD
 25160                           plusw2	equ	0xFDB
 25161                           fsr2h	equ	0xFDA
 25162                           fsr2l	equ	0xFD9
 25163                           status	equ	0xFD8
 25164                           
 25165 ;; *************** function _calib_data_init_pr *****************
 25166 ;; Defined at:
 25167 ;;		line 288 in file "src/api/data.c"
 25168 ;; Parameters:    Size  Location     Type
 25169 ;;		None
 25170 ;; Auto vars:     Size  Location     Type
 25171 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 25172 ;;		 -> prCalibTabDef(162), 
 25173 ;;  t16             2   23[BANK0 ] unsigned int 
 25174 ;;  ret             1   22[BANK0 ] unsigned char 
 25175 ;; Return value:  Size  Location     Type
 25176 ;;                  1    wreg      unsigned char 
 25177 ;; Registers used:
 25178 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25179 ;; Tracked objects:
 25180 ;;		On entry : 0/0
 25181 ;;		On exit  : 0/0
 25182 ;;		Unchanged: 0/0
 25183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25185 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25187 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25188 ;;Total ram usage:        5 bytes
 25189 ;; Hardware stack levels used:    1
 25190 ;; Hardware stack levels required when called:    8
 25191 ;; This function calls:
 25192 ;;		_at24c02_init
 25193 ;;		_at24c02_read_n_byte
 25194 ;;		_at24c02_write_n_byte
 25195 ;;		_calib_data_set_default_pr
 25196 ;;		_crc_append
 25197 ;;		_crc_verify
 25198 ;; This function is called by:
 25199 ;;		_data_init_all
 25200 ;; This function uses a non-reentrant model
 25201 ;;
 25202                           
 25203                           	psect	text111
 25204  00547E                     __ptext111:
 25205                           	opt stack 0
 25206  00547E                     _calib_data_init_pr:
 25207                           	opt stack 21
 25208                           
 25209                           ;data.c: 290: uint8_t ret=0;
 25210                           
 25211                           ; BSR set to: 0
 25212                           ;incstack = 0
 25213  00547E  0E00               	movlw	0
 25214  005480  0100               	movlb	0	; () banked
 25215  005482  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 25216                           
 25217                           ; BSR set to: 0
 25218                           ;data.c: 291: uint16_t t16;
 25219                           ;data.c: 292: uint8_t* buf=(uint8_t*)(&prCalibTabDef);
 25220  005484  0E00               	movlw	low _prCalibTabDef
 25221  005486  0100               	movlb	0	; () banked
 25222  005488  6F79               	movwf	calib_data_init_pr@buf& (0+255),b
 25223  00548A  0E03               	movlw	high _prCalibTabDef
 25224  00548C  0100               	movlb	0	; () banked
 25225  00548E  6F7A               	movwf	(calib_data_init_pr@buf+1)& (0+255),b
 25226                           
 25227                           ; BSR set to: 0
 25228                           ;data.c: 294: p_prEepromObj=&at24c02Ch0;
 25229  005490  0EBC               	movlw	low _at24c02Ch0
 25230  005492  6E29               	movwf	_p_prEepromObj,c
 25231  005494  0E01               	movlw	high _at24c02Ch0
 25232  005496  6E2A               	movwf	_p_prEepromObj+1,c
 25233                           
 25234                           ; BSR set to: 0
 25235                           ;data.c: 295: at24c02_init(p_prEepromObj,0xaa);
 25236  005498  C029  F060         	movff	_p_prEepromObj,at24c02_init@pAt24c02
 25237  00549C  C02A  F061         	movff	_p_prEepromObj+1,at24c02_init@pAt24c02+1
 25238  0054A0  0EAA               	movlw	170
 25239  0054A2  0100               	movlb	0	; () banked
 25240  0054A4  6F62               	movwf	at24c02_init@slv& (0+255),b
 25241  0054A6  EC6C  F034         	call	_at24c02_init	;wreg free
 25242                           
 25243                           ;data.c: 296: t16=sizeof(st_prCalibTabDef);
 25244  0054AA  0E00               	movlw	0
 25245  0054AC  0100               	movlb	0	; () banked
 25246  0054AE  6F78               	movwf	(calib_data_init_pr@t16+1)& (0+255),b
 25247  0054B0  0EA2               	movlw	162
 25248  0054B2  6F77               	movwf	calib_data_init_pr@t16& (0+255),b
 25249                           
 25250                           ; BSR set to: 0
 25251                           ;data.c: 297: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 25252  0054B4  C029  F064         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 25253  0054B8  C02A  F065         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 25254  0054BC  0E00               	movlw	0
 25255  0054BE  0100               	movlb	0	; () banked
 25256  0054C0  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 25257  0054C2  C079  F067         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 25258  0054C6  C07A  F068         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 25259  0054CA  C077  F069         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 25260  0054CE  C078  F06A         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 25261  0054D2  EC11  F020         	call	_at24c02_read_n_byte	;wreg free
 25262                           
 25263                           ;data.c: 298: ret=crc_verify(buf,t16);
 25264  0054D6  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 25265  0054DA  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 25266  0054DE  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 25267  0054E2  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 25268  0054E6  ECE6  F032         	call	_crc_verify	;wreg free
 25269  0054EA  0100               	movlb	0	; () banked
 25270  0054EC  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 25271                           
 25272                           ; BSR set to: 0
 25273                           ;data.c: 299: if(!ret){
 25274  0054EE  0100               	movlb	0	; () banked
 25275  0054F0  5176               	movf	calib_data_init_pr@ret& (0+255),w,b
 25276  0054F2  0100               	movlb	0	; () banked
 25277  0054F4  A4D8               	btfss	status,2,c
 25278  0054F6  0012               	return	
 25279                           
 25280                           ; BSR set to: 0
 25281                           ;data.c: 300: calib_data_set_default_pr();
 25282  0054F8  EC51  F01E         	call	_calib_data_set_default_pr	;wreg free
 25283                           
 25284                           ;data.c: 301: crc_append(buf,t16-2);
 25285  0054FC  C079  F06C         	movff	calib_data_init_pr@buf,crc_append@message
 25286  005500  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_append@message+1
 25287  005504  0EFE               	movlw	254
 25288  005506  0100               	movlb	0	; () banked
 25289  005508  2577               	addwf	calib_data_init_pr@t16& (0+255),w,b
 25290  00550A  0100               	movlb	0	; () banked
 25291  00550C  6F6E               	movwf	crc_append@n& (0+255),b
 25292  00550E  0EFF               	movlw	255
 25293  005510  0100               	movlb	0	; () banked
 25294  005512  2178               	addwfc	(calib_data_init_pr@t16+1)& (0+255),w,b
 25295  005514  0100               	movlb	0	; () banked
 25296  005516  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 25297  005518  EC2E  F036         	call	_crc_append	;wreg free
 25298                           
 25299                           ;data.c: 302: at24c02_write_n_byte(p_prEepromObj,0,buf,t16);
 25300  00551C  C029  F062         	movff	_p_prEepromObj,at24c02_write_n_byte@pAt24c02
 25301  005520  C02A  F063         	movff	_p_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 25302  005524  0E00               	movlw	0
 25303  005526  0100               	movlb	0	; () banked
 25304  005528  6F64               	movwf	at24c02_write_n_byte@addr& (0+255),b
 25305  00552A  C079  F065         	movff	calib_data_init_pr@buf,at24c02_write_n_byte@buf
 25306  00552E  C07A  F066         	movff	calib_data_init_pr@buf+1,at24c02_write_n_byte@buf+1
 25307  005532  C077  F067         	movff	calib_data_init_pr@t16,at24c02_write_n_byte@len
 25308  005536  C078  F068         	movff	calib_data_init_pr@t16+1,at24c02_write_n_byte@len+1
 25309  00553A  ECB8  F028         	call	_at24c02_write_n_byte	;wreg free
 25310                           
 25311                           ;data.c: 303: at24c02_read_n_byte(p_prEepromObj,0,buf,t16);
 25312  00553E  C029  F064         	movff	_p_prEepromObj,at24c02_read_n_byte@pAt24c02
 25313  005542  C02A  F065         	movff	_p_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 25314  005546  0E00               	movlw	0
 25315  005548  0100               	movlb	0	; () banked
 25316  00554A  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 25317  00554C  C079  F067         	movff	calib_data_init_pr@buf,at24c02_read_n_byte@buf
 25318  005550  C07A  F068         	movff	calib_data_init_pr@buf+1,at24c02_read_n_byte@buf+1
 25319  005554  C077  F069         	movff	calib_data_init_pr@t16,at24c02_read_n_byte@len
 25320  005558  C078  F06A         	movff	calib_data_init_pr@t16+1,at24c02_read_n_byte@len+1
 25321  00555C  EC11  F020         	call	_at24c02_read_n_byte	;wreg free
 25322                           
 25323                           ;data.c: 304: ret=crc_verify(buf,t16);
 25324  005560  C079  F06C         	movff	calib_data_init_pr@buf,crc_verify@message
 25325  005564  C07A  F06D         	movff	calib_data_init_pr@buf+1,crc_verify@message+1
 25326  005568  C077  F06E         	movff	calib_data_init_pr@t16,crc_verify@n
 25327  00556C  C078  F06F         	movff	calib_data_init_pr@t16+1,crc_verify@n+1
 25328  005570  ECE6  F032         	call	_crc_verify	;wreg free
 25329  005574  0100               	movlb	0	; () banked
 25330  005576  6F76               	movwf	calib_data_init_pr@ret& (0+255),b
 25331                           
 25332                           ; BSR set to: 0
 25333  005578  0012               	return	
 25334  00557A                     __end_of_calib_data_init_pr:
 25335                           	opt stack 0
 25336                           tosu	equ	0xFFF
 25337                           tosh	equ	0xFFE
 25338                           tosl	equ	0xFFD
 25339                           pclath	equ	0xFFA
 25340                           tblptru	equ	0xFF8
 25341                           tblptrh	equ	0xFF7
 25342                           tblptrl	equ	0xFF6
 25343                           tablat	equ	0xFF5
 25344                           prodh	equ	0xFF4
 25345                           prodl	equ	0xFF3
 25346                           intcon	equ	0xFF2
 25347                           indf0	equ	0xFEF
 25348                           postinc0	equ	0xFEE
 25349                           fsr0h	equ	0xFEA
 25350                           fsr0l	equ	0xFE9
 25351                           wreg	equ	0xFE8
 25352                           postinc1	equ	0xFE6
 25353                           postdec1	equ	0xFE5
 25354                           plusw1	equ	0xFE3
 25355                           fsr1h	equ	0xFE2
 25356                           fsr1l	equ	0xFE1
 25357                           indf2	equ	0xFDF
 25358                           postinc2	equ	0xFDE
 25359                           postdec2	equ	0xFDD
 25360                           plusw2	equ	0xFDB
 25361                           fsr2h	equ	0xFDA
 25362                           fsr2l	equ	0xFD9
 25363                           status	equ	0xFD8
 25364                           
 25365 ;; *************** function _calib_data_set_default_pr *****************
 25366 ;; Defined at:
 25367 ;;		line 251 in file "src/api/data.c"
 25368 ;; Parameters:    Size  Location     Type
 25369 ;;		None
 25370 ;; Auto vars:     Size  Location     Type
 25371 ;;  j               1   15[BANK0 ] unsigned char 
 25372 ;;  i               1   14[BANK0 ] unsigned char 
 25373 ;; Return value:  Size  Location     Type
 25374 ;;                  1    wreg      void 
 25375 ;; Registers used:
 25376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25377 ;; Tracked objects:
 25378 ;;		On entry : 0/0
 25379 ;;		On exit  : 0/0
 25380 ;;		Unchanged: 0/0
 25381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25383 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25384 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25385 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25386 ;;Total ram usage:        8 bytes
 25387 ;; Hardware stack levels used:    1
 25388 ;; Hardware stack levels required when called:    5
 25389 ;; This function calls:
 25390 ;;		___wmul
 25391 ;; This function is called by:
 25392 ;;		_calib_data_init_pr
 25393 ;; This function uses a non-reentrant model
 25394 ;;
 25395                           
 25396                           	psect	text112
 25397  003CA2                     __ptext112:
 25398                           	opt stack 0
 25399  003CA2                     _calib_data_set_default_pr:
 25400                           	opt stack 23
 25401                           
 25402                           ;data.c: 253: uint8_t i,j;
 25403                           ;data.c: 254: prCalibTabDef.rowCount=1;
 25404                           
 25405                           ; BSR set to: 0
 25406                           ;incstack = 0
 25407  003CA2  0E01               	movlw	1
 25408  003CA4  0103               	movlb	3	; () banked
 25409  003CA6  6F00               	movwf	_prCalibTabDef& (0+255),b
 25410                           
 25411                           ;data.c: 255: for(i=0;i<1;i++){
 25412  003CA8  0E00               	movlw	0
 25413  003CAA  0100               	movlb	0	; () banked
 25414  003CAC  6F6E               	movwf	calib_data_set_default_pr@i& (0+255),b
 25415  003CAE  0100               	movlb	0	; () banked
 25416  003CB0  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 25417  003CB2  0100               	movlb	0	; () banked
 25418  003CB4  A4D8               	btfss	status,2,c
 25419  003CB6  0012               	return	
 25420                           
 25421                           ; BSR set to: 0
 25422                           ;data.c: 256: prCalibTabDef.prCalibRow[i].pCount=6;
 25423                           
 25424                           ; BSR set to: 0
 25425                           
 25426                           ; BSR set to: 0
 25427  003CB8  0100               	movlb	0	; () banked
 25428  003CBA  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 25429  003CBC  0D34               	mullw	52
 25430  003CBE  0E04               	movlw	low (_prCalibTabDef+4)
 25431  003CC0  24F3               	addwf	prodl,w,c
 25432  003CC2  6ED9               	movwf	fsr2l,c
 25433  003CC4  0E03               	movlw	high (_prCalibTabDef+4)
 25434  003CC6  20F4               	addwfc	prodh,w,c
 25435  003CC8  6EDA               	movwf	fsr2h,c
 25436  003CCA  0E06               	movlw	6
 25437  003CCC  6EDF               	movwf	indf2,c
 25438                           
 25439                           ; BSR set to: 0
 25440                           ;data.c: 257: for(j=0;j<6;j++){
 25441  003CCE  0E00               	movlw	0
 25442  003CD0  0100               	movlb	0	; () banked
 25443  003CD2  6F6F               	movwf	calib_data_set_default_pr@j& (0+255),b
 25444  003CD4                     l12146:
 25445                           
 25446                           ; BSR set to: 0
 25447  003CD4  0E05               	movlw	5
 25448  003CD6  0100               	movlb	0	; () banked
 25449  003CD8  656F               	cpfsgt	calib_data_set_default_pr@j& (0+255),b
 25450  003CDA  D001               	goto	l12150
 25451  003CDC  D0C1               	goto	l12158
 25452  003CDE                     l12150:
 25453                           
 25454                           ; BSR set to: 0
 25455                           ;data.c: 258: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 25456  003CDE  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 25457  003CE2  0100               	movlb	0	; () banked
 25458  003CE4  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 25459  003CE6  0E17               	movlw	23
 25460  003CE8  0100               	movlb	0	; () banked
 25461  003CEA  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25462  003CEC  0E70               	movlw	112
 25463  003CEE  6F64               	movwf	___wmul@multiplicand& (0+255),b
 25464  003CF0  EC81  F03A         	call	___wmul	;wreg free
 25465  003CF4  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 25466  003CF8  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 25467  003CFC  C06E  F062         	movff	calib_data_set_default_pr@i,___wmul@multiplier
 25468  003D00  0100               	movlb	0	; () banked
 25469  003D02  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 25470  003D04  0E01               	movlw	1
 25471  003D06  0100               	movlb	0	; () banked
 25472  003D08  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25473  003D0A  0EF4               	movlw	244
 25474  003D0C  6F64               	movwf	___wmul@multiplicand& (0+255),b
 25475  003D0E  EC81  F03A         	call	___wmul	;wreg free
 25476  003D12  0100               	movlb	0	; () banked
 25477  003D14  5162               	movf	?___wmul& (0+255),w,b
 25478  003D16  0100               	movlb	0	; () banked
 25479  003D18  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 25480  003D1A  0100               	movlb	0	; () banked
 25481  003D1C  5163               	movf	(?___wmul+1)& (0+255),w,b
 25482  003D1E  0100               	movlb	0	; () banked
 25483  003D20  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 25484  003D22  0100               	movlb	0	; () banked
 25485  003D24  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 25486  003D26  0D08               	mullw	8
 25487  003D28  0E04               	movlw	4
 25488  003D2A  26F3               	addwf	prodl,f,c
 25489  003D2C  0E00               	movlw	0
 25490  003D2E  22F4               	addwfc	prodh,f,c
 25491  003D30  0E00               	movlw	low _prCalibTabDef
 25492  003D32  0100               	movlb	0	; () banked
 25493  003D34  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 25494  003D36  0E03               	movlw	high _prCalibTabDef
 25495  003D38  0100               	movlb	0	; () banked
 25496  003D3A  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 25497  003D3C  0E04               	movlw	4
 25498  003D3E  0100               	movlb	0	; () banked
 25499  003D40  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 25500  003D42  0E00               	movlw	0
 25501  003D44  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 25502  003D46  50F3               	movf	prodl,w,c
 25503  003D48  0100               	movlb	0	; () banked
 25504  003D4A  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 25505  003D4C  50F4               	movf	prodh,w,c
 25506  003D4E  0100               	movlb	0	; () banked
 25507  003D50  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 25508  003D52  0100               	movlb	0	; () banked
 25509  003D54  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 25510  003D56  0D34               	mullw	52
 25511  003D58  50F3               	movf	prodl,w,c
 25512  003D5A  0100               	movlb	0	; () banked
 25513  003D5C  276A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),f,b
 25514  003D5E  50F4               	movf	prodh,w,c
 25515  003D60  0100               	movlb	0	; () banked
 25516  003D62  236B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),f,b
 25517  003D64  0E04               	movlw	4
 25518  003D66  0100               	movlb	0	; () banked
 25519  003D68  256A               	addwf	(??_calib_data_set_default_pr+2)& (0+255),w,b
 25520  003D6A  6ED9               	movwf	fsr2l,c
 25521  003D6C  0E00               	movlw	0
 25522  003D6E  0100               	movlb	0	; () banked
 25523  003D70  216B               	addwfc	(??_calib_data_set_default_pr+3)& (0+255),w,b
 25524  003D72  6EDA               	movwf	fsr2h,c
 25525  003D74  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 25526  003D78  C069  FFDD         	movff	??_calib_data_set_default_pr+1,postdec2
 25527                           
 25528                           ;data.c: 259: prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 25529  003D7C  C06F  F062         	movff	calib_data_set_default_pr@j,___wmul@multiplier
 25530  003D80  0100               	movlb	0	; () banked
 25531  003D82  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 25532  003D84  0E17               	movlw	23
 25533  003D86  0100               	movlb	0	; () banked
 25534  003D88  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25535  003D8A  0E70               	movlw	112
 25536  003D8C  6F64               	movwf	___wmul@multiplicand& (0+255),b
 25537  003D8E  EC81  F03A         	call	___wmul	;wreg free
 25538  003D92  0100               	movlb	0	; () banked
 25539  003D94  C062  F068         	movff	?___wmul,??_calib_data_set_default_pr
 25540  003D98  0100               	movlb	0	; () banked
 25541  003D9A  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_pr+1
 25542  003D9E  0E00               	movlw	0
 25543  003DA0  0100               	movlb	0	; () banked
 25544  003DA2  BF69               	btfsc	(??_calib_data_set_default_pr+1)& (0+255),7,b
 25545  003DA4  0EFF               	movlw	255
 25546  003DA6  6F6A               	movwf	(??_calib_data_set_default_pr+2)& (0+255),b
 25547  003DA8  6F6B               	movwf	(??_calib_data_set_default_pr+3)& (0+255),b
 25548  003DAA  0100               	movlb	0	; () banked
 25549  003DAC  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 25550  003DAE  0D08               	mullw	8
 25551  003DB0  0E04               	movlw	4
 25552  003DB2  26F3               	addwf	prodl,f,c
 25553  003DB4  0E00               	movlw	0
 25554  003DB6  22F4               	addwfc	prodh,f,c
 25555  003DB8  0E00               	movlw	low _prCalibTabDef
 25556  003DBA  0100               	movlb	0	; () banked
 25557  003DBC  6F6C               	movwf	(??_calib_data_set_default_pr+4)& (0+255),b
 25558  003DBE  0E03               	movlw	high _prCalibTabDef
 25559  003DC0  0100               	movlb	0	; () banked
 25560  003DC2  6F6D               	movwf	(??_calib_data_set_default_pr+5)& (0+255),b
 25561  003DC4  0E04               	movlw	4
 25562  003DC6  0100               	movlb	0	; () banked
 25563  003DC8  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 25564  003DCA  0E00               	movlw	0
 25565  003DCC  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 25566  003DCE  50F3               	movf	prodl,w,c
 25567  003DD0  0100               	movlb	0	; () banked
 25568  003DD2  276C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),f,b
 25569  003DD4  50F4               	movf	prodh,w,c
 25570  003DD6  0100               	movlb	0	; () banked
 25571  003DD8  236D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),f,b
 25572  003DDA  0100               	movlb	0	; () banked
 25573  003DDC  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 25574  003DDE  0D34               	mullw	52
 25575  003DE0  50F3               	movf	prodl,w,c
 25576  003DE2  0100               	movlb	0	; () banked
 25577  003DE4  256C               	addwf	(??_calib_data_set_default_pr+4)& (0+255),w,b
 25578  003DE6  6ED9               	movwf	fsr2l,c
 25579  003DE8  50F4               	movf	prodh,w,c
 25580  003DEA  0100               	movlb	0	; () banked
 25581  003DEC  216D               	addwfc	(??_calib_data_set_default_pr+5)& (0+255),w,b
 25582  003DEE  6EDA               	movwf	fsr2h,c
 25583  003DF0  C068  FFDE         	movff	??_calib_data_set_default_pr,postinc2
 25584  003DF4  C069  FFDE         	movff	??_calib_data_set_default_pr+1,postinc2
 25585  003DF8  C06A  FFDE         	movff	??_calib_data_set_default_pr+2,postinc2
 25586  003DFC  C06B  FFDE         	movff	??_calib_data_set_default_pr+3,postinc2
 25587                           
 25588                           ; BSR set to: 0
 25589                           ;data.c: 260: prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=0;
 25590  003E00  0100               	movlb	0	; () banked
 25591  003E02  516F               	movf	calib_data_set_default_pr@j& (0+255),w,b
 25592  003E04  0D08               	mullw	8
 25593  003E06  0E04               	movlw	4
 25594  003E08  26F3               	addwf	prodl,f,c
 25595  003E0A  0E00               	movlw	0
 25596  003E0C  22F4               	addwfc	prodh,f,c
 25597  003E0E  0E00               	movlw	low _prCalibTabDef
 25598  003E10  0100               	movlb	0	; () banked
 25599  003E12  6F68               	movwf	??_calib_data_set_default_pr& (0+255),b
 25600  003E14  0E03               	movlw	high _prCalibTabDef
 25601  003E16  0100               	movlb	0	; () banked
 25602  003E18  6F69               	movwf	(??_calib_data_set_default_pr+1)& (0+255),b
 25603  003E1A  0E04               	movlw	4
 25604  003E1C  0100               	movlb	0	; () banked
 25605  003E1E  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 25606  003E20  0E00               	movlw	0
 25607  003E22  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 25608  003E24  50F3               	movf	prodl,w,c
 25609  003E26  0100               	movlb	0	; () banked
 25610  003E28  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 25611  003E2A  50F4               	movf	prodh,w,c
 25612  003E2C  0100               	movlb	0	; () banked
 25613  003E2E  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 25614  003E30  0100               	movlb	0	; () banked
 25615  003E32  516E               	movf	calib_data_set_default_pr@i& (0+255),w,b
 25616  003E34  0D34               	mullw	52
 25617  003E36  50F3               	movf	prodl,w,c
 25618  003E38  0100               	movlb	0	; () banked
 25619  003E3A  2768               	addwf	??_calib_data_set_default_pr& (0+255),f,b
 25620  003E3C  50F4               	movf	prodh,w,c
 25621  003E3E  0100               	movlb	0	; () banked
 25622  003E40  2369               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),f,b
 25623  003E42  0E06               	movlw	6
 25624  003E44  0100               	movlb	0	; () banked
 25625  003E46  2568               	addwf	??_calib_data_set_default_pr& (0+255),w,b
 25626  003E48  6ED9               	movwf	fsr2l,c
 25627  003E4A  0E00               	movlw	0
 25628  003E4C  0100               	movlb	0	; () banked
 25629  003E4E  2169               	addwfc	(??_calib_data_set_default_pr+1)& (0+255),w,b
 25630  003E50  6EDA               	movwf	fsr2h,c
 25631  003E52  0E00               	movlw	0
 25632  003E54  6EDE               	movwf	postinc2,c
 25633  003E56  0E00               	movlw	0
 25634  003E58  6EDD               	movwf	postdec2,c
 25635                           
 25636                           ; BSR set to: 0
 25637  003E5A  0100               	movlb	0	; () banked
 25638  003E5C  2B6F               	incf	calib_data_set_default_pr@j& (0+255),f,b
 25639  003E5E  D73A               	goto	l12146
 25640  003E60                     l12158:
 25641                           
 25642                           ; BSR set to: 0
 25643  003E60  0100               	movlb	0	; () banked
 25644  003E62  2B6E               	incf	calib_data_set_default_pr@i& (0+255),f,b
 25645  003E64  D724               	goto	L15
 25646  003E66                     __end_of_calib_data_set_default_pr:
 25647                           	opt stack 0
 25648                           tosu	equ	0xFFF
 25649                           tosh	equ	0xFFE
 25650                           tosl	equ	0xFFD
 25651                           pclath	equ	0xFFA
 25652                           tblptru	equ	0xFF8
 25653                           tblptrh	equ	0xFF7
 25654                           tblptrl	equ	0xFF6
 25655                           tablat	equ	0xFF5
 25656                           prodh	equ	0xFF4
 25657                           prodl	equ	0xFF3
 25658                           intcon	equ	0xFF2
 25659                           indf0	equ	0xFEF
 25660                           postinc0	equ	0xFEE
 25661                           fsr0h	equ	0xFEA
 25662                           fsr0l	equ	0xFE9
 25663                           wreg	equ	0xFE8
 25664                           postinc1	equ	0xFE6
 25665                           postdec1	equ	0xFE5
 25666                           plusw1	equ	0xFE3
 25667                           fsr1h	equ	0xFE2
 25668                           fsr1l	equ	0xFE1
 25669                           indf2	equ	0xFDF
 25670                           postinc2	equ	0xFDE
 25671                           postdec2	equ	0xFDD
 25672                           plusw2	equ	0xFDB
 25673                           fsr2h	equ	0xFDA
 25674                           fsr2l	equ	0xFD9
 25675                           status	equ	0xFD8
 25676                           
 25677 ;; *************** function _calib_data_init_diff_pr *****************
 25678 ;; Defined at:
 25679 ;;		line 266 in file "src/api/data.c"
 25680 ;; Parameters:    Size  Location     Type
 25681 ;;		None
 25682 ;; Auto vars:     Size  Location     Type
 25683 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 25684 ;;		 -> diff_prCalibTabDef(162), 
 25685 ;;  t16             2   23[BANK0 ] unsigned int 
 25686 ;;  ret             1   22[BANK0 ] unsigned char 
 25687 ;; Return value:  Size  Location     Type
 25688 ;;                  1    wreg      unsigned char 
 25689 ;; Registers used:
 25690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25691 ;; Tracked objects:
 25692 ;;		On entry : 0/0
 25693 ;;		On exit  : 0/0
 25694 ;;		Unchanged: 0/0
 25695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25697 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25699 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25700 ;;Total ram usage:        5 bytes
 25701 ;; Hardware stack levels used:    1
 25702 ;; Hardware stack levels required when called:    8
 25703 ;; This function calls:
 25704 ;;		_at24c02_init
 25705 ;;		_at24c02_read_n_byte
 25706 ;;		_at24c02_write_n_byte
 25707 ;;		_calib_data_set_default_diff_pr
 25708 ;;		_crc_append
 25709 ;;		_crc_verify
 25710 ;; This function is called by:
 25711 ;;		_data_init_all
 25712 ;; This function uses a non-reentrant model
 25713 ;;
 25714                           
 25715                           	psect	text113
 25716  00557A                     __ptext113:
 25717                           	opt stack 0
 25718  00557A                     _calib_data_init_diff_pr:
 25719                           	opt stack 21
 25720                           
 25721                           ;data.c: 268: uint8_t ret=0;
 25722                           
 25723                           ; BSR set to: 0
 25724                           ;incstack = 0
 25725  00557A  0E00               	movlw	0
 25726  00557C  0100               	movlb	0	; () banked
 25727  00557E  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 25728                           
 25729                           ; BSR set to: 0
 25730                           ;data.c: 269: uint16_t t16;
 25731                           ;data.c: 270: uint8_t* buf=(uint8_t*)(&diff_prCalibTabDef);
 25732  005580  0E00               	movlw	low _diff_prCalibTabDef
 25733  005582  0100               	movlb	0	; () banked
 25734  005584  6F79               	movwf	calib_data_init_diff_pr@buf& (0+255),b
 25735  005586  0E02               	movlw	high _diff_prCalibTabDef
 25736  005588  0100               	movlb	0	; () banked
 25737  00558A  6F7A               	movwf	(calib_data_init_diff_pr@buf+1)& (0+255),b
 25738                           
 25739                           ; BSR set to: 0
 25740                           ;data.c: 272: pdiff_prEepromObj= &at24c02Ch1;
 25741  00558C  0EC7               	movlw	low _at24c02Ch1
 25742  00558E  6E2B               	movwf	_pdiff_prEepromObj,c
 25743  005590  0E01               	movlw	high _at24c02Ch1
 25744  005592  6E2C               	movwf	_pdiff_prEepromObj+1,c
 25745                           
 25746                           ; BSR set to: 0
 25747                           ;data.c: 273: at24c02_init(pdiff_prEepromObj,0xac);
 25748  005594  C02B  F060         	movff	_pdiff_prEepromObj,at24c02_init@pAt24c02
 25749  005598  C02C  F061         	movff	_pdiff_prEepromObj+1,at24c02_init@pAt24c02+1
 25750  00559C  0EAC               	movlw	172
 25751  00559E  0100               	movlb	0	; () banked
 25752  0055A0  6F62               	movwf	at24c02_init@slv& (0+255),b
 25753  0055A2  EC6C  F034         	call	_at24c02_init	;wreg free
 25754                           
 25755                           ;data.c: 274: t16=sizeof(st_prCalibTabDef);
 25756  0055A6  0E00               	movlw	0
 25757  0055A8  0100               	movlb	0	; () banked
 25758  0055AA  6F78               	movwf	(calib_data_init_diff_pr@t16+1)& (0+255),b
 25759  0055AC  0EA2               	movlw	162
 25760  0055AE  6F77               	movwf	calib_data_init_diff_pr@t16& (0+255),b
 25761                           
 25762                           ; BSR set to: 0
 25763                           ;data.c: 275: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 25764  0055B0  C02B  F064         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 25765  0055B4  C02C  F065         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 25766  0055B8  0E00               	movlw	0
 25767  0055BA  0100               	movlb	0	; () banked
 25768  0055BC  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 25769  0055BE  C079  F067         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 25770  0055C2  C07A  F068         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 25771  0055C6  C077  F069         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 25772  0055CA  C078  F06A         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 25773  0055CE  EC11  F020         	call	_at24c02_read_n_byte	;wreg free
 25774                           
 25775                           ;data.c: 276: ret=crc_verify(buf,t16);
 25776  0055D2  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 25777  0055D6  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 25778  0055DA  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 25779  0055DE  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 25780  0055E2  ECE6  F032         	call	_crc_verify	;wreg free
 25781  0055E6  0100               	movlb	0	; () banked
 25782  0055E8  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 25783                           
 25784                           ; BSR set to: 0
 25785                           ;data.c: 277: if(!ret){
 25786  0055EA  0100               	movlb	0	; () banked
 25787  0055EC  5176               	movf	calib_data_init_diff_pr@ret& (0+255),w,b
 25788  0055EE  0100               	movlb	0	; () banked
 25789  0055F0  A4D8               	btfss	status,2,c
 25790  0055F2  0012               	return	
 25791                           
 25792                           ; BSR set to: 0
 25793                           ;data.c: 278: calib_data_set_default_diff_pr();
 25794  0055F4  EC75  F01C         	call	_calib_data_set_default_diff_pr	;wreg free
 25795                           
 25796                           ;data.c: 279: crc_append(buf,t16-2);
 25797  0055F8  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_append@message
 25798  0055FC  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_append@message+1
 25799  005600  0EFE               	movlw	254
 25800  005602  0100               	movlb	0	; () banked
 25801  005604  2577               	addwf	calib_data_init_diff_pr@t16& (0+255),w,b
 25802  005606  0100               	movlb	0	; () banked
 25803  005608  6F6E               	movwf	crc_append@n& (0+255),b
 25804  00560A  0EFF               	movlw	255
 25805  00560C  0100               	movlb	0	; () banked
 25806  00560E  2178               	addwfc	(calib_data_init_diff_pr@t16+1)& (0+255),w,b
 25807  005610  0100               	movlb	0	; () banked
 25808  005612  6F6F               	movwf	(crc_append@n+1)& (0+255),b
 25809  005614  EC2E  F036         	call	_crc_append	;wreg free
 25810                           
 25811                           ;data.c: 280: at24c02_write_n_byte(pdiff_prEepromObj,0,buf,t16);
 25812  005618  C02B  F062         	movff	_pdiff_prEepromObj,at24c02_write_n_byte@pAt24c02
 25813  00561C  C02C  F063         	movff	_pdiff_prEepromObj+1,at24c02_write_n_byte@pAt24c02+1
 25814  005620  0E00               	movlw	0
 25815  005622  0100               	movlb	0	; () banked
 25816  005624  6F64               	movwf	at24c02_write_n_byte@addr& (0+255),b
 25817  005626  C079  F065         	movff	calib_data_init_diff_pr@buf,at24c02_write_n_byte@buf
 25818  00562A  C07A  F066         	movff	calib_data_init_diff_pr@buf+1,at24c02_write_n_byte@buf+1
 25819  00562E  C077  F067         	movff	calib_data_init_diff_pr@t16,at24c02_write_n_byte@len
 25820  005632  C078  F068         	movff	calib_data_init_diff_pr@t16+1,at24c02_write_n_byte@len+1
 25821  005636  ECB8  F028         	call	_at24c02_write_n_byte	;wreg free
 25822                           
 25823                           ;data.c: 281: at24c02_read_n_byte(pdiff_prEepromObj,0,buf,t16);
 25824  00563A  C02B  F064         	movff	_pdiff_prEepromObj,at24c02_read_n_byte@pAt24c02
 25825  00563E  C02C  F065         	movff	_pdiff_prEepromObj+1,at24c02_read_n_byte@pAt24c02+1
 25826  005642  0E00               	movlw	0
 25827  005644  0100               	movlb	0	; () banked
 25828  005646  6F66               	movwf	at24c02_read_n_byte@addr& (0+255),b
 25829  005648  C079  F067         	movff	calib_data_init_diff_pr@buf,at24c02_read_n_byte@buf
 25830  00564C  C07A  F068         	movff	calib_data_init_diff_pr@buf+1,at24c02_read_n_byte@buf+1
 25831  005650  C077  F069         	movff	calib_data_init_diff_pr@t16,at24c02_read_n_byte@len
 25832  005654  C078  F06A         	movff	calib_data_init_diff_pr@t16+1,at24c02_read_n_byte@len+1
 25833  005658  EC11  F020         	call	_at24c02_read_n_byte	;wreg free
 25834                           
 25835                           ;data.c: 282: ret=crc_verify(buf,t16);
 25836  00565C  C079  F06C         	movff	calib_data_init_diff_pr@buf,crc_verify@message
 25837  005660  C07A  F06D         	movff	calib_data_init_diff_pr@buf+1,crc_verify@message+1
 25838  005664  C077  F06E         	movff	calib_data_init_diff_pr@t16,crc_verify@n
 25839  005668  C078  F06F         	movff	calib_data_init_diff_pr@t16+1,crc_verify@n+1
 25840  00566C  ECE6  F032         	call	_crc_verify	;wreg free
 25841  005670  0100               	movlb	0	; () banked
 25842  005672  6F76               	movwf	calib_data_init_diff_pr@ret& (0+255),b
 25843                           
 25844                           ; BSR set to: 0
 25845  005674  0012               	return	
 25846  005676                     __end_of_calib_data_init_diff_pr:
 25847                           	opt stack 0
 25848                           tosu	equ	0xFFF
 25849                           tosh	equ	0xFFE
 25850                           tosl	equ	0xFFD
 25851                           pclath	equ	0xFFA
 25852                           tblptru	equ	0xFF8
 25853                           tblptrh	equ	0xFF7
 25854                           tblptrl	equ	0xFF6
 25855                           tablat	equ	0xFF5
 25856                           prodh	equ	0xFF4
 25857                           prodl	equ	0xFF3
 25858                           intcon	equ	0xFF2
 25859                           indf0	equ	0xFEF
 25860                           postinc0	equ	0xFEE
 25861                           fsr0h	equ	0xFEA
 25862                           fsr0l	equ	0xFE9
 25863                           wreg	equ	0xFE8
 25864                           postinc1	equ	0xFE6
 25865                           postdec1	equ	0xFE5
 25866                           plusw1	equ	0xFE3
 25867                           fsr1h	equ	0xFE2
 25868                           fsr1l	equ	0xFE1
 25869                           indf2	equ	0xFDF
 25870                           postinc2	equ	0xFDE
 25871                           postdec2	equ	0xFDD
 25872                           plusw2	equ	0xFDB
 25873                           fsr2h	equ	0xFDA
 25874                           fsr2l	equ	0xFD9
 25875                           status	equ	0xFD8
 25876                           
 25877 ;; *************** function _crc_verify *****************
 25878 ;; Defined at:
 25879 ;;		line 76 in file "src/depend/crc16.c"
 25880 ;; Parameters:    Size  Location     Type
 25881 ;;  message         2   12[BANK0 ] PTR unsigned char 
 25882 ;;		 -> globleBuffer0(256), prCalibTabDef(162), diff_prCalibTabDef(162), 
 25883 ;;  n               2   14[BANK0 ] unsigned int 
 25884 ;; Auto vars:     Size  Location     Type
 25885 ;;  expected        2   20[BANK0 ] unsigned int 
 25886 ;;  crccal          2   18[BANK0 ] unsigned int 
 25887 ;; Return value:  Size  Location     Type
 25888 ;;                  1    wreg      unsigned char 
 25889 ;; Registers used:
 25890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25891 ;; Tracked objects:
 25892 ;;		On entry : 0/0
 25893 ;;		On exit  : 0/0
 25894 ;;		Unchanged: 0/0
 25895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25896 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25897 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25899 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25900 ;;Total ram usage:       10 bytes
 25901 ;; Hardware stack levels used:    1
 25902 ;; Hardware stack levels required when called:    5
 25903 ;; This function calls:
 25904 ;;		_crc_sum
 25905 ;;		_m_mem_cpy_len
 25906 ;; This function is called by:
 25907 ;;		_data_sys_init
 25908 ;;		_calib_data_init_diff_pr
 25909 ;;		_calib_data_init_pr
 25910 ;;		_data_sys_save
 25911 ;; This function uses a non-reentrant model
 25912 ;;
 25913                           
 25914                           	psect	text114
 25915  0065CC                     __ptext114:
 25916                           	opt stack 0
 25917  0065CC                     _crc_verify:
 25918                           	opt stack 23
 25919                           
 25920                           ;crc16.c: 78: uint16_t expected,crccal;
 25921                           ;crc16.c: 81: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
 25922                           
 25923                           ; BSR set to: 0
 25924                           ;incstack = 0
 25925  0065CC  0E74               	movlw	low crc_verify@expected
 25926  0065CE  0100               	movlb	0	; () banked
 25927  0065D0  6F60               	movwf	m_mem_cpy_len@d& (0+255),b
 25928  0065D2  0E00               	movlw	high crc_verify@expected
 25929  0065D4  0100               	movlb	0	; () banked
 25930  0065D6  6F61               	movwf	(m_mem_cpy_len@d+1)& (0+255),b
 25931  0065D8  0100               	movlb	0	; () banked
 25932  0065DA  516E               	movf	crc_verify@n& (0+255),w,b
 25933  0065DC  0100               	movlb	0	; () banked
 25934  0065DE  256C               	addwf	crc_verify@message& (0+255),w,b
 25935  0065E0  0100               	movlb	0	; () banked
 25936  0065E2  6F70               	movwf	??_crc_verify& (0+255),b
 25937  0065E4  0100               	movlb	0	; () banked
 25938  0065E6  516F               	movf	(crc_verify@n+1)& (0+255),w,b
 25939  0065E8  0100               	movlb	0	; () banked
 25940  0065EA  216D               	addwfc	(crc_verify@message+1)& (0+255),w,b
 25941  0065EC  0100               	movlb	0	; () banked
 25942  0065EE  6F71               	movwf	(??_crc_verify+1)& (0+255),b
 25943  0065F0  0EFE               	movlw	254
 25944  0065F2  0100               	movlb	0	; () banked
 25945  0065F4  2570               	addwf	??_crc_verify& (0+255),w,b
 25946  0065F6  0100               	movlb	0	; () banked
 25947  0065F8  6F62               	movwf	m_mem_cpy_len@s& (0+255),b
 25948  0065FA  0EFF               	movlw	255
 25949  0065FC  0100               	movlb	0	; () banked
 25950  0065FE  2171               	addwfc	(??_crc_verify+1)& (0+255),w,b
 25951  006600  0100               	movlb	0	; () banked
 25952  006602  6F63               	movwf	(m_mem_cpy_len@s+1)& (0+255),b
 25953  006604  0E00               	movlw	0
 25954  006606  0100               	movlb	0	; () banked
 25955  006608  6F65               	movwf	(m_mem_cpy_len@len+1)& (0+255),b
 25956  00660A  0E02               	movlw	2
 25957  00660C  6F64               	movwf	m_mem_cpy_len@len& (0+255),b
 25958  00660E  EC88  F038         	call	_m_mem_cpy_len	;wreg free
 25959                           
 25960                           ;crc16.c: 82: crccal=crc_sum(message,n - 2);
 25961  006612  C06C  F060         	movff	crc_verify@message,crc_sum@puchMsg
 25962  006616  C06D  F061         	movff	crc_verify@message+1,crc_sum@puchMsg+1
 25963  00661A  0EFE               	movlw	254
 25964  00661C  0100               	movlb	0	; () banked
 25965  00661E  256E               	addwf	crc_verify@n& (0+255),w,b
 25966  006620  0100               	movlb	0	; () banked
 25967  006622  6F62               	movwf	crc_sum@usDataLen& (0+255),b
 25968  006624  0EFF               	movlw	255
 25969  006626  0100               	movlb	0	; () banked
 25970  006628  216F               	addwfc	(crc_verify@n+1)& (0+255),w,b
 25971  00662A  0100               	movlb	0	; () banked
 25972  00662C  6F63               	movwf	(crc_sum@usDataLen+1)& (0+255),b
 25973  00662E  EC0B  F030         	call	_crc_sum	;wreg free
 25974  006632  C060  F072         	movff	?_crc_sum,crc_verify@crccal
 25975  006636  C061  F073         	movff	?_crc_sum+1,crc_verify@crccal+1
 25976                           
 25977                           ;crc16.c: 83: if(expected!=crccal)return 0;
 25978  00663A  0100               	movlb	0	; () banked
 25979  00663C  5172               	movf	crc_verify@crccal& (0+255),w,b
 25980  00663E  0100               	movlb	0	; () banked
 25981  006640  1974               	xorwf	crc_verify@expected& (0+255),w,b
 25982  006642  E106               	bnz	u10940
 25983  006644  0100               	movlb	0	; () banked
 25984  006646  5173               	movf	(crc_verify@crccal+1)& (0+255),w,b
 25985  006648  0100               	movlb	0	; () banked
 25986  00664A  1975               	xorwf	(crc_verify@expected+1)& (0+255),w,b
 25987  00664C  B4D8               	btfsc	status,2,c
 25988  00664E  D002               	goto	l12060
 25989  006650                     u10940:
 25990                           
 25991                           ; BSR set to: 0
 25992  006650  0E00               	movlw	0
 25993                           
 25994                           ; BSR set to: 0
 25995  006652  0012               	return	
 25996  006654                     l12060:
 25997                           
 25998                           ; BSR set to: 0
 25999                           ;crc16.c: 84: return 1;
 26000  006654  0E01               	movlw	1
 26001  006656  0012               	return	
 26002  006658                     __end_of_crc_verify:
 26003                           	opt stack 0
 26004                           tosu	equ	0xFFF
 26005                           tosh	equ	0xFFE
 26006                           tosl	equ	0xFFD
 26007                           pclath	equ	0xFFA
 26008                           tblptru	equ	0xFF8
 26009                           tblptrh	equ	0xFF7
 26010                           tblptrl	equ	0xFF6
 26011                           tablat	equ	0xFF5
 26012                           prodh	equ	0xFF4
 26013                           prodl	equ	0xFF3
 26014                           intcon	equ	0xFF2
 26015                           indf0	equ	0xFEF
 26016                           postinc0	equ	0xFEE
 26017                           fsr0h	equ	0xFEA
 26018                           fsr0l	equ	0xFE9
 26019                           wreg	equ	0xFE8
 26020                           postinc1	equ	0xFE6
 26021                           postdec1	equ	0xFE5
 26022                           plusw1	equ	0xFE3
 26023                           fsr1h	equ	0xFE2
 26024                           fsr1l	equ	0xFE1
 26025                           indf2	equ	0xFDF
 26026                           postinc2	equ	0xFDE
 26027                           postdec2	equ	0xFDD
 26028                           plusw2	equ	0xFDB
 26029                           fsr2h	equ	0xFDA
 26030                           fsr2l	equ	0xFD9
 26031                           status	equ	0xFD8
 26032                           
 26033 ;; *************** function _m_mem_cpy_len *****************
 26034 ;; Defined at:
 26035 ;;		line 41 in file "src/depend/m_string.c"
 26036 ;; Parameters:    Size  Location     Type
 26037 ;;  d               2    0[BANK0 ] PTR unsigned char 
 26038 ;;		 -> m_flash_test@tmp(16), crc_verify@expected(2), globleBuffer0(256), 
 26039 ;;  s               2    2[BANK0 ] PTR unsigned char 
 26040 ;;		 -> flashTestbuf(65), m_flash_test@tmp(16), globleBuffer0(256), defultSystemData(150), 
 26041 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 26042 ;;  len             2    4[BANK0 ] unsigned int 
 26043 ;; Auto vars:     Size  Location     Type
 26044 ;;		None
 26045 ;; Return value:  Size  Location     Type
 26046 ;;                  1    wreg      void 
 26047 ;; Registers used:
 26048 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26049 ;; Tracked objects:
 26050 ;;		On entry : 0/0
 26051 ;;		On exit  : 0/0
 26052 ;;		Unchanged: 0/0
 26053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26054 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26057 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26058 ;;Total ram usage:        6 bytes
 26059 ;; Hardware stack levels used:    1
 26060 ;; Hardware stack levels required when called:    4
 26061 ;; This function calls:
 26062 ;;		Nothing
 26063 ;; This function is called by:
 26064 ;;		_data_sys_init
 26065 ;;		_crc_verify
 26066 ;;		_m_flash_write
 26067 ;;		_data_sys_save
 26068 ;;		_m_flash_test
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           
 26072                           	psect	text115
 26073  007110                     __ptext115:
 26074                           	opt stack 0
 26075  007110                     _m_mem_cpy_len:
 26076                           	opt stack 24
 26077                           
 26078                           ;m_string.c: 44: while(len)
 26079                           
 26080                           ; BSR set to: 0
 26081                           ;incstack = 0
 26082  007110  D01F               	goto	l11654
 26083  007112                     l11646:
 26084                           
 26085                           ;m_string.c: 45: {
 26086                           ;m_string.c: 46: *d++=*s++;
 26087  007112  C062  FFF6         	movff	m_mem_cpy_len@s,tblptrl
 26088  007116  C063  FFF7         	movff	m_mem_cpy_len@s+1,tblptrh
 26089  00711A  6AF8               	clrf	tblptru,c
 26090  00711C  C060  FFD9         	movff	m_mem_cpy_len@d,fsr2l
 26091  007120  C061  FFDA         	movff	m_mem_cpy_len@d+1,fsr2h
 26092  007124  0E0F               	movlw	(high __ramtop+-1)
 26093  007126  64F7               	cpfsgt	tblptrh,c
 26094  007128  D003               	bra	u10657
 26095  00712A  0008               	tblrd		*
 26096  00712C  50F5               	movf	tablat,w,c
 26097  00712E  D005               	bra	u10650
 26098  007130                     u10657:
 26099  007130  CFF6 FFE9          	movff	tblptrl,fsr0l
 26100  007134  CFF7 FFEA          	movff	tblptrh,fsr0h
 26101  007138  50EF               	movf	indf0,w,c
 26102  00713A                     u10650:
 26103  00713A  6EDF               	movwf	indf2,c
 26104  00713C  0100               	movlb	0	; () banked
 26105  00713E  4B62               	infsnz	m_mem_cpy_len@s& (0+255),f,b
 26106  007140  2B63               	incf	(m_mem_cpy_len@s+1)& (0+255),f,b
 26107                           
 26108                           ; BSR set to: 0
 26109  007142  0100               	movlb	0	; () banked
 26110  007144  4B60               	infsnz	m_mem_cpy_len@d& (0+255),f,b
 26111  007146  2B61               	incf	(m_mem_cpy_len@d+1)& (0+255),f,b
 26112                           
 26113                           ; BSR set to: 0
 26114                           ;m_string.c: 47: len--;
 26115  007148  0100               	movlb	0	; () banked
 26116  00714A  0764               	decf	m_mem_cpy_len@len& (0+255),f,b
 26117  00714C  A0D8               	btfss	status,0,c
 26118  00714E  0765               	decf	(m_mem_cpy_len@len+1)& (0+255),f,b
 26119  007150                     l11654:
 26120  007150  0100               	movlb	0	; () banked
 26121  007152  5164               	movf	m_mem_cpy_len@len& (0+255),w,b
 26122  007154  0100               	movlb	0	; () banked
 26123  007156  1165               	iorwf	(m_mem_cpy_len@len+1)& (0+255),w,b
 26124  007158  B4D8               	btfsc	status,2,c
 26125  00715A  0012               	return	
 26126  00715C  D7DA               	goto	l11646
 26127  00715E                     __end_of_m_mem_cpy_len:
 26128                           	opt stack 0
 26129                           tosu	equ	0xFFF
 26130                           tosh	equ	0xFFE
 26131                           tosl	equ	0xFFD
 26132                           pclath	equ	0xFFA
 26133                           tblptru	equ	0xFF8
 26134                           tblptrh	equ	0xFF7
 26135                           tblptrl	equ	0xFF6
 26136                           tablat	equ	0xFF5
 26137                           prodh	equ	0xFF4
 26138                           prodl	equ	0xFF3
 26139                           intcon	equ	0xFF2
 26140                           indf0	equ	0xFEF
 26141                           postinc0	equ	0xFEE
 26142                           fsr0h	equ	0xFEA
 26143                           fsr0l	equ	0xFE9
 26144                           wreg	equ	0xFE8
 26145                           postinc1	equ	0xFE6
 26146                           postdec1	equ	0xFE5
 26147                           plusw1	equ	0xFE3
 26148                           fsr1h	equ	0xFE2
 26149                           fsr1l	equ	0xFE1
 26150                           indf2	equ	0xFDF
 26151                           postinc2	equ	0xFDE
 26152                           postdec2	equ	0xFDD
 26153                           plusw2	equ	0xFDB
 26154                           fsr2h	equ	0xFDA
 26155                           fsr2l	equ	0xFD9
 26156                           status	equ	0xFD8
 26157                           
 26158 ;; *************** function _crc_append *****************
 26159 ;; Defined at:
 26160 ;;		line 86 in file "src/depend/crc16.c"
 26161 ;; Parameters:    Size  Location     Type
 26162 ;;  message         2   12[BANK0 ] PTR unsigned char 
 26163 ;;		 -> globleBuffer0(256), prCalibTabDef(162), diff_prCalibTabDef(162), 
 26164 ;;  n               2   14[BANK0 ] unsigned int 
 26165 ;; Auto vars:     Size  Location     Type
 26166 ;;  crc             2   18[BANK0 ] unsigned int 
 26167 ;; Return value:  Size  Location     Type
 26168 ;;                  1    wreg      void 
 26169 ;; Registers used:
 26170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26171 ;; Tracked objects:
 26172 ;;		On entry : 0/0
 26173 ;;		On exit  : 0/0
 26174 ;;		Unchanged: 0/0
 26175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26176 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26179 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26180 ;;Total ram usage:        8 bytes
 26181 ;; Hardware stack levels used:    1
 26182 ;; Hardware stack levels required when called:    5
 26183 ;; This function calls:
 26184 ;;		_crc_sum
 26185 ;; This function is called by:
 26186 ;;		_data_sys_init
 26187 ;;		_calib_data_init_diff_pr
 26188 ;;		_calib_data_init_pr
 26189 ;;		_data_sys_save
 26190 ;; This function uses a non-reentrant model
 26191 ;;
 26192                           
 26193                           	psect	text116
 26194  006C5C                     __ptext116:
 26195                           	opt stack 0
 26196  006C5C                     _crc_append:
 26197                           	opt stack 23
 26198                           
 26199                           ;crc16.c: 88: uint16_t crc;
 26200                           ;crc16.c: 89: crc = crc_sum(message, n);
 26201                           
 26202                           ; BSR set to: 0
 26203                           ;incstack = 0
 26204  006C5C  C06C  F060         	movff	crc_append@message,crc_sum@puchMsg
 26205  006C60  C06D  F061         	movff	crc_append@message+1,crc_sum@puchMsg+1
 26206  006C64  C06E  F062         	movff	crc_append@n,crc_sum@usDataLen
 26207  006C68  C06F  F063         	movff	crc_append@n+1,crc_sum@usDataLen+1
 26208  006C6C  EC0B  F030         	call	_crc_sum	;wreg free
 26209  006C70  C060  F072         	movff	?_crc_sum,crc_append@crc
 26210  006C74  C061  F073         	movff	?_crc_sum+1,crc_append@crc+1
 26211                           
 26212                           ;crc16.c: 90: message[n] = (uint8_t)(crc & 0xff);
 26213  006C78  0100               	movlb	0	; () banked
 26214  006C7A  516E               	movf	crc_append@n& (0+255),w,b
 26215  006C7C  0100               	movlb	0	; () banked
 26216  006C7E  256C               	addwf	crc_append@message& (0+255),w,b
 26217  006C80  6ED9               	movwf	fsr2l,c
 26218  006C82  0100               	movlb	0	; () banked
 26219  006C84  516F               	movf	(crc_append@n+1)& (0+255),w,b
 26220  006C86  0100               	movlb	0	; () banked
 26221  006C88  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 26222  006C8A  6EDA               	movwf	fsr2h,c
 26223  006C8C  C072  FFDF         	movff	crc_append@crc,indf2
 26224                           
 26225                           ; BSR set to: 0
 26226                           ;crc16.c: 91: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
 26227  006C90  0E01               	movlw	1
 26228  006C92  0100               	movlb	0	; () banked
 26229  006C94  256E               	addwf	crc_append@n& (0+255),w,b
 26230  006C96  0100               	movlb	0	; () banked
 26231  006C98  6F70               	movwf	??_crc_append& (0+255),b
 26232  006C9A  0E00               	movlw	0
 26233  006C9C  0100               	movlb	0	; () banked
 26234  006C9E  216F               	addwfc	(crc_append@n+1)& (0+255),w,b
 26235  006CA0  0100               	movlb	0	; () banked
 26236  006CA2  6F71               	movwf	(??_crc_append+1)& (0+255),b
 26237  006CA4  0100               	movlb	0	; () banked
 26238  006CA6  5170               	movf	??_crc_append& (0+255),w,b
 26239  006CA8  0100               	movlb	0	; () banked
 26240  006CAA  256C               	addwf	crc_append@message& (0+255),w,b
 26241  006CAC  6ED9               	movwf	fsr2l,c
 26242  006CAE  0100               	movlb	0	; () banked
 26243  006CB0  5171               	movf	(??_crc_append+1)& (0+255),w,b
 26244  006CB2  0100               	movlb	0	; () banked
 26245  006CB4  216D               	addwfc	(crc_append@message+1)& (0+255),w,b
 26246  006CB6  6EDA               	movwf	fsr2h,c
 26247  006CB8  0100               	movlb	0	; () banked
 26248  006CBA  5173               	movf	(crc_append@crc+1)& (0+255),w,b
 26249  006CBC  6EDF               	movwf	indf2,c
 26250                           
 26251                           ; BSR set to: 0
 26252  006CBE  0012               	return		;funcret
 26253  006CC0                     __end_of_crc_append:
 26254                           	opt stack 0
 26255                           tosu	equ	0xFFF
 26256                           tosh	equ	0xFFE
 26257                           tosl	equ	0xFFD
 26258                           pclath	equ	0xFFA
 26259                           tblptru	equ	0xFF8
 26260                           tblptrh	equ	0xFF7
 26261                           tblptrl	equ	0xFF6
 26262                           tablat	equ	0xFF5
 26263                           prodh	equ	0xFF4
 26264                           prodl	equ	0xFF3
 26265                           intcon	equ	0xFF2
 26266                           indf0	equ	0xFEF
 26267                           postinc0	equ	0xFEE
 26268                           fsr0h	equ	0xFEA
 26269                           fsr0l	equ	0xFE9
 26270                           wreg	equ	0xFE8
 26271                           postinc1	equ	0xFE6
 26272                           postdec1	equ	0xFE5
 26273                           plusw1	equ	0xFE3
 26274                           fsr1h	equ	0xFE2
 26275                           fsr1l	equ	0xFE1
 26276                           indf2	equ	0xFDF
 26277                           postinc2	equ	0xFDE
 26278                           postdec2	equ	0xFDD
 26279                           plusw2	equ	0xFDB
 26280                           fsr2h	equ	0xFDA
 26281                           fsr2l	equ	0xFD9
 26282                           status	equ	0xFD8
 26283                           
 26284 ;; *************** function _crc_sum *****************
 26285 ;; Defined at:
 26286 ;;		line 61 in file "src/depend/crc16.c"
 26287 ;; Parameters:    Size  Location     Type
 26288 ;;  puchMsg         2    0[BANK0 ] PTR unsigned char 
 26289 ;;		 -> globleBuffer0(256), prCalibTabDef(162), diff_prCalibTabDef(162), 
 26290 ;;  usDataLen       2    2[BANK0 ] unsigned int 
 26291 ;; Auto vars:     Size  Location     Type
 26292 ;;  uIndex          2    8[BANK0 ] unsigned int 
 26293 ;;  len             2    6[BANK0 ] unsigned int 
 26294 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
 26295 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
 26296 ;; Return value:  Size  Location     Type
 26297 ;;                  2    0[BANK0 ] unsigned int 
 26298 ;; Registers used:
 26299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26300 ;; Tracked objects:
 26301 ;;		On entry : 0/0
 26302 ;;		On exit  : 0/0
 26303 ;;		Unchanged: 0/0
 26304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26305 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26306 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26308 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26309 ;;Total ram usage:       12 bytes
 26310 ;; Hardware stack levels used:    1
 26311 ;; Hardware stack levels required when called:    4
 26312 ;; This function calls:
 26313 ;;		Nothing
 26314 ;; This function is called by:
 26315 ;;		_crc_verify
 26316 ;;		_crc_append
 26317 ;; This function uses a non-reentrant model
 26318 ;;
 26319                           
 26320                           	psect	text117
 26321  006016                     __ptext117:
 26322                           	opt stack 0
 26323  006016                     _crc_sum:
 26324                           	opt stack 23
 26325                           
 26326                           ;crc16.c: 63: uint16_t len;
 26327                           ;crc16.c: 64: len=usDataLen;
 26328                           
 26329                           ; BSR set to: 0
 26330                           ;incstack = 0
 26331  006016  C062  F066         	movff	crc_sum@usDataLen,crc_sum@len
 26332  00601A  C063  F067         	movff	crc_sum@usDataLen+1,crc_sum@len+1
 26333                           
 26334                           ;crc16.c: 65: uint8_t uchCRCHi = 0xFF ;
 26335  00601E  0100               	movlb	0	; () banked
 26336  006020  696A               	setf	crc_sum@uchCRCHi& (0+255),b
 26337                           
 26338                           ;crc16.c: 66: uint8_t uchCRCLo = 0xFF ;
 26339  006022  0100               	movlb	0	; () banked
 26340  006024  696B               	setf	crc_sum@uchCRCLo& (0+255),b
 26341                           
 26342                           ;crc16.c: 67: uint16_t uIndex ;
 26343                           ;crc16.c: 68: while (len--)
 26344  006026  D028               	goto	l11986
 26345  006028                     l11978:
 26346                           
 26347                           ; BSR set to: 0
 26348                           ;crc16.c: 69: {
 26349                           ;crc16.c: 70: uIndex = (uchCRCLo ^ *puchMsg++) ;
 26350  006028  C060  FFD9         	movff	crc_sum@puchMsg,fsr2l
 26351  00602C  C061  FFDA         	movff	crc_sum@puchMsg+1,fsr2h
 26352  006030  50DF               	movf	indf2,w,c
 26353  006032  0100               	movlb	0	; () banked
 26354  006034  196B               	xorwf	crc_sum@uchCRCLo& (0+255),w,b
 26355  006036  0100               	movlb	0	; () banked
 26356  006038  6F64               	movwf	??_crc_sum& (0+255),b
 26357  00603A  0100               	movlb	0	; () banked
 26358  00603C  5164               	movf	??_crc_sum& (0+255),w,b
 26359  00603E  0100               	movlb	0	; () banked
 26360  006040  6F68               	movwf	crc_sum@uIndex& (0+255),b
 26361  006042  6B69               	clrf	(crc_sum@uIndex+1)& (0+255),b
 26362                           
 26363                           ; BSR set to: 0
 26364  006044  0100               	movlb	0	; () banked
 26365  006046  4B60               	infsnz	crc_sum@puchMsg& (0+255),f,b
 26366  006048  2B61               	incf	(crc_sum@puchMsg+1)& (0+255),f,b
 26367                           
 26368                           ; BSR set to: 0
 26369                           ;crc16.c: 71: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
 26370  00604A  0E83               	movlw	low _auchCRCHi
 26371  00604C  0100               	movlb	0	; () banked
 26372  00604E  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 26373  006050  6EF6               	movwf	tblptrl,c
 26374  006052  0EFA               	movlw	high _auchCRCHi
 26375  006054  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 26376  006056  6EF7               	movwf	tblptrh,c
 26377  006058                     	if	0	;There are less than 3 active tblptr bytes
 26378  006058                     	endif
 26379  006058  0008               	tblrd		*
 26380  00605A  50F5               	movf	tablat,w,c
 26381  00605C  0100               	movlb	0	; () banked
 26382  00605E  196A               	xorwf	crc_sum@uchCRCHi& (0+255),w,b
 26383  006060  0100               	movlb	0	; () banked
 26384  006062  6F6B               	movwf	crc_sum@uchCRCLo& (0+255),b
 26385                           
 26386                           ; BSR set to: 0
 26387                           ;crc16.c: 72: uchCRCHi = auchCRCLo[uIndex] ;
 26388  006064  0E83               	movlw	low _auchCRCLo
 26389  006066  0100               	movlb	0	; () banked
 26390  006068  2568               	addwf	crc_sum@uIndex& (0+255),w,b
 26391  00606A  6EF6               	movwf	tblptrl,c
 26392  00606C  0EF9               	movlw	high _auchCRCLo
 26393  00606E  2169               	addwfc	(crc_sum@uIndex+1)& (0+255),w,b
 26394  006070  6EF7               	movwf	tblptrh,c
 26395  006072                     	if	0	;There are less than 3 active tblptr bytes
 26396  006072                     	endif
 26397  006072  0008               	tblrd		*
 26398  006074  CFF5 F06A          	movff	tablat,crc_sum@uchCRCHi
 26399  006078                     l11986:
 26400                           
 26401                           ; BSR set to: 0
 26402  006078  0100               	movlb	0	; () banked
 26403  00607A  0766               	decf	crc_sum@len& (0+255),f,b
 26404  00607C  A0D8               	btfss	status,0,c
 26405  00607E  0767               	decf	(crc_sum@len+1)& (0+255),f,b
 26406  006080  0100               	movlb	0	; () banked
 26407  006082  2966               	incf	crc_sum@len& (0+255),w,b
 26408  006084  E1D1               	bnz	l11978
 26409  006086  0100               	movlb	0	; () banked
 26410  006088  2967               	incf	(crc_sum@len+1)& (0+255),w,b
 26411  00608A  A4D8               	btfss	status,2,c
 26412  00608C  D7CD               	goto	l11978
 26413                           
 26414                           ; BSR set to: 0
 26415                           ;crc16.c: 73: }
 26416                           ;crc16.c: 74: return (uchCRCHi << 8 | uchCRCLo) ;
 26417                           
 26418                           ; BSR set to: 0
 26419  00608E  0100               	movlb	0	; () banked
 26420  006090  516B               	movf	crc_sum@uchCRCLo& (0+255),w,b
 26421  006092  C06A  F064         	movff	crc_sum@uchCRCHi,??_crc_sum
 26422  006096  0100               	movlb	0	; () banked
 26423  006098  6B65               	clrf	(??_crc_sum+1)& (0+255),b
 26424  00609A  C064  F065         	movff	??_crc_sum,??_crc_sum+1
 26425  00609E  0100               	movlb	0	; () banked
 26426  0060A0  6B64               	clrf	??_crc_sum& (0+255),b
 26427  0060A2  0100               	movlb	0	; () banked
 26428  0060A4  1164               	iorwf	??_crc_sum& (0+255),w,b
 26429  0060A6  0100               	movlb	0	; () banked
 26430  0060A8  6F60               	movwf	?_crc_sum& (0+255),b
 26431  0060AA  0100               	movlb	0	; () banked
 26432  0060AC  5165               	movf	(??_crc_sum+1)& (0+255),w,b
 26433  0060AE  0100               	movlb	0	; () banked
 26434  0060B0  6F61               	movwf	(?_crc_sum+1)& (0+255),b
 26435  0060B2  0012               	return	
 26436  0060B4                     __end_of_crc_sum:
 26437                           	opt stack 0
 26438                           tosu	equ	0xFFF
 26439                           tosh	equ	0xFFE
 26440                           tosl	equ	0xFFD
 26441                           pclath	equ	0xFFA
 26442                           tblptru	equ	0xFF8
 26443                           tblptrh	equ	0xFF7
 26444                           tblptrl	equ	0xFF6
 26445                           tablat	equ	0xFF5
 26446                           prodh	equ	0xFF4
 26447                           prodl	equ	0xFF3
 26448                           intcon	equ	0xFF2
 26449                           indf0	equ	0xFEF
 26450                           postinc0	equ	0xFEE
 26451                           fsr0h	equ	0xFEA
 26452                           fsr0l	equ	0xFE9
 26453                           wreg	equ	0xFE8
 26454                           postinc1	equ	0xFE6
 26455                           postdec1	equ	0xFE5
 26456                           plusw1	equ	0xFE3
 26457                           fsr1h	equ	0xFE2
 26458                           fsr1l	equ	0xFE1
 26459                           indf2	equ	0xFDF
 26460                           postinc2	equ	0xFDE
 26461                           postdec2	equ	0xFDD
 26462                           plusw2	equ	0xFDB
 26463                           fsr2h	equ	0xFDA
 26464                           fsr2l	equ	0xFD9
 26465                           status	equ	0xFD8
 26466                           
 26467 ;; *************** function _calib_data_set_default_diff_pr *****************
 26468 ;; Defined at:
 26469 ;;		line 236 in file "src/api/data.c"
 26470 ;; Parameters:    Size  Location     Type
 26471 ;;		None
 26472 ;; Auto vars:     Size  Location     Type
 26473 ;;  i               1   15[BANK0 ] unsigned char 
 26474 ;;  j               1   14[BANK0 ] unsigned char 
 26475 ;; Return value:  Size  Location     Type
 26476 ;;                  1    wreg      void 
 26477 ;; Registers used:
 26478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26479 ;; Tracked objects:
 26480 ;;		On entry : 0/0
 26481 ;;		On exit  : 0/0
 26482 ;;		Unchanged: 0/0
 26483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26486 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26487 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26488 ;;Total ram usage:        8 bytes
 26489 ;; Hardware stack levels used:    1
 26490 ;; Hardware stack levels required when called:    5
 26491 ;; This function calls:
 26492 ;;		___wmul
 26493 ;; This function is called by:
 26494 ;;		_calib_data_init_diff_pr
 26495 ;; This function uses a non-reentrant model
 26496 ;;
 26497                           
 26498                           	psect	text118
 26499  0038EA                     __ptext118:
 26500                           	opt stack 0
 26501  0038EA                     _calib_data_set_default_diff_pr:
 26502                           	opt stack 23
 26503                           
 26504                           ;data.c: 238: uint8_t i,j;
 26505                           ;data.c: 239: diff_prCalibTabDef.rowCount=3;
 26506                           
 26507                           ; BSR set to: 0
 26508                           ;incstack = 0
 26509  0038EA  0E03               	movlw	3
 26510  0038EC  0102               	movlb	2	; () banked
 26511  0038EE  6F00               	movwf	_diff_prCalibTabDef& (0+255),b
 26512                           
 26513                           ;data.c: 240: for(i=0;i<3;i++){
 26514  0038F0  0E00               	movlw	0
 26515  0038F2  0100               	movlb	0	; () banked
 26516  0038F4  6F6F               	movwf	calib_data_set_default_diff_pr@i& (0+255),b
 26517  0038F6                     l12114:
 26518                           
 26519                           ; BSR set to: 0
 26520  0038F6  0E02               	movlw	2
 26521  0038F8  0100               	movlb	0	; () banked
 26522  0038FA  656F               	cpfsgt	calib_data_set_default_diff_pr@i& (0+255),b
 26523  0038FC  D001               	goto	l12118
 26524  0038FE  0012               	return	
 26525  003900                     l12118:
 26526                           
 26527                           ; BSR set to: 0
 26528                           ;data.c: 241: diff_prCalibTabDef.prCalibRow[i].pCount=6;
 26529  003900  0100               	movlb	0	; () banked
 26530  003902  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 26531  003904  0D34               	mullw	52
 26532  003906  0E04               	movlw	low (_diff_prCalibTabDef+4)
 26533  003908  24F3               	addwf	prodl,w,c
 26534  00390A  6ED9               	movwf	fsr2l,c
 26535  00390C  0E02               	movlw	high (_diff_prCalibTabDef+4)
 26536  00390E  20F4               	addwfc	prodh,w,c
 26537  003910  6EDA               	movwf	fsr2h,c
 26538  003912  0E06               	movlw	6
 26539  003914  6EDF               	movwf	indf2,c
 26540                           
 26541                           ; BSR set to: 0
 26542                           ;data.c: 242: for(j=0;j<6;j++){
 26543  003916  0E00               	movlw	0
 26544  003918  0100               	movlb	0	; () banked
 26545  00391A  6F6E               	movwf	calib_data_set_default_diff_pr@j& (0+255),b
 26546  00391C                     l12122:
 26547                           
 26548                           ; BSR set to: 0
 26549  00391C  0E05               	movlw	5
 26550  00391E  0100               	movlb	0	; () banked
 26551  003920  656E               	cpfsgt	calib_data_set_default_diff_pr@j& (0+255),b
 26552  003922  D001               	goto	l12126
 26553  003924  D0D4               	goto	l12134
 26554  003926                     l12126:
 26555                           
 26556                           ; BSR set to: 0
 26557                           ;data.c: 243: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pAdcValue=j*6000+i*500;
 26558  003926  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 26559  00392A  0100               	movlb	0	; () banked
 26560  00392C  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 26561  00392E  0E17               	movlw	23
 26562  003930  0100               	movlb	0	; () banked
 26563  003932  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26564  003934  0E70               	movlw	112
 26565  003936  6F64               	movwf	___wmul@multiplicand& (0+255),b
 26566  003938  EC81  F03A         	call	___wmul	;wreg free
 26567  00393C  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 26568  003940  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 26569  003944  C06F  F062         	movff	calib_data_set_default_diff_pr@i,___wmul@multiplier
 26570  003948  0100               	movlb	0	; () banked
 26571  00394A  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 26572  00394C  0E01               	movlw	1
 26573  00394E  0100               	movlb	0	; () banked
 26574  003950  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26575  003952  0EF4               	movlw	244
 26576  003954  6F64               	movwf	___wmul@multiplicand& (0+255),b
 26577  003956  EC81  F03A         	call	___wmul	;wreg free
 26578  00395A  0100               	movlb	0	; () banked
 26579  00395C  5162               	movf	?___wmul& (0+255),w,b
 26580  00395E  0100               	movlb	0	; () banked
 26581  003960  2768               	addwf	??_calib_data_set_default_diff_pr& (0+255),f,b
 26582  003962  0100               	movlb	0	; () banked
 26583  003964  5163               	movf	(?___wmul+1)& (0+255),w,b
 26584  003966  0100               	movlb	0	; () banked
 26585  003968  2369               	addwfc	(??_calib_data_set_default_diff_pr+1)& (0+255),f,b
 26586  00396A  0100               	movlb	0	; () banked
 26587  00396C  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 26588  00396E  0D08               	mullw	8
 26589  003970  0E04               	movlw	4
 26590  003972  26F3               	addwf	prodl,f,c
 26591  003974  0E00               	movlw	0
 26592  003976  22F4               	addwfc	prodh,f,c
 26593  003978  0E00               	movlw	low _diff_prCalibTabDef
 26594  00397A  0100               	movlb	0	; () banked
 26595  00397C  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 26596  00397E  0E02               	movlw	high _diff_prCalibTabDef
 26597  003980  0100               	movlb	0	; () banked
 26598  003982  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 26599  003984  0E04               	movlw	4
 26600  003986  0100               	movlb	0	; () banked
 26601  003988  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 26602  00398A  0E00               	movlw	0
 26603  00398C  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 26604  00398E  50F3               	movf	prodl,w,c
 26605  003990  0100               	movlb	0	; () banked
 26606  003992  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 26607  003994  50F4               	movf	prodh,w,c
 26608  003996  0100               	movlb	0	; () banked
 26609  003998  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 26610  00399A  0100               	movlb	0	; () banked
 26611  00399C  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 26612  00399E  0D34               	mullw	52
 26613  0039A0  50F3               	movf	prodl,w,c
 26614  0039A2  0100               	movlb	0	; () banked
 26615  0039A4  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 26616  0039A6  50F4               	movf	prodh,w,c
 26617  0039A8  0100               	movlb	0	; () banked
 26618  0039AA  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 26619  0039AC  0E04               	movlw	4
 26620  0039AE  0100               	movlb	0	; () banked
 26621  0039B0  256A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),w,b
 26622  0039B2  6ED9               	movwf	fsr2l,c
 26623  0039B4  0E00               	movlw	0
 26624  0039B6  0100               	movlb	0	; () banked
 26625  0039B8  216B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),w,b
 26626  0039BA  6EDA               	movwf	fsr2h,c
 26627  0039BC  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 26628  0039C0  C069  FFDD         	movff	??_calib_data_set_default_diff_pr+1,postdec2
 26629                           
 26630                           ;data.c: 244: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].pValue=j*6000;
 26631  0039C4  C06E  F062         	movff	calib_data_set_default_diff_pr@j,___wmul@multiplier
 26632  0039C8  0100               	movlb	0	; () banked
 26633  0039CA  6B63               	clrf	(___wmul@multiplier+1)& (0+255),b
 26634  0039CC  0E17               	movlw	23
 26635  0039CE  0100               	movlb	0	; () banked
 26636  0039D0  6F65               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26637  0039D2  0E70               	movlw	112
 26638  0039D4  6F64               	movwf	___wmul@multiplicand& (0+255),b
 26639  0039D6  EC81  F03A         	call	___wmul	;wreg free
 26640  0039DA  0100               	movlb	0	; () banked
 26641  0039DC  C062  F068         	movff	?___wmul,??_calib_data_set_default_diff_pr
 26642  0039E0  0100               	movlb	0	; () banked
 26643  0039E2  C063  F069         	movff	?___wmul+1,??_calib_data_set_default_diff_pr+1
 26644  0039E6  0E00               	movlw	0
 26645  0039E8  0100               	movlb	0	; () banked
 26646  0039EA  BF69               	btfsc	(??_calib_data_set_default_diff_pr+1)& (0+255),7,b
 26647  0039EC  0EFF               	movlw	255
 26648  0039EE  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 26649  0039F0  6F6B               	movwf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 26650  0039F2  0100               	movlb	0	; () banked
 26651  0039F4  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 26652  0039F6  0D08               	mullw	8
 26653  0039F8  0E04               	movlw	4
 26654  0039FA  26F3               	addwf	prodl,f,c
 26655  0039FC  0E00               	movlw	0
 26656  0039FE  22F4               	addwfc	prodh,f,c
 26657  003A00  0E00               	movlw	low _diff_prCalibTabDef
 26658  003A02  0100               	movlb	0	; () banked
 26659  003A04  6F6C               	movwf	(??_calib_data_set_default_diff_pr+4)& (0+255),b
 26660  003A06  0E02               	movlw	high _diff_prCalibTabDef
 26661  003A08  0100               	movlb	0	; () banked
 26662  003A0A  6F6D               	movwf	(??_calib_data_set_default_diff_pr+5)& (0+255),b
 26663  003A0C  0E04               	movlw	4
 26664  003A0E  0100               	movlb	0	; () banked
 26665  003A10  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 26666  003A12  0E00               	movlw	0
 26667  003A14  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 26668  003A16  50F3               	movf	prodl,w,c
 26669  003A18  0100               	movlb	0	; () banked
 26670  003A1A  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 26671  003A1C  50F4               	movf	prodh,w,c
 26672  003A1E  0100               	movlb	0	; () banked
 26673  003A20  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 26674  003A22  0100               	movlb	0	; () banked
 26675  003A24  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 26676  003A26  0D34               	mullw	52
 26677  003A28  50F3               	movf	prodl,w,c
 26678  003A2A  0100               	movlb	0	; () banked
 26679  003A2C  256C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),w,b
 26680  003A2E  6ED9               	movwf	fsr2l,c
 26681  003A30  50F4               	movf	prodh,w,c
 26682  003A32  0100               	movlb	0	; () banked
 26683  003A34  216D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),w,b
 26684  003A36  6EDA               	movwf	fsr2h,c
 26685  003A38  C068  FFDE         	movff	??_calib_data_set_default_diff_pr,postinc2
 26686  003A3C  C069  FFDE         	movff	??_calib_data_set_default_diff_pr+1,postinc2
 26687  003A40  C06A  FFDE         	movff	??_calib_data_set_default_diff_pr+2,postinc2
 26688  003A44  C06B  FFDE         	movff	??_calib_data_set_default_diff_pr+3,postinc2
 26689                           
 26690                           ; BSR set to: 0
 26691                           ;data.c: 245: diff_prCalibTabDef.prCalibRow[i].prCalibPoint[j].tAdcValue=i+1000;
 26692  003A48  0EE8               	movlw	232
 26693  003A4A  0100               	movlb	0	; () banked
 26694  003A4C  6F68               	movwf	??_calib_data_set_default_diff_pr& (0+255),b
 26695  003A4E  0E03               	movlw	3
 26696  003A50  0100               	movlb	0	; () banked
 26697  003A52  6F69               	movwf	(??_calib_data_set_default_diff_pr+1)& (0+255),b
 26698  003A54  0100               	movlb	0	; () banked
 26699  003A56  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 26700  003A58  0100               	movlb	0	; () banked
 26701  003A5A  6F6A               	movwf	(??_calib_data_set_default_diff_pr+2)& (0+255),b
 26702  003A5C  6B6B               	clrf	(??_calib_data_set_default_diff_pr+3)& (0+255),b
 26703  003A5E  0100               	movlb	0	; () banked
 26704  003A60  5168               	movf	??_calib_data_set_default_diff_pr& (0+255),w,b
 26705  003A62  0100               	movlb	0	; () banked
 26706  003A64  276A               	addwf	(??_calib_data_set_default_diff_pr+2)& (0+255),f,b
 26707  003A66  0100               	movlb	0	; () banked
 26708  003A68  5169               	movf	(??_calib_data_set_default_diff_pr+1)& (0+255),w,b
 26709  003A6A  0100               	movlb	0	; () banked
 26710  003A6C  236B               	addwfc	(??_calib_data_set_default_diff_pr+3)& (0+255),f,b
 26711  003A6E  0100               	movlb	0	; () banked
 26712  003A70  516E               	movf	calib_data_set_default_diff_pr@j& (0+255),w,b
 26713  003A72  0D08               	mullw	8
 26714  003A74  0E04               	movlw	4
 26715  003A76  26F3               	addwf	prodl,f,c
 26716  003A78  0E00               	movlw	0
 26717  003A7A  22F4               	addwfc	prodh,f,c
 26718  003A7C  0E00               	movlw	low _diff_prCalibTabDef
 26719  003A7E  0100               	movlb	0	; () banked
 26720  003A80  6F6C               	movwf	(??_calib_data_set_default_diff_pr+4)& (0+255),b
 26721  003A82  0E02               	movlw	high _diff_prCalibTabDef
 26722  003A84  0100               	movlb	0	; () banked
 26723  003A86  6F6D               	movwf	(??_calib_data_set_default_diff_pr+5)& (0+255),b
 26724  003A88  0E04               	movlw	4
 26725  003A8A  0100               	movlb	0	; () banked
 26726  003A8C  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 26727  003A8E  0E00               	movlw	0
 26728  003A90  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 26729  003A92  50F3               	movf	prodl,w,c
 26730  003A94  0100               	movlb	0	; () banked
 26731  003A96  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 26732  003A98  50F4               	movf	prodh,w,c
 26733  003A9A  0100               	movlb	0	; () banked
 26734  003A9C  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 26735  003A9E  0100               	movlb	0	; () banked
 26736  003AA0  516F               	movf	calib_data_set_default_diff_pr@i& (0+255),w,b
 26737  003AA2  0D34               	mullw	52
 26738  003AA4  50F3               	movf	prodl,w,c
 26739  003AA6  0100               	movlb	0	; () banked
 26740  003AA8  276C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),f,b
 26741  003AAA  50F4               	movf	prodh,w,c
 26742  003AAC  0100               	movlb	0	; () banked
 26743  003AAE  236D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),f,b
 26744  003AB0  0E06               	movlw	6
 26745  003AB2  0100               	movlb	0	; () banked
 26746  003AB4  256C               	addwf	(??_calib_data_set_default_diff_pr+4)& (0+255),w,b
 26747  003AB6  6ED9               	movwf	fsr2l,c
 26748  003AB8  0E00               	movlw	0
 26749  003ABA  0100               	movlb	0	; () banked
 26750  003ABC  216D               	addwfc	(??_calib_data_set_default_diff_pr+5)& (0+255),w,b
 26751  003ABE  6EDA               	movwf	fsr2h,c
 26752  003AC0  C06A  FFDE         	movff	??_calib_data_set_default_diff_pr+2,postinc2
 26753  003AC4  C06B  FFDD         	movff	??_calib_data_set_default_diff_pr+3,postdec2
 26754                           
 26755                           ; BSR set to: 0
 26756  003AC8  0100               	movlb	0	; () banked
 26757  003ACA  2B6E               	incf	calib_data_set_default_diff_pr@j& (0+255),f,b
 26758  003ACC  D727               	goto	l12122
 26759  003ACE                     l12134:
 26760                           
 26761                           ; BSR set to: 0
 26762  003ACE  0100               	movlb	0	; () banked
 26763  003AD0  2B6F               	incf	calib_data_set_default_diff_pr@i& (0+255),f,b
 26764  003AD2  D711               	goto	l12114
 26765  003AD4                     __end_of_calib_data_set_default_diff_pr:
 26766                           	opt stack 0
 26767                           tosu	equ	0xFFF
 26768                           tosh	equ	0xFFE
 26769                           tosl	equ	0xFFD
 26770                           pclath	equ	0xFFA
 26771                           tblptru	equ	0xFF8
 26772                           tblptrh	equ	0xFF7
 26773                           tblptrl	equ	0xFF6
 26774                           tablat	equ	0xFF5
 26775                           prodh	equ	0xFF4
 26776                           prodl	equ	0xFF3
 26777                           intcon	equ	0xFF2
 26778                           indf0	equ	0xFEF
 26779                           postinc0	equ	0xFEE
 26780                           fsr0h	equ	0xFEA
 26781                           fsr0l	equ	0xFE9
 26782                           wreg	equ	0xFE8
 26783                           postinc1	equ	0xFE6
 26784                           postdec1	equ	0xFE5
 26785                           plusw1	equ	0xFE3
 26786                           fsr1h	equ	0xFE2
 26787                           fsr1l	equ	0xFE1
 26788                           indf2	equ	0xFDF
 26789                           postinc2	equ	0xFDE
 26790                           postdec2	equ	0xFDD
 26791                           plusw2	equ	0xFDB
 26792                           fsr2h	equ	0xFDA
 26793                           fsr2l	equ	0xFD9
 26794                           status	equ	0xFD8
 26795                           
 26796 ;; *************** function ___wmul *****************
 26797 ;; Defined at:
 26798 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 26799 ;; Parameters:    Size  Location     Type
 26800 ;;  multiplier      2    2[BANK0 ] unsigned int 
 26801 ;;  multiplicand    2    4[BANK0 ] unsigned int 
 26802 ;; Auto vars:     Size  Location     Type
 26803 ;;  product         2    6[BANK0 ] unsigned int 
 26804 ;; Return value:  Size  Location     Type
 26805 ;;                  2    2[BANK0 ] unsigned int 
 26806 ;; Registers used:
 26807 ;;		wreg, status,2, status,0, prodl, prodh
 26808 ;; Tracked objects:
 26809 ;;		On entry : 0/0
 26810 ;;		On exit  : 0/0
 26811 ;;		Unchanged: 0/0
 26812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26816 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26817 ;;Total ram usage:        6 bytes
 26818 ;; Hardware stack levels used:    1
 26819 ;; Hardware stack levels required when called:    4
 26820 ;; This function calls:
 26821 ;;		Nothing
 26822 ;; This function is called by:
 26823 ;;		_calib_data_set_default_diff_pr
 26824 ;;		_calib_data_set_default_pr
 26825 ;;		_key_adj_value_fixed_point
 26826 ;; This function uses a non-reentrant model
 26827 ;;
 26828                           
 26829                           	psect	text119
 26830  007502                     __ptext119:
 26831                           	opt stack 0
 26832  007502                     ___wmul:
 26833                           	opt stack 22
 26834                           
 26835                           ; BSR set to: 0
 26836                           ;incstack = 0
 26837  007502  0100               	movlb	0	; () banked
 26838  007504  5162               	movf	___wmul@multiplier& (0+255),w,b
 26839  007506  0100               	movlb	0	; () banked
 26840  007508  0364               	mulwf	___wmul@multiplicand& (0+255),b
 26841  00750A  CFF3 F066          	movff	prodl,___wmul@product
 26842  00750E  CFF4 F067          	movff	prodh,___wmul@product+1
 26843  007512  0100               	movlb	0	; () banked
 26844  007514  5162               	movf	___wmul@multiplier& (0+255),w,b
 26845  007516  0100               	movlb	0	; () banked
 26846  007518  0365               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 26847  00751A  50F3               	movf	prodl,w,c
 26848  00751C  0100               	movlb	0	; () banked
 26849  00751E  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 26850  007520  0100               	movlb	0	; () banked
 26851  007522  5163               	movf	(___wmul@multiplier+1)& (0+255),w,b
 26852  007524  0100               	movlb	0	; () banked
 26853  007526  0364               	mulwf	___wmul@multiplicand& (0+255),b
 26854  007528  50F3               	movf	prodl,w,c
 26855  00752A  0100               	movlb	0	; () banked
 26856  00752C  2767               	addwf	(___wmul@product+1)& (0+255),f,b
 26857                           
 26858                           ; BSR set to: 0
 26859  00752E  C066  F062         	movff	___wmul@product,?___wmul
 26860  007532  C067  F063         	movff	___wmul@product+1,?___wmul+1
 26861  007536  0012               	return	
 26862  007538                     __end_of___wmul:
 26863                           	opt stack 0
 26864                           tosu	equ	0xFFF
 26865                           tosh	equ	0xFFE
 26866                           tosl	equ	0xFFD
 26867                           pclath	equ	0xFFA
 26868                           tblptru	equ	0xFF8
 26869                           tblptrh	equ	0xFF7
 26870                           tblptrl	equ	0xFF6
 26871                           tablat	equ	0xFF5
 26872                           prodh	equ	0xFF4
 26873                           prodl	equ	0xFF3
 26874                           intcon	equ	0xFF2
 26875                           indf0	equ	0xFEF
 26876                           postinc0	equ	0xFEE
 26877                           fsr0h	equ	0xFEA
 26878                           fsr0l	equ	0xFE9
 26879                           wreg	equ	0xFE8
 26880                           postinc1	equ	0xFE6
 26881                           postdec1	equ	0xFE5
 26882                           plusw1	equ	0xFE3
 26883                           fsr1h	equ	0xFE2
 26884                           fsr1l	equ	0xFE1
 26885                           indf2	equ	0xFDF
 26886                           postinc2	equ	0xFDE
 26887                           postdec2	equ	0xFDD
 26888                           plusw2	equ	0xFDB
 26889                           fsr2h	equ	0xFDA
 26890                           fsr2l	equ	0xFD9
 26891                           status	equ	0xFD8
 26892                           
 26893 ;; *************** function _at24c02_write_n_byte *****************
 26894 ;; Defined at:
 26895 ;;		line 69 in file "src/driver/ex_eeprom.c"
 26896 ;; Parameters:    Size  Location     Type
 26897 ;;  pAt24c02        2    2[BANK0 ] PTR struct .
 26898 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 26899 ;;  addr            1    4[BANK0 ] unsigned char 
 26900 ;;  buf             2    5[BANK0 ] PTR unsigned char 
 26901 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 26902 ;;  len             2    7[BANK0 ] unsigned int 
 26903 ;; Auto vars:     Size  Location     Type
 26904 ;;  i               2    9[BANK0 ] unsigned int 
 26905 ;; Return value:  Size  Location     Type
 26906 ;;                  1    wreg      void 
 26907 ;; Registers used:
 26908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 26909 ;; Tracked objects:
 26910 ;;		On entry : 0/0
 26911 ;;		On exit  : 0/0
 26912 ;;		Unchanged: 0/0
 26913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26914 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26917 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26918 ;;Total ram usage:        9 bytes
 26919 ;; Hardware stack levels used:    1
 26920 ;; Hardware stack levels required when called:    7
 26921 ;; This function calls:
 26922 ;;		_iic_send_byte
 26923 ;;		_iic_start
 26924 ;;		_iic_stop
 26925 ;; This function is called by:
 26926 ;;		_calib_data_init_diff_pr
 26927 ;;		_calib_data_init_pr
 26928 ;; This function uses a non-reentrant model
 26929 ;;
 26930                           
 26931                           	psect	text120
 26932  005170                     __ptext120:
 26933                           	opt stack 0
 26934  005170                     _at24c02_write_n_byte:
 26935                           	opt stack 21
 26936                           
 26937                           ;ex_eeprom.c: 71: uint16_t i;
 26938                           ;ex_eeprom.c: 72: for(i=0;i<len;i++){
 26939                           
 26940                           ; BSR set to: 0
 26941                           ;incstack = 0
 26942  005170  0E00               	movlw	0
 26943  005172  0100               	movlb	0	; () banked
 26944  005174  6F6A               	movwf	(at24c02_write_n_byte@i+1)& (0+255),b
 26945  005176  0E00               	movlw	0
 26946  005178  6F69               	movwf	at24c02_write_n_byte@i& (0+255),b
 26947  00517A  D073               	goto	l12200
 26948  00517C                     l12190:
 26949                           
 26950                           ; BSR set to: 0
 26951                           ;ex_eeprom.c: 73: pAt24c02->iic_start();
 26952  00517C  0100               	movlb	0	; () banked
 26953  00517E  EE20 F001          	lfsr	2,1
 26954  005182  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 26955  005184  26D9               	addwf	fsr2l,f,c
 26956  005186  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 26957  005188  22DA               	addwfc	fsr2h,f,c
 26958  00518A  D801               	call	u11168
 26959  00518C  D00A               	goto	u11169
 26960  00518E                     u11168:
 26961  00518E  0005               	push	
 26962  005190  6EFA               	movwf	pclath,c
 26963  005192  50DE               	movf	postinc2,w,c
 26964  005194  6EFD               	movwf	tosl,c
 26965  005196  50DE               	movf	postinc2,w,c
 26966  005198  6EFE               	movwf	tosh,c
 26967  00519A  50F8               	movf	tblptru,w,c
 26968  00519C  6EFF               	movwf	tosu,c
 26969  00519E  50FA               	movf	pclath,w,c
 26970  0051A0  0012               	return		;indir
 26971  0051A2                     u11169:
 26972                           
 26973                           ;ex_eeprom.c: 74: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 26974  0051A2  0100               	movlb	0	; () banked
 26975  0051A4  EE20 F005          	lfsr	2,5
 26976  0051A8  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 26977  0051AA  26D9               	addwf	fsr2l,f,c
 26978  0051AC  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 26979  0051AE  22DA               	addwfc	fsr2h,f,c
 26980  0051B0  D801               	call	u11178
 26981  0051B2  D00F               	goto	u11179
 26982  0051B4                     u11178:
 26983  0051B4  0005               	push	
 26984  0051B6  6EFA               	movwf	pclath,c
 26985  0051B8  50DE               	movf	postinc2,w,c
 26986  0051BA  6EFD               	movwf	tosl,c
 26987  0051BC  50DE               	movf	postinc2,w,c
 26988  0051BE  6EFE               	movwf	tosh,c
 26989  0051C0  50F8               	movf	tblptru,w,c
 26990  0051C2  6EFF               	movwf	tosu,c
 26991  0051C4  50FA               	movf	pclath,w,c
 26992  0051C6  C062  FFD9         	movff	at24c02_write_n_byte@pAt24c02,fsr2l
 26993  0051CA  C063  FFDA         	movff	at24c02_write_n_byte@pAt24c02+1,fsr2h
 26994  0051CE  50DF               	movf	indf2,w,c
 26995  0051D0  0012               	return		;indir
 26996  0051D2                     u11179:
 26997                           
 26998                           ;ex_eeprom.c: 75: pAt24c02->iic_send_byte(addr++);
 26999  0051D2  0100               	movlb	0	; () banked
 27000  0051D4  EE20 F005          	lfsr	2,5
 27001  0051D8  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 27002  0051DA  26D9               	addwf	fsr2l,f,c
 27003  0051DC  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 27004  0051DE  22DA               	addwfc	fsr2h,f,c
 27005  0051E0  D801               	call	u11188
 27006  0051E2  D00C               	goto	l12192
 27007  0051E4                     u11188:
 27008  0051E4  0005               	push	
 27009  0051E6  6EFA               	movwf	pclath,c
 27010  0051E8  50DE               	movf	postinc2,w,c
 27011  0051EA  6EFD               	movwf	tosl,c
 27012  0051EC  50DE               	movf	postinc2,w,c
 27013  0051EE  6EFE               	movwf	tosh,c
 27014  0051F0  50F8               	movf	tblptru,w,c
 27015  0051F2  6EFF               	movwf	tosu,c
 27016  0051F4  50FA               	movf	pclath,w,c
 27017  0051F6  0100               	movlb	0	; () banked
 27018  0051F8  5164               	movf	at24c02_write_n_byte@addr& (0+255),w,b
 27019  0051FA  0012               	return		;indir
 27020  0051FC                     l12192:
 27021  0051FC  0100               	movlb	0	; () banked
 27022  0051FE  2B64               	incf	at24c02_write_n_byte@addr& (0+255),f,b
 27023                           
 27024                           ; BSR set to: 0
 27025                           ;ex_eeprom.c: 77: pAt24c02->iic_send_byte(*buf++);
 27026  005200  0100               	movlb	0	; () banked
 27027  005202  EE20 F005          	lfsr	2,5
 27028  005206  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 27029  005208  26D9               	addwf	fsr2l,f,c
 27030  00520A  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 27031  00520C  22DA               	addwfc	fsr2h,f,c
 27032  00520E  D801               	call	u11198
 27033  005210  D00F               	goto	u11199
 27034  005212                     u11198:
 27035  005212  0005               	push	
 27036  005214  6EFA               	movwf	pclath,c
 27037  005216  50DE               	movf	postinc2,w,c
 27038  005218  6EFD               	movwf	tosl,c
 27039  00521A  50DE               	movf	postinc2,w,c
 27040  00521C  6EFE               	movwf	tosh,c
 27041  00521E  50F8               	movf	tblptru,w,c
 27042  005220  6EFF               	movwf	tosu,c
 27043  005222  50FA               	movf	pclath,w,c
 27044  005224  C065  FFD9         	movff	at24c02_write_n_byte@buf,fsr2l
 27045  005228  C066  FFDA         	movff	at24c02_write_n_byte@buf+1,fsr2h
 27046  00522C  50DF               	movf	indf2,w,c
 27047  00522E  0012               	return		;indir
 27048  005230                     u11199:
 27049  005230  0100               	movlb	0	; () banked
 27050  005232  4B65               	infsnz	at24c02_write_n_byte@buf& (0+255),f,b
 27051  005234  2B66               	incf	(at24c02_write_n_byte@buf+1)& (0+255),f,b
 27052                           
 27053                           ; BSR set to: 0
 27054                           ;ex_eeprom.c: 78: pAt24c02->iic_stop();
 27055  005236  0100               	movlb	0	; () banked
 27056  005238  EE20 F003          	lfsr	2,3
 27057  00523C  5162               	movf	at24c02_write_n_byte@pAt24c02& (0+255),w,b
 27058  00523E  26D9               	addwf	fsr2l,f,c
 27059  005240  5163               	movf	(at24c02_write_n_byte@pAt24c02+1)& (0+255),w,b
 27060  005242  22DA               	addwfc	fsr2h,f,c
 27061  005244  D801               	call	u11208
 27062  005246  D00A               	goto	l12198
 27063  005248                     u11208:
 27064  005248  0005               	push	
 27065  00524A  6EFA               	movwf	pclath,c
 27066  00524C  50DE               	movf	postinc2,w,c
 27067  00524E  6EFD               	movwf	tosl,c
 27068  005250  50DE               	movf	postinc2,w,c
 27069  005252  6EFE               	movwf	tosh,c
 27070  005254  50F8               	movf	tblptru,w,c
 27071  005256  6EFF               	movwf	tosu,c
 27072  005258  50FA               	movf	pclath,w,c
 27073  00525A  0012               	return		;indir
 27074  00525C                     l12198:
 27075  00525C  0100               	movlb	0	; () banked
 27076  00525E  4B69               	infsnz	at24c02_write_n_byte@i& (0+255),f,b
 27077  005260  2B6A               	incf	(at24c02_write_n_byte@i+1)& (0+255),f,b
 27078  005262                     l12200:
 27079                           
 27080                           ; BSR set to: 0
 27081  005262  0100               	movlb	0	; () banked
 27082  005264  5167               	movf	at24c02_write_n_byte@len& (0+255),w,b
 27083  005266  0100               	movlb	0	; () banked
 27084  005268  5D69               	subwf	at24c02_write_n_byte@i& (0+255),w,b
 27085  00526A  0100               	movlb	0	; () banked
 27086  00526C  5168               	movf	(at24c02_write_n_byte@len+1)& (0+255),w,b
 27087  00526E  0100               	movlb	0	; () banked
 27088  005270  596A               	subwfb	(at24c02_write_n_byte@i+1)& (0+255),w,b
 27089  005272  B0D8               	btfsc	status,0,c
 27090  005274  0012               	return	
 27091  005276  D782               	goto	l12190
 27092  005278                     __end_of_at24c02_write_n_byte:
 27093                           	opt stack 0
 27094                           tosu	equ	0xFFF
 27095                           tosh	equ	0xFFE
 27096                           tosl	equ	0xFFD
 27097                           pclath	equ	0xFFA
 27098                           tblptru	equ	0xFF8
 27099                           tblptrh	equ	0xFF7
 27100                           tblptrl	equ	0xFF6
 27101                           tablat	equ	0xFF5
 27102                           prodh	equ	0xFF4
 27103                           prodl	equ	0xFF3
 27104                           intcon	equ	0xFF2
 27105                           indf0	equ	0xFEF
 27106                           postinc0	equ	0xFEE
 27107                           fsr0h	equ	0xFEA
 27108                           fsr0l	equ	0xFE9
 27109                           wreg	equ	0xFE8
 27110                           postinc1	equ	0xFE6
 27111                           postdec1	equ	0xFE5
 27112                           plusw1	equ	0xFE3
 27113                           fsr1h	equ	0xFE2
 27114                           fsr1l	equ	0xFE1
 27115                           indf2	equ	0xFDF
 27116                           postinc2	equ	0xFDE
 27117                           postdec2	equ	0xFDD
 27118                           plusw2	equ	0xFDB
 27119                           fsr2h	equ	0xFDA
 27120                           fsr2l	equ	0xFD9
 27121                           status	equ	0xFD8
 27122                           
 27123 ;; *************** function _at24c02_read_n_byte *****************
 27124 ;; Defined at:
 27125 ;;		line 44 in file "src/driver/ex_eeprom.c"
 27126 ;; Parameters:    Size  Location     Type
 27127 ;;  pAt24c02        2    4[BANK0 ] PTR struct .
 27128 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 27129 ;;  addr            1    6[BANK0 ] unsigned char 
 27130 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 27131 ;;		 -> prCalibTabDef(162), diff_prCalibTabDef(162), 
 27132 ;;  len             2    9[BANK0 ] unsigned int 
 27133 ;; Auto vars:     Size  Location     Type
 27134 ;;  i               2   15[BANK0 ] unsigned int 
 27135 ;; Return value:  Size  Location     Type
 27136 ;;                  1    wreg      void 
 27137 ;; Registers used:
 27138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 27139 ;; Tracked objects:
 27140 ;;		On entry : 0/0
 27141 ;;		On exit  : 0/0
 27142 ;;		Unchanged: 0/0
 27143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27144 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27146 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27147 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27148 ;;Total ram usage:       13 bytes
 27149 ;; Hardware stack levels used:    1
 27150 ;; Hardware stack levels required when called:    7
 27151 ;; This function calls:
 27152 ;;		_iic_received_byte_if_ack
 27153 ;;		_iic_send_byte
 27154 ;;		_iic_start
 27155 ;;		_iic_stop
 27156 ;; This function is called by:
 27157 ;;		_calib_data_init_diff_pr
 27158 ;;		_calib_data_init_pr
 27159 ;; This function uses a non-reentrant model
 27160 ;;
 27161                           
 27162                           	psect	text121
 27163  004022                     __ptext121:
 27164                           	opt stack 0
 27165  004022                     _at24c02_read_n_byte:
 27166                           	opt stack 21
 27167                           
 27168                           ;ex_eeprom.c: 47: uint16_t i;
 27169                           ;ex_eeprom.c: 48: pAt24c02->iic_start();
 27170                           
 27171                           ; BSR set to: 0
 27172                           ;incstack = 0
 27173  004022  0100               	movlb	0	; () banked
 27174  004024  EE20 F001          	lfsr	2,1
 27175  004028  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27176  00402A  26D9               	addwf	fsr2l,f,c
 27177  00402C  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27178  00402E  22DA               	addwfc	fsr2h,f,c
 27179  004030  D801               	call	u11078
 27180  004032  D00A               	goto	u11079
 27181  004034                     u11078:
 27182  004034  0005               	push	
 27183  004036  6EFA               	movwf	pclath,c
 27184  004038  50DE               	movf	postinc2,w,c
 27185  00403A  6EFD               	movwf	tosl,c
 27186  00403C  50DE               	movf	postinc2,w,c
 27187  00403E  6EFE               	movwf	tosh,c
 27188  004040  50F8               	movf	tblptru,w,c
 27189  004042  6EFF               	movwf	tosu,c
 27190  004044  50FA               	movf	pclath,w,c
 27191  004046  0012               	return		;indir
 27192  004048                     u11079:
 27193                           
 27194                           ;ex_eeprom.c: 49: pAt24c02->iic_send_byte(pAt24c02->slaveAddr);
 27195  004048  0100               	movlb	0	; () banked
 27196  00404A  EE20 F005          	lfsr	2,5
 27197  00404E  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27198  004050  26D9               	addwf	fsr2l,f,c
 27199  004052  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27200  004054  22DA               	addwfc	fsr2h,f,c
 27201  004056  D801               	call	u11088
 27202  004058  D00F               	goto	u11089
 27203  00405A                     u11088:
 27204  00405A  0005               	push	
 27205  00405C  6EFA               	movwf	pclath,c
 27206  00405E  50DE               	movf	postinc2,w,c
 27207  004060  6EFD               	movwf	tosl,c
 27208  004062  50DE               	movf	postinc2,w,c
 27209  004064  6EFE               	movwf	tosh,c
 27210  004066  50F8               	movf	tblptru,w,c
 27211  004068  6EFF               	movwf	tosu,c
 27212  00406A  50FA               	movf	pclath,w,c
 27213  00406C  C064  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 27214  004070  C065  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 27215  004074  50DF               	movf	indf2,w,c
 27216  004076  0012               	return		;indir
 27217  004078                     u11089:
 27218                           
 27219                           ;ex_eeprom.c: 50: pAt24c02->iic_send_byte(addr);
 27220  004078  0100               	movlb	0	; () banked
 27221  00407A  EE20 F005          	lfsr	2,5
 27222  00407E  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27223  004080  26D9               	addwf	fsr2l,f,c
 27224  004082  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27225  004084  22DA               	addwfc	fsr2h,f,c
 27226  004086  D801               	call	u11098
 27227  004088  D00C               	goto	u11099
 27228  00408A                     u11098:
 27229  00408A  0005               	push	
 27230  00408C  6EFA               	movwf	pclath,c
 27231  00408E  50DE               	movf	postinc2,w,c
 27232  004090  6EFD               	movwf	tosl,c
 27233  004092  50DE               	movf	postinc2,w,c
 27234  004094  6EFE               	movwf	tosh,c
 27235  004096  50F8               	movf	tblptru,w,c
 27236  004098  6EFF               	movwf	tosu,c
 27237  00409A  50FA               	movf	pclath,w,c
 27238  00409C  0100               	movlb	0	; () banked
 27239  00409E  5166               	movf	at24c02_read_n_byte@addr& (0+255),w,b
 27240  0040A0  0012               	return		;indir
 27241  0040A2                     u11099:
 27242                           
 27243                           ;ex_eeprom.c: 52: pAt24c02->iic_start();
 27244  0040A2  0100               	movlb	0	; () banked
 27245  0040A4  EE20 F001          	lfsr	2,1
 27246  0040A8  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27247  0040AA  26D9               	addwf	fsr2l,f,c
 27248  0040AC  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27249  0040AE  22DA               	addwfc	fsr2h,f,c
 27250  0040B0  D801               	call	u11108
 27251  0040B2  D00A               	goto	u11109
 27252  0040B4                     u11108:
 27253  0040B4  0005               	push	
 27254  0040B6  6EFA               	movwf	pclath,c
 27255  0040B8  50DE               	movf	postinc2,w,c
 27256  0040BA  6EFD               	movwf	tosl,c
 27257  0040BC  50DE               	movf	postinc2,w,c
 27258  0040BE  6EFE               	movwf	tosh,c
 27259  0040C0  50F8               	movf	tblptru,w,c
 27260  0040C2  6EFF               	movwf	tosu,c
 27261  0040C4  50FA               	movf	pclath,w,c
 27262  0040C6  0012               	return		;indir
 27263  0040C8                     u11109:
 27264                           
 27265                           ;ex_eeprom.c: 53: pAt24c02->iic_send_byte(pAt24c02->slaveAddr+1);
 27266  0040C8  0100               	movlb	0	; () banked
 27267  0040CA  EE20 F005          	lfsr	2,5
 27268  0040CE  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27269  0040D0  26D9               	addwf	fsr2l,f,c
 27270  0040D2  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27271  0040D4  22DA               	addwfc	fsr2h,f,c
 27272  0040D6  D801               	call	u11118
 27273  0040D8  D013               	goto	l12176
 27274  0040DA                     u11118:
 27275  0040DA  0005               	push	
 27276  0040DC  6EFA               	movwf	pclath,c
 27277  0040DE  50DE               	movf	postinc2,w,c
 27278  0040E0  6EFD               	movwf	tosl,c
 27279  0040E2  50DE               	movf	postinc2,w,c
 27280  0040E4  6EFE               	movwf	tosh,c
 27281  0040E6  50F8               	movf	tblptru,w,c
 27282  0040E8  6EFF               	movwf	tosu,c
 27283  0040EA  50FA               	movf	pclath,w,c
 27284  0040EC  C064  FFD9         	movff	at24c02_read_n_byte@pAt24c02,fsr2l
 27285  0040F0  C065  FFDA         	movff	at24c02_read_n_byte@pAt24c02+1,fsr2h
 27286  0040F4  50DF               	movf	indf2,w,c
 27287  0040F6  0100               	movlb	0	; () banked
 27288  0040F8  6F6B               	movwf	??_at24c02_read_n_byte& (0+255),b
 27289  0040FA  0100               	movlb	0	; () banked
 27290  0040FC  296B               	incf	??_at24c02_read_n_byte& (0+255),w,b
 27291  0040FE  0012               	return		;indir
 27292  004100                     l12176:
 27293                           
 27294                           ;ex_eeprom.c: 54: for(i=0;i<len-1;i++){
 27295  004100  0E00               	movlw	0
 27296  004102  0100               	movlb	0	; () banked
 27297  004104  6F70               	movwf	(at24c02_read_n_byte@i+1)& (0+255),b
 27298  004106  0E00               	movlw	0
 27299  004108  6F6F               	movwf	at24c02_read_n_byte@i& (0+255),b
 27300  00410A  D01F               	goto	l12184
 27301  00410C                     l12178:
 27302                           
 27303                           ; BSR set to: 0
 27304                           ;ex_eeprom.c: 55: *buf++=pAt24c02->iic_received_byte_if_ack(IIC_ACK);
 27305  00410C  0100               	movlb	0	; () banked
 27306  00410E  EE20 F009          	lfsr	2,9
 27307  004112  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27308  004114  26D9               	addwf	fsr2l,f,c
 27309  004116  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27310  004118  22DA               	addwfc	fsr2h,f,c
 27311  00411A  D801               	call	u11128
 27312  00411C  D00B               	goto	u11129
 27313  00411E                     u11128:
 27314  00411E  0005               	push	
 27315  004120  6EFA               	movwf	pclath,c
 27316  004122  50DE               	movf	postinc2,w,c
 27317  004124  6EFD               	movwf	tosl,c
 27318  004126  50DE               	movf	postinc2,w,c
 27319  004128  6EFE               	movwf	tosh,c
 27320  00412A  50F8               	movf	tblptru,w,c
 27321  00412C  6EFF               	movwf	tosu,c
 27322  00412E  50FA               	movf	pclath,w,c
 27323  004130  0E00               	movlw	0
 27324  004132  0012               	return		;indir
 27325  004134                     u11129:
 27326  004134  C067  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 27327  004138  C068  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 27328  00413C  6EDF               	movwf	indf2,c
 27329  00413E  0100               	movlb	0	; () banked
 27330  004140  4B67               	infsnz	at24c02_read_n_byte@buf& (0+255),f,b
 27331  004142  2B68               	incf	(at24c02_read_n_byte@buf+1)& (0+255),f,b
 27332                           
 27333                           ; BSR set to: 0
 27334  004144  0100               	movlb	0	; () banked
 27335  004146  4B6F               	infsnz	at24c02_read_n_byte@i& (0+255),f,b
 27336  004148  2B70               	incf	(at24c02_read_n_byte@i+1)& (0+255),f,b
 27337  00414A                     l12184:
 27338                           
 27339                           ; BSR set to: 0
 27340  00414A  0EFF               	movlw	255
 27341  00414C  0100               	movlb	0	; () banked
 27342  00414E  6F6B               	movwf	??_at24c02_read_n_byte& (0+255),b
 27343  004150  0EFF               	movlw	255
 27344  004152  0100               	movlb	0	; () banked
 27345  004154  6F6C               	movwf	(??_at24c02_read_n_byte+1)& (0+255),b
 27346  004156  C069  F06D         	movff	at24c02_read_n_byte@len,??_at24c02_read_n_byte+2
 27347  00415A  C06A  F06E         	movff	at24c02_read_n_byte@len+1,??_at24c02_read_n_byte+3
 27348  00415E  0100               	movlb	0	; () banked
 27349  004160  516B               	movf	??_at24c02_read_n_byte& (0+255),w,b
 27350  004162  0100               	movlb	0	; () banked
 27351  004164  276D               	addwf	(??_at24c02_read_n_byte+2)& (0+255),f,b
 27352  004166  0100               	movlb	0	; () banked
 27353  004168  516C               	movf	(??_at24c02_read_n_byte+1)& (0+255),w,b
 27354  00416A  0100               	movlb	0	; () banked
 27355  00416C  236E               	addwfc	(??_at24c02_read_n_byte+3)& (0+255),f,b
 27356  00416E  0100               	movlb	0	; () banked
 27357  004170  516D               	movf	(??_at24c02_read_n_byte+2)& (0+255),w,b
 27358  004172  0100               	movlb	0	; () banked
 27359  004174  5D6F               	subwf	at24c02_read_n_byte@i& (0+255),w,b
 27360  004176  0100               	movlb	0	; () banked
 27361  004178  516E               	movf	(??_at24c02_read_n_byte+3)& (0+255),w,b
 27362  00417A  0100               	movlb	0	; () banked
 27363  00417C  5970               	subwfb	(at24c02_read_n_byte@i+1)& (0+255),w,b
 27364  00417E  A0D8               	btfss	status,0,c
 27365  004180  D7C5               	goto	l12178
 27366                           
 27367                           ; BSR set to: 0
 27368                           ;ex_eeprom.c: 56: }
 27369                           ;ex_eeprom.c: 57: *buf=pAt24c02->iic_received_byte_if_ack(IIC_NACK);
 27370                           
 27371                           ; BSR set to: 0
 27372  004182  0100               	movlb	0	; () banked
 27373  004184  EE20 F009          	lfsr	2,9
 27374  004188  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27375  00418A  26D9               	addwf	fsr2l,f,c
 27376  00418C  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27377  00418E  22DA               	addwfc	fsr2h,f,c
 27378  004190  D801               	call	u11148
 27379  004192  D00B               	goto	u11149
 27380  004194                     u11148:
 27381  004194  0005               	push	
 27382  004196  6EFA               	movwf	pclath,c
 27383  004198  50DE               	movf	postinc2,w,c
 27384  00419A  6EFD               	movwf	tosl,c
 27385  00419C  50DE               	movf	postinc2,w,c
 27386  00419E  6EFE               	movwf	tosh,c
 27387  0041A0  50F8               	movf	tblptru,w,c
 27388  0041A2  6EFF               	movwf	tosu,c
 27389  0041A4  50FA               	movf	pclath,w,c
 27390  0041A6  0E01               	movlw	1
 27391  0041A8  0012               	return		;indir
 27392  0041AA                     u11149:
 27393  0041AA  C067  FFD9         	movff	at24c02_read_n_byte@buf,fsr2l
 27394  0041AE  C068  FFDA         	movff	at24c02_read_n_byte@buf+1,fsr2h
 27395  0041B2  6EDF               	movwf	indf2,c
 27396                           
 27397                           ;ex_eeprom.c: 58: pAt24c02->iic_stop();
 27398  0041B4  0100               	movlb	0	; () banked
 27399  0041B6  EE20 F003          	lfsr	2,3
 27400  0041BA  5164               	movf	at24c02_read_n_byte@pAt24c02& (0+255),w,b
 27401  0041BC  26D9               	addwf	fsr2l,f,c
 27402  0041BE  5165               	movf	(at24c02_read_n_byte@pAt24c02+1)& (0+255),w,b
 27403  0041C0  22DA               	addwfc	fsr2h,f,c
 27404  0041C2  D801               	call	u11158
 27405  0041C4  0012               	return	
 27406  0041C6                     u11158:
 27407  0041C6  0005               	push	
 27408  0041C8  6EFA               	movwf	pclath,c
 27409  0041CA  50DE               	movf	postinc2,w,c
 27410  0041CC  6EFD               	movwf	tosl,c
 27411  0041CE  50DE               	movf	postinc2,w,c
 27412  0041D0  6EFE               	movwf	tosh,c
 27413  0041D2  50F8               	movf	tblptru,w,c
 27414  0041D4  6EFF               	movwf	tosu,c
 27415  0041D6  50FA               	movf	pclath,w,c
 27416  0041D8  0012               	return		;indir
 27417  0041DA                     __end_of_at24c02_read_n_byte:
 27418                           	opt stack 0
 27419                           tosu	equ	0xFFF
 27420                           tosh	equ	0xFFE
 27421                           tosl	equ	0xFFD
 27422                           pclath	equ	0xFFA
 27423                           tblptru	equ	0xFF8
 27424                           tblptrh	equ	0xFF7
 27425                           tblptrl	equ	0xFF6
 27426                           tablat	equ	0xFF5
 27427                           prodh	equ	0xFF4
 27428                           prodl	equ	0xFF3
 27429                           intcon	equ	0xFF2
 27430                           indf0	equ	0xFEF
 27431                           postinc0	equ	0xFEE
 27432                           fsr0h	equ	0xFEA
 27433                           fsr0l	equ	0xFE9
 27434                           wreg	equ	0xFE8
 27435                           postinc1	equ	0xFE6
 27436                           postdec1	equ	0xFE5
 27437                           plusw1	equ	0xFE3
 27438                           fsr1h	equ	0xFE2
 27439                           fsr1l	equ	0xFE1
 27440                           indf2	equ	0xFDF
 27441                           postinc2	equ	0xFDE
 27442                           postdec2	equ	0xFDD
 27443                           plusw2	equ	0xFDB
 27444                           fsr2h	equ	0xFDA
 27445                           fsr2l	equ	0xFD9
 27446                           status	equ	0xFD8
 27447                           
 27448 ;; *************** function _iic_start *****************
 27449 ;; Defined at:
 27450 ;;		line 18 in file "src/driver/i2c.c"
 27451 ;; Parameters:    Size  Location     Type
 27452 ;;		None
 27453 ;; Auto vars:     Size  Location     Type
 27454 ;;		None
 27455 ;; Return value:  Size  Location     Type
 27456 ;;                  1    wreg      void 
 27457 ;; Registers used:
 27458 ;;		status,2, status,0
 27459 ;; Tracked objects:
 27460 ;;		On entry : 0/0
 27461 ;;		On exit  : 0/0
 27462 ;;		Unchanged: 0/0
 27463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27468 ;;Total ram usage:        0 bytes
 27469 ;; Hardware stack levels used:    1
 27470 ;; Hardware stack levels required when called:    4
 27471 ;; This function calls:
 27472 ;;		Nothing
 27473 ;; This function is called by:
 27474 ;;		_ads1115_init
 27475 ;;		_at24c02_init
 27476 ;;		_pcf8574_init
 27477 ;;		_ads1115_write_reg
 27478 ;;		_ads1115_read_reg
 27479 ;;		_at24c02_read_n_byte
 27480 ;;		_at24c02_write_n_byte
 27481 ;;		_pcf8574_write_singel
 27482 ;;		_ad421_write_via_pcf8574
 27483 ;; This function uses a non-reentrant model
 27484 ;;
 27485                           
 27486                           	psect	text122
 27487  007334                     __ptext122:
 27488                           	opt stack 0
 27489  007334                     _iic_start:
 27490                           	opt stack 21
 27491                           
 27492                           ;incstack = 0
 27493                           ;i2c.c: 20: do{TRISC &= ~(1<<3);}while(0);;;
 27494  007334  9694               	bcf	3988,3,c	;volatile
 27495                           
 27496                           ;i2c.c: 21: do{TRISC &= ~(1<<4);}while(0);;;
 27497  007336  9894               	bcf	3988,4,c	;volatile
 27498                           
 27499                           ;i2c.c: 23: do{LATC |= (1<<4);}while(0);;;
 27500  007338  888B               	bsf	3979,4,c	;volatile
 27501                           
 27502                           ;i2c.c: 24: do{LATC |= (1<<3);}while(0);;;
 27503  00733A  868B               	bsf	3979,3,c	;volatile
 27504                           
 27505                           ;i2c.c: 25: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27506  00733C  F000               	nop	
 27507  00733E  F000               	nop	
 27508  007340  F000               	nop	
 27509  007342  F000               	nop	
 27510  007344  F000               	nop	
 27511  007346  F000               	nop	
 27512  007348  F000               	nop	
 27513  00734A  F000               	nop	
 27514  00734C  F000               	nop	
 27515  00734E  F000               	nop	
 27516  007350  F000               	nop	
 27517  007352  F000               	nop	
 27518                           
 27519                           ;i2c.c: 26: do{LATC &= ~(1<<4);}while(0);;;
 27520  007354  988B               	bcf	3979,4,c	;volatile
 27521                           
 27522                           ;i2c.c: 27: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27523  007356  F000               	nop	
 27524  007358  F000               	nop	
 27525  00735A  F000               	nop	
 27526  00735C  F000               	nop	
 27527  00735E  F000               	nop	
 27528  007360  F000               	nop	
 27529  007362  F000               	nop	
 27530  007364  F000               	nop	
 27531  007366  F000               	nop	
 27532  007368  F000               	nop	
 27533  00736A  F000               	nop	
 27534  00736C  F000               	nop	
 27535                           
 27536                           ;i2c.c: 28: do{LATC &= ~(1<<3);}while(0);;;
 27537  00736E  968B               	bcf	3979,3,c	;volatile
 27538  007370  0012               	return	
 27539  007372                     __end_of_iic_start:
 27540                           	opt stack 0
 27541                           tosu	equ	0xFFF
 27542                           tosh	equ	0xFFE
 27543                           tosl	equ	0xFFD
 27544                           pclath	equ	0xFFA
 27545                           tblptru	equ	0xFF8
 27546                           tblptrh	equ	0xFF7
 27547                           tblptrl	equ	0xFF6
 27548                           tablat	equ	0xFF5
 27549                           prodh	equ	0xFF4
 27550                           prodl	equ	0xFF3
 27551                           intcon	equ	0xFF2
 27552                           indf0	equ	0xFEF
 27553                           postinc0	equ	0xFEE
 27554                           fsr0h	equ	0xFEA
 27555                           fsr0l	equ	0xFE9
 27556                           wreg	equ	0xFE8
 27557                           postinc1	equ	0xFE6
 27558                           postdec1	equ	0xFE5
 27559                           plusw1	equ	0xFE3
 27560                           fsr1h	equ	0xFE2
 27561                           fsr1l	equ	0xFE1
 27562                           indf2	equ	0xFDF
 27563                           postinc2	equ	0xFDE
 27564                           postdec2	equ	0xFDD
 27565                           plusw2	equ	0xFDB
 27566                           fsr2h	equ	0xFDA
 27567                           fsr2l	equ	0xFD9
 27568                           status	equ	0xFD8
 27569                           
 27570 ;; *************** function _iic_send_byte *****************
 27571 ;; Defined at:
 27572 ;;		line 80 in file "src/driver/i2c.c"
 27573 ;; Parameters:    Size  Location     Type
 27574 ;;  x               1    wreg     unsigned char 
 27575 ;; Auto vars:     Size  Location     Type
 27576 ;;  x               1    0[BANK0 ] unsigned char 
 27577 ;;  i               1    1[BANK0 ] unsigned char 
 27578 ;; Return value:  Size  Location     Type
 27579 ;;                  1    wreg      unsigned char 
 27580 ;; Registers used:
 27581 ;;		wreg, status,2, status,0, cstack
 27582 ;; Tracked objects:
 27583 ;;		On entry : 0/0
 27584 ;;		On exit  : 0/0
 27585 ;;		Unchanged: 0/0
 27586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27591 ;;Total ram usage:        2 bytes
 27592 ;; Hardware stack levels used:    1
 27593 ;; Hardware stack levels required when called:    6
 27594 ;; This function calls:
 27595 ;;		_iic_waite_ack
 27596 ;; This function is called by:
 27597 ;;		_ads1115_init
 27598 ;;		_at24c02_init
 27599 ;;		_pcf8574_init
 27600 ;;		_ads1115_write_reg
 27601 ;;		_ads1115_read_reg
 27602 ;;		_at24c02_read_n_byte
 27603 ;;		_at24c02_write_n_byte
 27604 ;;		_pcf8574_write_singel
 27605 ;;		_ad421_write_via_pcf8574
 27606 ;; This function uses a non-reentrant model
 27607 ;;
 27608                           
 27609                           	psect	text123
 27610  006B1C                     __ptext123:
 27611                           	opt stack 0
 27612  006B1C                     _iic_send_byte:
 27613                           	opt stack 19
 27614                           
 27615                           ;incstack = 0
 27616                           ;iic_send_byte@x stored from wreg
 27617  006B1C  0100               	movlb	0	; () banked
 27618  006B1E  6F60               	movwf	iic_send_byte@x& (0+255),b
 27619                           
 27620                           ;i2c.c: 82: uint8_t i;
 27621                           ;i2c.c: 83: do{TRISC &= ~(1<<3);}while(0);;;
 27622  006B20  9694               	bcf	3988,3,c	;volatile
 27623                           
 27624                           ;i2c.c: 84: do{TRISC &= ~(1<<4);}while(0);;;
 27625  006B22  9894               	bcf	3988,4,c	;volatile
 27626                           
 27627                           ;i2c.c: 85: do{LATC &= ~(1<<3);}while(0);;;
 27628  006B24  968B               	bcf	3979,3,c	;volatile
 27629                           
 27630                           ;i2c.c: 86: for(i=0;i<8;i++){
 27631  006B26  0E00               	movlw	0
 27632  006B28  0100               	movlb	0	; () banked
 27633  006B2A  6F61               	movwf	iic_send_byte@i& (0+255),b
 27634  006B2C                     l10662:
 27635                           
 27636                           ; BSR set to: 0
 27637  006B2C  0E07               	movlw	7
 27638  006B2E  0100               	movlb	0	; () banked
 27639  006B30  6561               	cpfsgt	iic_send_byte@i& (0+255),b
 27640  006B32  D001               	goto	l1042
 27641  006B34  D026               	goto	l10722
 27642  006B36                     l1042:
 27643                           
 27644                           ; BSR set to: 0
 27645                           ;i2c.c: 87: if(x&0x80){
 27646  006B36  0100               	movlb	0	; () banked
 27647  006B38  AF60               	btfss	iic_send_byte@x& (0+255),7,b
 27648  006B3A  D002               	goto	l10668
 27649                           
 27650                           ; BSR set to: 0
 27651                           
 27652                           ; BSR set to: 0
 27653                           
 27654                           ;i2c.c: 88: do{LATC |= (1<<4);}while(0);;;
 27655  006B3C  888B               	bsf	3979,4,c	;volatile
 27656                           
 27657                           ; BSR set to: 0
 27658                           ;i2c.c: 89: }
 27659  006B3E  D001               	goto	l1050
 27660  006B40                     l10668:
 27661                           
 27662                           ; BSR set to: 0
 27663  006B40  988B               	bcf	3979,4,c	;volatile
 27664  006B42                     l1050:
 27665                           
 27666                           ; BSR set to: 0
 27667  006B42  868B               	bsf	3979,3,c	;volatile
 27668                           
 27669                           ; BSR set to: 0
 27670                           
 27671                           ; BSR set to: 0
 27672                           
 27673                           ;i2c.c: 94: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27674                           
 27675                           ; BSR set to: 0
 27676  006B44  F000               	nop	
 27677  006B46  F000               	nop	
 27678  006B48  F000               	nop	
 27679  006B4A  F000               	nop	
 27680  006B4C  F000               	nop	
 27681  006B4E  F000               	nop	
 27682  006B50  F000               	nop	
 27683  006B52  F000               	nop	
 27684  006B54  F000               	nop	
 27685  006B56  F000               	nop	
 27686  006B58  F000               	nop	
 27687  006B5A  F000               	nop	
 27688                           
 27689                           ;i2c.c: 95: do{LATC &= ~(1<<3);}while(0);;;
 27690  006B5C  968B               	bcf	3979,3,c	;volatile
 27691                           
 27692                           ;i2c.c: 96: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27693  006B5E  F000               	nop	
 27694  006B60  F000               	nop	
 27695  006B62  F000               	nop	
 27696  006B64  F000               	nop	
 27697  006B66  F000               	nop	
 27698  006B68  F000               	nop	
 27699  006B6A  F000               	nop	
 27700  006B6C  F000               	nop	
 27701  006B6E  F000               	nop	
 27702  006B70  F000               	nop	
 27703  006B72  F000               	nop	
 27704  006B74  F000               	nop	
 27705                           
 27706                           ;i2c.c: 97: x<<=1;
 27707  006B76  0100               	movlb	0	; () banked
 27708  006B78  90D8               	bcf	status,0,c
 27709  006B7A  3760               	rlcf	iic_send_byte@x& (0+255),f,b
 27710                           
 27711                           ; BSR set to: 0
 27712  006B7C  0100               	movlb	0	; () banked
 27713  006B7E  2B61               	incf	iic_send_byte@i& (0+255),f,b
 27714  006B80  D7D5               	goto	l10662
 27715  006B82                     l10722:
 27716                           
 27717                           ; BSR set to: 0
 27718                           ;i2c.c: 98: }
 27719                           ;i2c.c: 99: return iic_waite_ack();
 27720                           ;	Return value of _iic_send_byte is never used
 27721  006B82  EC20  F037         	call	_iic_waite_ack
 27722  006B86  0012               	return	
 27723  006B88                     __end_of_iic_send_byte:
 27724                           	opt stack 0
 27725                           tosu	equ	0xFFF
 27726                           tosh	equ	0xFFE
 27727                           tosl	equ	0xFFD
 27728                           pclath	equ	0xFFA
 27729                           tblptru	equ	0xFF8
 27730                           tblptrh	equ	0xFF7
 27731                           tblptrl	equ	0xFF6
 27732                           tablat	equ	0xFF5
 27733                           prodh	equ	0xFF4
 27734                           prodl	equ	0xFF3
 27735                           intcon	equ	0xFF2
 27736                           indf0	equ	0xFEF
 27737                           postinc0	equ	0xFEE
 27738                           fsr0h	equ	0xFEA
 27739                           fsr0l	equ	0xFE9
 27740                           wreg	equ	0xFE8
 27741                           postinc1	equ	0xFE6
 27742                           postdec1	equ	0xFE5
 27743                           plusw1	equ	0xFE3
 27744                           fsr1h	equ	0xFE2
 27745                           fsr1l	equ	0xFE1
 27746                           indf2	equ	0xFDF
 27747                           postinc2	equ	0xFDE
 27748                           postdec2	equ	0xFDD
 27749                           plusw2	equ	0xFDB
 27750                           fsr2h	equ	0xFDA
 27751                           fsr2l	equ	0xFD9
 27752                           status	equ	0xFD8
 27753                           
 27754 ;; *************** function _iic_waite_ack *****************
 27755 ;; Defined at:
 27756 ;;		line 60 in file "src/driver/i2c.c"
 27757 ;; Parameters:    Size  Location     Type
 27758 ;;		None
 27759 ;; Auto vars:     Size  Location     Type
 27760 ;;  timeout         1   31[COMRAM] unsigned char 
 27761 ;; Return value:  Size  Location     Type
 27762 ;;                  1    wreg      unsigned char 
 27763 ;; Registers used:
 27764 ;;		wreg, status,2, status,0, cstack
 27765 ;; Tracked objects:
 27766 ;;		On entry : 0/0
 27767 ;;		On exit  : 0/0
 27768 ;;		Unchanged: 0/0
 27769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27774 ;;Total ram usage:        1 bytes
 27775 ;; Hardware stack levels used:    1
 27776 ;; Hardware stack levels required when called:    5
 27777 ;; This function calls:
 27778 ;;		_iic_stop
 27779 ;; This function is called by:
 27780 ;;		_ads1115_init
 27781 ;;		_at24c02_init
 27782 ;;		_iic_send_byte
 27783 ;;		_pcf8574_init
 27784 ;; This function uses a non-reentrant model
 27785 ;;
 27786                           
 27787                           	psect	text124
 27788  006E40                     __ptext124:
 27789                           	opt stack 0
 27790  006E40                     _iic_waite_ack:
 27791                           	opt stack 19
 27792                           
 27793                           ;i2c.c: 62: uint8_t timeout=200;
 27794                           
 27795                           ;incstack = 0
 27796  006E40  0EC8               	movlw	200
 27797  006E42  6E20               	movwf	iic_waite_ack@timeout,c
 27798                           
 27799                           ;i2c.c: 63: do{TRISC &= ~(1<<3);}while(0);;;
 27800  006E44  9694               	bcf	3988,3,c	;volatile
 27801                           
 27802                           ;i2c.c: 64: do{TRISC |= (1<<4);}while(0);;;
 27803  006E46  8894               	bsf	3988,4,c	;volatile
 27804                           
 27805                           ;i2c.c: 65: do{LATC &= ~(1<<3);}while(0);;;
 27806  006E48  968B               	bcf	3979,3,c	;volatile
 27807                           
 27808                           ;i2c.c: 66: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27809  006E4A  F000               	nop	
 27810  006E4C  F000               	nop	
 27811  006E4E  F000               	nop	
 27812  006E50  F000               	nop	
 27813  006E52  F000               	nop	
 27814  006E54  F000               	nop	
 27815  006E56  F000               	nop	
 27816  006E58  F000               	nop	
 27817  006E5A  F000               	nop	
 27818  006E5C  F000               	nop	
 27819  006E5E  F000               	nop	
 27820  006E60  F000               	nop	
 27821                           
 27822                           ;i2c.c: 67: do{LATC |= (1<<3);}while(0);;;
 27823  006E62  868B               	bsf	3979,3,c	;volatile
 27824                           
 27825                           ;i2c.c: 68: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27826  006E64  F000               	nop	
 27827  006E66  F000               	nop	
 27828  006E68  F000               	nop	
 27829  006E6A  F000               	nop	
 27830  006E6C  F000               	nop	
 27831  006E6E  F000               	nop	
 27832  006E70  F000               	nop	
 27833  006E72  F000               	nop	
 27834  006E74  F000               	nop	
 27835  006E76  F000               	nop	
 27836  006E78  F000               	nop	
 27837  006E7A  F000               	nop	
 27838                           
 27839                           ;i2c.c: 69: while(timeout--){
 27840  006E7C  D002               	goto	l10422
 27841  006E7E                     l1027:
 27842                           
 27843                           ;i2c.c: 70: if(!(PORTC & (1<<4)))break;
 27844  006E7E  A882               	btfss	3970,4,c	;volatile
 27845  006E80  D004               	goto	l10424
 27846  006E82                     l10422:
 27847  006E82  0620               	decf	iic_waite_ack@timeout,f,c
 27848  006E84  2820               	incf	iic_waite_ack@timeout,w,c
 27849  006E86  A4D8               	btfss	status,2,c
 27850  006E88  D7FA               	goto	l1027
 27851  006E8A                     l10424:
 27852                           
 27853                           ;i2c.c: 71: }
 27854                           ;i2c.c: 72: if(!timeout){
 27855  006E8A  5020               	movf	iic_waite_ack@timeout,w,c
 27856  006E8C  A4D8               	btfss	status,2,c
 27857  006E8E  D004               	goto	l10432
 27858                           
 27859                           ;i2c.c: 73: iic_stop();
 27860  006E90  ECF5  F039         	call	_iic_stop	;wreg free
 27861                           
 27862                           ;i2c.c: 74: return 0;
 27863  006E94  0E00               	movlw	0
 27864  006E96  0012               	return	
 27865  006E98                     l10432:
 27866  006E98  968B               	bcf	3979,3,c	;volatile
 27867                           
 27868                           ;i2c.c: 77: return 1;
 27869  006E9A  0E01               	movlw	1
 27870  006E9C  0012               	return	
 27871  006E9E                     __end_of_iic_waite_ack:
 27872                           	opt stack 0
 27873                           tosu	equ	0xFFF
 27874                           tosh	equ	0xFFE
 27875                           tosl	equ	0xFFD
 27876                           pclath	equ	0xFFA
 27877                           tblptru	equ	0xFF8
 27878                           tblptrh	equ	0xFF7
 27879                           tblptrl	equ	0xFF6
 27880                           tablat	equ	0xFF5
 27881                           prodh	equ	0xFF4
 27882                           prodl	equ	0xFF3
 27883                           intcon	equ	0xFF2
 27884                           indf0	equ	0xFEF
 27885                           postinc0	equ	0xFEE
 27886                           fsr0h	equ	0xFEA
 27887                           fsr0l	equ	0xFE9
 27888                           wreg	equ	0xFE8
 27889                           postinc1	equ	0xFE6
 27890                           postdec1	equ	0xFE5
 27891                           plusw1	equ	0xFE3
 27892                           fsr1h	equ	0xFE2
 27893                           fsr1l	equ	0xFE1
 27894                           indf2	equ	0xFDF
 27895                           postinc2	equ	0xFDE
 27896                           postdec2	equ	0xFDD
 27897                           plusw2	equ	0xFDB
 27898                           fsr2h	equ	0xFDA
 27899                           fsr2l	equ	0xFD9
 27900                           status	equ	0xFD8
 27901                           
 27902 ;; *************** function _iic_stop *****************
 27903 ;; Defined at:
 27904 ;;		line 32 in file "src/driver/i2c.c"
 27905 ;; Parameters:    Size  Location     Type
 27906 ;;		None
 27907 ;; Auto vars:     Size  Location     Type
 27908 ;;		None
 27909 ;; Return value:  Size  Location     Type
 27910 ;;                  1    wreg      void 
 27911 ;; Registers used:
 27912 ;;		status,2, status,0
 27913 ;; Tracked objects:
 27914 ;;		On entry : 0/0
 27915 ;;		On exit  : 0/0
 27916 ;;		Unchanged: 0/0
 27917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27922 ;;Total ram usage:        0 bytes
 27923 ;; Hardware stack levels used:    1
 27924 ;; Hardware stack levels required when called:    4
 27925 ;; This function calls:
 27926 ;;		Nothing
 27927 ;; This function is called by:
 27928 ;;		_ads1115_init
 27929 ;;		_at24c02_init
 27930 ;;		_iic_waite_ack
 27931 ;;		_pcf8574_init
 27932 ;;		_ads1115_write_reg
 27933 ;;		_ads1115_read_reg
 27934 ;;		_at24c02_read_n_byte
 27935 ;;		_at24c02_write_n_byte
 27936 ;;		_pcf8574_write_singel
 27937 ;;		_ad421_write_via_pcf8574
 27938 ;; This function uses a non-reentrant model
 27939 ;;
 27940                           
 27941                           	psect	text125
 27942  0073EA                     __ptext125:
 27943                           	opt stack 0
 27944  0073EA                     _iic_stop:
 27945                           	opt stack 21
 27946                           
 27947                           ;incstack = 0
 27948                           ;i2c.c: 34: do{TRISC &= ~(1<<3);}while(0);;;
 27949  0073EA  9694               	bcf	3988,3,c	;volatile
 27950                           
 27951                           ;i2c.c: 35: do{TRISC &= ~(1<<4);}while(0);;;
 27952  0073EC  9894               	bcf	3988,4,c	;volatile
 27953                           
 27954                           ;i2c.c: 36: do{LATC &= ~(1<<4);}while(0);;;
 27955  0073EE  988B               	bcf	3979,4,c	;volatile
 27956                           
 27957                           ;i2c.c: 37: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27958  0073F0  F000               	nop	
 27959  0073F2  F000               	nop	
 27960  0073F4  F000               	nop	
 27961  0073F6  F000               	nop	
 27962  0073F8  F000               	nop	
 27963  0073FA  F000               	nop	
 27964  0073FC  F000               	nop	
 27965  0073FE  F000               	nop	
 27966  007400  F000               	nop	
 27967  007402  F000               	nop	
 27968  007404  F000               	nop	
 27969  007406  F000               	nop	
 27970                           
 27971                           ;i2c.c: 38: do{LATC |= (1<<3);}while(0);;;
 27972  007408  868B               	bsf	3979,3,c	;volatile
 27973                           
 27974                           ;i2c.c: 39: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 27975  00740A  F000               	nop	
 27976  00740C  F000               	nop	
 27977  00740E  F000               	nop	
 27978  007410  F000               	nop	
 27979  007412  F000               	nop	
 27980  007414  F000               	nop	
 27981  007416  F000               	nop	
 27982  007418  F000               	nop	
 27983  00741A  F000               	nop	
 27984  00741C  F000               	nop	
 27985  00741E  F000               	nop	
 27986  007420  F000               	nop	
 27987                           
 27988                           ;i2c.c: 40: do{LATC |= (1<<4);}while(0);;;
 27989  007422  888B               	bsf	3979,4,c	;volatile
 27990  007424  0012               	return	
 27991  007426                     __end_of_iic_stop:
 27992                           	opt stack 0
 27993                           tosu	equ	0xFFF
 27994                           tosh	equ	0xFFE
 27995                           tosl	equ	0xFFD
 27996                           pclath	equ	0xFFA
 27997                           tblptru	equ	0xFF8
 27998                           tblptrh	equ	0xFF7
 27999                           tblptrl	equ	0xFF6
 28000                           tablat	equ	0xFF5
 28001                           prodh	equ	0xFF4
 28002                           prodl	equ	0xFF3
 28003                           intcon	equ	0xFF2
 28004                           indf0	equ	0xFEF
 28005                           postinc0	equ	0xFEE
 28006                           fsr0h	equ	0xFEA
 28007                           fsr0l	equ	0xFE9
 28008                           wreg	equ	0xFE8
 28009                           postinc1	equ	0xFE6
 28010                           postdec1	equ	0xFE5
 28011                           plusw1	equ	0xFE3
 28012                           fsr1h	equ	0xFE2
 28013                           fsr1l	equ	0xFE1
 28014                           indf2	equ	0xFDF
 28015                           postinc2	equ	0xFDE
 28016                           postdec2	equ	0xFDD
 28017                           plusw2	equ	0xFDB
 28018                           fsr2h	equ	0xFDA
 28019                           fsr2l	equ	0xFD9
 28020                           status	equ	0xFD8
 28021                           
 28022 ;; *************** function _iic_received_byte_if_ack *****************
 28023 ;; Defined at:
 28024 ;;		line 121 in file "src/driver/i2c.c"
 28025 ;; Parameters:    Size  Location     Type
 28026 ;;  ack             1    wreg     unsigned char 
 28027 ;; Auto vars:     Size  Location     Type
 28028 ;;  ack             1    2[BANK0 ] unsigned char 
 28029 ;;  ret             1    3[BANK0 ] unsigned char 
 28030 ;; Return value:  Size  Location     Type
 28031 ;;                  1    wreg      unsigned char 
 28032 ;; Registers used:
 28033 ;;		wreg, status,2, status,0, cstack
 28034 ;; Tracked objects:
 28035 ;;		On entry : 0/0
 28036 ;;		On exit  : 0/0
 28037 ;;		Unchanged: 0/0
 28038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28043 ;;Total ram usage:        2 bytes
 28044 ;; Hardware stack levels used:    1
 28045 ;; Hardware stack levels required when called:    5
 28046 ;; This function calls:
 28047 ;;		_iic_received_byte
 28048 ;;		_iic_send_ack
 28049 ;; This function is called by:
 28050 ;;		_ads1115_init
 28051 ;;		_at24c02_init
 28052 ;;		_pcf8574_init
 28053 ;;		_ads1115_read_reg
 28054 ;;		_at24c02_read_n_byte
 28055 ;; This function uses a non-reentrant model
 28056 ;;
 28057                           
 28058                           	psect	text126
 28059  00783E                     __ptext126:
 28060                           	opt stack 0
 28061  00783E                     _iic_received_byte_if_ack:
 28062                           	opt stack 20
 28063                           
 28064                           ;incstack = 0
 28065                           ;iic_received_byte_if_ack@ack stored from wreg
 28066  00783E  0100               	movlb	0	; () banked
 28067  007840  6F62               	movwf	iic_received_byte_if_ack@ack& (0+255),b
 28068                           
 28069                           ;i2c.c: 123: uint8_t ret=0;
 28070  007842  0E00               	movlw	0
 28071  007844  0100               	movlb	0	; () banked
 28072  007846  6F63               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 28073                           
 28074                           ; BSR set to: 0
 28075                           ;i2c.c: 124: ret=iic_received_byte();
 28076  007848  ECF9  F035         	call	_iic_received_byte	;wreg free
 28077  00784C  0100               	movlb	0	; () banked
 28078  00784E  6F63               	movwf	iic_received_byte_if_ack@ret& (0+255),b
 28079                           
 28080                           ; BSR set to: 0
 28081                           ;i2c.c: 125: iic_send_ack(ack);
 28082  007850  0100               	movlb	0	; () banked
 28083  007852  5162               	movf	iic_received_byte_if_ack@ack& (0+255),w,b
 28084  007854  ECAF  F038         	call	_iic_send_ack
 28085                           
 28086                           ;i2c.c: 126: return ret;
 28087  007858  0100               	movlb	0	; () banked
 28088  00785A  5163               	movf	iic_received_byte_if_ack@ret& (0+255),w,b
 28089  00785C  0012               	return	
 28090  00785E                     __end_of_iic_received_byte_if_ack:
 28091                           	opt stack 0
 28092                           tosu	equ	0xFFF
 28093                           tosh	equ	0xFFE
 28094                           tosl	equ	0xFFD
 28095                           pclath	equ	0xFFA
 28096                           tblptru	equ	0xFF8
 28097                           tblptrh	equ	0xFF7
 28098                           tblptrl	equ	0xFF6
 28099                           tablat	equ	0xFF5
 28100                           prodh	equ	0xFF4
 28101                           prodl	equ	0xFF3
 28102                           intcon	equ	0xFF2
 28103                           indf0	equ	0xFEF
 28104                           postinc0	equ	0xFEE
 28105                           fsr0h	equ	0xFEA
 28106                           fsr0l	equ	0xFE9
 28107                           wreg	equ	0xFE8
 28108                           postinc1	equ	0xFE6
 28109                           postdec1	equ	0xFE5
 28110                           plusw1	equ	0xFE3
 28111                           fsr1h	equ	0xFE2
 28112                           fsr1l	equ	0xFE1
 28113                           indf2	equ	0xFDF
 28114                           postinc2	equ	0xFDE
 28115                           postdec2	equ	0xFDD
 28116                           plusw2	equ	0xFDB
 28117                           fsr2h	equ	0xFDA
 28118                           fsr2l	equ	0xFD9
 28119                           status	equ	0xFD8
 28120                           
 28121 ;; *************** function _iic_send_ack *****************
 28122 ;; Defined at:
 28123 ;;		line 44 in file "src/driver/i2c.c"
 28124 ;; Parameters:    Size  Location     Type
 28125 ;;  ack             1    wreg     char 
 28126 ;; Auto vars:     Size  Location     Type
 28127 ;;  ack             1   31[COMRAM] char 
 28128 ;; Return value:  Size  Location     Type
 28129 ;;                  1    wreg      void 
 28130 ;; Registers used:
 28131 ;;		wreg, status,2, status,0
 28132 ;; Tracked objects:
 28133 ;;		On entry : 0/0
 28134 ;;		On exit  : 0/0
 28135 ;;		Unchanged: 0/0
 28136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28141 ;;Total ram usage:        1 bytes
 28142 ;; Hardware stack levels used:    1
 28143 ;; Hardware stack levels required when called:    4
 28144 ;; This function calls:
 28145 ;;		Nothing
 28146 ;; This function is called by:
 28147 ;;		_iic_received_byte_if_ack
 28148 ;; This function uses a non-reentrant model
 28149 ;;
 28150                           
 28151                           	psect	text127
 28152  00715E                     __ptext127:
 28153                           	opt stack 0
 28154  00715E                     _iic_send_ack:
 28155                           	opt stack 20
 28156                           
 28157                           ; BSR set to: 0
 28158                           ;incstack = 0
 28159                           ;iic_send_ack@ack stored from wreg
 28160  00715E  6E20               	movwf	iic_send_ack@ack,c
 28161                           
 28162                           ;i2c.c: 46: do{TRISC &= ~(1<<3);}while(0);;;
 28163  007160  9694               	bcf	3988,3,c	;volatile
 28164                           
 28165                           ;i2c.c: 47: do{TRISC &= ~(1<<4);}while(0);;;
 28166  007162  9894               	bcf	3988,4,c	;volatile
 28167                           
 28168                           ;i2c.c: 48: do{LATC &= ~(1<<3);}while(0);;;
 28169  007164  968B               	bcf	3979,3,c	;volatile
 28170                           
 28171                           ;i2c.c: 49: if(ack){
 28172  007166  5020               	movf	iic_send_ack@ack,w,c
 28173  007168  B4D8               	btfsc	status,2,c
 28174  00716A  D002               	goto	l10312
 28175                           
 28176                           ;i2c.c: 50: do{LATC |= (1<<4);}while(0);;;
 28177  00716C  888B               	bsf	3979,4,c	;volatile
 28178                           
 28179                           ;i2c.c: 51: }else{
 28180  00716E  D001               	goto	l10314
 28181  007170                     l10312:
 28182  007170  988B               	bcf	3979,4,c	;volatile
 28183  007172                     l10314:
 28184  007172  F000               	nop	
 28185  007174  F000               	nop	
 28186  007176  F000               	nop	
 28187  007178  F000               	nop	
 28188  00717A  F000               	nop	
 28189  00717C  F000               	nop	
 28190  00717E  F000               	nop	
 28191  007180  F000               	nop	
 28192  007182  F000               	nop	
 28193  007184  F000               	nop	
 28194  007186  F000               	nop	
 28195  007188  F000               	nop	
 28196                           
 28197                           ;i2c.c: 55: do{LATC |= (1<<3);}while(0);;;
 28198  00718A  868B               	bsf	3979,3,c	;volatile
 28199                           
 28200                           ;i2c.c: 56: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop()
      +                          ;__nop();__nop();__nop(); }while(0);;
 28201  00718C  F000               	nop	
 28202  00718E  F000               	nop	
 28203  007190  F000               	nop	
 28204  007192  F000               	nop	
 28205  007194  F000               	nop	
 28206  007196  F000               	nop	
 28207  007198  F000               	nop	
 28208  00719A  F000               	nop	
 28209  00719C  F000               	nop	
 28210  00719E  F000               	nop	
 28211  0071A0  F000               	nop	
 28212  0071A2  F000               	nop	
 28213                           
 28214                           ;i2c.c: 57: do{LATC &= ~(1<<3);}while(0);;;
 28215  0071A4  968B               	bcf	3979,3,c	;volatile
 28216  0071A6  0012               	return	
 28217  0071A8                     __end_of_iic_send_ack:
 28218                           	opt stack 0
 28219                           tosu	equ	0xFFF
 28220                           tosh	equ	0xFFE
 28221                           tosl	equ	0xFFD
 28222                           pclath	equ	0xFFA
 28223                           tblptru	equ	0xFF8
 28224                           tblptrh	equ	0xFF7
 28225                           tblptrl	equ	0xFF6
 28226                           tablat	equ	0xFF5
 28227                           prodh	equ	0xFF4
 28228                           prodl	equ	0xFF3
 28229                           intcon	equ	0xFF2
 28230                           indf0	equ	0xFEF
 28231                           postinc0	equ	0xFEE
 28232                           fsr0h	equ	0xFEA
 28233                           fsr0l	equ	0xFE9
 28234                           wreg	equ	0xFE8
 28235                           postinc1	equ	0xFE6
 28236                           postdec1	equ	0xFE5
 28237                           plusw1	equ	0xFE3
 28238                           fsr1h	equ	0xFE2
 28239                           fsr1l	equ	0xFE1
 28240                           indf2	equ	0xFDF
 28241                           postinc2	equ	0xFDE
 28242                           postdec2	equ	0xFDD
 28243                           plusw2	equ	0xFDB
 28244                           fsr2h	equ	0xFDA
 28245                           fsr2l	equ	0xFD9
 28246                           status	equ	0xFD8
 28247                           
 28248 ;; *************** function _iic_received_byte *****************
 28249 ;; Defined at:
 28250 ;;		line 102 in file "src/driver/i2c.c"
 28251 ;; Parameters:    Size  Location     Type
 28252 ;;		None
 28253 ;; Auto vars:     Size  Location     Type
 28254 ;;  i               1    1[BANK0 ] unsigned char 
 28255 ;;  ret             1    0[BANK0 ] unsigned char 
 28256 ;; Return value:  Size  Location     Type
 28257 ;;                  1    wreg      unsigned char 
 28258 ;; Registers used:
 28259 ;;		wreg, status,2, status,0
 28260 ;; Tracked objects:
 28261 ;;		On entry : 0/0
 28262 ;;		On exit  : 0/0
 28263 ;;		Unchanged: 0/0
 28264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28269 ;;Total ram usage:        2 bytes
 28270 ;; Hardware stack levels used:    1
 28271 ;; Hardware stack levels required when called:    4
 28272 ;; This function calls:
 28273 ;;		Nothing
 28274 ;; This function is called by:
 28275 ;;		_iic_received_byte_if_ack
 28276 ;; This function uses a non-reentrant model
 28277 ;;
 28278                           
 28279                           	psect	text128
 28280  006BF2                     __ptext128:
 28281                           	opt stack 0
 28282  006BF2                     _iic_received_byte:
 28283                           	opt stack 20
 28284                           
 28285                           ;i2c.c: 104: uint8_t i;
 28286                           ;i2c.c: 105: uint8_t ret=0;
 28287                           
 28288                           ;incstack = 0
 28289  006BF2  0E00               	movlw	0
 28290  006BF4  0100               	movlb	0	; () banked
 28291  006BF6  6F60               	movwf	iic_received_byte@ret& (0+255),b
 28292                           
 28293                           ; BSR set to: 0
 28294                           
 28295                           ; BSR set to: 0
 28296                           
 28297                           ;i2c.c: 106: do{TRISC &= ~(1<<3);}while(0);;;
 28298  006BF8  9694               	bcf	3988,3,c	;volatile
 28299                           
 28300                           ; BSR set to: 0
 28301                           
 28302                           ; BSR set to: 0
 28303                           
 28304                           ;i2c.c: 107: do{TRISC |= (1<<4);}while(0);;;
 28305                           
 28306                           ; BSR set to: 0
 28307  006BFA  8894               	bsf	3988,4,c	;volatile
 28308                           
 28309                           ; BSR set to: 0
 28310                           ;i2c.c: 108: for(i=0;i<8;i++){
 28311  006BFC  0E00               	movlw	0
 28312  006BFE  0100               	movlb	0	; () banked
 28313  006C00  6F61               	movwf	iic_received_byte@i& (0+255),b
 28314  006C02                     l10444:
 28315                           
 28316                           ; BSR set to: 0
 28317  006C02  0E07               	movlw	7
 28318  006C04  0100               	movlb	0	; () banked
 28319  006C06  6561               	cpfsgt	iic_received_byte@i& (0+255),b
 28320  006C08  D001               	goto	l10448
 28321  006C0A  D024               	goto	l10508
 28322  006C0C                     l10448:
 28323                           
 28324                           ; BSR set to: 0
 28325                           ;i2c.c: 109: ret<<=1;
 28326  006C0C  0100               	movlb	0	; () banked
 28327  006C0E  90D8               	bcf	status,0,c
 28328  006C10  3760               	rlcf	iic_received_byte@ret& (0+255),f,b
 28329                           
 28330                           ; BSR set to: 0
 28331                           
 28332                           ; BSR set to: 0
 28333                           
 28334                           ;i2c.c: 110: do{LATC &= ~(1<<3);}while(0);;;
 28335  006C12  968B               	bcf	3979,3,c	;volatile
 28336                           
 28337                           ; BSR set to: 0
 28338                           
 28339                           ; BSR set to: 0
 28340                           
 28341                           ;i2c.c: 111: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 28342                           
 28343                           ; BSR set to: 0
 28344  006C14  F000               	nop	
 28345  006C16  F000               	nop	
 28346  006C18  F000               	nop	
 28347  006C1A  F000               	nop	
 28348  006C1C  F000               	nop	
 28349  006C1E  F000               	nop	
 28350  006C20  F000               	nop	
 28351  006C22  F000               	nop	
 28352  006C24  F000               	nop	
 28353  006C26  F000               	nop	
 28354  006C28  F000               	nop	
 28355  006C2A  F000               	nop	
 28356                           
 28357                           ;i2c.c: 112: do{LATC |= (1<<3);}while(0);;;
 28358  006C2C  868B               	bsf	3979,3,c	;volatile
 28359                           
 28360                           ;i2c.c: 113: do{ __nop();__nop();__nop();__nop();__nop();__nop(); __nop();__nop();__nop(
      +                          );__nop();__nop();__nop(); }while(0);;
 28361  006C2E  F000               	nop	
 28362  006C30  F000               	nop	
 28363  006C32  F000               	nop	
 28364  006C34  F000               	nop	
 28365  006C36  F000               	nop	
 28366  006C38  F000               	nop	
 28367  006C3A  F000               	nop	
 28368  006C3C  F000               	nop	
 28369  006C3E  F000               	nop	
 28370  006C40  F000               	nop	
 28371  006C42  F000               	nop	
 28372  006C44  F000               	nop	
 28373                           
 28374                           ;i2c.c: 114: if((PORTC & (1<<4))){
 28375  006C46  A882               	btfss	3970,4,c	;volatile
 28376  006C48  D002               	goto	l1075
 28377                           
 28378                           ;i2c.c: 115: ret|=1;
 28379  006C4A  0100               	movlb	0	; () banked
 28380  006C4C  8160               	bsf	iic_received_byte@ret& (0+255),0,b
 28381  006C4E                     l1075:
 28382  006C4E  0100               	movlb	0	; () banked
 28383  006C50  2B61               	incf	iic_received_byte@i& (0+255),f,b
 28384  006C52  D7D7               	goto	l10444
 28385  006C54                     l10508:
 28386                           
 28387                           ; BSR set to: 0
 28388  006C54  968B               	bcf	3979,3,c	;volatile
 28389                           
 28390                           ; BSR set to: 0
 28391                           ;i2c.c: 119: return ret;
 28392                           
 28393                           ; BSR set to: 0
 28394  006C56  0100               	movlb	0	; () banked
 28395  006C58  5160               	movf	iic_received_byte@ret& (0+255),w,b
 28396  006C5A  0012               	return	
 28397  006C5C                     __end_of_iic_received_byte:
 28398                           	opt stack 0
 28399                           tosu	equ	0xFFF
 28400                           tosh	equ	0xFFE
 28401                           tosl	equ	0xFFD
 28402                           pclath	equ	0xFFA
 28403                           tblptru	equ	0xFF8
 28404                           tblptrh	equ	0xFF7
 28405                           tblptrl	equ	0xFF6
 28406                           tablat	equ	0xFF5
 28407                           prodh	equ	0xFF4
 28408                           prodl	equ	0xFF3
 28409                           intcon	equ	0xFF2
 28410                           indf0	equ	0xFEF
 28411                           postinc0	equ	0xFEE
 28412                           fsr0h	equ	0xFEA
 28413                           fsr0l	equ	0xFE9
 28414                           wreg	equ	0xFE8
 28415                           postinc1	equ	0xFE6
 28416                           postdec1	equ	0xFE5
 28417                           plusw1	equ	0xFE3
 28418                           fsr1h	equ	0xFE2
 28419                           fsr1l	equ	0xFE1
 28420                           indf2	equ	0xFDF
 28421                           postinc2	equ	0xFDE
 28422                           postdec2	equ	0xFDD
 28423                           plusw2	equ	0xFDB
 28424                           fsr2h	equ	0xFDA
 28425                           fsr2l	equ	0xFD9
 28426                           status	equ	0xFD8
 28427                           
 28428 ;; *************** function _at24c02_init *****************
 28429 ;; Defined at:
 28430 ;;		line 12 in file "src/driver/ex_eeprom.c"
 28431 ;; Parameters:    Size  Location     Type
 28432 ;;  pAt24c02        2    0[BANK0 ] PTR struct .
 28433 ;;		 -> at24c02Ch0(11), at24c02Ch1(11), NULL(0), 
 28434 ;;  slv             1    2[BANK0 ] unsigned char 
 28435 ;; Auto vars:     Size  Location     Type
 28436 ;;		None
 28437 ;; Return value:  Size  Location     Type
 28438 ;;                  1    wreg      void 
 28439 ;; Registers used:
 28440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28441 ;; Tracked objects:
 28442 ;;		On entry : 0/0
 28443 ;;		On exit  : 0/0
 28444 ;;		Unchanged: 0/0
 28445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28446 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28449 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28450 ;;Total ram usage:        3 bytes
 28451 ;; Hardware stack levels used:    1
 28452 ;; Hardware stack levels required when called:    4
 28453 ;; This function calls:
 28454 ;;		Nothing
 28455 ;; This function is called by:
 28456 ;;		_calib_data_init_diff_pr
 28457 ;;		_calib_data_init_pr
 28458 ;;		_at24c02_init_all_chip
 28459 ;; This function uses a non-reentrant model
 28460 ;;
 28461                           
 28462                           	psect	text129
 28463  0068D8                     __ptext129:
 28464                           	opt stack 0
 28465  0068D8                     _at24c02_init:
 28466                           	opt stack 24
 28467                           
 28468                           ;ex_eeprom.c: 14: pAt24c02->slaveAddr=slv;
 28469                           
 28470                           ; BSR set to: 0
 28471                           ;incstack = 0
 28472  0068D8  C060  FFD9         	movff	at24c02_init@pAt24c02,fsr2l
 28473  0068DC  C061  FFDA         	movff	at24c02_init@pAt24c02+1,fsr2h
 28474  0068E0  C062  FFDF         	movff	at24c02_init@slv,indf2
 28475                           
 28476                           ;ex_eeprom.c: 15: pAt24c02->iic_start=iic_start;
 28477  0068E4  0100               	movlb	0	; () banked
 28478  0068E6  EE20 F001          	lfsr	2,1
 28479  0068EA  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 28480  0068EC  26D9               	addwf	fsr2l,f,c
 28481  0068EE  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 28482  0068F0  22DA               	addwfc	fsr2h,f,c
 28483  0068F2  0E34               	movlw	low _iic_start
 28484  0068F4  6EDE               	movwf	postinc2,c
 28485  0068F6  0E73               	movlw	high _iic_start
 28486  0068F8  6EDD               	movwf	postdec2,c
 28487                           
 28488                           ; BSR set to: 0
 28489                           ;ex_eeprom.c: 16: pAt24c02->iic_stop=iic_stop;
 28490  0068FA  0100               	movlb	0	; () banked
 28491  0068FC  EE20 F003          	lfsr	2,3
 28492  006900  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 28493  006902  26D9               	addwf	fsr2l,f,c
 28494  006904  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 28495  006906  22DA               	addwfc	fsr2h,f,c
 28496  006908  0EEA               	movlw	low _iic_stop
 28497  00690A  6EDE               	movwf	postinc2,c
 28498  00690C  0E73               	movlw	high _iic_stop
 28499  00690E  6EDD               	movwf	postdec2,c
 28500                           
 28501                           ; BSR set to: 0
 28502                           ;ex_eeprom.c: 17: pAt24c02->iic_send_byte=iic_send_byte;
 28503  006910  0100               	movlb	0	; () banked
 28504  006912  EE20 F005          	lfsr	2,5
 28505  006916  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 28506  006918  26D9               	addwf	fsr2l,f,c
 28507  00691A  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 28508  00691C  22DA               	addwfc	fsr2h,f,c
 28509  00691E  0E1C               	movlw	low _iic_send_byte
 28510  006920  6EDE               	movwf	postinc2,c
 28511  006922  0E6B               	movlw	high _iic_send_byte
 28512  006924  6EDD               	movwf	postdec2,c
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;ex_eeprom.c: 19: pAt24c02->iic_waite_ack=iic_waite_ack;
 28516  006926  0100               	movlb	0	; () banked
 28517  006928  EE20 F007          	lfsr	2,7
 28518  00692C  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 28519  00692E  26D9               	addwf	fsr2l,f,c
 28520  006930  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 28521  006932  22DA               	addwfc	fsr2h,f,c
 28522  006934  0E40               	movlw	low _iic_waite_ack
 28523  006936  6EDE               	movwf	postinc2,c
 28524  006938  0E6E               	movlw	high _iic_waite_ack
 28525  00693A  6EDD               	movwf	postdec2,c
 28526                           
 28527                           ; BSR set to: 0
 28528                           ;ex_eeprom.c: 21: pAt24c02->iic_received_byte_if_ack=iic_received_byte_if_ack;
 28529  00693C  0100               	movlb	0	; () banked
 28530  00693E  EE20 F009          	lfsr	2,9
 28531  006942  5160               	movf	at24c02_init@pAt24c02& (0+255),w,b
 28532  006944  26D9               	addwf	fsr2l,f,c
 28533  006946  5161               	movf	(at24c02_init@pAt24c02+1)& (0+255),w,b
 28534  006948  22DA               	addwfc	fsr2h,f,c
 28535  00694A  0E3E               	movlw	low _iic_received_byte_if_ack
 28536  00694C  6EDE               	movwf	postinc2,c
 28537  00694E  0E78               	movlw	high _iic_received_byte_if_ack
 28538  006950  6EDD               	movwf	postdec2,c
 28539                           
 28540                           ; BSR set to: 0
 28541  006952  0012               	return		;funcret
 28542  006954                     __end_of_at24c02_init:
 28543                           	opt stack 0
 28544                           tosu	equ	0xFFF
 28545                           tosh	equ	0xFFE
 28546                           tosl	equ	0xFFD
 28547                           pclath	equ	0xFFA
 28548                           tblptru	equ	0xFF8
 28549                           tblptrh	equ	0xFF7
 28550                           tblptrl	equ	0xFF6
 28551                           tablat	equ	0xFF5
 28552                           prodh	equ	0xFF4
 28553                           prodl	equ	0xFF3
 28554                           intcon	equ	0xFF2
 28555                           indf0	equ	0xFEF
 28556                           postinc0	equ	0xFEE
 28557                           fsr0h	equ	0xFEA
 28558                           fsr0l	equ	0xFE9
 28559                           wreg	equ	0xFE8
 28560                           postinc1	equ	0xFE6
 28561                           postdec1	equ	0xFE5
 28562                           plusw1	equ	0xFE3
 28563                           fsr1h	equ	0xFE2
 28564                           fsr1l	equ	0xFE1
 28565                           indf2	equ	0xFDF
 28566                           postinc2	equ	0xFDE
 28567                           postdec2	equ	0xFDD
 28568                           plusw2	equ	0xFDB
 28569                           fsr2h	equ	0xFDA
 28570                           fsr2l	equ	0xFD9
 28571                           status	equ	0xFD8
 28572                           
 28573 ;; *************** function _ads1115_init_all_chip *****************
 28574 ;; Defined at:
 28575 ;;		line 112 in file "src/driver/ads1115.c"
 28576 ;; Parameters:    Size  Location     Type
 28577 ;;		None
 28578 ;; Auto vars:     Size  Location     Type
 28579 ;;		None
 28580 ;; Return value:  Size  Location     Type
 28581 ;;                  1    wreg      void 
 28582 ;; Registers used:
 28583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28584 ;; Tracked objects:
 28585 ;;		On entry : 0/0
 28586 ;;		On exit  : 0/0
 28587 ;;		Unchanged: 0/0
 28588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28593 ;;Total ram usage:        0 bytes
 28594 ;; Hardware stack levels used:    1
 28595 ;; Hardware stack levels required when called:    5
 28596 ;; This function calls:
 28597 ;;		_ads1115_init
 28598 ;; This function is called by:
 28599 ;;		_main
 28600 ;; This function uses a non-reentrant model
 28601 ;;
 28602                           
 28603                           	psect	text130
 28604  007538                     __ptext130:
 28605                           	opt stack 0
 28606  007538                     _ads1115_init_all_chip:
 28607                           	opt stack 25
 28608                           
 28609                           ;ads1115.c: 115: pAds1115PrObj= &ads1115Chip0;
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;incstack = 0
 28613  007538  0E8C               	movlw	low _ads1115Chip0
 28614  00753A  6E21               	movwf	_pAds1115PrObj,c
 28615  00753C  0E01               	movlw	high _ads1115Chip0
 28616  00753E  6E22               	movwf	_pAds1115PrObj+1,c
 28617                           
 28618                           ;ads1115.c: 116: ads1115_init(pAds1115PrObj,(0x90));
 28619  007540  C021  F060         	movff	_pAds1115PrObj,ads1115_init@pAds1115
 28620  007544  C022  F061         	movff	_pAds1115PrObj+1,ads1115_init@pAds1115+1
 28621  007548  0E90               	movlw	144
 28622  00754A  0100               	movlb	0	; () banked
 28623  00754C  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 28624  00754E  EC19  F02F         	call	_ads1115_init	;wreg free
 28625                           
 28626                           ;ads1115.c: 118: pAds1115DiffPrObj=&ads1115Chip1;
 28627  007552  0EA2               	movlw	low _ads1115Chip1
 28628  007554  6E23               	movwf	_pAds1115DiffPrObj,c
 28629  007556  0E02               	movlw	high _ads1115Chip1
 28630  007558  6E24               	movwf	_pAds1115DiffPrObj+1,c
 28631                           
 28632                           ;ads1115.c: 119: ads1115_init(pAds1115DiffPrObj,(0x92));
 28633  00755A  C023  F060         	movff	_pAds1115DiffPrObj,ads1115_init@pAds1115
 28634  00755E  C024  F061         	movff	_pAds1115DiffPrObj+1,ads1115_init@pAds1115+1
 28635  007562  0E92               	movlw	146
 28636  007564  0100               	movlb	0	; () banked
 28637  007566  6F62               	movwf	ads1115_init@slvaddr& (0+255),b
 28638  007568  EC19  F02F         	call	_ads1115_init	;wreg free
 28639  00756C  0012               	return		;funcret
 28640  00756E                     __end_of_ads1115_init_all_chip:
 28641                           	opt stack 0
 28642                           tosu	equ	0xFFF
 28643                           tosh	equ	0xFFE
 28644                           tosl	equ	0xFFD
 28645                           pclath	equ	0xFFA
 28646                           tblptru	equ	0xFF8
 28647                           tblptrh	equ	0xFF7
 28648                           tblptrl	equ	0xFF6
 28649                           tablat	equ	0xFF5
 28650                           prodh	equ	0xFF4
 28651                           prodl	equ	0xFF3
 28652                           intcon	equ	0xFF2
 28653                           indf0	equ	0xFEF
 28654                           postinc0	equ	0xFEE
 28655                           fsr0h	equ	0xFEA
 28656                           fsr0l	equ	0xFE9
 28657                           wreg	equ	0xFE8
 28658                           postinc1	equ	0xFE6
 28659                           postdec1	equ	0xFE5
 28660                           plusw1	equ	0xFE3
 28661                           fsr1h	equ	0xFE2
 28662                           fsr1l	equ	0xFE1
 28663                           indf2	equ	0xFDF
 28664                           postinc2	equ	0xFDE
 28665                           postdec2	equ	0xFDD
 28666                           plusw2	equ	0xFDB
 28667                           fsr2h	equ	0xFDA
 28668                           fsr2l	equ	0xFD9
 28669                           status	equ	0xFD8
 28670                           
 28671 ;; *************** function _ads1115_init *****************
 28672 ;; Defined at:
 28673 ;;		line 5 in file "src/driver/ads1115.c"
 28674 ;; Parameters:    Size  Location     Type
 28675 ;;  pAds1115        2    0[BANK0 ] PTR struct .
 28676 ;;		 -> ads1115Chip1(16), ads1115Chip0(16), NULL(0), 
 28677 ;;  slvaddr         1    2[BANK0 ] unsigned char 
 28678 ;; Auto vars:     Size  Location     Type
 28679 ;;		None
 28680 ;; Return value:  Size  Location     Type
 28681 ;;                  1    wreg      void 
 28682 ;; Registers used:
 28683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28684 ;; Tracked objects:
 28685 ;;		On entry : 0/0
 28686 ;;		On exit  : 0/0
 28687 ;;		Unchanged: 0/0
 28688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28689 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28692 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28693 ;;Total ram usage:        3 bytes
 28694 ;; Hardware stack levels used:    1
 28695 ;; Hardware stack levels required when called:    4
 28696 ;; This function calls:
 28697 ;;		Nothing
 28698 ;; This function is called by:
 28699 ;;		_ads1115_init_all_chip
 28700 ;; This function uses a non-reentrant model
 28701 ;;
 28702                           
 28703                           	psect	text131
 28704  005E32                     __ptext131:
 28705                           	opt stack 0
 28706  005E32                     _ads1115_init:
 28707                           	opt stack 25
 28708                           
 28709                           ;ads1115.c: 7: pAds1115->chip=ADS1115;
 28710                           
 28711                           ;incstack = 0
 28712  005E32  C060  FFD9         	movff	ads1115_init@pAds1115,fsr2l
 28713  005E36  C061  FFDA         	movff	ads1115_init@pAds1115+1,fsr2h
 28714  005E3A  0E05               	movlw	5
 28715  005E3C  6EDF               	movwf	indf2,c
 28716                           
 28717                           ;ads1115.c: 8: pAds1115->slaveAddr=slvaddr;
 28718  005E3E  0100               	movlb	0	; () banked
 28719  005E40  EE20 F001          	lfsr	2,1
 28720  005E44  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 28721  005E46  26D9               	addwf	fsr2l,f,c
 28722  005E48  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 28723  005E4A  22DA               	addwfc	fsr2h,f,c
 28724  005E4C  C062  FFDF         	movff	ads1115_init@slvaddr,indf2
 28725                           
 28726                           ; BSR set to: 0
 28727                           ;ads1115.c: 9: pAds1115->config.data=0x8583;;
 28728  005E50  0100               	movlb	0	; () banked
 28729  005E52  EE20 F002          	lfsr	2,2
 28730  005E56  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 28731  005E58  26D9               	addwf	fsr2l,f,c
 28732  005E5A  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 28733  005E5C  22DA               	addwfc	fsr2h,f,c
 28734  005E5E  0E83               	movlw	131
 28735  005E60  6EDE               	movwf	postinc2,c
 28736  005E62  0E85               	movlw	133
 28737  005E64  6EDD               	movwf	postdec2,c
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;ads1115.c: 10: pAds1115->iic_start=iic_start;
 28741  005E66  0100               	movlb	0	; () banked
 28742  005E68  EE20 F006          	lfsr	2,6
 28743  005E6C  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 28744  005E6E  26D9               	addwf	fsr2l,f,c
 28745  005E70  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 28746  005E72  22DA               	addwfc	fsr2h,f,c
 28747  005E74  0E34               	movlw	low _iic_start
 28748  005E76  6EDE               	movwf	postinc2,c
 28749  005E78  0E73               	movlw	high _iic_start
 28750  005E7A  6EDD               	movwf	postdec2,c
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;ads1115.c: 11: pAds1115->iic_stop=iic_stop;
 28754  005E7C  0100               	movlb	0	; () banked
 28755  005E7E  EE20 F008          	lfsr	2,8
 28756  005E82  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 28757  005E84  26D9               	addwf	fsr2l,f,c
 28758  005E86  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 28759  005E88  22DA               	addwfc	fsr2h,f,c
 28760  005E8A  0EEA               	movlw	low _iic_stop
 28761  005E8C  6EDE               	movwf	postinc2,c
 28762  005E8E  0E73               	movlw	high _iic_stop
 28763  005E90  6EDD               	movwf	postdec2,c
 28764                           
 28765                           ; BSR set to: 0
 28766                           ;ads1115.c: 12: pAds1115->iic_send_byte=iic_send_byte;
 28767  005E92  0100               	movlb	0	; () banked
 28768  005E94  EE20 F00A          	lfsr	2,10
 28769  005E98  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 28770  005E9A  26D9               	addwf	fsr2l,f,c
 28771  005E9C  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 28772  005E9E  22DA               	addwfc	fsr2h,f,c
 28773  005EA0  0E1C               	movlw	low _iic_send_byte
 28774  005EA2  6EDE               	movwf	postinc2,c
 28775  005EA4  0E6B               	movlw	high _iic_send_byte
 28776  005EA6  6EDD               	movwf	postdec2,c
 28777                           
 28778                           ; BSR set to: 0
 28779                           ;ads1115.c: 13: pAds1115->iic_waite_ack=iic_waite_ack;
 28780  005EA8  0100               	movlb	0	; () banked
 28781  005EAA  EE20 F00C          	lfsr	2,12
 28782  005EAE  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 28783  005EB0  26D9               	addwf	fsr2l,f,c
 28784  005EB2  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 28785  005EB4  22DA               	addwfc	fsr2h,f,c
 28786  005EB6  0E40               	movlw	low _iic_waite_ack
 28787  005EB8  6EDE               	movwf	postinc2,c
 28788  005EBA  0E6E               	movlw	high _iic_waite_ack
 28789  005EBC  6EDD               	movwf	postdec2,c
 28790                           
 28791                           ; BSR set to: 0
 28792                           ;ads1115.c: 14: pAds1115->iic_received_byte_if_ack=iic_received_byte_if_ack;
 28793  005EBE  0100               	movlb	0	; () banked
 28794  005EC0  EE20 F00E          	lfsr	2,14
 28795  005EC4  5160               	movf	ads1115_init@pAds1115& (0+255),w,b
 28796  005EC6  26D9               	addwf	fsr2l,f,c
 28797  005EC8  5161               	movf	(ads1115_init@pAds1115+1)& (0+255),w,b
 28798  005ECA  22DA               	addwfc	fsr2h,f,c
 28799  005ECC  0E3E               	movlw	low _iic_received_byte_if_ack
 28800  005ECE  6EDE               	movwf	postinc2,c
 28801  005ED0  0E78               	movlw	high _iic_received_byte_if_ack
 28802  005ED2  6EDD               	movwf	postdec2,c
 28803                           
 28804                           ; BSR set to: 0
 28805  005ED4  0012               	return		;funcret
 28806  005ED6                     __end_of_ads1115_init:
 28807                           	opt stack 0
 28808                           tosu	equ	0xFFF
 28809                           tosh	equ	0xFFE
 28810                           tosl	equ	0xFFD
 28811                           pclath	equ	0xFFA
 28812                           tblptru	equ	0xFF8
 28813                           tblptrh	equ	0xFF7
 28814                           tblptrl	equ	0xFF6
 28815                           tablat	equ	0xFF5
 28816                           prodh	equ	0xFF4
 28817                           prodl	equ	0xFF3
 28818                           intcon	equ	0xFF2
 28819                           indf0	equ	0xFEF
 28820                           postinc0	equ	0xFEE
 28821                           fsr0h	equ	0xFEA
 28822                           fsr0l	equ	0xFE9
 28823                           wreg	equ	0xFE8
 28824                           postinc1	equ	0xFE6
 28825                           postdec1	equ	0xFE5
 28826                           plusw1	equ	0xFE3
 28827                           fsr1h	equ	0xFE2
 28828                           fsr1l	equ	0xFE1
 28829                           indf2	equ	0xFDF
 28830                           postinc2	equ	0xFDE
 28831                           postdec2	equ	0xFDD
 28832                           plusw2	equ	0xFDB
 28833                           fsr2h	equ	0xFDA
 28834                           fsr2l	equ	0xFD9
 28835                           status	equ	0xFD8
 28836                           
 28837 ;; *************** function _handler_interrupt_low *****************
 28838 ;; Defined at:
 28839 ;;		line 38 in file "src/soc/int.c"
 28840 ;; Parameters:    Size  Location     Type
 28841 ;;		None
 28842 ;; Auto vars:     Size  Location     Type
 28843 ;;		None
 28844 ;; Return value:  Size  Location     Type
 28845 ;;                  1    wreg      void 
 28846 ;; Registers used:
 28847 ;;		wreg, status,2, status,0, cstack
 28848 ;; Tracked objects:
 28849 ;;		On entry : 0/0
 28850 ;;		On exit  : 0/0
 28851 ;;		Unchanged: 0/0
 28852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28855 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28856 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28857 ;;Total ram usage:       17 bytes
 28858 ;; Hardware stack levels used:    1
 28859 ;; Hardware stack levels required when called:    3
 28860 ;; This function calls:
 28861 ;;		_rtc_alrm_irq_hook
 28862 ;;		_sys_ticker_irq_hook
 28863 ;; This function is called by:
 28864 ;;		Interrupt level 1
 28865 ;; This function uses a non-reentrant model
 28866 ;;
 28867                           
 28868                           	psect	intcodelo
 28869  000018                     __pintcodelo:
 28870                           	opt stack 0
 28871  000018                     _handler_interrupt_low:
 28872                           	opt stack 16
 28873                           
 28874                           ; BSR set to: 0
 28875                           ;incstack = 0
 28876  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 28877  00001A  CFD8 F00F          	movff	status,??_handler_interrupt_low
 28878  00001E  CFE8 F010          	movff	wreg,??_handler_interrupt_low+1
 28879  000022  CFE0 F011          	movff	bsr,??_handler_interrupt_low+2
 28880  000026  CFFA F012          	movff	pclath,??_handler_interrupt_low+3
 28881  00002A  CFFB F013          	movff	pclatu,??_handler_interrupt_low+4
 28882  00002E  CFE9 F014          	movff	fsr0l,??_handler_interrupt_low+5
 28883  000032  CFEA F015          	movff	fsr0h,??_handler_interrupt_low+6
 28884  000036  CFE1 F016          	movff	fsr1l,??_handler_interrupt_low+7
 28885  00003A  CFE2 F017          	movff	fsr1h,??_handler_interrupt_low+8
 28886  00003E  CFD9 F018          	movff	fsr2l,??_handler_interrupt_low+9
 28887  000042  CFDA F019          	movff	fsr2h,??_handler_interrupt_low+10
 28888  000046  CFF3 F01A          	movff	prodl,??_handler_interrupt_low+11
 28889  00004A  CFF4 F01B          	movff	prodh,??_handler_interrupt_low+12
 28890  00004E  CFF6 F01C          	movff	tblptrl,??_handler_interrupt_low+13
 28891  000052  CFF7 F01D          	movff	tblptrh,??_handler_interrupt_low+14
 28892  000056  CFF8 F01E          	movff	tblptru,??_handler_interrupt_low+15
 28893  00005A  CFF5 F01F          	movff	tablat,??_handler_interrupt_low+16
 28894                           
 28895                           ;int.c: 40: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && (!IPR1bits.TMR2IP)){
 28896  00005E  B29D               	btfsc	3997,1,c	;volatile
 28897  000060  A29E               	btfss	3998,1,c	;volatile
 28898  000062  D00D               	goto	i1l10050
 28899  000064  B29F               	btfsc	3999,1,c	;volatile
 28900  000066  D00B               	goto	i1l10050
 28901                           
 28902                           ;int.c: 41: PIR1bits.TMR2IF=0;
 28903  000068  929E               	bcf	3998,1,c	;volatile
 28904                           
 28905                           ;int.c: 42: glTicker++;
 28906  00006A  0E01               	movlw	1
 28907  00006C  0101               	movlb	1	; () banked
 28908  00006E  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 28909  000070  0E00               	movlw	0
 28910  000072  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 28911  000074  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 28912  000076  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 28913                           
 28914                           ; BSR set to: 1
 28915                           ;int.c: 43: glbEvent |= (1<<0);
 28916  000078  802F               	bsf	_glbEvent,0,c	;volatile
 28917                           
 28918                           ; BSR set to: 1
 28919                           ;int.c: 44: sys_ticker_irq_hook();
 28920  00007A  EC4B  F03C         	call	_sys_ticker_irq_hook	;wreg free
 28921  00007E                     i1l10050:
 28922                           
 28923                           ;int.c: 45: }
 28924                           ;int.c: 46: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && (!(IPR3bits.RTCCIP))){
 28925  00007E  B0A3               	btfsc	4003,0,c	;volatile
 28926  000080  A0A4               	btfss	4004,0,c	;volatile
 28927  000082  D006               	goto	i1l1686
 28928  000084  B0A5               	btfsc	4005,0,c	;volatile
 28929  000086  D004               	goto	i1l1686
 28930                           
 28931                           ;int.c: 47: PIR3bits.RTCCIF=0;
 28932  000088  90A4               	bcf	4004,0,c	;volatile
 28933                           
 28934                           ;int.c: 48: glbEvent |= (1<<1);
 28935  00008A  822F               	bsf	_glbEvent,1,c	;volatile
 28936                           
 28937                           ;int.c: 49: rtc_alrm_irq_hook();
 28938  00008C  ECA9  F03C         	call	_rtc_alrm_irq_hook	;wreg free
 28939  000090                     i1l1686:
 28940  000090  C01F  FFF5         	movff	??_handler_interrupt_low+16,tablat
 28941  000094  C01E  FFF8         	movff	??_handler_interrupt_low+15,tblptru
 28942  000098  C01D  FFF7         	movff	??_handler_interrupt_low+14,tblptrh
 28943  00009C  C01C  FFF6         	movff	??_handler_interrupt_low+13,tblptrl
 28944  0000A0  C01B  FFF4         	movff	??_handler_interrupt_low+12,prodh
 28945  0000A4  C01A  FFF3         	movff	??_handler_interrupt_low+11,prodl
 28946  0000A8  C019  FFDA         	movff	??_handler_interrupt_low+10,fsr2h
 28947  0000AC  C018  FFD9         	movff	??_handler_interrupt_low+9,fsr2l
 28948  0000B0  C017  FFE2         	movff	??_handler_interrupt_low+8,fsr1h
 28949  0000B4  C016  FFE1         	movff	??_handler_interrupt_low+7,fsr1l
 28950  0000B8  C015  FFEA         	movff	??_handler_interrupt_low+6,fsr0h
 28951  0000BC  C014  FFE9         	movff	??_handler_interrupt_low+5,fsr0l
 28952  0000C0  C013  FFFB         	movff	??_handler_interrupt_low+4,pclatu
 28953  0000C4  C012  FFFA         	movff	??_handler_interrupt_low+3,pclath
 28954  0000C8  C011  FFE0         	movff	??_handler_interrupt_low+2,bsr
 28955  0000CC  C010  FFE8         	movff	??_handler_interrupt_low+1,wreg
 28956  0000D0  C00F  FFD8         	movff	??_handler_interrupt_low,status
 28957  0000D4  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 28958  0000D6  0010               	retfie	
 28959  0000D8                     __end_of_handler_interrupt_low:
 28960                           	opt stack 0
 28961                           tosu	equ	0xFFF
 28962                           tosh	equ	0xFFE
 28963                           tosl	equ	0xFFD
 28964                           pclatu	equ	0xFFB
 28965                           pclath	equ	0xFFA
 28966                           tblptru	equ	0xFF8
 28967                           tblptrh	equ	0xFF7
 28968                           tblptrl	equ	0xFF6
 28969                           tablat	equ	0xFF5
 28970                           prodh	equ	0xFF4
 28971                           prodl	equ	0xFF3
 28972                           intcon	equ	0xFF2
 28973                           indf0	equ	0xFEF
 28974                           postinc0	equ	0xFEE
 28975                           fsr0h	equ	0xFEA
 28976                           fsr0l	equ	0xFE9
 28977                           wreg	equ	0xFE8
 28978                           postinc1	equ	0xFE6
 28979                           postdec1	equ	0xFE5
 28980                           plusw1	equ	0xFE3
 28981                           fsr1h	equ	0xFE2
 28982                           fsr1l	equ	0xFE1
 28983                           bsr	equ	0xFE0
 28984                           indf2	equ	0xFDF
 28985                           postinc2	equ	0xFDE
 28986                           postdec2	equ	0xFDD
 28987                           plusw2	equ	0xFDB
 28988                           fsr2h	equ	0xFDA
 28989                           fsr2l	equ	0xFD9
 28990                           status	equ	0xFD8
 28991                           
 28992 ;; *************** function _sys_ticker_irq_hook *****************
 28993 ;; Defined at:
 28994 ;;		line 38 in file "src/soc/ticker.c"
 28995 ;; Parameters:    Size  Location     Type
 28996 ;;		None
 28997 ;; Auto vars:     Size  Location     Type
 28998 ;;		None
 28999 ;; Return value:  Size  Location     Type
 29000 ;;                  1    wreg      void 
 29001 ;; Registers used:
 29002 ;;		wreg, status,2, status,0
 29003 ;; Tracked objects:
 29004 ;;		On entry : 0/0
 29005 ;;		On exit  : 0/0
 29006 ;;		Unchanged: 0/0
 29007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29012 ;;Total ram usage:        0 bytes
 29013 ;; Hardware stack levels used:    1
 29014 ;; Hardware stack levels required when called:    2
 29015 ;; This function calls:
 29016 ;;		Nothing
 29017 ;; This function is called by:
 29018 ;;		_handler_interrupt_low
 29019 ;; This function uses a non-reentrant model
 29020 ;;
 29021                           
 29022                           	psect	text133
 29023  007896                     __ptext133:
 29024                           	opt stack 0
 29025  007896                     _sys_ticker_irq_hook:
 29026                           	opt stack 16
 29027                           
 29028                           ;ticker.c: 40: if(dlyTickerEn){
 29029                           
 29030                           ;incstack = 0
 29031  007896  502D               	movf	_dlyTickerEn,w,c
 29032  007898  B4D8               	btfsc	status,2,c
 29033  00789A  D005               	goto	i1l1785
 29034                           
 29035                           ;ticker.c: 41: dlyTicker+=10;
 29036  00789C  0E0A               	movlw	10
 29037  00789E  0101               	movlb	1	; () banked
 29038  0078A0  276E               	addwf	_dlyTicker& (0+255),f,b
 29039  0078A2  0E00               	movlw	0
 29040  0078A4  236F               	addwfc	(_dlyTicker+1)& (0+255),f,b
 29041  0078A6                     i1l1785:
 29042                           
 29043                           ;ticker.c: 42: }
 29044                           ;ticker.c: 43: userTicker_ms+=10;
 29045  0078A6  0E0A               	movlw	10
 29046  0078A8  2625               	addwf	_userTicker_ms,f,c	;volatile
 29047  0078AA  0E00               	movlw	0
 29048  0078AC  2226               	addwfc	_userTicker_ms+1,f,c	;volatile
 29049  0078AE  0012               	return		;funcret
 29050  0078B0                     __end_of_sys_ticker_irq_hook:
 29051                           	opt stack 0
 29052                           tosu	equ	0xFFF
 29053                           tosh	equ	0xFFE
 29054                           tosl	equ	0xFFD
 29055                           pclatu	equ	0xFFB
 29056                           pclath	equ	0xFFA
 29057                           tblptru	equ	0xFF8
 29058                           tblptrh	equ	0xFF7
 29059                           tblptrl	equ	0xFF6
 29060                           tablat	equ	0xFF5
 29061                           prodh	equ	0xFF4
 29062                           prodl	equ	0xFF3
 29063                           intcon	equ	0xFF2
 29064                           indf0	equ	0xFEF
 29065                           postinc0	equ	0xFEE
 29066                           fsr0h	equ	0xFEA
 29067                           fsr0l	equ	0xFE9
 29068                           wreg	equ	0xFE8
 29069                           postinc1	equ	0xFE6
 29070                           postdec1	equ	0xFE5
 29071                           plusw1	equ	0xFE3
 29072                           fsr1h	equ	0xFE2
 29073                           fsr1l	equ	0xFE1
 29074                           bsr	equ	0xFE0
 29075                           indf2	equ	0xFDF
 29076                           postinc2	equ	0xFDE
 29077                           postdec2	equ	0xFDD
 29078                           plusw2	equ	0xFDB
 29079                           fsr2h	equ	0xFDA
 29080                           fsr2l	equ	0xFD9
 29081                           status	equ	0xFD8
 29082                           
 29083 ;; *************** function _rtc_alrm_irq_hook *****************
 29084 ;; Defined at:
 29085 ;;		line 103 in file "src/soc/rtc.c"
 29086 ;; Parameters:    Size  Location     Type
 29087 ;;		None
 29088 ;; Auto vars:     Size  Location     Type
 29089 ;;		None
 29090 ;; Return value:  Size  Location     Type
 29091 ;;                  1    wreg      void 
 29092 ;; Registers used:
 29093 ;;		None
 29094 ;; Tracked objects:
 29095 ;;		On entry : 0/0
 29096 ;;		On exit  : 0/0
 29097 ;;		Unchanged: 0/0
 29098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29103 ;;Total ram usage:        0 bytes
 29104 ;; Hardware stack levels used:    1
 29105 ;; Hardware stack levels required when called:    2
 29106 ;; This function calls:
 29107 ;;		Nothing
 29108 ;; This function is called by:
 29109 ;;		_handler_interrupt_low
 29110 ;; This function uses a non-reentrant model
 29111 ;;
 29112                           
 29113                           	psect	text134
 29114  007952                     __ptext134:
 29115                           	opt stack 0
 29116  007952                     _rtc_alrm_irq_hook:
 29117                           	opt stack 16
 29118                           
 29119                           ;incstack = 0
 29120  007952  0012               	return		;funcret
 29121  007954                     __end_of_rtc_alrm_irq_hook:
 29122                           	opt stack 0
 29123                           tosu	equ	0xFFF
 29124                           tosh	equ	0xFFE
 29125                           tosl	equ	0xFFD
 29126                           pclatu	equ	0xFFB
 29127                           pclath	equ	0xFFA
 29128                           tblptru	equ	0xFF8
 29129                           tblptrh	equ	0xFF7
 29130                           tblptrl	equ	0xFF6
 29131                           tablat	equ	0xFF5
 29132                           prodh	equ	0xFF4
 29133                           prodl	equ	0xFF3
 29134                           intcon	equ	0xFF2
 29135                           indf0	equ	0xFEF
 29136                           postinc0	equ	0xFEE
 29137                           fsr0h	equ	0xFEA
 29138                           fsr0l	equ	0xFE9
 29139                           wreg	equ	0xFE8
 29140                           postinc1	equ	0xFE6
 29141                           postdec1	equ	0xFE5
 29142                           plusw1	equ	0xFE3
 29143                           fsr1h	equ	0xFE2
 29144                           fsr1l	equ	0xFE1
 29145                           bsr	equ	0xFE0
 29146                           indf2	equ	0xFDF
 29147                           postinc2	equ	0xFDE
 29148                           postdec2	equ	0xFDD
 29149                           plusw2	equ	0xFDB
 29150                           fsr2h	equ	0xFDA
 29151                           fsr2l	equ	0xFD9
 29152                           status	equ	0xFD8
 29153                           
 29154 ;; *************** function _handler_interrupt_hight *****************
 29155 ;; Defined at:
 29156 ;;		line 9 in file "src/soc/int.c"
 29157 ;; Parameters:    Size  Location     Type
 29158 ;;		None
 29159 ;; Auto vars:     Size  Location     Type
 29160 ;;		None
 29161 ;; Return value:  Size  Location     Type
 29162 ;;                  1    wreg      void 
 29163 ;; Registers used:
 29164 ;;		wreg, status,2, status,0, cstack
 29165 ;; Tracked objects:
 29166 ;;		On entry : 0/0
 29167 ;;		On exit  : 0/0
 29168 ;;		Unchanged: 0/0
 29169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29172 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29173 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29174 ;;Total ram usage:       14 bytes
 29175 ;; Hardware stack levels used:    1
 29176 ;; Hardware stack levels required when called:    1
 29177 ;; This function calls:
 29178 ;;		i2_rtc_alrm_irq_hook
 29179 ;;		i2_sys_ticker_irq_hook
 29180 ;; This function is called by:
 29181 ;;		Interrupt level 2
 29182 ;; This function uses a non-reentrant model
 29183 ;;
 29184                           
 29185                           	psect	intcode
 29186  000008                     __pintcode:
 29187                           	opt stack 0
 29188  000008                     _handler_interrupt_hight:
 29189                           	opt stack 16
 29190                           
 29191                           ;incstack = 0
 29192  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 29193  00000A  EF8C  F02C         	goto	int_func
 29194                           tosu	equ	0xFFF
 29195                           tosh	equ	0xFFE
 29196                           tosl	equ	0xFFD
 29197                           pclatu	equ	0xFFB
 29198                           pclath	equ	0xFFA
 29199                           tblptru	equ	0xFF8
 29200                           tblptrh	equ	0xFF7
 29201                           tblptrl	equ	0xFF6
 29202                           tablat	equ	0xFF5
 29203                           prodh	equ	0xFF4
 29204                           prodl	equ	0xFF3
 29205                           intcon	equ	0xFF2
 29206                           indf0	equ	0xFEF
 29207                           postinc0	equ	0xFEE
 29208                           fsr0h	equ	0xFEA
 29209                           fsr0l	equ	0xFE9
 29210                           wreg	equ	0xFE8
 29211                           postinc1	equ	0xFE6
 29212                           postdec1	equ	0xFE5
 29213                           plusw1	equ	0xFE3
 29214                           fsr1h	equ	0xFE2
 29215                           fsr1l	equ	0xFE1
 29216                           bsr	equ	0xFE0
 29217                           indf2	equ	0xFDF
 29218                           postinc2	equ	0xFDE
 29219                           postdec2	equ	0xFDD
 29220                           plusw2	equ	0xFDB
 29221                           fsr2h	equ	0xFDA
 29222                           fsr2l	equ	0xFD9
 29223                           status	equ	0xFD8
 29224                           
 29225                           	psect	intcode_body
 29226  005918                     __pintcode_body:
 29227                           	opt stack 16
 29228  005918                     int_func:
 29229                           	opt stack 16
 29230  005918  CFFA F001          	movff	pclath,??_handler_interrupt_hight
 29231  00591C  CFFB F002          	movff	pclatu,??_handler_interrupt_hight+1
 29232  005920  CFE9 F003          	movff	fsr0l,??_handler_interrupt_hight+2
 29233  005924  CFEA F004          	movff	fsr0h,??_handler_interrupt_hight+3
 29234  005928  CFE1 F005          	movff	fsr1l,??_handler_interrupt_hight+4
 29235  00592C  CFE2 F006          	movff	fsr1h,??_handler_interrupt_hight+5
 29236  005930  CFD9 F007          	movff	fsr2l,??_handler_interrupt_hight+6
 29237  005934  CFDA F008          	movff	fsr2h,??_handler_interrupt_hight+7
 29238  005938  CFF3 F009          	movff	prodl,??_handler_interrupt_hight+8
 29239  00593C  CFF4 F00A          	movff	prodh,??_handler_interrupt_hight+9
 29240  005940  CFF6 F00B          	movff	tblptrl,??_handler_interrupt_hight+10
 29241  005944  CFF7 F00C          	movff	tblptrh,??_handler_interrupt_hight+11
 29242  005948  CFF8 F00D          	movff	tblptru,??_handler_interrupt_hight+12
 29243  00594C  CFF5 F00E          	movff	tablat,??_handler_interrupt_hight+13
 29244                           
 29245                           ;int.c: 11: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF && INTCON2bits.TMR0IP){
 29246  005950  BAF2               	btfsc	intcon,5,c	;volatile
 29247  005952  A4F2               	btfss	intcon,2,c	;volatile
 29248  005954  D002               	goto	i2l1675
 29249  005956  B4F1               	btfsc	intcon2,2,c	;volatile
 29250                           
 29251                           ;int.c: 13: __nop();
 29252  005958  F000               	nop	
 29253  00595A                     i2l1675:
 29254                           
 29255                           ;int.c: 14: }
 29256                           ;int.c: 15: if(INTCONbits.PEIE && PIE1bits.TX1IE && PIR1bits.TX1IF){
 29257  00595A  BCF2               	btfsc	intcon,6,c	;volatile
 29258  00595C  A89D               	btfss	3997,4,c	;volatile
 29259  00595E  D001               	goto	i2l1676
 29260  005960  509E               	movf	3998,w,c	;volatile
 29261  005962                     i2l1676:
 29262                           
 29263                           ;int.c: 17: }
 29264                           ;int.c: 18: if(INTCONbits.PEIE && PIE1bits.RC1IE && PIR1bits.RC1IF ){
 29265  005962  BCF2               	btfsc	intcon,6,c	;volatile
 29266  005964  AA9D               	btfss	3997,5,c	;volatile
 29267  005966  D001               	goto	i2l1677
 29268  005968  509E               	movf	3998,w,c	;volatile
 29269  00596A                     i2l1677:
 29270                           
 29271                           ;int.c: 20: }
 29272                           ;int.c: 21: if(INTCONbits.PEIE && PIE1bits.TMR1IE && PIR1bits.TMR1IF ){
 29273  00596A  BCF2               	btfsc	intcon,6,c	;volatile
 29274  00596C  A09D               	btfss	3997,0,c	;volatile
 29275  00596E  D001               	goto	i2l1678
 29276  005970  509E               	movf	3998,w,c	;volatile
 29277  005972                     i2l1678:
 29278                           
 29279                           ;int.c: 23: }
 29280                           ;int.c: 25: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF && IPR1bits.TMR2IP){
 29281  005972  B29D               	btfsc	3997,1,c	;volatile
 29282  005974  A29E               	btfss	3998,1,c	;volatile
 29283  005976  D00D               	goto	i2l10024
 29284  005978  A29F               	btfss	3999,1,c	;volatile
 29285  00597A  D00B               	goto	i2l10024
 29286                           
 29287                           ;int.c: 26: PIR1bits.TMR2IF=0;
 29288  00597C  929E               	bcf	3998,1,c	;volatile
 29289                           
 29290                           ;int.c: 27: glTicker++;
 29291  00597E  0E01               	movlw	1
 29292  005980  0101               	movlb	1	; () banked
 29293  005982  273A               	addwf	_glTicker& (0+255),f,b	;volatile
 29294  005984  0E00               	movlw	0
 29295  005986  233B               	addwfc	(_glTicker+1)& (0+255),f,b	;volatile
 29296  005988  233C               	addwfc	(_glTicker+2)& (0+255),f,b	;volatile
 29297  00598A  233D               	addwfc	(_glTicker+3)& (0+255),f,b	;volatile
 29298                           
 29299                           ; BSR set to: 1
 29300                           ;int.c: 28: glbEvent |= (1<<0);
 29301  00598C  802F               	bsf	_glbEvent,0,c	;volatile
 29302                           
 29303                           ; BSR set to: 1
 29304                           ;int.c: 29: sys_ticker_irq_hook();
 29305  00598E  EC58  F03C         	call	i2_sys_ticker_irq_hook	;wreg free
 29306  005992                     i2l10024:
 29307                           
 29308                           ;int.c: 30: }
 29309                           ;int.c: 31: if(PIE3bits.RTCCIE && PIR3bits.RTCCIF && IPR3bits.RTCCIP){
 29310  005992  B0A3               	btfsc	4003,0,c	;volatile
 29311  005994  A0A4               	btfss	4004,0,c	;volatile
 29312  005996  D006               	goto	i2l1681
 29313  005998  A0A5               	btfss	4005,0,c	;volatile
 29314  00599A  D004               	goto	i2l1681
 29315                           
 29316                           ;int.c: 32: PIR3bits.RTCCIF=0;
 29317  00599C  90A4               	bcf	4004,0,c	;volatile
 29318                           
 29319                           ;int.c: 33: glbEvent |= (1<<1);
 29320  00599E  822F               	bsf	_glbEvent,1,c	;volatile
 29321                           
 29322                           ;int.c: 34: rtc_alrm_irq_hook();
 29323  0059A0  ECAA  F03C         	call	i2_rtc_alrm_irq_hook	;wreg free
 29324  0059A4                     i2l1681:
 29325  0059A4  C00E  FFF5         	movff	??_handler_interrupt_hight+13,tablat
 29326  0059A8  C00D  FFF8         	movff	??_handler_interrupt_hight+12,tblptru
 29327  0059AC  C00C  FFF7         	movff	??_handler_interrupt_hight+11,tblptrh
 29328  0059B0  C00B  FFF6         	movff	??_handler_interrupt_hight+10,tblptrl
 29329  0059B4  C00A  FFF4         	movff	??_handler_interrupt_hight+9,prodh
 29330  0059B8  C009  FFF3         	movff	??_handler_interrupt_hight+8,prodl
 29331  0059BC  C008  FFDA         	movff	??_handler_interrupt_hight+7,fsr2h
 29332  0059C0  C007  FFD9         	movff	??_handler_interrupt_hight+6,fsr2l
 29333  0059C4  C006  FFE2         	movff	??_handler_interrupt_hight+5,fsr1h
 29334  0059C8  C005  FFE1         	movff	??_handler_interrupt_hight+4,fsr1l
 29335  0059CC  C004  FFEA         	movff	??_handler_interrupt_hight+3,fsr0h
 29336  0059D0  C003  FFE9         	movff	??_handler_interrupt_hight+2,fsr0l
 29337  0059D4  C002  FFFB         	movff	??_handler_interrupt_hight+1,pclatu
 29338  0059D8  C001  FFFA         	movff	??_handler_interrupt_hight,pclath
 29339  0059DC  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 29340  0059DE  0011               	retfie		f
 29341  0059E0                     __end_of_handler_interrupt_hight:
 29342                           	opt stack 0
 29343                           tosu	equ	0xFFF
 29344                           tosh	equ	0xFFE
 29345                           tosl	equ	0xFFD
 29346                           pclatu	equ	0xFFB
 29347                           pclath	equ	0xFFA
 29348                           tblptru	equ	0xFF8
 29349                           tblptrh	equ	0xFF7
 29350                           tblptrl	equ	0xFF6
 29351                           tablat	equ	0xFF5
 29352                           prodh	equ	0xFF4
 29353                           prodl	equ	0xFF3
 29354                           intcon	equ	0xFF2
 29355                           intcon2	equ	0xFF1
 29356                           indf0	equ	0xFEF
 29357                           postinc0	equ	0xFEE
 29358                           fsr0h	equ	0xFEA
 29359                           fsr0l	equ	0xFE9
 29360                           wreg	equ	0xFE8
 29361                           postinc1	equ	0xFE6
 29362                           postdec1	equ	0xFE5
 29363                           plusw1	equ	0xFE3
 29364                           fsr1h	equ	0xFE2
 29365                           fsr1l	equ	0xFE1
 29366                           bsr	equ	0xFE0
 29367                           indf2	equ	0xFDF
 29368                           postinc2	equ	0xFDE
 29369                           postdec2	equ	0xFDD
 29370                           plusw2	equ	0xFDB
 29371                           fsr2h	equ	0xFDA
 29372                           fsr2l	equ	0xFD9
 29373                           status	equ	0xFD8
 29374                           
 29375 ;; *************** function i2_sys_ticker_irq_hook *****************
 29376 ;; Defined at:
 29377 ;;		line 38 in file "src/soc/ticker.c"
 29378 ;; Parameters:    Size  Location     Type
 29379 ;;		None
 29380 ;; Auto vars:     Size  Location     Type
 29381 ;;		None
 29382 ;; Return value:  Size  Location     Type
 29383 ;;                  1    wreg      void 
 29384 ;; Registers used:
 29385 ;;		wreg, status,2, status,0
 29386 ;; Tracked objects:
 29387 ;;		On entry : 0/0
 29388 ;;		On exit  : 0/0
 29389 ;;		Unchanged: 0/0
 29390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29395 ;;Total ram usage:        0 bytes
 29396 ;; Hardware stack levels used:    1
 29397 ;; This function calls:
 29398 ;;		Nothing
 29399 ;; This function is called by:
 29400 ;;		_handler_interrupt_hight
 29401 ;; This function uses a non-reentrant model
 29402 ;;
 29403                           
 29404                           	psect	text136
 29405  0078B0                     __ptext136:
 29406                           	opt stack 0
 29407  0078B0                     i2_sys_ticker_irq_hook:
 29408                           	opt stack 16
 29409                           
 29410                           ;ticker.c: 40: if(dlyTickerEn){
 29411                           
 29412                           ;incstack = 0
 29413  0078B0  502D               	movf	_dlyTickerEn,w,c
 29414  0078B2  B4D8               	btfsc	status,2,c
 29415  0078B4  D005               	goto	i2l1785
 29416                           
 29417                           ;ticker.c: 41: dlyTicker+=10;
 29418  0078B6  0E0A               	movlw	10
 29419  0078B8  0101               	movlb	1	; () banked
 29420  0078BA  276E               	addwf	_dlyTicker& (0+255),f,b
 29421  0078BC  0E00               	movlw	0
 29422  0078BE  236F               	addwfc	(_dlyTicker+1)& (0+255),f,b
 29423  0078C0                     i2l1785:
 29424                           
 29425                           ;ticker.c: 42: }
 29426                           ;ticker.c: 43: userTicker_ms+=10;
 29427  0078C0  0E0A               	movlw	10
 29428  0078C2  2625               	addwf	_userTicker_ms,f,c	;volatile
 29429  0078C4  0E00               	movlw	0
 29430  0078C6  2226               	addwfc	_userTicker_ms+1,f,c	;volatile
 29431  0078C8  0012               	return		;funcret
 29432  0078CA                     __end_ofi2_sys_ticker_irq_hook:
 29433                           	opt stack 0
 29434                           tosu	equ	0xFFF
 29435                           tosh	equ	0xFFE
 29436                           tosl	equ	0xFFD
 29437                           pclatu	equ	0xFFB
 29438                           pclath	equ	0xFFA
 29439                           tblptru	equ	0xFF8
 29440                           tblptrh	equ	0xFF7
 29441                           tblptrl	equ	0xFF6
 29442                           tablat	equ	0xFF5
 29443                           prodh	equ	0xFF4
 29444                           prodl	equ	0xFF3
 29445                           intcon	equ	0xFF2
 29446                           intcon2	equ	0xFF1
 29447                           indf0	equ	0xFEF
 29448                           postinc0	equ	0xFEE
 29449                           fsr0h	equ	0xFEA
 29450                           fsr0l	equ	0xFE9
 29451                           wreg	equ	0xFE8
 29452                           postinc1	equ	0xFE6
 29453                           postdec1	equ	0xFE5
 29454                           plusw1	equ	0xFE3
 29455                           fsr1h	equ	0xFE2
 29456                           fsr1l	equ	0xFE1
 29457                           bsr	equ	0xFE0
 29458                           indf2	equ	0xFDF
 29459                           postinc2	equ	0xFDE
 29460                           postdec2	equ	0xFDD
 29461                           plusw2	equ	0xFDB
 29462                           fsr2h	equ	0xFDA
 29463                           fsr2l	equ	0xFD9
 29464                           status	equ	0xFD8
 29465                           
 29466 ;; *************** function i2_rtc_alrm_irq_hook *****************
 29467 ;; Defined at:
 29468 ;;		line 103 in file "src/soc/rtc.c"
 29469 ;; Parameters:    Size  Location     Type
 29470 ;;		None
 29471 ;; Auto vars:     Size  Location     Type
 29472 ;;		None
 29473 ;; Return value:  Size  Location     Type
 29474 ;;                  1    wreg      void 
 29475 ;; Registers used:
 29476 ;;		None
 29477 ;; Tracked objects:
 29478 ;;		On entry : 0/0
 29479 ;;		On exit  : 0/0
 29480 ;;		Unchanged: 0/0
 29481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29486 ;;Total ram usage:        0 bytes
 29487 ;; Hardware stack levels used:    1
 29488 ;; This function calls:
 29489 ;;		Nothing
 29490 ;; This function is called by:
 29491 ;;		_handler_interrupt_hight
 29492 ;; This function uses a non-reentrant model
 29493 ;;
 29494                           
 29495                           	psect	text137
 29496  007954                     __ptext137:
 29497                           	opt stack 0
 29498  007954                     i2_rtc_alrm_irq_hook:
 29499                           	opt stack 16
 29500                           
 29501                           ;incstack = 0
 29502  007954  0012               	return		;funcret
 29503  007956                     __end_ofi2_rtc_alrm_irq_hook:
 29504                           	opt stack 0
 29505                           tosu	equ	0xFFF
 29506                           tosh	equ	0xFFE
 29507                           tosl	equ	0xFFD
 29508                           pclatu	equ	0xFFB
 29509                           pclath	equ	0xFFA
 29510                           tblptru	equ	0xFF8
 29511                           tblptrh	equ	0xFF7
 29512                           tblptrl	equ	0xFF6
 29513                           tablat	equ	0xFF5
 29514                           prodh	equ	0xFF4
 29515                           prodl	equ	0xFF3
 29516                           intcon	equ	0xFF2
 29517                           intcon2	equ	0xFF1
 29518                           indf0	equ	0xFEF
 29519                           postinc0	equ	0xFEE
 29520                           fsr0h	equ	0xFEA
 29521                           fsr0l	equ	0xFE9
 29522                           wreg	equ	0xFE8
 29523                           postinc1	equ	0xFE6
 29524                           postdec1	equ	0xFE5
 29525                           plusw1	equ	0xFE3
 29526                           fsr1h	equ	0xFE2
 29527                           fsr1l	equ	0xFE1
 29528                           bsr	equ	0xFE0
 29529                           indf2	equ	0xFDF
 29530                           postinc2	equ	0xFDE
 29531                           postdec2	equ	0xFDD
 29532                           plusw2	equ	0xFDB
 29533                           fsr2h	equ	0xFDA
 29534                           fsr2l	equ	0xFD9
 29535                           status	equ	0xFD8
 29536                           tosu	equ	0xFFF
 29537                           tosh	equ	0xFFE
 29538                           tosl	equ	0xFFD
 29539                           pclatu	equ	0xFFB
 29540                           pclath	equ	0xFFA
 29541                           tblptru	equ	0xFF8
 29542                           tblptrh	equ	0xFF7
 29543                           tblptrl	equ	0xFF6
 29544                           tablat	equ	0xFF5
 29545                           prodh	equ	0xFF4
 29546                           prodl	equ	0xFF3
 29547                           intcon	equ	0xFF2
 29548                           intcon2	equ	0xFF1
 29549                           indf0	equ	0xFEF
 29550                           postinc0	equ	0xFEE
 29551                           fsr0h	equ	0xFEA
 29552                           fsr0l	equ	0xFE9
 29553                           wreg	equ	0xFE8
 29554                           postinc1	equ	0xFE6
 29555                           postdec1	equ	0xFE5
 29556                           plusw1	equ	0xFE3
 29557                           fsr1h	equ	0xFE2
 29558                           fsr1l	equ	0xFE1
 29559                           bsr	equ	0xFE0
 29560                           indf2	equ	0xFDF
 29561                           postinc2	equ	0xFDE
 29562                           postdec2	equ	0xFDD
 29563                           plusw2	equ	0xFDB
 29564                           fsr2h	equ	0xFDA
 29565                           fsr2l	equ	0xFD9
 29566                           status	equ	0xFD8
 29567                           
 29568                           	psect	text138
 29569  000000                     __ptext138:
 29570                           	opt stack 0
 29571                           tosu	equ	0xFFF
 29572                           tosh	equ	0xFFE
 29573                           tosl	equ	0xFFD
 29574                           pclatu	equ	0xFFB
 29575                           pclath	equ	0xFFA
 29576                           tblptru	equ	0xFF8
 29577                           tblptrh	equ	0xFF7
 29578                           tblptrl	equ	0xFF6
 29579                           tablat	equ	0xFF5
 29580                           prodh	equ	0xFF4
 29581                           prodl	equ	0xFF3
 29582                           intcon	equ	0xFF2
 29583                           intcon2	equ	0xFF1
 29584                           indf0	equ	0xFEF
 29585                           postinc0	equ	0xFEE
 29586                           fsr0h	equ	0xFEA
 29587                           fsr0l	equ	0xFE9
 29588                           wreg	equ	0xFE8
 29589                           postinc1	equ	0xFE6
 29590                           postdec1	equ	0xFE5
 29591                           plusw1	equ	0xFE3
 29592                           fsr1h	equ	0xFE2
 29593                           fsr1l	equ	0xFE1
 29594                           bsr	equ	0xFE0
 29595                           indf2	equ	0xFDF
 29596                           postinc2	equ	0xFDE
 29597                           postdec2	equ	0xFDD
 29598                           plusw2	equ	0xFDB
 29599                           fsr2h	equ	0xFDA
 29600                           fsr2l	equ	0xFD9
 29601                           status	equ	0xFD8
 29602                           
 29603                           	psect	rparam
 29604  0000                     tosu	equ	0xFFF
 29605                           tosh	equ	0xFFE
 29606                           tosl	equ	0xFFD
 29607                           pclatu	equ	0xFFB
 29608                           pclath	equ	0xFFA
 29609                           tblptru	equ	0xFF8
 29610                           tblptrh	equ	0xFF7
 29611                           tblptrl	equ	0xFF6
 29612                           tablat	equ	0xFF5
 29613                           prodh	equ	0xFF4
 29614                           prodl	equ	0xFF3
 29615                           intcon	equ	0xFF2
 29616                           intcon2	equ	0xFF1
 29617                           indf0	equ	0xFEF
 29618                           postinc0	equ	0xFEE
 29619                           fsr0h	equ	0xFEA
 29620                           fsr0l	equ	0xFE9
 29621                           wreg	equ	0xFE8
 29622                           postinc1	equ	0xFE6
 29623                           postdec1	equ	0xFE5
 29624                           plusw1	equ	0xFE3
 29625                           fsr1h	equ	0xFE2
 29626                           fsr1l	equ	0xFE1
 29627                           bsr	equ	0xFE0
 29628                           indf2	equ	0xFDF
 29629                           postinc2	equ	0xFDE
 29630                           postdec2	equ	0xFDD
 29631                           plusw2	equ	0xFDB
 29632                           fsr2h	equ	0xFDA
 29633                           fsr2l	equ	0xFD9
 29634                           status	equ	0xFD8
 29635                           
 29636                           	psect	temp
 29637  000040                     btemp:
 29638                           	opt stack 0
 29639  000040                     	ds	1
 29640  0000                     int$flags	set	btemp
 29641                           tosu	equ	0xFFF
 29642                           tosh	equ	0xFFE
 29643                           tosl	equ	0xFFD
 29644                           pclatu	equ	0xFFB
 29645                           pclath	equ	0xFFA
 29646                           tblptru	equ	0xFF8
 29647                           tblptrh	equ	0xFF7
 29648                           tblptrl	equ	0xFF6
 29649                           tablat	equ	0xFF5
 29650                           prodh	equ	0xFF4
 29651                           prodl	equ	0xFF3
 29652                           intcon	equ	0xFF2
 29653                           intcon2	equ	0xFF1
 29654                           indf0	equ	0xFEF
 29655                           postinc0	equ	0xFEE
 29656                           fsr0h	equ	0xFEA
 29657                           fsr0l	equ	0xFE9
 29658                           wreg	equ	0xFE8
 29659                           postinc1	equ	0xFE6
 29660                           postdec1	equ	0xFE5
 29661                           plusw1	equ	0xFE3
 29662                           fsr1h	equ	0xFE2
 29663                           fsr1l	equ	0xFE1
 29664                           bsr	equ	0xFE0
 29665                           indf2	equ	0xFDF
 29666                           postinc2	equ	0xFDE
 29667                           postdec2	equ	0xFDD
 29668                           plusw2	equ	0xFDB
 29669                           fsr2h	equ	0xFDA
 29670                           fsr2l	equ	0xFD9
 29671                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    1633
    Data        17
    BSS         1123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    158     160
    BANK1           256      1     256
    BANK2           256     29     207
    BANK3           256      0     162
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           84      0       0

Pointer List with Targets:

    pAdjValue	PTR volatile unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    rtc_set@rtc	PTR unsigned char  size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    rtc_set@stp	PTR struct . size(2) Largest target is 7
		 -> defalutRtc(BANK1[7]), 

    m_flash_write@buf	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer0(BANK4[256]), 

    m_flash_write@tmpBuf	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), 

    m_flash_read@buf	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), globleBuffer0(BANK4[256]), 

    lcd_show_string@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), STR_2(CODE[9]), ui_disp_rtc_mm_ss@buf(COMRAM[10]), 

    lcd_show_string_l1@str	PTR unsigned char  size(2) Largest target is 6
		 -> ui_disp_start_cs600@buf(BANK0[6]), 

    lcd_show_string_l0@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    at24c02_write_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    at24c02_write_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_write_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_write_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_write_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_write_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_write_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_write_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    at24c02_read_n_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_n_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_n_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_n_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_read_n_byte@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_read_byte@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_read_byte@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_read_byte@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_read_byte@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_read_byte@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_init@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_init@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_init@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_init@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02_init@pAt24c02	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    at24c02_set_slave_addr@pAt24c02.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02_set_slave_addr@pAt24c02.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02_set_slave_addr@pAt24c02.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02_set_slave_addr@pAt24c02.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_hi@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_hi@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_hi@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_hi@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_threshold_lo@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_threshold_lo@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_threshold_lo@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_threshold_lo@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_start_conversion@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_start_conversion@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_start_conversion@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_start_conversion@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_start_conversion@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_start_conversion@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115DiffPrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115DiffPrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115DiffPrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115DiffPrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pAds1115PrObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pAds1115PrObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pAds1115PrObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pAds1115PrObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pAds1115PrObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_config@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_config@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_config@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_config@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_config@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_latch@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_latch@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_latch@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_latch@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_pol@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_pol@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_pol@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_pol@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_comp_mode@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_comp_mode@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_comp_mode@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_comp_mode@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_data_rate@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_data_rate@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_data_rate@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_data_rate@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_data_rate@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mod@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mod@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mod@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mod@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mod@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_pga@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_pga@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_pga@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_pga@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_pga@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_mux@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_mux@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_mux@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_mux@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_set_mux@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_set_operate_status@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_set_operate_status@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_set_operate_status@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_set_operate_status@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_set_operate_status@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_read_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_read_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_read_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_read_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_read_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_write_reg@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_write_reg@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_write_reg@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_write_reg@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_write_reg@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_write_reg@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115_init@pAds1115.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115_init@pAds1115.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115_init@pAds1115.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115_init@pAds1115.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115_init@pAds1115.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115_init@pAds1115	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    ads1115Chip1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S983$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    ads1115Chip0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S983$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    ads1115Chip0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S983$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    ads1115Chip0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S983$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    ads1115Chip0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S983$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    ads1115Chip0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pcf8574.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pcf8574.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pcf8574.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pcf8574.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pcf8574.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    m_int16_2_str_4@buf	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_int8_2_hex@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_rtc_mm_ss@buf(COMRAM[10]), ui_disp_start_cs600@buf(BANK0[6]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    m_mem_cpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 256
		 -> flashTestbuf(CODE[65]), m_flash_test@tmp(COMRAM[16]), globleBuffer0(BANK4[256]), defultSystemData(CODE[150]), 
		 -> prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 256
		 -> m_flash_test@tmp(COMRAM[16]), crc_verify@expected(BANK0[2]), globleBuffer0(BANK4[256]), 

    crc_append@message	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    crc_sum@puchMsg	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    pAds1115PrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip0(BANK1[16]), NULL(NULL[0]), 

    pAds1115DiffPrObj	PTR struct . size(2) Largest target is 16
		 -> ads1115Chip1(BANK2[16]), NULL(NULL[0]), 

    sample_diff_pr_fliter@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    __x_sample_fifo@buf	PTR int  size(2) Largest target is 16
		 -> sampBufPr(BANK1[8]), sampBufPt100ExB(BANK1[8]), sampBufPt100ExA(BANK1[8]), sampBufDiffPr_D23(BANK1[16]), 
		 -> sampBufDiffPr_D01(BANK1[16]), 

    __x_sample_fliter@buf	PTR int  size(2) Largest target is 16
		 -> sampBufDiffPr_D23(BANK1[16]), sampBufDiffPr_D01(BANK1[16]), 

    ui_disp_adj_xfixed_pt@str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    __x_arrange_str@str	PTR unsigned char  size(2) Largest target is 10
		 -> ui_disp_adj_xfixed_pt@buf(BANK0[10]), ui_disp_adj_xfloat_pt@buf(COMRAM[10]), 

    __enter_menu_set_base_zero@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_pose@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    __enter_menu_set_density@fps	PTR struct . size(2) Largest target is 3923
		 -> RAM(DATA[3923]), 

    key_adj_value_fixed_point@value	PTR unsigned int  size(2) Largest target is 2
		 -> passWord(COMRAM[2]), 

    key_shift_loc_fixed_point@loc	PTR unsigned char  size(2) Largest target is 1
		 -> adjLocation(COMRAM[1]), 

    key_waite_release@key	PTR unsigned char  size(2) Largest target is 1
		 -> key_process@key(BANK0[1]), 

    cal_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK3[156]), prCalibTabDef(BANK3[162]), 

    cal_diff_press@tabrow	PTR struct . size(2) Largest target is 162
		 -> diff_prCalibTabDef.prCalibRow(BANK2[156]), diff_prCalibTabDef(BANK2[162]), 

    cal_diff_press@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    cal_diff_p_to_h@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_float_fast@tab	PTR float  size(2) Largest target is 404
		 -> hKel(CODE[404]), hKcy(CODE[404]), 

    m_interp1_cal_p_t@xin	PTR struct . size(2) Largest target is 8
		 -> x_prDiffData(BANK1[8]), 

    m_interp1_cal_p_t@tmpx	PTR struct . size(2) Largest target is 24
		 -> cal_diff_press@tmpx(BANK2[24]), 

    m_interp1_cal_p_v@xout	PTR struct . size(2) Largest target is 24
		 -> cal_diff_press@tmpx(BANK2[24]), NULL(NULL[0]), 

    m_interp1_cal_p_v@xin	PTR struct . size(2) Largest target is 8
		 -> cal_press@xin(BANK0[8]), x_prDiffData(BANK1[8]), 

    m_interp1_cal_p_v@tabrow	PTR struct . size(2) Largest target is 162
		 -> prCalibTabDef.prCalibRow(BANK3[156]), diff_prCalibTabDef.prCalibRow(BANK2[156]), prCalibTabDef(BANK3[162]), diff_prCalibTabDef(BANK2[162]), 

    p_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    p_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    p_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    p_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    p_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    p_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch0(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> prCalibTabDef(BANK3[162]), 

    pdiff_prEepromObj.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    pdiff_prEepromObj.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    pdiff_prEepromObj.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    pdiff_prEepromObj.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    pdiff_prEepromObj.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    pdiff_prEepromObj	PTR struct . size(2) Largest target is 11
		 -> at24c02Ch1(BANK1[11]), NULL(NULL[0]), 

    calib_data_init_diff_pr@buf	PTR unsigned char  size(2) Largest target is 162
		 -> diff_prCalibTabDef(BANK2[162]), 

    data_sys_init@stp	PTR struct . size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), 

    data_sys_init@buf	PTR unsigned char  size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), 

    data_sys_cal_v2@stp	PTR struct . size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), 

    data_sys_cal_v1@stp	PTR struct . size(2) Largest target is 256
		 -> globleBuffer0(BANK4[256]), 

    fpSysData	PTR const struct . size(3) Largest target is 65527
		 -> ROM(CODE[65527]), 

    at24c02Ch0.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch0.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch0.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch0.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch0.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    S62$iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    at24c02Ch1.iic_received_byte_if_ack	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_received_byte_if_ack(), 

    S62$iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    at24c02Ch1.iic_waite_ack	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> iic_waite_ack(), 

    S62$iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    at24c02Ch1.iic_send_byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> iic_send_byte(), 

    S62$iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    at24c02Ch1.iic_stop	PTR FTN()void  size(2) Largest target is 1
		 -> iic_stop(), 

    S62$iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 

    at24c02Ch1.iic_start	PTR FTN()void  size(2) Largest target is 1
		 -> iic_start(), 


Critical Paths under _main in COMRAM

    _ui_disp_start_cs600->_lcd_disp_logo
    _ui_disp_start_cs600->_m_int8_2_hex
    _lcd_disp_level->_lcd_disp_level_bar
    _key_process->_key_waite_release
    _key_adj_value_fixed_point->___exp_10
    ___lwmod->___exp_10
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_pose
    _key_process_down->_key_shift_loc_fixed_point
    _sample_diff_pr_chip_fast->_ads1115_set_mux
    _ui_disp_adj_xfixed_pt->___x_arrange_str
    _lcd_show_chr->_lcd_disp_chr_loc_0
    _lcd_show_chr->_lcd_disp_chr_loc_1
    _lcd_show_chr->_lcd_disp_chr_loc_2
    _lcd_show_chr->_lcd_disp_chr_loc_3
    _lcd_show_chr->_lcd_disp_chr_loc_4
    _lcd_show_chr->_lcd_disp_chr_loc_5
    _lcd_show_chr->_lcd_disp_chr_loc_6
    _lcd_show_chr->_lcd_disp_chr_loc_7
    _lcd_show_dp->_lcd_disp_dp_loc_0
    _lcd_show_dp->_lcd_disp_dp_loc_1
    _lcd_show_dp->_lcd_disp_dp_loc_2
    _sample_pr_chip_comm->_ads1115_set_mux
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _sample_diff_pr_chip_slow->_ads1115_set_mux
    _m_flash_write->_m_flash_unlock
    _m_flash_erase->_m_flash_unlock
    ___wmul->___exp_10
    _iic_send_byte->_iic_waite_ack
    _iic_received_byte_if_ack->_iic_send_ack

Critical Paths under _handler_interrupt_low in COMRAM

    None.

Critical Paths under _handler_interrupt_hight in COMRAM

    None.

Critical Paths under _main in BANK0

    _ui_disp_start_cs600->_lcd_show_string_l0
    _ui_disp_start_cs600->_lcd_show_string_l1
    _lcd_show_string_l1->_lcd_show_chr
    _lcd_show_string_l0->_lcd_show_chr
    _lcd_disp_logo->_lcd_set_com_seg
    _lcd_disp_level->_lcd_disp_level_bar
    _lcd_disp_level_bar->_lcd_set_com_seg
    _lcd_config->_lcd_disp_all
    _key_waite_release->_key_polling
    _key_polling->_delay_ms
    _key_process_up->_key_adj_value_fixed_point
    _key_adj_value_fixed_point->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___exp_10
    _key_process_set_down_long->___enter_menu_set_base_zero
    ___enter_menu_set_base_zero->___int32_2_mflot32
    ___int32_2_mflot32->___lldiv
    _key_process_down->_key_shift_loc_fixed_point
    _event_process_time_out->_sample_diff_pr_chip_fast
    _event_process_ticker->_sample_diff_pr_chip_fast
    _sample_diff_pr_chip_fast->_sample_diff_pr_fliter
    _ui_disp_menu_psw_adj->_ui_disp_adj_xfixed_pt
    _ui_disp_adj_xfixed_pt->_lcd_show_string
    _ui_disp_clear_num_dp->_lcd_show_string
    _lcd_show_string->_lcd_show_chr
    _lcd_disp_chr_loc_7->_lcd_set_com_seg
    _lcd_disp_chr_loc_6->_lcd_set_com_seg
    _lcd_disp_chr_loc_5->_lcd_set_com_seg
    _lcd_disp_chr_loc_4->_lcd_set_com_seg
    _lcd_disp_chr_loc_3->_lcd_set_com_seg
    _lcd_disp_chr_loc_2->_lcd_set_com_seg
    _lcd_disp_chr_loc_1->_lcd_set_com_seg
    _lcd_disp_chr_loc_0->_lcd_set_com_seg
    _lcd_disp_dp_loc_2->_lcd_set_com_seg
    _lcd_disp_dp_loc_1->_lcd_set_com_seg
    _lcd_disp_dp_loc_0->_lcd_set_com_seg
    _lcd_set_com_seg->___awdiv
    _m_int16_2_str_4->___awdiv
    _sample_pr_chip_comm->___x_sample_fifo
    _sample_in_soc_adc_ch->_in_adc_start_and_read
    _in_adc_start_and_read->_delay_us
    _sample_diff_pr_chip_slow->_sample_diff_pr_fliter
    _sample_diff_pr_fliter->___x_sample_fliter
    ___x_sample_fliter->___aldiv
    _delay_ms->_delay_us
    _ads1115_start_conversion->_ads1115_write_reg
    _ads1115_write_reg->_iic_send_byte
    _ads1115_read_conversion->_ads1115_read_reg
    _ads1115_read_reg->_iic_received_byte_if_ack
    ___x_sample_fifo->___aldiv
    _cal_pt100_temperature_in->___fltol
    _cal_pt100_temperature_ex->___fltol
    _cal_press->_m_interp1_cal_p_v
    _cal_diff_press->_cal_diff_hight_to_vol_v
    _m_interp1_cal_p_v->___lmul
    _m_interp1_cal_p_t->___lmul
    ___lmul->___aldiv
    _cal_diff_p_to_h->___fltol
    _cal_diff_hight_to_vol_v->_m_interp1_float_fast
    _cal_diff_hight_to_vol_h->_m_interp1_float_fast
    _m_interp1_float_fast->___flge
    ___flge->___fladd
    _cal_additional_pressute->___fltol
    ___flneg->___fldiv
    ___fladd->___flneg
    _data_init_all->_data_sys_init
    _data_sys_init->_data_sys_cal_v1
    _m_flash_write->_m_flash_read
    _data_sys_cal_v2->___fltol
    _data_sys_cal_v1->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _calib_data_init_pr->_crc_verify
    _calib_data_set_default_pr->___wmul
    _calib_data_init_diff_pr->_crc_verify
    _crc_verify->_crc_sum
    _crc_append->_crc_sum
    _calib_data_set_default_diff_pr->___wmul
    ___wmul->___exp_10
    _at24c02_write_n_byte->_iic_send_byte
    _at24c02_read_n_byte->_iic_received_byte_if_ack
    _iic_received_byte_if_ack->_iic_received_byte
    _ads1115_init_all_chip->_ads1115_init

Critical Paths under _handler_interrupt_low in BANK0

    None.

Critical Paths under _handler_interrupt_hight in BANK0

    None.

Critical Paths under _main in BANK1

    _event_process->_event_process_rtc

Critical Paths under _handler_interrupt_low in BANK1

    None.

Critical Paths under _handler_interrupt_hight in BANK1

    None.

Critical Paths under _main in BANK2

    _event_process_rtc->_cal_diff_press

Critical Paths under _handler_interrupt_low in BANK2

    None.

Critical Paths under _handler_interrupt_hight in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler_interrupt_low in BANK3

    None.

Critical Paths under _handler_interrupt_hight in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _handler_interrupt_low in BANK4

    None.

Critical Paths under _handler_interrupt_hight in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _handler_interrupt_low in BANK5

    None.

Critical Paths under _handler_interrupt_hight in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _handler_interrupt_low in BANK6

    None.

Critical Paths under _handler_interrupt_hight in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _handler_interrupt_low in BANK7

    None.

Critical Paths under _handler_interrupt_hight in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _handler_interrupt_low in BANK8

    None.

Critical Paths under _handler_interrupt_hight in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _handler_interrupt_low in BANK9

    None.

Critical Paths under _handler_interrupt_hight in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _handler_interrupt_low in BANK10

    None.

Critical Paths under _handler_interrupt_hight in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _handler_interrupt_low in BANK11

    None.

Critical Paths under _handler_interrupt_hight in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _handler_interrupt_low in BANK12

    None.

Critical Paths under _handler_interrupt_hight in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _handler_interrupt_low in BANK13

    None.

Critical Paths under _handler_interrupt_hight in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _handler_interrupt_low in BANK14

    None.

Critical Paths under _handler_interrupt_hight in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _handler_interrupt_low in BANK15

    None.

Critical Paths under _handler_interrupt_hight in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1997491
              _ads1115_init_all_chip
                      _data_init_all
                      _event_process
                        _in_adc_init
                     _lcd_disp_level
                           _lcd_init
                            _rtc_set
                           _soc_init
                _ui_disp_start_cs600
 ---------------------------------------------------------------------------------
 (1) _ui_disp_start_cs600                                  8     8      0  522158
                                             22 BANK0      8     8      0
                       _lcd_disp_all
                     _lcd_disp_level
                      _lcd_disp_logo
                   _lcd_disp_refresh
                 _lcd_show_string_l0
                 _lcd_show_string_l1
                       _m_int8_2_hex
                         _ticker_dly
 ---------------------------------------------------------------------------------
 (2) _ticker_dly                                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _m_int8_2_hex                                         4     1      3    1101
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l1                                   3     1      2  230706
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_show_string_l0                                   3     1      2  230706
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_logo                                        1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_level                                       2     2      0   30629
                                             18 BANK0      2     2      0
                 _lcd_disp_level_bar
 ---------------------------------------------------------------------------------
 (3) _lcd_disp_level_bar                                   3     2      1   30397
                                             31 COMRAM     1     0      1
                                             16 BANK0      2     2      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (1) _soc_init                                             0     0      0       0
                           _rtc_init
                    _sys_ticker_init
 ---------------------------------------------------------------------------------
 (2) _sys_ticker_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtc_init                                             0     0      0       0
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (1) _rtc_set                                              4     2      2     341
                                              0 BANK0      4     2      2
                _rtcc_reg_wr_disable
                 _rtcc_reg_wr_enable
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _rtcc_reg_wr_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     130
                        _lcd_bl_init
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           0     0      0     130
                       _lcd_disp_all
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_all                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_bl_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _event_process                                        0     0      0 1370379
                  _event_process_rtc
               _event_process_ticker
             _event_process_time_out
                        _key_polling
                        _key_process
 ---------------------------------------------------------------------------------
 (2) _key_process                                          3     3      0  559866
                                             39 BANK0      3     3      0
                   _key_process_down
                    _key_process_set
          _key_process_set_down_long
               _key_process_set_long
                     _key_process_up
                  _key_waite_release
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (3) _key_waite_release                                    5     1      4    1665
                                             31 COMRAM     1     1      0
                                              8 BANK0      4     0      4
                        _key_polling
 ---------------------------------------------------------------------------------
 (4) _key_polling                                          2     2      0    1358
                                              6 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _key_process_up                                       0     0      0    3075
          _key_adj_value_fixed_point
 ---------------------------------------------------------------------------------
 (4) _key_adj_value_fixed_point                            7     4      3    3075
                                             14 BANK0      7     4      3
                           ___exp_10
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                              9 BANK0      5     1      4
                           ___exp_10 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     421
                                              2 BANK0      7     3      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___exp_10                                             3     1      2      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _key_process_set_long                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _key_process_set_down_long                            2     2      0    1077
                                             31 BANK0      2     2      0
         ___enter_menu_set_base_zero
           ___enter_menu_set_density
              ___enter_menu_set_pose
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_pose                                3     3      0      34
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_density                             4     4      0      34
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___enter_menu_set_base_zero                           2     2      0    1009
                                             29 BANK0      2     2      0
                  ___int32_2_mflot32
 ---------------------------------------------------------------------------------
 (5) ___int32_2_mflot32                                   16    12      4     975
                                             13 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _key_process_set                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _key_process_down                                     0     0      0     527
          _key_shift_loc_fixed_point
 ---------------------------------------------------------------------------------
 (4) _key_shift_loc_fixed_point                            5     1      4     527
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _event_process_time_out                               0     0      0    9159
           _sample_diff_pr_chip_fast
 ---------------------------------------------------------------------------------
 (2) _event_process_ticker                                 0     0      0    9159
           _sample_diff_pr_chip_fast
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_fast                             3     3      0    9159
                                             37 BANK0      3     3      0
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (2) _event_process_rtc                                    1     1      0  790837
                                              0 BANK1      1     1      0
            _cal_additional_pressute
                     _cal_diff_press
                          _cal_press
           _cal_pt100_temperature_ex
           _cal_pt100_temperature_in
           _sample_diff_pr_chip_slow
               _sample_in_soc_adc_ch
                _sample_pr_chip_comm
                       _ui_disp_menu
 ---------------------------------------------------------------------------------
 (3) _ui_disp_menu                                         0     0      0  553420
               _ui_disp_menu_psw_adj
 ---------------------------------------------------------------------------------
 (4) _ui_disp_menu_psw_adj                                 0     0      0  553420
              _ui_disp_adj_xfixed_pt
 ---------------------------------------------------------------------------------
 (5) _ui_disp_adj_xfixed_pt                               17    12      5  553420
                                             22 BANK0     17    12      5
                    ___x_arrange_str
                   _lcd_disp_refresh
                    _lcd_show_string
                    _m_int16_2_str_4
                          _m_mem_cpy
               _ui_disp_clear_num_dp
 ---------------------------------------------------------------------------------
 (6) _ui_disp_clear_num_dp                                 0     0      0  317629
                        _lcd_show_dp
                    _lcd_show_string
 ---------------------------------------------------------------------------------
 (7) _lcd_show_string                                      3     1      2  230976
                                             19 BANK0      3     1      2
                       _lcd_show_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_show_chr                                         3     2      1  230483
                                             16 BANK0      3     2      1
                 _lcd_disp_chr_loc_0
                 _lcd_disp_chr_loc_1
                 _lcd_disp_chr_loc_2
                 _lcd_disp_chr_loc_3
                 _lcd_disp_chr_loc_4
                 _lcd_disp_chr_loc_5
                 _lcd_disp_chr_loc_6
                 _lcd_disp_chr_loc_7
                  _lcd_disp_get_code
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_get_code                                    3     3      0     226
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_7                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_6                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_5                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_4                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_3                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_2                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_1                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (4) _lcd_disp_chr_loc_0                                   1     1      0   28698
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (7) _lcd_show_dp                                          2     1      1   86653
                                             16 BANK0      2     1      1
                  _lcd_disp_dp_loc_0
                  _lcd_disp_dp_loc_1
                  _lcd_disp_dp_loc_2
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_2                                    1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_1                                    1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (8) _lcd_disp_dp_loc_0                                    1     1      0   28512
                                             31 COMRAM     1     1      0
                    _lcd_set_com_seg
 ---------------------------------------------------------------------------------
 (5) _lcd_set_com_seg                                      8     6      2   28481
                                              8 BANK0      8     6      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) _m_mem_cpy                                            4     0      4     490
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _m_int16_2_str_4                                      4     0      4    3062
                                              8 BANK0      4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1153
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_disp_refresh                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___x_arrange_str                                      4     1      3     614
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _sample_pr_chip_comm                                  5     5      0   10429
                                             30 BANK0      5     5      0
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _sample_in_soc_adc_ch                                11    11      0     971
                                              9 BANK0     11    11      0
                        _in_adc_init
              _in_adc_start_and_read
 ---------------------------------------------------------------------------------
 (4) _in_adc_start_and_read                                6     4      2     412
                                             31 COMRAM     1     1      0
                                              4 BANK0      5     3      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _in_adc_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sample_diff_pr_chip_slow                             3     3      0   14065
                                             37 BANK0      3     3      0
                    ___x_sample_fifo
            _ads1115_read_conversion
                    _ads1115_set_mux
           _ads1115_start_conversion
                           _delay_ms
              _sample_diff_pr_fliter
 ---------------------------------------------------------------------------------
 (4) _sample_diff_pr_fliter                                2     0      2    3670
                                             35 BANK0      2     0      2
                  ___x_sample_fliter
 ---------------------------------------------------------------------------------
 (5) ___x_sample_fliter                                   21    17      4    3397
                                             14 BANK0     21    17      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) _delay_ms                                             2     0      2    1182
                                              4 BANK0      2     0      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (6) _delay_us                                             4     2      2     338
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _ads1115_start_conversion                             2     0      2    1979
                                              7 BANK0      2     0      2
                  _ads1115_write_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_write_reg                                    5     0      5    1287
                                              2 BANK0      5     0      5
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) _ads1115_set_mux                                      4     1      3    1682
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _ads1115_read_conversion                              5     3      2    1698
                                             10 BANK0      5     3      2
                   _ads1115_read_reg
 ---------------------------------------------------------------------------------
 (5) _ads1115_read_reg                                     6     3      3     969
                                              4 BANK0      6     3      3
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (4) ___x_sample_fifo                                     16    11      5    3749
                                             14 BANK0     16    11      5
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) _cal_pt100_temperature_in                            12    12      0   24828
                                             98 BANK0     12    12      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _cal_pt100_temperature_ex                            17    17      0   24828
                                             98 BANK0     17    17      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _cal_press                                           11    11      0    5278
                                             55 BANK0     11    11      0
                  _m_interp1_cal_p_v
 ---------------------------------------------------------------------------------
 (3) _cal_diff_press                                      29    29      0  132298
                                              0 BANK2     29    29      0
            _cal_diff_hight_to_vol_h
            _cal_diff_hight_to_vol_v
                    _cal_diff_p_to_h
                  _m_interp1_cal_p_t
                  _m_interp1_cal_p_v
 ---------------------------------------------------------------------------------
 (4) _m_interp1_cal_p_v                                   29    23      6    5062
                                             26 BANK0     29    23      6
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _m_interp1_cal_p_t                                   28    23      5    4551
                                             26 BANK0     28    23      5
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1416
                                             14 BANK0     12     4      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8    1885
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _cal_diff_p_to_h                                     12    10      2   17154
                                             98 BANK0     12    10      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _cal_diff_hight_to_vol_v                             24    20      4   53174
                                            134 BANK0     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (4) _cal_diff_hight_to_vol_h                             20    16      4   51946
                                            134 BANK0     20    16      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
               _m_interp1_float_fast
 ---------------------------------------------------------------------------------
 (5) _m_interp1_float_fast                                34    26      8   26253
                                            100 BANK0     34    26      8
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1526
                                             88 BANK0     12     4      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _cal_additional_pressute                             12    12      0   24717
                                             98 BANK0     12    12      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     785
                                             64 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    6642
                                             68 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _data_init_all                                        0     0      0   73215
            _calib_data_init_diff_pr
                 _calib_data_init_pr
                      _data_sys_init
 ---------------------------------------------------------------------------------
 (2) _data_sys_init                                        5     5      0   48772
                                            126 BANK0      5     5      0
                         _crc_append
                         _crc_verify
                    _data_sys_cal_v1
                    _data_sys_cal_v2
                       _m_flash_read
                      _m_flash_write
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_flash_write                                       21    13      8    5041
                                             14 BANK0     21    13      8
                      _m_flash_erase
                       _m_flash_read
                     _m_flash_unlock
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (4) _m_flash_read                                        14     6      8    1890
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) _m_flash_erase                                        8     4      4     260
                                              0 BANK0      8     4      4
                     _m_flash_unlock
 ---------------------------------------------------------------------------------
 (4) _m_flash_unlock                                       1     1      0      34
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _data_sys_cal_v2                                     20    16      4   17318
                                             98 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _data_sys_cal_v1                                     28    24      4   17420
                                             98 BANK0     28    24      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2966
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4    1237
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    7013
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    5715
                                             39 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_pr                                   5     5      0   12206
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
          _calib_data_set_default_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_pr                            8     8      0    2118
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _calib_data_init_diff_pr                              5     5      0   12237
                                             22 BANK0      5     5      0
                       _at24c02_init
                _at24c02_read_n_byte
               _at24c02_write_n_byte
     _calib_data_set_default_diff_pr
                         _crc_append
                         _crc_verify
 ---------------------------------------------------------------------------------
 (3) _crc_verify                                          10     6      4    3598
                                             12 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_mem_cpy_len                                        6     0      6    1452
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _crc_append                                           8     4      4    1631
                                             12 BANK0      8     4      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (4) _crc_sum                                             12     8      4     660
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (3) _calib_data_set_default_diff_pr                       8     8      0    2149
                                              8 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1672
                                              2 BANK0      6     2      4
                           ___exp_10 (ARG)
 ---------------------------------------------------------------------------------
 (3) _at24c02_write_n_byte                                 9     2      7    1209
                                              2 BANK0      9     2      7
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (3) _at24c02_read_n_byte                                 13     6      7    2288
                                              4 BANK0     13     6      7
           _iic_received_byte_if_ack *
                      _iic_send_byte *
                          _iic_start *
                           _iic_stop *
 ---------------------------------------------------------------------------------
 (6) _iic_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iic_send_byte                                        2     2      0     167
                                              0 BANK0      2     2      0
                      _iic_waite_ack
 ---------------------------------------------------------------------------------
 (7) _iic_waite_ack                                        1     1      0      65
                                             31 COMRAM     1     1      0
                           _iic_stop
 ---------------------------------------------------------------------------------
 (6) _iic_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _iic_received_byte_if_ack                             2     2      0     207
                                              2 BANK0      2     2      0
                  _iic_received_byte
                       _iic_send_ack
 ---------------------------------------------------------------------------------
 (7) _iic_send_ack                                         1     1      0      31
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _iic_received_byte                                    2     2      0     108
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _at24c02_init                                         3     0      3     937
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ads1115_init_all_chip                                0     0      0     639
                       _ads1115_init
 ---------------------------------------------------------------------------------
 (2) _ads1115_init                                         3     0      3     639
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _handler_interrupt_low                              17    17      0       0
                                             14 COMRAM    17    17      0
                  _rtc_alrm_irq_hook
                _sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (13) _sys_ticker_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _rtc_alrm_irq_hook                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _handler_interrupt_hight                            14    14      0       0
                                              0 COMRAM    14    14      0
                i2_rtc_alrm_irq_hook
              i2_sys_ticker_irq_hook
 ---------------------------------------------------------------------------------
 (15) i2_sys_ticker_irq_hook                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_rtc_alrm_irq_hook                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ads1115_init_all_chip
     _ads1115_init
   _data_init_all
     _calib_data_init_diff_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
           _iic_send_ack
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _at24c02_write_n_byte
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _calib_data_set_default_diff_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _calib_data_init_pr
       _at24c02_init
       _at24c02_read_n_byte
         _iic_received_byte_if_ack *
           _iic_received_byte
           _iic_send_ack
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _at24c02_write_n_byte
         _iic_send_byte *
           _iic_waite_ack
             _iic_stop
         _iic_start *
         _iic_stop *
       _calib_data_set_default_pr
         ___wmul
           ___exp_10 (ARG)
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
     _data_sys_init
       _crc_append
         _crc_sum
       _crc_verify
         _crc_sum
         _m_mem_cpy_len
       _data_sys_cal_v1
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _data_sys_cal_v2
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _m_flash_read
       _m_flash_write
         _m_flash_erase
           _m_flash_unlock
         _m_flash_read
         _m_flash_unlock
         _m_mem_cpy_len
       _m_mem_cpy_len
   _event_process
     _event_process_rtc
       _cal_additional_pressute
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _cal_diff_press
         _cal_diff_hight_to_vol_h
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _m_interp1_float_fast
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
         _cal_diff_hight_to_vol_v
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _m_interp1_float_fast
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
         _cal_diff_p_to_h
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___xxtofl
         _m_interp1_cal_p_t
           ___aldiv
           ___lmul
             ___aldiv (ARG)
         _m_interp1_cal_p_v
           ___aldiv
           ___lmul
             ___aldiv (ARG)
       _cal_press
         _m_interp1_cal_p_v
           ___aldiv
           ___lmul
             ___aldiv (ARG)
       _cal_pt100_temperature_ex
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _cal_pt100_temperature_in
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _sample_diff_pr_chip_slow
         ___x_sample_fifo
           ___aldiv
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _delay_ms
           _delay_us
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
       _sample_in_soc_adc_ch
         _in_adc_init
         _in_adc_start_and_read
           _delay_us
       _sample_pr_chip_comm
         ___x_sample_fifo
           ___aldiv
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _delay_ms
           _delay_us
       _ui_disp_menu
         _ui_disp_menu_psw_adj
           _ui_disp_adj_xfixed_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
             _ui_disp_clear_num_dp
               _lcd_show_dp
                 _lcd_disp_dp_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_2
                   _lcd_set_com_seg
                     ___awdiv
               _lcd_show_string
                 _lcd_show_chr
                   _lcd_disp_chr_loc_0
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_1
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_2
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_3
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_4
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_5
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_6
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_7
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_get_code
     _event_process_ticker
       _sample_diff_pr_chip_fast
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
     _event_process_time_out
       _sample_diff_pr_chip_fast
         _ads1115_read_conversion
           _ads1115_read_reg
             _iic_received_byte_if_ack *
               _iic_received_byte
               _iic_send_ack
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _ads1115_set_mux
         _ads1115_start_conversion
           _ads1115_write_reg
             _iic_send_byte *
               _iic_waite_ack
                 _iic_stop
             _iic_start *
             _iic_stop *
         _sample_diff_pr_fliter
           ___x_sample_fliter
             ___aldiv
     _key_polling
       _delay_ms
         _delay_us
     _key_process
       _key_process_down
         _key_shift_loc_fixed_point
       _key_process_set
       _key_process_set_down_long
         ___enter_menu_set_base_zero
           ___int32_2_mflot32
             ___lldiv
         ___enter_menu_set_density
         ___enter_menu_set_pose
       _key_process_set_long
       _key_process_up
         _key_adj_value_fixed_point
           ___exp_10
           ___lwdiv
             ___exp_10 (ARG)
           ___lwmod
             ___exp_10 (ARG)
             ___lwdiv (ARG)
               ___exp_10 (ARG)
           ___wmul
             ___exp_10 (ARG)
       _key_waite_release
         _key_polling
           _delay_ms
             _delay_us
       _ui_disp_menu
         _ui_disp_menu_psw_adj
           _ui_disp_adj_xfixed_pt
             ___x_arrange_str
             _lcd_disp_refresh
             _lcd_show_string
               _lcd_show_chr
                 _lcd_disp_chr_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_2
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_3
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_4
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_5
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_6
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_chr_loc_7
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_get_code
             _m_int16_2_str_4
               ___awdiv
               ___awmod
             _m_mem_cpy
             _ui_disp_clear_num_dp
               _lcd_show_dp
                 _lcd_disp_dp_loc_0
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_1
                   _lcd_set_com_seg
                     ___awdiv
                 _lcd_disp_dp_loc_2
                   _lcd_set_com_seg
                     ___awdiv
               _lcd_show_string
                 _lcd_show_chr
                   _lcd_disp_chr_loc_0
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_1
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_2
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_3
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_4
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_5
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_6
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_chr_loc_7
                     _lcd_set_com_seg
                       ___awdiv
                   _lcd_disp_get_code
   _in_adc_init
   _lcd_disp_level
     _lcd_disp_level_bar
       _lcd_set_com_seg
         ___awdiv
   _lcd_init
     _lcd_bl_init
     _lcd_config
       _lcd_disp_all
   _rtc_set
     _rtcc_reg_wr_disable
     _rtcc_reg_wr_enable
   _soc_init
     _rtc_init
       _rtcc_reg_wr_disable
       _rtcc_reg_wr_enable
     _sys_ticker_init
   _ui_disp_start_cs600
     _lcd_disp_all
     _lcd_disp_level
       _lcd_disp_level_bar
         _lcd_set_com_seg
           ___awdiv
     _lcd_disp_logo
       _lcd_set_com_seg
         ___awdiv
     _lcd_disp_refresh
     _lcd_show_string_l0
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _lcd_show_string_l1
       _lcd_show_chr
         _lcd_disp_chr_loc_0
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_1
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_2
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_3
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_4
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_5
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_6
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_chr_loc_7
           _lcd_set_com_seg
             ___awdiv
         _lcd_disp_get_code
     _m_int8_2_hex
     _ticker_dly

 _handler_interrupt_low (ROOT)
   _rtc_alrm_irq_hook
   _sys_ticker_irq_hook

 _handler_interrupt_hight (ROOT)
   i2_rtc_alrm_irq_hook
   i2_sys_ticker_irq_hook

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F53      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0     100      16      100.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A2      11       63.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     1D      CF       9       80.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      1     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITBANK15           54      0       0      35        0.0%
BANK15              54      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     550      12        0.0%
DATA                 0      0     550       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Sep 16 17:45:21 2017

                  lcd_show_string_l0@str 0073                           ?_iic_waite_ack 0001  
                  lcd_show_string_l1@str 0073                             ___fldiv@aexp 009F  
                           ___fldiv@bexp 009E                             ?_lcd_show_dp 0070  
                    ?_lcd_show_string_l0 0073                      ?_lcd_show_string_l1 0073  
                           ___fldiv@sign 0093               __end_of_rtcc_reg_wr_enable 793C  
                  ??_at24c02_read_n_byte 006B                             ?_in_adc_init 0001  
                   at24c02_init@pAt24c02 0060                   __end_of_m_flash_unlock 7896  
                          ?_m_int8_2_hex 0060                   ??_ui_disp_menu_psw_adj 0021  
                           ___awdiv@sign 0065                                       bsr 000FE0  
                          ?_lcd_show_chr 0070                      ___wmul@multiplicand 0064  
                   _m_interp1_float_fast 2068              __end_of_rtcc_reg_wr_disable 7948  
                      _pAds1115DiffPrObj 0023                             __CFG_CP0$OFF 000000  
                          ?_m_flash_read 0060                              __CFG_OSC$HS 000000  
                                    l165 0654                                      l524 3116  
                                    l525 316A                                      l542 4EF0  
                                    WREG 000FE8                                      _PR2 000FCB  
                       ??_key_process_up 0021                                      _dwm 00FF  
                           ___awmod@sign 0065                                      prod 000FF3  
                                    tosl 000FFD                                      wreg 000FE8  
              __size_of_ads1115_read_reg 01BC                             ___flmul@aexp 007B  
                           ___flmul@bexp 0080                  __end_of___x_arrange_str 6E40  
                   ??_lcd_disp_level_bar 0021                             ___flmul@sign 007A  
                         ?_m_flash_erase 0060                             ___flmul@temp 0085  
                           ___flmul@prod 0081                _m_interp1_float_fast$4326 00DC  
             ?_key_shift_loc_fixed_point 0060                     ??_lcd_show_string_l0 0021  
                   ??_lcd_show_string_l1 0021                       m_int16_2_str_4@buf 0068  
                         ?_m_flash_write 006E                             ___fltol@exp1 00C1  
                                   l1050 6B42                                     l1042 6B36  
                                   l1027 6E7E                                     l1153 6BBE  
                                   l1154 6BBC                                     l1075 6C4E  
                                   l2205 6D18                                     l2142 5C06  
                                   l2232 1460                                     l2233 1454  
                                   l2234 1420                                     l2340 3B1E  
                                   l2325 1A78                                     l2318 17DC  
                                   l2335 1B8A                                     l2327 1AE6  
                                   l1607 4CF4                                     l1608 4D02  
                                   l2249 15D4                                     l2354 3C26  
                                   l2258 1668                                     l2291 2666  
                                   l2355 3C3E                                     l2347 3BCA  
                                   l2195 69C2                                     l1638 7432  
                                   l2288 26BE                                     l2297 26F6  
                                   l2299 2764                                     l1598 6826  
                                   l1790 74A6                                     l1995 44B0  
                                   l8632 776C                                     l8628 775A  
                                   STR_1 FFED                                     STR_2 FFE4  
                                   STR_3 FFF2                                     _LATB 000F8A  
                                   _LATC 000F8B                                     u9260 13EA  
                                   u9270 1402                                     u9280 1404  
                                   u8860 6A6A                                     u8774 58B8  
                                   u8870 6AA0                                     u8775 58B2  
                                   u9760 27C8                                     u8784 58EE  
                                   u8785 58E8                            _m_mem_cpy_len 7110  
                                   u8867 6A60                                     u8877 6A96  
                                   u9950 1B4A                                     u9870 1A04  
                                   u9875 19F8                           ??_lcd_disp_all 0020  
                      ??_key_process_set 0020                 cal_diff_hight_to_vol_h@h 00E6  
                                   _pLCD 0100                 cal_diff_hight_to_vol_v@D 00F6  
                                   _hKel FBE5             __end_of_LCDDigitalIndexTable FBAC  
                                   _hKcy FD79                 cal_diff_hight_to_vol_v@h 00E6  
              __size_of_lcd_disp_refresh 0062                                     _main 72B8  
                                   _menu 0038                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     indf0 000FEF  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 0040  
                _handler_interrupt_hight 0008                                     prodh 000FF4  
                                   prodl 000FF3                                     start 00D8  
                         ??_iic_send_ack 0020                            _globleBuffer0 0400  
                          _globleBuffer1 0500                            __CFG_IESO$OFF 000000  
                        ___fldiv@new_exp 0098              key_shift_loc_fixed_point@t8 0020  
                      _key_waite_release 7372         __end_of_iic_received_byte_if_ack 785E  
             calib_data_init_diff_pr@t16 0077                             ___param_bank 000000  
             calib_data_init_diff_pr@buf 0079                         ?_lcd_set_com_seg 0068  
     __size_of_calib_data_set_default_pr 01C4               calib_data_init_diff_pr@ret 0076  
                       ??_cal_diff_press 0020                       ?_key_waite_release 0068  
                                  EECON2 000FA7                           ??_m_int8_2_hex 0020  
             ??_ads1115_start_conversion 0021                           ??_lcd_show_chr 0021  
                          lcd_disp_all@i 0061                            lcd_disp_all@x 0060  
                        ?_m_flash_unlock 0001                    ?_m_interp1_float_fast 00C4  
                                  TABLAT 000FF5                           ??_m_flash_read 0020  
                        ___x_sample_fifo 4500                                    l10100 5AD0  
                                  l10110 5B00                                    l11000 24D2  
                                  l10106 5AEE                                    l10122 5B3E  
                                  l11100 27B4                                    l11020 2530  
                                  l11004 24DC                                    l10108 5AFA  
                                  l11014 250C                                    l10126 5B52  
                                  l10118 5B30                                    l10134 585E  
                                  l10302 6A80                                    l10312 7170  
                                  l11104 27E2                                    l11024 253A  
                                  l10240 7716                                    l10314 7172  
                                  l11114 2828                                    l11106 27F6  
                                  l11130 1746                                    l10146 58D8  
                                  l10138 5868                                    l10170 6D98  
                                  l11116 282C                                    l11108 2818  
                                  l11044 25BC                                    l11036 258E  
                                  l11212 1A8C                                    l11140 1782  
                                  l10252 76B6                                    l10260 60DA  
                                  l10422 6E82                                    l11062 2672  
                                  l11054 263A                                    l11222 1AE0  
                                  l11206 1A62                                    l12110 4D12  
                                  l10094 5ABA                                    l10246 76E6  
                                  l10182 6DDC                                    l10166 6D8E  
                                  l10270 610C                                    l10262 60E4  
                                  l11302 5BF4                                    RTCCFG 000F5F  
                                  l10432 6E98                                    l10424 6E8A  
                                  l12200 5262                                    l11080 270A  
                                  l11232 1B36                                    l11160 17F0  
                                  l11136 176A                                    l11320 3B5E  
                                  l11312 3B2E                                    l10280 6AC0  
                                  l10264 60EE                                    l10256 60C6  
                                  l12122 391C                                    l12114 38F6  
                                  l11090 275E                                    l11074 26E0  
                                  l11154 17C4                                    l11138 1770  
                                  l11330 3C08                                    l11322 3B6E  
                                  l10530 5F16                                    l10522 5EF2  
                                  l10282 6ACA                                    l10178 6DBC  
                                  l10266 60F8                                    l10258 60D0  
                                  l10274 6116                                    l11402 6F3A  
                                  l10508 6C54                                    l10444 6C02  
                                  l12060 6654                                    l11068 26BA  
                                  l11236 1B5C                                    l11164 1804  
                                  l11156 17CA                                    l11148 17A0  
                                  l11332 3C18                                    l11324 3BAC  
                                  l10532 5F22                                    l10284 6AD4  
                                  l10292 6AF2                                    l10268 6102  
                                  l11412 52DA                                    l11420 531E  
                                  l12134 3ACE                                    l12126 3926  
                                  l12118 3900                                    l12150 3CDE  
                                  l11246 1BAA                                    l11238 1B70  
                                  l11318 3B56                                    l11262 440C  
                                  l11350 2074                                    l12214 4FB0  
                                  l11510 3E96                                    l11502 77C4  
                                  l10534 5F28                                    l10542 5F5A  
                                  l10526 5F02                                    l10286 6ADE  
                                  l10278 6AB6                                    l11422 5338  
                                  l10448 6C0C                                    l11248 1BB4  
                                  l11344 3C90                                    l11280 7484  
                                  l11272 44FC                                    l11360 220E  
                                  l12208 4F6C                                    l11520 3F80  
                                  l11512 3ECC                                    l10552 6DE8  
                                  l10288 6AE8                                    l10296 6A4A  
                                  l11600 6984                                    l13112 7582  
                                  l10722 6B82                                    l12146 3CD4  
                                  l10810 12F8                                    l10802 12CC  
                                  l11266 445E                                    l11258 43BE  
                                  l11362 2214                                    l12226 503E  
                                  l11514 3EF6                                    l10546 5F6E  
                                  l10538 5F4C                                    l11290 5B8A  
                                  l11426 5364                                    l12314 7388  
                                  l13106 7578                                    l10900 14C2  
                                  l11364 224C                                    l11356 219E  
                                  l11524 4018                                    l11516 3F1C  
                                  l10740 7448                                    l10556 6E1A  
                                  l10580 7234                                    l11452 5D70  
                                  l12324 73B0                                    l11292 5B9A  
                                  l11380 6EFE                                    l11620 6CE6  
                                  l12332 75A4                                    l12316 7398  
                                  l12308 737C                                    l10662 6B2C  
                                  l12190 517C                                    l12158 3E60  
                                  l12094 4CE4                                    l10902 14C8  
                                  l10910 14E4                                    l10822 1330  
                                  l10750 4D44                                    l11542 6A04  
                                  l11710 1DA0                                    l11702 1CE8  
                                  l11518 3F42                                    l11470 30C2  
                                  l10558 6E1C                                    l11438 5CEE  
                                  l12430 4EDA                                    l12422 4EB4  
                                  l11294 5BA0                                    l12350 59FE  
                                  l12342 59EA                                    l13118 758C  
                                  l12184 414A                                    l12176 4100  
                                  l12192 51FC                                    l11552 508A  
                                  l12096 4CEA                                    l10920 15B4  
                                  l10816 130C                                    l11464 3090  
                                  l11448 5D42                                    l12328 73CE  
                                  l12360 5A1A                                    l11392 6F22  
                                  l11384 6F0A                                    l11608 69B4  
                                  l11624 6D0A                                    l11616 6CD4  
                                  l12336 75BA                                    l12178 410C  
                                  l11642 6846                                    l10906 14D2  
                                  l10834 1364                                    l10826 133A  
                                  l10762 4D90                                    l11538 69DE  
                                  l11706 1D4C                                    l11482 31C0  
                                  l12610 338A                                    l12602 333C  
                                  l10594 4956                                    l10586 7256  
                                  l12418 4E9E                                    l12370 5A38  
                                  l12362 5A20                                    l12354 5A08  
                                  l12346 59F4                                    l11618 6CE0  
                                  l10668 6B40                                    l11580 5138  
                                  l11572 510C                                    l12292 36FC  
                                  l11732 2BF8                                    l10764 4DA0  
                                  l10756 4D62                                    l11708 1D50  
                                  l12364 5A26                                    l12356 5A0E  
                                  l11396 6F2E                                    l11388 6F16  
                                  l12700 0F20                                    l13084 5FC0  
                                  l12198 525C                                    l11646 7112  
                                  l11654 7150                                    l11582 5142  
                                  l10934 161C                                    l10782 4E28  
                                  l10774 4DFA                                    l10766 4DA6  
                                  l11670 09F8                                    l11494 32B4  
                                  l12382 77D4                                    l12366 5A2C  
                                  l12358 5A14                                    l12374 5A3E  
                                  l12390 7644                                    l12710 0F7A  
                                  l12702 0F32                                    l11568 50F8  
                                  l10928 1606                                    l10944 163C  
                                  l10864 13A0                                    l10792 129E  
                                  l11672 0A4E                                    l11664 0990  
                                  l12368 5A32                                    l11832 6EEA  
                                  l12720 0FD4                                    l12712 0F8C  
                                  l12704 0F44                                    l11586 515E  
                                  l11578 5128                                    l10954 1662  
                                  l10938 1628                                    l10946 1642  
                                  l10882 1444                                    l11770 030C  
                                  l10778 4E0C                                    l11690 0DA8  
                                  l11682 0D34                                    l11658 0876  
                                  l11930 71E4                                    l11498 77AE  
                                  l12650 34B6                                    l12642 3486  
                                  l12634 3438                                    l12626 3408  
                                  l12618 33BA                                    l12386 77DA  
                                  l12394 764E                                    l12730 102E  
                                  l12722 0FE6                                    l12714 0F9E  
                                  l12706 0F56                                    l13098 600A  
                                  l10972 16F2                                    l10964 16BE  
                                  l10892 1484                                    l10876 1434  
                                  l11668 09F4                                    l11908 45DC  
                                  l11596 6972                                    l11828 6EE0  
                                  l11836 6EF4                                    l12740 1088  
                                  l12732 1040                                    l12724 0FF8  
                                  l12716 0FB0                                    l12708 0F68  
                                  l12660 0DBC                                    l10878 143A  
                                  l10798 12C2                                    l12590 3302  
                                  l11598 697E                                    l12750 10E2  
                                  l12742 109A                                    l12734 1052  
                                  l12726 100A                                    l12718 0FC2  
                                  l12670 0E12                                    l12662 0DCA  
                                  l10984 1716                                    l10976 16FE  
                                  l10968 16D0                                    l11784 0526  
                                  l11696 1BD6                                    l12760 113C  
                                  l12752 10F4                                    l12744 10AC  
                                  l12736 1064                                    l12728 101C  
                                  l12680 0E6C                                    l12672 0E24  
                                  l12664 0DDC                                    l10994 24AE  
                                  l10978 1702                                    l12594 330C  
                                  l11866 5812                                    l12754 1106  
                                  l12746 10BE                                    l12738 1076  
                                  l12690 0EC6                                    l12682 0E7E  
                                  l12674 0E36                                    l12666 0DEE  
                                  l12930 7094                                    l12922 7076  
                                  l12914 72A0                                    l12860 6720  
                                  l12756 1118                                    l12748 10D0  
                                  l12692 0ED8                                    l12684 0E90  
                                  l12676 0E48                                    l12668 0E00  
                                  l12764 114E                                    l12932 70A0  
                                  l12908 727E                                    l12758 112A  
                                  l12694 0EEA                                    l12686 0EA2  
                                  l12678 0E5A                                    l12926 7084  
                                  l13398 72F0                                    l11896 451A  
                                  l12872 674E                                    l12864 6730  
                                  l12696 0EFC                                    l12688 0EB4  
                                  l12936 70AA                                    l12880 71F6  
                                  l12944 74A8                                    l11978 6028  
                                  l11986 6078                                    l12970 668C  
                                  l12698 0F0E                                    l12964 667E  
                                  l12868 673E                                    l12876 675A  
                                  l12982 66AC                                    l12894 7626  
                                  l12886 7216                                    l12976 669A  
                                  l12996 66D8                                    l12988 66BE  
                          ___fltol@sign1 00C0                          __end_of___aldiv 4E3A  
                        __end_of___fladd 1728                                    ?_main 0001  
                      ?_key_process_down 0001                    __end_of_data_init_all 7922  
                        __end_of___fldiv 2850                          __end_of___awdiv 5B5C  
                        __end_of___flneg 7496                          __end_of___awmod 5F78  
                        __end_of___flmul 1BCE                          __end_of___fltol 5170  
                        __end_of___lldiv 5C18                      ??_key_waite_release 0020  
                                  u10240 5352                                    u11108 40B4  
                                  u11109 40C8                                    u11118 40DA  
                                  u11310 4E5A                                    u11128 411E  
                                  u11208 5248                                    u10520 50AA  
                                  u10408 3E82                                    u11129 4134  
                                  u11241 6866                                    u10418 3EA8  
                                  u11148 4194                                    u10428 3EDE  
                                  u10348 5390                          ___awdiv@divisor 0062  
                                  u11149 41AA                                    u10525 509E  
                                  u10349 53A4                                    u11158 41C6  
                                  u11078 4034                                    u10438 3F08  
                                  u10358 53B6                                    u11510 3458  
                                  u11079 4048                                    u10359 53DA  
                                  u11088 405A                                    u11168 518E  
                                  u10448 3F2E                                    u10368 53EC  
                                  u11089 4078                                    u11169 51A2  
                                  u10369 5404                                    u11098 408A  
                                  u11178 51B4                                    u10650 713A  
                                  u10458 3F54                                    u10378 5416  
                                  u11450 335C                                    u11099 40A2  
                                  u11179 51D2                                    u10379 542E  
                                  u11515 344C                                    u11188 51E4  
                                  u10468 3F92                                    u10388 5440  
                                  u11540 34D6                                    u10469 3FA8  
                                  u10389 5458                                    u11198 5212  
                                  u10478 3FD0                                    u10398 546A  
                                  u11199 5230                                    u10479 3FE6  
                                  u11455 3350                                    u10488 4004  
                                  u11480 33DA                                    _T2CON 000FCA  
                                  u10657 7130                                    u11545 34CA  
                                  u10940 6650                                    u11485 33CE  
                                  u10880 5808                                    u11851 5F86  
                                  _FSR0H 000FEA                                    _FSR0L 000FE9  
                        __end_of___lwdiv 69CC                          __end_of___lwmod 6D22  
                        ___awdiv@counter 0064                                    _PORTB 000F81  
                                  _PORTC 000F82                _key_adj_value_fixed_point 5766  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISG 000F98                       ??_key_process_down 0021  
                        ??_lcd_disp_logo 0020                             ?_key_polling 0001  
                    lcd_disp_dp_loc_0@dp 0020                      lcd_disp_dp_loc_1@dp 0020  
                    lcd_disp_dp_loc_2@dp 0020                             ?_key_process 0001  
                    ___lmul@multiplicand 0072                           __CFG_FCMEN$OFF 000000  
                        __end_of_crc_sum 60B4                                    _glRtc 0133  
            sample_diff_pr_chip_fast@t16 0086                                    _st_Bj 0186  
                         ?_m_mem_cpy_len 0060              sample_diff_pr_chip_fast@ret 0085  
                         __CFG_T1DIG$OFF 000000             ??___enter_menu_set_base_zero 0020  
                                  pclath 000FFA                                    tablat 000FF5  
           __end_of_sample_in_soc_adc_ch 34EA                          __end_of_rtc_set 5CD0  
                      ??_data_sys_cal_v1 0020                        ??_data_sys_cal_v2 0020  
                                  plusw1 000FE3                                    plusw2 000FDB  
                   _event_process_ticker 7906                       crc_verify@expected 0074  
                                  status 000FD8                             _adc_pressure 0182  
                        ??_iic_send_byte 0021                    __end_of_data_sys_init 47D2  
                     _diff_prCalibTabDef 0200                __end_of_key_waite_release 73AE  
                       ?_lcd_show_string 0073                          ??_iic_waite_ack 0020  
                       __end_of_HexTable FBE5                          __initialization 5D86  
           at24c02_write_n_byte@pAt24c02 0062                             __end_of_hKel FD79  
                           __end_of_hKcy FF0D                        ??_cal_diff_p_to_h 00C4  
                           __end_of_main 72F6                            _prCalibTabDef 0300  
                       _glNoEventTimeOut 003F        __end_of_calib_data_set_default_pr 3E66  
                   iic_received_byte@ret 0060              __size_of_calib_data_init_pr 00FC  
            sample_diff_pr_chip_slow@t16 0086                 ?_cal_additional_pressute 0001  
            sample_diff_pr_chip_slow@ret 0085             __size_of_sample_pr_chip_comm 0196  
                sample_in_soc_adc_ch@t16 006D                            _userTicker_ms 0025  
                sample_in_soc_adc_ch@ret 006F                                   ??_main 0021  
                          __activetblptr 000002                          ??_m_flash_erase 0021  
                             _at24c02Ch0 01BC                               _at24c02Ch1 01C7  
                  ___enter_menu_set_pose 766A             __end_of_key_process_set_long 7952  
                        ??_m_flash_write 0076                     cal_diff_press@tabrow 02B2  
                 __size_of_event_process 0034                         ?___x_arrange_str 0060  
       __size_of_calib_data_init_diff_pr 00FC                                   _ADCON1 000FC1  
       __size_of_ads1115_read_conversion 0046                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                         __end_of___exp_10 6F56  
                       ___awdiv@dividend 0060                                   _LCDCON 000FA8  
                                 _LCDSE0 000FA9                                   _LCDSE1 000FB6  
                                 _LCDSE2 000FB7                                   _LCDSE3 000FB8  
                                 _LCDSE4 000FB9                                   _LCDSE5 000FBA  
                                 _LCDREG 000FD2                ??_handler_interrupt_hight 0001  
                                 i1l1686 0090                                   i1l1785 78A6  
                         __CFG_WDTEN$OFF 000000                                   i2l1681 59A4  
                                 i2l1675 595A                                   i2l1676 5962  
                                 i2l1677 596A                                   i2l1678 5972  
                                 i2l1785 78C0                                   _INTCON 000FF2  
                                 _TABLAT 000FF5             __end_of_at24c02_write_n_byte 5278  
                  ?_event_process_ticker 0001              ??_key_process_set_down_long 007F  
                          m_int8_2_hex@b 0062             __size_of_sys_ticker_irq_hook 001A  
                       __end_of___xxtofl 3CA2                         ??_lcd_disp_level 0021  
              ___enter_menu_set_pose@fps 0060                         __end_of_delay_ms 77D2  
                       __end_of_delay_us 745E                            ?_at24c02_init 0060  
         __size_of_sample_diff_pr_fliter 007E                     __size_of_lcd_bl_init 0004  
          __end_of_sample_diff_pr_fliter 67DE                           __CFG_XINST$OFF 000000  
                         cal_press@F7765 0123                    m_interp1_float_fast@f 00E0  
                  m_interp1_float_fast@i 00E4                  __end_of___x_sample_fifo 466A  
                  m_interp1_float_fast@x 00D4                    m_interp1_float_fast@y 00D8  
                       __end_of_lcd_init 78F8                         __end_of_iic_stop 7426  
                                 ___flge 4370                                   ___lmul 69CC  
                              ??___aldiv 0020                                ??___fladd 00AC  
                                 ___wmul 7502                   ??_m_interp1_float_fast 00CC  
                              ??___fldiv 008F                                ??___awdiv 0020  
                              ??___flneg 0020                                ??___awmod 0020  
                              ??___flmul 0076                                ??___fltol 00BC  
                   __end_of_flashTestbuf FFE4                                ??___lldiv 0020  
                at24c02_write_n_byte@buf 0065                  at24c02_write_n_byte@len 0067  
                              ??___lwdiv 0021                                ??___lwmod 0021  
                    lcd_disp_level@level 0072                                   clear_0 5DCE  
                                 clear_1 5DE2                                   clear_2 5DF4  
                                 clear_3 5E00                                   clear_4 5E0C  
                                 clear_5 5E1E                            m_flash_read@i 0068  
                       ___awdiv@quotient 0066                          ___awmod@divisor 0062  
                   __size_of_lcd_show_dp 006C                     __end_of_lcd_disp_all 766A  
                        ___awmod@counter 0064                     __size_of_in_adc_init 0024  
                              ??_crc_sum 0064                    i2_sys_ticker_irq_hook 78B0  
                   _LCDDigitalIndexTable FB83                     at24c02_read_n_byte@i 006F  
                ??_in_adc_start_and_read 0020                             __pdataCOMRAM 003C  
               __size_of_ads1115_set_mux 0024                         key_polling@ktemp 0066  
                       __end_of_soc_init 78DA                     __end_of_iic_send_ack 71A8  
                       _ads1115_read_reg 3E66                             __mediumconst F982  
                       __end_of_rtc_init 7334                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
      __size_of_iic_received_byte_if_ack 0020                     lcd_disp_get_code@chr 0060  
                   lcd_disp_get_code@ret 0061                ?_iic_received_byte_if_ack 0001  
                        ??_m_mem_cpy_len 0020                                ??_rtc_set 0020  
               ui_disp_start_cs600@F7634 01F2                 ?_cal_diff_hight_to_vol_h 00E6  
               ?_cal_diff_hight_to_vol_v 00E6                 ??_event_process_time_out 0021  
                   __end_of_m_int8_2_hex 6FB0                               ___flge@ff1 00B8  
                             ___flge@ff2 00BC                     __end_of_lcd_show_chr 614C  
                           ___xxtofl@arg 006A                             _pcf8574Value 002E  
                           ___xxtofl@exp 0069                             ___xxtofl@val 0060  
                       _lcd_disp_refresh 6D22                               __accesstop 0060  
                __end_of__initialization 5E24                     __end_of_m_flash_read 685C  
                      _sampBufDiffPr_D01 01AC                        _sampBufDiffPr_D23 019C  
                             ___flneg@f1 00A0                               ___exp_10@n 0020  
               __size_of_m_int16_2_str_4 015E               __size_of_key_waite_release 003C  
           __size_ofi2_rtc_alrm_irq_hook 0002                           ??_at24c02_init 0020  
                          ___rparam_used 000001                               ___fltol@f1 00B8  
                  _handler_interrupt_low 0018                        _event_process_rtc 6658  
                          _p_prEepromObj 0029                            _event_process 756E  
                         iic_send_byte@i 0061                           iic_send_byte@x 0060  
                      _sampBufExPr0InSoc 0178                           __pcstackCOMRAM 0001  
                      _sampBufExPr1InSoc 0176                       __size_of_cal_press 007C  
                           __pidataBANK1 7922                       ?_event_process_rtc 0001  
         __size_of_ui_disp_adj_xfixed_pt 00B6            __end_of_ui_disp_adj_xfixed_pt 5D86  
                m_flash_write@writeTimes 0078                     _inSocAdcSampleUpdate 0187  
        __end_of_handler_interrupt_hight 59E0                    m_flash_write@pageAddr 007A  
              _key_process_set_down_long 59E0                    ___x_sample_fliter@t32 007E  
               _sample_diff_pr_chip_fast 4E3A                    ___x_sample_fliter@buf 006E  
               ___enter_menu_set_density 74CC                    ___x_sample_fliter@len 0070  
                   _sample_in_soc_adc_ch 32C8                    ___x_sample_fliter@max 007A  
                  ___x_sample_fliter@min 007C                    sample_in_soc_adc_ch@i 0073  
               _sample_diff_pr_chip_slow 4A94                      ??_event_process_rtc 0021  
           __end_of_ui_disp_clear_num_dp 700A                   ?___enter_menu_set_pose 0001  
                        _key_process_set 7758                    _ads1115_init_all_chip 7538  
               ___x_sample_fliter@maxLoc 0078                  in_adc_start_and_read@ch 0066  
               ___x_sample_fliter@minLoc 0079                       _rtcc_reg_wr_enable 7930  
             calib_data_set_default_pr@i 006E               calib_data_set_default_pr@j 006F  
                     __size_of_iic_start 003E                        crc_append@message 006C  
                   __size_of_key_polling 005C                     __size_of_key_process 0082  
            ??_key_shift_loc_fixed_point 0020                        lcd_disp_logo@show 0020  
                     __size_of_m_mem_cpy 0044                   ??_event_process_ticker 0021  
                    ___x_sample_fifo@buf 006E                        lcd_show_string@t8 0075  
                    ___x_sample_fifo@len 0072                      ___x_sample_fifo@ret 0079  
                             __pbssBANK0 00FE                               __pbssBANK1 0100  
                             __pbssBANK2 0200                               __pbssBANK3 0300  
                             __pbssBANK4 0400                               __pbssBANK5 0500  
     __size_of_key_adj_value_fixed_point 00EA                               _defalutRtc 01F8  
                    ?_rtcc_reg_wr_enable 0001                 __size_of_sys_ticker_init 0010  
                      _pdiff_prEepromObj 002B                               _diffSampCh 0035  
                    ___x_sample_fliter@i 0082                __end_of_event_process_rtc 66DE  
                  calib_data_init_pr@t16 0077                      m_flash_write@tmpBuf 007F  
                        lcd_disp_level@i 0073                    calib_data_init_pr@buf 0079  
                  calib_data_init_pr@ret 0076              __end_of_at24c02_read_n_byte 41DA  
                      ___x_sample_fifo@i 007D                        ___x_sample_fifo@x 0070  
                         ?_event_process 0001                         ??_m_flash_unlock 0020  
            __size_of_lcd_disp_chr_loc_0 0090              __size_of_lcd_disp_chr_loc_1 0090  
            __size_of_lcd_disp_chr_loc_2 0090              __size_of_lcd_disp_chr_loc_3 0090  
            __size_of_lcd_disp_chr_loc_4 0090              __size_of_lcd_disp_chr_loc_5 0090  
            __size_of_lcd_disp_chr_loc_6 0090              __size_of_lcd_disp_chr_loc_7 0090  
                      ___x_sample_fliter 306A                         ?___x_sample_fifo 006E  
                   _key_process_set_long 7950           ___enter_menu_set_base_zero@fps 007D  
                                ?___flge 00B8                            _x_Pemperature 014A  
                                ?___lmul 006E                                  POSTINC0 000FEE  
                     ?___x_sample_fliter 006E                                  ?___wmul 0062  
           __size_of_ui_disp_start_cs600 009E                                ?___exp_10 0060  
                         ___lmul@product 0076                   ?i2_sys_ticker_irq_hook 0001  
                             _crc_append 6C5C                     ??_rtcc_reg_wr_enable 0020  
                  ?_sample_in_soc_adc_ch 0001                                  _ALRMRPT 000F5A  
                   _at24c02_write_n_byte 5170            __size_of_ui_disp_menu_psw_adj 001E  
                    ??___x_sample_fliter 0072                               _crc_verify 65CC  
                                i1l10050 007E                            ?_ads1115_init 0060  
                                i2l10024 5992                          _data_sys_cal_v1 34EA  
                        _data_sys_cal_v2 47D2                                ?___xxtofl 0060  
                _calib_data_init_diff_pr 557A                               _lcd_config 772A  
                      cal_diff_p_to_h@f1 00CA                        cal_diff_p_to_h@f2 00C6  
                              ?_delay_ms 0064                                ?_delay_us 0060  
                                _TBLPTRH 000FF7                                  _TBLPTRL 000FF6  
                                _TBLPTRU 000FF8                  _ads1115_read_conversion 71A8  
            __size_of_lcd_disp_level_bar 04D2             __size_of_rtcc_reg_wr_disable 000C  
                                _RTCVALH 000F5D                                  _RTCVALL 000F5C  
                      __end_of_cal_press 68D8                     ___int32_2_mflot32@mf 0079  
                         m_int8_2_hex@t8 0020                                ?_lcd_init 0001  
            __size_of_lcd_show_string_l0 0044              __size_of_lcd_show_string_l1 0042  
                              ?_iic_stop 0001                        ??_ads1115_set_mux 0020  
        __size_of_event_process_time_out 000E                          _cal_diff_p_to_h 5676  
                      __end_of_auchCRCHi FB83                        __end_of_auchCRCLo FA83  
             cal_pt100_temperature_in@f1 00CA               cal_pt100_temperature_in@f2 00C6  
                    _sample_pr_chip_comm 41DA               cal_pt100_temperature_ex@f1 00CF  
             cal_pt100_temperature_ex@f2 00CB                   sample_pr_chip_comm@t16 0081  
              __size_of_key_process_down 003C                   sample_pr_chip_comm@ret 0080  
                          ?_ui_disp_menu 0001        __end_of_key_adj_value_fixed_point 5850  
               _cal_pt100_temperature_in 2DCE                 _cal_pt100_temperature_ex 2850  
              __end_of___x_sample_fliter 32C8                   ?_handler_interrupt_low 0001  
            at24c02_read_n_byte@pAt24c02 0064                                  __Hparam 0000  
                      cal_diff_press@xin 02CC                                  __Lparam 0000  
                 m_interp1_float_fast@in 00C6                    ?_key_process_set_long 0001  
                         lcd_show_dp@loc 0071                                ?_soc_init 0001  
                  __size_of_lcd_disp_all 0030                                ?_rtc_init 0001  
              _key_shift_loc_fixed_point 75D6                                  ___aldiv 4D20  
                        __size_of___flge 0190                        __end_of_iic_start 7372  
                                ___fladd 1280                        ??_m_int16_2_str_4 0020  
                     data_sys_cal_v1@stp 00C2                       data_sys_cal_v2@stp 00C2  
                                ___fldiv 2490                                  ___awdiv 5A9E  
                                ___flneg 745E                          __size_of___lmul 0076  
                   _ex_pt100SampleUpdate 0189                                  ___awmod 5ED6  
                                ___flmul 1728                                  ___fltol 5064  
                      m_flash_erase@addr 0060                                  ___lldiv 5B5C  
                        __size_of___wmul 0036                  __end_of_key_process_set 7782  
                                ___lwdiv 6954                                  ___lwmod 6CC0  
                      __end_of_m_mem_cpy 7276                                _LCDDATA10 000F70  
                              _LCDDATA11 000F71                                _LCDDATA12 000F72  
                              _LCDDATA20 000F7A                                _LCDDATA13 000F73  
                              _LCDDATA21 000F7B                                _LCDDATA14 000F74  
                              _LCDDATA22 000F7C                                _LCDDATA15 000F75  
                              _LCDDATA23 000F7D                                _LCDDATA16 000F76  
                              _LCDDATA17 000F77                                _LCDDATA18 000F78  
                              _LCDDATA19 000F79                          __CFG_STVREN$OFF 000000  
                             ??___exp_10 0020                     ?_sample_pr_chip_comm 0001  
                                _pcf8574 0118                                  __pcinit 5D86  
                   m_flash_unlock@oldGIE 0020                    __size_of_iic_send_ack 004A  
               at24c02_write_n_byte@addr 0064                                  __ramtop 1000  
                  ?_at24c02_write_n_byte 0062                                  __ptext0 72B8  
                                __ptext1 5F78                                  __ptext2 7496  
                                __ptext3 6F56                                  __ptext4 7276  
                                __ptext5 71EE                                  __ptext6 760A  
                                __ptext7 7064                                  __ptext8 0DAE  
                                __ptext9 78CA                                  _crc_sum 6016  
                 ?_ads1115_init_all_chip 0001                           ??_ads1115_init 0020  
                    _sys_ticker_irq_hook 7896                        ___int32_2_mflot32 5278  
               __size_of_lcd_set_com_seg 00C8                                _T1CONbits 000FCD  
                    lcd_set_com_seg@bits 006F                               ??___xxtofl 0064  
                   __end_of_at24c02_init 6954                      lcd_set_com_seg@show 0069  
                       ___awmod@dividend 0060                                  _rtHight 0162  
                     ?___int32_2_mflot32 006D                         ___aldiv@dividend 0060  
                  __size_of_m_int8_2_hex 005A                                _LCDPSbits 000FAA  
                             ??_delay_ms 0020                               ??_delay_us 0020  
                  __size_of_lcd_show_chr 0098                     m_interp1_cal_p_t@xin 007C  
                   m_interp1_cal_p_v@xin 007C                    __end_of_lcd_disp_logo 763A  
                                _rtc_set 5C18                    __size_of_m_flash_read 007E  
          key_adj_value_fixed_point@dloc 0071         ads1115_start_conversion@pAds1115 0067  
      __size_of_ads1115_start_conversion 002A         __size_of_cal_additional_pressute 01FC  
                             ??_lcd_init 0020                ?_ads1115_start_conversion 0067  
                         __pintcode_body 5918                               ??_iic_stop 0020  
                           _flashTestbuf FFA3                     end_of_initialization 5E24  
                        cal_press@tabrow 0098                      ??___int32_2_mflot32 0071  
                         m_flash_write@i 0079                           m_flash_write@j 007E  
                __size_of_key_process_up 0034                           ??_ui_disp_menu 0021  
                           _lcd_disp_all 763A                            __Lmediumconst F982  
                                int_func 5918                     ?_sys_ticker_irq_hook 0001  
                        ??_event_process 0021               __size_of_event_process_rtc 0086  
                 __size_of_data_init_all 000E                     _ui_disp_clear_num_dp 6FB0  
        calib_data_set_default_diff_pr@i 006F          calib_data_set_default_diff_pr@j 006E  
                        ___lldiv@divisor 0064                    __end_of_iic_send_byte 6B88  
                        ___lldiv@counter 006C                 __end_of_ads1115_read_reg 4022  
           _cal_diff_hight_to_vol_v$4327 00EA                             _iic_send_ack 715E  
                             _ticker_dly 7496                               _rtPressure 0152  
                             ??_soc_init 0020               __end_of_calib_data_init_pr 557A  
                      ??_sys_ticker_init 0020                         ___aldiv@quotient 006A  
         key_adj_value_fixed_point@value 006E                               ??_rtc_init 0020  
                                postdec1 000FE5                                  postdec2 000FDD  
                  __end_of_iic_waite_ack 6E9E                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                      _lcd_disp_dp_loc_0 76FA                        _lcd_disp_dp_loc_1 76CA  
                      _lcd_disp_dp_loc_2 769A                  m_interp1_cal_p_v@tabrow 007A  
                 _event_process_time_out 78F8                  __end_of_data_sys_cal_v1 36EE  
                __end_of_data_sys_cal_v2 4936                    ??_sample_pr_chip_comm 007E  
                 ??_sample_in_soc_adc_ch 0069                        _lcd_disp_get_code 6D84  
               __size_of_lcd_show_string 006E                             _m_int8_2_hex 6F56  
              __end_of___int32_2_mflot32 537E                              ?_crc_append 006C  
             ?_calib_data_set_default_pr 0001                             _lcd_show_chr 60B4  
                       _defultSystemData FF0D                 __end_of_lcd_disp_refresh 6D84  
                     ?_lcd_disp_dp_loc_0 0001                       ?_lcd_disp_dp_loc_1 0001  
                     ?_lcd_disp_dp_loc_2 0001                ??_calib_data_init_diff_pr 0021  
                           _m_flash_read 67DE                       ?_lcd_disp_get_code 0001  
                            ?_crc_verify 006C                      i2_rtc_alrm_irq_hook 7954  
              ??_ads1115_read_conversion 006C                        _m_interp1_cal_p_t 1BCE  
                      _m_interp1_cal_p_v 086E                              ___fladd@grs 00B7  
                 __size_of_data_sys_init 0168                  __size_of_cal_diff_press 0112  
                             crc_sum@len 0066                              ?_lcd_config 0001  
                          ___xxtofl@sign 0068                  __end_of_cal_diff_p_to_h 5766  
         __size_of_in_adc_start_and_read 006A            __end_of_in_adc_start_and_read 6BF2  
                     ?_m_interp1_cal_p_t 007A                       ?_m_interp1_cal_p_v 007A  
                    ??_lcd_disp_dp_loc_0 0020                      ??_lcd_disp_dp_loc_1 0020  
                    ??_lcd_disp_dp_loc_2 0020                    __end_of_m_flash_erase 7064  
                   lcd_show_string_l0@t8 0075                     lcd_show_string_l1@t8 0075  
                    ??_lcd_disp_get_code 0020                              ___fldiv@grs 009A  
                            ___fldiv@rem 0094              iic_received_byte_if_ack@ack 0062  
              ads1115_write_reg@pAds1115 0062                     _data_sys_cal_v1$4321 00C6  
                   _data_sys_cal_v1$4322 00CA                     _data_sys_cal_v1$4323 00CE  
                   _data_sys_cal_v2$4324 00C6                     _data_sys_cal_v2$4325 00CA  
            iic_received_byte_if_ack@ret 0063       __size_of_key_process_set_down_long 00BE  
                  __end_of_m_flash_write 4D20                      ??_m_interp1_cal_p_t 007F  
                    ??_m_interp1_cal_p_v 0080                              ___flmul@grs 007C  
                        iic_send_ack@ack 0020                    ??_sys_ticker_irq_hook 000F  
                          ??_lcd_bl_init 0020                 __size_of___x_arrange_str 005E  
             __size_of___x_sample_fliter 025E                     ?i2_rtc_alrm_irq_hook 0001  
                  ?_ui_disp_clear_num_dp 0001                        _ads1115_write_reg 537E  
                 ??_key_process_set_long 0020               ??_sample_diff_pr_chip_fast 0021  
                     ?_ads1115_write_reg 0062               ??___enter_menu_set_density 0060  
             ??_sample_diff_pr_chip_slow 0021                __end_of_lcd_disp_dp_loc_0 772A  
              __end_of_lcd_disp_dp_loc_1 76FA                __end_of_lcd_disp_dp_loc_2 76CA  
                     iic_received_byte@i 0061         __size_of_cal_diff_hight_to_vol_h 02AE  
       __size_of_cal_diff_hight_to_vol_v 0792                              _adc_inPt100 0184  
              __end_of_lcd_disp_get_code 6DE2                            ??_lcd_show_dp 0021  
                            _adc_exPt100 0027                              _adjLocation 003B  
                  _sample_diff_pr_fliter 6760                            ??_in_adc_init 0020  
                         __end_of___flge 4500                         ?_key_process_set 0001  
                             m_mem_cpy@d 0060                               m_mem_cpy@s 0062  
                         __end_of___lmul 6A42                   ??_at24c02_write_n_byte 0021  
                ??___enter_menu_set_pose 0020                           __end_of___wmul 7538  
          __size_of_m_interp1_float_fast 0428                            __pidataCOMRAM 7948  
                    ??_ads1115_write_reg 0021                __end_of_m_interp1_cal_p_t 2068  
              __end_of_m_interp1_cal_p_v 0DAE                    at24c02_write_n_byte@i 0069  
                           cal_press@ret 0097                             cal_press@xin 009A  
                          _data_init_all 7914                       lcd_disp_get_code@i 0062  
                      crc_verify@message 006C                      start_initialization 5D86  
                 ui_disp_start_cs600@buf 0076                   ui_disp_start_cs600@dly 007C  
               ?_handler_interrupt_hight 0001   __end_of_calib_data_set_default_diff_pr 3AD4  
__size_of_calib_data_set_default_diff_pr 01EA           _calib_data_set_default_diff_pr 38EA  
                        _LCDDigitalTable FBAC                        ??_lcd_set_com_seg 006A  
            ?___enter_menu_set_base_zero 0001                   ___x_sample_fliter@loop 0071  
                  __end_of_m_mem_cpy_len 715E                   lcd_disp_chr_loc_0@code 0020  
                      m_flash_write@addr 006E                   lcd_disp_chr_loc_1@code 0020  
                 lcd_disp_chr_loc_2@code 0020        __end_of_key_process_set_down_long 5A9E  
                 lcd_disp_chr_loc_3@code 0020                   lcd_disp_chr_loc_4@code 0020  
                    _ui_disp_start_cs600 5F78                   lcd_disp_chr_loc_5@code 0020  
                 lcd_disp_chr_loc_6@code 0020                   lcd_disp_chr_loc_7@code 0020  
                       _key_process_down 73AE                __end_of_ads1115_write_reg 547E  
        __end_of_calib_data_init_diff_pr 5676            _cal_pt100_temperature_in$4328 00C2  
          _cal_pt100_temperature_ex$4329 00C7                       ads1115_set_mux@mux 0062  
                    __size_of_crc_append 0064                    ??i2_rtc_alrm_irq_hook 0001  
               in_adc_start_and_read@ret 0067                     __end_of_ads1115_init 5ED6  
                          _data_sys_init 466A                  lcd_disp_level_bar@__bar 0070  
                    __size_of_crc_verify 008C                         lcd_show_chr@code 0072  
               ads1115_read_reg@pAds1115 0064                              ?_ticker_dly 0060  
                    __size_of_lcd_config 002E                         data_sys_cal_v1@f 00D6  
                       data_sys_cal_v2@d 00D2                         data_sys_cal_v1@h 00D2  
                       data_sys_cal_v2@f 00CE                         data_sys_cal_v1@r 00DA  
                   key_waite_release@key 006A                      _rtcc_reg_wr_disable 793C  
                    __end_of_lcd_bl_init 7950                                 ??___flge 00C0  
                ??i2_sys_ticker_irq_hook 0001                                 ??___lmul 0020  
                               ??___wmul 0021                       m_interp1_cal_p_t@i 0095  
                     m_interp1_cal_p_v@i 0096                       m_interp1_cal_p_t@x 0091  
                     m_interp1_cal_p_t@y 008D                       m_interp1_cal_p_v@x 0092  
                     m_interp1_cal_p_v@y 008E                              __pdataBANK1 01F2  
                       __CFG_LPT1OSC$OFF 000000                     ?_ui_disp_start_cs600 0001  
                       ?_data_sys_cal_v1 00C2                         ?_data_sys_cal_v2 00C2  
             __size_of___int32_2_mflot32 0106                    __size_of_at24c02_init 007C  
                __size_of_lcd_disp_level 0058                    _ui_disp_adj_xfixed_pt 5CD0  
                   __end_of_ui_disp_menu 77F6                           ?_data_init_all 0001  
                        _ads1115_set_mux 781A                 _iic_received_byte_if_ack 783E  
                              ___fladd@a 00A8                                ___fladd@b 00A4  
                      __size_of___exp_10 005C                              _ALRMCFGbits 000F5B  
                    __end_of_lcd_show_dp 6B1C                       lcd_show_string@str 0073  
                              ___fldiv@a 008B                                ___fldiv@b 0087  
                    __end_of_in_adc_init 781A       __size_of_key_shift_loc_fixed_point 0034  
                          ??_key_polling 0020                         _sampBufDiffPr_S1 017A  
                              _pAdjValue 017C                            ??_key_process 0021  
                              ___flmul@a 0072                                ___flmul@b 006E  
                            __pbssCOMRAM 0021                         data_sys_init@buf 00E1  
                      ??_lcd_show_string 0021                         data_sys_init@ret 00DE  
                       data_sys_init@stp 00DF                            __pcstackBANK0 0060  
                          __pcstackBANK1 01FF                            __pcstackBANK2 02B2  
                       ?_cal_diff_p_to_h 00C2                                _adc_iPrEx 016A  
                   ?_rtcc_reg_wr_disable 0001                  _cal_additional_pressute 36EE  
                           _stRTCCFGbits 000F5F               ??_cal_pt100_temperature_in 0020  
             ??_cal_pt100_temperature_ex 00C2                 key_waite_release@timeout 0068  
                      __size_of___xxtofl 01CE                        __size_of_delay_ms 0026  
                      __size_of_delay_us 0038                      __CFG_CCP2MX$DEFAULT 000000  
                         _key_process_up 75A2                  ??_handler_interrupt_low 000F  
           __end_of_ui_disp_menu_psw_adj 787C                      ___x_arrange_str@len 0062  
                        _m_int16_2_str_4 4936                      ___x_arrange_str@str 0060  
                      __size_of_lcd_init 000E            __size_of_event_process_ticker 000E  
                              _cal_press 685C                   ??_ui_disp_clear_num_dp 0021  
                      __size_of_iic_stop 003C               __end_of_lcd_disp_chr_loc_0 65CC  
             __end_of_lcd_disp_chr_loc_1 653C               __end_of_lcd_disp_chr_loc_2 64AC  
             __end_of_lcd_disp_chr_loc_3 641C               __end_of_lcd_disp_chr_loc_4 638C  
             __end_of_lcd_disp_chr_loc_5 62FC               __end_of_lcd_disp_chr_loc_6 626C  
             __end_of_lcd_disp_chr_loc_7 61DC                           ?_data_sys_init 0001  
                              _auchCRCHi FA83                                _auchCRCLo F983  
                      ___x_arrange_str@i 0020                  ads1115_set_mux@pAds1115 0060  
                           _at24c02_init 68D8                         ___lwdiv@dividend 0062  
          ads1115_read_conversion@result 006D                   ?_sample_diff_pr_fliter 0083  
           ___enter_menu_set_density@fps 0062               __size_of_lcd_disp_dp_loc_0 0030  
             __size_of_lcd_disp_dp_loc_1 0030               __size_of_lcd_disp_dp_loc_2 0030  
                              __pintcode 0008               __size_of_lcd_disp_get_code 005E  
                          __pmediumconst F982                        ??___x_arrange_str 0020  
                               ?___aldiv 0060                                 ?___fladd 00A4  
                               ?___fldiv 0087                                 ?___awdiv 0060  
                              __ptext100 466A                                __ptext101 4BE8  
                              __ptext110 2490                                __ptext102 67DE  
                               ?___flneg 00A0                                __ptext111 547E  
                              __ptext103 700A                                __ptext120 5170  
                              __ptext112 3CA2                                __ptext104 787C  
                              __ptext121 4022                                __ptext113 557A  
                              __ptext105 47D2                                __ptext130 7538  
                              __ptext122 7334                                __ptext114 65CC  
                              __ptext106 34EA                                __ptext131 5E32  
                              __ptext123 6B1C                                __ptext115 7110  
                              __ptext107 3AD4                                __ptext124 6E40  
                              __ptext116 6C5C                                __ptext108 5064  
                              __ptext133 7896                                __ptext125 73EA  
                              __ptext117 6016                                __ptext109 1728  
                              __ptext134 7952                                __ptext126 783E  
                              __ptext118 38EA                                __ptext127 715E  
                              __ptext119 7502                                __ptext136 78B0  
                              __ptext128 6BF2                                __ptext137 7954  
                              __ptext129 68D8                                __ptext138 0000  
                               ?___awmod 0060                                 ?___flmul 006E  
                               ?___fltol 00B8                                 ?___lldiv 0060  
                ___mflot32_2_int32@F7625 013E                  ??_ads1115_init_all_chip 0020  
                  ??_ui_disp_start_cs600 0021                                 ?___lwdiv 0062  
                               ?___lwmod 0069                                _fpSysData 003C  
                      __size_of_soc_init 0010             __size_of_at24c02_read_n_byte 01B8  
                            __pintcodelo 0018                        __size_of_rtc_init 003E  
       __end_of_ads1115_start_conversion 77AC                                _dlyTicker 016E  
             __size_of_m_interp1_cal_p_t 049A               __size_of_m_interp1_cal_p_v 0540  
            __size_of_rtcc_reg_wr_enable 000C                                _iic_start 7334  
                               ?_crc_sum 0060                      ___int32_2_mflot32@x 006D  
               __size_of___x_sample_fifo 016A                  __end_of_LCDDigitalTable FBD4  
              cal_diff_hight_to_vol_h@f1 00F6                cal_diff_hight_to_vol_h@f2 00EE  
              cal_diff_hight_to_vol_h@v1 00F2                cal_diff_hight_to_vol_h@v2 00EA  
                        at24c02_init@slv 0062                                _m_mem_cpy 7232  
              cal_diff_hight_to_vol_v@f1 00FA                cal_diff_hight_to_vol_v@v1 00EE  
              cal_diff_hight_to_vol_v@v2 00F2             cal_additional_pressute@index 00CD  
             __end_of_lcd_disp_level_bar 1280                           _cal_diff_press 4F52  
                  ??_rtcc_reg_wr_disable 0020               __end_of_lcd_show_string_l0 7232  
             __end_of_lcd_show_string_l1 72B8        __end_of_key_shift_loc_fixed_point 760A  
                            _PADCFG1bits 000F54                         m_flash_erase@t32 0064  
                               ?_rtc_set 0060                   __end_of_key_process_up 75D6  
                    __size_of_ticker_dly 0036                         ___lwdiv@quotient 0067  
                   ads1115_init@pAds1115 0060                                 _LCDDATA0 000FBB  
                               _LCDDATA1 000FBC                                 _LCDDATA2 000FBD  
                               _LCDDATA3 000FBE                                 _LCDDATA4 000FBF  
                               _LCDDATA5 000F6B                                 _LCDDATA6 000F6C  
                               _LCDDATA7 000F6D                                 _LCDDATA8 000F6E  
                               _LCDDATA9 000F6F                    lcd_set_com_seg@offset 006E  
                    __end_of_key_polling 6EFA                      __end_of_key_process 6760  
                     lcd_set_com_seg@com 006D                          _sys_ticker_init 78DA  
                     lcd_set_com_seg@seg 0068                                _sampBufPr 01D2  
                        ___aldiv@divisor 0064               __size_of_ads1115_write_reg 0100  
               __end_of_defultSystemData FFA3             key_adj_value_fixed_point@t16 0073  
                             ?_cal_press 0001             key_shift_loc_fixed_point@max 0063  
           key_shift_loc_fixed_point@loc 0060             key_shift_loc_fixed_point@min 0062  
                       m_flash_read@addr 0060                          ___aldiv@counter 0068  
           key_adj_value_fixed_point@loc 0070                           ___wmul@product 0066  
                            _lcd_bl_init 794C                                delay_us@i 0062  
                      _iic_received_byte 6BF2                           m_mem_cpy_len@d 0060  
                         m_mem_cpy_len@s 0062                                 _IPR1bits 000F9F  
                               _PIE1bits 000F9D                                 _IPR3bits 000FA5  
                               _PIE3bits 000FA3               ?_key_adj_value_fixed_point 006E  
       __end_of_sample_diff_pr_chip_fast 4F52         __end_of___enter_menu_set_density 7502  
       __end_of_sample_diff_pr_chip_slow 4BE8                              _dlyTickerEn 002D  
                _cal_diff_hight_to_vol_h 2B20                  _cal_diff_hight_to_vol_v 00DC  
                     ?_iic_received_byte 0001                                 _PIR1bits 000F9E  
                ?_event_process_time_out 0001                                 _PIR3bits 000FA4  
                     cal_diff_p_to_h@xin 00C2                        ?_ads1115_read_reg 0064  
                       crc_sum@usDataLen 0062                                 _RCONbits 000FD0  
                       __CFG_WDTPS$32768 000000                  __end_of_ads1115_set_mux 783E  
                   _in_pt100SampleUpdate 0033                              _lcd_show_dp 6AB0  
                     ??_ads1115_read_reg 0067                              _in_adc_init 77F6  
                  ___int32_2_mflot32@t32 0075                   ?_ui_disp_adj_xfixed_pt 0076  
               sample_diff_pr_fliter@xin 0083                          ??_data_init_all 0021  
                           ??_crc_append 0070                      ??_iic_received_byte 0020  
                 ui_disp_adj_xfixed_pt@x 0078      __size_of___enter_menu_set_base_zero 0054  
            ??_calib_data_set_default_pr 0068                   __end_of_cal_diff_press 5064  
                        m_int8_2_hex@str 0060                             _rtExPressure 012B  
                             ?_iic_start 0001                               _ADCON0bits 000FC2  
                             _ADCON2bits 000FC0                        ___wmul@multiplier 0062  
                          _pAds1115PrObj 0021                        ?_lcd_disp_refresh 0001  
                __size_of_m_flash_unlock 001A                             ??_crc_verify 0070  
                             ?_m_mem_cpy 0060                ??_cal_additional_pressute 00C2  
                       m_int16_2_str_4@x 006A                               rtc_set@rtc 0060  
                             rtc_set@stp 0062                             ??_lcd_config 0020  
                     _calib_data_init_pr 547E                       ??_lcd_disp_refresh 0020  
                          _fastSampTimer 0170                  __end_of_m_int16_2_str_4 4A94  
                        ?_key_process_up 0001                                 _HexTable FBD4  
        ads1115_read_conversion@pAds1115 006A                        ___lmul@multiplier 006E  
                            _INTCON2bits 000FF1                         crc_verify@crccal 0072  
                              copy_data0 5D9A                                copy_data1 5DBA  
                  __size_of_ads1115_init 00A4                      ?_calib_data_init_pr 0001  
                at24c02_read_n_byte@addr 0066                          ??_data_sys_init 0021  
                  ui_disp_start_cs600@t8 007D                __end_of_iic_received_byte 6C5C  
                       m_flash_write@t16 0081                       __end_of_crc_append 6CC0  
                       m_flash_write@buf 0072                         m_flash_write@len 0074  
                      _rtc_alrm_irq_hook 7952                               _EECON1bits 000FA6  
         __end_of_event_process_time_out 7906                       cal_diff_press@tmpx 02B4  
                  __end_of_event_process 75A2                                 __Hrparam 0000  
            __end_of_sample_pr_chip_comm 4370                  m_interp1_float_fast@len 00CA  
                m_interp1_float_fast@tab 00C4                       __end_of_crc_verify 6658  
                        lcd_show_dp@show 0070                       ?_rtc_alrm_irq_hook 0001  
                        lcd_show_chr@chr 0070                          lcd_show_chr@loc 0071  
                    key_waite_release@t8 0020                   lcd_disp_level_bar@show 0020  
                               __Lrparam 0000                           _rtDiffPressure 0166  
                        _sampBufPt100ExA 01E2                          _sampBufPt100ExB 01DA  
                        _sampBufBatInSoc 0174                       __end_of_lcd_config 7758  
                  __size_of_ui_disp_menu 0024                     event_process_rtc@ret 01FF  
                 __size_of_lcd_disp_logo 0030                     ??_calib_data_init_pr 0021  
                       __size_of___aldiv 011A                         __size_of___fladd 04A8  
                       __size_of___fldiv 03C0                         __size_of___awdiv 00BE  
                         _lcd_disp_level 7064                         __size_of___flneg 0038  
                       __size_of___awmod 00A2                         __size_of___flmul 04A6  
                       __size_of___fltol 010C                         __size_of___lldiv 00BC  
                               ___exp_10 6EFA                         __size_of___lwdiv 0078  
                    ??_rtc_alrm_irq_hook 000F                         __size_of___lwmod 0062  
               __end_of_key_process_down 73EA                                 _adc_iRef 017E  
                        _lcd_set_com_seg 5850                                 _adc_ibat 0180  
                           _ads1115Chip0 018C                             _ads1115Chip1 02A2  
                        ?_cal_diff_press 0001                                 _adjValue 0146  
         __size_of___enter_menu_set_pose 0030            __size_of_sample_in_soc_adc_ch 0222  
                   _ui_disp_menu_psw_adj 785E                       _diffPrSampleUpdate 0034  
          __end_of___enter_menu_set_pose 769A                                 _calibCol 018A  
                       __size_of_crc_sum 009E                                 _calibRow 018B  
                           _ads1115_init 5E32                           key_process@key 0089  
                               ___xxtofl 3AD4                 _ads1115_start_conversion 7782  
                            _key_polling 6E9E                  __end_of_sys_ticker_init 78EA  
                            _key_process 66DE                            crc_append@crc 0072  
       __end_of_cal_pt100_temperature_in 306A         __end_of_cal_pt100_temperature_ex 2B20  
                               _delay_ms 77AC                                 _delay_us 7426  
                 __size_of_iic_send_byte 006C                                 _glTicker 013A  
                        ___lwdiv@divisor 0064                                 _glbEvent 002F  
                        _sampBufRefInSoc 0172                          _rtTemperatureIn 0156  
                        ___lwdiv@counter 0066              __end_of_sys_ticker_irq_hook 78B0  
                               __ptext10 78DA                                 __ptext11 72F6  
                               __ptext20 66DE                                 __ptext12 5C18  
                               __ptext21 7372                                 __ptext13 7930  
                               __ptext30 766A                                 __ptext22 6E9E  
                               __ptext14 793C                                 __ptext31 74CC  
                               __ptext23 75A2                                 __ptext15 78EA  
                               __ptext40 4E3A                                 __ptext32 70BC  
                               __ptext24 5766                                 __ptext16 772A  
                               __ptext41 6658                                 __ptext33 5278  
                               __ptext25 6CC0                                 __ptext17 763A  
                               __ptext50 61DC                                 __ptext42 77D2  
                               __ptext34 5B5C                                 __ptext26 6954  
                               __ptext18 794C                                 __ptext51 626C  
                               __ptext43 785E                                 __ptext35 7758  
                               __ptext27 6EFA                                 __ptext19 756E  
                               __ptext60 76FA                                 __ptext52 62FC  
                               __ptext44 5CD0                                 __ptext36 73AE  
                               __ptext28 7950                                 __ptext61 5850  
                               __ptext53 638C                                 __ptext45 6FB0  
                               __ptext37 75D6                                 __ptext29 59E0  
                               __ptext70 6B88                                 __ptext62 7232  
                               __ptext54 641C                                 __ptext46 6A42  
                               __ptext38 78F8                                 __ptext71 77F6  
                               __ptext63 4936                                 __ptext55 64AC  
                               __ptext47 60B4                                 __ptext39 7906  
                               __ptext80 71A8                                 __ptext72 4A94  
                               __ptext64 5ED6                                 __ptext56 653C  
                               __ptext48 6D84                                 __ptext81 3E66  
                               __ptext73 6760                                 __ptext65 5A9E  
                               __ptext57 6AB0                                 __ptext49 614C  
                               __ptext90 4D20                                 __ptext82 4500  
                               __ptext74 306A                                 __ptext66 6D22  
                               __ptext58 769A                                 __ptext91 5676  
                               __ptext83 2DCE                                 __ptext75 77AC  
                               __ptext67 6DE2                                 __ptext59 76CA  
                               __ptext92 00DC                                 __ptext84 2850  
                               __ptext76 7426                                 __ptext68 41DA  
                               __ptext93 2B20                                 __ptext85 685C  
                               __ptext77 7782                                 __ptext69 32C8  
                               __ptext94 2068                                 __ptext86 4F52  
                               __ptext78 537E                                 __ptext95 4370  
                               __ptext87 086E                                 __ptext79 781A  
                               __ptext96 36EE                                 __ptext88 1BCE  
                               __ptext97 745E                                 __ptext89 69CC  
                               __ptext98 1280                                 __ptext99 7914  
                      ??___x_sample_fifo 0073                         _inSocSampleTimer 0030  
                       __size_of_rtc_set 00B8                                 _lcd_init 78EA  
                  _in_adc_start_and_read 6B88                                 _iic_stop 73EA  
           __end_of_m_interp1_float_fast 2490                   __size_of_iic_waite_ack 005E  
              _calib_data_set_default_pr 3CA2                          cal_diff_press@i 02CE  
                               _keyValue 00FE                __end_of_rtc_alrm_irq_hook 7954  
                            ??_cal_press 0020                            __size_of_main 003E  
              ??_cal_diff_hight_to_vol_h 0020                             _ui_disp_menu 77D2  
              ??_cal_diff_hight_to_vol_v 0020                          crc_sum@uchCRCHi 006A  
                        crc_sum@uchCRCLo 006B          __end_of_cal_additional_pressute 38EA  
                        m_flash_read@t32 006A                                 _passWord 0039  
                        m_flash_read@buf 0064                          m_flash_read@len 0066  
       __size_of_handler_interrupt_hight 59D8                             ??_ticker_dly 0020  
        ?_calib_data_set_default_diff_pr 0001         ??_calib_data_set_default_diff_pr 0068  
                               _rtWeight 015E            __size_of_key_process_set_long 0002  
                               _soc_init 78CA                             ticker_dly@ms 0060  
             ??_iic_received_byte_if_ack 0021                    m_interp1_cal_p_t@tmpx 007A  
                               _rtVolume 015A                   __end_of_lcd_disp_level 70BC  
                  m_interp1_cal_p_v@xout 007E                                 _rtc_init 72F6  
                 ads1115_write_reg@value 0065                   __size_of_m_flash_erase 005A  
                               int$flags 0040                 ?_calib_data_init_diff_pr 0001  
                       ?_ads1115_set_mux 0060                          _lcd_show_string 6A42  
         __size_ofi2_sys_ticker_irq_hook 001A            __end_ofi2_sys_ticker_irq_hook 78CA  
                 __size_of_m_flash_write 0138                 ?_ads1115_read_conversion 006A  
                      _commonSampleTimer 0031                    ?_ui_disp_menu_psw_adj 0001  
                            ??_iic_start 0020            __size_of_at24c02_write_n_byte 0108  
                            delay_ms@dly 0064                      ads1115_init@slvaddr 0062  
                            ??_m_mem_cpy 0020                   at24c02_read_n_byte@buf 0067  
                 at24c02_read_n_byte@len 0069                              delay_us@dly 0060  
                           _x_prDiffData 01EA                               _INTCONbits 000FF2  
      __size_of_sample_diff_pr_chip_fast 0118       __end_of___enter_menu_set_base_zero 7110  
             ___enter_menu_set_base_zero 70BC                 __size_of_key_process_set 002A  
      __size_of___enter_menu_set_density 0036                ?_sample_diff_pr_chip_fast 0001  
      __size_of_sample_diff_pr_chip_slow 0154                         m_mem_cpy_len@len 0064  
                  lcd_disp_level_bar@bar 0071                ?___enter_menu_set_density 0001  
              ?_sample_diff_pr_chip_slow 0001                     iic_waite_ack@timeout 0020  
                         _prSampleUpdate 0188                    __CFG_RTCSOSC$T1OSCREF 000000  
                       ?_m_int16_2_str_4 0068                            key_polling@t8 0067  
            __end_ofi2_rtc_alrm_irq_hook 7956                            _lcd_disp_logo 760A  
                      _rtExTemperatureIn 014E                       __end_of_ticker_dly 74CC  
                               intlevel1 0000                                 intlevel2 0000  
                    _at24c02_read_n_byte 4022                     ads1115_read_reg@addr 0066  
                          key_process@tm 0087                cal_additional_pressute@f1 00C5  
             __size_of_iic_received_byte 006A                cal_additional_pressute@f2 00C9  
                        ___x_arrange_str 6DE2                         ___lwmod@dividend 0069  
                        _slowSampleTimer 0032               ?_key_process_set_down_long 0001  
                       ___lldiv@dividend 0060           __size_of_handler_interrupt_low 00C0  
                ??_sample_diff_pr_fliter 0020            __end_of_handler_interrupt_low 00D8  
                             _OSCCONbits 000FD3                            _iic_send_byte 6B1C  
                  ads1115_write_reg@addr 0064                  __end_of_lcd_set_com_seg 5918  
                         crc_sum@puchMsg 0060                          ?_lcd_disp_level 0001  
                      _diffSampCount_D01 0037                        _diffSampCount_D23 0036  
                          _iic_waite_ack 6E40                     ?_at24c02_read_n_byte 0064  
                     _lcd_disp_chr_loc_0 653C                       _lcd_disp_chr_loc_1 64AC  
                     _lcd_disp_chr_loc_2 641C                       _lcd_disp_chr_loc_3 638C  
                     _lcd_disp_chr_loc_4 62FC                       _lcd_disp_chr_loc_5 626C  
                     _lcd_disp_chr_loc_6 61DC                       _lcd_disp_chr_loc_7 614C  
           __end_of_event_process_ticker 7914                   __size_of_m_mem_cpy_len 004E  
         __size_of_ads1115_init_all_chip 0036            __end_of_ads1115_init_all_chip 756E  
                         _m_flash_unlock 787C          __end_of_cal_diff_hight_to_vol_h 2DCE  
        __end_of_cal_diff_hight_to_vol_v 086E                 m_interp1_cal_p_t@tmpxLen 007E  
                             _RTCCFGbits 000F5F                      ads1115_read_reg@t16 0068  
                            crc_append@n 006E                         ___lldiv@quotient 0068  
                        ___lwmod@divisor 006B                            crc_sum@uIndex 0068  
                ___int32_2_mflot32@F7620 0142                          ___lwmod@counter 006D  
                    ?_lcd_disp_chr_loc_0 0001                      ?_lcd_disp_chr_loc_1 0001  
                    ?_lcd_disp_chr_loc_2 0001                      ?_lcd_disp_chr_loc_3 0001  
                    ?_lcd_disp_chr_loc_4 0001                      ?_lcd_disp_chr_loc_5 0001  
                    ?_lcd_disp_chr_loc_6 0001                      ?_lcd_disp_chr_loc_7 0001  
                       ?_sys_ticker_init 0001                 __size_of_data_sys_cal_v1 0204  
               __size_of_data_sys_cal_v2 0164                             ___aldiv@sign 0069  
                         ?_lcd_disp_logo 0001                   ?_in_adc_start_and_read 0064  
                          _m_flash_erase 700A                            ___fladd@signs 00B4  
                          _m_flash_write 4BE8               __size_of_rtc_alrm_irq_hook 0002  
                          ?_lcd_disp_all 0001                             ___fladd@aexp 00B5  
                           ___fladd@bexp 00B6                       _lcd_disp_level_bar 0DAE  
               __size_of_cal_diff_p_to_h 00F0                             ?_lcd_bl_init 0001  
               ui_disp_adj_xfixed_pt@buf 007D                 ui_disp_adj_xfixed_pt@loc 007A  
                __end_of_lcd_show_string 6AB0                 ui_disp_adj_xfixed_pt@str 0076  
                     _lcd_show_string_l0 71EE                       _lcd_show_string_l1 7276  
                            crc_verify@n 006E            __size_of_ui_disp_clear_num_dp 005A  
            __end_of_ui_disp_start_cs600 6016                     ??_lcd_disp_chr_loc_0 0020  
                   ??_lcd_disp_chr_loc_1 0020                     ??_lcd_disp_chr_loc_2 0020  
                   ??_lcd_disp_chr_loc_3 0020                     ??_lcd_disp_chr_loc_4 0020  
                   ??_lcd_disp_chr_loc_5 0020                     ??_lcd_disp_chr_loc_6 0020  
                   ??_lcd_disp_chr_loc_7 0020                           ?_iic_send_byte 0001  
            ??_key_adj_value_fixed_point 0021                            ?_iic_send_ack 0001  
        __end_of_ads1115_read_conversion 71EE        __size_of_cal_pt100_temperature_in 029C  
      __size_of_cal_pt100_temperature_ex 02D0                  ??_ui_disp_adj_xfixed_pt 007B  
                    ?_lcd_disp_level_bar 0020                ?_cal_pt100_temperature_in 0001  
              ?_cal_pt100_temperature_ex 0001  
